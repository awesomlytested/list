{"repo":"pmndrs/react-spring","url":"https://github.com/pmndrs/react-spring","branch":"master","configs":[{"package":"react-spring--root","lang":"js","dir":"cypress","framework":"jest","pattern":"**/*[._-]{test,spec,unittest,unit}.{ts,js}"},{"package":"@react-spring/core","lang":"ts","dir":"packages/core/test","framework":"jest","pattern":"**/*.{js,ts}"},{"package":"@react-spring/parallax","lang":"ts","dir":"packages/parallax/test","framework":"jest","pattern":"**/*.{js,ts}"}],"tests":[{"name":"should translate layers as expected","suites":["Parallax - vertical"],"updatePoint":{"line":7,"column":41,"index":216},"line":7,"code":"  it('should translate layers as expected', () => {\n    // intial snapshot\n    cy.findByTestId('container').toMatchSnapshot(); // initial layer positions\n\n    cy.findByTestId('default-layer').then(layer => layer[0].style.transform).then(transform => expect(transform).to.equal(`translate3d(0px, ${HEIGHT * 2}px, 0px)`));\n    cy.findByTestId('opposite-layer').then(layer => layer[0].style.transform).then(transform => expect(transform).to.equal(`translate3d(${HEIGHT * 2}px, 0px, 0px)`));\n    cy.findByTestId('sticky-layer').should('have.css', 'position', 'absolute').then(layer => layer[0].style.transform).then(transform => expect(transform).to.equal(`translate3d(0px, ${HEIGHT}px, 0px)`)); // scroll to next page\n\n    cy.findByTestId('container').scrollTo(0, HEIGHT); // wait for animation to finish\n\n    cy.wait(ANIMATION_WAIT); // halfway snapshot\n\n    cy.findByTestId('container').toMatchSnapshot(); // halfway layer positions\n\n    cy.findByTestId('default-layer').then(layer => layer[0].style.transform).then(transform => expect(transform).to.equal(`translate3d(0px, ${HEIGHT}px, 0px)`));\n    cy.findByTestId('opposite-layer').then(layer => layer[0].style.transform).then(transform => expect(transform).to.equal(`translate3d(${HEIGHT}px, 0px, 0px)`));\n    cy.findByTestId('sticky-layer').should('have.css', 'position', 'sticky').then(layer => layer[0].style.transform).then(transform => expect(transform).to.equal(`translate3d(0px, 0px, 0px)`)); // scroll to last page\n\n    cy.findByTestId('container').scrollTo('bottom'); // wait for animation again\n\n    cy.wait(ANIMATION_WAIT); // final snapshot\n\n    cy.findByTestId('container').toMatchSnapshot(); // final layer positions\n\n    cy.findAllByTestId(/-layer/).each(layer => expect(layer[0].style.transform).to.equal('translate3d(0px, 0px, 0px)'));\n    cy.findByTestId('sticky-layer').should('have.css', 'position', 'sticky');\n  });","file":"integration/parallax.spec.js","skipped":false,"dir":"cypress"},{"name":"should scroll to the correct page with scrollTo","suites":["Parallax - vertical"],"updatePoint":{"line":34,"column":53,"index":2117},"line":34,"code":"  it('should scroll to the correct page with scrollTo', () => {\n    cy.findByRole('button').click();\n    cy.findByTestId('container').invoke('scrollTop').should('equal', HEIGHT);\n  });","file":"integration/parallax.spec.js","skipped":false,"dir":"cypress"},{"name":"should translate layers as expected","suites":["Parallax - horizontal"],"updatePoint":{"line":44,"column":41,"index":2441},"line":44,"code":"  it('should translate layers as expected', () => {\n    // intial snapshot\n    cy.findByTestId('container').toMatchSnapshot(); // initial layer positions\n\n    cy.findByTestId('default-layer').then(layer => layer[0].style.transform).then(transform => expect(transform).to.equal(`translate3d(${WIDTH * 2}px, 0px, 0px)`));\n    cy.findByTestId('opposite-layer').then(layer => layer[0].style.transform).then(transform => expect(transform).to.equal(`translate3d(0px, ${WIDTH * 2}px, 0px)`));\n    cy.findByTestId('sticky-layer').should('have.css', 'position', 'absolute').then(layer => layer[0].style.transform).then(transform => expect(transform).to.equal(`translate3d(${WIDTH}px, 0px, 0px)`)); // scroll to next page\n\n    cy.findByTestId('container').scrollTo(WIDTH, 0); // wait for animation to finish\n\n    cy.wait(ANIMATION_WAIT); // halfway snapshot\n\n    cy.findByTestId('container').toMatchSnapshot(); // halfway layer positions\n\n    cy.findByTestId('default-layer').then(layer => layer[0].style.transform).then(transform => expect(transform).to.equal(`translate3d(${WIDTH}px, 0px, 0px)`));\n    cy.findByTestId('opposite-layer').then(layer => layer[0].style.transform).then(transform => expect(transform).to.equal(`translate3d(0px, ${WIDTH}px, 0px)`));\n    cy.findByTestId('sticky-layer').should('have.css', 'position', 'sticky').then(layer => layer[0].style.transform).then(transform => expect(transform).to.equal(`translate3d(0px, 0px, 0px)`)); // a possible bug in cypress causes this to fail with `yarn cypress` (`cypress open`)\n    // but will pass with `yarn test` (`cypress run`)\n\n    cy.findByTestId('container').scrollTo('right'); // wait for animation again\n\n    cy.wait(ANIMATION_WAIT); // final snapshot\n\n    cy.findByTestId('container').toMatchSnapshot(); // final layer positions\n\n    cy.findAllByTestId(/-layer/).each(layer => expect(layer[0].style.transform).to.equal('translate3d(0px, 0px, 0px)'));\n    cy.findByTestId('sticky-layer').should('have.css', 'position', 'sticky');\n  });","file":"integration/parallax.spec.js","skipped":false,"dir":"cypress"},{"name":"should scroll to the correct page with scrollTo","suites":["Parallax - horizontal"],"updatePoint":{"line":72,"column":53,"index":4452},"line":72,"code":"  it('should scroll to the correct page with scrollTo', () => {\n    cy.findByRole('button').click();\n    cy.findByTestId('container').invoke('scrollLeft').should('equal', WIDTH);\n  });","file":"integration/parallax.spec.js","skipped":false,"dir":"cypress"}]}