{"repo":"adobe-webplatform/Snap.svg","url":"https://github.com/adobe-webplatform/Snap.svg","branch":"master","configs":[{"package":"snapsvg","lang":"js","dir":"test","framework":"mocha","pattern":"**/*.{js,ts}"}],"tests":[{"name":"+=10","suites":["Attributes += methods"],"updatePoint":{"line":10,"column":10},"line":10,"code":"  it(\"+=10\", function () {\n    r.attr({\n      x: \"+=10\"\n    });\n    expect(r.node.getAttribute(\"x\")).to.be(\"20\");\n  });","file":"attradd.js","skipped":false,"dir":"test"},{"name":"-=10","suites":["Attributes += methods"],"updatePoint":{"line":16,"column":10},"line":16,"code":"  it(\"-=10\", function () {\n    r.attr({\n      x: \"-=10\"\n    });\n    expect(r.node.getAttribute(\"x\")).to.be(\"0\");\n  });","file":"attradd.js","skipped":false,"dir":"test"},{"name":"*=2","suites":["Attributes += methods"],"updatePoint":{"line":22,"column":9},"line":22,"code":"  it(\"*=2\", function () {\n    r.attr({\n      x: \"*=2\"\n    });\n    expect(r.node.getAttribute(\"x\")).to.be(\"20\");\n  });","file":"attradd.js","skipped":false,"dir":"test"},{"name":"/=2","suites":["Attributes += methods"],"updatePoint":{"line":28,"column":9},"line":28,"code":"  it(\"/=2\", function () {\n    r.attr({\n      x: \"/=2\"\n    });\n    expect(r.node.getAttribute(\"x\")).to.be(\"5\");\n  });","file":"attradd.js","skipped":false,"dir":"test"},{"name":"+=1em","suites":["Attributes += methods"],"updatePoint":{"line":34,"column":11},"line":34,"code":"  it(\"+=1em\", function () {\n    var em = s.rect(0, 0, \"1em\", \"1em\");\n    em = em.getBBox().w;\n    r.attr({\n      x: \"+=1em\"\n    });\n    expect(r.node.getAttribute(\"x\")).to.eql(10 + em);\n  });","file":"attradd.js","skipped":false,"dir":"test"},{"name":"-=.3em","suites":["Attributes += methods"],"updatePoint":{"line":42,"column":12},"line":42,"code":"  it(\"-=.3em\", function () {\n    var em = s.rect(0, 0, \"1em\", \"1em\");\n    em = em.getBBox().w;\n    r.attr({\n      x: \"-=.3em\"\n    });\n    expect((+r.node.getAttribute(\"x\")).toFixed(2)).to.eql((10 - em * .3).toFixed(2));\n  });","file":"attradd.js","skipped":false,"dir":"test"},{"name":"sets fill","suites":["Attributes"],"updatePoint":{"line":70,"column":15},"line":70,"code":"  it(\"sets fill\", colorTestProp(\"fill\"));","file":"attrs.js","skipped":false,"dir":"test"},{"name":"sets stroke","suites":["Attributes"],"updatePoint":{"line":71,"column":17},"line":71,"code":"  it(\"sets stroke\", colorTestStyle(\"stroke\"));","file":"attrs.js","skipped":false,"dir":"test"},{"name":"circle core attributes","suites":["Attributes"],"updatePoint":{"line":72,"column":28},"line":72,"code":"  it(\"circle core attributes\", function () {\n    var c = s.circle(10, 20, 30);\n    expect(c.node.getAttribute(\"cx\")).to.be(\"10\");\n    expect(c.node.getAttribute(\"cy\")).to.be(\"20\");\n    expect(c.node.getAttribute(\"r\")).to.be(\"30\");\n    c.attr({\n      cx: 40,\n      cy: 50,\n      r: \"5%\"\n    });\n    expect(c.node.getAttribute(\"cx\")).to.be(\"40\");\n    expect(c.node.getAttribute(\"cy\")).to.be(\"50\");\n    expect(c.node.getAttribute(\"r\")).to.be(\"5%\");\n  });","file":"attrs.js","skipped":false,"dir":"test"},{"name":"rect core attributes","suites":["Attributes"],"updatePoint":{"line":86,"column":26},"line":86,"code":"  it(\"rect core attributes\", function () {\n    var c = s.rect(10, 20, 30, 40);\n    expect(c.node.getAttribute(\"x\")).to.be(\"10\");\n    expect(c.node.getAttribute(\"y\")).to.be(\"20\");\n    expect(c.node.getAttribute(\"width\")).to.be(\"30\");\n    expect(c.node.getAttribute(\"height\")).to.be(\"40\");\n    c.attr({\n      x: 40,\n      y: 50,\n      width: \"5%\",\n      height: \"6%\",\n      r: 10\n    });\n    expect(c.node.getAttribute(\"x\")).to.be(\"40\");\n    expect(c.node.getAttribute(\"y\")).to.be(\"50\");\n    expect(c.node.getAttribute(\"width\")).to.be(\"5%\");\n    expect(c.node.getAttribute(\"height\")).to.be(\"6%\");\n    expect(c.node.getAttribute(\"rx\")).to.be(\"10\");\n    expect(c.node.getAttribute(\"ry\")).to.be(\"10\");\n  });","file":"attrs.js","skipped":false,"dir":"test"},{"name":"ellipse core attributes","suites":["Attributes"],"updatePoint":{"line":106,"column":29},"line":106,"code":"  it(\"ellipse core attributes\", function () {\n    var c = s.ellipse(10, 20, 30, 40);\n    expect(c.node.getAttribute(\"cx\")).to.be(\"10\");\n    expect(c.node.getAttribute(\"cy\")).to.be(\"20\");\n    expect(c.node.getAttribute(\"rx\")).to.be(\"30\");\n    expect(c.node.getAttribute(\"ry\")).to.be(\"40\");\n    c.attr({\n      cx: 40,\n      cy: 50,\n      rx: \"5%\",\n      ry: \"6%\"\n    });\n    expect(c.node.getAttribute(\"cx\")).to.be(\"40\");\n    expect(c.node.getAttribute(\"cy\")).to.be(\"50\");\n    expect(c.node.getAttribute(\"rx\")).to.be(\"5%\");\n    expect(c.node.getAttribute(\"ry\")).to.be(\"6%\");\n  });","file":"attrs.js","skipped":false,"dir":"test"},{"name":"path core attributes","suites":["Attributes"],"updatePoint":{"line":123,"column":26},"line":123,"code":"  it(\"path core attributes\", function () {\n    var c = s.path(\"M10,10 110,10\");\n    expect(c.node.getAttribute(\"d\")).to.be(\"M10,10 110,10\");\n    c.attr({\n      d: \"M10,10 210,10\"\n    });\n    expect(c.node.getAttribute(\"d\")).to.be(\"M10,10 210,10\");\n    c.attr({\n      path: \"M10,10 310,10\"\n    });\n    expect(c.node.getAttribute(\"d\")).to.be(\"M10,10 310,10\");\n  });","file":"attrs.js","skipped":false,"dir":"test"},{"name":"text core attributes","suites":["Attributes"],"updatePoint":{"line":135,"column":26},"line":135,"code":"  it(\"text core attributes\", function () {\n    var c = s.text(10, 15, \"testing\");\n    expect(c.node.getAttribute(\"x\")).to.be(\"10\");\n    expect(c.node.getAttribute(\"y\")).to.be(\"15\");\n    expect(c.node.textContent).to.be(\"testing\");\n    c.attr({\n      x: 20,\n      y: 25,\n      text: \"texting\"\n    });\n    expect(c.node.getAttribute(\"x\")).to.be(\"20\");\n    expect(c.node.getAttribute(\"y\")).to.be(\"25\");\n    expect(c.node.textContent).to.be(\"texting\");\n  });","file":"attrs.js","skipped":false,"dir":"test"},{"name":"line core attributes","suites":["Attributes"],"updatePoint":{"line":149,"column":26},"line":149,"code":"  it(\"line core attributes\", function () {\n    var c = s.line(10, 15, 110, 17);\n    expect(c.node.getAttribute(\"x1\")).to.be(\"10\");\n    expect(c.node.getAttribute(\"y1\")).to.be(\"15\");\n    expect(c.node.getAttribute(\"x2\")).to.be(\"110\");\n    expect(c.node.getAttribute(\"y2\")).to.be(\"17\");\n    c.attr({\n      x1: 20,\n      y1: 25,\n      x2: 220,\n      y2: 27\n    });\n    expect(c.node.getAttribute(\"x1\")).to.be(\"20\");\n    expect(c.node.getAttribute(\"y1\")).to.be(\"25\");\n    expect(c.node.getAttribute(\"x2\")).to.be(\"220\");\n    expect(c.node.getAttribute(\"y2\")).to.be(\"27\");\n  });","file":"attrs.js","skipped":false,"dir":"test"},{"name":"polyline core attributes","suites":["Attributes"],"updatePoint":{"line":166,"column":30},"line":166,"code":"  it(\"polyline core attributes\", function () {\n    var c = s.polyline(10, 15, 20, 25, 30, 35);\n    expect(c.node.getAttribute(\"points\")).to.be(\"10,15,20,25,30,35\");\n    c.attr({\n      points: [20, 25, 30, 35, 40, 45]\n    });\n    expect(c.node.getAttribute(\"points\")).to.be(\"20,25,30,35,40,45\");\n  });","file":"attrs.js","skipped":false,"dir":"test"},{"name":"polygon core attributes","suites":["Attributes"],"updatePoint":{"line":174,"column":29},"line":174,"code":"  it(\"polygon core attributes\", function () {\n    var c = s.polygon(10, 15, 20, 25, 30, 35);\n    expect(c.node.getAttribute(\"points\")).to.be(\"10,15,20,25,30,35\");\n    c.attr({\n      points: [20, 25, 30, 35, 40, 45]\n    });\n    expect(c.node.getAttribute(\"points\")).to.be(\"20,25,30,35,40,45\");\n  });","file":"attrs.js","skipped":false,"dir":"test"},{"name":"elproto.addClass one","suites":["Class methods"],"updatePoint":{"line":10,"column":26},"line":10,"code":"  it(\"elproto.addClass one\", function () {\n    r.addClass(\"one\");\n    expect(r.node.className.baseVal).to.be(\"one\");\n  });","file":"class.js","skipped":false,"dir":"test"},{"name":"elproto.addClass two","suites":["Class methods"],"updatePoint":{"line":14,"column":26},"line":14,"code":"  it(\"elproto.addClass two\", function () {\n    r.addClass(\"one two\");\n    expect(r.node.className.baseVal).to.be(\"one two\");\n  });","file":"class.js","skipped":false,"dir":"test"},{"name":"elproto.addClass two (spacing)","suites":["Class methods"],"updatePoint":{"line":18,"column":36},"line":18,"code":"  it(\"elproto.addClass two (spacing)\", function () {\n    r.addClass(\"\\tone   two \");\n    expect(r.node.className.baseVal).to.be(\"one two\");\n  });","file":"class.js","skipped":false,"dir":"test"},{"name":"elproto.addClass three","suites":["Class methods"],"updatePoint":{"line":22,"column":28},"line":22,"code":"  it(\"elproto.addClass three\", function () {\n    r.addClass(\"one  two three\");\n    expect(r.node.className.baseVal).to.be(\"one two three\");\n  });","file":"class.js","skipped":false,"dir":"test"},{"name":"elproto.removeClass 1","suites":["Class methods"],"updatePoint":{"line":26,"column":27},"line":26,"code":"  it(\"elproto.removeClass 1\", function () {\n    r.addClass(\"one  two three\");\n    r.removeClass(\"two\");\n    expect(r.node.className.baseVal).to.be(\"one three\");\n  });","file":"class.js","skipped":false,"dir":"test"},{"name":"elproto.removeClass 2","suites":["Class methods"],"updatePoint":{"line":31,"column":27},"line":31,"code":"  it(\"elproto.removeClass 2\", function () {\n    r.addClass(\"one  two three\");\n    r.removeClass(\"two one\");\n    expect(r.node.className.baseVal).to.be(\"three\");\n  });","file":"class.js","skipped":false,"dir":"test"},{"name":"elproto.hasClass","suites":["Class methods"],"updatePoint":{"line":36,"column":22},"line":36,"code":"  it(\"elproto.hasClass\", function () {\n    r.addClass(\"one  two three\");\n    expect(r.hasClass(\"two\")).to.be(true);\n  });","file":"class.js","skipped":false,"dir":"test"},{"name":"elproto.toggleClass 1","suites":["Class methods"],"updatePoint":{"line":40,"column":27},"line":40,"code":"  it(\"elproto.toggleClass 1\", function () {\n    r.addClass(\"one  two three\");\n    r.toggleClass(\"two one\");\n    expect(r.node.className.baseVal).to.be(\"three\");\n  });","file":"class.js","skipped":false,"dir":"test"},{"name":"elproto.toggleClass 2","suites":["Class methods"],"updatePoint":{"line":45,"column":27},"line":45,"code":"  it(\"elproto.toggleClass 2\", function () {\n    r.addClass(\"one  three\");\n    r.toggleClass(\"two one\", false);\n    expect(r.node.className.baseVal).to.be(\"three\");\n  });","file":"class.js","skipped":false,"dir":"test"},{"name":"elproto.toggleClass 3","suites":["Class methods"],"updatePoint":{"line":50,"column":27},"line":50,"code":"  it(\"elproto.toggleClass 3\", function () {\n    r.addClass(\"one three\");\n    r.toggleClass(\"two one\", true);\n    expect(r.node.className.baseVal).to.be(\"one three two\");\n  });","file":"class.js","skipped":false,"dir":"test"},{"name":"parses hex colour","suites":["Colours"],"updatePoint":{"line":2,"column":23},"line":2,"code":"  it(\"parses hex colour\", function () {\n    expect(Snap.color(\"#fC0\").hex).to.be(\"#ffcc00\");\n  });","file":"colors.js","skipped":false,"dir":"test"},{"name":"parses RGB","suites":["Colours"],"updatePoint":{"line":5,"column":16},"line":5,"code":"  it(\"parses RGB\", function () {\n    var c = Snap.color(\"rgb(255, 204, 0)\");\n    expect(c.hex).to.be(\"#ffcc00\");\n    expect(c.r).to.be(255);\n    expect(c.g).to.be(204);\n    expect(c.b).to.be(0);\n  });","file":"colors.js","skipped":false,"dir":"test"},{"name":"parses RGB - %","suites":["Colours"],"updatePoint":{"line":12,"column":20},"line":12,"code":"  it(\"parses RGB - %\", function () {\n    var c = Snap.color(\"rgb(100%, 80%, 0%)\");\n    expect(c.hex).to.be(\"#ffcc00\");\n    expect(c.r).to.be(255);\n    expect(c.g).to.be(204);\n    expect(c.b).to.be(0);\n  });","file":"colors.js","skipped":false,"dir":"test"},{"name":"parses HSL","suites":["Colours"],"updatePoint":{"line":19,"column":16},"line":19,"code":"  it(\"parses HSL\", function () {\n    var c = Snap.color(\"hsl(0.1333, 1, .5)\");\n    expect(c.hex).to.be(\"#ffcc00\");\n    expect(c.h.toFixed(3)).to.be(\"0.133\");\n    expect(c.s).to.be(1);\n    expect(c.l).to.be(.5);\n  });","file":"colors.js","skipped":false,"dir":"test"},{"name":"parses HSL - %","suites":["Colours"],"updatePoint":{"line":26,"column":20},"line":26,"code":"  it(\"parses HSL - %\", function () {\n    var c = Snap.color(\"hsl(13.33%, 100%, 50%)\");\n    expect(c.hex).to.be(\"#ffcc00\");\n    expect(c.h.toFixed(3)).to.be(\"0.133\");\n    expect(c.s).to.be(1);\n    expect(c.l).to.be(.5);\n  });","file":"colors.js","skipped":false,"dir":"test"},{"name":"parses HSB","suites":["Colours"],"updatePoint":{"line":33,"column":16},"line":33,"code":"  it(\"parses HSB\", function () {\n    var c = Snap.color(\"hsb(0.1333, 1, 1)\");\n    expect(c.hex).to.be(\"#ffcc00\");\n    expect(c.h.toFixed(3)).to.be(\"0.133\");\n    expect(c.s).to.be(1);\n    expect(c.v).to.be(1);\n  });","file":"colors.js","skipped":false,"dir":"test"},{"name":"parses HSB - %","suites":["Colours"],"updatePoint":{"line":40,"column":20},"line":40,"code":"  it(\"parses HSB - %\", function () {\n    var c = Snap.color(\"hsb(13.33%, 100%, 100%)\");\n    expect(c.hex).to.be(\"#ffcc00\");\n    expect(c.h.toFixed(3)).to.be(\"0.133\");\n    expect(c.s).to.be(1);\n    expect(c.v).to.be(1);\n  });","file":"colors.js","skipped":false,"dir":"test"},{"name":"parses RGBA","suites":["Colours"],"updatePoint":{"line":47,"column":17},"line":47,"code":"  it(\"parses RGBA\", function () {\n    var c = Snap.color(\"rgba(255, 204, 0, .75)\");\n    expect(c.hex).to.be(\"#ffcc00\");\n    expect(c.r).to.be(255);\n    expect(c.g).to.be(204);\n    expect(c.b).to.be(0);\n    expect(c.opacity).to.be(.75);\n  });","file":"colors.js","skipped":false,"dir":"test"},{"name":"parses HSLA","suites":["Colours"],"updatePoint":{"line":55,"column":17},"line":55,"code":"  it(\"parses HSLA\", function () {\n    var c = Snap.color(\"hsla(0.1333, 1, .5, .5)\");\n    expect(c.hex).to.be(\"#ffcc00\");\n    expect(c.r).to.be(255);\n    expect(c.g).to.be(204);\n    expect(c.b).to.be(0);\n    expect(c.opacity).to.be(.5);\n  });","file":"colors.js","skipped":false,"dir":"test"},{"name":"parses HSBA","suites":["Colours"],"updatePoint":{"line":63,"column":17},"line":63,"code":"  it(\"parses HSBA\", function () {\n    var c = Snap.color(\"hsba(0.1333, 1, 1, .5)\");\n    expect(c.hex).to.be(\"#ffcc00\");\n    expect(c.r).to.be(255);\n    expect(c.g).to.be(204);\n    expect(c.b).to.be(0);\n    expect(c.opacity).to.be(.5);\n  });","file":"colors.js","skipped":false,"dir":"test"},{"name":"parses names","suites":["Colours"],"updatePoint":{"line":71,"column":18},"line":71,"code":"  it(\"parses names\", function () {\n    var c = Snap.color(\"DodgerBlue\");\n    expect(c.hex).to.be(\"#1e90ff\");\n    c = Snap.color(\"FireBrick\");\n    expect(c.hex).to.be(\"#b22222\");\n    c = Snap.color(\"MintCream\");\n    expect(c.hex).to.be(\"#f5fffa\");\n  });","file":"colors.js","skipped":false,"dir":"test"},{"name":"parses to RGB","suites":["Colours"],"updatePoint":{"line":79,"column":19},"line":79,"code":"  it(\"parses to RGB\", function () {\n    var expectRGB = function (str) {\n      var c = Snap.getRGB(str);\n      expect(c.hex).to.be(\"#ffcc00\");\n      expect(c.r).to.be(255);\n      expect(c.g).to.be(204);\n      expect(c.b).to.be(0);\n      expect(c.error).to.not.be(true);\n    };\n\n    expectRGB(\"#fc0\");\n    expectRGB(\"#ffcc00\");\n    expectRGB(\"rgb(255, 204, 0)\");\n    expectRGB(\"rgb(100%, 80%, 0%)\");\n    expectRGB(\"hsb(0.1333, 1, 1)\");\n    expectRGB(\"hsb(13.33%, 100%, 100%)\");\n    expectRGB(\"hsl(0.1333, 1, .5)\");\n    expectRGB(\"hsl(13.33%, 100%, 50%)\");\n    expectRGB(\"rgba(255, 204, 0, .75)\");\n    expectRGB(\"hsla(0.1333, 1, .5, .5)\");\n    expectRGB(\"hsba(0.1333, 1, 1, .5)\");\n    var c = Snap.getRGB(\"DodgerBlue\");\n    expect(c.hex).to.be(\"#1e90ff\");\n    expect(c.r).to.be(30);\n    expect(c.g).to.be(144);\n    expect(c.b).to.be(255);\n    expect(c.error).to.not.be(true);\n    c = Snap.getRGB(\"foobar\");\n    expect(!!c.error).to.be(true);\n    c = Snap.getRGB(\"#zzz\");\n    expect(!!c.error).to.be(true);\n    c = Snap.getRGB(\"rgb(255)\");\n    expect(!!c.error).to.be(true);\n    c = Snap.getRGB(\"hsl(0, 0, 0\");\n    expect(!!c.error).to.be(true);\n    c = Snap.getRGB(\"rab(0, 0, 0)\");\n    expect(!!c.error).to.be(true);\n  });","file":"colors.js","skipped":false,"dir":"test"},{"name":"creates hsb","suites":["Colours"],"updatePoint":{"line":117,"column":17},"line":117,"code":"  it(\"creates hsb\", function () {\n    var str = Snap.hsb(0.13333, 1, 1);\n    expect(str).to.be(\"#ffcc00\");\n    str = Snap.hsb(0, 0.5, 0.5);\n    expect(str).to.be(\"#804040\");\n  });","file":"colors.js","skipped":false,"dir":"test"},{"name":"creates rgb from hsb","suites":["Colours"],"updatePoint":{"line":123,"column":26},"line":123,"code":"  it(\"creates rgb from hsb\", function () {\n    var rgb = Snap.hsb2rgb(0.13333, 1, 1);\n    expect(rgb.r).to.be(255);\n    expect(rgb.g).to.be(204);\n    expect(rgb.b).to.be(0);\n    expect(rgb.hex).to.be(\"#ffcc00\");\n    rgb = Snap.hsb2rgb(0, 0.5, 0.5);\n    expect(rgb.r).to.be(128);\n    expect(rgb.g).to.be(64);\n    expect(rgb.b).to.be(64);\n    expect(rgb.hex).to.be(\"#804040\");\n  });","file":"colors.js","skipped":false,"dir":"test"},{"name":"creates hsl","suites":["Colours"],"updatePoint":{"line":135,"column":17},"line":135,"code":"  it(\"creates hsl\", function () {\n    var str = Snap.hsl(0.13333, 1, 0.5);\n    expect(str).to.be(\"#ffcc00\");\n    str = Snap.hsl(0, 1, 0.75);\n    expect(str).to.be(\"#ff8080\");\n  });","file":"colors.js","skipped":false,"dir":"test"},{"name":"creates rgb from hsl","suites":["Colours"],"updatePoint":{"line":141,"column":26},"line":141,"code":"  it(\"creates rgb from hsl\", function () {\n    var rgb = Snap.hsl2rgb(0.13333, 1, 0.5);\n    expect(rgb.r).to.be(255);\n    expect(rgb.g).to.be(204);\n    expect(rgb.b).to.be(0);\n    expect(rgb.hex).to.be(\"#ffcc00\");\n    rgb = Snap.hsl2rgb(0, 1, 0.75);\n    expect(rgb.r).to.be(255);\n    expect(rgb.g).to.be(128);\n    expect(rgb.b).to.be(128);\n    expect(rgb.hex).to.be(\"#ff8080\");\n  });","file":"colors.js","skipped":false,"dir":"test"},{"name":"creates rgb","suites":["Colours"],"updatePoint":{"line":153,"column":17},"line":153,"code":"  it(\"creates rgb\", function () {\n    var str = Snap.rgb(255, 204, 0);\n    expect(str).to.be(\"#ffcc00\");\n    str = Snap.rgb(64, 128, 255);\n    expect(str).to.be(\"#4080ff\");\n  });","file":"colors.js","skipped":false,"dir":"test"},{"name":"creates hsb from rgb","suites":["Colours"],"updatePoint":{"line":159,"column":26},"line":159,"code":"  it(\"creates hsb from rgb\", function () {\n    var hsb = Snap.rgb2hsb(255, 204, 0);\n    expect(hsb.h.toFixed(3)).to.be(\"0.133\");\n    expect(hsb.s).to.be(1);\n    expect(hsb.b).to.be(1);\n    hsb = Snap.rgb2hsb(128, 64, 64);\n    expect(hsb.h).to.be(0);\n    expect(hsb.s.toFixed(1)).to.be(\"0.5\");\n    expect(hsb.b.toFixed(1)).to.be(\"0.5\");\n  });","file":"colors.js","skipped":false,"dir":"test"},{"name":"creates hsl from rgb","suites":["Colours"],"updatePoint":{"line":169,"column":26},"line":169,"code":"  it(\"creates hsl from rgb\", function () {\n    var hsl = Snap.rgb2hsl(255, 204, 0);\n    expect(hsl.h.toFixed(3)).to.be(\"0.133\");\n    expect(hsl.s).to.be(1);\n    expect(hsl.l).to.be(0.5);\n    hsl = Snap.rgb2hsl(255, 128, 128);\n    expect(hsl.h).to.be(0);\n    expect(hsl.s).to.be(1);\n    expect(hsl.l.toFixed(2)).to.be(\"0.75\");\n  });","file":"colors.js","skipped":false,"dir":"test"},{"name":"Element.add (for Element)","suites":["Element methods"],"updatePoint":{"line":22,"column":31},"line":22,"code":"  it(\"Element.add (for Element)\", function () {\n    var rect = s.rect(10, 20, 30, 40);\n    var result = s.add(rect);\n    expect(rect.node.parentNode).to.be(s.node);\n    expect(s.node.lastChild).to.be(rect.node);\n    expect(result).to.be(s);\n  });","file":"element.js","skipped":false,"dir":"test"},{"name":"Element.add (for Set)","suites":["Element methods"],"updatePoint":{"line":29,"column":27},"line":29,"code":"  it(\"Element.add (for Set)\", function () {\n    var rect1 = s.rect(10, 20, 30, 40);\n    var rect2 = s.rect(10, 20, 30, 40);\n    var set = Snap.set(rect1, rect2);\n    var result = s.add(set);\n    expect(rect1.node.parentNode).to.be(s.node);\n    expect(rect2.node.parentNode).to.be(s.node);\n    expect(result).to.be(s);\n  });","file":"element.js","skipped":false,"dir":"test"},{"name":"Element.append (for Element)","suites":["Element methods"],"updatePoint":{"line":38,"column":34},"line":38,"code":"  it(\"Element.append (for Element)\", function () {\n    var rect = s.rect(10, 20, 30, 40);\n    var result = s.append(rect);\n    expect(rect.node.parentNode).to.be(s.node);\n    expect(s.node.lastChild).to.be(rect.node);\n    expect(result).to.be(s);\n  });","file":"element.js","skipped":false,"dir":"test"},{"name":"Element.appendTo (for Element)","suites":["Element methods"],"updatePoint":{"line":45,"column":36},"line":45,"code":"  it(\"Element.appendTo (for Element)\", function () {\n    var rect = s.rect(10, 20, 30, 40);\n    var result = rect.appendTo(s);\n    expect(rect.node.parentNode).to.be(s.node);\n    expect(s.node.lastChild).to.be(rect.node);\n    expect(result).to.be(rect);\n  });","file":"element.js","skipped":false,"dir":"test"},{"name":"Element.append (for Set)","suites":["Element methods"],"updatePoint":{"line":52,"column":30},"line":52,"code":"  it(\"Element.append (for Set)\", function () {\n    var rect1 = s.rect(10, 20, 30, 40);\n    var rect2 = s.rect(10, 20, 30, 40);\n    var set = Snap.set(rect1, rect2);\n    var result = s.append(set);\n    expect(rect1.node.parentNode).to.be(s.node);\n    expect(rect2.node.parentNode).to.be(s.node);\n    expect(result).to.be(s);\n  });","file":"element.js","skipped":false,"dir":"test"},{"name":"Element.after","suites":["Element methods"],"updatePoint":{"line":61,"column":19},"line":61,"code":"  it(\"Element.after\", function () {\n    var circle = s.circle(10, 20, 30);\n    var rect = s.rect(10, 20, 30, 40);\n    var result = circle.after(rect);\n    expect(circle.node.nextSibling).to.be(rect.node);\n    expect(result).to.be(circle);\n  });","file":"element.js","skipped":false,"dir":"test"},{"name":"Element.prepend","suites":["Element methods"],"updatePoint":{"line":68,"column":21},"line":68,"code":"  it(\"Element.prepend\", function () {\n    var rect = s.rect(10, 20, 30, 40);\n    var circle = s.circle(10, 20, 30);\n    var group = s.group();\n    s.append(group);\n    var result = group.prepend(rect);\n    expect(group.node.firstChild).to.be(rect.node);\n    expect(result).to.be(group);\n    result = group.prepend(circle);\n    expect(group.node.firstChild).to.be(circle.node);\n    expect(result).to.be(group);\n  });","file":"element.js","skipped":false,"dir":"test"},{"name":"Element.prependTo","suites":["Element methods"],"updatePoint":{"line":80,"column":23},"line":80,"code":"  it(\"Element.prependTo\", function () {\n    var rect = s.rect(10, 20, 30, 40);\n    var circle = s.circle(10, 20, 30);\n    var group = s.group();\n    s.append(group);\n    var result = rect.prependTo(group);\n    expect(group.node.firstChild).to.be(rect.node);\n    expect(result).to.be(rect);\n    result = circle.prependTo(group);\n    expect(group.node.firstChild).to.be(circle.node);\n    expect(result).to.be(circle);\n  });","file":"element.js","skipped":false,"dir":"test"},{"name":"Element.insertAfter","suites":["Element methods"],"updatePoint":{"line":92,"column":25},"line":92,"code":"  it(\"Element.insertAfter\", function () {\n    var circle = s.circle(10, 20, 30);\n    var rect = s.rect(10, 20, 30, 40);\n    var result = rect.insertAfter(circle);\n    expect(circle.node.nextSibling).to.be(rect.node);\n    expect(result).to.be(rect);\n  });","file":"element.js","skipped":false,"dir":"test"},{"name":"Element.before","suites":["Element methods"],"updatePoint":{"line":99,"column":20},"line":99,"code":"  it(\"Element.before\", function () {\n    var circle = s.circle(10, 20, 30);\n    var rect = s.rect(10, 20, 30, 40);\n    var result = circle.before(rect);\n    expect(circle.node.previousSibling).to.be(rect.node);\n    expect(result).to.be(circle);\n  });","file":"element.js","skipped":false,"dir":"test"},{"name":"Element.insertBefore","suites":["Element methods"],"updatePoint":{"line":106,"column":26},"line":106,"code":"  it(\"Element.insertBefore\", function () {\n    var circle = s.circle(10, 20, 30);\n    var rect = s.rect(10, 20, 30, 40);\n    var result = rect.insertBefore(circle);\n    expect(circle.node.previousSibling).to.be(rect.node);\n    expect(result).to.be(rect);\n  });","file":"element.js","skipped":false,"dir":"test"},{"name":"Element.clone","suites":["Element methods"],"updatePoint":{"line":113,"column":19},"line":113,"code":"  it(\"Element.clone\", function () {\n    var circle = s.circle(10, 20, 30);\n    s.append(circle);\n    var clone = circle.clone();\n    expect(circle.node).not.to.be(clone.node);\n    expect(clone.node.getAttribute(\"cx\")).to.be(\"10\");\n    expect(clone.node.getAttribute(\"cy\")).to.be(\"20\");\n    expect(clone.node.getAttribute(\"r\")).to.be(\"30\");\n  });","file":"element.js","skipped":false,"dir":"test"},{"name":"Element.parent","suites":["Element methods"],"updatePoint":{"line":122,"column":20},"line":122,"code":"  it(\"Element.parent\", function () {\n    var circle = s.circle(10, 20, 30);\n    s.append(circle);\n    var parent = circle.parent();\n    expect(parent.node).to.be(s.node);\n  });","file":"element.js","skipped":false,"dir":"test"},{"name":"Element.remove","suites":["Element methods"],"updatePoint":{"line":128,"column":20},"line":128,"code":"  it(\"Element.remove\", function () {\n    var rect = s.rect(10, 20, 30, 40);\n    expect(rect.node.parentNode).to.be(s.node);\n    var result = rect.remove();\n    expect(rect.node.parentNode).to.be(null);\n    expect(result).to.be(rect);\n  });","file":"element.js","skipped":false,"dir":"test"},{"name":"Element.attr - get","suites":["Element methods"],"updatePoint":{"line":149,"column":24},"line":149,"code":"  it(\"Element.attr - get\", function () {\n    var circle = s.circle(10, 20, 30);\n    var r = circle.attr(\"r\");\n    expect(r).to.be(\"30\");\n  });","file":"element.js","skipped":false,"dir":"test"},{"name":"Element.attr - set","suites":["Element methods"],"updatePoint":{"line":154,"column":24},"line":154,"code":"  it(\"Element.attr - set\", function () {\n    var circle = s.circle(10, 20, 30);\n    circle.attr({\n      cx: 1,\n      cy: 2,\n      r: 3\n    });\n    var cx = circle.node.getAttribute(\"cx\");\n    var cy = circle.node.getAttribute(\"cy\");\n    var r = circle.node.getAttribute(\"r\");\n    expect(cx).to.be(\"1\");\n    expect(cy).to.be(\"2\");\n    expect(r).to.be(\"3\");\n  });","file":"element.js","skipped":false,"dir":"test"},{"name":"Element.attr - set on group","suites":["Element methods"],"updatePoint":{"line":168,"column":33},"line":168,"code":"  it(\"Element.attr - set on group\", function () {\n    var group = s.group();\n    group.attr({\n      'class': 'myclass'\n    });\n    expect(group.node.getAttribute('class')).to.be('myclass');\n  });","file":"element.js","skipped":false,"dir":"test"},{"name":"Element.attr - textPath","suites":["Element methods"],"updatePoint":{"line":175,"column":29},"line":175,"code":"  it(\"Element.attr - textPath\", function () {\n    var txt = s.text(20, 20, \"test\");\n    txt.attr({\n      textpath: \"M10,20L100,100\"\n    });\n    expect(txt.node.firstChild.tagName).to.be(\"textPath\");\n  });","file":"element.js","skipped":false,"dir":"test"},{"name":"Element.attr - textPath","suites":["Element methods"],"updatePoint":{"line":182,"column":29},"line":182,"code":"  it(\"Element.attr - textPath\", function () {\n    var txt = s.text(20, 20, \"test\"),\n        pth = s.path(\"M10,20L100,100\");\n    txt.attr({\n      textpath: pth\n    });\n    expect(txt.node.firstChild.tagName).to.be(\"textPath\");\n  });","file":"element.js","skipped":false,"dir":"test"},{"name":"Element.data","suites":["Element methods"],"updatePoint":{"line":190,"column":18},"line":190,"code":"  it(\"Element.data\", function () {\n    var circle = s.circle(10, 20, 30);\n    circle.data(\"foo\", \"bar\");\n    var data = circle.data(\"foo\");\n    expect(data).to.be(\"bar\");\n    var myObject = {};\n    circle.data(\"my-object\", myObject);\n    data = circle.data(\"my-object\");\n    expect(data).to.be(myObject);\n  });","file":"element.js","skipped":false,"dir":"test"},{"name":"Element.removeData - with key","suites":["Element methods"],"updatePoint":{"line":200,"column":35},"line":200,"code":"  it(\"Element.removeData - with key\", function () {\n    var circle = s.circle(10, 20, 30);\n    var myObject = {};\n    circle.data(\"my-object\", myObject);\n    var data = circle.data(\"my-object\");\n    expect(data).to.be(myObject);\n    circle.removeData(\"my-object\");\n    data = circle.data(\"my-object\");\n    expect(data).to.be(undefined);\n  });","file":"element.js","skipped":false,"dir":"test"},{"name":"Element.removeData - no key","suites":["Element methods"],"updatePoint":{"line":210,"column":33},"line":210,"code":"  it(\"Element.removeData - no key\", function () {\n    var circle = s.circle(10, 20, 30);\n    var myObject = {};\n    var myNumber = 42;\n    circle.data(\"my-object\", myObject);\n    circle.data(\"my-number\", 42);\n    expect(circle.data(\"my-object\")).to.be(myObject);\n    expect(circle.data(\"my-number\")).to.be(myNumber);\n    circle.removeData();\n    expect(circle.data(\"my-object\")).to.be(undefined);\n    expect(circle.data(\"my-number\")).to.be(undefined);\n  });","file":"element.js","skipped":false,"dir":"test"},{"name":"Element.asPX - from %","suites":["Element methods"],"updatePoint":{"line":222,"column":27},"line":222,"code":"  it(\"Element.asPX - from %\", function () {\n    s.attr({\n      width: 200\n    });\n    var rect = s.rect(0, 0, \"100%\", 10);\n    var widthAsPx = rect.asPX(\"width\");\n    expect(widthAsPx).to.be(200);\n  });","file":"element.js","skipped":false,"dir":"test"},{"name":"Element.getBBox","suites":["Element methods"],"updatePoint":{"line":230,"column":21},"line":230,"code":"  it(\"Element.getBBox\", function () {\n    var rect = s.rect(10, 20, 30, 40),\n        bbox = rect.getBBox(),\n        line = s.line(10, 20, 40, 60),\n        lbbx = line.getBBox();\n    expect(bbox.x).to.eql(10);\n    expect(bbox.y).to.eql(20);\n    expect(bbox.w).to.eql(30);\n    expect(bbox.width).to.eql(30);\n    expect(bbox.h).to.eql(40);\n    expect(bbox.height).to.eql(40);\n    expect(bbox.x2).to.eql(10 + 30);\n    expect(bbox.cx).to.eql(10 + 30 / 2);\n    expect(bbox.cy).to.eql(20 + 40 / 2);\n    expect(bbox.y2).to.eql(20 + 40);\n    expect(bbox).to.eql(lbbx);\n  });","file":"element.js","skipped":false,"dir":"test"},{"name":"Element.getPointAtLength","suites":["Element methods"],"updatePoint":{"line":247,"column":30},"line":247,"code":"  it(\"Element.getPointAtLength\", function () {\n    var path = s.path(\"M0,0 100,0\");\n    expect(path.getPointAtLength(50)).to.eql({\n      x: 50,\n      y: 0,\n      m: {\n        x: 25,\n        y: 0\n      },\n      n: {\n        x: 75,\n        y: 0\n      },\n      start: {\n        x: 0,\n        y: 0\n      },\n      end: {\n        x: 100,\n        y: 0\n      },\n      alpha: 180\n    });\n  });","file":"element.js","skipped":false,"dir":"test"},{"name":"Element.getSubpath","suites":["Element methods"],"updatePoint":{"line":271,"column":24},"line":271,"code":"  it(\"Element.getSubpath\", function () {\n    var path = s.path(\"M0,0 100,0\");\n    expect(path.getSubpath(10, 90)).to.be(\"M9.995,0C29.153,0,70.839,0,90,0\");\n  });","file":"element.js","skipped":false,"dir":"test"},{"name":"Element.getTotalLength","suites":["Element methods"],"updatePoint":{"line":275,"column":28},"line":275,"code":"  it(\"Element.getTotalLength\", function () {\n    var path = s.path(\"M0,0 100,0\");\n    expect(+path.getTotalLength(\"M0,0 100,0\").toFixed(2)).to.be(100);\n  });","file":"element.js","skipped":false,"dir":"test"},{"name":"Element.innerSVG","suites":["Element methods"],"updatePoint":{"line":279,"column":22},"line":279,"code":"  it(\"Element.innerSVG\", function () {\n    var group1 = s.group().attr({\n      'class': 'group-one'\n    });\n    var group2 = s.group().attr({\n      'class': 'group-two'\n    });\n    var group3 = s.group().attr({\n      'class': 'group-three'\n    });\n    var circle1 = s.circle(10, 20, 30).attr({\n      'class': 'circle-one'\n    });\n    var circle2 = s.circle(5, 10, 25).attr({\n      'class': 'circle-two'\n    });\n    group1.add(group2);\n    group2.add(group3);\n    group2.add(circle1);\n    group3.add(circle2);\n    var innerSVG = group1.innerSVG();\n    expect(innerSVG).to.match(/<g .*?class=\"group-two\".*?>\\w*<g .*?class=\"group-three\".*?>\\w*<circle .*?class=\"circle-two\".*?>\\w*<circle .*?class=\"circle-one\".*?>/);\n  });","file":"element.js","skipped":false,"dir":"test"},{"name":"Element.toString","suites":["Element methods"],"updatePoint":{"line":302,"column":22},"line":302,"code":"  it(\"Element.toString\", function () {\n    var group1 = s.group();\n    var circle1 = s.circle(10, 20, 30).attr({\n      'class': 'circle-one'\n    });\n    group1.add(circle1);\n    var str = group1.toString();\n    expect(str).to.match(/<g.*?>\\w*<circle .*?class=\"circle-one\".*?>\\w*<\\/g>/);\n  });","file":"element.js","skipped":false,"dir":"test"},{"name":"Element.select","suites":["Element methods"],"updatePoint":{"line":326,"column":20},"line":326,"code":"  it(\"Element.select\", function () {\n    var group1 = s.group();\n    var group2 = s.group();\n    var group3 = s.group();\n    var circle1 = s.circle(10, 20, 30).attr({\n      'class': 'circle-one'\n    });\n    var circle2 = s.circle(5, 10, 25).attr({\n      'class': 'circle-two'\n    });\n    group1.add(group2);\n    group2.add(group3);\n    group2.add(circle1);\n    group3.add(circle2);\n    var c1 = group1.select('.circle-one');\n    expect(circle1).to.be(c1);\n    var c2 = group1.select('.circle-two');\n    expect(circle2).to.be(c2);\n  });","file":"element.js","skipped":false,"dir":"test"},{"name":"Element.selectAll","suites":["Element methods"],"updatePoint":{"line":345,"column":23},"line":345,"code":"  it(\"Element.selectAll\", function () {\n    var group1 = s.group();\n    var group2 = s.group();\n    var group3 = s.group();\n    var circle1 = s.circle(10, 20, 30).attr({\n      'class': 'circle-one'\n    });\n    var circle2 = s.circle(5, 10, 25).attr({\n      'class': 'circle-two'\n    });\n    group1.add(group2);\n    group2.add(group3);\n    group2.add(circle1);\n    group3.add(circle2);\n    var circles = group1.selectAll('circle');\n    expect(circles.length).to.be(2);\n    expect(circles).to.contain(circle1);\n    expect(circles).to.contain(circle2);\n  });","file":"element.js","skipped":false,"dir":"test"},{"name":"Element.animate","suites":["Element methods"],"updatePoint":{"line":364,"column":21},"line":364,"code":"  it(\"Element.animate\", function (done) {\n    var circle = s.circle(10, 20, 30);\n    var result = circle.animate({\n      r: 50\n    }, 10);\n    setTimeout(function () {\n      var r = circle.attr(\"r\");\n      expect(r).to.be(\"50\");\n      done();\n    }, 50);\n    expect(result).to.be(circle);\n  });","file":"element.js","skipped":false,"dir":"test"},{"name":"Element.animate - with callback","suites":["Element methods"],"updatePoint":{"line":376,"column":37},"line":376,"code":"  it(\"Element.animate - with callback\", function (done) {\n    var circle = s.circle(10, 20, 30);\n    var result = circle.animate({\n      r: 50\n    }, 10, function () {\n      var r = circle.attr(\"r\");\n      expect(r).to.be(\"50\");\n      done();\n    });\n    expect(result).to.be(circle);\n  });","file":"element.js","skipped":false,"dir":"test"},{"name":"Element.animate - with easing","suites":["Element methods"],"updatePoint":{"line":387,"column":35},"line":387,"code":"  it(\"Element.animate - with easing\", function (done) {\n    var circle = s.circle(10, 20, 30);\n    var result = circle.animate({\n      r: 50\n    }, 10, mina.easein);\n    setTimeout(function () {\n      var r = circle.attr(\"r\");\n      expect(r).to.be(\"50\");\n      done();\n    }, 50);\n    expect(result).to.be(circle);\n  });","file":"element.js","skipped":false,"dir":"test"},{"name":"Element.animate - with callback & easing","suites":["Element methods"],"updatePoint":{"line":399,"column":46},"line":399,"code":"  it(\"Element.animate - with callback & easing\", function (done) {\n    var circle = s.circle(10, 20, 30);\n    var result = circle.animate({\n      r: 50\n    }, 10, mina.easeout, function () {\n      var r = circle.attr(\"r\");\n      expect(r).to.be(\"50\");\n      done();\n    });\n    expect(result).to.be(circle);\n  });","file":"element.js","skipped":false,"dir":"test"},{"name":"Element.inAnim","suites":["Element methods"],"updatePoint":{"line":410,"column":20},"line":410,"code":"  it(\"Element.inAnim\", function (done) {\n    var circle = s.circle(10, 20, 30);\n    circle.animate({\n      r: 50\n    }, 100);\n    circle.animate({\n      cx: 100\n    }, 100);\n    setTimeout(function () {\n      var inAnimArr = circle.inAnim();\n      expect(inAnimArr).to.be.an('array');\n      expect(inAnimArr.length).to.be(2);\n      expect(inAnimArr[0].anim).to.be.an('object');\n      expect(inAnimArr[0].curStatus).to.be.a('number');\n      expect(inAnimArr[0].curStatus).to.be.within(0.01, 0.99);\n      expect(inAnimArr[0].status).to.be.a('function');\n      expect(inAnimArr[0].stop).to.be.a('function');\n      done();\n    }, 50);\n  });","file":"element.js","skipped":false,"dir":"test"},{"name":"Element.stop","suites":["Element methods"],"updatePoint":{"line":430,"column":18},"line":430,"code":"  it(\"Element.stop\", function (done) {\n    var circle = s.circle(10, 20, 30);\n    circle.animate({\n      r: 50\n    }, 100);\n    setTimeout(function () {\n      var inAnimArr = circle.inAnim();\n      expect(inAnimArr.length).to.be(1);\n      var result = circle.stop();\n      inAnimArr = circle.inAnim();\n      expect(inAnimArr.length).to.be(0);\n      var r = circle.attr(\"r\");\n      expect(r).to.be.lessThan(50);\n      expect(result).to.be(circle);\n      done();\n    }, 50);\n  });","file":"element.js","skipped":false,"dir":"test"},{"name":"Element.marker","suites":["Element methods"],"updatePoint":{"line":447,"column":20},"line":447,"code":"  it(\"Element.marker\", function () {\n    var line = s.line(0, 0, 10, 10);\n    var marker = line.marker(0, 0, 5, 5, 0, 0);\n    expect(marker.node.nodeName).to.be(\"marker\");\n    expect(marker.node.getAttribute(\"viewBox\")).to.be(\"0 0 5 5\");\n    expect(marker.node.getAttribute(\"markerWidth\")).to.be(\"5\");\n    expect(marker.node.getAttribute(\"markerHeight\")).to.be(\"5\");\n    expect(marker.node.getAttribute(\"refX\")).to.be(\"0\");\n    expect(marker.node.getAttribute(\"refY\")).to.be(\"0\");\n  });","file":"element.js","skipped":false,"dir":"test"},{"name":"Element.pattern","suites":["Element methods"],"updatePoint":{"line":457,"column":21},"line":457,"code":"  it(\"Element.pattern\", function () {\n    var circle = s.circle(10, 20, 30);\n    var pattern = circle.pattern(0, 0, 50, 50);\n    expect(pattern.node.nodeName).to.be('pattern');\n  });","file":"element.js","skipped":false,"dir":"test"},{"name":"Element.transform","suites":["Element methods"],"updatePoint":{"line":462,"column":23},"line":462,"code":"  it(\"Element.transform\", function () {\n    var circle = s.circle(10, 20, 30);\n    var result = circle.transform(\"translate(10,10)\");\n    var matrix = {\n      a: 1,\n      b: 0,\n      c: 0,\n      d: 1,\n      e: 10,\n      f: 10\n    };\n    var transform = circle.transform();\n    expect(transform.string).to.be.a('string');\n    expect(transform.global).to.be.a('string');\n    expect(transform.globalMatrix).to.be.an('object');\n    expect(transform.globalMatrix).to.eql(matrix);\n    expect(transform.local).to.be.a('string');\n    expect(transform.localMatrix).to.be.an('object');\n    expect(transform.localMatrix).to.eql(matrix);\n    circle.transform(\"rotate(90)\");\n    transform = circle.transform();\n    expect(transform.local).to.be(\"r90,0,0\");\n    expect(result).to.be(circle);\n    circle.transform(\"translate(10)\");\n    matrix = {\n      a: 1,\n      b: 0,\n      c: 0,\n      d: 1,\n      e: 10,\n      f: 0\n    };\n    transform = circle.transform();\n    expect(transform.globalMatrix).to.eql(matrix);\n  });","file":"element.js","skipped":false,"dir":"test"},{"name":"Element.use","suites":["Element methods"],"updatePoint":{"line":497,"column":17},"line":497,"code":"  it(\"Element.use\", function () {\n    var circle = s.circle(10, 20, 30);\n    var use = circle.use();\n    expect(use.node.nodeName).to.be('use');\n  });","file":"element.js","skipped":false,"dir":"test"},{"name":"Element.toDefs","suites":["Element methods"],"updatePoint":{"line":502,"column":20},"line":502,"code":"  it(\"Element.toDefs\", function () {\n    var circle = s.circle(10, 20, 30);\n    var result = circle.toDefs();\n    expect(circle.node.parentElement.nodeName).to.be('defs');\n    expect(result).to.be(circle);\n  });","file":"element.js","skipped":false,"dir":"test"},{"name":"Element.drag, Element.undrag - no contexts","suites":["Element methods"],"updatePoint":{"line":581,"column":48},"line":581,"code":"  it(\"Element.drag, Element.undrag - no contexts\", function () {\n    var circle = s.circle(10, 20, 30);\n    var moved = 0;\n    var started = 0;\n    var ended = 0;\n    var result1 = circle.drag(function (dx, dy, x, y, event) {\n      moved++;\n      expect(dx).to.be.a('number');\n      expect(dy).to.be.a('number');\n      expect(x).to.be.a('number');\n      expect(y).to.be.a('number');\n      expect(event).to.be.an('object');\n    }, function (x, y, event) {\n      started++;\n      expect(x).to.be.a('number');\n      expect(y).to.be.a('number');\n      expect(event).to.be.an('object');\n    }, function (event) {\n      ended++;\n      expect(event).to.be.an('object');\n    });\n    expect(started).to.be(0);\n    triggerEvent(circle, 'mousedown');\n    expect(started).to.be(1);\n    expect(moved).to.be(0);\n    triggerEvent(circle, 'mousemove');\n    expect(moved).to.be(1);\n    expect(ended).to.be(0);\n    triggerEvent(circle, 'mouseup');\n    expect(ended).to.be(1);\n    expect(result1).to.be(circle);\n    var result2 = circle.undrag();\n    triggerEvent(circle, 'mousedown');\n    expect(started).to.be(1);\n    triggerEvent(circle, 'mousemove');\n    expect(moved).to.be(1);\n    triggerEvent(circle, 'mouseup');\n    expect(ended).to.be(1); // expect(result2).to.be(circle); // TODO: Make undrag return element\n  });","file":"element.js","skipped":false,"dir":"test"},{"name":"Element.drag - with contexts","suites":["Element methods"],"updatePoint":{"line":620,"column":34},"line":620,"code":"  it(\"Element.drag - with contexts\", function () {\n    var circle = s.circle(10, 20, 30);\n    var moved = 0;\n    var started = 0;\n    var ended = 0;\n    var result = circle.drag(function (dx, dy, x, y, event) {\n      moved++;\n      expect(dx).to.be.a('number');\n      expect(dy).to.be.a('number');\n      expect(x).to.be.a('number');\n      expect(y).to.be.a('number');\n      expect(event).to.be.an('object');\n      expect(this.moveContext).to.be(true);\n    }, function (x, y, event) {\n      started++;\n      expect(x).to.be.a('number');\n      expect(y).to.be.a('number');\n      expect(event).to.be.an('object');\n      expect(this.startContext).to.be(true);\n    }, function (event) {\n      ended++;\n      expect(event).to.be.an('object');\n      expect(this.endContext).to.be(true);\n    }, {\n      moveContext: true\n    }, {\n      startContext: true\n    }, {\n      endContext: true\n    });\n    expect(started).to.be(0);\n    triggerEvent(circle, 'mousedown');\n    expect(started).to.be(1);\n    expect(moved).to.be(0);\n    triggerEvent(circle, 'mousemove');\n    expect(moved).to.be(1);\n    expect(ended).to.be(0);\n    triggerEvent(circle, 'mouseup');\n    expect(ended).to.be(1);\n    expect(result).to.be(circle);\n    var result2 = circle.undrag();\n    triggerEvent(circle, 'mousedown');\n    expect(started).to.be(1);\n    triggerEvent(circle, 'mousemove');\n    expect(moved).to.be(1);\n    triggerEvent(circle, 'mouseup');\n    expect(ended).to.be(1); // expect(result2).to.be(circle); // TODO: Make undrag return element\n  });","file":"element.js","skipped":false,"dir":"test"},{"name":"Element.hover, Element.unhover - no contexts","suites":["Element methods"],"updatePoint":{"line":668,"column":50},"line":668,"code":"  it(\"Element.hover, Element.unhover - no contexts\", function () {\n    var circle = s.circle(10, 20, 30);\n    var eventIn = 0;\n    var eventOut = 0;\n    var result1 = circle.hover(function () {\n      eventIn++;\n    }, function () {\n      eventOut++;\n    });\n    expect(eventIn).to.be(0);\n    triggerEvent(circle, 'mouseover');\n    expect(eventIn).to.be(1);\n    expect(eventOut).to.be(0);\n    triggerEvent(circle, 'mouseout');\n    expect(eventOut).to.be(1);\n    expect(result1).to.be(circle);\n    var result2 = circle.unhover();\n    triggerEvent(circle, 'mouseover');\n    expect(eventIn).to.be(1);\n    triggerEvent(circle, 'mouseout');\n    expect(eventOut).to.be(1);\n    expect(result2).to.be(circle);\n  });","file":"element.js","skipped":false,"dir":"test"},{"name":"Element.hover, Element.unhover - with contexts","suites":["Element methods"],"updatePoint":{"line":691,"column":52},"line":691,"code":"  it(\"Element.hover, Element.unhover - with contexts\", function () {\n    var circle = s.circle(10, 20, 30);\n    var eventIn = 0;\n    var eventOut = 0;\n    var result1 = circle.hover(function () {\n      eventIn++;\n      expect(this.inContext).to.be(true);\n    }, function () {\n      eventOut++;\n      expect(this.outContext).to.be(true);\n    }, {\n      inContext: true\n    }, {\n      outContext: true\n    });\n    expect(eventIn).to.be(0);\n    triggerEvent(circle, 'mouseover');\n    expect(eventIn).to.be(1);\n    expect(eventOut).to.be(0);\n    triggerEvent(circle, 'mouseout');\n    expect(eventOut).to.be(1);\n    expect(result1).to.be(circle);\n    var result2 = circle.unhover();\n    triggerEvent(circle, 'mouseover');\n    expect(eventIn).to.be(1);\n    triggerEvent(circle, 'mouseout');\n    expect(eventOut).to.be(1);\n    expect(result2).to.be(circle);\n  });","file":"element.js","skipped":false,"dir":"test"},{"name":"Snap.getElementByPoint","suites":["Element methods"],"updatePoint":{"line":720,"column":28},"line":720,"code":"  it(\"Snap.getElementByPoint\", function () {\n    var rect = s.rect(10, 10, 30, 30).attr({\n      id: \"id\"\n    });\n    var res1 = Snap.getElementByPoint(15, 15);\n    var res2 = Snap.getElementByPoint(45, 45);\n    expect(res1.node.id).to.be(\"id\");\n    expect(res2.node.id).to.not.be(\"id\");\n  });","file":"element.js","skipped":false,"dir":"test"},{"name":"Snap.filter.blur","suites":["Filter methods"],"updatePoint":{"line":2,"column":22},"line":2,"code":"  it(\"Snap.filter.blur\", function () {\n    var str = Snap.filter.blur(3);\n    expect(str).to.be('<feGaussianBlur stdDeviation=\"3\"/>');\n    str = Snap.filter.blur(0.123, 8);\n    expect(str).to.be('<feGaussianBlur stdDeviation=\"0.123,8\"/>');\n  });","file":"filter.js","skipped":false,"dir":"test"},{"name":"Snap.filter.brightness","suites":["Filter methods"],"updatePoint":{"line":8,"column":28},"line":8,"code":"  it(\"Snap.filter.brightness\", function () {\n    var str = Snap.filter.brightness(0.3);\n    expect(str).to.be('<feComponentTransfer><feFuncR type=\"linear\" slope=\"0.3\"/><feFuncG type=\"linear\" slope=\"0.3\"/><feFuncB type=\"linear\" slope=\"0.3\"/></feComponentTransfer>');\n    str = Snap.filter.brightness(1);\n    expect(str).to.be('<feComponentTransfer><feFuncR type=\"linear\" slope=\"1\"/><feFuncG type=\"linear\" slope=\"1\"/><feFuncB type=\"linear\" slope=\"1\"/></feComponentTransfer>');\n  });","file":"filter.js","skipped":false,"dir":"test"},{"name":"Snap.filter.contrast","suites":["Filter methods"],"updatePoint":{"line":14,"column":26},"line":14,"code":"  it(\"Snap.filter.contrast\", function () {\n    var str = Snap.filter.contrast(0.1);\n    expect(str).to.be('<feComponentTransfer><feFuncR type=\"linear\" slope=\"0.1\" intercept=\"0.45\"/><feFuncG type=\"linear\" slope=\"0.1\" intercept=\"0.45\"/><feFuncB type=\"linear\" slope=\"0.1\" intercept=\"0.45\"/></feComponentTransfer>');\n    str = Snap.filter.contrast(3);\n    expect(str).to.be('<feComponentTransfer><feFuncR type=\"linear\" slope=\"3\" intercept=\"-1\"/><feFuncG type=\"linear\" slope=\"3\" intercept=\"-1\"/><feFuncB type=\"linear\" slope=\"3\" intercept=\"-1\"/></feComponentTransfer>');\n  });","file":"filter.js","skipped":false,"dir":"test"},{"name":"Snap.filter.grayscale","suites":["Filter methods"],"updatePoint":{"line":20,"column":27},"line":20,"code":"  it(\"Snap.filter.grayscale\", function () {\n    var str = Snap.filter.grayscale(0.5);\n    expect(str).to.be('<feColorMatrix type=\"matrix\" values=\"0.6063000000000001 0.3576 0.0361 0 0 0.1063 0.8575999999999999 0.0361 0 0 0.1063 0.3576 0.5361 0 0 0 0 0 1 0\"/>');\n    str = Snap.filter.grayscale(1);\n    expect(str).to.be('<feColorMatrix type=\"matrix\" values=\"0.2126 0.7152 0.0722 0 0 0.2126 0.7152 0.0722 0 0 0.2126 0.7152 0.0722 0 0 0 0 0 1 0\"/>');\n  });","file":"filter.js","skipped":false,"dir":"test"},{"name":"Snap.filter.hueRotate","suites":["Filter methods"],"updatePoint":{"line":26,"column":27},"line":26,"code":"  it(\"Snap.filter.hueRotate\", function () {\n    var str = Snap.filter.hueRotate(180);\n    expect(str).to.be('<feColorMatrix type=\"hueRotate\" values=\"180\"/>');\n    str = Snap.filter.hueRotate(90);\n    expect(str).to.be('<feColorMatrix type=\"hueRotate\" values=\"90\"/>');\n  });","file":"filter.js","skipped":false,"dir":"test"},{"name":"Snap.filter.hueRotate","suites":["Filter methods"],"updatePoint":{"line":32,"column":27},"line":32,"code":"  it(\"Snap.filter.hueRotate\", function () {\n    var str = Snap.filter.hueRotate(180);\n    expect(str).to.be('<feColorMatrix type=\"hueRotate\" values=\"180\"/>');\n    str = Snap.filter.hueRotate(90);\n    expect(str).to.be('<feColorMatrix type=\"hueRotate\" values=\"90\"/>');\n  });","file":"filter.js","skipped":false,"dir":"test"},{"name":"Snap.filter.invert","suites":["Filter methods"],"updatePoint":{"line":38,"column":24},"line":38,"code":"  it(\"Snap.filter.invert\", function () {\n    var str = Snap.filter.invert(0.6);\n    expect(str).to.be('<feComponentTransfer><feFuncR type=\"table\" tableValues=\"0.6 0.4\"/><feFuncG type=\"table\" tableValues=\"0.6 0.4\"/><feFuncB type=\"table\" tableValues=\"0.6 0.4\"/></feComponentTransfer>');\n    str = Snap.filter.invert(1);\n    expect(str).to.be('<feComponentTransfer><feFuncR type=\"table\" tableValues=\"1 0\"/><feFuncG type=\"table\" tableValues=\"1 0\"/><feFuncB type=\"table\" tableValues=\"1 0\"/></feComponentTransfer>');\n  });","file":"filter.js","skipped":false,"dir":"test"},{"name":"Snap.filter.saturate","suites":["Filter methods"],"updatePoint":{"line":44,"column":26},"line":44,"code":"  it(\"Snap.filter.saturate\", function () {\n    var str = Snap.filter.saturate(0.3);\n    expect(str).to.be('<feColorMatrix type=\"saturate\" values=\"0.7\"/>');\n    str = Snap.filter.saturate(1);\n    expect(str).to.be('<feColorMatrix type=\"saturate\" values=\"0\"/>');\n  });","file":"filter.js","skipped":false,"dir":"test"},{"name":"Snap.filter.sepia","suites":["Filter methods"],"updatePoint":{"line":50,"column":23},"line":50,"code":"  it(\"Snap.filter.sepia\", function () {\n    var str = Snap.filter.sepia(0.3);\n    expect(str).to.be('<feColorMatrix type=\"matrix\" values=\"0.8179 0.23070000000000002 0.0567 0 0 0.10470000000000002 0.9058 0.050400000000000014 0 0 0.0816 0.1602 0.7393 0 0 0 0 0 1 0\"/>');\n    str = Snap.filter.sepia(1);\n    expect(str).to.be('<feColorMatrix type=\"matrix\" values=\"0.393 0.769 0.189 0 0 0.349 0.686 0.168 0 0 0.272 0.534 0.131 0 0 0 0 0 1 0\"/>');\n  });","file":"filter.js","skipped":false,"dir":"test"},{"name":"Snap.filter.shadow - dx & dy","suites":["Filter methods"],"updatePoint":{"line":56,"column":34},"line":56,"code":"  it(\"Snap.filter.shadow - dx & dy\", function () {\n    var str = Snap.filter.shadow(5, 5);\n    expect(str).to.be('<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"4\"/><feOffset dx=\"5\" dy=\"5\" result=\"offsetblur\"/><feFlood flood-color=\"#000000\"/><feComposite in2=\"offsetblur\" operator=\"in\"/><feComponentTransfer><feFuncA type=\"linear\" slope=\"1\"/></feComponentTransfer><feMerge><feMergeNode/><feMergeNode in=\"SourceGraphic\"/></feMerge>');\n    str = Snap.filter.shadow(-1, 3);\n    expect(str).to.be('<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"4\"/><feOffset dx=\"-1\" dy=\"3\" result=\"offsetblur\"/><feFlood flood-color=\"#000000\"/><feComposite in2=\"offsetblur\" operator=\"in\"/><feComponentTransfer><feFuncA type=\"linear\" slope=\"1\"/></feComponentTransfer><feMerge><feMergeNode/><feMergeNode in=\"SourceGraphic\"/></feMerge>');\n  });","file":"filter.js","skipped":false,"dir":"test"},{"name":"Snap.filter.shadow - dx & dy, opacity","suites":["Filter methods"],"updatePoint":{"line":62,"column":43},"line":62,"code":"  it(\"Snap.filter.shadow - dx & dy, opacity\", function () {\n    var str = Snap.filter.shadow(5, 5, 5);\n    expect(str).to.be('<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"4\"/><feOffset dx=\"5\" dy=\"5\" result=\"offsetblur\"/><feFlood flood-color=\"#000000\"/><feComposite in2=\"offsetblur\" operator=\"in\"/><feComponentTransfer><feFuncA type=\"linear\" slope=\"5\"/></feComponentTransfer><feMerge><feMergeNode/><feMergeNode in=\"SourceGraphic\"/></feMerge>');\n    str = Snap.filter.shadow(-1, 3, 10);\n    expect(str).to.be('<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"4\"/><feOffset dx=\"-1\" dy=\"3\" result=\"offsetblur\"/><feFlood flood-color=\"#000000\"/><feComposite in2=\"offsetblur\" operator=\"in\"/><feComponentTransfer><feFuncA type=\"linear\" slope=\"10\"/></feComponentTransfer><feMerge><feMergeNode/><feMergeNode in=\"SourceGraphic\"/></feMerge>');\n  });","file":"filter.js","skipped":false,"dir":"test"},{"name":"Snap.filter.shadow - dx & dy, color, opacity","suites":["Filter methods"],"updatePoint":{"line":68,"column":50},"line":68,"code":"  it(\"Snap.filter.shadow - dx & dy, color, opacity\", function () {\n    var str = Snap.filter.shadow(5, 5, '#F00', 1);\n    expect(str).to.be('<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"4\"/><feOffset dx=\"5\" dy=\"5\" result=\"offsetblur\"/><feFlood flood-color=\"#ff0000\"/><feComposite in2=\"offsetblur\" operator=\"in\"/><feComponentTransfer><feFuncA type=\"linear\" slope=\"1\"/></feComponentTransfer><feMerge><feMergeNode/><feMergeNode in=\"SourceGraphic\"/></feMerge>');\n    str = Snap.filter.shadow(-1, 3, 'hsla(128deg, 50%, 50%, 0.8)', .5);\n    expect(str).to.be('<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"4\"/><feOffset dx=\"-1\" dy=\"3\" result=\"offsetblur\"/><feFlood flood-color=\"rgba(64,191,81,0.8)\"/><feComposite in2=\"offsetblur\" operator=\"in\"/><feComponentTransfer><feFuncA type=\"linear\" slope=\"0.5\"/></feComponentTransfer><feMerge><feMergeNode/><feMergeNode in=\"SourceGraphic\"/></feMerge>');\n  });","file":"filter.js","skipped":false,"dir":"test"},{"name":"Snap.filter.shadow - dx & dy, blur, color, opacity","suites":["Filter methods"],"updatePoint":{"line":74,"column":56},"line":74,"code":"  it(\"Snap.filter.shadow - dx & dy, blur, color, opacity\", function () {\n    var str = Snap.filter.shadow(5, 5, 5, '#F00', 1);\n    expect(str).to.be('<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"5\"/><feOffset dx=\"5\" dy=\"5\" result=\"offsetblur\"/><feFlood flood-color=\"#ff0000\"/><feComposite in2=\"offsetblur\" operator=\"in\"/><feComponentTransfer><feFuncA type=\"linear\" slope=\"1\"/></feComponentTransfer><feMerge><feMergeNode/><feMergeNode in=\"SourceGraphic\"/></feMerge>');\n    str = Snap.filter.shadow(-1, 3, 10, 'hsla(128deg, 50%, 50%, 0.8)', .5);\n    expect(str).to.be('<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"10\"/><feOffset dx=\"-1\" dy=\"3\" result=\"offsetblur\"/><feFlood flood-color=\"rgba(64,191,81,0.8)\"/><feComposite in2=\"offsetblur\" operator=\"in\"/><feComponentTransfer><feFuncA type=\"linear\" slope=\"0.5\"/></feComponentTransfer><feMerge><feMergeNode/><feMergeNode in=\"SourceGraphic\"/></feMerge>');\n  });","file":"filter.js","skipped":false,"dir":"test"},{"name":"creates simple gradient","suites":["Gradients"],"updatePoint":{"line":21,"column":29},"line":21,"code":"  it(\"creates simple gradient\", function () {\n    r.attr({\n      fill: \"l(0,0,1,0)#fff-#000\"\n    });\n    var g = getGrad();\n    expect(g).to.not.be(null);\n    expect(g.stops().length).to.be(2);\n    expect(g.stops()[0].attr(\"stop-color\")).to.be(\"rgb(255, 255, 255)\");\n  });","file":"gradients.js","skipped":false,"dir":"test"},{"name":"creates radial gradient","suites":["Gradients"],"updatePoint":{"line":30,"column":29},"line":30,"code":"  it(\"creates radial gradient\", function () {\n    r.attr({\n      fill: \"r()#fff-#000\"\n    });\n    var g = getGrad();\n    expect(g).to.not.be(null);\n    expect(g.stops().length).to.be(2);\n    expect(g.stops()[0].attr(\"stop-color\")).to.be(\"rgb(255, 255, 255)\");\n  });","file":"gradients.js","skipped":false,"dir":"test"},{"name":"returns gradient for .attr(\"fill\") call","suites":["Gradients"],"updatePoint":{"line":39,"column":47},"line":39,"code":"  it(\"returns gradient for .attr(\\\"fill\\\") call\", function () {\n    r.attr({\n      fill: \"l(0,0,1,0)#fff-#fc0:20-#000\"\n    });\n    var g = getGrad(),\n        g2 = r.attr(\"fill\");\n    expect(g).to.be(g2);\n  });","file":"gradients.js","skipped":false,"dir":"test"},{"name":"creates complex gradient","suites":["Gradients"],"updatePoint":{"line":47,"column":30},"line":47,"code":"  it(\"creates complex gradient\", function () {\n    r.attr({\n      fill: \"l(0,0,1,0)#fff-#fc0:20-#000\"\n    });\n    var g = getGrad();\n    expect(g).to.not.be(null);\n    expect(g.stops().length).to.be(3);\n    expect(g.stops()[0].attr(\"stop-color\")).to.be(\"rgb(255, 255, 255)\");\n    expect(g.stops()[1].attr(\"offset\")).to.be(\"20%\");\n  });","file":"gradients.js","skipped":false,"dir":"test"},{"name":"updates simple gradient","suites":["Gradients"],"updatePoint":{"line":57,"column":29},"line":57,"code":"  it(\"updates simple gradient\", function () {\n    r.attr({\n      fill: \"l(0,0,1,0)#fff-#000\"\n    });\n    var g = getGrad();\n    expect(g).to.not.be(null);\n    expect(g.stops().length).to.be(2);\n    expect(g.stops()[0].attr(\"stop-color\")).to.be(\"rgb(255, 255, 255)\");\n    g.setStops(\"#000-#fff\");\n    expect(g.stops().length).to.be(2);\n    expect(g.stops()[0].attr(\"stop-color\")).to.be(\"rgb(0, 0, 0)\");\n    g.setStops(\"#000-red-#fff\");\n    expect(g.stops().length).to.be(3);\n    expect(g.stops()[1].attr(\"stop-color\")).to.be(\"rgb(255, 0, 0)\");\n  });","file":"gradients.js","skipped":false,"dir":"test"},{"name":"adds stops to the gradient","suites":["Gradients"],"updatePoint":{"line":72,"column":32},"line":72,"code":"  it(\"adds stops to the gradient\", function () {\n    r.attr({\n      fill: \"l(0,0,1,0)#fff-#000\"\n    });\n    var g = getGrad();\n    expect(g).to.not.be(null);\n    expect(g.stops().length).to.be(2);\n    expect(g.stops()[0].attr(\"stop-color\")).to.be(\"rgb(255, 255, 255)\");\n    g.addStop(\"red\", 20);\n    expect(g.stops().length).to.be(3);\n    expect(g.stops()[1].attr(\"stop-color\")).to.be(\"rgb(255, 0, 0)\");\n    expect(g.stops()[1].attr(\"offset\")).to.be(\"20%\");\n  });","file":"gradients.js","skipped":false,"dir":"test"},{"name":"Matrix.add - matrix","suites":["Matrix methods"],"updatePoint":{"line":2,"column":25},"line":2,"code":"  it(\"Matrix.add - matrix\", function () {\n    var matrix1 = new Snap.Matrix(1, 0, 0, 1, 5, 5);\n    var matrix2 = new Snap.Matrix(1, 0, 0, 1, 10, 10);\n    var result = matrix1.add(matrix2);\n    expect(result).to.eql({\n      a: 1,\n      b: 0,\n      c: 0,\n      d: 1,\n      e: 15,\n      f: 15\n    }); // add two 90 degree rotations\n\n    var matrix3 = new Snap.Matrix(0, 1, -1, 0, 0, 0);\n    var matrix4 = new Snap.Matrix(0, 1, -1, 0, 0, 0);\n    result = matrix3.add(matrix4);\n    expect(result).to.eql({\n      a: -1,\n      b: 0,\n      c: 0,\n      d: -1,\n      e: 0,\n      f: 0\n    });\n  });","file":"matrix.js","skipped":false,"dir":"test"},{"name":"Matrix.add - numbers","suites":["Matrix methods"],"updatePoint":{"line":27,"column":26},"line":27,"code":"  it(\"Matrix.add - numbers\", function () {\n    var matrix1 = new Snap.Matrix(1, 0, 0, 1, 5, 5);\n    var result = matrix1.add(1, 0, 0, 1, 10, 10);\n    expect(result).to.eql({\n      a: 1,\n      b: 0,\n      c: 0,\n      d: 1,\n      e: 15,\n      f: 15\n    });\n  });","file":"matrix.js","skipped":false,"dir":"test"},{"name":"Matrix.clone","suites":["Matrix methods"],"updatePoint":{"line":39,"column":18},"line":39,"code":"  it(\"Matrix.clone\", function () {\n    var matrix1 = new Snap.Matrix(1, 2, 3, 4, 5, 6);\n    var clone = matrix1.clone();\n    expect(clone).to.not.be(matrix1);\n    expect(clone).to.eql({\n      a: 1,\n      b: 2,\n      c: 3,\n      d: 4,\n      e: 5,\n      f: 6\n    });\n  });","file":"matrix.js","skipped":false,"dir":"test"},{"name":"Matrix.invert","suites":["Matrix methods"],"updatePoint":{"line":52,"column":19},"line":52,"code":"  it(\"Matrix.invert\", function () {\n    var matrix1 = new Snap.Matrix(1, 2, 3, 4, 5, 6);\n    var inverse = matrix1.invert();\n    expect(inverse).to.eql({\n      a: -2,\n      b: 1,\n      c: 1.5,\n      d: -0.5,\n      e: 1,\n      f: -2\n    });\n  });","file":"matrix.js","skipped":false,"dir":"test"},{"name":"Matrix.rotate","suites":["Matrix methods"],"updatePoint":{"line":64,"column":19},"line":64,"code":"  it(\"Matrix.rotate\", function () {\n    var matrix = new Snap.Matrix(1, 0, 0, 1, 0, 0);\n    matrix.rotate(45, 0, 0);\n    expect(+matrix.a.toFixed(3)).to.be(0.707);\n    expect(+matrix.b.toFixed(3)).to.be(0.707);\n    expect(+matrix.c.toFixed(3)).to.be(-0.707);\n    expect(+matrix.d.toFixed(3)).to.be(0.707);\n    expect(+matrix.e.toFixed(3)).to.be(0);\n    expect(+matrix.f.toFixed(3)).to.be(0);\n  });","file":"matrix.js","skipped":false,"dir":"test"},{"name":"Matrix.scale - x","suites":["Matrix methods"],"updatePoint":{"line":74,"column":22},"line":74,"code":"  it(\"Matrix.scale - x\", function () {\n    var matrix = new Snap.Matrix(1, 0, 0, 1, 20, 30);\n    matrix.scale(2);\n    expect(matrix).to.eql({\n      a: 2,\n      b: 0,\n      c: 0,\n      d: 2,\n      e: 20,\n      f: 30\n    });\n    matrix.scale(0.5);\n    expect(matrix).to.eql({\n      a: 1,\n      b: 0,\n      c: 0,\n      d: 1,\n      e: 20,\n      f: 30\n    });\n  });","file":"matrix.js","skipped":false,"dir":"test"},{"name":"Matrix.scale - x, y","suites":["Matrix methods"],"updatePoint":{"line":95,"column":25},"line":95,"code":"  it(\"Matrix.scale - x, y\", function () {\n    var matrix = new Snap.Matrix(1, 0, 0, 1, 20, 30);\n    matrix.scale(2, 3);\n    expect(matrix).to.eql({\n      a: 2,\n      b: 0,\n      c: 0,\n      d: 3,\n      e: 20,\n      f: 30\n    });\n    matrix.scale(0.5, 1);\n    expect(matrix).to.eql({\n      a: 1,\n      b: 0,\n      c: 0,\n      d: 3,\n      e: 20,\n      f: 30\n    });\n  });","file":"matrix.js","skipped":false,"dir":"test"},{"name":"Matrix.scale - x, y, cx, cy","suites":["Matrix methods"],"updatePoint":{"line":116,"column":33},"line":116,"code":"  it(\"Matrix.scale - x, y, cx, cy\", function () {\n    var matrix = new Snap.Matrix(1, 0, 0, 1, 20, 30);\n    matrix.scale(2, 3, 5, -5);\n    expect(matrix).to.eql({\n      a: 2,\n      b: 0,\n      c: 0,\n      d: 3,\n      e: 15,\n      f: 40\n    });\n  });","file":"matrix.js","skipped":false,"dir":"test"},{"name":"Matrix.split","suites":["Matrix methods"],"updatePoint":{"line":128,"column":18},"line":128,"code":"  it(\"Matrix.split\", function () {\n    var matrix = new Snap.Matrix(1, 0, 0, 1, 0, 0);\n    var result = matrix.split();\n    expect(result.dx).to.be(0);\n    expect(result.dy).to.be(0);\n    expect(result.scalex).to.be(1);\n    expect(result.scaley).to.be(1);\n    expect(result.shear).to.be(0);\n    expect(result.rotate).to.be(0);\n    expect(result.isSimple).to.be(true);\n    matrix = new Snap.Matrix(1.5, 0, 0, 0.5, 20, 25);\n    result = matrix.split();\n    expect(result.dx).to.be(20);\n    expect(result.dy).to.be(25);\n    expect(result.scalex).to.be(1.5);\n    expect(result.scaley).to.be(0.5);\n    expect(result.shear).to.be(0);\n    expect(result.rotate).to.be(0);\n    expect(result.isSimple).to.be(true);\n  });","file":"matrix.js","skipped":false,"dir":"test"},{"name":"Matrix.toTransformString","suites":["Matrix methods"],"updatePoint":{"line":148,"column":30},"line":148,"code":"  it(\"Matrix.toTransformString\", function () {\n    var matrix = new Snap.Matrix(1.5, 0, 0, 0.5, 20, 25);\n    var str = matrix.toTransformString();\n    var s = Snap(10, 10);\n    var rect = s.rect(0, 0, 10, 20);\n    rect.transform(str);\n    var transform = rect.transform();\n    expect(transform.localMatrix).to.eql({\n      a: 1.5,\n      b: 0,\n      c: 0,\n      d: 0.5,\n      e: 20,\n      f: 25\n    });\n  });","file":"matrix.js","skipped":false,"dir":"test"},{"name":"Matrix.translate","suites":["Matrix methods"],"updatePoint":{"line":164,"column":22},"line":164,"code":"  it(\"Matrix.translate\", function () {\n    var matrix = new Snap.Matrix(1, 0, 0, 1, 20, 30);\n    matrix.translate(10, -10);\n    expect(matrix).to.eql({\n      a: 1,\n      b: 0,\n      c: 0,\n      d: 1,\n      e: 30,\n      f: 20\n    });\n    matrix.translate(-1, -2);\n    expect(matrix).to.eql({\n      a: 1,\n      b: 0,\n      c: 0,\n      d: 1,\n      e: 29,\n      f: 18\n    });\n  });","file":"matrix.js","skipped":false,"dir":"test"},{"name":"Matrix.skewX","suites":["Matrix methods"],"updatePoint":{"line":185,"column":18},"line":185,"code":"  it(\"Matrix.skewX\", function () {\n    var matrix = new Snap.Matrix(1, 0, 0, 1, 20, 30);\n    matrix.skewX(45);\n    expect(matrix).to.eql({\n      a: 1,\n      b: 0,\n      c: 1,\n      d: 1,\n      e: 20,\n      f: 30\n    });\n  });","file":"matrix.js","skipped":false,"dir":"test"},{"name":"Matrix.skewY","suites":["Matrix methods"],"updatePoint":{"line":197,"column":18},"line":197,"code":"  it(\"Matrix.skewY\", function () {\n    var matrix = new Snap.Matrix(1, 0, 0, 1, 20, 30);\n    matrix.skewY(45);\n    expect(matrix).to.eql({\n      a: 1,\n      b: 1,\n      c: 0,\n      d: 1,\n      e: 20,\n      f: 30\n    });\n  });","file":"matrix.js","skipped":false,"dir":"test"},{"name":"Matrix.skew","suites":["Matrix methods"],"updatePoint":{"line":209,"column":17},"line":209,"code":"  it(\"Matrix.skew\", function () {\n    var matrix = new Snap.Matrix(1, 0, 0, 1, 20, 30);\n    matrix.skew(45, -45);\n    expect(matrix).to.eql({\n      a: 1,\n      b: -1,\n      c: 1,\n      d: 1,\n      e: 20,\n      f: 30\n    });\n  });","file":"matrix.js","skipped":false,"dir":"test"},{"name":"Matrix.x","suites":["Matrix methods"],"updatePoint":{"line":221,"column":14},"line":221,"code":"  it(\"Matrix.x\", function () {\n    var matrix = new Snap.Matrix(1, 0, 0, 1, 20, 30);\n    var result = matrix.x(10, -10);\n    expect(result).to.be(30);\n  });","file":"matrix.js","skipped":false,"dir":"test"},{"name":"Matrix.y","suites":["Matrix methods"],"updatePoint":{"line":226,"column":14},"line":226,"code":"  it(\"Matrix.y\", function () {\n    var matrix = new Snap.Matrix(1, 0, 0, 1, 20, 30);\n    var result = matrix.y(10, -10);\n    expect(result).to.be(20);\n  });","file":"matrix.js","skipped":false,"dir":"test"},{"name":"mina","suites":["Mina methods"],"updatePoint":{"line":28,"column":10},"line":28,"code":"  it(\"mina\", function () {\n    var n;\n    var animDescriptor = mina(10, 20, 0, 1000, function (newN) {\n      n = newN;\n    }, function () {});\n    validateDescriptor(animDescriptor);\n    expect(animDescriptor.start).to.be(10);\n    expect(animDescriptor.end).to.be(20);\n    expect(animDescriptor.b).to.be(0);\n    expect(animDescriptor.s).to.be(0);\n    expect(animDescriptor.dur).to.be(1000);\n    expect(animDescriptor.easing).to.be(mina.linear);\n  });","file":"mina.js","skipped":false,"dir":"test"},{"name":"mina.getById","suites":["Mina methods"],"updatePoint":{"line":41,"column":18},"line":41,"code":"  it(\"mina.getById\", function () {\n    var anim1 = mina(10, 20, 0, 1000, function () {}, function () {});\n    var anim2 = mina(10, 20, 0, 1000, function () {}, function () {});\n    expect(mina.getById(anim1.id)).to.be(anim1);\n    expect(mina.getById(anim2.id)).to.be(anim2);\n  });","file":"mina.js","skipped":false,"dir":"test"},{"name":"mina.time","suites":["Mina methods"],"updatePoint":{"line":47,"column":15},"line":47,"code":"  it(\"mina.time\", function () {\n    var now = new Date().getTime();\n    expect(mina.time()).to.be(now);\n  });","file":"mina.js","skipped":false,"dir":"test"},{"name":"mina.backin","suites":["Mina methods"],"updatePoint":{"line":51,"column":17},"line":51,"code":"  it(\"mina.backin\", function () {\n    expect(mina.backin(0)).to.be(0);\n    expect(mina.backin(1)).to.be(1);\n  });","file":"mina.js","skipped":false,"dir":"test"},{"name":"mina.backout","suites":["Mina methods"],"updatePoint":{"line":55,"column":18},"line":55,"code":"  it(\"mina.backout\", function () {\n    expect(mina.backout(0)).to.be(0);\n    expect(mina.backout(1)).to.be(1);\n  });","file":"mina.js","skipped":false,"dir":"test"},{"name":"mina.bounce","suites":["Mina methods"],"updatePoint":{"line":59,"column":17},"line":59,"code":"  it(\"mina.bounce\", function () {\n    expect(mina.bounce(0)).to.be(0);\n    expect(mina.bounce(1)).to.be(1);\n  });","file":"mina.js","skipped":false,"dir":"test"},{"name":"mina.easein","suites":["Mina methods"],"updatePoint":{"line":63,"column":17},"line":63,"code":"  it(\"mina.easein\", function () {\n    expect(mina.easein(0)).to.be(0);\n    expect(mina.easein(1)).to.be(1);\n  });","file":"mina.js","skipped":false,"dir":"test"},{"name":"mina.easeinout","suites":["Mina methods"],"updatePoint":{"line":67,"column":20},"line":67,"code":"  it(\"mina.easeinout\", function () {\n    expect(mina.easeinout(0)).to.be(0);\n    expect(mina.easeinout(1)).to.be(1);\n  });","file":"mina.js","skipped":false,"dir":"test"},{"name":"mina.easeout","suites":["Mina methods"],"updatePoint":{"line":71,"column":18},"line":71,"code":"  it(\"mina.easeout\", function () {\n    expect(mina.easeout(0)).to.be(0);\n    expect(mina.easeout(1)).to.be(1);\n  });","file":"mina.js","skipped":false,"dir":"test"},{"name":"mina.elastic","suites":["Mina methods"],"updatePoint":{"line":75,"column":18},"line":75,"code":"  it(\"mina.elastic\", function () {\n    expect(mina.elastic(0)).to.be(0);\n    expect(mina.elastic(1)).to.be(1);\n  });","file":"mina.js","skipped":false,"dir":"test"},{"name":"mina.linear","suites":["Mina methods"],"updatePoint":{"line":79,"column":17},"line":79,"code":"  it(\"mina.linear\", function () {\n    expect(mina.linear(0)).to.be(0);\n    expect(mina.linear(0.2)).to.be(0.2);\n    expect(mina.linear(0.7)).to.be(0.7);\n    expect(mina.linear(1)).to.be(1);\n  });","file":"mina.js","skipped":false,"dir":"test"},{"name":"creates simple paper 20 × 10","suites":["Check for Paper Creation"],"updatePoint":{"line":2,"column":34},"line":2,"code":"  it(\"creates simple paper 20 × 10\", function () {\n    var s = Snap(20, 10);\n    var S = s.node;\n    expect(S).to.not.be(null);\n    expect(S.getAttribute(\"width\")).to.be(\"20\");\n    expect(S.getAttribute(\"height\")).to.be(\"10\");\n    s.remove();\n  });","file":"paper.js","skipped":false,"dir":"test"},{"name":"removal of paper","suites":["Check for Paper Creation"],"updatePoint":{"line":10,"column":22},"line":10,"code":"  it(\"removal of paper\", function () {\n    var s = Snap(20, 10);\n    var S = s.node;\n    expect(S).to.not.be(null);\n    s.remove();\n    S = document.querySelectorAll(\"svg\").length;\n    expect(S).to.be(1);\n  });","file":"paper.js","skipped":false,"dir":"test"},{"name":"creates simple paper 20% × 10em","suites":["Check for Paper Creation"],"updatePoint":{"line":18,"column":37},"line":18,"code":"  it(\"creates simple paper 20% × 10em\", function () {\n    var s = Snap(\"20%\", \"10em\");\n    var S = s.node;\n    expect(S).to.not.be(null);\n    expect(S.getAttribute(\"width\")).to.be(\"20%\");\n    expect(S.getAttribute(\"height\")).to.be(\"10em\");\n    s.remove();\n  });","file":"paper.js","skipped":false,"dir":"test"},{"name":"converts existing SVG element to paper","suites":["Check for Paper Creation"],"updatePoint":{"line":26,"column":44},"line":26,"code":"  it(\"converts existing SVG element to paper\", function () {\n    var S = document.getElementById(\"svgroot\");\n    var s = Snap(S);\n    expect(document.querySelector(\"#svgroot circle\")).to.be(null);\n    var c = s.circle(10, 20, 5);\n    expect(document.querySelectorAll(\"#svgroot circle\").length).to.be(1);\n    c.remove();\n  });","file":"paper.js","skipped":false,"dir":"test"},{"name":"converts existing SVG element to paper (as query)","suites":["Check for Paper Creation"],"updatePoint":{"line":34,"column":55},"line":34,"code":"  it(\"converts existing SVG element to paper (as query)\", function () {\n    var S = document.getElementById(\"svgroot\");\n    var s = Snap(\"#svgroot\");\n    expect(document.querySelector(\"#svgroot circle\")).to.be(null);\n    var c = s.circle(10, 20, 5);\n    expect(document.querySelectorAll(\"#svgroot circle\").length).to.be(1);\n    c.remove();\n  });","file":"paper.js","skipped":false,"dir":"test"},{"name":"Paper.svg","suites":["Paper methods"],"updatePoint":{"line":58,"column":15},"line":58,"code":"  it(\"Paper.svg\", function () {\n    var c = paper.svg();\n    expect(c.node.nodeName).to.be(\"svg\");\n    expect(c.node.parentNode).to.be(paper.node);\n  });","file":"paper.js","skipped":false,"dir":"test"},{"name":"Paper.svg(x, y)","suites":["Paper methods"],"updatePoint":{"line":63,"column":21},"line":63,"code":"  it(\"Paper.svg(x, y)\", function () {\n    var c = paper.svg(100, 200);\n    expect(c.node.nodeName).to.be(\"svg\");\n    expect(c.node.x.baseVal.value).to.be(100);\n    expect(c.node.y.baseVal.value).to.be(200);\n    expect(c.node.parentNode).to.be(paper.node);\n  });","file":"paper.js","skipped":false,"dir":"test"},{"name":"Paper.svg(x, y, w, h, viewbox)","suites":["Paper methods"],"updatePoint":{"line":70,"column":36},"line":70,"code":"  it(\"Paper.svg(x, y, w, h, viewbox)\", function () {\n    var c = paper.svg(100, 200, 300, 400, 10, 20, 30, 40);\n    expect(c.node.nodeName).to.be(\"svg\");\n    expect(c.node.x.baseVal.value).to.be(100);\n    expect(c.node.y.baseVal.value).to.be(200);\n    expect(c.node.width.baseVal.value).to.be(300);\n    expect(c.node.height.baseVal.value).to.be(400);\n    expect(c.node.getAttribute(\"viewBox\")).to.be(\"10 20 30 40\");\n    expect(c.node.parentNode).to.be(paper.node);\n  });","file":"paper.js","skipped":false,"dir":"test"},{"name":"Paper.el","suites":["Paper methods"],"updatePoint":{"line":80,"column":14},"line":80,"code":"  it(\"Paper.el\", function () {\n    var c = paper.el(\"circle\");\n    expect(c.node.nodeName).to.be(\"circle\");\n    expect(c.node.parentNode).to.be(paper.node);\n  });","file":"paper.js","skipped":false,"dir":"test"},{"name":"Paper.filter","suites":["Paper methods"],"updatePoint":{"line":85,"column":18},"line":85,"code":"  it(\"Paper.filter\", function () {\n    var filter = paper.filter('<feGaussianBlur stdDeviation=\"2\"/>');\n    expect(filter.node.nodeName).to.be('filter');\n    var child = filter.node.firstChild;\n    expect(child).to.be.ok();\n    expect(child.nodeName).to.be('feGaussianBlur');\n    expect(child.getAttribute(\"stdDeviation\")).to.be('2');\n  });","file":"paper.js","skipped":false,"dir":"test"},{"name":"Paper.gradient - linear","suites":["Paper methods"],"updatePoint":{"line":93,"column":29},"line":93,"code":"  it(\"Paper.gradient - linear\", function () {\n    var gradient = paper.gradient(\"l(0, 0, 1, 1)#000-#f00-#fff\");\n    expect(gradient.node.nodeName).to.be('linearGradient');\n    expect(gradient.node.getAttribute('x1')).to.be(\"0\");\n    expect(gradient.node.getAttribute('y1')).to.be(\"0\");\n    expect(gradient.node.getAttribute('x2')).to.be(\"1\");\n    expect(gradient.node.getAttribute('y2')).to.be(\"1\");\n    var stops = gradient.node.querySelectorAll(\"stop\");\n    expect(stops.length).to.be(3);\n  });","file":"paper.js","skipped":false,"dir":"test"},{"name":"Paper.gradient - radial","suites":["Paper methods"],"updatePoint":{"line":103,"column":29},"line":103,"code":"  it(\"Paper.gradient - radial\", function () {\n    var gradient = paper.gradient(\"r(0.3, 0.4, 0.5)#000-#fff\");\n    expect(gradient.node.nodeName).to.be('radialGradient');\n    expect(gradient.node.getAttribute('cx')).to.be(\"0.3\");\n    expect(gradient.node.getAttribute('cy')).to.be(\"0.4\");\n    expect(gradient.node.getAttribute('r')).to.be(\"0.5\");\n    var stops = gradient.node.querySelectorAll(\"stop\");\n    expect(stops.length).to.be(2);\n  });","file":"paper.js","skipped":false,"dir":"test"},{"name":"Paper.image","suites":["Paper methods"],"updatePoint":{"line":112,"column":17},"line":112,"code":"  it(\"Paper.image\", function () {\n    var image = paper.image('#', 10, 20, 30, 40);\n    var img = document.querySelector(\"image\");\n    expect(img).to.not.be(null);\n    expect(img.getAttribute(\"x\")).to.be(\"10\");\n    expect(img.getAttribute(\"y\")).to.be(\"20\");\n    expect(img.getAttribute(\"width\")).to.be(\"30\");\n    expect(img.getAttribute(\"height\")).to.be(\"40\");\n  });","file":"paper.js","skipped":false,"dir":"test"},{"name":"Paper.toString","suites":["Paper methods"],"updatePoint":{"line":121,"column":20},"line":121,"code":"  it(\"Paper.toString\", function () {\n    paper.circle(10, 20, 30);\n    var str = paper.toString();\n    expect(str).to.match(/.*?<svg.*?>.*?<circle.*?<\\/svg>/);\n  });","file":"paper.js","skipped":false,"dir":"test"},{"name":"Paper.getBBox","suites":["Paper methods"],"updatePoint":{"line":126,"column":19},"line":126,"code":"  it(\"Paper.getBBox\", function () {\n    paper.circle(50, 50, 30);\n    var bb = paper.getBBox();\n    expect(bb.x).to.be(20);\n    expect(bb.y).to.be(20);\n    expect(bb.width).to.be(60);\n    expect(bb.height).to.be(60);\n  });","file":"paper.js","skipped":false,"dir":"test"},{"name":"Snap.path.getTotalLength","suites":["Path methods"],"updatePoint":{"line":2,"column":30},"line":2,"code":"  it(\"Snap.path.getTotalLength\", function () {\n    expect(+Snap.path.getTotalLength(\"M0,0 100,0\").toFixed(2)).to.be(100);\n  });","file":"path.js","skipped":false,"dir":"test"},{"name":"Snap.path.getPointAtLength","suites":["Path methods"],"updatePoint":{"line":5,"column":32},"line":5,"code":"  it(\"Snap.path.getPointAtLength\", function () {\n    expect(Snap.path.getPointAtLength(\"M0,0 100,0\", 50)).to.eql({\n      x: 50,\n      y: 0,\n      m: {\n        x: 25,\n        y: 0\n      },\n      n: {\n        x: 75,\n        y: 0\n      },\n      start: {\n        x: 0,\n        y: 0\n      },\n      end: {\n        x: 100,\n        y: 0\n      },\n      alpha: 180\n    });\n  });","file":"path.js","skipped":false,"dir":"test"},{"name":"Snap.path.getSubpath","suites":["Path methods"],"updatePoint":{"line":28,"column":26},"line":28,"code":"  it(\"Snap.path.getSubpath\", function () {\n    expect(Snap.path.getSubpath(\"M0,0 100,0\", 10, 90)).to.be(\"M9.995,0C29.153,0,70.839,0,90,0\");\n    expect(Snap.path.getSubpath(\"M0,0 100,0\", 0, 90)).to.be(\"M0,0C0,0,64.674,0,90,0\");\n    expect(Snap.path.getSubpath(\"M0,0 100,0\", 10, 120)).to.be(\"M10,0C35.326,0,100,0,100,0\");\n  });","file":"path.js","skipped":false,"dir":"test"},{"name":"Snap.path.findDotsAtSegment","suites":["Path methods"],"updatePoint":{"line":33,"column":33},"line":33,"code":"  it(\"Snap.path.findDotsAtSegment\", function () {\n    expect(Snap.path.findDotsAtSegment(0, 0, 0, 0, 100, 0, 100, 0, .5)).to.eql({\n      x: 50,\n      y: 0,\n      m: {\n        x: 25,\n        y: 0\n      },\n      n: {\n        x: 75,\n        y: 0\n      },\n      start: {\n        x: 0,\n        y: 0\n      },\n      end: {\n        x: 100,\n        y: 0\n      },\n      alpha: 180\n    });\n  });","file":"path.js","skipped":false,"dir":"test"},{"name":"Snap.path.bezierBBox - params","suites":["Path methods"],"updatePoint":{"line":56,"column":35},"line":56,"code":"  it(\"Snap.path.bezierBBox - params\", function () {\n    var bbox = Snap.path.bezierBBox(10, 10, 10, 20, 110, 0, 110, 10);\n    expect(bbox.cx).to.be(60);\n    expect(bbox.cy).to.be(10);\n    expect(bbox.x).to.be(10);\n    expect(bbox.w).to.be(100);\n    expect(bbox.width).to.be(100);\n    expect(bbox.x2).to.be(110);\n  });","file":"path.js","skipped":false,"dir":"test"},{"name":"Snap.path.bezierBBox - array","suites":["Path methods"],"updatePoint":{"line":65,"column":34},"line":65,"code":"  it(\"Snap.path.bezierBBox - array\", function () {\n    var bbox = Snap.path.bezierBBox([10, 10, 10, 20, 110, 0, 110, 10]);\n    expect(bbox.cx).to.be(60);\n    expect(bbox.cy).to.be(10);\n    expect(bbox.x).to.be(10);\n    expect(bbox.w).to.be(100);\n    expect(bbox.width).to.be(100);\n    expect(bbox.x2).to.be(110);\n  });","file":"path.js","skipped":false,"dir":"test"},{"name":"Snap.path.getBBox","suites":["Path methods"],"updatePoint":{"line":74,"column":23},"line":74,"code":"  it(\"Snap.path.getBBox\", function () {\n    // same as 10,20,30,40 rect\n    var bbox = Snap.path.getBBox(\"M10,20h30v40h-30z\");\n    expect(bbox.x).to.eql(10);\n    expect(bbox.y).to.eql(20);\n    expect(bbox.width).to.eql(30);\n    expect(bbox.height).to.eql(40);\n    expect(bbox.x2).to.eql(10 + 30);\n    expect(bbox.y2).to.eql(20 + 40);\n  });","file":"path.js","skipped":false,"dir":"test"},{"name":"Snap.path.isPointInsideBBox","suites":["Path methods"],"updatePoint":{"line":84,"column":33},"line":84,"code":"  it(\"Snap.path.isPointInsideBBox\", function () {\n    expect(Snap.path.isPointInsideBBox({\n      x: 0,\n      y: 0,\n      width: 10,\n      height: 10\n    }, 5, 5)).to.be(true);\n    expect(Snap.path.isPointInsideBBox({\n      x: 0,\n      y: 0,\n      width: 10,\n      height: 10\n    }, 10, 5)).to.be(true);\n    expect(Snap.path.isPointInsideBBox({\n      x: 0,\n      y: 0,\n      width: 10,\n      height: 10\n    }, 10, 10)).to.be(true);\n  });","file":"path.js","skipped":false,"dir":"test"},{"name":"Snap.path.isBBoxIntersect","suites":["Path methods"],"updatePoint":{"line":104,"column":31},"line":104,"code":"  it(\"Snap.path.isBBoxIntersect\", function () {\n    expect(Snap.path.isBBoxIntersect({\n      x: 0,\n      y: 0,\n      width: 10,\n      height: 10\n    }, {\n      x: 5,\n      y: 5,\n      width: 15,\n      height: 15\n    })).to.be(true);\n    expect(Snap.path.isBBoxIntersect({\n      x: 0,\n      y: 0,\n      width: 10,\n      height: 10\n    }, {\n      x: 5,\n      y: 5,\n      width: 7,\n      height: 7\n    })).to.be(true);\n    expect(Snap.path.isBBoxIntersect({\n      x: 0,\n      y: 0,\n      width: 10,\n      height: 10\n    }, {\n      x: 15,\n      y: 15,\n      width: 10,\n      height: 10\n    })).to.be(false);\n  });","file":"path.js","skipped":false,"dir":"test"},{"name":"Snap.path.toAbsolute","suites":["Path methods"],"updatePoint":{"line":139,"column":26},"line":139,"code":"  it(\"Snap.path.toAbsolute\", function () {\n    var relPath = \"M 10 10\" + \"h 40\" + \"v 30\" + \"h -40\" + \"l 0 -30\" + \"m 0 40\" + \"l 30 0\" + \"l 0 40\" + \"l -30 0\" + \"m 0 10\" + \"c 20 20 40 20 40 0\" + \"m -40 40\" + \"c 10 -25 20 -25 30 0\" + \"s 10 25 20 0\" + \"m 20 -130\" + \"q 30 30 60 0\" + \"m -60 40\" + \"q 10 20 20 0\" + \"t 20 0\" + \"m -40 30\" + \"a 10 10 0 0 0 40 0\";\n    var absPath = Snap.path.toAbsolute(relPath);\n    var i = 0;\n\n    var checkNext = function (arr) {\n      expect(absPath[i++]).to.eql(arr);\n    };\n\n    checkNext(['M', 10, 10]);\n    checkNext(['H', 50]);\n    checkNext(['V', 40]);\n    checkNext(['H', 10]);\n    checkNext(['L', 10, 10]);\n    checkNext(['M', 10, 50]);\n    checkNext(['L', 40, 50]);\n    checkNext(['L', 40, 90]);\n    checkNext(['L', 10, 90]);\n    checkNext(['M', 10, 100]);\n    checkNext(['C', 30, 120, 50, 120, 50, 100]);\n    checkNext(['M', 10, 140]);\n    checkNext(['C', 20, 115, 30, 115, 40, 140]);\n    checkNext(['S', 50, 165, 60, 140]);\n    checkNext(['M', 80, 10]);\n    checkNext(['Q', 110, 40, 140, 10]);\n    checkNext(['M', 80, 50]);\n    checkNext(['Q', 90, 70, 100, 50]);\n    checkNext(['T', 120, 50]);\n    checkNext(['M', 80, 80]);\n    checkNext(['A', 10, 10, 0, 0, 0, 120, 80]);\n  });","file":"path.js","skipped":false,"dir":"test"},{"name":"Snap.path.toRelative","suites":["Path methods"],"updatePoint":{"line":170,"column":26},"line":170,"code":"  it(\"Snap.path.toRelative\", function () {\n    var absPath = \"M10 10 H 50 V 40 H 10 L 10 10\" + \"M10 50 L 40 50 L 40 90 L 10 90\" + \"M10 100 C 30 120, 50 120, 50 100\" + \"M10 140 C 20 115, 30, 115, 40 140 S 50 165, 60 140\" + \"M80 10 Q 110 40, 140 10\" + \"M80 50 Q 90 70, 100 50 T 120 50\" + \"M80 80 A 10 10 0 0 0 120 80\";\n    var relPath = Snap.path.toRelative(absPath);\n    var i = 0;\n\n    var checkNext = function (arr) {\n      expect(relPath[i++]).to.eql(arr);\n    };\n\n    checkNext(['M', 10, 10]);\n    checkNext(['h', 40]);\n    checkNext(['v', 30]);\n    checkNext(['h', -40]);\n    checkNext(['l', 0, -30]);\n    checkNext(['m', 0, 40]);\n    checkNext(['l', 30, 0]);\n    checkNext(['l', 0, 40]);\n    checkNext(['l', -30, 0]);\n    checkNext(['m', 0, 10]);\n    checkNext(['c', 20, 20, 40, 20, 40, 0]);\n    checkNext(['m', -40, 40]);\n    checkNext(['c', 10, -25, 20, -25, 30, 0]);\n    checkNext(['s', 10, 25, 20, 0]);\n    checkNext(['m', 20, -130]);\n    checkNext(['q', 30, 30, 60, 0]);\n    checkNext(['m', -60, 40]);\n    checkNext(['q', 10, 20, 20, 0]);\n    checkNext(['t', 20, 0]);\n    checkNext(['m', -40, 30]);\n    checkNext(['a', 10, 10, 0, 0, 0, 40, 0]);\n  });","file":"path.js","skipped":false,"dir":"test"},{"name":"Snap.path.toCubic","suites":["Path methods"],"updatePoint":{"line":201,"column":23},"line":201,"code":"  it(\"Snap.path.toCubic\", function () {\n    var absPath = \"M10 10 H 50 V 40 H 10 L 10 10\" + \"M10 50 L 40 50 L 40 90 L 10 90\" + \"M10 100 C 30 120, 50 120, 50 100\" + \"M10 140 C 20 115, 30, 115, 40 140 S 50 165, 60 140\" + \"M80 10 Q 110 40, 140 10\" + \"M80 50 Q 90 70, 100 50 T 120 50\" + \"M80 80 A 10 10 0 0 0 120 80\";\n    var relPath = \"M 10 10\" + \"h 40\" + \"v 30\" + \"h -40\" + \"l 0 -30\" + \"m 0 40\" + \"l 30 0\" + \"l 0 40\" + \"l -30 0\" + \"m 0 10\" + \"c 20 20 40 20 40 0\" + \"m -40 40\" + \"c 10 -25 20 -25 30 0\" + \"s 10 25 20 0\" + \"m 20 -130\" + \"q 30 30 60 0\" + \"m -60 40\" + \"q 10 20 20 0\" + \"t 20 0\" + \"m -40 30\" + \"a 10 10 0 0 0 40 0\";\n    var cubicPathFromAbs = Snap.path.toCubic(absPath);\n    var cubicPathFromRel = Snap.path.toCubic(relPath);\n    var i = 0;\n\n    var checkNext = function (arr) {\n      expect(cubicPathFromAbs[i]).to.eql(arr);\n      expect(cubicPathFromRel[i]).to.eql(arr);\n      i++;\n    };\n\n    checkNext(['M', 10, 10]);\n    checkNext(['C', 10, 10, 50, 10, 50, 10]);\n    checkNext(['C', 50, 10, 50, 40, 50, 40]);\n    checkNext(['C', 50, 40, 10, 40, 10, 40]);\n    checkNext(['C', 10, 40, 10, 10, 10, 10]);\n    checkNext(['M', 10, 50]);\n    checkNext(['C', 10, 50, 40, 50, 40, 50]);\n    checkNext(['C', 40, 50, 40, 90, 40, 90]);\n    checkNext(['C', 40, 90, 10, 90, 10, 90]);\n    checkNext(['M', 10, 100]);\n    checkNext(['C', 30, 120, 50, 120, 50, 100]);\n    checkNext(['M', 10, 140]);\n    checkNext(['C', 20, 115, 30, 115, 40, 140]);\n    checkNext(['C', 50, 165, 50, 165, 60, 140]);\n    checkNext(['M', 80, 10]);\n    checkNext(['C', 100, 29.999999999999996, 120, 29.999999999999996, 140, 10]);\n    checkNext(['M', 80, 50]);\n    checkNext(['C', 86.66666666666666, 63.33333333333333, 93.33333333333333, 63.33333333333333, 100, 50]);\n    checkNext(['C', 106.66666666666666, 36.666666666666664, 113.33333333333333, 36.666666666666664, 120, 50]);\n    checkNext(['M', 80, 80]);\n    checkNext(['C', 80, 95.39600717839002, 96.66666666666667, 105.01851166488379, 110, 97.32050807568878]);\n    checkNext(['C', 116.18802153517007, 93.74785217660714, 120, 87.14531179816328, 120, 80]);\n  });","file":"path.js","skipped":false,"dir":"test"},{"name":"Snap.path.map","suites":["Path methods"],"updatePoint":{"line":237,"column":19},"line":237,"code":"  it(\"Snap.path.map\", function () {\n    var absPath = \"M10 10 H 50 V 40 H 10 L 10 10\" + \"M10 50 L 40 50 L 40 90 L 10 90\" + \"M10 100 C 30 120, 50 120, 50 100\" + \"M10 140 C 20 115, 30, 115, 40 140 S 50 165, 60 140\" + \"M80 10 Q 110 40, 140 10\" + \"M80 50 Q 90 70, 100 50 T 120 50\" + \"M80 80 A 10 10 0 0 0 120 80\";\n    var matrix = new Snap.Matrix(1, 0, 0, 1, 1000, 0);\n    var transformedPath = Snap.path.map(absPath, matrix);\n    var i = 0;\n\n    var checkNext = function (arr) {\n      expect(transformedPath[i++]).to.eql(arr);\n    };\n\n    checkNext(['M', 1010, 10]);\n    checkNext(['C', 1010, 10, 1050, 10, 1050, 10]);\n    checkNext(['C', 1050, 10, 1050, 40, 1050, 40]);\n    checkNext(['C', 1050, 40, 1010, 40, 1010, 40]);\n    checkNext(['C', 1010, 40, 1010, 10, 1010, 10]);\n    checkNext(['M', 1010, 50]);\n    checkNext(['C', 1010, 50, 1040, 50, 1040, 50]);\n    checkNext(['C', 1040, 50, 1040, 90, 1040, 90]);\n    checkNext(['C', 1040, 90, 1010, 90, 1010, 90]);\n    checkNext(['M', 1010, 100]);\n    checkNext(['C', 1030, 120, 1050, 120, 1050, 100]);\n    checkNext(['M', 1010, 140]);\n    checkNext(['C', 1020, 115, 1030, 115, 1040, 140]);\n    checkNext(['C', 1050, 165, 1050, 165, 1060, 140]);\n    checkNext(['M', 1080, 10]);\n    checkNext(['C', 1100, 29.999999999999996, 1120, 29.999999999999996, 1140, 10]);\n    checkNext(['M', 1080, 50]);\n    checkNext(['C', 1086.66666666666666, 63.33333333333333, 1093.33333333333333, 63.33333333333333, 1100, 50]);\n    checkNext(['C', 1106.66666666666666, 36.666666666666664, 1113.33333333333333, 36.666666666666664, 1120, 50]);\n    checkNext(['M', 1080, 80]);\n    checkNext(['C', 1080, 95.39600717839002, 1096.66666666666667, 105.01851166488379, 1110, 97.32050807568878]);\n    checkNext(['C', 1116.18802153517007, 93.74785217660714, 1120, 87.14531179816328, 1120, 80]);\n  });","file":"path.js","skipped":false,"dir":"test"},{"name":"Snap.path.isPointInside","suites":["Path methods"],"updatePoint":{"line":270,"column":29},"line":270,"code":"  it(\"Snap.path.isPointInside\", function () {\n    var path = \"M10 10 H 50 V 40 H 10 L 10 10 Z\" + \"M10 50 L 40 50 L 40 90 L 10 90 Z\" + \"M10 100 C 30 120, 50 120, 50 100 Z\" + \"M10 140 C 20 115, 30, 115, 40 140 S 50 165, 60 140 Z\" + \"M80 10 Q 110 40, 140 10 Z\" + \"M80 50 Q 90 70, 100 50 T 120 50 Z\" + \"M80 80 A 10 10 0 0 0 120 80 Z\";\n    expect(Snap.path.isPointInside(path, 15, 35)).to.be(true);\n    expect(Snap.path.isPointInside(path, 35, 75)).to.be(true);\n    expect(Snap.path.isPointInside(path, 15, 102)).to.be(true);\n    expect(Snap.path.isPointInside(path, 15, 135)).to.be(true);\n    expect(Snap.path.isPointInside(path, 50, 145)).to.be(true);\n    expect(Snap.path.isPointInside(path, 130, 15)).to.be(true);\n    expect(Snap.path.isPointInside(path, 110, 45)).to.be(true);\n    expect(Snap.path.isPointInside(path, 85, 55)).to.be(true);\n    expect(Snap.path.isPointInside(path, 115, 82)).to.be(true);\n    expect(Snap.path.isPointInside(path, 95, 98)).to.be(true);\n    expect(Snap.path.isPointInside(path, 5, 5)).to.be(false);\n    expect(Snap.path.isPointInside(path, 25, 48)).to.be(false);\n    expect(Snap.path.isPointInside(path, 42, 87)).to.be(false);\n    expect(Snap.path.isPointInside(path, 12, 105)).to.be(false);\n    expect(Snap.path.isPointInside(path, 47, 113)).to.be(false);\n    expect(Snap.path.isPointInside(path, 47, 135)).to.be(false);\n    expect(Snap.path.isPointInside(path, 25, 142)).to.be(false);\n    expect(Snap.path.isPointInside(path, 15, 125)).to.be(false);\n    expect(Snap.path.isPointInside(path, 43, 152)).to.be(false);\n    expect(Snap.path.isPointInside(path, 58, 152)).to.be(false);\n    expect(Snap.path.isPointInside(path, 90, 21)).to.be(false);\n    expect(Snap.path.isPointInside(path, 130, 21)).to.be(false);\n    expect(Snap.path.isPointInside(path, 95, 48)).to.be(false);\n    expect(Snap.path.isPointInside(path, 110, 55)).to.be(false);\n    expect(Snap.path.isPointInside(path, 100, 70)).to.be(false);\n    expect(Snap.path.isPointInside(path, 115, 96)).to.be(false);\n    expect(Snap.path.isPointInside(path, 85, 96)).to.be(false); // bug #248\n\n    expect(Snap.path.isPointInside(\"M1.4315332974182866,4.405806462382467 L57.26133189673147,176.23225849529868 A185.30156250000002,185.30156250000002 0 0 1 -172.2890356108522,-68.21405480708441 L-4.307225890271305,-1.7053513701771101 A4.6325390625,4.6325390625 0 0 0 1.4315332974182866,4.405806462382467 Z\", -58.296875, 70.96875)).to.be(true);\n  });","file":"path.js","skipped":false,"dir":"test"},{"name":"Snap.path.intersection","suites":["Path methods"],"updatePoint":{"line":302,"column":28},"line":302,"code":"  it(\"Snap.path.intersection\", function () {\n    var path1 = \"M10 10 H 50 V 40 H 10 L 10 10 Z\" + \"M10 50 L 40 50 L 40 90 L 10 90 Z\" + \"M10 100 C 30 120, 50 120, 50 100 Z\" + \"M10 140 C 20 115, 30, 115, 40 140 S 50 165, 60 140 Z\" + \"M80 10 Q 110 40, 140 10 Z\" + \"M80 50 Q 90 70, 100 50 T 120 50 Z\" + \"M80 80 A 10 10 0 0 0 120 80 Z\";\n    var path2 = \"M10,0 L80,200 L20, 200 L30, 0 L110, 15 L90, 150\";\n    var intersection = Snap.path.intersection(path1, path2);\n    expect(intersection.length).to.be(22);\n    var first = intersection[0];\n    expect(first.x).to.be.a('number');\n    expect(first.y).to.be.a('number');\n    expect(first.t1).to.be.a('number');\n    expect(first.t2).to.be.a('number');\n    expect(first.segment1).to.be.a('number');\n    expect(first.segment2).to.be.a('number');\n    expect(first.bez1).to.be.an('array');\n    expect(first.bez2).to.be.an('array');\n\n    var checkXY = function (index, x, y) {\n      expect(+intersection[index].x.toFixed(2)).to.be(x);\n      expect(+intersection[index].y.toFixed(2)).to.be(y);\n    };\n\n    checkXY(0, 13.5, 10);\n    checkXY(1, 29.5, 10);\n    checkXY(2, 24, 40);\n    checkXY(3, 28, 40);\n    checkXY(4, 27.5, 50);\n    checkXY(5, 27.5, 50);\n    checkXY(6, 40, 85.71);\n    checkXY(7, 25.5, 90);\n    checkXY(8, 48.06, 108.75);\n    checkXY(9, 24.46, 110.77);\n    checkXY(10, 45, 100);\n    checkXY(11, 25, 100);\n    checkXY(12, 23.91, 121.7);\n    checkXY(13, 59.46, 141.31);\n    checkXY(14, 59, 140);\n    checkXY(15, 23, 140);\n    checkXY(16, 108.55, 24.82);\n    checkXY(17, 83.33, 10);\n    checkXY(18, 106, 42);\n    checkXY(19, 104.81, 50);\n    checkXY(20, 97.49, 99.44);\n    checkXY(21, 100.37, 80);\n  });","file":"path.js","skipped":false,"dir":"test"},{"name":"creates a circle","suites":["Primitives creation"],"updatePoint":{"line":9,"column":22},"line":9,"code":"  it(\"creates a circle\", function () {\n    var c = s.circle(10, 20, 30);\n    var C = document.querySelector(\"circle\");\n    expect(C).to.not.be(null);\n    expect(C.getAttribute(\"cx\")).to.be(\"10\");\n    expect(C.getAttribute(\"cy\")).to.be(\"20\");\n    expect(C.getAttribute(\"r\")).to.be(\"30\");\n  });","file":"primitives.js","skipped":false,"dir":"test"},{"name":"creates a rect","suites":["Primitives creation"],"updatePoint":{"line":17,"column":20},"line":17,"code":"  it(\"creates a rect\", function () {\n    var c = s.rect(10, 20, 30, 40, 5);\n    var C = document.querySelector(\"rect\");\n    expect(C).to.not.be(null);\n    expect(C.getAttribute(\"x\")).to.be(\"10\");\n    expect(C.getAttribute(\"y\")).to.be(\"20\");\n    expect(C.getAttribute(\"width\")).to.be(\"30\");\n    expect(C.getAttribute(\"height\")).to.be(\"40\");\n    expect(C.getAttribute(\"rx\")).to.be(\"5\");\n    expect(C.getAttribute(\"ry\")).to.be(\"5\");\n  });","file":"primitives.js","skipped":false,"dir":"test"},{"name":"creates a rect with different rx & ry","suites":["Primitives creation"],"updatePoint":{"line":28,"column":43},"line":28,"code":"  it(\"creates a rect with different rx & ry\", function () {\n    var c = s.rect(10, 20, 30, 40, 5, 6);\n    var C = document.querySelector(\"rect\");\n    expect(C).to.not.be(null);\n    expect(C.getAttribute(\"x\")).to.be(\"10\");\n    expect(C.getAttribute(\"y\")).to.be(\"20\");\n    expect(C.getAttribute(\"width\")).to.be(\"30\");\n    expect(C.getAttribute(\"height\")).to.be(\"40\");\n    expect(C.getAttribute(\"rx\")).to.be(\"5\");\n    expect(C.getAttribute(\"ry\")).to.be(\"6\");\n  });","file":"primitives.js","skipped":false,"dir":"test"},{"name":"creates a ellipse","suites":["Primitives creation"],"updatePoint":{"line":39,"column":23},"line":39,"code":"  it(\"creates a ellipse\", function () {\n    var c = s.ellipse(10, 20, 30, 40);\n    var C = document.querySelector(\"ellipse\");\n    expect(C).to.not.be(null);\n    expect(C.getAttribute(\"cx\")).to.be(\"10\");\n    expect(C.getAttribute(\"cy\")).to.be(\"20\");\n    expect(C.getAttribute(\"rx\")).to.be(\"30\");\n    expect(C.getAttribute(\"ry\")).to.be(\"40\");\n  });","file":"primitives.js","skipped":false,"dir":"test"},{"name":"creates a ellipse","suites":["Primitives creation"],"updatePoint":{"line":48,"column":23},"line":48,"code":"  it(\"creates a ellipse\", function () {\n    var c = s.ellipse(10, 20, 30, 40);\n    var C = document.querySelector(\"ellipse\");\n    expect(C).to.not.be(null);\n    expect(C.getAttribute(\"cx\")).to.be(\"10\");\n    expect(C.getAttribute(\"cy\")).to.be(\"20\");\n    expect(C.getAttribute(\"rx\")).to.be(\"30\");\n    expect(C.getAttribute(\"ry\")).to.be(\"40\");\n  });","file":"primitives.js","skipped":false,"dir":"test"},{"name":"creates a path","suites":["Primitives creation"],"updatePoint":{"line":57,"column":20},"line":57,"code":"  it(\"creates a path\", function () {\n    var c = s.path(\"M10,10,50,60\");\n    var C = document.querySelector(\"path\");\n    expect(C).to.not.be(null);\n    expect(C.getAttribute(\"d\")).to.be(\"M10,10,50,60\");\n    expect(C.getBBox().width).to.be(40);\n  });","file":"primitives.js","skipped":false,"dir":"test"},{"name":"creates a line","suites":["Primitives creation"],"updatePoint":{"line":64,"column":20},"line":64,"code":"  it(\"creates a line\", function () {\n    var c = s.line(10, 10, 50, 60);\n    var C = document.querySelector(\"line\");\n    expect(C).to.not.be(null);\n    expect(C.getAttribute(\"x1\")).to.be(\"10\");\n    expect(C.getBBox().width).to.be(40);\n  });","file":"primitives.js","skipped":false,"dir":"test"},{"name":"creates a polyline","suites":["Primitives creation"],"updatePoint":{"line":71,"column":24},"line":71,"code":"  it(\"creates a polyline\", function () {\n    var c = s.polyline(10, 10, 50, 60, 70, 80);\n    var C = document.querySelector(\"polyline\");\n    expect(C).to.not.be(null);\n    expect(C.getAttribute(\"points\")).to.be(\"10,10,50,60,70,80\");\n  });","file":"primitives.js","skipped":false,"dir":"test"},{"name":"creates a polygon","suites":["Primitives creation"],"updatePoint":{"line":77,"column":23},"line":77,"code":"  it(\"creates a polygon\", function () {\n    var c = s.polygon(10, 10, 50, 60, 70, 80);\n    var C = document.querySelector(\"polygon\");\n    expect(C).to.not.be(null);\n    expect(C.getAttribute(\"points\")).to.be(\"10,10,50,60,70,80\");\n  });","file":"primitives.js","skipped":false,"dir":"test"},{"name":"creates a group","suites":["Primitives creation"],"updatePoint":{"line":83,"column":21},"line":83,"code":"  it(\"creates a group\", function () {\n    var c = s.group();\n    var C = document.querySelector(\"g\");\n    expect(C).to.not.be(null);\n  });","file":"primitives.js","skipped":false,"dir":"test"},{"name":"creates and fills a group","suites":["Primitives creation"],"updatePoint":{"line":88,"column":31},"line":88,"code":"  it(\"creates and fills a group\", function () {\n    var c = s.group(),\n        a = s.circle(10, 10, 10),\n        b = s.circle(20, 20, 10),\n        C = document.querySelector(\"g\");\n    c.add(a, b);\n    expect(C).to.not.be(null);\n    expect(C.childNodes.length).to.be(2);\n  });","file":"primitives.js","skipped":false,"dir":"test"},{"name":"creates and fills a group on creation","suites":["Primitives creation"],"updatePoint":{"line":97,"column":43},"line":97,"code":"  it(\"creates and fills a group on creation\", function () {\n    var circle1 = s.circle(10, 10, 10);\n    var circle2 = s.circle(20, 10, 10);\n    var group = s.g(circle1, circle2);\n    var groupEl = document.querySelector(\"g\");\n    expect(groupEl).to.not.be(null);\n    expect(groupEl.childNodes.length).to.be(2);\n  });","file":"primitives.js","skipped":false,"dir":"test"},{"name":"creates a text","suites":["Primitives creation"],"updatePoint":{"line":105,"column":20},"line":105,"code":"  it(\"creates a text\", function () {\n    var c = s.text(10, 10, \"test\");\n    var C = document.querySelector(\"text\");\n    expect(C).to.not.be(null);\n    expect(C.getAttribute(\"x\")).to.be(\"10\");\n    expect(C.textContent).to.be(\"test\");\n  });","file":"primitives.js","skipped":false,"dir":"test"},{"name":"creates a mask","suites":["Primitives creation"],"updatePoint":{"line":112,"column":20},"line":112,"code":"  it(\"creates a mask\", function () {\n    var c = s.mask();\n    var C = document.querySelector(\"mask\");\n    expect(C).to.not.be(null);\n    expect(C).to.be(c.node);\n  });","file":"primitives.js","skipped":false,"dir":"test"},{"name":"creates a pattern","suites":["Primitives creation"],"updatePoint":{"line":118,"column":23},"line":118,"code":"  it(\"creates a pattern\", function () {\n    var c = s.ptrn();\n    var C = document.querySelector(\"pattern\");\n    expect(C).to.not.be(null);\n    expect(C).to.be(c.node);\n  });","file":"primitives.js","skipped":false,"dir":"test"},{"name":"creates a pattern(x, y)","suites":["Primitives creation"],"updatePoint":{"line":124,"column":29},"line":124,"code":"  it(\"creates a pattern(x, y)\", function () {\n    var c = s.ptrn(100, 200);\n    expect(c.node.nodeName).to.be(\"pattern\");\n    expect(c.node.x.baseVal.value).to.be(100);\n    expect(c.node.y.baseVal.value).to.be(200);\n    expect(c.node.parentNode).to.be(s.node);\n  });","file":"primitives.js","skipped":false,"dir":"test"},{"name":"creates a pattern(x, y, w, h, viewbox)","suites":["Primitives creation"],"updatePoint":{"line":131,"column":44},"line":131,"code":"  it(\"creates a pattern(x, y, w, h, viewbox)\", function () {\n    var c = s.ptrn(100, 200, 300, 400, 10, 20, 30, 40);\n    expect(c.node.nodeName).to.be(\"pattern\");\n    expect(c.node.x.baseVal.value).to.be(100);\n    expect(c.node.y.baseVal.value).to.be(200);\n    expect(c.node.width.baseVal.value).to.be(300);\n    expect(c.node.height.baseVal.value).to.be(400);\n    expect(c.node.getAttribute(\"viewBox\")).to.be(\"10 20 30 40\");\n    expect(c.node.parentNode).to.be(s.node);\n  });","file":"primitives.js","skipped":false,"dir":"test"},{"name":"Set.animate","suites":["Set methods"],"updatePoint":{"line":9,"column":17},"line":9,"code":"  it(\"Set.animate\", function (done) {\n    var circle = s.circle(10, 20, 30);\n    var square = s.rect(60, 60, 30, 30);\n    var set = Snap.set(circle, square);\n    var result = set.animate({\n      opacity: .5\n    }, 10);\n    setTimeout(function () {\n      result.forEach(function (el) {\n        var o = el.attr(\"opacity\");\n        expect(o).to.be(\"0.5\");\n      });\n      done();\n    }, 50);\n    expect(result).to.be(set);\n  });","file":"set.js","skipped":false,"dir":"test"},{"name":"Set.animate - with callback","suites":["Set methods"],"updatePoint":{"line":25,"column":33},"line":25,"code":"  it(\"Set.animate - with callback\", function (done) {\n    var circle = s.circle(10, 20, 30);\n    var square = s.rect(60, 60, 30, 30);\n    var set = Snap.set(circle, square);\n    var result = set.animate({\n      opacity: .5\n    }, 10, function () {\n      result.forEach(function (el) {\n        var o = el.attr(\"opacity\");\n        expect(o).to.be(\"0.5\");\n      });\n      done();\n    });\n    expect(result).to.be(set);\n  });","file":"set.js","skipped":false,"dir":"test"},{"name":"Set.animate - with easing","suites":["Set methods"],"updatePoint":{"line":40,"column":31},"line":40,"code":"  it(\"Set.animate - with easing\", function (done) {\n    var circle = s.circle(10, 20, 30);\n    var square = s.rect(60, 60, 30, 30);\n    var set = Snap.set(circle, square);\n    var result = set.animate({\n      opacity: .5\n    }, 10, mina.easein);\n    setTimeout(function () {\n      result.forEach(function (el) {\n        var o = el.attr(\"opacity\");\n        expect(o).to.be(\"0.5\");\n      });\n      done();\n    }, 50);\n    expect(result).to.be(set);\n  });","file":"set.js","skipped":false,"dir":"test"},{"name":"Set.animate - with callback & easing","suites":["Set methods"],"updatePoint":{"line":56,"column":42},"line":56,"code":"  it(\"Set.animate - with callback & easing\", function (done) {\n    var circle = s.circle(10, 20, 30);\n    var square = s.rect(60, 60, 30, 30);\n    var set = Snap.set(circle, square);\n    var result = set.animate({\n      opacity: .5\n    }, 10, mina.easeout, function () {\n      result.forEach(function (el) {\n        var o = el.attr(\"opacity\");\n        expect(o).to.be(\"0.5\");\n      });\n      done();\n    });\n    expect(result).to.be(set);\n  });","file":"set.js","skipped":false,"dir":"test"},{"name":"Set.clear","suites":["Set methods"],"updatePoint":{"line":71,"column":15},"line":71,"code":"  it(\"Set.clear\", function () {\n    var rect1 = s.rect(10, 20, 30, 40);\n    var rect2 = s.rect(10, 20, 30, 40);\n    var set = Snap.set(rect1, rect2);\n    expect(set.length).to.be(2);\n    set.clear();\n    expect(set.length).to.be(0);\n  });","file":"set.js","skipped":false,"dir":"test"},{"name":"Set.exclude","suites":["Set methods"],"updatePoint":{"line":79,"column":17},"line":79,"code":"  it(\"Set.exclude\", function () {\n    var rect1 = s.rect(10, 20, 30, 40);\n    var rect2 = s.rect(10, 20, 30, 40);\n    var rect3 = s.rect(10, 20, 30, 40);\n    var set = Snap.set(rect1, rect2, rect3);\n    expect(set.length).to.be(3);\n    var excluded = set.exclude(rect2);\n    expect(set.length).to.be(2);\n    expect(excluded).to.be(true);\n    excluded = set.exclude(rect2);\n    expect(set.length).to.be(2);\n    expect(excluded).to.be(false);\n  });","file":"set.js","skipped":false,"dir":"test"},{"name":"Set.remove","suites":["Set methods"],"updatePoint":{"line":92,"column":16},"line":92,"code":"  it(\"Set.remove\", function () {\n    var rect1 = s.rect(10, 20, 30, 40);\n    var rect2 = s.rect(10, 20, 30, 40);\n    var rect3 = s.rect(10, 20, 30, 40);\n    var set = Snap.set(rect1, rect2, rect3);\n    expect(set.length).to.be(3);\n    set.remove();\n    expect(set.length).to.be(0);\n    expect(rect1.removed).to.be(true);\n    expect(rect2.removed).to.be(true);\n    expect(rect3.removed).to.be(true);\n  });","file":"set.js","skipped":false,"dir":"test"},{"name":"Set.forEach","suites":["Set methods"],"updatePoint":{"line":104,"column":17},"line":104,"code":"  it(\"Set.forEach\", function () {\n    var rect1 = s.rect(10, 20, 30, 40);\n    var rect2 = s.rect(10, 20, 30, 40);\n    var rect3 = s.rect(10, 20, 30, 40);\n    var set = Snap.set(rect1, rect2, rect3);\n    var i = 0;\n    var arr = [rect1, rect2, rect3];\n    var result = set.forEach(function (item) {\n      expect(arr[i]).to.be(item);\n      expect(this.isContext).to.be(true);\n      i++;\n    }, {\n      isContext: true\n    });\n    expect(result).to.be(set);\n    expect(i).to.be(3);\n  });","file":"set.js","skipped":false,"dir":"test"},{"name":"Set.pop","suites":["Set methods"],"updatePoint":{"line":121,"column":13},"line":121,"code":"  it(\"Set.pop\", function () {\n    var rect1 = s.rect(10, 20, 30, 40);\n    var rect2 = s.rect(10, 20, 30, 40);\n    var rect3 = s.rect(10, 20, 30, 40);\n    var set = Snap.set(rect1, rect2, rect3);\n    expect(set.length).to.be(3);\n    var result = set.pop();\n    expect(set.length).to.be(2);\n    expect(result).to.be(rect3);\n    expect(set[0]).to.be(rect1);\n    expect(set[1]).to.be(rect2);\n    result = set.pop();\n    expect(set.length).to.be(1);\n    expect(result).to.be(rect2);\n    expect(set[0]).to.be(rect1);\n  });","file":"set.js","skipped":false,"dir":"test"},{"name":"Set.push","suites":["Set methods"],"updatePoint":{"line":137,"column":14},"line":137,"code":"  it(\"Set.push\", function () {\n    var rect1 = s.rect(10, 20, 30, 40);\n    var rect2 = s.rect(10, 20, 30, 40);\n    var rect3 = s.rect(10, 20, 30, 40);\n    var set = Snap.set(rect1, rect2);\n    expect(set.length).to.be(2);\n    set.push(rect3);\n    expect(set.length).to.be(3);\n    expect(set[0]).to.be(rect1);\n    expect(set[1]).to.be(rect2);\n    expect(set[2]).to.be(rect3);\n  });","file":"set.js","skipped":false,"dir":"test"},{"name":"Set.attr","suites":["Set methods"],"updatePoint":{"line":149,"column":14},"line":149,"code":"  it(\"Set.attr\", function () {\n    var rect1 = s.rect(10, 20, 30, 40);\n    var rect2 = s.rect(10, 20, 30, 40);\n    var set = Snap.set(rect1, rect2);\n    set.attr({\n      \"fill\": \"#ff0000\"\n    });\n    expect(rect1.node.getAttribute(\"fill\")).to.be(\"#ff0000\");\n    expect(rect2.node.getAttribute(\"fill\")).to.be(\"#ff0000\");\n    set.attr({\n      \"stroke\": \"#0000ff\"\n    });\n    expect(rect1.node.getAttribute(\"stroke\")).to.be(\"#0000ff\");\n    expect(rect2.node.getAttribute(\"stroke\")).to.be(\"#0000ff\");\n  });","file":"set.js","skipped":false,"dir":"test"},{"name":"Set.bind","suites":["Set methods"],"updatePoint":{"line":164,"column":14},"line":164,"code":"  it(\"Set.bind\", function () {\n    var rect1 = s.rect(10, 20, 30, 40);\n    var rect2 = s.rect(10, 20, 30, 40);\n    var set = Snap.set(rect1, rect2); // Setting \"stroke\" on set only applies it to rect1\n\n    set.bind(\"stroke\", rect1); // Setting \"fill1\" on set maps to fill attribute on rect1\n\n    set.bind(\"fill1\", rect1, \"fill\"); // Setting \"fill2\" on set maps to fill attribute on rect2\n\n    set.bind(\"fill2\", function (v) {\n      rect2.attr({\n        \"fill\": v\n      });\n    }); // Set everything to black\n\n    rect1.attr({\n      \"fill\": \"#000000\",\n      \"stroke\": \"#000000\"\n    });\n    rect2.attr({\n      \"fill\": \"#000000\",\n      \"stroke\": \"#000000\"\n    });\n    set.attr({\n      \"fill1\": \"#00ff00\"\n    });\n    expect(rect1.node.getAttribute(\"fill\")).to.be(\"#00ff00\");\n    expect(rect2.node.getAttribute(\"fill\")).to.be(\"#000000\"); // Will trigger the fallback implementation of attr which is\n    // to set that attribute on all elements in the set.\n\n    set.attr({\n      \"fill\": \"#ff0000\"\n    });\n    expect(rect1.node.getAttribute(\"fill\")).to.be(\"#ff0000\");\n    expect(rect2.node.getAttribute(\"fill\")).to.be(\"#ff0000\");\n    set.attr({\n      \"fill2\": \"#00ff00\"\n    });\n    expect(rect1.node.getAttribute(\"fill\")).to.be(\"#ff0000\");\n    expect(rect2.node.getAttribute(\"fill\")).to.be(\"#00ff00\");\n    set.attr({\n      \"stroke\": \"#0000ff\"\n    });\n    expect(rect1.node.getAttribute(\"stroke\")).to.be(\"#0000ff\");\n    expect(rect2.node.getAttribute(\"stroke\")).to.be(\"#000000\");\n  });","file":"set.js","skipped":false,"dir":"test"},{"name":"Set.splice - remove only","suites":["Set methods"],"updatePoint":{"line":210,"column":30},"line":210,"code":"  it(\"Set.splice - remove only\", function () {\n    var rect1 = s.rect(10, 20, 30, 40);\n    var rect2 = s.rect(10, 20, 30, 40);\n    var rect3 = s.rect(10, 20, 30, 40);\n    var rect4 = s.rect(10, 20, 30, 40);\n    var set = Snap.set(rect1, rect2, rect3, rect4);\n    var removedSet = set.splice(1, 2);\n    expect(set.length).to.be(2);\n    expect(set[0]).to.be(rect1);\n    expect(set[1]).to.be(rect4);\n    expect(removedSet.length).to.be(2);\n    expect(removedSet[0]).to.be(rect2);\n    expect(removedSet[1]).to.be(rect3);\n    var emptySet = set.splice(0, 0);\n    expect(set.length).to.be(2);\n    expect(emptySet.length).to.be(0);\n  });","file":"set.js","skipped":false,"dir":"test"},{"name":"Set.splice - remove & insert","suites":["Set methods"],"updatePoint":{"line":227,"column":34},"line":227,"code":"  it(\"Set.splice - remove & insert\", function () {\n    var rect1 = s.rect(10, 20, 30, 40);\n    var rect2 = s.rect(10, 20, 30, 40);\n    var rect3 = s.rect(10, 20, 30, 40);\n    var rect4 = s.rect(10, 20, 30, 40);\n    var set = Snap.set(rect1, rect2, rect3);\n    var removedSet = set.splice(2, 1, rect4);\n    expect(set.length).to.be(3);\n    expect(set[0]).to.be(rect1);\n    expect(set[1]).to.be(rect2);\n    expect(set[2]).to.be(rect4);\n    removedSet = set.splice(0, 3, rect4, rect3, rect2, rect1);\n    expect(set[0]).to.be(rect4);\n    expect(set[1]).to.be(rect3);\n    expect(set[2]).to.be(rect2);\n    expect(set[3]).to.be(rect1);\n    expect(removedSet[0]).to.be(rect1);\n    expect(removedSet[1]).to.be(rect2);\n    expect(removedSet[2]).to.be(rect4);\n  });","file":"set.js","skipped":false,"dir":"test"},{"name":"Snap.Matrix - six params","suites":["Snap methods"],"updatePoint":{"line":2,"column":30},"line":2,"code":"  it(\"Snap.Matrix - six params\", function () {\n    var matrix = new Snap.Matrix(1, 2, 3, 4, 5, 6);\n    expect(matrix).to.eql({\n      a: 1,\n      b: 2,\n      c: 3,\n      d: 4,\n      e: 5,\n      f: 6\n    });\n  });","file":"snap-tests.js","skipped":false,"dir":"test"},{"name":"Snap.Matrix - SVGMatrix param","suites":["Snap methods"],"updatePoint":{"line":13,"column":35},"line":13,"code":"  it(\"Snap.Matrix - SVGMatrix param\", function () {\n    var svgMatrix = new Snap(10, 10).node.createSVGMatrix();\n    var matrix = new Snap.Matrix(svgMatrix);\n    expect(matrix).to.eql({\n      a: 1,\n      b: 0,\n      c: 0,\n      d: 1,\n      e: 0,\n      f: 0\n    });\n  });","file":"snap-tests.js","skipped":false,"dir":"test"},{"name":"Snap.ajax - no postData","suites":["Snap methods"],"updatePoint":{"line":25,"column":29},"line":25,"code":"  it(\"Snap.ajax - no postData\", function (done) {\n    var xhr = Snap.ajax('./res/file-for-ajax.txt', function (xhr) {\n      var responseText = xhr.responseText;\n      expect(responseText).to.be('success');\n      expect(this.isContext).to.be(true);\n      done();\n    }, {\n      'isContext': true\n    });\n    expect(xhr).to.be.an('object');\n  });","file":"snap-tests.js","skipped":false,"dir":"test"},{"name":"Snap.ajax - with object postData","suites":["Snap methods"],"updatePoint":{"line":36,"column":38},"line":36,"code":"  it(\"Snap.ajax - with object postData\", function (done) {\n    var xhr = Snap.ajax('./res/file-for-ajax.txt', {\n      foo: 'bar'\n    }, function (xhr) {\n      var responseText = xhr.responseText;\n      expect(responseText).to.be('success');\n      expect(this.isContext).to.be(true);\n      done();\n    }, {\n      'isContext': true\n    });\n    expect(xhr).to.be.an('object');\n  });","file":"snap-tests.js","skipped":false,"dir":"test"},{"name":"Snap.ajax - with string postData","suites":["Snap methods"],"updatePoint":{"line":49,"column":38},"line":49,"code":"  it(\"Snap.ajax - with string postData\", function (done) {\n    var xhr = Snap.ajax('./res/file-for-ajax.txt', 'foo=bar', function (xhr) {\n      var responseText = xhr.responseText;\n      expect(responseText).to.be('success');\n      expect(this.isContext).to.be(true);\n      done();\n    }, {\n      'isContext': true\n    });\n    expect(xhr).to.be.an('object');\n  });","file":"snap-tests.js","skipped":false,"dir":"test"},{"name":"Snap.animate - numbers, no easing or callback","suites":["Snap methods"],"updatePoint":{"line":71,"column":51},"line":71,"code":"  it(\"Snap.animate - numbers, no easing or callback\", function (done) {\n    var n;\n    var minaObj = Snap.animate(10, 20, function (newN) {\n      n = newN;\n    }, 50);\n    setTimeout(function () {\n      expect(n).to.be(20);\n      done();\n    }, 100);\n    validateMina(minaObj);\n  });","file":"snap-tests.js","skipped":false,"dir":"test"},{"name":"Snap.animate - numbers, callback","suites":["Snap methods"],"updatePoint":{"line":82,"column":38},"line":82,"code":"  it(\"Snap.animate - numbers, callback\", function (done) {\n    var n;\n    var minaObj = Snap.animate(10, 20, function (newN) {\n      n = newN;\n    }, 50, function () {\n      expect(n).to.be(20);\n      done();\n    });\n    validateMina(minaObj);\n  });","file":"snap-tests.js","skipped":false,"dir":"test"},{"name":"Snap.animate - numbers, easing","suites":["Snap methods"],"updatePoint":{"line":92,"column":36},"line":92,"code":"  it(\"Snap.animate - numbers, easing\", function (done) {\n    var n;\n    var minaObj = Snap.animate(10, 20, function (newN) {\n      n = newN;\n    }, 50, mina.easeinout);\n    setTimeout(function () {\n      expect(n).to.be(20);\n      done();\n    }, 100);\n    validateMina(minaObj);\n  });","file":"snap-tests.js","skipped":false,"dir":"test"},{"name":"Snap.animate - numbers, easing & callback","suites":["Snap methods"],"updatePoint":{"line":103,"column":47},"line":103,"code":"  it(\"Snap.animate - numbers, easing & callback\", function (done) {\n    var n;\n    var minaObj = Snap.animate(10, 20, function (newN) {\n      n = newN;\n    }, 50, mina.bounce, function () {\n      expect(n).to.be(20);\n      done();\n    });\n    validateMina(minaObj);\n  });","file":"snap-tests.js","skipped":false,"dir":"test"},{"name":"Snap.animate - arrays, no easing or callback","suites":["Snap methods"],"updatePoint":{"line":113,"column":50},"line":113,"code":"  it(\"Snap.animate - arrays, no easing or callback\", function (done) {\n    var n1, n2;\n    var minaObj = Snap.animate([5, 10], [10, 20], function (nArr) {\n      n1 = nArr[0];\n      n2 = nArr[1];\n    }, 50);\n    setTimeout(function () {\n      expect(n1).to.be(10);\n      expect(n2).to.be(20);\n      done();\n    }, 100);\n    validateMina(minaObj);\n  });","file":"snap-tests.js","skipped":false,"dir":"test"},{"name":"Snap.animate - arrays, callback","suites":["Snap methods"],"updatePoint":{"line":126,"column":37},"line":126,"code":"  it(\"Snap.animate - arrays, callback\", function (done) {\n    var n1, n2;\n    var minaObj = Snap.animate([5, 10], [10, 20], function (nArr) {\n      n1 = nArr[0];\n      n2 = nArr[1];\n    }, 50, function () {\n      expect(n1).to.be(10);\n      expect(n2).to.be(20);\n      done();\n    });\n    validateMina(minaObj);\n  });","file":"snap-tests.js","skipped":false,"dir":"test"},{"name":"Snap.animate - arrays, easing","suites":["Snap methods"],"updatePoint":{"line":138,"column":35},"line":138,"code":"  it(\"Snap.animate - arrays, easing\", function (done) {\n    var n1, n2;\n    var minaObj = Snap.animate([5, 10], [10, 20], function (nArr) {\n      n1 = nArr[0];\n      n2 = nArr[1];\n    }, 50, mina.easeinout);\n    setTimeout(function () {\n      expect(n1).to.be(10);\n      expect(n2).to.be(20);\n      done();\n    }, 100);\n    validateMina(minaObj);\n  });","file":"snap-tests.js","skipped":false,"dir":"test"},{"name":"Snap.animate - arrays, easing & callback","suites":["Snap methods"],"updatePoint":{"line":151,"column":46},"line":151,"code":"  it(\"Snap.animate - arrays, easing & callback\", function (done) {\n    var n1, n2;\n    var minaObj = Snap.animate([5, 10], [10, 20], function (nArr) {\n      n1 = nArr[0];\n      n2 = nArr[1];\n    }, 50, mina.backin, function () {\n      expect(n1).to.be(10);\n      expect(n2).to.be(20);\n      done();\n    });\n    validateMina(minaObj);\n  });","file":"snap-tests.js","skipped":false,"dir":"test"},{"name":"Snap.animation - no easing or callback","suites":["Snap methods"],"updatePoint":{"line":163,"column":44},"line":163,"code":"  it(\"Snap.animation - no easing or callback\", function () {\n    var anim = Snap.animation({\n      foo: \"bar\"\n    }, 100);\n    expect(anim).to.be.an(\"object\");\n    expect(anim.dur).to.be(100);\n    expect(anim.attr.foo).to.be(\"bar\");\n  });","file":"snap-tests.js","skipped":false,"dir":"test"},{"name":"Snap.animation - with easing","suites":["Snap methods"],"updatePoint":{"line":171,"column":34},"line":171,"code":"  it(\"Snap.animation - with easing\", function () {\n    var anim = Snap.animation({\n      foo: \"bar\"\n    }, 100, mina.easein);\n    expect(anim).to.be.an(\"object\");\n    expect(anim.dur).to.be(100);\n    expect(anim.attr.foo).to.be(\"bar\");\n    expect(anim.easing).to.be.a(\"function\");\n  });","file":"snap-tests.js","skipped":false,"dir":"test"},{"name":"Snap.animation - with callback","suites":["Snap methods"],"updatePoint":{"line":180,"column":36},"line":180,"code":"  it(\"Snap.animation - with callback\", function () {\n    var cb = function () {};\n\n    var anim = Snap.animation({\n      foo: \"bar\"\n    }, 100, cb);\n    expect(anim).to.be.an(\"object\");\n    expect(anim.dur).to.be(100);\n    expect(anim.attr.foo).to.be(\"bar\");\n    expect(anim.callback).to.be.a(\"function\");\n  });","file":"snap-tests.js","skipped":false,"dir":"test"},{"name":"Snap.animation - with easing & callback","suites":["Snap methods"],"updatePoint":{"line":191,"column":45},"line":191,"code":"  it(\"Snap.animation - with easing & callback\", function () {\n    var cb = function () {};\n\n    var anim = Snap.animation({\n      foo: \"bar\"\n    }, 100, mina.linear, cb);\n    expect(anim).to.be.an(\"object\");\n    expect(anim.dur).to.be(100);\n    expect(anim.attr.foo).to.be(\"bar\");\n    expect(anim.easing).to.be.a(\"function\");\n    expect(anim.callback).to.be.a(\"function\");\n    expect(anim.easing).to.not.be(anim.callback);\n  });","file":"snap-tests.js","skipped":false,"dir":"test"},{"name":"Snap.deg","suites":["Snap methods"],"updatePoint":{"line":204,"column":14},"line":204,"code":"  it(\"Snap.deg\", function () {\n    expect(Snap.deg(Math.PI)).to.be(180);\n    expect(Snap.deg(Math.PI / 2)).to.be(90);\n    expect(Snap.deg(Math.PI / 4)).to.be(45);\n    expect(Snap.deg(Math.PI * 2)).to.be(0);\n  });","file":"snap-tests.js","skipped":false,"dir":"test"},{"name":"Snap.rad","suites":["Snap methods"],"updatePoint":{"line":210,"column":14},"line":210,"code":"  it(\"Snap.rad\", function () {\n    expect(Snap.rad(180)).to.be(Math.PI);\n    expect(Snap.rad(90)).to.be(Math.PI / 2);\n    expect(Snap.rad(45)).to.be(Math.PI / 4);\n    expect(Snap.rad(0)).to.be(0);\n  });","file":"snap-tests.js","skipped":false,"dir":"test"},{"name":"Snap.format","suites":["Snap methods"],"updatePoint":{"line":216,"column":17},"line":216,"code":"  it(\"Snap.format\", function () {\n    var outputStr;\n    outputStr = Snap.format(\"{x}\", {\n      x: 1\n    });\n    expect(outputStr).to.be(\"1\");\n    outputStr = Snap.format(\"{a['foo']}\", {\n      a: {\n        foo: 'bar'\n      }\n    });\n    expect(outputStr).to.be(\"bar\");\n    outputStr = Snap.format(\"M{x},{y}h{dim.width}v{dim.height}h{dim['negative width']}z\", {\n      x: 10,\n      y: 20,\n      dim: {\n        width: 40,\n        height: 50,\n        \"negative width\": -40\n      }\n    });\n    expect(outputStr).to.be(\"M10,20h40v50h-40z\");\n  });","file":"snap-tests.js","skipped":false,"dir":"test"},{"name":"Snap.fragment","suites":["Snap methods"],"updatePoint":{"line":239,"column":19},"line":239,"code":"  it(\"Snap.fragment\", function () {\n    var frag = Snap.fragment('<g class=\"foo\"></g>', '<g class=\"foo2\"></g>');\n    expect(frag).to.be.an(\"object\");\n    expect(frag.node.childNodes.length).to.be(2);\n    expect(frag.node.firstChild.nodeName).to.be(\"g\");\n    expect(frag.node.firstChild.getAttribute(\"class\")).to.be(\"foo\");\n    expect(frag.node.lastChild.getAttribute(\"class\")).to.be(\"foo2\");\n    frag = Snap.fragment('<g class=\"foo\"><rect x=\"0\" y=\"0\" width=\"10\" height=\"10\"/></g>');\n    var rectWidth = frag.select('rect').attr('width');\n    expect(rectWidth).to.be(\"10\");\n  });","file":"snap-tests.js","skipped":false,"dir":"test"},{"name":"Snap.is","suites":["Snap methods"],"updatePoint":{"line":250,"column":13},"line":250,"code":"  it(\"Snap.is\", function () {\n    var undef;\n    expect(Snap.is(\"foo\", \"string\")).to.be.ok();\n    expect(Snap.is(123, \"number\")).to.be.ok();\n    expect(Snap.is({}, \"object\")).to.be.ok();\n    expect(Snap.is([], \"array\")).to.be.ok();\n    expect(Snap.is([], \"object\")).to.be.ok();\n    expect(Snap.is(null, \"null\")).to.be.ok();\n    expect(Snap.is(false, \"boolean\")).to.be.ok();\n    expect(Snap.is(undef, \"undefined\")).to.be.ok();\n    expect(Snap.is(function () {}, \"function\")).to.be.ok();\n    expect(Snap.is(function () {}, \"object\")).to.be.ok();\n  });","file":"snap-tests.js","skipped":false,"dir":"test"},{"name":"Snap.load - with context","suites":["Snap methods"],"updatePoint":{"line":263,"column":30},"line":263,"code":"  it(\"Snap.load - with context\", function (done) {\n    Snap.load('./res/external-svg.svg', function (fragment) {\n      expect(fragment.node.querySelector(\"svg\")).to.not.be(null);\n      expect(this.myContext).to.be(true);\n      done();\n    }, {\n      myContext: true\n    });\n  });","file":"snap-tests.js","skipped":false,"dir":"test"},{"name":"Snap.load - without context","suites":["Snap methods"],"updatePoint":{"line":272,"column":33},"line":272,"code":"  it(\"Snap.load - without context\", function (done) {\n    Snap.load('./res/external-svg.svg', function (fragment) {\n      expect(fragment.node.querySelector(\"svg\")).to.not.be(null);\n      done();\n    });\n  });","file":"snap-tests.js","skipped":false,"dir":"test"},{"name":"Snap.parse","suites":["Snap methods"],"updatePoint":{"line":278,"column":16},"line":278,"code":"  it(\"Snap.parse\", function () {\n    var frag = Snap.parse('<g class=\"foo\"></g>');\n    expect(frag).to.be.an(\"object\");\n    expect(frag.node.childNodes.length).to.be(1);\n    expect(frag.node.firstChild.nodeName).to.be(\"g\");\n    expect(frag.node.firstChild.getAttribute(\"class\")).to.be(\"foo\");\n    frag = Snap.parse('<g class=\"foo\"><rect x=\"0\" y=\"0\" width=\"10\" height=\"10\"/></g>');\n    var rectWidth = frag.select('rect').attr('width');\n    expect(rectWidth).to.be(\"10\");\n  });","file":"snap-tests.js","skipped":false,"dir":"test"},{"name":"Snap.parsePathString - string","suites":["Snap methods"],"updatePoint":{"line":288,"column":35},"line":288,"code":"  it(\"Snap.parsePathString - string\", function () {\n    var pathArrs = Snap.parsePathString(\"M1 2\" + \"m3 4\" + \"L 5, 6\" + \"l 7, 8\" + \"H 9\" + \"h 10\" + \"V 11\" + \"v 12\" + \"C 13 14, 15 16, 17 18\" + \"c 19 20, 21 22, 23 24\" + \"S 25 26, 27 28\" + \"s 29 30, 31 32\" + \"Q 33 34, 35 36\" + \"q 37 38, 39 40\" + \"T 41 42\" + \"t 43 44\" + \"A 45 46 47 0 1 48 49\" + \"a 50 51 52 1 0 53 54\" + \"Z\");\n    expect(pathArrs[0]).to.eql([\"M\", 1, 2]);\n    expect(pathArrs[1]).to.eql([\"m\", 3, 4]);\n    expect(pathArrs[2]).to.eql([\"L\", 5, 6]);\n    expect(pathArrs[3]).to.eql([\"l\", 7, 8]);\n    expect(pathArrs[4]).to.eql([\"H\", 9]);\n    expect(pathArrs[5]).to.eql([\"h\", 10]);\n    expect(pathArrs[6]).to.eql([\"V\", 11]);\n    expect(pathArrs[7]).to.eql([\"v\", 12]);\n    expect(pathArrs[8]).to.eql([\"C\", 13, 14, 15, 16, 17, 18]);\n    expect(pathArrs[9]).to.eql([\"c\", 19, 20, 21, 22, 23, 24]);\n    expect(pathArrs[10]).to.eql([\"S\", 25, 26, 27, 28]);\n    expect(pathArrs[11]).to.eql([\"s\", 29, 30, 31, 32]);\n    expect(pathArrs[12]).to.eql([\"Q\", 33, 34, 35, 36]);\n    expect(pathArrs[13]).to.eql([\"q\", 37, 38, 39, 40]);\n    expect(pathArrs[14]).to.eql([\"T\", 41, 42]);\n    expect(pathArrs[15]).to.eql([\"t\", 43, 44]);\n    expect(pathArrs[16]).to.eql([\"A\", 45, 46, 47, 0, 1, 48, 49]);\n    expect(pathArrs[17]).to.eql([\"a\", 50, 51, 52, 1, 0, 53, 54]);\n    expect(pathArrs[18]).to.eql([\"Z\"]);\n  });","file":"snap-tests.js","skipped":false,"dir":"test"},{"name":"Snap.parsePathString - array","suites":["Snap methods"],"updatePoint":{"line":310,"column":34},"line":310,"code":"  it(\"Snap.parsePathString - array\", function () {\n    var pathArrs = Snap.parsePathString([\"M1 2\"]);\n    expect(pathArrs[0]).to.eql([\"M\", 1, 2]);\n  });","file":"snap-tests.js","skipped":false,"dir":"test"},{"name":"Snap.parseTransformString - string","suites":["Snap methods"],"updatePoint":{"line":314,"column":40},"line":314,"code":"  it(\"Snap.parseTransformString - string\", function () {\n    var matrix = new Snap.Matrix(1, 0, 0, 2, 0, 0);\n    var str = matrix.toTransformString();\n    var output = Snap.parseTransformString(str);\n    expect(output[0]).to.eql(['s', 1, 2, 0, 0]);\n  });","file":"snap-tests.js","skipped":false,"dir":"test"},{"name":"Snap.parseTransformString - array","suites":["Snap methods"],"updatePoint":{"line":320,"column":39},"line":320,"code":"  it(\"Snap.parseTransformString - array\", function () {\n    var output = Snap.parseTransformString(['s', 1, 2, 0, 0]);\n    expect(output[0]).to.eql(['s', 1, 2, 0, 0]);\n  });","file":"snap-tests.js","skipped":false,"dir":"test"},{"name":"Snap.select","suites":["Snap methods"],"updatePoint":{"line":324,"column":17},"line":324,"code":"  it(\"Snap.select\", function () {\n    var s = Snap(10, 10);\n    var group1 = s.group();\n    var group2 = s.group();\n    var group3 = s.group();\n    var circle1 = s.circle(10, 20, 30).attr({\n      'class': 'circle-one'\n    });\n    var circle2 = s.circle(5, 10, 25).attr({\n      'class': 'circle-two'\n    });\n    group1.add(group2);\n    group2.add(group3);\n    group2.add(circle1);\n    group3.add(circle2);\n    var c1 = Snap.select('.circle-one');\n    expect(circle1).to.be(c1);\n    var c2 = Snap.select('.circle-two');\n    expect(circle2).to.be(c2);\n    s.remove();\n  });","file":"snap-tests.js","skipped":false,"dir":"test"},{"name":"Snap.selectAll","suites":["Snap methods"],"updatePoint":{"line":345,"column":20},"line":345,"code":"  it(\"Snap.selectAll\", function () {\n    var s = Snap(10, 10);\n    var group1 = s.group();\n    var group2 = s.group();\n    var group3 = s.group();\n    var circle1 = s.circle(10, 20, 30).attr({\n      'class': 'circle-one'\n    });\n    var circle2 = s.circle(5, 10, 25).attr({\n      'class': 'circle-two'\n    });\n    group1.add(group2);\n    group2.add(group3);\n    group2.add(circle1);\n    group3.add(circle2);\n    var circles = Snap.selectAll('circle');\n    expect(circles.length).to.be(2);\n    expect(circles).to.contain(circle1);\n    expect(circles).to.contain(circle2);\n    s.remove();\n  });","file":"snap-tests.js","skipped":false,"dir":"test"},{"name":"Snap.snapTo - number, no tolerance","suites":["Snap methods"],"updatePoint":{"line":366,"column":40},"line":366,"code":"  it(\"Snap.snapTo - number, no tolerance\", function () {\n    expect(Snap.snapTo(100, -5)).to.be(0);\n    expect(Snap.snapTo(100, 0.0001)).to.be(0);\n    expect(Snap.snapTo(100, 9)).to.be(0);\n    expect(Snap.snapTo(100, 50)).to.be(50);\n    expect(Snap.snapTo(100, 75)).to.be(75);\n    expect(Snap.snapTo(100, 90)).to.be(90);\n    expect(Snap.snapTo(100, 91)).to.be(100);\n    expect(Snap.snapTo(100, 95)).to.be(100);\n    expect(Snap.snapTo(100, 1204)).to.be(1200);\n  });","file":"snap-tests.js","skipped":false,"dir":"test"},{"name":"Snap.snapTo - array, no tolerance","suites":["Snap methods"],"updatePoint":{"line":377,"column":39},"line":377,"code":"  it(\"Snap.snapTo - array, no tolerance\", function () {\n    var grid = [0, 55, 200];\n    expect(Snap.snapTo(grid, -5)).to.be(0);\n    expect(Snap.snapTo(grid, 0.0001)).to.be(0);\n    expect(Snap.snapTo(grid, 9)).to.be(0);\n    expect(Snap.snapTo(grid, 50)).to.be(55);\n    expect(Snap.snapTo(grid, 75)).to.be(75);\n    expect(Snap.snapTo(grid, 90)).to.be(90);\n    expect(Snap.snapTo(grid, 91)).to.be(91);\n    expect(Snap.snapTo(grid, 195)).to.be(200);\n    expect(Snap.snapTo(grid, 1204)).to.be(1204);\n  });","file":"snap-tests.js","skipped":false,"dir":"test"},{"name":"Snap.snapTo - number, with tolerance","suites":["Snap methods"],"updatePoint":{"line":389,"column":42},"line":389,"code":"  it(\"Snap.snapTo - number, with tolerance\", function () {\n    expect(Snap.snapTo(100, 95, 0)).to.be(95);\n    expect(Snap.snapTo(100, 95, 5)).to.be(95);\n    expect(Snap.snapTo(100, 95, 6)).to.be(100);\n    expect(Snap.snapTo(100, 105, 6)).to.be(100);\n    expect(Snap.snapTo(100, 105, 5)).to.be(105);\n    expect(Snap.snapTo(100, 105, 0)).to.be(105); // expect(Snap.snapTo(10, 19, 50)).to.be(20); // TODO: Find out what tolerance > grid should do\n  });","file":"snap-tests.js","skipped":false,"dir":"test"},{"name":"Snap.snapTo - array, with tolerance","suites":["Snap methods"],"updatePoint":{"line":397,"column":41},"line":397,"code":"  it(\"Snap.snapTo - array, with tolerance\", function () {\n    var grid = [0, 55, 200];\n    expect(Snap.snapTo(grid, -5, 20)).to.be(0);\n    expect(Snap.snapTo(grid, -5, 3)).to.be(-5);\n    expect(Snap.snapTo(grid, 0.0001, 0.00001)).to.be(0.0001);\n    expect(Snap.snapTo(grid, 0.0001, 1)).to.be(0);\n    expect(Snap.snapTo(grid, 9, 9)).to.be(0);\n    expect(Snap.snapTo(grid, 9, 10.5)).to.be(0);\n    expect(Snap.snapTo(grid, 50, 6)).to.be(55);\n    expect(Snap.snapTo(grid, 50, 1)).to.be(50);\n    expect(Snap.snapTo(grid, 201, 0.5)).to.be(201);\n    expect(Snap.snapTo(grid, 199, 1)).to.be(200);\n    expect(Snap.snapTo(grid, 299, 100)).to.be(200);\n  });","file":"snap-tests.js","skipped":false,"dir":"test"},{"name":"Snap.path.getBBox","suites":["Snap methods"],"updatePoint":{"line":411,"column":23},"line":411,"code":"  it(\"Snap.path.getBBox\", function () {\n    // same as 10,20,30,40 rect\n    var bbox = Snap.path.getBBox(\"M10,20h30v40h-30z\");\n    expect(bbox.x).to.eql(10);\n    expect(bbox.y).to.eql(20);\n    expect(bbox.width).to.eql(30);\n    expect(bbox.height).to.eql(40);\n    expect(bbox.x2).to.eql(10 + 30);\n    expect(bbox.y2).to.eql(20 + 40);\n  });","file":"snap-tests.js","skipped":false,"dir":"test"},{"name":"Snap.angle - 2 points","suites":["Snap methods"],"updatePoint":{"line":421,"column":27},"line":421,"code":"  it(\"Snap.angle - 2 points\", function () {\n    var angle = Snap.angle(0, 0, 10, 10);\n    expect(angle).to.not.be(0);\n    expect(angle % 45).to.be(0);\n    angle = Snap.angle(0, 0, 10, 0);\n    expect(angle % 90).to.be(0);\n  });","file":"snap-tests.js","skipped":false,"dir":"test"},{"name":"Snap.angle - 3 points","suites":["Snap methods"],"updatePoint":{"line":428,"column":27},"line":428,"code":"  it(\"Snap.angle - 3 points\", function () {\n    var angle = Snap.angle(10, 0, 0, 10, 0, 0);\n    expect(angle).to.not.be(0);\n    expect(angle % 45).to.be(0);\n    angle = Snap.angle(10, 0, 0, 10, 0, 0);\n    expect(Math.abs(angle)).to.be(90);\n  });","file":"snap-tests.js","skipped":false,"dir":"test"},{"name":"Snap exists","suites":["System check"],"updatePoint":{"line":2,"column":17},"line":2,"code":"  it(\"Snap exists\", function () {\n    expect(Snap).to.be.a(\"function\");\n  });","file":"system.js","skipped":false,"dir":"test"},{"name":"eve exists","suites":["System check"],"updatePoint":{"line":5,"column":16},"line":5,"code":"  it(\"eve exists\", function () {\n    expect(eve).to.be.a(\"function\");\n  });","file":"system.js","skipped":false,"dir":"test"},{"name":"mina exists","suites":["System check"],"updatePoint":{"line":8,"column":17},"line":8,"code":"  it(\"mina exists\", function () {\n    expect(mina).to.be.a(\"function\");\n  });","file":"system.js","skipped":false,"dir":"test"}]}