{"repo":"airbnb/react-sketchapp","url":"https://github.com/airbnb/react-sketchapp","branch":"master","configs":[{"package":"react-sketchapp","lang":"js","dir":"__tests__","framework":"jest","pattern":"**/*[._-]{test,spec,unittest,unit}.{ts,js}"}],"tests":[{"name":"should render a Page with a rectangle","suites":[],"updatePoint":{"line":21,"column":43,"index":661},"line":21,"code":"test('should render a Page with a rectangle', (context, document) => {\n  const nativePage = getDoc(context, document).currentPage();\n\n  const Swatch = ({\n    name,\n    hex\n  }) => /*#__PURE__*/React.createElement(View, {\n    name: `Swatch ${name}`,\n    style: {\n      height: 96,\n      width: 96,\n      margin: 4,\n      backgroundColor: hex,\n      padding: 8\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    name: \"Swatch Name\",\n    style: {\n      color: '#000',\n      fontWeight: 'bold'\n    }\n  }, name), /*#__PURE__*/React.createElement(Text, {\n    name: \"Swatch Hex\",\n    style: {\n      color: '#000'\n    }\n  }, hex));\n\n  render( /*#__PURE__*/React.createElement(Artboard, {\n    name: \"Swatches\",\n    style: {\n      flexDirection: 'row',\n      flexWrap: 'wrap',\n      width: (96 + 8) * 4\n    }\n  }, Object.keys(colorList).map(color => /*#__PURE__*/React.createElement(Swatch, {\n    name: color,\n    hex: colorList[color],\n    key: color\n  }))), nativePage);\n  const page = sketch.Page.fromNative(nativePage);\n  expect(page.layers[0].name).toBe('Swatches');\n});","file":"skpm/basic.test.js","skipped":false,"dir":"__tests__"},{"name":"should render a Page with context events","suites":[],"updatePoint":{"line":11,"column":46,"index":417},"line":11,"code":"test('should render a Page with context events', (context, document) => {\n  const {\n    selectedPage\n  } = getDoc(document);\n\n  const Swatch = ({\n    hex\n  }) => {\n    const [count, setCount] = React.useState(0);\n    React.useEffect(() => {\n      setCount(10);\n    }, [count]);\n    return /*#__PURE__*/React.createElement(View, {\n      name: `Count is ${count}`,\n      style: {\n        height: 96,\n        width: 96,\n        margin: 4,\n        backgroundColor: hex,\n        padding: 8\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      name: \"Swatch Name\",\n      style: {\n        color: '#000',\n        fontWeight: 'bold'\n      }\n    }, \"Count is \", count));\n  };\n\n  render( /*#__PURE__*/React.createElement(Swatch, {\n    hex: \"#F3F4F4\"\n  }), selectedPage);\n  expect(selectedPage.layers[0].name).toBe('Count is 10');\n});","file":"skpm/render-context.test.js","skipped":false,"dir":"__tests__"},{"name":"should render a Page with a rectangle","suites":[],"updatePoint":{"line":21,"column":43,"index":617},"line":21,"code":"test('should render a Page with a rectangle', (context, document) => {\n  const {\n    selectedPage\n  } = getDoc(document);\n\n  const Swatch = ({\n    name,\n    hex\n  }) => /*#__PURE__*/React.createElement(View, {\n    name: `Swatch ${name}`,\n    style: {\n      height: 96,\n      width: 96,\n      margin: 4,\n      backgroundColor: hex,\n      padding: 8\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    name: \"Swatch Name\",\n    style: {\n      color: '#000',\n      fontWeight: 'bold'\n    }\n  }, name), /*#__PURE__*/React.createElement(Text, {\n    name: \"Swatch Hex\",\n    style: {\n      color: '#000'\n    }\n  }, hex));\n\n  render( /*#__PURE__*/React.createElement(Artboard, {\n    name: \"Swatches\",\n    style: {\n      flexDirection: 'row',\n      flexWrap: 'wrap',\n      width: (96 + 8) * 4\n    }\n  }, Object.keys(colorList).map(color => /*#__PURE__*/React.createElement(Swatch, {\n    name: color,\n    hex: colorList[color],\n    key: color\n  }))), selectedPage);\n  expect(selectedPage.layers[0].name).toBe('Swatches');\n});","file":"skpm/render-in-wrapped-object.test.js","skipped":false,"dir":"__tests__"}]}