{"repo":"jamiebuilds/react-loadable","url":"https://github.com/jamiebuilds/react-loadable","branch":"master","configs":[{"package":"react-loadable","lang":"js","dir":"__tests__","framework":"jest","pattern":"**/*.{js,ts}"}],"tests":[{"name":"loading success","suites":[],"updatePoint":{"line":34,"column":21,"index":846},"line":34,"code":"test('loading success', async () => {\n  let LoadableMyComponent = Loadable({\n    loader: createLoader(400, () => MyComponent),\n    loading: MyLoadingComponent\n  });\n  let component1 = renderer.create( /*#__PURE__*/React.createElement(LoadableMyComponent, {\n    prop: \"foo\"\n  }));\n  expect(component1.toJSON()).toMatchSnapshot(); // initial\n  await waitFor(200);\n  expect(component1.toJSON()).toMatchSnapshot(); // loading\n  await waitFor(200);\n  expect(component1.toJSON()).toMatchSnapshot(); // loaded\n\n  let component2 = renderer.create( /*#__PURE__*/React.createElement(LoadableMyComponent, {\n    prop: \"bar\"\n  }));\n  expect(component2.toJSON()).toMatchSnapshot(); // reload\n});","file":"test.js","skipped":false,"dir":"__tests__"},{"name":"delay and timeout","suites":[],"updatePoint":{"line":54,"column":23,"index":1531},"line":54,"code":"test('delay and timeout', async () => {\n  let LoadableMyComponent = Loadable({\n    loader: createLoader(300, () => MyComponent),\n    loading: MyLoadingComponent,\n    delay: 100,\n    timeout: 200\n  });\n  let component1 = renderer.create( /*#__PURE__*/React.createElement(LoadableMyComponent, {\n    prop: \"foo\"\n  }));\n  expect(component1.toJSON()).toMatchSnapshot(); // initial\n  await waitFor(100);\n  expect(component1.toJSON()).toMatchSnapshot(); // loading\n  await waitFor(100);\n  expect(component1.toJSON()).toMatchSnapshot(); // timed out\n  await waitFor(100);\n  expect(component1.toJSON()).toMatchSnapshot(); // loaded\n});","file":"test.js","skipped":false,"dir":"__tests__"},{"name":"loading error","suites":[],"updatePoint":{"line":73,"column":19,"index":2155},"line":73,"code":"test('loading error', async () => {\n  let LoadableMyComponent = Loadable({\n    loader: createLoader(400, null, new Error('test error')),\n    loading: MyLoadingComponent\n  });\n  let component = renderer.create( /*#__PURE__*/React.createElement(LoadableMyComponent, {\n    prop: \"baz\"\n  }));\n  expect(component.toJSON()).toMatchSnapshot(); // initial\n  await waitFor(200);\n  expect(component.toJSON()).toMatchSnapshot(); // loading\n  await waitFor(200);\n  expect(component.toJSON()).toMatchSnapshot(); // errored\n});","file":"test.js","skipped":false,"dir":"__tests__"},{"name":"server side rendering","suites":[],"updatePoint":{"line":88,"column":27,"index":2678},"line":88,"code":"test('server side rendering', async () => {\n  let LoadableMyComponent = Loadable({\n    loader: createLoader(400, () => require('../__fixtures__/component')),\n    loading: MyLoadingComponent\n  });\n  await Loadable.preloadAll();\n  let component = renderer.create( /*#__PURE__*/React.createElement(LoadableMyComponent, {\n    prop: \"baz\"\n  }));\n  expect(component.toJSON()).toMatchSnapshot(); // serverside\n});","file":"test.js","skipped":false,"dir":"__tests__"},{"name":"server side rendering es6","suites":[],"updatePoint":{"line":100,"column":31,"index":3090},"line":100,"code":"test('server side rendering es6', async () => {\n  let LoadableMyComponent = Loadable({\n    loader: createLoader(400, () => require('../__fixtures__/component.es6')),\n    loading: MyLoadingComponent\n  });\n  await Loadable.preloadAll();\n  let component = renderer.create( /*#__PURE__*/React.createElement(LoadableMyComponent, {\n    prop: \"baz\"\n  }));\n  expect(component.toJSON()).toMatchSnapshot(); // serverside\n});","file":"test.js","skipped":false,"dir":"__tests__"},{"name":"preload","suites":[],"updatePoint":{"line":112,"column":13,"index":3488},"line":112,"code":"test('preload', async () => {\n  let LoadableMyComponent = Loadable({\n    loader: createLoader(400, () => MyComponent),\n    loading: MyLoadingComponent\n  });\n  let promise = LoadableMyComponent.preload();\n  await waitFor(200);\n  let component1 = renderer.create( /*#__PURE__*/React.createElement(LoadableMyComponent, {\n    prop: \"baz\"\n  }));\n  expect(component1.toJSON()).toMatchSnapshot(); // still loading...\n  await promise;\n  expect(component1.toJSON()).toMatchSnapshot(); // success\n\n  let component2 = renderer.create( /*#__PURE__*/React.createElement(LoadableMyComponent, {\n    prop: \"baz\"\n  }));\n  expect(component2.toJSON()).toMatchSnapshot(); // success\n});","file":"test.js","skipped":false,"dir":"__tests__"},{"name":"render","suites":[],"updatePoint":{"line":132,"column":12,"index":4155},"line":132,"code":"test('render', async () => {\n  let LoadableMyComponent = Loadable({\n    loader: createLoader(400, () => ({\n      MyComponent\n    })),\n    loading: MyLoadingComponent,\n    render(loaded, props) {\n      return /*#__PURE__*/React.createElement(loaded.MyComponent, props);\n    }\n  });\n  let component = renderer.create( /*#__PURE__*/React.createElement(LoadableMyComponent, {\n    prop: \"baz\"\n  }));\n  expect(component.toJSON()).toMatchSnapshot(); // initial\n  await waitFor(200);\n  expect(component.toJSON()).toMatchSnapshot(); // loading\n  await waitFor(200);\n  expect(component.toJSON()).toMatchSnapshot(); // success\n});","file":"test.js","skipped":false,"dir":"__tests__"},{"name":"loadable map success","suites":[],"updatePoint":{"line":152,"column":26,"index":4790},"line":152,"code":"test('loadable map success', async () => {\n  let LoadableMyComponent = Loadable.Map({\n    loader: {\n      a: createLoader(200, () => ({\n        MyComponent\n      })),\n      b: createLoader(400, () => ({\n        MyComponent\n      }))\n    },\n    loading: MyLoadingComponent,\n    render(loaded, props) {\n      return /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(loaded.a.MyComponent, props), /*#__PURE__*/React.createElement(loaded.b.MyComponent, props));\n    }\n  });\n  let component = renderer.create( /*#__PURE__*/React.createElement(LoadableMyComponent, {\n    prop: \"baz\"\n  }));\n  expect(component.toJSON()).toMatchSnapshot(); // initial\n  await waitFor(200);\n  expect(component.toJSON()).toMatchSnapshot(); // loading\n  await waitFor(200);\n  expect(component.toJSON()).toMatchSnapshot(); // success\n});","file":"test.js","skipped":false,"dir":"__tests__"},{"name":"loadable map error","suites":[],"updatePoint":{"line":177,"column":24,"index":5627},"line":177,"code":"test('loadable map error', async () => {\n  let LoadableMyComponent = Loadable.Map({\n    loader: {\n      a: createLoader(200, () => ({\n        MyComponent\n      })),\n      b: createLoader(400, null, new Error('test error'))\n    },\n    loading: MyLoadingComponent,\n    render(loaded, props) {\n      return /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(loaded.a.MyComponent, props), /*#__PURE__*/React.createElement(loaded.b.MyComponent, props));\n    }\n  });\n  let component = renderer.create( /*#__PURE__*/React.createElement(LoadableMyComponent, {\n    prop: \"baz\"\n  }));\n  expect(component.toJSON()).toMatchSnapshot(); // initial\n  await waitFor(200);\n  expect(component.toJSON()).toMatchSnapshot(); // loading\n  await waitFor(200);\n  expect(component.toJSON()).toMatchSnapshot(); // success\n});","file":"test.js","skipped":false,"dir":"__tests__"},{"name":"undefined","suites":["preloadReady"],"updatePoint":{"line":210,"column":17,"index":6645},"line":210,"code":"  test('undefined', async () => {\n    let LoadableMyComponent = Loadable({\n      loader: createLoader(200, () => MyComponent),\n      loading: MyLoadingComponent\n    });\n    await Loadable.preloadReady();\n    let component = renderer.create( /*#__PURE__*/React.createElement(LoadableMyComponent, {\n      prop: \"baz\"\n    }));\n    expect(component.toJSON()).toMatchSnapshot();\n  });","file":"test.js","skipped":false,"dir":"__tests__"},{"name":"one","suites":["preloadReady"],"updatePoint":{"line":221,"column":11,"index":7019},"line":221,"code":"  test('one', async () => {\n    let LoadableMyComponent = Loadable({\n      loader: createLoader(200, () => MyComponent),\n      loading: MyLoadingComponent,\n      webpack: () => [1]\n    });\n    await Loadable.preloadReady();\n    let component = renderer.create( /*#__PURE__*/React.createElement(LoadableMyComponent, {\n      prop: \"baz\"\n    }));\n    expect(component.toJSON()).toMatchSnapshot();\n  });","file":"test.js","skipped":false,"dir":"__tests__"},{"name":"many","suites":["preloadReady"],"updatePoint":{"line":233,"column":12,"index":7420},"line":233,"code":"  test('many', async () => {\n    let LoadableMyComponent = Loadable({\n      loader: createLoader(200, () => MyComponent),\n      loading: MyLoadingComponent,\n      webpack: () => [1, 2]\n    });\n    await Loadable.preloadReady();\n    let component = renderer.create( /*#__PURE__*/React.createElement(LoadableMyComponent, {\n      prop: \"baz\"\n    }));\n    expect(component.toJSON()).toMatchSnapshot();\n  });","file":"test.js","skipped":false,"dir":"__tests__"},{"name":"missing","suites":["preloadReady"],"updatePoint":{"line":245,"column":15,"index":7827},"line":245,"code":"  test('missing', async () => {\n    let LoadableMyComponent = Loadable({\n      loader: createLoader(200, () => MyComponent),\n      loading: MyLoadingComponent,\n      webpack: () => [1, 42]\n    });\n    await Loadable.preloadReady();\n    let component = renderer.create( /*#__PURE__*/React.createElement(LoadableMyComponent, {\n      prop: \"baz\"\n    }));\n    expect(component.toJSON()).toMatchSnapshot();\n  });","file":"test.js","skipped":false,"dir":"__tests__"},{"name":"delay with 0","suites":["preloadReady"],"updatePoint":{"line":257,"column":20,"index":8240},"line":257,"code":"  test('delay with 0', () => {\n    let LoadableMyComponent = Loadable({\n      loader: createLoader(300, () => MyComponent),\n      loading: MyLoadingComponent,\n      delay: 0,\n      timeout: 200\n    });\n    let loadingComponent = renderer.create( /*#__PURE__*/React.createElement(LoadableMyComponent, {\n      prop: \"foo\"\n    }));\n    expect(loadingComponent.toJSON()).toMatchSnapshot(); // loading\n  });","file":"test.js","skipped":false,"dir":"__tests__"}]}