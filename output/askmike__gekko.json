{"repo":"askmike/gekko","url":"https://github.com/askmike/gekko","branch":"develop","configs":[{"package":"gekko","lang":"js","dir":"test","framework":"mocha","pattern":"**/*.{js,ts}"}],"tests":[{"name":"should throw when not passed a number","suites":["core/candleBatcher"],"updatePoint":{"line":113,"column":43,"index":2363},"line":113,"code":"  it('should throw when not passed a number', function () {\n    expect(function () {\n      new CandleBatcher();\n    }).to.throw('candleSize is not a number');\n  });","file":"candleBatcher.js","skipped":false,"dir":"test"},{"name":"should instantiate","suites":["core/candleBatcher"],"updatePoint":{"line":118,"column":24,"index":2509},"line":118,"code":"  it('should instantiate', function () {\n    cb = new CandleBatcher(2);\n  });","file":"candleBatcher.js","skipped":false,"dir":"test"},{"name":"should throw when fed a candle","suites":["core/candleBatcher"],"updatePoint":{"line":121,"column":36,"index":2599},"line":121,"code":"  it('should throw when fed a candle', function () {\n    var candle = _.first(candles);\n    expect(cb.write.bind(cb, candle)).to.throw('candles is not an array');\n  });","file":"candleBatcher.js","skipped":false,"dir":"test"},{"name":"should not emit an event when fed not enough candles","suites":["core/candleBatcher"],"updatePoint":{"line":125,"column":58,"index":2790},"line":125,"code":"  it('should not emit an event when fed not enough candles', function () {\n    var candle = _.first(candles);\n    var spy = sinon.spy();\n    cb.on('candle', spy);\n    cb.write([candle]);\n    expect(spy.called).to.be.false;\n  });","file":"candleBatcher.js","skipped":false,"dir":"test"},{"name":"should not emit an event when not flushed","suites":["core/candleBatcher"],"updatePoint":{"line":132,"column":47,"index":3008},"line":132,"code":"  it('should not emit an event when not flushed', function () {\n    cb = new CandleBatcher(2);\n    var spy = sinon.spy();\n    cb.on('candle', spy);\n    cb.write(candles);\n    expect(spy.called).to.be.false;\n  });","file":"candleBatcher.js","skipped":false,"dir":"test"},{"name":"should emit 5 events when fed 10 candles","suites":["core/candleBatcher"],"updatePoint":{"line":139,"column":46,"index":3220},"line":139,"code":"  it('should emit 5 events when fed 10 candles', function () {\n    cb = new CandleBatcher(2);\n    var spy = sinon.spy();\n    cb.on('candle', spy);\n    cb.write(candles);\n    cb.flush();\n    expect(spy.callCount).to.equal(5);\n  });","file":"candleBatcher.js","skipped":false,"dir":"test"},{"name":"should correctly add two candles together","suites":["core/candleBatcher"],"updatePoint":{"line":147,"column":47,"index":3452},"line":147,"code":"  it('should correctly add two candles together', function () {\n    cb = new CandleBatcher(2);\n    var _candles = _.first(candles, 2);\n    var first = _.first(_candles);\n    var second = _.last(_candles);\n    var result = {\n      start: first.start,\n      open: first.open,\n      high: _.max([first.high, second.high]),\n      low: _.min([first.low, second.low]),\n      close: second.close,\n      volume: first.volume + second.volume,\n      vwp: first.vwp * first.volume + second.vwp * second.volume,\n      trades: first.trades + second.trades\n    };\n    result.vwp /= result.volume;\n    var spy = sinon.spy();\n    cb.on('candle', spy);\n    cb.write(_candles);\n    cb.flush();\n    var cbResult = _.first(_.first(spy.args));\n    expect(cbResult).to.deep.equal(result);\n    expect(cbResult.id).to.equal(undefined);\n  });","file":"candleBatcher.js","skipped":false,"dir":"test"},{"name":"should correctly calculate CCI with period 8","suites":["indicators/CCI"],"updatePoint":{"line":27,"column":50,"index":2411},"line":27,"code":"  it('should correctly calculate CCI with period 8', function () {\n    var cci = new CCI({\n      history: 8,\n      constant: 0.015\n    });\n    _.each(close, function (p, i) {\n      cci.update({\n        high: high[i],\n        low: low[i],\n        close: close[i]\n      });\n      //when i<history, cci.results returns false\n      if (typeof cci.result == 'boolean') cci.result = 0;\n      expect(cci.result.toFixed(6)).to.equal(verified_cci8results[i].toFixed(6));\n    });\n  });","file":"indicators/cci.js","skipped":false,"dir":"test"},{"name":"should correctly calculate CCI with period 10","suites":["indicators/CCI"],"updatePoint":{"line":43,"column":51,"index":2888},"line":43,"code":"  it('should correctly calculate CCI with period 10', function () {\n    var cci = new CCI({\n      history: 10,\n      constant: 0.015\n    });\n    _.each(close, function (p, i) {\n      cci.update({\n        high: high[i],\n        low: low[i],\n        close: close[i]\n      });\n      if (typeof cci.result == 'boolean') cci.result = 0;\n      expect(cci.result.toFixed(6)).to.equal(verified_cci10results[i].toFixed(6));\n    });\n  });","file":"indicators/cci.js","skipped":false,"dir":"test"},{"name":"should correctly calculate CCI with period 12","suites":["indicators/CCI"],"updatePoint":{"line":58,"column":51,"index":3317},"line":58,"code":"  it('should correctly calculate CCI with period 12', function () {\n    var cci = new CCI({\n      history: 12,\n      constant: 0.015\n    });\n    _.each(close, function (p, i) {\n      cci.update({\n        high: high[i],\n        low: low[i],\n        close: close[i]\n      });\n      if (typeof cci.result == 'boolean') cci.result = 0;\n      expect(cci.result.toFixed(6)).to.equal(verified_cci12results[i].toFixed(6));\n    });\n  });","file":"indicators/cci.js","skipped":false,"dir":"test"},{"name":"should correctly calculate DEMA with weight 10","suites":["indicators/DEMA"],"updatePoint":{"line":23,"column":52,"index":1593},"line":23,"code":"  it('should correctly calculate DEMA with weight 10', function () {\n    let dema = new DEMA({\n      weight: 10\n    });\n    _.each(prices, function (p, i) {\n      dema.update(p);\n      expect(dema.result).to.equal(verified_dema10results[i]);\n    });\n  });","file":"indicators/dema.js","skipped":false,"dir":"test"},{"name":"should correctly calculate EMAs with weight 10","suites":["indicators/EMA"],"updatePoint":{"line":25,"column":52,"index":3109},"line":25,"code":"  it('should correctly calculate EMAs with weight 10', function () {\n    var ema = new EMA(10);\n    _.each(prices, function (p, i) {\n      ema.update(p);\n      expect(ema.result).to.equal(verified_ema10results[i]);\n    });\n  });","file":"indicators/ema.js","skipped":false,"dir":"test"},{"name":"should correctly calculate EMAs with weight 12","suites":["indicators/EMA"],"updatePoint":{"line":32,"column":52,"index":3338},"line":32,"code":"  it('should correctly calculate EMAs with weight 12', function () {\n    var ema = new EMA(12);\n    _.each(prices, function (p, i) {\n      ema.update(p);\n      expect(ema.result).to.equal(verified_ema12results[i]);\n    });\n  });","file":"indicators/ema.js","skipped":false,"dir":"test"},{"name":"should correctly calculate EMAs with weight 26","suites":["indicators/EMA"],"updatePoint":{"line":39,"column":52,"index":3567},"line":39,"code":"  it('should correctly calculate EMAs with weight 26', function () {\n    var ema = new EMA(26);\n    _.each(prices, function (p, i) {\n      ema.update(p);\n      expect(ema.result).to.equal(verified_ema26results[i]);\n    });\n  });","file":"indicators/ema.js","skipped":false,"dir":"test"},{"name":"should correctly calculate MACD diffs with 12/26/9","suites":["indicators/MACD"],"updatePoint":{"line":25,"column":56,"index":3255},"line":25,"code":"  it('should correctly calculate MACD diffs with 12/26/9', function () {\n    var macd = new MACD({\n      short: 12,\n      long: 26,\n      signal: 9\n    });\n    _.each(prices, function (p, i) {\n      macd.update(p);\n      expect(macd.diff).to.equal(verified_macd12v26v9diff[i]);\n    });\n  });","file":"indicators/macd.js","skipped":false,"dir":"test"},{"name":"should correctly calculate MACD signals with 12/26/9","suites":["indicators/MACD"],"updatePoint":{"line":36,"column":58,"index":3549},"line":36,"code":"  it('should correctly calculate MACD signals with 12/26/9', function () {\n    var macd = new MACD({\n      short: 12,\n      long: 26,\n      signal: 9\n    });\n    _.each(prices, function (p, i) {\n      macd.update(p);\n      expect(macd.signal.result).to.equal(verified_macd12v26v9signal[i]);\n    });\n  });","file":"indicators/macd.js","skipped":false,"dir":"test"},{"name":"should correctly calculate MACD results with 12/26/9","suites":["indicators/MACD"],"updatePoint":{"line":47,"column":58,"index":3854},"line":47,"code":"  it('should correctly calculate MACD results with 12/26/9', function () {\n    var macd = new MACD({\n      short: 12,\n      long: 26,\n      signal: 9\n    });\n    _.each(prices, function (p, i) {\n      macd.update(p);\n      expect(macd.result).to.equal(verified_macd12v26v9result[i]);\n    });\n  });","file":"indicators/macd.js","skipped":false,"dir":"test"},{"name":"should correctly calculate PPOs with 12/26/9","suites":["indicators/PPO"],"updatePoint":{"line":64,"column":50,"index":6638},"line":64,"code":"  it('should correctly calculate PPOs with 12/26/9', function () {\n    var ppo = new PPO({\n      short: 12,\n      long: 26,\n      signal: 9\n    });\n    _.each(prices, function (p, i) {\n      ppo.update(p);\n      expect(ppo.result.ppo).to.equal(verified_ppo12v26v9[i]);\n    });\n  });","file":"indicators/macd.js","skipped":false,"dir":"test"},{"name":"should correctly calculate PPO signals with 12/26/9","suites":["indicators/PPO"],"updatePoint":{"line":75,"column":57,"index":6928},"line":75,"code":"  it('should correctly calculate PPO signals with 12/26/9', function () {\n    var ppo = new PPO({\n      short: 12,\n      long: 26,\n      signal: 9\n    });\n    _.each(prices, function (p, i) {\n      ppo.update(p);\n      expect(ppo.result.PPOsignal).to.equal(verified_ppo12v26v9signal[i]);\n    });\n  });","file":"indicators/macd.js","skipped":false,"dir":"test"},{"name":"should correctly calculate PPO hists with 12/26/9","suites":["indicators/PPO"],"updatePoint":{"line":86,"column":55,"index":7228},"line":86,"code":"  it('should correctly calculate PPO hists with 12/26/9', function () {\n    var ppo = new PPO({\n      short: 12,\n      long: 26,\n      signal: 9\n    });\n    _.each(prices, function (p, i) {\n      ppo.update(p);\n      expect(ppo.result.PPOhist).to.equal(verified_ppo12v26v9hist[i]);\n    });\n  });","file":"indicators/macd.js","skipped":false,"dir":"test"},{"name":"should correctly calculate DEMAs","suites":["indicators/PPO"],"updatePoint":{"line":100,"column":39,"index":7602},"line":100,"code":"  xit('should correctly calculate DEMAs', function () {\n    // TODO!\n  });","skipped":true,"file":"indicators/macd.js","dir":"test"},{"name":"should correctly calculate PPOs with 12/26/9","suites":["indicators/PPO"],"updatePoint":{"line":25,"column":50,"index":3228},"line":25,"code":"  it('should correctly calculate PPOs with 12/26/9', function () {\n    var ppo = new PPO({\n      short: 12,\n      long: 26,\n      signal: 9\n    });\n    _.each(prices, function (p, i) {\n      ppo.update(p);\n      expect(ppo.result.ppo).to.equal(verified_ppo12v26v9[i]);\n    });\n  });","file":"indicators/ppo.js","skipped":false,"dir":"test"},{"name":"should correctly calculate PPO signals with 12/26/9","suites":["indicators/PPO"],"updatePoint":{"line":36,"column":57,"index":3518},"line":36,"code":"  it('should correctly calculate PPO signals with 12/26/9', function () {\n    var ppo = new PPO({\n      short: 12,\n      long: 26,\n      signal: 9\n    });\n    _.each(prices, function (p, i) {\n      ppo.update(p);\n      expect(ppo.result.PPOsignal).to.equal(verified_ppo12v26v9signal[i]);\n    });\n  });","file":"indicators/ppo.js","skipped":false,"dir":"test"},{"name":"should correctly calculate PPO hists with 12/26/9","suites":["indicators/PPO"],"updatePoint":{"line":47,"column":55,"index":3818},"line":47,"code":"  it('should correctly calculate PPO hists with 12/26/9', function () {\n    var ppo = new PPO({\n      short: 12,\n      long: 26,\n      signal: 9\n    });\n    _.each(prices, function (p, i) {\n      ppo.update(p);\n      expect(ppo.result.PPOhist).to.equal(verified_ppo12v26v9hist[i]);\n    });\n  });","file":"indicators/ppo.js","skipped":false,"dir":"test"},{"name":"should correctly calculate RSI with period 2","suites":["indicators/RSI"],"updatePoint":{"line":24,"column":50,"index":2511},"line":24,"code":"  it('should correctly calculate RSI with period 2', function () {\n    var rsi = new RSI({\n      interval: 2\n    });\n    _.each(prices, function (p, i) {\n      rsi.update({\n        close: p\n      });\n      expect(rsi.result).to.equal(verified_rsi2results[i]);\n    });\n  });","file":"indicators/rsi.js","skipped":false,"dir":"test"},{"name":"should correctly calculate RSI with period 12","suites":["indicators/RSI"],"updatePoint":{"line":35,"column":51,"index":2786},"line":35,"code":"  it('should correctly calculate RSI with period 12', function () {\n    var rsi = new RSI({\n      interval: 12\n    });\n    _.each(prices, function (p, i) {\n      rsi.update({\n        close: p\n      });\n      expect(rsi.result).to.equal(verified_rsi12results[i]);\n    });\n  });","file":"indicators/rsi.js","skipped":false,"dir":"test"},{"name":"should correctly calculate RSI with period 26","suites":["indicators/RSI"],"updatePoint":{"line":46,"column":51,"index":3063},"line":46,"code":"  it('should correctly calculate RSI with period 26', function () {\n    var rsi = new RSI({\n      interval: 26\n    });\n    _.each(prices, function (p, i) {\n      rsi.update({\n        close: p\n      });\n      expect(rsi.result).to.equal(verified_rsi26results[i]);\n    });\n  });","file":"indicators/rsi.js","skipped":false,"dir":"test"},{"name":"should correctly calculate SMAs with window length 10","suites":["indicators/SMA"],"updatePoint":{"line":15,"column":59,"index":2002},"line":15,"code":"  it('should correctly calculate SMAs with window length 10', function () {\n    var sma = new SMA(10);\n    _.each(prices, function (p, i) {\n      sma.update(p);\n      expect(sma.result).to.equal(verified_SMA10results[i]);\n    });\n  });","file":"indicators/sma.js","skipped":false,"dir":"test"},{"name":"should correctly calculate SMAs with window length 12","suites":["indicators/SMA"],"updatePoint":{"line":22,"column":59,"index":2238},"line":22,"code":"  it('should correctly calculate SMAs with window length 12', function () {\n    var sma = new SMA(12);\n    _.each(prices, function (p, i) {\n      sma.update(p);\n      expect(sma.result).to.equal(verified_SMA12results[i]);\n    });\n  });","file":"indicators/sma.js","skipped":false,"dir":"test"},{"name":"should correctly calculate SMAs with window length 26","suites":["indicators/SMA"],"updatePoint":{"line":29,"column":59,"index":2474},"line":29,"code":"  it('should correctly calculate SMAs with window length 26', function () {\n    var sma = new SMA(26);\n    _.each(prices, function (p, i) {\n      sma.update(p);\n      expect(sma.result).to.equal(verified_SMA26results[i]);\n    });\n  });","file":"indicators/sma.js","skipped":false,"dir":"test"},{"name":"should correctly calculate SMMAs with weight 2","suites":["indicators/SMMA"],"updatePoint":{"line":24,"column":52,"index":2479},"line":24,"code":"  it('should correctly calculate SMMAs with weight 2', function () {\n    var smma = new SMMA(2);\n    _.each(prices, function (p, i) {\n      smma.update(p);\n      expect(smma.result).to.equal(verified_smma2results[i]);\n    });\n  });","file":"indicators/smma.js","skipped":false,"dir":"test"},{"name":"should correctly calculate SMMAs with weight 12","suites":["indicators/SMMA"],"updatePoint":{"line":31,"column":53,"index":2712},"line":31,"code":"  it('should correctly calculate SMMAs with weight 12', function () {\n    var smma = new SMMA(12);\n    _.each(prices, function (p, i) {\n      smma.update(p);\n      expect(smma.result).to.equal(verified_smma12results[i]);\n    });\n  });","file":"indicators/smma.js","skipped":false,"dir":"test"},{"name":"should correctly calculate SMMAs with weight 26","suites":["indicators/SMMA"],"updatePoint":{"line":38,"column":53,"index":2947},"line":38,"code":"  it('should correctly calculate SMMAs with weight 26', function () {\n    var smma = new SMMA(26);\n    _.each(prices, function (p, i) {\n      smma.update(p);\n      expect(smma.result).to.equal(verified_smma26results[i]);\n    });\n  });","file":"indicators/smma.js","skipped":false,"dir":"test"},{"name":"should throw when not passed a number","suites":["budfox/tradeBatcher"],"updatePoint":{"line":70,"column":43,"index":1125},"line":70,"code":"  it('should throw when not passed a number', function () {\n    expect(function () {\n      new TradeBatcher();\n    }).to.throw('tid is not a string');\n  });","file":"tradeBatcher.js","skipped":false,"dir":"test"},{"name":"should instantiate","suites":["budfox/tradeBatcher"],"updatePoint":{"line":75,"column":24,"index":1263},"line":75,"code":"  it('should instantiate', function () {\n    tb = new TradeBatcher('tid');\n  });","file":"tradeBatcher.js","skipped":false,"dir":"test"},{"name":"should throw when not fed an array","suites":["budfox/tradeBatcher"],"updatePoint":{"line":78,"column":40,"index":1360},"line":78,"code":"  it('should throw when not fed an array', function () {\n    var trade = _.first(trades_tid_1);\n    expect(tb.write.bind(tb, trade)).to.throw('batch is not an array');\n  });","file":"tradeBatcher.js","skipped":false,"dir":"test"},{"name":"should emit an event when fed trades","suites":["budfox/tradeBatcher"],"updatePoint":{"line":82,"column":42,"index":1536},"line":82,"code":"  it('should emit an event when fed trades', function () {\n    tb = new TradeBatcher('tid');\n    var spy = sinon.spy();\n    tb.on('new batch', spy);\n    tb.write(trades_tid_1);\n    expect(spy.callCount).to.equal(1);\n  });","file":"tradeBatcher.js","skipped":false,"dir":"test"},{"name":"should only emit once when fed the same trades twice","suites":["budfox/tradeBatcher"],"updatePoint":{"line":89,"column":58,"index":1774},"line":89,"code":"  it('should only emit once when fed the same trades twice', function () {\n    tb = new TradeBatcher('tid');\n    var spy = sinon.spy();\n    tb.on('new batch', spy);\n    tb.write(trades_tid_1);\n    tb.write(trades_tid_1);\n    expect(spy.callCount).to.equal(1);\n  });","file":"tradeBatcher.js","skipped":false,"dir":"test"},{"name":"should correctly set meta data","suites":["budfox/tradeBatcher"],"updatePoint":{"line":97,"column":36,"index":2018},"line":97,"code":"  it('should correctly set meta data', function () {\n    tb = new TradeBatcher('tid');\n    var spy = sinon.spy();\n    tb.on('new batch', spy);\n    tb.write(trades_tid_1);\n    var transformedTrades = _.map(_.cloneDeep(trades_tid_1), function (trade) {\n      trade.date = moment.unix(trade.date).utc();\n      return trade;\n    });\n    var result = {\n      data: transformedTrades,\n      amount: _.size(transformedTrades),\n      start: _.first(transformedTrades).date,\n      end: _.last(transformedTrades).date,\n      first: _.first(transformedTrades),\n      last: _.last(transformedTrades)\n    };\n    var tbResult = _.first(_.first(spy.args));\n    expect(tbResult.amount).to.equal(result.amount);\n    expect(tbResult.start.unix()).to.equal(result.start.unix());\n    expect(tbResult.end.unix()).to.equal(result.end.unix());\n    expect(tbResult.data.length).to.equal(result.data.length);\n    _.each(tbResult.data, function (t, i) {\n      expect(tbResult.data[i].tid).to.equal(result.data[i].tid);\n      expect(tbResult.data[i].price).to.equal(result.data[i].price);\n      expect(tbResult.data[i].amount).to.equal(result.data[i].amount);\n    });\n  });","file":"tradeBatcher.js","skipped":false,"dir":"test"},{"name":"should correctly filter trades","suites":["budfox/tradeBatcher"],"updatePoint":{"line":125,"column":36,"index":3165},"line":125,"code":"  it('should correctly filter trades', function () {\n    tb = new TradeBatcher('tid');\n    var spy = sinon.spy();\n    tb.on('new batch', spy);\n    tb.write(trades_tid_1);\n    tb.write(trades_tid_2);\n    expect(spy.callCount).to.equal(2);\n    var tbResult = _.first(_.last(spy.args));\n    expect(tbResult.amount).to.equal(2);\n    expect(tbResult.start.unix()).to.equal(1466115796);\n    expect(tbResult.end.unix()).to.equal(1466115797);\n    expect(tbResult.data.length).to.equal(2);\n  });","file":"tradeBatcher.js","skipped":false,"dir":"test"},{"name":"should filter out empty trades","suites":["budfox/tradeBatcher"],"updatePoint":{"line":141,"column":36,"index":3717},"line":141,"code":"  it('should filter out empty trades', function () {\n    tb = new TradeBatcher('tid');\n    var spy = sinon.spy();\n    tb.on('new batch', spy);\n    tb.write(empty_trades);\n    expect(spy.callCount).to.equal(0);\n  });","file":"tradeBatcher.js","skipped":false,"dir":"test"},{"name":"should instantiate a trailing stop loss trigger","suites":["exchange/triggers/trailingStop"],"updatePoint":{"line":12,"column":53,"index":447},"line":12,"code":"  it('should instantiate a trailing stop loss trigger', () => {\n    expect(() => {\n      const ts = new TrailingStop({\n        trail: 10,\n        initialPrice: 100,\n        onTrigger: () => {}\n      });\n    }).to.not.throw();\n  });","file":"triggers/trailingStop.js","skipped":false,"dir":"test"},{"name":"should call onTrigger when the stop hits","suites":["exchange/triggers/trailingStop"],"updatePoint":{"line":21,"column":46,"index":672},"line":21,"code":"  it('should call onTrigger when the stop hits', () => {\n    const spy = sinon.spy();\n    const ts = new TrailingStop({\n      trail: 10,\n      initialPrice: 100,\n      onTrigger: spy\n    });\n    ts.updatePrice(50);\n    expect(spy.called).to.be.true;\n  });","file":"triggers/trailingStop.js","skipped":false,"dir":"test"},{"name":"should emit a trigger event when the stop hits","suites":["exchange/triggers/trailingStop"],"updatePoint":{"line":31,"column":52,"index":934},"line":31,"code":"  it('should emit a trigger event when the stop hits', () => {\n    const spy = sinon.spy();\n    const ts = new TrailingStop({\n      trail: 10,\n      initialPrice: 100\n    });\n    ts.on('trigger', spy);\n    ts.updatePrice(50);\n    expect(spy.called).to.be.true;\n  });","file":"triggers/trailingStop.js","skipped":false,"dir":"test"},{"name":"should not trigger when the the price does not go down","suites":["exchange/triggers/trailingStop"],"updatePoint":{"line":41,"column":60,"index":1209},"line":41,"code":"  it('should not trigger when the the price does not go down', () => {\n    const spy = sinon.spy();\n    const ts = new TrailingStop({\n      trail: 10,\n      initialPrice: 100,\n      onTrigger: spy\n    });\n    ts.updatePrice(100);\n    ts.updatePrice(101);\n    ts.updatePrice(102);\n    ts.updatePrice(103);\n    ts.updatePrice(104);\n    expect(spy.called).to.be.false;\n  });","file":"triggers/trailingStop.js","skipped":false,"dir":"test"},{"name":"should not trigger when the the price goes down but above the offset","suites":["exchange/triggers/trailingStop"],"updatePoint":{"line":55,"column":74,"index":1595},"line":55,"code":"  it('should not trigger when the the price goes down but above the offset', () => {\n    const spy = sinon.spy();\n    const ts = new TrailingStop({\n      trail: 10,\n      initialPrice: 100,\n      onTrigger: spy\n    });\n    ts.updatePrice(99);\n    ts.updatePrice(98);\n    ts.updatePrice(97);\n    ts.updatePrice(96);\n    ts.updatePrice(95);\n    ts.updatePrice(94);\n    ts.updatePrice(93);\n    ts.updatePrice(92);\n    ts.updatePrice(91);\n    expect(spy.called).to.be.false;\n  });","file":"triggers/trailingStop.js","skipped":false,"dir":"test"},{"name":"should trigger when the the price equals the offset","suites":["exchange/triggers/trailingStop"],"updatePoint":{"line":73,"column":57,"index":2055},"line":73,"code":"  it('should trigger when the the price equals the offset', () => {\n    const spy = sinon.spy();\n    const ts = new TrailingStop({\n      trail: 10,\n      initialPrice: 100,\n      onTrigger: spy\n    });\n    ts.updatePrice(99);\n    ts.updatePrice(98);\n    ts.updatePrice(92);\n    expect(spy.called).to.be.false;\n    ts.updatePrice(90);\n    expect(spy.called).to.be.true;\n  });","file":"triggers/trailingStop.js","skipped":false,"dir":"test"},{"name":"should trigger when the the price goes up and down","suites":["exchange/triggers/trailingStop"],"updatePoint":{"line":87,"column":56,"index":2429},"line":87,"code":"  it('should trigger when the the price goes up and down', () => {\n    const spy = sinon.spy();\n    const ts = new TrailingStop({\n      trail: 10,\n      initialPrice: 100,\n      onTrigger: spy\n    });\n    ts.updatePrice(101);\n    ts.updatePrice(102);\n    ts.updatePrice(103);\n    ts.updatePrice(104);\n    ts.updatePrice(105);\n    expect(spy.called).to.be.false;\n    ts.updatePrice(95);\n    expect(spy.called).to.be.true;\n  });","file":"triggers/trailingStop.js","skipped":false,"dir":"test"},{"name":"should only trigger once","suites":["exchange/triggers/trailingStop"],"updatePoint":{"line":103,"column":30,"index":2830},"line":103,"code":"  it('should only trigger once', () => {\n    const spy = sinon.spy();\n    const ts = new TrailingStop({\n      trail: 10,\n      initialPrice: 100,\n      onTrigger: spy\n    });\n    ts.updatePrice(90);\n    expect(spy.called).to.be.true;\n    const spy2 = sinon.spy();\n    ts.on('trigger', spy2);\n    ts.updatePrice(80);\n    expect(spy2.called).to.be.false;\n  });","file":"triggers/trailingStop.js","skipped":false,"dir":"test"},{"name":"should not trigger when the the price swings above the trail","suites":["exchange/triggers/trailingStop"],"updatePoint":{"line":117,"column":66,"index":3225},"line":117,"code":"  it('should not trigger when the the price swings above the trail', () => {\n    const spy = sinon.spy();\n    const ts = new TrailingStop({\n      trail: 10,\n      initialPrice: 100,\n      onTrigger: spy\n    });\n    ts.updatePrice(110);\n    ts.updatePrice(101);\n    ts.updatePrice(111);\n    ts.updatePrice(102);\n    ts.updatePrice(112);\n    ts.updatePrice(103);\n    ts.updatePrice(113);\n    ts.updatePrice(104);\n    expect(spy.called).to.be.false;\n    ts.updatePrice(103);\n    expect(spy.called).to.be.true;\n  });","file":"triggers/trailingStop.js","skipped":false,"dir":"test"}]}