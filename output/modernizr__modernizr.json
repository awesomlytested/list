{"repo":"Modernizr/Modernizr","url":"https://github.com/Modernizr/Modernizr","branch":"master","configs":[{"package":"modernizr","lang":"js","dir":"test","framework":"mocha","pattern":"**/*.{js,ts}"}],"tests":[{"name":"all properties are lower case","suites":["bools"],"updatePoint":{"line":2,"column":35,"index":68},"line":2,"code":"  it('all properties are lower case', function () {\n    _.every(Modernizr, function (result, name) {\n      return expect(name).to.not.match(/[A-Z]/);\n    });\n  });","file":"browser/integration/bools.js","skipped":false,"dir":"test"},{"name":"Caniuse result for forms matches Modernizr's result for inputtypes","suites":["caniuse"],"updatePoint":{"line":286,"column":86,"index":10651},"line":286,"code":"        return it('Caniuse result for forms matches Modernizr\\'s result for inputtypes', function () {\n          return expect(ciubool).to.be.equal(_.some(Modernizr.inputtypes, function (modernizrResult) {\n            return modernizrResult;\n          }));\n        });","file":"browser/integration/caniuse.js","skipped":false,"dir":"test"},{"name":"Caniuse result for flexbox matches Modernizr's result for flexbox","suites":["caniuse"],"updatePoint":{"line":296,"column":85,"index":11114},"line":296,"code":"        return it('Caniuse result for flexbox matches Modernizr\\'s result for flexbox', function () {\n          return expect([Modernizr.flexbox, Modernizr.flexboxlegacy, Modernizr.flexboxtweener]).to.contain(ciubool);\n        });","file":"browser/integration/caniuse.js","skipped":false,"dir":"test"},{"name":"_version exists","suites":["classes"],"updatePoint":{"line":3,"column":21,"index":119},"line":3,"code":"  it('_version exists', function () {\n    expect(Modernizr._version).to.not.be.equal(undefined);\n  });","file":"browser/integration/classes.js","skipped":false,"dir":"test"},{"name":"_version did not add a class","suites":["classes"],"updatePoint":{"line":6,"column":34,"index":235},"line":6,"code":"  it('_version did not add a class', function () {\n    expect(document.documentElement.className).to.not.contain('_version');\n  });","file":"browser/integration/classes.js","skipped":false,"dir":"test"},{"name":"all classes are lower case","suites":["classes"],"updatePoint":{"line":9,"column":32,"index":365},"line":9,"code":"  it('all classes are lower case', function () {\n    expect(document.documentElement.className).to.not.match(/[A-Z]/);\n  });","file":"browser/integration/classes.js","skipped":false,"dir":"test"},{"name":"creates a global modernizr object","suites":["basics"],"updatePoint":{"line":2,"column":39,"index":73},"line":2,"code":"  it('creates a global modernizr object', function () {\n    expect(Modernizr).to.not.be.equal(undefined);\n  });","file":"browser/integration/global.js","skipped":false,"dir":"test"},{"name":"is able to be loaded in an iframe","suites":["iframe context"],"updatePoint":{"line":23,"column":39,"index":596},"line":23,"code":"  it('is able to be loaded in an iframe', function (done) {\n    iframeWindow.$.getScript('../dist/modernizr-build.js').done(function (build, status) {\n      expect(status).to.be.equal('success');\n      expect(iframeWindow.Modernizr).to.not.be.equal(undefined);\n      done();\n    }).fail(function (ajaxResponse, errorType, err) {\n      if (err && err.message) {\n        expect(err.message).to.be.equal(undefined);\n      } else {\n        expect(errorType).to.be.equal(undefined);\n      }\n      done();\n    });\n  });","file":"browser/integration/iframe.js","skipped":false,"dir":"test"},{"name":"(Almost) Everyone supports import","suites":["prefixed @rule"],"updatePoint":{"line":2,"column":39,"index":81},"line":2,"code":"  it('(Almost) Everyone supports import', function () {\n    expect(['@import', undefined]).to.contain(Modernizr.prefixed('@import'));\n  });","file":"browser/integration/prefixed-atRule.js","skipped":false,"dir":"test"},{"name":"Nobody supports @penguin","suites":["prefixed @rule"],"updatePoint":{"line":5,"column":30,"index":212},"line":5,"code":"  it('Nobody supports @penguin', function () {\n    expect(!!Modernizr.prefixed('@penguin')).to.be.equal(false);\n  });","file":"browser/integration/prefixed-atRule.js","skipped":false,"dir":"test"},{"name":"Modernizr.prefixed(\"requestAnimationFrame\", window) returns a function","suites":["prefixed autobind"],"updatePoint":{"line":11,"column":78,"index":443},"line":11,"code":"    it('Modernizr.prefixed(\"requestAnimationFrame\", window) returns a function', function () {\n      expect(Modernizr.prefixed('requestAnimationFrame', window)).to.be.a('function');\n    });","file":"browser/integration/prefixed-autobind.js","skipped":false,"dir":"test"},{"name":"Modernizr.prefixed(\"requestAnimationFrame\", window, false) returns a string (the prop name)","suites":["prefixed autobind"],"updatePoint":{"line":16,"column":99,"index":693},"line":16,"code":"    it('Modernizr.prefixed(\"requestAnimationFrame\", window, false) returns a string (the prop name)', function () {\n      expect(Modernizr.prefixed('requestAnimationFrame', window, false)).to.be.equal(rAFName);\n    });","file":"browser/integration/prefixed-autobind.js","skipped":false,"dir":"test"},{"name":"Modernizr.prefixed(\"matchesSelector\", HTMLElement.prototype, document.body) returns a function","suites":["prefixed autobind"],"updatePoint":{"line":24,"column":102,"index":1114},"line":24,"code":"    it('Modernizr.prefixed(\"matchesSelector\", HTMLElement.prototype, document.body) returns a function', function () {\n      expect(fn).to.be.a('function');\n    });","file":"browser/integration/prefixed-autobind.js","skipped":false,"dir":"test"},{"name":"Modernizr.prefixed(\"matchesSelector\", HTMLElement.prototype, document.body) is scoped to the body","suites":["prefixed autobind"],"updatePoint":{"line":29,"column":105,"index":1301},"line":29,"code":"    it('Modernizr.prefixed(\"matchesSelector\", HTMLElement.prototype, document.body) is scoped to the body', function () {\n      expect(fn('body')).to.be.equal(true);\n    });","file":"browser/integration/prefixed-autobind.js","skipped":false,"dir":"test"},{"name":"Modernizr.prefixed(\"Notifications\") returns an object","suites":["prefixed autobind"],"updatePoint":{"line":37,"column":61,"index":1561},"line":37,"code":"    it('Modernizr.prefixed(\"Notifications\") returns an object', function () {\n      expect(Modernizr.prefixed('Notifications', window)).to.be.an('object');\n    });","file":"browser/integration/prefixed-autobind.js","skipped":false,"dir":"test"},{"name":"Modernizr.prefixed(\"isFullScreen\") returns a boolean","suites":["prefixed autobind"],"updatePoint":{"line":45,"column":60,"index":1815},"line":45,"code":"    it('Modernizr.prefixed(\"isFullScreen\") returns a boolean', function () {\n      expect(Modernizr.prefixed('isFullScreen', document)).to.be.a('boolean');\n    });","file":"browser/integration/prefixed-autobind.js","skipped":false,"dir":"test"},{"name":"Modernizr.prefixed(\"isFullScreen\") returns a boolean","suites":["prefixed autobind"],"updatePoint":{"line":54,"column":60,"index":2063},"line":54,"code":"    it('Modernizr.prefixed(\"isFullScreen\") returns a boolean', function () {\n      expect(Modernizr.prefixed('fullScreen', document)).to.be.a('boolean');\n    });","file":"browser/integration/prefixed-autobind.js","skipped":false,"dir":"test"},{"name":"Modernizr.prefixed(\"animation\", document.body.style) returns value of that, as a string","suites":["prefixed autobind"],"updatePoint":{"line":63,"column":95,"index":2395},"line":63,"code":"    it('Modernizr.prefixed(\"animation\", document.body.style) returns value of that, as a string', function () {\n      expect(Modernizr.prefixed('animation', document.body.style)).to.be.a('string');\n    });","file":"browser/integration/prefixed-autobind.js","skipped":false,"dir":"test"},{"name":"Modernizr.prefixed(\"animation\", document.body.style, false) returns the name of the property: webkitAnimation","suites":["prefixed autobind"],"updatePoint":{"line":66,"column":117,"index":2623},"line":66,"code":"    it('Modernizr.prefixed(\"animation\", document.body.style, false) returns the name of the property: webkitAnimation', function () {\n      expect(Modernizr.prefixed('animation', document.body.style, false)).to.be.equal('webkitAnimation');\n    });","file":"browser/integration/prefixed-autobind.js","skipped":false,"dir":"test"},{"name":"Modernizr.prefixed(\"doSomethingAmazing$#$\", window) : Gobbledygook with prefixed(str,obj) returns false","suites":["prefixed autobind"],"updatePoint":{"line":70,"column":109,"index":2867},"line":70,"code":"  it('Modernizr.prefixed(\"doSomethingAmazing$#$\", window) : Gobbledygook with prefixed(str,obj) returns false', function () {\n    expect(Modernizr.prefixed('doSomethingAmazing$#$', window)).to.be.equal(false);\n  });","file":"browser/integration/prefixed-autobind.js","skipped":false,"dir":"test"},{"name":"Modernizr.prefixed(\"doSomethingAmazing$#$\", window) : Gobbledygook with prefixed(str,obj, scope) returns false","suites":["prefixed autobind"],"updatePoint":{"line":73,"column":116,"index":3090},"line":73,"code":"  it('Modernizr.prefixed(\"doSomethingAmazing$#$\", window) : Gobbledygook with prefixed(str,obj, scope) returns false', function () {\n    expect(Modernizr.prefixed('doSomethingAmazing$#$', window, document.body)).to.be.equal(false);\n  });","file":"browser/integration/prefixed-autobind.js","skipped":false,"dir":"test"},{"name":"Modernizr.prefixed(\"doSomethingAmazing$#$\", window) : Gobbledygook with prefixed(str,obj, false) returns false","suites":["prefixed autobind"],"updatePoint":{"line":76,"column":116,"index":3328},"line":76,"code":"  it('Modernizr.prefixed(\"doSomethingAmazing$#$\", window) : Gobbledygook with prefixed(str,obj, false) returns false', function () {\n    expect(Modernizr.prefixed('doSomethingAmazing$#$', window, false)).to.be.equal(false);\n  });","file":"browser/integration/prefixed-autobind.js","skipped":false,"dir":"test"},{"name":"is able to be loaded in a SVG file","suites":["svg context"],"updatePoint":{"line":5,"column":42,"index":157},"line":5,"code":"    it('is able to be loaded in a SVG file', function (done) {\n      object = document.createElement('object');\n      object.data = '../test/img/integration.svg';\n      object.type = 'image/svg+xml';\n      object.id = 'svgContext';\n      object.onerror = function () {\n        var arg = Array.prototype.slice.call(arguments).join(' ');\n        try {\n          if (arg.length) {\n            expect(arg).to.be.equal(undefined);\n          }\n        } catch (e) {\n          done(e);\n        }\n      };\n      object.onsuccess = function (modernizrRef) {\n        expect(modernizrRef).to.not.be.equal(undefined);\n        done();\n      };\n      document.body.appendChild(object);\n    });","file":"browser/integration/svg.js","skipped":false,"dir":"test"},{"name":"adds an object for test listeners","suites":["addTest","setup"],"updatePoint":{"line":56,"column":41,"index":1317},"line":56,"code":"    it('adds an object for test listeners', function () {\n      expect(ModernizrProto._l).to.be.an('object');\n    });","file":"browser/src/addTest.js","skipped":false,"dir":"test"},{"name":"should define the `ModernizrProto._trigger` function","suites":["addTest","setup"],"updatePoint":{"line":59,"column":60,"index":1454},"line":59,"code":"    it('should define the `ModernizrProto._trigger` function', function () {\n      expect(ModernizrProto._trigger).to.be.an('function');\n    });","file":"browser/src/addTest.js","skipped":false,"dir":"test"},{"name":"should push the Modernizr.addTest definition to the `_q`","suites":["addTest","setup"],"updatePoint":{"line":62,"column":64,"index":1603},"line":62,"code":"    it('should push the Modernizr.addTest definition to the `_q`', function () {\n      expect(Modernizr._q).to.have.length(1);\n      expect(Modernizr._q[0]).to.be.a('function');\n    });","file":"browser/src/addTest.js","skipped":false,"dir":"test"},{"name":"should define Modernizr.addTest at the end of the _q","suites":["addTest","setup"],"updatePoint":{"line":66,"column":60,"index":1785},"line":66,"code":"    it('should define Modernizr.addTest at the end of the _q', function () {\n      Modernizr._q[0]();\n      expect(ModernizrProto.addTest).to.be.equal(addTest);\n    });","file":"browser/src/addTest.js","skipped":false,"dir":"test"},{"name":"keeps track of requests","suites":["addTest","Modernizr.on"],"updatePoint":{"line":73,"column":31,"index":2009},"line":73,"code":"    it('keeps track of requests', function () {\n      ModernizrProto.on('fakeDetect', fakeDetect);\n      expect(ModernizrProto._l.fakeDetect).to.be.an('array');\n      expect(ModernizrProto._l.fakeDetect[0]).to.be.equal(fakeDetect);\n    });","file":"browser/src/addTest.js","skipped":false,"dir":"test"},{"name":"does not recreate the queue with duplicate requests","suites":["addTest","Modernizr.on"],"updatePoint":{"line":78,"column":59,"index":2277},"line":78,"code":"    it('does not recreate the queue with duplicate requests', function () {\n      ModernizrProto.on('fakeDetect', fakeDetect);\n      ModernizrProto.on('fakeDetect', fakeDetect);\n      expect(ModernizrProto._l.fakeDetect.length).to.be.equal(2);\n    });","file":"browser/src/addTest.js","skipped":false,"dir":"test"},{"name":"triggers results if the detect already ran","suites":["addTest","Modernizr.on"],"updatePoint":{"line":83,"column":50,"index":2520},"line":83,"code":"    it('triggers results if the detect already ran', function (done) {\n      Modernizr.fakeDetect = 'fake';\n      Modernizr._trigger = sinon.spy();\n      ModernizrProto.on('fakeDetect', fakeDetect);\n      setTimeout(function () {\n        expect(Modernizr._trigger.calledOnce).to.be.equal(true);\n        expect(Modernizr._trigger.calledWith('fakeDetect', Modernizr.fakeDetect)).to.be.equal(true);\n        done();\n      }, 0);\n    });","file":"browser/src/addTest.js","skipped":false,"dir":"test"},{"name":"skips the callback if it does not exist","suites":["addTest","Modernizr._trigger"],"updatePoint":{"line":95,"column":47,"index":3003},"line":95,"code":"    it('skips the callback if it does not exist', function () {\n      expect(function () {\n        ModernizrProto._trigger('fakeDetect');\n      }).to.not.throw();\n    });","file":"browser/src/addTest.js","skipped":false,"dir":"test"},{"name":"runs the listener calledback if it does exist","suites":["addTest","Modernizr._trigger"],"updatePoint":{"line":100,"column":53,"index":3180},"line":100,"code":"    it('runs the listener calledback if it does exist', function (done) {\n      var spy = sinon.spy();\n      ModernizrProto.on('fakeDetect', spy);\n      ModernizrProto._trigger('fakeDetect', 'fakeRes');\n      setTimeout(function () {\n        expect(spy.calledOnce).to.be.equal(true);\n        done();\n      });\n    });","file":"browser/src/addTest.js","skipped":false,"dir":"test"},{"name":"deletes the listener after it runs","suites":["addTest","Modernizr._trigger"],"updatePoint":{"line":109,"column":42,"index":3487},"line":109,"code":"    it('deletes the listener after it runs', function (done) {\n      ModernizrProto.on('fakeDetect', function () {});\n      expect(ModernizrProto._l.fakeDetect).to.be.an('array');\n      ModernizrProto._trigger('fakeDetect', 'fakeRes');\n      setTimeout(function () {\n        expect(ModernizrProto._l.fakeDetect).to.be.equal(undefined);\n        done();\n      });\n    });","file":"browser/src/addTest.js","skipped":false,"dir":"test"},{"name":"sets the proper bool on the Modernizr object with a function","suites":["addTest","Modernizr.addTest"],"updatePoint":{"line":127,"column":68,"index":4219},"line":127,"code":"    it('sets the proper bool on the Modernizr object with a function', function () {\n      addTest('fakedetect', function () {\n        return true;\n      });\n      expect(Modernizr.fakedetect).to.be.equal(true);\n    });","file":"browser/src/addTest.js","skipped":false,"dir":"test"},{"name":"sets the proper bool on the Modernizr object with a bool","suites":["addTest","Modernizr.addTest"],"updatePoint":{"line":133,"column":64,"index":4435},"line":133,"code":"    it('sets the proper bool on the Modernizr object with a bool', function () {\n      addTest('fakedetect', false);\n      expect(Modernizr.fakedetect).to.be.equal(false);\n    });","file":"browser/src/addTest.js","skipped":false,"dir":"test"},{"name":"does not cast to a bool on the Modernizr object with a truthy value","suites":["addTest","Modernizr.addTest"],"updatePoint":{"line":137,"column":75,"index":4626},"line":137,"code":"    it('does not cast to a bool on the Modernizr object with a truthy value', function () {\n      addTest('fakedetect', function () {\n        return 100;\n      });\n      expect(Modernizr.fakedetect).to.be.equal(100);\n    });","file":"browser/src/addTest.js","skipped":false,"dir":"test"},{"name":"sets a true class for a true value","suites":["addTest","Modernizr.addTest"],"updatePoint":{"line":143,"column":42,"index":4818},"line":143,"code":"    it('sets a true class for a true value', function () {\n      addTest('fakedetect', function () {\n        return 100;\n      });\n      expect(setClasses.callCount).to.be.equal(1);\n      expect(setClasses.calledWith(['fakedetect'])).to.be.equal(true);\n    });","file":"browser/src/addTest.js","skipped":false,"dir":"test"},{"name":"sets a truthy class for a truthy value","suites":["addTest","Modernizr.addTest"],"updatePoint":{"line":150,"column":46,"index":5083},"line":150,"code":"    it('sets a truthy class for a truthy value', function () {\n      addTest('fakedetect', function () {\n        return 100;\n      });\n      expect(setClasses.callCount).to.be.equal(1);\n      expect(setClasses.calledWith(['fakedetect'])).to.be.equal(true);\n    });","file":"browser/src/addTest.js","skipped":false,"dir":"test"},{"name":"sets a negative class for a false value","suites":["addTest","Modernizr.addTest"],"updatePoint":{"line":157,"column":47,"index":5349},"line":157,"code":"    it('sets a negative class for a false value', function () {\n      addTest('fakedetect', function () {\n        return false;\n      });\n      expect(setClasses.callCount).to.be.equal(1);\n      expect(setClasses.calledWith(['no-fakedetect'])).to.be.equal(true);\n    });","file":"browser/src/addTest.js","skipped":false,"dir":"test"},{"name":"sets a negative class for a falsy value","suites":["addTest","Modernizr.addTest"],"updatePoint":{"line":164,"column":47,"index":5620},"line":164,"code":"    it('sets a negative class for a falsy value', function () {\n      addTest('fakedetect', function () {\n        return undefined;\n      });\n      expect(setClasses.callCount).to.be.equal(1);\n      expect(setClasses.calledWith(['no-fakedetect'])).to.be.equal(true);\n    });","file":"browser/src/addTest.js","skipped":false,"dir":"test"},{"name":"does not cast to a bool on the Modernizr object with a falsy value","suites":["addTest","Modernizr.addTest"],"updatePoint":{"line":171,"column":74,"index":5922},"line":171,"code":"    it('does not cast to a bool on the Modernizr object with a falsy value', function () {\n      addTest('fakedetect', function () {\n        return undefined;\n      });\n      expect('fakedetect' in Modernizr).to.be.equal(true);\n      expect(Modernizr.fakedetect).to.be.equal(undefined);\n    });","file":"browser/src/addTest.js","skipped":false,"dir":"test"},{"name":"forces detect names are lowercase","suites":["addTest","Modernizr.addTest"],"updatePoint":{"line":178,"column":41,"index":6184},"line":178,"code":"    it('forces detect names are lowercase', function () {\n      addTest('FaKeDeTeCt', true);\n      expect(Modernizr.fakedetect).to.be.equal(true);\n    });","file":"browser/src/addTest.js","skipped":false,"dir":"test"},{"name":"supports nested properties with a bool base","suites":["addTest","Modernizr.addTest"],"updatePoint":{"line":182,"column":51,"index":6349},"line":182,"code":"    it('supports nested properties with a bool base', function () {\n      addTest('fake', true);\n      addTest('fake.detect', true);\n      expect(typeof Modernizr.fake).to.be.equal('object'); // workaround for  https://github.com/chaijs/chai/issues/1174\n      expect(Modernizr.fake.detect).to.be.equal(true);\n    });","file":"browser/src/addTest.js","skipped":false,"dir":"test"},{"name":"supports nested properties","suites":["addTest","Modernizr.addTest"],"updatePoint":{"line":188,"column":34,"index":6649},"line":188,"code":"    it('supports nested properties', function () {\n      addTest('fake', true);\n      addTest('fake.detect', true);\n      expect(typeof Modernizr.fake).to.be.equal('object'); // workaround for  https://github.com/chaijs/chai/issues/1174\n      expect(Modernizr.fake.detect).to.be.equal(true);\n    });","file":"browser/src/addTest.js","skipped":false,"dir":"test"},{"name":"does not overwrite values once they are set","suites":["addTest","Modernizr.addTest"],"updatePoint":{"line":194,"column":51,"index":6966},"line":194,"code":"    it('does not overwrite values once they are set', function () {\n      addTest('fakeDetect', false);\n      expect(Modernizr.fakedetect).to.be.equal(false);\n      expect(Modernizr._trigger.calledOnce).to.be.equal(true);\n      addTest('fakeDetect', true);\n      expect(Modernizr.fakedetect).to.be.equal(false);\n      expect(Modernizr._trigger.calledOnce).to.be.equal(true);\n    });","file":"browser/src/addTest.js","skipped":false,"dir":"test"},{"name":"allows feature to be an object of features","suites":["addTest","Modernizr.addTest"],"updatePoint":{"line":202,"column":50,"index":7348},"line":202,"code":"    it('allows feature to be an object of features', function () {\n      addTest({\n        fake: true,\n        detect: false\n      });\n      expect(Modernizr.fake).to.be.equal(true);\n      expect(Modernizr.detect).to.be.equal(false);\n      expect(setClasses.callCount).to.be.equal(2);\n      expect(setClasses.calledWith(['fake'])).to.be.equal(true);\n      expect(setClasses.calledWith(['no-detect'])).to.be.equal(true);\n    });","file":"browser/src/addTest.js","skipped":false,"dir":"test"},{"name":"properly filters out monkey patched object properties","suites":["addTest","Modernizr.addTest"],"updatePoint":{"line":213,"column":61,"index":7787},"line":213,"code":"    it('properly filters out monkey patched object properties', function () {\n      var noop = function () {};\n      Object.prototype.MOD_FAKE_VALUE = noop;\n      var config = {\n        detect: false\n      };\n      expect(config.MOD_FAKE_VALUE).to.be.equal(noop);\n      addTest(config);\n      delete Object.prototype.MOD_FAKE_VALUE;\n      expect(Modernizr.MOD_FAKE_VALUE).to.be.equal(undefined);\n      expect(Modernizr.mod_fake_value).to.be.equal(undefined);\n      expect(Modernizr.detect).to.be.equal(false);\n      expect(setClasses.callCount).to.be.equal(1);\n    });","file":"browser/src/addTest.js","skipped":false,"dir":"test"},{"name":"returns an instance of Modernizr for chaining","suites":["addTest","Modernizr.addTest"],"updatePoint":{"line":227,"column":53,"index":8348},"line":227,"code":"    it('returns an instance of Modernizr for chaining', function () {\n      expect(addTest('fakeDetect', true)).to.be.equal(Modernizr);\n    });","file":"browser/src/addTest.js","skipped":false,"dir":"test"},{"name":"returns undefined when the browser does not support CSSRule","suites":["atRule"],"updatePoint":{"line":28,"column":65,"index":725},"line":28,"code":"  it('returns undefined when the browser does not support CSSRule', function () {\n    var ref = window.CSSRule;\n    window.CSSRule = undefined;\n    expect(atRule('charset')).to.be.equal(undefined);\n    window.CSSRule = ref;\n  });","file":"browser/src/atRule.js","skipped":false,"dir":"test"},{"name":"detects `@rule`s","suites":["atRule"],"updatePoint":{"line":35,"column":24,"index":938},"line":35,"code":"    it('detects `@rule`s', function () {\n      expect(atRule('charset')).to.be.equal('@charset');\n    });","file":"browser/src/atRule.js","skipped":false,"dir":"test"},{"name":"returns false when a property is not given","suites":["atRule"],"updatePoint":{"line":38,"column":50,"index":1070},"line":38,"code":"    it('returns false when a property is not given', function () {\n      expect(atRule()).to.be.equal(false);\n    });","file":"browser/src/atRule.js","skipped":false,"dir":"test"},{"name":"returns false when a property is not found","suites":["atRule"],"updatePoint":{"line":41,"column":50,"index":1188},"line":41,"code":"    it('returns false when a property is not found', function () {\n      expect(atRule('fart')).to.be.equal(false);\n    });","file":"browser/src/atRule.js","skipped":false,"dir":"test"},{"name":"detects prefixed properties","suites":["atRule"],"updatePoint":{"line":44,"column":35,"index":1297},"line":44,"code":"    it('detects prefixed properties', function () {\n      expect(atRule('fake')).to.be.equal('@-modernizr-fake');\n    });","file":"browser/src/atRule.js","skipped":false,"dir":"test"},{"name":"is an array","suites":["classes"],"updatePoint":{"line":18,"column":17,"index":427},"line":18,"code":"  it('is an array', function () {\n    expect(classes).to.be.an('array');\n  });","file":"browser/src/classes.js","skipped":false,"dir":"test"},{"name":"finds substrings","suites":["contains"],"updatePoint":{"line":18,"column":22,"index":438},"line":18,"code":"  it('finds substrings', function () {\n    expect(contains('fakeDetect', 'akeDet')).to.be.equal(true);\n  });","file":"browser/src/contains.js","skipped":false,"dir":"test"},{"name":"is a function","suites":["createElement"],"updatePoint":{"line":18,"column":19,"index":465},"line":18,"code":"  it('is a function', function () {\n    expect(createElement).to.be.a('function');\n  });","file":"browser/src/createElement.js","skipped":false,"dir":"test"},{"name":"creates an element","suites":["createElement"],"updatePoint":{"line":21,"column":24,"index":559},"line":21,"code":"  it('creates an element', function () {\n    var element = createElement('modernizr');\n    expect(element.nodeName.toUpperCase()).to.be.equal('MODERNIZR');\n  });","file":"browser/src/createElement.js","skipped":false,"dir":"test"},{"name":"returns prefixes","suites":["cssomPrefixes","prefixes enabled"],"updatePoint":{"line":53,"column":24,"index":1212},"line":53,"code":"    it('returns prefixes', function (done) {\n      req(['cssomPrefixes'], function (cssomPrefixes) {\n        expect(cssomPrefixes).to.not.have.length(0);\n        done();\n      });\n    });","file":"browser/src/cssomPrefixes.js","skipped":false,"dir":"test"},{"name":"returns no prefixes","suites":["cssomPrefixes","prefixes disabled"],"updatePoint":{"line":65,"column":27,"index":1539},"line":65,"code":"    it('returns no prefixes', function (done) {\n      req(['cssomPrefixes'], function (cssomPrefixes) {\n        expect(cssomPrefixes).to.have.length(0);\n        done();\n      });\n    });","file":"browser/src/cssomPrefixes.js","skipped":false,"dir":"test"},{"name":"converts hyphen to camel","suites":["cssToDOM"],"updatePoint":{"line":18,"column":30,"index":446},"line":18,"code":"  it('converts hyphen to camel', function () {\n    expect(cssToDOM('fake-detect')).to.be.equal('fakeDetect');\n  });","file":"browser/src/cssToDOM.js","skipped":false,"dir":"test"},{"name":"is an alias to document.documentElement","suites":["docElement"],"updatePoint":{"line":18,"column":45,"index":473},"line":18,"code":"  it('is an alias to document.documentElement', function () {\n    expect(docElement).to.be.equal(document.documentElement);\n  });","file":"browser/src/docElement.js","skipped":false,"dir":"test"},{"name":"is valid and correct","suites":["docElement"],"updatePoint":{"line":21,"column":26,"index":584},"line":21,"code":"  it('is valid and correct', function () {\n    expect(docElement).to.be.equal(document.getElementsByTagName('html')[0]);\n  });","file":"browser/src/docElement.js","skipped":false,"dir":"test"},{"name":"returns prefixes","suites":["domPrefixes","prefixes enabled"],"updatePoint":{"line":57,"column":24,"index":1358},"line":57,"code":"    it('returns prefixes', function (done) {\n      req(['domPrefixes'], function (domPrefixes) {\n        expect(domPrefixes).to.not.have.length(0);\n        done();\n      });\n    });","file":"browser/src/domPrefixes.js","skipped":false,"dir":"test"},{"name":"returns one less then domPrefixesAll","suites":["domPrefixes","prefixes enabled"],"updatePoint":{"line":63,"column":44,"index":1560},"line":63,"code":"    it('returns one less then domPrefixesAll', function (done) {\n      req(['domPrefixes', 'domPrefixesAll'], function (domPrefixes, domPrefixesAll) {\n        expect(domPrefixes).to.have.length(domPrefixesAll.length - 1);\n        done();\n      });\n    });","file":"browser/src/domPrefixes.js","skipped":false,"dir":"test"},{"name":"returns no prefixes","suites":["domPrefixes","prefixes disabled"],"updatePoint":{"line":75,"column":27,"index":1935},"line":75,"code":"    it('returns no prefixes', function (done) {\n      req(['domPrefixes'], function (domPrefixes) {\n        expect(domPrefixes).to.have.length(0);\n        done();\n      });\n    });","file":"browser/src/domPrefixes.js","skipped":false,"dir":"test"},{"name":"converts hyphen to camel","suites":["domToCSS"],"updatePoint":{"line":18,"column":30,"index":446},"line":18,"code":"  it('converts hyphen to camel', function () {\n    expect(domToCSS('fakeDetect')).to.be.equal('fake-detect');\n  });","file":"browser/src/domToCSS.js","skipped":false,"dir":"test"},{"name":"binds to `this`","suites":["fnBind"],"updatePoint":{"line":18,"column":21,"index":425},"line":18,"code":"  it('binds to `this`', function () {\n    var foo = {\n      x: 1\n    };\n    var bar = function () {\n      return this.x;\n    };\n    expect(fnBind(bar, foo)()).to.be.equal(1);\n  });","file":"browser/src/fnBind.js","skipped":false,"dir":"test"},{"name":"is a function","suites":["generate"],"updatePoint":{"line":33,"column":19,"index":777},"line":33,"code":"  it('is a function', function () {\n    expect(generate).to.be.a('function');\n  });","file":"browser/src/generate.js","skipped":false,"dir":"test"},{"name":"does not blow up when no config is given","suites":["generate"],"updatePoint":{"line":36,"column":46,"index":888},"line":36,"code":"  it('does not blow up when no config is given', function () {\n    expect(function () {\n      generate();\n    }).to.not.throw();\n  });","file":"browser/src/generate.js","skipped":false,"dir":"test"},{"name":"defines `feature-detects` if it is not on the config already","suites":["generate"],"updatePoint":{"line":41,"column":66,"index":1043},"line":41,"code":"  it('defines `feature-detects` if it is not on the config already', function () {\n    var config = {};\n    generate(config);\n    expect(config['feature-detects']).to.not.be.equal(undefined);\n  });","file":"browser/src/generate.js","skipped":false,"dir":"test"},{"name":"does not overwrite `feature-detects` if it is defined already","suites":["generate"],"updatePoint":{"line":46,"column":67,"index":1242},"line":46,"code":"  it('does not overwrite `feature-detects` if it is defined already', function () {\n    var config = {\n      'feature-detects': ['fake']\n    };\n    generate(config);\n    expect(config['feature-detects'][0]).to.be.equal('fake');\n  });","file":"browser/src/generate.js","skipped":false,"dir":"test"},{"name":"with amd prefix","suites":["generate","outputs feature detects when they are requested"],"updatePoint":{"line":54,"column":23,"index":1508},"line":54,"code":"    it('with amd prefix', function () {\n      var config = {\n        'feature-detects': ['test/fake']\n      };\n      var output = generate(config);\n      expect(output).to.contain('test/fake');\n    });","file":"browser/src/generate.js","skipped":false,"dir":"test"},{"name":"without amd prefix","suites":["generate","outputs feature detects when they are requested"],"updatePoint":{"line":61,"column":26,"index":1713},"line":61,"code":"    it('without amd prefix', function () {\n      var config = {\n        'feature-detects': ['fake']\n      };\n      var output = generate(config);\n      expect(output).to.contain('test/fake');\n    });","file":"browser/src/generate.js","skipped":false,"dir":"test"},{"name":"adds `setClasses` and `classes` when defined","suites":["generate","outputs feature detects when they are requested"],"updatePoint":{"line":69,"column":50,"index":1943},"line":69,"code":"  it('adds `setClasses` and `classes` when defined', function () {\n    var config = {\n      'options': ['setClasses']\n    };\n    var output = generate(config);\n    expect(output).to.contain('setClasses\", \"classes');\n  });","file":"browser/src/generate.js","skipped":false,"dir":"test"},{"name":"adds options when defined","suites":["generate","outputs feature detects when they are requested"],"updatePoint":{"line":76,"column":31,"index":2146},"line":76,"code":"  it('adds options when defined', function () {\n    var config = {\n      'options': ['fakeOption']\n    };\n    var output = generate(config);\n    expect(output).to.contain('fakeOption');\n  });","file":"browser/src/generate.js","skipped":false,"dir":"test"},{"name":"only adds one of the shivs if both are defined","suites":["generate","outputs feature detects when they are requested"],"updatePoint":{"line":83,"column":52,"index":2359},"line":83,"code":"  it('only adds one of the shivs if both are defined', function () {\n    var config = {\n      'options': ['html5shiv', 'html5printshiv']\n    };\n    var output = generate(config);\n    expect(output).to.contain('html5printshiv');\n    expect(output).to.not.contain('html5shiv');\n  });","file":"browser/src/generate.js","skipped":false,"dir":"test"},{"name":"outputs a valid function","suites":["generate","outputs feature detects when they are requested"],"updatePoint":{"line":91,"column":30,"index":2619},"line":91,"code":"  it('outputs a valid function', function () {\n    var output = generate({});\n    var stashedRequire = window.require;\n    window.require = function () {};\n    // eslint-disable-next-line\n    expect(function () {\n      eval(output);\n    }).to.not.throw();\n    window.require = stashedRequire;\n  });","file":"browser/src/generate.js","skipped":false,"dir":"test"},{"name":"outputs a valid function when minified","suites":["generate","outputs feature detects when they are requested"],"updatePoint":{"line":101,"column":44,"index":2932},"line":101,"code":"  it('outputs a valid function when minified', function () {\n    var output = generate({\n      minify: true\n    });\n    var stashedRequire = window.require;\n    window.require = function () {};\n    // eslint-disable-next-line\n    expect(function () {\n      eval(output);\n    }).to.not.throw();\n    window.require = stashedRequire;\n  });","file":"browser/src/generate.js","skipped":false,"dir":"test"},{"name":"does not modify options","suites":["generate","outputs feature detects when they are requested"],"updatePoint":{"line":113,"column":29,"index":3254},"line":113,"code":"  it('does not modify options', function () {\n    var config = {\n      'options': ['setClasses']\n    };\n    generate(config);\n    expect(config.options).to.eql(['setClasses']);\n  });","file":"browser/src/generate.js","skipped":false,"dir":"test"},{"name":"returns document.body","suites":["getBody"],"updatePoint":{"line":18,"column":27,"index":437},"line":18,"code":"  it('returns document.body', function () {\n    var body = getBody();\n    expect(body).to.be.equal(document.body);\n    expect(body.fake).to.be.equal(undefined);\n  });","file":"browser/src/getBody.js","skipped":false,"dir":"test"},{"name":"returns a fake when document.body does not exist","suites":["getBody"],"updatePoint":{"line":23,"column":54,"index":631},"line":23,"code":"  it('returns a fake when document.body does not exist', function () {\n    var originalBody = document.body;\n    var parentNode = originalBody.parentNode;\n    parentNode.removeChild(originalBody);\n    var body = getBody();\n    parentNode.appendChild(originalBody);\n    expect(body).to.not.equal(document.body);\n    expect(body.fake).to.be.equal(true);\n  });","file":"browser/src/getBody.js","skipped":false,"dir":"test"},{"name":"allows you to pass an element to test against","suites":["hasEvent"],"updatePoint":{"line":22,"column":51,"index":539},"line":22,"code":"  it('allows you to pass an element to test against', function () {\n    expect(hasEvent('click'), document.createElement('a')).to.be.equal(true);\n  });","file":"browser/src/hasEvent.js","skipped":false,"dir":"test"},{"name":"allows you to pass an string name for an element to test against","suites":["hasEvent"],"updatePoint":{"line":25,"column":70,"index":710},"line":25,"code":"  it('allows you to pass an string name for an element to test against', function () {\n    expect(hasEvent('click', 'a')).to.be.equal(true);\n  });","file":"browser/src/hasEvent.js","skipped":false,"dir":"test"},{"name":"allows you to pass something other then a DOM element or string","suites":["hasEvent"],"updatePoint":{"line":28,"column":69,"index":856},"line":28,"code":"  it('allows you to pass something other then a DOM element or string', function () {\n    expect(hasEvent('click', document)).to.be.equal(true);\n  });","file":"browser/src/hasEvent.js","skipped":false,"dir":"test"},{"name":"returns false when no event name is provided","suites":["hasEvent"],"updatePoint":{"line":31,"column":50,"index":988},"line":31,"code":"  it('returns false when no event name is provided', function () {\n    expect(hasEvent()).to.be.equal(false);\n  });","file":"browser/src/hasEvent.js","skipped":false,"dir":"test"},{"name":"returns true when the event exists","suites":["hasEvent"],"updatePoint":{"line":34,"column":40,"index":1094},"line":34,"code":"  it('returns true when the event exists', function () {\n    expect(hasEvent('click')).to.be.equal(true);\n  });","file":"browser/src/hasEvent.js","skipped":false,"dir":"test"},{"name":"returns false when the event does not exists","suites":["hasEvent"],"updatePoint":{"line":37,"column":50,"index":1216},"line":37,"code":"  it('returns false when the event does not exists', function () {\n    expect(hasEvent('fart')).to.be.equal(false);\n  });","file":"browser/src/hasEvent.js","skipped":false,"dir":"test"},{"name":"fallsback properly with no element","suites":["hasEvent","fallback"],"updatePoint":{"line":70,"column":42,"index":2314},"line":70,"code":"    it('fallsback properly with no element', function () {\n      expect(hasEvent('click')).to.be.equal(true);\n    });","file":"browser/src/hasEvent.js","skipped":false,"dir":"test"},{"name":"fallsback properly when testing with a global element","suites":["hasEvent","fallback"],"updatePoint":{"line":73,"column":61,"index":2451},"line":73,"code":"    it('fallsback properly when testing with a global element', function () {\n      expect(hasEvent('click', document)).to.be.equal(true);\n    });","file":"browser/src/hasEvent.js","skipped":false,"dir":"test"},{"name":"is a function","suites":["hasOwnProp"],"updatePoint":{"line":18,"column":19,"index":447},"line":18,"code":"  it('is a function', function () {\n    expect(hasOwnProp).to.be.an('function');\n  });","file":"browser/src/hasOwnProp.js","skipped":false,"dir":"test"},{"name":"works","suites":["hasOwnProp"],"updatePoint":{"line":21,"column":11,"index":526},"line":21,"code":"  it('works', function () {\n    var obj = {};\n    obj.prop = true;\n    expect(hasOwnProp(obj, 'prop')).to.be.equal(true);\n  });","file":"browser/src/hasOwnProp.js","skipped":false,"dir":"test"},{"name":"shivs the document","suites":["html5printshiv"],"updatePoint":{"line":26,"column":24,"index":629},"line":26,"code":"  it('shivs the document', function (done) {\n    try {\n      iframeWindow.requirejs(['html5printshiv'], function () {\n        expect('html5' in iframeWindow).to.be.equal(true);\n        expect(iframeWindow.html5.type).to.be.equal('default print');\n        done();\n      });\n    } catch (e) {\n      done(e);\n    }\n  });","file":"browser/src/html5printshiv.js","skipped":false,"dir":"test"},{"name":"shivs the document","suites":["html5shiv"],"updatePoint":{"line":26,"column":24,"index":614},"line":26,"code":"  it('shivs the document', function (done) {\n    try {\n      iframeWindow.requirejs(['html5shiv'], function () {\n        expect('html5' in iframeWindow).to.be.equal(true);\n        expect(iframeWindow.html5.type).to.be.equal('default');\n        done();\n      });\n    } catch (e) {\n      done(e);\n    }\n  });","file":"browser/src/html5shiv.js","skipped":false,"dir":"test"},{"name":"is a function","suites":["injectElementWithStyles"],"updatePoint":{"line":31,"column":19,"index":821},"line":31,"code":"  it('is a function', function () {\n    expect(injectElementWithStyles).to.be.a('function');\n  });","file":"browser/src/injectElementWithStyles.js","skipped":false,"dir":"test"},{"name":"styles an injected element","suites":["injectElementWithStyles"],"updatePoint":{"line":34,"column":32,"index":933},"line":34,"code":"  it('styles an injected element', function () {\n    var callback = function () {\n      var modernizr = document.getElementById('modernizr');\n      return modernizr.clientWidth === 10;\n    };\n    var result = injectElementWithStyles('#modernizr{width: 10px}', callback);\n    expect(result).to.be.equal(true);\n  });","file":"browser/src/injectElementWithStyles.js","skipped":false,"dir":"test"},{"name":"passes back a rule matching what we gave it","suites":["injectElementWithStyles"],"updatePoint":{"line":42,"column":49,"index":1265},"line":42,"code":"  it('passes back a rule matching what we gave it', function (done) {\n    var style = '#modernizr{width: 10px}';\n    var callback = function (elm, rule) {\n      expect(rule).to.be.equal(style);\n      done();\n    };\n    injectElementWithStyles(style, callback);\n  });","file":"browser/src/injectElementWithStyles.js","skipped":false,"dir":"test"},{"name":"passes the #modernizr element in the callback","suites":["injectElementWithStyles"],"updatePoint":{"line":50,"column":51,"index":1534},"line":50,"code":"  it('passes the #modernizr element in the callback', function (done) {\n    var style = '#modernizr{width: 10px}';\n    var callback = function (elm) {\n      expect(elm.id).to.be.equal('modernizr');\n      done();\n    };\n    injectElementWithStyles(style, callback);\n  });","file":"browser/src/injectElementWithStyles.js","skipped":false,"dir":"test"},{"name":"deletes an element after the test","suites":["injectElementWithStyles"],"updatePoint":{"line":58,"column":39,"index":1793},"line":58,"code":"  it('deletes an element after the test', function () {\n    expect(document.getElementById('modernizr')).to.be.equal(null);\n    var callback = function () {\n      expect(document.getElementById('modernizr')).to.not.be.equal(null);\n    };\n    injectElementWithStyles('', callback);\n    expect(document.getElementById('modernizr')).to.be.equal(null);\n  });","file":"browser/src/injectElementWithStyles.js","skipped":false,"dir":"test"},{"name":"creates multiple nodes when requested","suites":["injectElementWithStyles"],"updatePoint":{"line":66,"column":43,"index":2152},"line":66,"code":"  it('creates multiple nodes when requested', function (done) {\n    var callback = function (elm) {\n      expect(elm.childNodes.length).to.be.equal(9);\n      done();\n    };\n    injectElementWithStyles('', callback, 8);\n  });","file":"browser/src/injectElementWithStyles.js","skipped":false,"dir":"test"},{"name":"names multiple nodes based on `testname` when configured","suites":["injectElementWithStyles"],"updatePoint":{"line":73,"column":62,"index":2396},"line":73,"code":"  it('names multiple nodes based on `testname` when configured', function (done) {\n    var callback = function () {\n      var test = document.getElementById('test');\n      var element = document.getElementById('element');\n      expect(test).to.not.be.equal(null);\n      expect(element).to.not.be.equal(null);\n      done();\n    };\n    injectElementWithStyles('', callback, 2, ['test', 'element']);\n  });","file":"browser/src/injectElementWithStyles.js","skipped":false,"dir":"test"},{"name":"copes with a fake body","suites":["injectElementWithStyles"],"updatePoint":{"line":83,"column":28,"index":2765},"line":83,"code":"  it('copes with a fake body', function (done) {\n    originalBody = document.body;\n    parentNode = originalBody.parentNode;\n    var callback = function () {\n      var body = document.body;\n      expect(body.fake).to.be.equal(true);\n\n      // injectElementWithStyles overrides the background value for fake body to\n      // an empty string, however old IE changes this to the following string.\n      if (body.style.background !== 'none transparent scroll repeat 0% 0%') {\n        expect(body.style.background.length).to.be.equal(0);\n      }\n      expect(body.style.overflow).to.be.equal('hidden');\n      done();\n    };\n    expect(document.body.fake).to.not.be.equal(true);\n    parentNode.removeChild(originalBody);\n    injectElementWithStyles('', callback);\n  });","file":"browser/src/injectElementWithStyles.js","skipped":false,"dir":"test"},{"name":"returns an input element","suites":["inputElem"],"updatePoint":{"line":18,"column":30,"index":452},"line":18,"code":"  it('returns an input element', function () {\n    expect(inputElem.nodeName).to.be.equal('INPUT');\n  });","file":"browser/src/inputElem.js","skipped":false,"dir":"test"},{"name":"is a function","suites":["is"],"updatePoint":{"line":18,"column":19,"index":399},"line":18,"code":"  it('is a function', function () {\n    expect(is).to.be.a('function');\n  });","file":"browser/src/is.js","skipped":false,"dir":"test"},{"name":"recognizes all types","suites":["is"],"updatePoint":{"line":21,"column":26,"index":484},"line":21,"code":"  it('recognizes all types', function () {\n    var _undefined = is(undefined, 'undefined');\n    var _func = is(function () {}, 'function');\n    var _bool = is(true, 'boolean');\n    var _null = is(null, 'object');\n    var _str = is('1', 'string');\n    expect(_undefined).to.be.equal(true);\n    expect(_func).to.be.equal(true);\n    expect(_bool).to.be.equal(true);\n    expect(_null).to.be.equal(true);\n    expect(_str).to.be.equal(true);\n  });","file":"browser/src/is.js","skipped":false,"dir":"test"},{"name":"creates a reference on `ModernizrProto`","suites":["load"],"updatePoint":{"line":31,"column":45,"index":798},"line":31,"code":"  it('creates a reference on `ModernizrProto`', function () {\n    expect(ModernizrProto.load).to.be.a('function');\n  });","file":"browser/src/load.js","skipped":false,"dir":"test"},{"name":"reports that `load` has been removed","suites":["load","errors"],"updatePoint":{"line":36,"column":46,"index":998},"line":36,"code":"      it('reports that `load` has been removed', function () {\n        var err = console.error;\n        console.error = sinon.spy();\n        ModernizrProto.load();\n        expect(console.error.calledOnce).to.be.equal(true);\n        console.error = err;\n      });","file":"browser/src/load.js","skipped":false,"dir":"test"},{"name":"fallsback to log when `console.error` is not defined","suites":["load","errors"],"updatePoint":{"line":43,"column":62,"index":1277},"line":43,"code":"      it('fallsback to log when `console.error` is not defined', function () {\n        var err;\n        var log;\n        err = console.error;\n        log = console.log;\n        console.error = undefined;\n        console.log = sinon.spy();\n        ModernizrProto.load();\n        expect(console.log.calledOnce).to.be.equal(true);\n        console.log = log;\n        console.error = err;\n      });","file":"browser/src/load.js","skipped":false,"dir":"test"},{"name":"reports that `load` has been removed, but still calls if yepnope is on the page","suites":["load","warnings"],"updatePoint":{"line":64,"column":89,"index":1913},"line":64,"code":"      it('reports that `load` has been removed, but still calls if yepnope is on the page', function () {\n        var warn = console.warn;\n        console.warn = sinon.spy();\n        ModernizrProto.load();\n        expect(console.warn.calledOnce).to.be.equal(true);\n        expect(yepnope.calledOnce).to.be.equal(true);\n        console.warn = warn;\n      });","file":"browser/src/load.js","skipped":false,"dir":"test"},{"name":"fallsback to log when `console.warn` is not defined","suites":["load","warnings"],"updatePoint":{"line":72,"column":61,"index":2243},"line":72,"code":"      it('fallsback to log when `console.warn` is not defined', function () {\n        var warn;\n        var log;\n        warn = console.warn;\n        log = console.log;\n        console.warn = undefined;\n        console.log = sinon.spy();\n        ModernizrProto.load();\n        expect(console.log.calledOnce).to.be.equal(true);\n        expect(yepnope.calledOnce).to.be.equal(true);\n        console.log = log;\n        console.warn = warn;\n      });","file":"browser/src/load.js","skipped":false,"dir":"test"},{"name":"doesn't blow up when calling console.error","suites":["load","browsers without a console"],"updatePoint":{"line":99,"column":53,"index":3079},"line":99,"code":"      it('doesn\\'t blow up when calling console.error', function () {\n        expect(ModernizrProto.load).to.not.throw();\n      });","file":"browser/src/load.js","skipped":false,"dir":"test"},{"name":"doesn't blow up when calling console.warn","suites":["load","browsers without a console"],"updatePoint":{"line":102,"column":52,"index":3210},"line":102,"code":"      it('doesn\\'t blow up when calling console.warn', function () {\n        var yepnope = sinon.spy();\n        window.yepnope = yepnope;\n        expect(ModernizrProto.load).to.not.throw();\n        expect(yepnope.calledOnce).to.be.equal(true);\n      });","file":"browser/src/load.js","skipped":false,"dir":"test"},{"name":"returns an object with an `elem` prop","suites":["modElem"],"updatePoint":{"line":26,"column":43,"index":593},"line":26,"code":"  it('returns an object with an `elem` prop', function () {\n    expect(modElem).to.be.an('object');\n    expect(modElem.elem).to.not.be.equal(undefined);\n    expect(modElem.elem.nodeName.toUpperCase()).to.be.equal('MODERNIZR');\n  });","file":"browser/src/modElem.js","skipped":false,"dir":"test"},{"name":"pushes a function onto the Modernizr._q","suites":["modElem"],"updatePoint":{"line":31,"column":45,"index":828},"line":31,"code":"  it('pushes a function onto the Modernizr._q', function () {\n    expect(Modernizr._q[0]).to.be.a('function');\n  });","file":"browser/src/modElem.js","skipped":false,"dir":"test"},{"name":"deletes modElem.style after the `_q` runs","suites":["modElem"],"updatePoint":{"line":34,"column":47,"index":947},"line":34,"code":"  it('deletes modElem.style after the `_q` runs', function () {\n    expect(modElem.elem).to.not.be.equal(undefined);\n    Modernizr._q[0]();\n    expect(modElem.elem).to.be.equal(undefined);\n  });","file":"browser/src/modElem.js","skipped":false,"dir":"test"},{"name":"should return an object","suites":["Modernizr Base"],"updatePoint":{"line":21,"column":29,"index":537},"line":21,"code":"  it('should return an object', function () {\n    expect(modernizrBase).to.be.an('object');\n  });","file":"browser/src/Modernizr.js","skipped":false,"dir":"test"},{"name":"should define a version","suites":["ModernizrProto"],"updatePoint":{"line":38,"column":29,"index":867},"line":38,"code":"  it('should define a version', function () {\n    expect(ModernizrProto._version).to.be.a('string');\n  });","file":"browser/src/ModernizrProto.js","skipped":false,"dir":"test"},{"name":"should set a default config","suites":["ModernizrProto"],"updatePoint":{"line":41,"column":33,"index":978},"line":41,"code":"  it('should set a default config', function () {\n    var config = ModernizrProto._config;\n    expect(config.classPrefix).to.be.a('string');\n    expect(config.enableClasses).to.be.a('boolean');\n    expect(config.enableJSClass).to.be.a('boolean');\n    expect(config.usePrefixes).to.be.a('boolean');\n  });","file":"browser/src/ModernizrProto.js","skipped":false,"dir":"test"},{"name":"should define a working stub for `Modernizr.on`","suites":["ModernizrProto"],"updatePoint":{"line":48,"column":53,"index":1302},"line":48,"code":"  it('should define a working stub for `Modernizr.on`', function (done) {\n    ModernizrProto.on('fakeDetect', done);\n  });","file":"browser/src/ModernizrProto.js","skipped":false,"dir":"test"},{"name":"should define `Modernizr.addTest` and have it pushed to the internal `tests` queue","suites":["ModernizrProto"],"updatePoint":{"line":51,"column":88,"index":1460},"line":51,"code":"  it('should define `Modernizr.addTest` and have it pushed to the internal `tests` queue', function () {\n    var name = 'fakeDetect';\n    var fn = function fakeCallback() {};\n    var options = {\n      opt: 'opt'\n    };\n    ModernizrProto.addTest(name, fn, options);\n    expect(tests).to.have.length(1);\n    expect(tests[0].name).to.be.equal(name);\n    expect(tests[0].fn).to.be.equal(fn);\n    expect(tests[0].options).to.be.equal(options);\n  });","file":"browser/src/ModernizrProto.js","skipped":false,"dir":"test"},{"name":"should define `Modernizr.addAsyncTest` and have it pushed to the internal `tests` queue","suites":["ModernizrProto"],"updatePoint":{"line":63,"column":93,"index":1911},"line":63,"code":"  it('should define `Modernizr.addAsyncTest` and have it pushed to the internal `tests` queue', function () {\n    var fn = function fakeCallback() {};\n    ModernizrProto.addAsyncTest(fn);\n    expect(tests).to.have.length(1);\n    expect(tests[0].fn).to.be.equal(fn);\n  });","file":"browser/src/ModernizrProto.js","skipped":false,"dir":"test"},{"name":"works","suites":["mq","matchMedia version"],"updatePoint":{"line":56,"column":15,"index":1705},"line":56,"code":"      it('works', function () {\n        expect(mq('only screen')).to.be.equal(media('only screen').matches);\n        expect(mq('only fake rule')).to.be.equal(media('only fake rule').matches);\n      });","file":"browser/src/mq.js","skipped":false,"dir":"test"},{"name":"works","suites":["mq","fallback version"],"updatePoint":{"line":75,"column":15,"index":2356},"line":75,"code":"      it('works', function () {\n        expect(mq('only screen')).to.be.equal(media('only screen').matches);\n        expect(mq('only fake rule')).to.be.equal(media('only fake rule').matches);\n        expect(injectElementWithStyles.called).to.be.equal(true);\n      });","file":"browser/src/mq.js","skipped":false,"dir":"test"},{"name":"returns an object with a style prop","suites":["mStyle"],"updatePoint":{"line":35,"column":41,"index":784},"line":35,"code":"  it('returns an object with a style prop', function () {\n    expect(mStyle).to.be.an('object');\n    expect(mStyle.style).to.not.be.equal(undefined);\n  });","file":"browser/src/mStyle.js","skipped":false,"dir":"test"},{"name":"pushes a function onto the Modernizr._q","suites":["mStyle"],"updatePoint":{"line":39,"column":45,"index":944},"line":39,"code":"  it('pushes a function onto the Modernizr._q', function () {\n    expect(Modernizr._q[0]).to.be.a('function');\n  });","file":"browser/src/mStyle.js","skipped":false,"dir":"test"},{"name":"deletes mStyle.style after the `_q` runs","suites":["mStyle"],"updatePoint":{"line":42,"column":46,"index":1062},"line":42,"code":"  it('deletes mStyle.style after the `_q` runs', function () {\n    expect(mStyle.style).to.not.be.equal(undefined);\n    Modernizr._q[0]();\n    expect(mStyle.style).to.be.equal(undefined);\n  });","file":"browser/src/mStyle.js","skipped":false,"dir":"test"},{"name":"is a function","suites":["nativeTestProps"],"updatePoint":{"line":21,"column":19,"index":542},"line":21,"code":"  it('is a function', function () {\n    expect(nativeTestProps).to.be.a('function');\n  });","file":"browser/src/nativeTestProps.js","skipped":false,"dir":"test"},{"name":"looks up if the value is supported","suites":["nativeTestProps"],"updatePoint":{"line":25,"column":42,"index":699},"line":25,"code":"    it('looks up if the value is supported', function () {\n      expect(nativeTestProps(['display'], 'block')).to.be.equal(true);\n      expect(nativeTestProps(['display'], 'fart')).to.be.equal(false);\n    });","file":"browser/src/nativeTestProps.js","skipped":false,"dir":"test"},{"name":"supports the old version of the lookup","suites":["nativeTestProps"],"updatePoint":{"line":30,"column":46,"index":956},"line":30,"code":"    it('supports the old version of the lookup', function () {\n      expect(nativeTestProps(['display'], 'block')).to.be.equal(true);\n    });","file":"browser/src/nativeTestProps.js","skipped":false,"dir":"test"},{"name":"returns undefined for browsers lacking support","suites":["nativeTestProps"],"updatePoint":{"line":34,"column":54,"index":1117},"line":34,"code":"    it('returns undefined for browsers lacking support', function () {\n      expect(nativeTestProps(['display'], 'block')).to.be.equal(undefined);\n    });","file":"browser/src/nativeTestProps.js","skipped":false,"dir":"test"},{"name":"returns a string","suites":["omPrefixes"],"updatePoint":{"line":18,"column":22,"index":450},"line":18,"code":"  it('returns a string', function () {\n    expect(omPrefixes).to.be.a('string');\n    expect(omPrefixes.length).to.not.be.equal(0);\n  });","file":"browser/src/omPrefixes.js","skipped":false,"dir":"test"},{"name":"is a function","suites":["prefixed"],"updatePoint":{"line":53,"column":19,"index":1245},"line":53,"code":"  it('is a function', function () {\n    expect(prefixed).to.be.a('function');\n  });","file":"browser/src/prefixed.js","skipped":false,"dir":"test"},{"name":"creates a reference on `ModernizrProto`","suites":["prefixed"],"updatePoint":{"line":56,"column":45,"index":1355},"line":56,"code":"  it('creates a reference on `ModernizrProto`', function () {\n    expect(prefixed).to.be.equal(ModernizrProto.prefixed);\n  });","file":"browser/src/prefixed.js","skipped":false,"dir":"test"},{"name":"uses atRule to lookup rules starting with \"@\"","suites":["prefixed"],"updatePoint":{"line":59,"column":51,"index":1488},"line":59,"code":"  it('uses atRule to lookup rules starting with \"@\"', function () {\n    expect(prefixed('@fakeRule')).to.be.equal('@fakeRule');\n    expect(atRule.calledOnce).to.be.equal(true);\n  });","file":"browser/src/prefixed.js","skipped":false,"dir":"test"},{"name":"uses cssToDOM to lookup rules with \"-\"","suites":["prefixed"],"updatePoint":{"line":63,"column":44,"index":1664},"line":63,"code":"  it('uses cssToDOM to lookup rules with \"-\"', function () {\n    expect(prefixed('fake-rule')).to.be.equal('fakeRule');\n    expect(cssToDOM.calledOnce).to.be.equal(true);\n    expect(testPropsAll.calledOnce).to.be.equal(true);\n  });","file":"browser/src/prefixed.js","skipped":false,"dir":"test"},{"name":"looks up properties on an element, when one is provided","suites":["prefixed"],"updatePoint":{"line":68,"column":61,"index":1913},"line":68,"code":"  it('looks up properties on an element, when one is provided', function () {\n    var elm = document.createElement('div');\n    expect(prefixed('children', elm)).to.be.equal('fakeRule');\n    expect(testPropsAll.calledOnce).to.be.equal(true);\n  });","file":"browser/src/prefixed.js","skipped":false,"dir":"test"},{"name":"creates a reference on `ModernizrProto`","suites":["prefixedCSS"],"updatePoint":{"line":32,"column":45,"index":747},"line":32,"code":"  it('creates a reference on `ModernizrProto`', function () {\n    expect(prefixedCSS).to.be.equal(ModernizrProto.prefixedCSS);\n  });","file":"browser/src/prefixedCSS.js","skipped":false,"dir":"test"},{"name":"returns false on unknown properties","suites":["prefixedCSS"],"updatePoint":{"line":35,"column":41,"index":876},"line":35,"code":"  it('returns false on unknown properties', function () {\n    expect(prefixedCSS('fart')).to.be.equal(false);\n  });","file":"browser/src/prefixedCSS.js","skipped":false,"dir":"test"},{"name":"returns known values without prefix","suites":["prefixedCSS"],"updatePoint":{"line":38,"column":41,"index":992},"line":38,"code":"  it('returns known values without prefix', function () {\n    expect(prefixedCSS('display')).to.be.equal('display');\n  });","file":"browser/src/prefixedCSS.js","skipped":false,"dir":"test"},{"name":"returns the value when it is valid","suites":["prefixedCSSValue"],"updatePoint":{"line":18,"column":40,"index":504},"line":18,"code":"  it('returns the value when it is valid', function () {\n    expect(prefixedCSSValue('display', 'block')).to.be.equal('block');\n  });","file":"browser/src/prefixedCSSValue.js","skipped":false,"dir":"test"},{"name":"returns false when the prop is not supported","suites":["prefixedCSSValue"],"updatePoint":{"line":21,"column":50,"index":648},"line":21,"code":"  it('returns false when the prop is not supported', function () {\n    expect(prefixedCSSValue('fart', 'block')).to.be.equal(false);\n  });","file":"browser/src/prefixedCSSValue.js","skipped":false,"dir":"test"},{"name":"returns false when value is not supported","suites":["prefixedCSSValue"],"updatePoint":{"line":24,"column":47,"index":784},"line":24,"code":"  it('returns false when value is not supported', function () {\n    expect(prefixedCSSValue('display', 'fart')).to.be.equal(false);\n  });","file":"browser/src/prefixedCSSValue.js","skipped":false,"dir":"test"},{"name":"returns prefixes","suites":["prefixes","prefixes enabled"],"updatePoint":{"line":51,"column":24,"index":1135},"line":51,"code":"    it('returns prefixes', function (done) {\n      req(['prefixes'], function (prefixes) {\n        expect(prefixes).to.be.an('array');\n        expect(prefixes).to.not.have.length(0);\n        done();\n      });\n    });","file":"browser/src/prefixes.js","skipped":false,"dir":"test"},{"name":"returns no prefixes","suites":["prefixes","prefixes disabled"],"updatePoint":{"line":64,"column":27,"index":1491},"line":64,"code":"    it('returns no prefixes', function (done) {\n      req(['prefixes'], function (prefixes) {\n        expect(prefixes).to.be.an('array');\n        expect(prefixes).to.have.length(2);\n        done();\n      });\n    });","file":"browser/src/prefixes.js","skipped":false,"dir":"test"},{"name":"works","suites":["roundedEquals"],"updatePoint":{"line":18,"column":11,"index":457},"line":18,"code":"  it('works', function () {\n    expect(roundedEquals(1, 2)).to.be.equal(true);\n    expect(roundedEquals(2, 2)).to.be.equal(true);\n    expect(roundedEquals(3, 2)).to.be.equal(true);\n  });","file":"browser/src/roundedEquals.js","skipped":false,"dir":"test"},{"name":"should not add anything","suites":["setClasses","cssClasses disabled"],"updatePoint":{"line":61,"column":31,"index":1449},"line":61,"code":"    it('should not add anything', function (done) {\n      req(['setClasses'], function (setClasses) {\n        setClasses(['detect']);\n        expect(elm.className).to.not.contain('fakedetect');\n        done();\n      });\n    });","file":"browser/src/setClasses.js","skipped":false,"dir":"test"},{"name":"adds a class with a prefix","suites":["setClasses","cssClasses enabled, with prefix"],"updatePoint":{"line":77,"column":34,"index":1895},"line":77,"code":"    it('adds a class with a prefix', function (done) {\n      req(['setClasses'], function (setClasses) {\n        setClasses(['detect']);\n        expect(elm.className).to.contain('fakedetect');\n        done();\n      });\n    });","file":"browser/src/setClasses.js","skipped":false,"dir":"test"},{"name":"adds a class without a prefix","suites":["setClasses","cssClasses enabled, without prefix"],"updatePoint":{"line":93,"column":37,"index":2333},"line":93,"code":"    it('adds a class without a prefix', function (done) {\n      req(['setClasses'], function (setClasses) {\n        setClasses(['detect']);\n        expect(elm.className).to.contain('detect');\n        done();\n      });\n    });","file":"browser/src/setClasses.js","skipped":false,"dir":"test"},{"name":"adds a class without a prefix","suites":["setClasses","cssClasses disabled"],"updatePoint":{"line":108,"column":37,"index":2732},"line":108,"code":"    it('adds a class without a prefix', function (done) {\n      req(['setClasses'], function (setClasses) {\n        setClasses(['detect']);\n        expect(elm.className).to.not.contain('detect');\n        done();\n      });\n    });","file":"browser/src/setClasses.js","skipped":false,"dir":"test"},{"name":"changes the `js` class, and adds a class with a prefix","suites":["setClasses","enableJSClass enabled, with prefix"],"updatePoint":{"line":124,"column":62,"index":3267},"line":124,"code":"    it('changes the `js` class, and adds a class with a prefix', function (done) {\n      req(['setClasses'], function (setClasses) {\n        var classNames = elm.className.split(' ');\n        expect(classNames).to.contain('fakeno-js');\n        setClasses(['detect']);\n        classNames = elm.className.split(' ');\n        expect(elm.className).to.contain('fakejs');\n        expect(elm.className).to.contain('+fakeno-js');\n        expect(elm.className).to.contain('fakeno-js-');\n        expect(elm.className).to.contain('i-has-fakeno-js');\n        expect(elm.className).to.contain('fakedetect');\n        done();\n      });\n    });","file":"browser/src/setClasses.js","skipped":false,"dir":"test"},{"name":"changes the `js` class, and adds a class without a prefix","suites":["setClasses","enableJSClass enabled, without prefix"],"updatePoint":{"line":148,"column":65,"index":4178},"line":148,"code":"    it('changes the `js` class, and adds a class without a prefix', function (done) {\n      req(['setClasses'], function (setClasses) {\n        var classNames = elm.className.split(' ');\n        expect(classNames).to.contain('no-js');\n        setClasses(['detect']);\n        classNames = elm.className.split(' ');\n        expect(elm.className).to.contain('js');\n        expect(elm.className).to.contain('+no-js');\n        expect(elm.className).to.contain('no-js-');\n        expect(elm.className).to.contain('i-has-no-js');\n        expect(elm.className).to.contain('detect');\n        done();\n      });\n    });","file":"browser/src/setClasses.js","skipped":false,"dir":"test"},{"name":"should not add a js class","suites":["setClasses","enableJSClass disabled"],"updatePoint":{"line":170,"column":33,"index":4931},"line":170,"code":"    it('should not add a js class', function (done) {\n      req(['setClasses'], function (setClasses) {\n        setClasses(['detect']);\n        expect(elm.className).to.equal('');\n        done();\n      });\n    });","file":"browser/src/setClasses.js","skipped":false,"dir":"test"},{"name":"returns an instance of `slice`","suites":["slice"],"updatePoint":{"line":18,"column":36,"index":434},"line":18,"code":"  it('returns an instance of `slice`', function () {\n    expect(slice).to.be.equal([].slice);\n  });","file":"browser/src/slice.js","skipped":false,"dir":"test"},{"name":"is a curried version of `testPropsAll`","suites":["testAllProps"],"updatePoint":{"line":39,"column":44,"index":978},"line":39,"code":"  it('is a curried version of `testPropsAll`', function () {\n    testAllProps('flexAlign', 'end', true);\n    expect(testPropsAll.calledOnce).to.be.equal(true);\n    expect(testPropsAll.calledWithExactly('flexAlign', undefined, undefined, 'end', true)).to.be.equal(true);\n  });","file":"browser/src/testAllProps.js","skipped":false,"dir":"test"},{"name":"is added to ModernizrProto","suites":["testAllProps"],"updatePoint":{"line":44,"column":32,"index":1242},"line":44,"code":"  it('is added to ModernizrProto', function () {\n    expect(testAllProps).to.be.equal(ModernizrProto.testAllProps);\n  });","file":"browser/src/testAllProps.js","skipped":false,"dir":"test"},{"name":"returns known values","suites":["testDOMProps"],"updatePoint":{"line":25,"column":26,"index":597},"line":25,"code":"  it('returns known values', function () {\n    expect(testDOMProps(['clientHeight'], elm)).to.be.equal(elm.clientHeight);\n  });","file":"browser/src/testDOMProps.js","skipped":false,"dir":"test"},{"name":"returns false for unknown values","suites":["testDOMProps"],"updatePoint":{"line":28,"column":38,"index":737},"line":28,"code":"  it('returns false for unknown values', function () {\n    expect(testDOMProps(['fart'], elm)).to.be.equal(false);\n  });","file":"browser/src/testDOMProps.js","skipped":false,"dir":"test"},{"name":"bind a value to to the object","suites":["testDOMProps"],"updatePoint":{"line":31,"column":35,"index":855},"line":31,"code":"  it('bind a value to to the object', function () {\n    elm.answer = function () {\n      return 42;\n    };\n    expect(testDOMProps(['answer'], elm)()).to.be.equal(elm.answer());\n  });","file":"browser/src/testDOMProps.js","skipped":false,"dir":"test"},{"name":"bind a value to the element, if it is provided","suites":["testDOMProps"],"updatePoint":{"line":37,"column":52,"index":1056},"line":37,"code":"  it('bind a value to the element, if it is provided', function () {\n    elm.answer = function () {\n      return 42;\n    };\n    expect(testDOMProps(['answer'], {}, elm)).to.be.equal(false);\n  });","file":"browser/src/testDOMProps.js","skipped":false,"dir":"test"},{"name":"return the property name as a string if elem is false","suites":["testDOMProps"],"updatePoint":{"line":43,"column":59,"index":1259},"line":43,"code":"  it('return the property name as a string if elem is false', function () {\n    elm.answer = function () {\n      return 42;\n    };\n    expect(testDOMProps(['answer'], {\n      'answer': 42\n    }, false)).to.be.equal('answer');\n  });","file":"browser/src/testDOMProps.js","skipped":false,"dir":"test"},{"name":"is a curried version of `testProps`","suites":["testProp"],"updatePoint":{"line":39,"column":41,"index":939},"line":39,"code":"  it('is a curried version of `testProps`', function () {\n    testProp('flexAlign', 'end', true);\n    expect(testProps.calledOnce).to.be.equal(true);\n    expect(testProps.calledWithExactly(['flexAlign'], undefined, 'end', true)).to.be.equal(true);\n  });","file":"browser/src/testProp.js","skipped":false,"dir":"test"},{"name":"is added to ModernizrProto","suites":["testProp"],"updatePoint":{"line":44,"column":32,"index":1184},"line":44,"code":"  it('is added to ModernizrProto', function () {\n    expect(testProp).to.be.equal(ModernizrProto.testProp);\n  });","file":"browser/src/testProp.js","skipped":false,"dir":"test"},{"name":"returns the value from nativeTestProp if not undefined","suites":["testProps","native detect"],"updatePoint":{"line":55,"column":62,"index":1397},"line":55,"code":"    it('returns the value from nativeTestProp if not undefined', function () {\n      expect(testProps(['fake'], undefined, true));\n      expect(nativeTestProps.callCount).to.be.equal(1);\n      expect(contains.callCount).to.be.equal(0);\n    });","file":"browser/src/testProps.js","skipped":false,"dir":"test"},{"name":"does not return the value from nativeTestProp when undefined","suites":["testProps","native detect"],"updatePoint":{"line":60,"column":68,"index":1647},"line":60,"code":"    it('does not return the value from nativeTestProp when undefined', function () {\n      expect(testProps(['fake'], undefined, false));\n      expect(nativeTestProps.callCount).to.be.equal(1);\n      expect(contains.callCount).to.not.be.equal(0);\n    });","file":"browser/src/testProps.js","skipped":false,"dir":"test"},{"name":"cleans up mStyle changes","suites":["testProps","nonnative detect"],"updatePoint":{"line":104,"column":32,"index":2879},"line":104,"code":"    it('cleans up mStyle changes', function () {\n      expect(testProps(['fake'], undefined, true));\n      expect(contains.callCount).to.be.equal(1);\n      expect(mStyle.style).to.be.equal(undefined);\n      expect(mStyle.modElem).to.be.equal(undefined);\n    });","file":"browser/src/testProps.js","skipped":false,"dir":"test"},{"name":"calls cssToDOM when props have a `-`","suites":["testProps","nonnative detect"],"updatePoint":{"line":110,"column":44,"index":3153},"line":110,"code":"    it('calls cssToDOM when props have a `-`', function () {\n      expect(testProps(['fake-detect'], undefined, true));\n      expect(cssToDOM.called).to.be.equal(true);\n    });","file":"browser/src/testProps.js","skipped":false,"dir":"test"},{"name":"returns true for valid prop, and skipValueTest","suites":["testProps","nonnative detect"],"updatePoint":{"line":114,"column":54,"index":3340},"line":114,"code":"    it('returns true for valid prop, and skipValueTest', function () {\n      expect(testProps(['display'], undefined, true, true)).to.be.equal(true);\n    });","file":"browser/src/testProps.js","skipped":false,"dir":"test"},{"name":"returns true for valid prop, and good value","suites":["testProps","nonnative detect"],"updatePoint":{"line":117,"column":51,"index":3495},"line":117,"code":"    it('returns true for valid prop, and good value', function () {\n      expect(testProps(['display'], undefined, 'block')).to.be.equal(true);\n    });","file":"browser/src/testProps.js","skipped":false,"dir":"test"},{"name":"returns false for valid prop and bad value","suites":["testProps","nonnative detect"],"updatePoint":{"line":120,"column":50,"index":3646},"line":120,"code":"    it('returns false for valid prop and bad value', function () {\n      expect(testProps(['display'], undefined, 'penguin')).to.be.equal(false);\n    });","file":"browser/src/testProps.js","skipped":false,"dir":"test"},{"name":"returns the prop if a prefixed lookup","suites":["testProps","nonnative detect"],"updatePoint":{"line":123,"column":45,"index":3795},"line":123,"code":"    it('returns the prop if a prefixed lookup', function () {\n      expect(testProps(['display'], 'pfx', 'block')).to.be.equal('display');\n    });","file":"browser/src/testProps.js","skipped":false,"dir":"test"},{"name":"returns the prop if a prefixed lookup with skipValueTest","suites":["testProps","nonnative detect"],"updatePoint":{"line":126,"column":64,"index":3961},"line":126,"code":"    it('returns the prop if a prefixed lookup with skipValueTest', function () {\n      expect(testProps(['display'], 'pfx', 'block', true)).to.be.equal('display');\n    });","file":"browser/src/testProps.js","skipped":false,"dir":"test"},{"name":"works properly","suites":["testProps","nonnative detect"],"updatePoint":{"line":129,"column":22,"index":4091},"line":129,"code":"    it('works properly', function () {\n      // Everyone supports margin\n      expect(testProps(['margin'])).to.be.equal(true);\n      // Nobody supports the happiness style. :(\n      expect(testProps(['happiness'])).to.be.equal(false);\n      // Everyone supports fontSize\n      expect(testProps(['fontSize'])).to.be.equal(true);\n      // hyphen-case should work too\n    });","file":"browser/src/testProps.js","skipped":false,"dir":"test"},{"name":"`testProps` is called if `prefixed` is a string","suites":["testPropsAll"],"updatePoint":{"line":56,"column":53,"index":1507},"line":56,"code":"  it('`testProps` is called if `prefixed` is a string', function () {\n    testPropsAll('display', 'pfx', undefined, 'block');\n    expect(testProps.callCount).to.be.equal(1);\n  });","file":"browser/src/testPropsAll.js","skipped":false,"dir":"test"},{"name":"`testProps` is called if `prefixed` is undefined","suites":["testPropsAll"],"updatePoint":{"line":60,"column":54,"index":1688},"line":60,"code":"  it('`testProps` is called if `prefixed` is undefined', function () {\n    testPropsAll('display', undefined, undefined, 'block');\n    expect(testProps.callCount).to.be.equal(1);\n  });","file":"browser/src/testPropsAll.js","skipped":false,"dir":"test"},{"name":"`testDOMProps` is called if `prefixed` is anything else","suites":["testPropsAll"],"updatePoint":{"line":64,"column":61,"index":1880},"line":64,"code":"  it('`testDOMProps` is called if `prefixed` is anything else', function () {\n    testPropsAll('display', [], undefined, 'block');\n    expect(testDOMProps.callCount).to.be.equal(1);\n  });","file":"browser/src/testPropsAll.js","skipped":false,"dir":"test"},{"name":"is added to ModernizrProto as `testAllProps`","suites":["testPropsAll"],"updatePoint":{"line":68,"column":50,"index":2057},"line":68,"code":"  it('is added to ModernizrProto as `testAllProps`', function () {\n    expect(testPropsAll).to.be.equal(ModernizrProto.testAllProps);\n  });","file":"browser/src/testPropsAll.js","skipped":false,"dir":"test"},{"name":"returns true if fn returns true","suites":["testRunner"],"updatePoint":{"line":57,"column":37,"index":1268},"line":57,"code":"  it('returns true if fn returns true', function () {\n    expect('fakefn' in Modernizr).to.be.equal(true);\n  });","file":"browser/src/testRunner.js","skipped":false,"dir":"test"},{"name":"returns true if fn is a bool","suites":["testRunner"],"updatePoint":{"line":60,"column":34,"index":1378},"line":60,"code":"  it('returns true if fn is a bool', function () {\n    expect(Modernizr.fakebool).to.be.equal(false);\n  });","file":"browser/src/testRunner.js","skipped":false,"dir":"test"},{"name":"assigns aliased values","suites":["testRunner"],"updatePoint":{"line":63,"column":28,"index":1480},"line":63,"code":"  it('assigns aliased values', function () {\n    expect(Modernizr.newfakedetect).to.be.equal(Modernizr.fakedetect);\n  });","file":"browser/src/testRunner.js","skipped":false,"dir":"test"},{"name":"deep assignments are valid","suites":["testRunner"],"updatePoint":{"line":66,"column":32,"index":1606},"line":66,"code":"  it('deep assignments are valid', function () {\n    expect(Modernizr.fake.detect).to.be.equal(99);\n  });","file":"browser/src/testRunner.js","skipped":false,"dir":"test"},{"name":"deep assignments are true with bool base","suites":["testRunner"],"updatePoint":{"line":69,"column":46,"index":1726},"line":69,"code":"  it('deep assignments are true with bool base', function () {\n    expect(Modernizr.fakebooldeep instanceof Boolean).to.be.equal(true);\n    expect(Modernizr.fakebooldeep.detect).to.be.equal(false);\n  });","file":"browser/src/testRunner.js","skipped":false,"dir":"test"},{"name":"is an array","suites":["tests"],"updatePoint":{"line":18,"column":17,"index":415},"line":18,"code":"  it('is an array', function () {\n    expect(tests).to.be.an('array');\n  });","file":"browser/src/tests.js","skipped":false,"dir":"test"},{"name":"creates a reference on `ModernizrProto`","suites":["testStyles"],"updatePoint":{"line":23,"column":45,"index":734},"line":23,"code":"  it('creates a reference on `ModernizrProto`', function () {\n    expect(ModernizrProto.testStyles).to.be.a('function');\n  });","file":"browser/src/testStyles.js","skipped":false,"dir":"test"},{"name":"is just an alias to injectElementWithStyles","suites":["testStyles"],"updatePoint":{"line":26,"column":49,"index":865},"line":26,"code":"  it('is just an alias to injectElementWithStyles', function () {\n    expect(ModernizrProto.testStyles).to.be.equal(injectElementWithStyles);\n  });","file":"browser/src/testStyles.js","skipped":false,"dir":"test"},{"name":"returns false when XHR is undefined","suites":["testXhrType"],"updatePoint":{"line":17,"column":41,"index":400},"line":17,"code":"  it('returns false when XHR is undefined', function (done) {\n    var originalXhr = XMLHttpRequest;\n    XMLHttpRequest = undefined; //eslint-disable-line\n\n    req(['testXhrType'], function (testXhrType) {\n      expect(testXhrType('json')).to.be.equal(false);\n      XMLHttpRequest = originalXhr; //eslint-disable-line\n      done();\n    });\n  });","file":"browser/src/testXhrType.js","skipped":false,"dir":"test"},{"name":"is an function","suites":["toStringFn"],"updatePoint":{"line":18,"column":20,"index":448},"line":18,"code":"  it('is an function', function () {\n    expect(toStringFn).to.be.an('function');\n  });","file":"browser/src/toStringFn.js","skipped":false,"dir":"test"},{"name":"toStrings stuff","suites":["toStringFn"],"updatePoint":{"line":21,"column":21,"index":537},"line":21,"code":"  it('toStrings stuff', function () {\n    expect(toStringFn.call([])).to.be.equal('[object Array]');\n    expect(toStringFn.call({})).to.be.equal('[object Object]');\n    expect(toStringFn.call(true)).to.be.equal('[object Boolean]');\n    expect(toStringFn.call(new Date())).to.be.equal('[object Date]');\n  });","file":"browser/src/toStringFn.js","skipped":false,"dir":"test"},{"name":"is still able to set classNames correctly","suites":["svg context unit tests"],"updatePoint":{"line":59,"column":49,"index":1828},"line":59,"code":"    it('is still able to set classNames correctly', function (done) {\n      req(['setClasses'], function (setClasses) {\n        try {\n          var testInstance = setup({\n            stringified: setClasses.toString(),\n            setup: {\n              Modernizr: {\n                _config: {\n                  enableClasses: true\n                }\n              },\n              docElement: svgContext.document.documentElement,\n              isSVG: true\n            }\n          });\n          svgContext.test(function () {\n            setClasses(['svgdetect']);\n          });\n          expect(svgContext.document.documentElement.className.baseVal).to.contain('svgdetect');\n          testInstance.cleanup();\n          done();\n        } catch (e) {\n          done(e);\n        }\n      });\n    });","file":"browser/svgUnit.js","skipped":false,"dir":"test"},{"name":"uses the correct namespace when creating elements","suites":["svg context unit tests"],"updatePoint":{"line":85,"column":57,"index":2631},"line":85,"code":"    it('uses the correct namespace when creating elements', function (done) {\n      req(['createElement'], function (createElement) {\n        try {\n          var testInstance = setup({\n            stringified: createElement.toString(),\n            setup: {\n              isSVG: true\n            }\n          });\n          svgContext.test(function () {\n            window._testElem = createElement('a');\n          });\n          expect(svgContext._testElem.namespaceURI).to.be.equal('http://www.w3.org/2000/svg');\n          testInstance.cleanup();\n          done();\n        } catch (e) {\n          done(e);\n        }\n      });\n    });","file":"browser/svgUnit.js","skipped":false,"dir":"test"},{"name":"uses a SVG element for when making a fake body","suites":["svg context unit tests"],"updatePoint":{"line":105,"column":54,"index":3260},"line":105,"code":"    it('uses a SVG element for when making a fake body', function (done) {\n      req(['getBody'], function (getBody) {\n        try {\n          var testInstance = setup({\n            stringified: getBody.toString(),\n            setup: {\n              isSVG: true,\n              createElement: function () {\n                return svgContext.document.createElement.apply(svgContext.document, arguments);\n              }\n            }\n          });\n          svgContext.test(function () {\n            window._body = getBody();\n          });\n          expect(svgContext._body.nodeName.toLowerCase()).to.be.equal('svg');\n          testInstance.cleanup();\n          done();\n        } catch (e) {\n          done(e);\n        }\n      });\n    });","file":"browser/svgUnit.js","skipped":false,"dir":"test"},{"name":"should build without error","suites":["cli/build"],"updatePoint":{"line":6,"column":32,"index":235},"line":6,"code":"  it('should build without error', function () {\n    expect(function () {\n      build();\n    }).to.not.throw();\n  });","file":"node/lib/build.js","skipped":false,"dir":"test"},{"name":"should build without errors when using a custom build","suites":["cli/build","custom builds"],"updatePoint":{"line":12,"column":61,"index":428},"line":12,"code":"    it('should build without errors when using a custom build', function () {\n      expect(function () {\n        build({\n          'feature-detects': ['css/boxsizing']\n        }, done);\n      }).to.not.throw();\n    });","file":"node/lib/build.js","skipped":false,"dir":"test"},{"name":"should include the requested options","suites":["cli/build","custom builds"],"updatePoint":{"line":19,"column":44,"index":630},"line":19,"code":"    it('should include the requested options', function (done) {\n      build({\n        'feature-detects': ['css/boxsizing']\n      }, function (file) {\n        expect(file).to.contain('boxsizing');\n        done();\n      });\n    });","file":"node/lib/build.js","skipped":false,"dir":"test"},{"name":"should exclude options that are not requested","suites":["cli/build","custom builds"],"updatePoint":{"line":27,"column":53,"index":870},"line":27,"code":"    it('should exclude options that are not requested', function (done) {\n      build({\n        'feature-detects': ['dom/classlist']\n      }, function (file) {\n        expect(file).to.contain('classlist');\n        expect(file).to.not.contain('boxsizing');\n        done();\n      });\n    });","file":"node/lib/build.js","skipped":false,"dir":"test"},{"name":"should strip out DOC comments when `uglify`ing","suites":["cli/build","custom builds"],"updatePoint":{"line":36,"column":54,"index":1161},"line":36,"code":"    it('should strip out DOC comments when `uglify`ing', function (done) {\n      var config = {\n        minify: true,\n        'feature-detects': ['css/boxsizing']\n      };\n      build(config, function (file) {\n        expect(file).to.not.contain('Box Sizing');\n        done();\n      });\n    });","file":"node/lib/build.js","skipped":false,"dir":"test"},{"name":"should inject the proper classPath when configured","suites":["cli/build","custom builds"],"updatePoint":{"line":46,"column":58,"index":1460},"line":46,"code":"    it('should inject the proper classPath when configured', function (done) {\n      var prefix = 'TEST_PREFIX';\n      var config = {\n        classPrefix: prefix,\n        setClasses: true\n      };\n      var configRE = /_config:\\s*?({[^}]*})/m;\n      build(config, function (file) {\n        var parsedConfig = file.match(configRE);\n        parsedConfig = JSON.parse(parsedConfig[1].replace(/'/g, '\"'));\n        expect(parsedConfig.classPrefix).to.be.equal(prefix);\n        done();\n      });\n    });","file":"node/lib/build.js","skipped":false,"dir":"test"},{"name":"should inject the proper classPath when configured and minified","suites":["cli/build","custom builds"],"updatePoint":{"line":60,"column":71,"index":1971},"line":60,"code":"    it('should inject the proper classPath when configured and minified', function (done) {\n      var prefix = 'TEST_PREFIX';\n      var config = {\n        classPrefix: prefix,\n        setClasses: true,\n        minify: true\n      };\n      var configRE = /_config:\\s*?({[^}]*})/m;\n      build(config, function (file) {\n        var parsedConfig = file.match(configRE);\n        //use eval because the minified code creates non valid JSON.\n        // eslint-disable-next-line\n        parsedConfig = eval('(' + parsedConfig[1].replace(/'/g, '\"') + ')');\n        expect(parsedConfig.classPrefix).to.be.equal(prefix);\n        done();\n      });\n    });","file":"node/lib/build.js","skipped":false,"dir":"test"},{"name":"strips out the modernizr-init/build `define` section","suites":["cli/build","custom builds","unminified"],"updatePoint":{"line":88,"column":62,"index":2882},"line":88,"code":"      it('strips out the modernizr-init/build `define` section', function () {\n        var defineRe = /define\\(\"modernizr-(init|build)\"\\)/m;\n        expect(defineRe.test(output)).to.be.equal(false);\n      });","file":"node/lib/build.js","skipped":false,"dir":"test"},{"name":"strips out the `define` section","suites":["cli/build","custom builds","unminified"],"updatePoint":{"line":92,"column":41,"index":3070},"line":92,"code":"      it('strips out the `define` section', function () {\n        var docRe = /define\\(.*?\\{/;\n        expect(docRe.test(output)).to.be.equal(false);\n      });","file":"node/lib/build.js","skipped":false,"dir":"test"},{"name":"strips out the `require` section","suites":["cli/build","custom builds","unminified"],"updatePoint":{"line":96,"column":42,"index":3231},"line":96,"code":"      it('strips out the `require` section', function () {\n        var requireRe = /require[^\\{\\r\\n]+\\{/;\n        expect(requireRe.test(output)).to.be.equal(false);\n      });","file":"node/lib/build.js","skipped":false,"dir":"test"},{"name":"replaces __VERSION__ ","suites":["cli/build","custom builds","unminified"],"updatePoint":{"line":100,"column":31,"index":3395},"line":100,"code":"      it('replaces __VERSION__ ', function () {\n        expect(output).to.not.contain('__VERSION__');\n      });","file":"node/lib/build.js","skipped":false,"dir":"test"},{"name":"should inject modernizr onto window by default","suites":["cli/build","custom builds","scriptGlobalName"],"updatePoint":{"line":105,"column":56,"index":3587},"line":105,"code":"      it('should inject modernizr onto window by default', function (done) {\n        var config = {\n          'feature-detects': ['css/boxsizing']\n        };\n        build(config, function (file) {\n          expect(file).to.contain('})(window, window, document);');\n          done();\n        });\n      });","file":"node/lib/build.js","skipped":false,"dir":"test"},{"name":"should inject modernizr onto custom window global when specified","suites":["cli/build","custom builds","scriptGlobalName"],"updatePoint":{"line":114,"column":74,"index":3911},"line":114,"code":"      it('should inject modernizr onto custom window global when specified', function (done) {\n        var config = {\n          'scriptGlobalName': 'window.awesomeco',\n          'feature-detects': ['css/boxsizing']\n        };\n        build(config, function (file) {\n          expect(file).to.contain('})(window.awesomeco, window, document);');\n          done();\n        });\n      });","file":"node/lib/build.js","skipped":false,"dir":"test"},{"name":"strips out the modernizr-init/build `define` section","suites":["cli/build","custom builds","minified"],"updatePoint":{"line":137,"column":62,"index":4589},"line":137,"code":"      it('strips out the modernizr-init/build `define` section', function () {\n        var defineRe = /define\\(\"modernizr-(init|build)\"\\)/m;\n        expect(defineRe.test(output)).to.be.equal(false);\n      });","file":"node/lib/build.js","skipped":false,"dir":"test"},{"name":"strips out the `define` section","suites":["cli/build","custom builds","minified"],"updatePoint":{"line":141,"column":41,"index":4777},"line":141,"code":"      it('strips out the `define` section', function () {\n        var docRe = /define\\(.*?\\{/;\n        expect(docRe.test(output)).to.be.equal(false);\n      });","file":"node/lib/build.js","skipped":false,"dir":"test"},{"name":"strips out the `require` section","suites":["cli/build","custom builds","minified"],"updatePoint":{"line":145,"column":42,"index":4938},"line":145,"code":"      it('strips out the `require` section', function () {\n        var requireRe = /require[^\\{\\r\\n]+\\{/;\n        expect(requireRe.test(output)).to.be.equal(false);\n      });","file":"node/lib/build.js","skipped":false,"dir":"test"},{"name":"replaces __VERSION__ ","suites":["cli/build","custom builds","minified"],"updatePoint":{"line":149,"column":31,"index":5102},"line":149,"code":"      it('replaces __VERSION__ ', function () {\n        expect(output).to.not.contain('__VERSION__');\n      });","file":"node/lib/build.js","skipped":false,"dir":"test"},{"name":"exposes a build function","suites":["cli"],"updatePoint":{"line":7,"column":30,"index":264},"line":7,"code":"  it('exposes a build function', function () {\n    expect(Modernizr.build).to.be.a('function');\n  });","file":"node/lib/cli.js","skipped":false,"dir":"test"},{"name":"exposes a metadata function","suites":["cli"],"updatePoint":{"line":10,"column":33,"index":369},"line":10,"code":"  it('exposes a metadata function', function () {\n    expect(Modernizr.metadata).to.be.a('function');\n  });","file":"node/lib/cli.js","skipped":false,"dir":"test"},{"name":"does not throw when being executed","suites":["cli"],"updatePoint":{"line":13,"column":40,"index":484},"line":13,"code":"  it('does not throw when being executed', function (done) {\n    cp.exec('node ' + root + '/bin/modernizr -f adownload -d tmp/modernizr-test.js', done);\n  });","file":"node/lib/cli.js","skipped":false,"dir":"test"},{"name":"does not throw when setClasses is used as an option","suites":["cli"],"updatePoint":{"line":16,"column":57,"index":660},"line":16,"code":"  it('does not throw when setClasses is used as an option', function (done) {\n    cp.exec('node ' + root + '/bin/modernizr -o setClasses -d tmp/modernizr-test.js', done);\n  });","file":"node/lib/cli.js","skipped":false,"dir":"test"},{"name":"should ignore .DS_STORE files","suites":["cli/metadata"],"updatePoint":{"line":8,"column":35,"index":331},"line":8,"code":"  it('should ignore .DS_STORE files', function (done) {\n    var metadata = proxyquire(root + 'lib/metadata', {\n      'file': {\n        'walkSync': function (dir, cb) {\n          cb('/', [], ['.DS_Store']);\n        }\n      }\n    });\n    metadata(function (data) {\n      expect(data).to.be.an('array');\n      expect(data).to.have.length(0);\n      done();\n    });\n  });","file":"node/lib/metadata.js","skipped":false,"dir":"test"},{"name":"should throw on malformed metadata","suites":["cli/metadata"],"updatePoint":{"line":22,"column":40,"index":703},"line":22,"code":"  it('should throw on malformed metadata', function () {\n    var metadata = proxyquire(root + 'lib/metadata', {\n      'fs': {\n        'readFileSync': function () {\n          return '/*! { !*/';\n        }\n      }\n    });\n    expect(metadata).to.throw(/Error Parsing Metadata/);\n  });","file":"node/lib/metadata.js","skipped":false,"dir":"test"},{"name":"should not throw when metadata is missing","suites":["cli/metadata"],"updatePoint":{"line":32,"column":47,"index":993},"line":32,"code":"  it('should not throw when metadata is missing', function () {\n    var metadata = proxyquire(root + 'lib/metadata', {\n      'fs': {\n        'readFileSync': function () {\n          return 'sup dude';\n        }\n      }\n    });\n    expect(metadata).to.not.throw(/Error Parsing Metadata/);\n  });","file":"node/lib/metadata.js","skipped":false,"dir":"test"},{"name":"should throw on malformed deps","suites":["cli/metadata"],"updatePoint":{"line":42,"column":36,"index":1275},"line":42,"code":"  it('should throw on malformed deps', function () {\n    var metadata = proxyquire(root + 'lib/metadata', {\n      'fs': {\n        'readFileSync': function () {\n          return 'define([[],';\n        }\n      }\n    });\n    expect(metadata).to.throw(/Couldn't parse dependencies/);\n  });","file":"node/lib/metadata.js","skipped":false,"dir":"test"},{"name":"should throw if we can't find the define","suites":["cli/metadata"],"updatePoint":{"line":52,"column":47,"index":1572},"line":52,"code":"  it('should throw if we can\\'t find the define', function () {\n    var metadata = proxyquire(root + 'lib/metadata', {\n      'fs': {\n        'readFileSync': function () {\n          return 'define_([]),';\n        }\n      }\n    });\n    expect(metadata).to.throw(/Couldn't find the define/);\n  });","file":"node/lib/metadata.js","skipped":false,"dir":"test"},{"name":"should throw if no name is defined","suites":["cli/metadata"],"updatePoint":{"line":62,"column":40,"index":1860},"line":62,"code":"  it('should throw if no name is defined', function () {\n    var metadata = proxyquire(root + 'lib/metadata', {\n      'fs': {\n        'readFileSync': function () {\n          return '/*! { \"property\": \"fake\"}!*/ define([],';\n        }\n      }\n    });\n    expect(metadata).to.throw(/Minimal metadata not found/);\n  });","file":"node/lib/metadata.js","skipped":false,"dir":"test"},{"name":"should throw if no property is defined","suites":["cli/metadata"],"updatePoint":{"line":72,"column":44,"index":2181},"line":72,"code":"  it('should throw if no property is defined', function () {\n    var metadata = proxyquire(root + 'lib/metadata', {\n      'fs': {\n        'readFileSync': function () {\n          return '/*! { \"name\": \"fake\"}!*/ define([],';\n        }\n      }\n    });\n    expect(metadata).to.throw(/Minimal metadata not found/);\n  });","file":"node/lib/metadata.js","skipped":false,"dir":"test"},{"name":"should throw if property contains uppercase characters and/or special symbols except dashes","suites":["cli/metadata"],"updatePoint":{"line":82,"column":97,"index":2551},"line":82,"code":"  it('should throw if property contains uppercase characters and/or special symbols except dashes', function () {\n    var metadata = proxyquire(root + 'lib/metadata', {\n      'fs': {\n        'readFileSync': function () {\n          return '/*! { \"name\": \"fake\", \"property\": \"U_pper-case123\"}!*/ define([],';\n        }\n      }\n    });\n    expect(metadata).to.throw(/Property can only have lowercase alphanumeric characters and dashes/);\n  });","file":"node/lib/metadata.js","skipped":false,"dir":"test"},{"name":"should throw if polyfill is incorrectly configured","suites":["cli/metadata"],"updatePoint":{"line":92,"column":56,"index":2951},"line":92,"code":"  it('should throw if polyfill is incorrectly configured', function () {\n    var metadata = proxyquire(root + 'lib/metadata', {\n      'fs': {\n        'readFileSync': function () {\n          return '/*! { \"name\": \"fake\", \"property\": \"fake\", \"polyfills\": [\"fake\"]}!*/ define([],';\n        }\n      }\n    });\n    expect(metadata).to.throw(/Polyfill not found/);\n  });","file":"node/lib/metadata.js","skipped":false,"dir":"test"},{"name":"should return null if cssclass is incorrectly configured","suites":["cli/metadata"],"updatePoint":{"line":102,"column":62,"index":3321},"line":102,"code":"  it('should return null if cssclass is incorrectly configured', function () {\n    var metadata = proxyquire(root + 'lib/metadata', {\n      'fs': {\n        'readFileSync': function () {\n          return '/*! { \"name\": \"fake\", \"property\": \"fake\", \"cssclass\": \"realFake\"}!*/ define([],';\n        }\n      }\n    });\n    var firstResult = metadata()[0];\n    expect(firstResult.cssclass).to.be.equal(null);\n  });","file":"node/lib/metadata.js","skipped":false,"dir":"test"},{"name":"should rename `docs` to `doc` when found","suites":["cli/metadata"],"updatePoint":{"line":113,"column":46,"index":3712},"line":113,"code":"  it('should rename `docs` to `doc` when found', function () {\n    var metadata = proxyquire(root + 'lib/metadata', {\n      'fs': {\n        'readFileSync': function () {\n          return '/*! { \"name\": \"fake\", \"property\": \"fake\", \"docs\": \"originally docs\" }!*/ define([],';\n        }\n      }\n    });\n    var firstResult = metadata()[0];\n    expect(firstResult.docs).to.be.equal(undefined);\n    expect(firstResult.doc).to.match(/originally docs/);\n  });","file":"node/lib/metadata.js","skipped":false,"dir":"test"},{"name":"returns a json blob when invoked without callback","suites":["cli/metadata"],"updatePoint":{"line":125,"column":55,"index":4174},"line":125,"code":"  it('returns a json blob when invoked without callback', function () {\n    expect(metadata()).to.be.an('array');\n  });","file":"node/lib/metadata.js","skipped":false,"dir":"test"},{"name":"return nothing when given a callback","suites":["cli/metadata"],"updatePoint":{"line":128,"column":42,"index":4281},"line":128,"code":"  it('return nothing when given a callback', function () {\n    expect(metadata(function noop() {})).to.be.equal(undefined);\n  });","file":"node/lib/metadata.js","skipped":false,"dir":"test"},{"name":"pass the json blob when given a callback","suites":["cli/metadata"],"updatePoint":{"line":131,"column":46,"index":4415},"line":131,"code":"  it('pass the json blob when given a callback', function (done) {\n    metadata(function (data) {\n      expect(data).to.be.an('array');\n      done();\n    });\n  });","file":"node/lib/metadata.js","skipped":false,"dir":"test"},{"name":"should return an array of objects in a callback","suites":["cli/options"],"updatePoint":{"line":12,"column":53,"index":414},"line":12,"code":"  it('should return an array of objects in a callback', function (done) {\n    options(function (opts) {\n      var err = schema.validate(opts).error;\n      expect(err).to.be.equal(undefined);\n      done(err);\n    });\n  });","file":"node/lib/options.js","skipped":false,"dir":"test"},{"name":"should return the array of objects immediately after the first run","suites":["cli/options"],"updatePoint":{"line":19,"column":72,"index":655},"line":19,"code":"  it('should return the array of objects immediately after the first run', function () {\n    var err = schema.validate(options()).error;\n    expect(err).to.be.equal(undefined);\n  });","file":"node/lib/options.js","skipped":false,"dir":"test"},{"name":"should return all jsdoc info when the second arg is true","suites":["cli/options"],"updatePoint":{"line":23,"column":62,"index":828},"line":23,"code":"  it('should return all jsdoc info when the second arg is true', function () {\n    expect(options(null, true) !== options(null)).to.be.equal(true);\n    expect(options(null, true)[0].description).to.not.be.equal(undefined);\n  });","file":"node/lib/options.js","skipped":false,"dir":"test"},{"name":"builds a query from a feature-detect","suites":["build-query"],"updatePoint":{"line":36,"column":42,"index":1060},"line":36,"code":"  it('builds a query from a feature-detect', function () {\n    var query = buildQuery({\n      'feature-detects': ['css/boxsizing']\n    });\n    expect(query).to.be.equal('?-boxsizing-dontmin');\n  });","file":"universal/lib/build-query.js","skipped":false,"dir":"test"},{"name":"properly formats detects with multiple properties","suites":["build-query"],"updatePoint":{"line":42,"column":55,"index":1272},"line":42,"code":"  it('properly formats detects with multiple properties', function () {\n    var query = buildQuery({\n      'feature-detects': ['dom/createElement-attrs']\n    });\n    expect(query).to.be.equal('?-createelementattrs_createelement_attrs-dontmin');\n  });","file":"universal/lib/build-query.js","skipped":false,"dir":"test"},{"name":"adds options to the query","suites":["build-query"],"updatePoint":{"line":48,"column":31,"index":1499},"line":48,"code":"  it('adds options to the query', function () {\n    var query = buildQuery({\n      options: ['mq']\n    });\n    expect(query).to.be.equal('?-mq-dontmin');\n  });","file":"universal/lib/build-query.js","skipped":false,"dir":"test"},{"name":"adds classPrefix when setClasses is true as well","suites":["build-query"],"updatePoint":{"line":54,"column":54,"index":1682},"line":54,"code":"  it('adds classPrefix when setClasses is true as well', function () {\n    var query = buildQuery({\n      classPrefix: 'TEST_PREFIX',\n      options: ['setClasses']\n    });\n    expect(query).to.be.equal('?-setclasses-dontmin-cssclassprefix:TEST_PREFIX');\n  });","file":"universal/lib/build-query.js","skipped":false,"dir":"test"},{"name":"strips `html5` from the shiv options","suites":["build-query"],"updatePoint":{"line":61,"column":42,"index":1930},"line":61,"code":"  it('strips `html5` from the shiv options', function () {\n    var query = buildQuery({\n      options: ['html5shiv']\n    });\n    expect(query).to.be.equal('?-shiv-dontmin');\n  });","file":"universal/lib/build-query.js","skipped":false,"dir":"test"},{"name":"removes the dontmin option when minify is true","suites":["build-query"],"updatePoint":{"line":67,"column":52,"index":2120},"line":67,"code":"  it('removes the dontmin option when minify is true', function () {\n    var query = buildQuery({\n      minify: true\n    });\n    expect(query).to.be.equal('?-');\n  });","file":"universal/lib/build-query.js","skipped":false,"dir":"test"},{"name":"removes custom tests from the build query","suites":["build-query"],"updatePoint":{"line":73,"column":47,"index":2283},"line":73,"code":"  it('removes custom tests from the build query', function () {\n    var query = buildQuery({\n      'feature-detects': ['css/boxsizing', 'custom/test/path']\n    });\n    expect(query).to.be.equal('?-boxsizing-dontmin');\n  });","file":"universal/lib/build-query.js","skipped":false,"dir":"test"},{"name":"should produce a compact banner when requested","suites":["generate-banner"],"updatePoint":{"line":57,"column":52,"index":1532},"line":57,"code":"  it('should produce a compact banner when requested', function () {\n    var banner = generateBanner('compact');\n    var test = '/*! ' + pkg.name + ' ' + pkg.version + ' (Custom Build) | ' + pkg.license + ' *';\n    expect(banner).to.contain(test);\n  });","file":"universal/lib/generate-banner.js","skipped":false,"dir":"test"},{"name":"should produce a full banner when requested","suites":["generate-banner"],"updatePoint":{"line":62,"column":49,"index":1783},"line":62,"code":"  it('should produce a full banner when requested', function () {\n    var banner = generateBanner('full');\n    var test = 'Modernizr tests which native CSS3 and HTML5 features are available';\n    expect(banner).to.contain(test);\n  });","file":"universal/lib/generate-banner.js","skipped":false,"dir":"test"},{"name":"should include a build url","suites":["generate-banner"],"updatePoint":{"line":67,"column":32,"index":2001},"line":67,"code":"  it('should include a build url', function () {\n    var banner = generateBanner();\n    var test = ' * https://' + domain + '/download/?--dontmin';\n    expect(banner).to.contain(test);\n  });","file":"universal/lib/generate-banner.js","skipped":false,"dir":"test"},{"name":"should only accept \"full\" and \"compact\" as type arguments","suites":["generate-banner"],"updatePoint":{"line":72,"column":63,"index":2223},"line":72,"code":"  it('should only accept \"full\" and \"compact\" as type arguments', function () {\n    expect(function () {\n      generateBanner('sup');\n    }).to.throw('banners() must be passed \"compact\" or \"full\" as an argument.');\n  });","file":"universal/lib/generate-banner.js","skipped":false,"dir":"test"}]}