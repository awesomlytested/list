{
    "repo": "feathericons/feather",
    "url": "https://github.com/feathericons/feather",
    "branch": "master",
    "configs": [
        {
            "package": "feather-icons",
            "lang": "js",
            "dir": "src/__tests__",
            "framework": "jest",
            "pattern": "**/*[._-]{test,spec,unittest,unit}.{ts,js}"
        }
    ],
    "tests": [
        {
            "name": "constructs icon object correctly",
            "suites": [],
            "updatePoint": {
                "line": 5,
                "column": 38
            },
            "line": 5,
            "code": "test('constructs icon object correctly', () => {\n  expect(icon1).toMatchSnapshot();\n  expect(icon2).toMatchSnapshot();\n});",
            "file": "icon.test.js",
            "skipped": false,
            "dir": "src/__tests__"
        },
        {
            "name": "toSvg() returns correct string",
            "suites": [],
            "updatePoint": {
                "line": 9,
                "column": 36
            },
            "line": 9,
            "code": "test('toSvg() returns correct string', () => {\n  expect(icon1.toSvg()).toMatchSnapshot();\n  expect(icon1.toSvg({\n    'stroke-width': 1,\n    color: 'red'\n  })).toMatchSnapshot();\n  expect(icon1.toSvg({\n    class: 'foo bar',\n    color: 'red'\n  })).toMatchSnapshot();\n});",
            "file": "icon.test.js",
            "skipped": false,
            "dir": "src/__tests__"
        },
        {
            "name": "toString() returns correct string",
            "suites": [],
            "updatePoint": {
                "line": 20,
                "column": 39
            },
            "line": 20,
            "code": "test('toString() returns correct string', () => {\n  expect(icon1.toString()).toMatchSnapshot();\n});",
            "file": "icon.test.js",
            "skipped": false,
            "dir": "src/__tests__"
        },
        {
            "name": "exports correct object",
            "suites": [],
            "updatePoint": {
                "line": 10,
                "column": 28
            },
            "line": 10,
            "code": "test('exports correct object', () => {\n  expect(icons).toMatchSnapshot();\n});",
            "file": "icons.test.js",
            "skipped": false,
            "dir": "src/__tests__"
        },
        {
            "name": "has correct properties",
            "suites": [],
            "updatePoint": {
                "line": 3,
                "column": 28
            },
            "line": 3,
            "code": "test('has correct properties', () => {\n  expect(feather).toHaveProperty('icons');\n  expect(feather).toHaveProperty('toSvg');\n  expect(feather).toHaveProperty('replace');\n});",
            "file": "index.test.js",
            "skipped": false,
            "dir": "src/__tests__"
        },
        {
            "name": "throws an error when run in node environment",
            "suites": [],
            "updatePoint": {
                "line": 7,
                "column": 50
            },
            "line": 7,
            "code": "test('throws an error when run in node environment', () => {\n  expect(replace).toThrowErrorMatchingSnapshot();\n});",
            "file": "replace.node.test.js",
            "skipped": false,
            "dir": "src/__tests__"
        },
        {
            "name": "replaces [data-feather] elements with SVG markup",
            "suites": [],
            "updatePoint": {
                "line": 7,
                "column": 54
            },
            "line": 7,
            "code": "test('replaces [data-feather] elements with SVG markup', () => {\n  document.body.innerHTML = '<i data-feather=\"icon1\"></i><span data-feather=\"icon2\"></i>';\n  expect(document.body.innerHTML).toMatchSnapshot();\n  replace();\n  expect(document.body.innerHTML).toMatchSnapshot();\n});",
            "file": "replace.test.js",
            "skipped": false,
            "dir": "src/__tests__"
        },
        {
            "name": "copies placeholder element attributes to <svg> tag",
            "suites": [],
            "updatePoint": {
                "line": 13,
                "column": 56
            },
            "line": 13,
            "code": "test('copies placeholder element attributes to <svg> tag', () => {\n  document.body.innerHTML = '<i data-feather=\"icon1\" id=\"test\" class=\"foo bar\" stroke-width=\"1\"></i>';\n  expect(document.body.innerHTML).toMatchSnapshot();\n  replace();\n  expect(document.body.innerHTML).toMatchSnapshot();\n});",
            "file": "replace.test.js",
            "skipped": false,
            "dir": "src/__tests__"
        },
        {
            "name": "sets attributes passed as parameters",
            "suites": [],
            "updatePoint": {
                "line": 19,
                "column": 42
            },
            "line": 19,
            "code": "test('sets attributes passed as parameters', () => {\n  document.body.innerHTML = '<i data-feather=\"icon1\" id=\"test\" class=\"foo bar\" stroke-width=\"1\"></i>';\n  expect(document.body.innerHTML).toMatchSnapshot();\n  replace({\n    class: 'foo bar hello',\n    'stroke-width': 1.5,\n    color: 'salmon'\n  });\n  expect(document.body.innerHTML).toMatchSnapshot();\n});",
            "file": "replace.test.js",
            "skipped": false,
            "dir": "src/__tests__"
        },
        {
            "name": "returns correct string",
            "suites": [],
            "updatePoint": {
                "line": 6,
                "column": 28
            },
            "line": 6,
            "code": "test('returns correct string', () => {\n  expect(toSvg('icon1')).toMatchSnapshot();\n  expect(toSvg('icon1', {\n    'stroke-width': 1,\n    color: 'red'\n  })).toMatchSnapshot();\n  expect(toSvg('icon1', {\n    class: 'foo bar',\n    color: 'red'\n  })).toMatchSnapshot();\n});",
            "file": "to-svg.test.js",
            "skipped": false,
            "dir": "src/__tests__"
        },
        {
            "name": "throws error when `name` parameter is undefined",
            "suites": [],
            "updatePoint": {
                "line": 17,
                "column": 53
            },
            "line": 17,
            "code": "test('throws error when `name` parameter is undefined', () => {\n  expect(() => toSvg()).toThrow();\n});",
            "file": "to-svg.test.js",
            "skipped": false,
            "dir": "src/__tests__"
        },
        {
            "name": "throws error when passed unknown icon name",
            "suites": [],
            "updatePoint": {
                "line": 20,
                "column": 48
            },
            "line": 20,
            "code": "test('throws error when passed unknown icon name', () => {\n  expect(() => toSvg('foo')).toThrow();\n});",
            "file": "to-svg.test.js",
            "skipped": false,
            "dir": "src/__tests__"
        }
    ],
    "badge": "feathericons__feather.svg"
}