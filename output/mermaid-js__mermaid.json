{"repo":"mermaid-js/mermaid","url":"https://github.com/mermaid-js/mermaid","branch":"develop","configs":[{"package":"mermaid","lang":"js","dir":"cypress","framework":"jest","pattern":"**/*[._-]{test,spec,unittest,unit}.{ts,js}"}],"tests":[{"name":".type() - type into a DOM element","suites":[],"updatePoint":{"line":7,"column":39,"index":241},"line":7,"code":"  it('.type() - type into a DOM element', () => {\n    // https://on.cypress.io/type\n    cy.get('.action-email').type('fake@email.com').should('have.value', 'fake@email.com') // .type() with special character sequences\n    .type('{leftarrow}{rightarrow}{uparrow}{downarrow}').type('{del}{selectall}{backspace}') // .type() with key modifiers\n    .type('{alt}{option}') //these are equivalent\n    .type('{ctrl}{control}') //these are equivalent\n    .type('{meta}{command}{cmd}') //these are equivalent\n    .type('{shift}') // Delay each keypress by 0.1 sec\n    .type('slow.typing@email.com', {\n      delay: 100\n    }).should('have.value', 'slow.typing@email.com');\n    cy.get('.action-disabled') // Ignore error checking prior to type\n    // like whether the input is visible or disabled\n    .type('disabled error checking', {\n      force: true\n    }).should('have.value', 'disabled error checking');\n  });","file":"examples/actions.spec.js","skipped":false,"dir":"cypress"},{"name":".focus() - focus on a DOM element","suites":[],"updatePoint":{"line":24,"column":39,"index":1146},"line":24,"code":"  it('.focus() - focus on a DOM element', () => {\n    // https://on.cypress.io/focus\n    cy.get('.action-focus').focus().should('have.class', 'focus').prev().should('have.attr', 'style', 'color: orange;');\n  });","file":"examples/actions.spec.js","skipped":false,"dir":"cypress"},{"name":".blur() - blur off a DOM element","suites":[],"updatePoint":{"line":28,"column":38,"index":1357},"line":28,"code":"  it('.blur() - blur off a DOM element', () => {\n    // https://on.cypress.io/blur\n    cy.get('.action-blur').type('About to blur').blur().should('have.class', 'error').prev().should('have.attr', 'style', 'color: red;');\n  });","file":"examples/actions.spec.js","skipped":false,"dir":"cypress"},{"name":".clear() - clears an input or textarea element","suites":[],"updatePoint":{"line":32,"column":52,"index":1598},"line":32,"code":"  it('.clear() - clears an input or textarea element', () => {\n    // https://on.cypress.io/clear\n    cy.get('.action-clear').type('Clear this text').should('have.value', 'Clear this text').clear().should('have.value', '');\n  });","file":"examples/actions.spec.js","skipped":false,"dir":"cypress"},{"name":".submit() - submit a form","suites":[],"updatePoint":{"line":36,"column":31,"index":1807},"line":36,"code":"  it('.submit() - submit a form', () => {\n    // https://on.cypress.io/submit\n    cy.get('.action-form').find('[type=\"text\"]').type('HALFOFF');\n    cy.get('.action-form').submit().next().should('contain', 'Your form has been submitted!');\n  });","file":"examples/actions.spec.js","skipped":false,"dir":"cypress"},{"name":".click() - click on a DOM element","suites":[],"updatePoint":{"line":41,"column":39,"index":2060},"line":41,"code":"  it('.click() - click on a DOM element', () => {\n    // https://on.cypress.io/click\n    cy.get('.action-btn').click(); // You can click on 9 specific positions of an element:\n    //  -----------------------------------\n    // | topLeft        top       topRight |\n    // |                                   |\n    // |                                   |\n    // |                                   |\n    // | left          center        right |\n    // |                                   |\n    // |                                   |\n    // |                                   |\n    // | bottomLeft   bottom   bottomRight |\n    //  -----------------------------------\n    // clicking in the center of the element is the default\n\n    cy.get('#action-canvas').click();\n    cy.get('#action-canvas').click('topLeft');\n    cy.get('#action-canvas').click('top');\n    cy.get('#action-canvas').click('topRight');\n    cy.get('#action-canvas').click('left');\n    cy.get('#action-canvas').click('right');\n    cy.get('#action-canvas').click('bottomLeft');\n    cy.get('#action-canvas').click('bottom');\n    cy.get('#action-canvas').click('bottomRight'); // .click() accepts an x and y coordinate\n    // that controls where the click occurs :)\n\n    cy.get('#action-canvas').click(80, 75) // click 80px on x coord and 75px on y coord\n    .click(170, 75).click(80, 165).click(100, 185).click(125, 190).click(150, 185).click(170, 165); // click multiple elements by passing multiple: true\n\n    cy.get('.action-labels>.label').click({\n      multiple: true\n    }); // Ignore error checking prior to clicking\n\n    cy.get('.action-opacity>.btn').click({\n      force: true\n    });\n  });","file":"examples/actions.spec.js","skipped":false,"dir":"cypress"},{"name":".dblclick() - double click on a DOM element","suites":[],"updatePoint":{"line":79,"column":49,"index":3736},"line":79,"code":"  it('.dblclick() - double click on a DOM element', () => {\n    // https://on.cypress.io/dblclick\n    // Our app has a listener on 'dblclick' event in our 'scripts.js'\n    // that hides the div and shows an input on double click\n    cy.get('.action-div').dblclick().should('not.be.visible');\n    cy.get('.action-input-hidden').should('be.visible');\n  });","file":"examples/actions.spec.js","skipped":false,"dir":"cypress"},{"name":".check() - check a checkbox or radio element","suites":[],"updatePoint":{"line":86,"column":50,"index":4092},"line":86,"code":"  it('.check() - check a checkbox or radio element', () => {\n    // https://on.cypress.io/check\n    // By default, .check() will check all\n    // matching checkbox or radio elements in succession, one after another\n    cy.get('.action-checkboxes [type=\"checkbox\"]').not('[disabled]').check().should('be.checked');\n    cy.get('.action-radios [type=\"radio\"]').not('[disabled]').check().should('be.checked'); // .check() accepts a value argument\n\n    cy.get('.action-radios [type=\"radio\"]').check('radio1').should('be.checked'); // .check() accepts an array of values\n\n    cy.get('.action-multiple-checkboxes [type=\"checkbox\"]').check(['checkbox1', 'checkbox2']).should('be.checked'); // Ignore error checking prior to checking\n\n    cy.get('.action-checkboxes [disabled]').check({\n      force: true\n    }).should('be.checked');\n    cy.get('.action-radios [type=\"radio\"]').check('radio3', {\n      force: true\n    }).should('be.checked');\n  });","file":"examples/actions.spec.js","skipped":false,"dir":"cypress"},{"name":".uncheck() - uncheck a checkbox element","suites":[],"updatePoint":{"line":104,"column":45,"index":5027},"line":104,"code":"  it('.uncheck() - uncheck a checkbox element', () => {\n    // https://on.cypress.io/uncheck\n    // By default, .uncheck() will uncheck all matching\n    // checkbox elements in succession, one after another\n    cy.get('.action-check [type=\"checkbox\"]').not('[disabled]').uncheck().should('not.be.checked'); // .uncheck() accepts a value argument\n\n    cy.get('.action-check [type=\"checkbox\"]').check('checkbox1').uncheck('checkbox1').should('not.be.checked'); // .uncheck() accepts an array of values\n\n    cy.get('.action-check [type=\"checkbox\"]').check(['checkbox1', 'checkbox3']).uncheck(['checkbox1', 'checkbox3']).should('not.be.checked'); // Ignore error checking prior to unchecking\n\n    cy.get('.action-check [disabled]').uncheck({\n      force: true\n    }).should('not.be.checked');\n  });","file":"examples/actions.spec.js","skipped":false,"dir":"cypress"},{"name":".select() - select an option in a <select> element","suites":[],"updatePoint":{"line":118,"column":56,"index":5833},"line":118,"code":"  it('.select() - select an option in a <select> element', () => {\n    // https://on.cypress.io/select\n    // Select option(s) with matching text content\n    cy.get('.action-select').select('apples');\n    cy.get('.action-select-multiple').select(['apples', 'oranges', 'bananas']); // Select option(s) with matching value\n\n    cy.get('.action-select').select('fr-bananas');\n    cy.get('.action-select-multiple').select(['fr-apples', 'fr-oranges', 'fr-bananas']);\n  });","file":"examples/actions.spec.js","skipped":false,"dir":"cypress"},{"name":".scrollIntoView() - scroll an element into view","suites":[],"updatePoint":{"line":127,"column":53,"index":6298},"line":127,"code":"  it('.scrollIntoView() - scroll an element into view', () => {\n    // https://on.cypress.io/scrollintoview\n    // normally all of these buttons are hidden,\n    // because they're not within\n    // the viewable area of their parent\n    // (we need to scroll to see them)\n    cy.get('#scroll-horizontal button').should('not.be.visible'); // scroll the button into view, as if the user had scrolled\n\n    cy.get('#scroll-horizontal button').scrollIntoView().should('be.visible');\n    cy.get('#scroll-vertical button').should('not.be.visible'); // Cypress handles the scroll direction needed\n\n    cy.get('#scroll-vertical button').scrollIntoView().should('be.visible');\n    cy.get('#scroll-both button').should('not.be.visible'); // Cypress knows to scroll to the right and down\n\n    cy.get('#scroll-both button').scrollIntoView().should('be.visible');\n  });","file":"examples/actions.spec.js","skipped":false,"dir":"cypress"},{"name":".trigger() - trigger an event on a DOM element","suites":[],"updatePoint":{"line":143,"column":52,"index":7152},"line":143,"code":"  it('.trigger() - trigger an event on a DOM element', () => {\n    // https://on.cypress.io/trigger\n    // To interact with a range input (slider)\n    // we need to set its value & trigger the\n    // event to signal it changed\n    // Here, we invoke jQuery's val() method to set\n    // the value and trigger the 'change' event\n    cy.get('.trigger-input-range').invoke('val', 25).trigger('change').get('input[type=range]').siblings('p').should('have.text', '25');\n  });","file":"examples/actions.spec.js","skipped":false,"dir":"cypress"},{"name":"cy.scrollTo() - scroll the window or element to a position","suites":[],"updatePoint":{"line":152,"column":64,"index":7634},"line":152,"code":"  it('cy.scrollTo() - scroll the window or element to a position', () => {\n    // https://on.cypress.io/scrollTo\n    // You can scroll to 9 specific positions of an element:\n    //  -----------------------------------\n    // | topLeft        top       topRight |\n    // |                                   |\n    // |                                   |\n    // |                                   |\n    // | left          center        right |\n    // |                                   |\n    // |                                   |\n    // |                                   |\n    // | bottomLeft   bottom   bottomRight |\n    //  -----------------------------------\n    // if you chain .scrollTo() off of cy, we will\n    // scroll the entire window\n    cy.scrollTo('bottom');\n    cy.get('#scrollable-horizontal').scrollTo('right'); // or you can scroll to a specific coordinate:\n    // (x axis, y axis) in pixels\n\n    cy.get('#scrollable-vertical').scrollTo(250, 250); // or you can scroll to a specific percentage\n    // of the (width, height) of the element\n\n    cy.get('#scrollable-both').scrollTo('75%', '25%'); // control the easing of the scroll (default is 'swing')\n\n    cy.get('#scrollable-vertical').scrollTo('center', {\n      easing: 'linear'\n    }); // control the duration of the scroll (in ms)\n\n    cy.get('#scrollable-both').scrollTo('center', {\n      duration: 2000\n    });\n  });","file":"examples/actions.spec.js","skipped":false,"dir":"cypress"},{"name":".as() - alias a DOM element for later use","suites":[],"updatePoint":{"line":6,"column":47,"index":199},"line":6,"code":"  it('.as() - alias a DOM element for later use', () => {\n    // https://on.cypress.io/as\n    // Alias a DOM element for use later\n    // We don't have to traverse to the element\n    // later in our code, we reference it with @\n    cy.get('.as-table').find('tbody>tr').first().find('td').first().find('button').as('firstBtn'); // when we reference the alias, we place an\n    // @ in front of its name\n\n    cy.get('@firstBtn').click();\n    cy.get('@firstBtn').should('have.class', 'btn-success').and('contain', 'Changed');\n  });","file":"examples/aliasing.spec.js","skipped":false,"dir":"cypress"},{"name":".as() - alias a route for later use","suites":[],"updatePoint":{"line":17,"column":41,"index":721},"line":17,"code":"  it('.as() - alias a route for later use', () => {\n    // Alias the route to wait for its response\n    cy.server();\n    cy.route('GET', 'comments/*').as('getComment'); // we have code that gets a comment when\n    // the button is clicked in scripts.js\n\n    cy.get('.network-btn').click(); // https://on.cypress.io/wait\n\n    cy.wait('@getComment').its('status').should('eq', 200);\n  });","file":"examples/aliasing.spec.js","skipped":false,"dir":"cypress"},{"name":".should() - make an assertion about the current subject","suites":["Implicit Assertions"],"updatePoint":{"line":7,"column":63,"index":261},"line":7,"code":"    it('.should() - make an assertion about the current subject', () => {\n      // https://on.cypress.io/should\n      cy.get('.assertion-table').find('tbody tr:last').should('have.class', 'success').find('td').first() // checking the text of the <td> element in various ways\n      .should('have.text', 'Column content').should('contain', 'Column content').should('have.html', 'Column content') // chai-jquery uses \"is()\" to check if element matches selector\n      .should('match', 'td') // to match text content against a regular expression\n      // first need to invoke jQuery method text()\n      // and then match using regular expression\n      .invoke('text').should('match', /column content/i); // a better way to check element's text content against a regular expression\n      // is to use \"cy.contains\"\n      // https://on.cypress.io/contains\n\n      cy.get('.assertion-table').find('tbody tr:last') // finds first <td> element with text content matching regular expression\n      .contains('td', /column content/i).should('be.visible'); // for more information about asserting element's text\n      // see https://on.cypress.io/using-cypress-faq#How-do-I-get-an-element’s-text-contents\n    });","file":"examples/assertions.spec.js","skipped":false,"dir":"cypress"},{"name":".and() - chain multiple assertions together","suites":["Implicit Assertions"],"updatePoint":{"line":22,"column":51,"index":1447},"line":22,"code":"    it('.and() - chain multiple assertions together', () => {\n      // https://on.cypress.io/and\n      cy.get('.assertions-link').should('have.class', 'active').and('have.attr', 'href').and('include', 'cypress.io');\n    });","file":"examples/assertions.spec.js","skipped":false,"dir":"cypress"},{"name":"expect - make an assertion about a specified subject","suites":["Explicit Assertions"],"updatePoint":{"line":29,"column":60,"index":1768},"line":29,"code":"    it('expect - make an assertion about a specified subject', () => {\n      // We can use Chai's BDD style assertions\n      expect(true).to.be.true;\n      const o = {\n        foo: 'bar'\n      };\n      expect(o).to.equal(o);\n      expect(o).to.deep.equal({\n        foo: 'bar'\n      }); // matching text using regular expression\n\n      expect('FooBar').to.match(/bar$/i);\n    });","file":"examples/assertions.spec.js","skipped":false,"dir":"cypress"},{"name":"pass your own callback function to should()","suites":["Explicit Assertions"],"updatePoint":{"line":42,"column":51,"index":2138},"line":42,"code":"    it('pass your own callback function to should()', () => {\n      // Pass a function to should that can have any number\n      // of explicit assertions within it.\n      // The \".should(cb)\" function will be retried\n      // automatically until it passes all your explicit assertions or times out.\n      cy.get('.assertions-p').find('p').should($p => {\n        // https://on.cypress.io/$\n        // return an array of texts from all of the p's\n        // @ts-ignore TS6133 unused variable\n        const texts = $p.map((i, el) => Cypress.$(el).text()); // jquery map returns jquery object\n        // and .get() convert this to simple array\n\n        const paragraphs = texts.get(); // array should have length of 3\n\n        expect(paragraphs, 'has 3 paragraphs').to.have.length(3); // use second argument to expect(...) to provide clear\n        // message with each assertion\n\n        expect(paragraphs, 'has expected text in each paragraph').to.deep.eq(['Some text from first p', 'More text from second p', 'And even more text from third p']);\n      });\n    });","file":"examples/assertions.spec.js","skipped":false,"dir":"cypress"},{"name":"finds element by class name regex","suites":["Explicit Assertions"],"updatePoint":{"line":62,"column":41,"index":3190},"line":62,"code":"    it('finds element by class name regex', () => {\n      cy.get('.docs-header').find('div') // .should(cb) callback function will be retried\n      .should($div => {\n        expect($div).to.have.length(1);\n        const className = $div[0].className;\n        expect(className).to.match(/heading-/);\n      }) // .then(cb) callback is not retried,\n      // it either passes or fails\n      .then($div => {\n        expect($div, 'text content').to.have.text('Introduction');\n      });\n    });","file":"examples/assertions.spec.js","skipped":false,"dir":"cypress"},{"name":"can throw any error","suites":["Explicit Assertions"],"updatePoint":{"line":74,"column":27,"index":3664},"line":74,"code":"    it('can throw any error', () => {\n      cy.get('.docs-header').find('div').should($div => {\n        if ($div.length !== 1) {\n          // you can throw your own errors\n          throw new Error('Did not find 1 element');\n        }\n\n        const className = $div[0].className;\n\n        if (!className.match(/heading-/)) {\n          throw new Error(`Could not find class \"heading-\" in ${className}`);\n        }\n      });\n    });","file":"examples/assertions.spec.js","skipped":false,"dir":"cypress"},{"name":"matches unknown text between two elements","suites":["Explicit Assertions"],"updatePoint":{"line":88,"column":49,"index":4118},"line":88,"code":"    it('matches unknown text between two elements', () => {\n      /**\n       * Text from the first element.\n       *\n       * @type {string}\n       */\n      let text;\n      /**\n       * Normalizes passed text, useful before comparing text with spaces and different capitalization.\n       *\n       * @param {string} s Text to normalize\n       */\n\n      const normalizeText = s => s.replace(/\\s/g, '').toLowerCase();\n\n      cy.get('.two-elements').find('.first').then($first => {\n        // save text from the first element\n        text = normalizeText($first.text());\n      });\n      cy.get('.two-elements').find('.second').should($div => {\n        // we can massage text before comparing\n        const secondText = normalizeText($div.text());\n        expect(secondText, 'second text').to.equal(text);\n      });\n    });","file":"examples/assertions.spec.js","skipped":false,"dir":"cypress"},{"name":"assert - assert shape of an object","suites":["Explicit Assertions"],"updatePoint":{"line":113,"column":42,"index":4930},"line":113,"code":"    it('assert - assert shape of an object', () => {\n      const person = {\n        name: 'Joe',\n        age: 20\n      };\n      assert.isObject(person, 'value is object');\n    });","file":"examples/assertions.spec.js","skipped":false,"dir":"cypress"},{"name":".each() - iterate over an array of elements","suites":[],"updatePoint":{"line":6,"column":49,"index":205},"line":6,"code":"  it('.each() - iterate over an array of elements', () => {\n    // https://on.cypress.io/each\n    cy.get('.connectors-each-ul>li').each(($el, index, $list) => {\n      console.log($el, index, $list);\n    });\n  });","file":"examples/connectors.spec.js","skipped":false,"dir":"cypress"},{"name":".its() - get properties on the current subject","suites":[],"updatePoint":{"line":12,"column":52,"index":421},"line":12,"code":"  it('.its() - get properties on the current subject', () => {\n    // https://on.cypress.io/its\n    cy.get('.connectors-its-ul>li') // calls the 'length' property yielding that value\n    .its('length').should('be.gt', 2);\n  });","file":"examples/connectors.spec.js","skipped":false,"dir":"cypress"},{"name":".invoke() - invoke a function on the current subject","suites":[],"updatePoint":{"line":17,"column":58,"index":655},"line":17,"code":"  it('.invoke() - invoke a function on the current subject', () => {\n    // our div is hidden in our script.js\n    // $('.connectors-div').hide()\n    // https://on.cypress.io/invoke\n    cy.get('.connectors-div').should('be.hidden') // call the jquery method 'show' on the 'div.container'\n    .invoke('show').should('be.visible');\n  });","file":"examples/connectors.spec.js","skipped":false,"dir":"cypress"},{"name":".spread() - spread an array as individual args to callback function","suites":[],"updatePoint":{"line":24,"column":73,"index":1006},"line":24,"code":"  it('.spread() - spread an array as individual args to callback function', () => {\n    // https://on.cypress.io/spread\n    const arr = ['foo', 'bar', 'baz'];\n    cy.wrap(arr).spread((foo, bar, baz) => {\n      expect(foo).to.eq('foo');\n      expect(bar).to.eq('bar');\n      expect(baz).to.eq('baz');\n    });\n  });","file":"examples/connectors.spec.js","skipped":false,"dir":"cypress"},{"name":".then() - invoke a callback function with the current subject","suites":[],"updatePoint":{"line":33,"column":67,"index":1314},"line":33,"code":"  it('.then() - invoke a callback function with the current subject', () => {\n    // https://on.cypress.io/then\n    cy.get('.connectors-list > li').then($lis => {\n      expect($lis, '3 items').to.have.length(3);\n      expect($lis.eq(0), 'first item').to.contain('Walk the dog');\n      expect($lis.eq(1), 'second item').to.contain('Feed the cat');\n      expect($lis.eq(2), 'third item').to.contain('Write JavaScript');\n    });\n  });","file":"examples/connectors.spec.js","skipped":false,"dir":"cypress"},{"name":"cy.getCookie() - get a browser cookie","suites":[],"updatePoint":{"line":10,"column":43,"index":356},"line":10,"code":"  it('cy.getCookie() - get a browser cookie', () => {\n    // https://on.cypress.io/getcookie\n    cy.get('#getCookie .set-a-cookie').click(); // cy.getCookie() yields a cookie object\n\n    cy.getCookie('token').should('have.property', 'value', '123ABC');\n  });","file":"examples/cookies.spec.js","skipped":false,"dir":"cypress"},{"name":"cy.getCookies() - get browser cookies","suites":[],"updatePoint":{"line":16,"column":43,"index":615},"line":16,"code":"  it('cy.getCookies() - get browser cookies', () => {\n    // https://on.cypress.io/getcookies\n    cy.getCookies().should('be.empty');\n    cy.get('#getCookies .set-a-cookie').click(); // cy.getCookies() yields an array of cookies\n\n    cy.getCookies().should('have.length', 1).should(cookies => {\n      // each cookie has these properties\n      expect(cookies[0]).to.have.property('name', 'token');\n      expect(cookies[0]).to.have.property('value', '123ABC');\n      expect(cookies[0]).to.have.property('httpOnly', false);\n      expect(cookies[0]).to.have.property('secure', false);\n      expect(cookies[0]).to.have.property('domain');\n      expect(cookies[0]).to.have.property('path');\n    });\n  });","file":"examples/cookies.spec.js","skipped":false,"dir":"cypress"},{"name":"cy.setCookie() - set a browser cookie","suites":[],"updatePoint":{"line":31,"column":43,"index":1314},"line":31,"code":"  it('cy.setCookie() - set a browser cookie', () => {\n    // https://on.cypress.io/setcookie\n    cy.getCookies().should('be.empty');\n    cy.setCookie('foo', 'bar'); // cy.getCookie() yields a cookie object\n\n    cy.getCookie('foo').should('have.property', 'value', 'bar');\n  });","file":"examples/cookies.spec.js","skipped":false,"dir":"cypress"},{"name":"cy.clearCookie() - clear a browser cookie","suites":[],"updatePoint":{"line":38,"column":47,"index":1596},"line":38,"code":"  it('cy.clearCookie() - clear a browser cookie', () => {\n    // https://on.cypress.io/clearcookie\n    cy.getCookie('token').should('be.null');\n    cy.get('#clearCookie .set-a-cookie').click();\n    cy.getCookie('token').should('have.property', 'value', '123ABC'); // cy.clearCookies() yields null\n\n    cy.clearCookie('token').should('be.null');\n    cy.getCookie('token').should('be.null');\n  });","file":"examples/cookies.spec.js","skipped":false,"dir":"cypress"},{"name":"cy.clearCookies() - clear browser cookies","suites":[],"updatePoint":{"line":47,"column":47,"index":1992},"line":47,"code":"  it('cy.clearCookies() - clear browser cookies', () => {\n    // https://on.cypress.io/clearcookies\n    cy.getCookies().should('be.empty');\n    cy.get('#clearCookies .set-a-cookie').click();\n    cy.getCookies().should('have.length', 1); // cy.clearCookies() yields null\n\n    cy.clearCookies();\n    cy.getCookies().should('be.empty');\n  });","file":"examples/cookies.spec.js","skipped":false,"dir":"cypress"},{"name":".add() - create a custom command","suites":[],"updatePoint":{"line":7,"column":38,"index":234},"line":7,"code":"  it('.add() - create a custom command', () => {\n    Cypress.Commands.add('console', {\n      prevSubject: true\n    }, (subject, method) => {\n      // the previous subject is automatically received\n      // and the commands arguments are shifted\n      // allow us to change the console method used\n      method = method || 'log'; // log the subject to the console\n      // @ts-ignore TS7017\n\n      console[method]('The subject is', subject); // whatever we return becomes the new subject\n      // we don't want to change the subject so\n      // we return whatever was passed in\n\n      return subject;\n    }); // @ts-ignore TS2339\n\n    cy.get('button').console('info').then($button => {// subject is still $button\n    });\n  });","file":"examples/cypress_api.spec.js","skipped":false,"dir":"cypress"},{"name":".debug() - enable or disable debugging","suites":[],"updatePoint":{"line":33,"column":44,"index":1122},"line":33,"code":"  it('.debug() - enable or disable debugging', () => {\n    Cypress.Cookies.debug(true); // Cypress will now log in the console when\n    // cookies are set or cleared\n\n    cy.setCookie('fakeCookie', '123ABC');\n    cy.clearCookie('fakeCookie');\n    cy.setCookie('fakeCookie', '123ABC');\n    cy.clearCookie('fakeCookie');\n    cy.setCookie('fakeCookie', '123ABC');\n  });","file":"examples/cypress_api.spec.js","skipped":false,"dir":"cypress"},{"name":".preserveOnce() - preserve cookies by key","suites":[],"updatePoint":{"line":43,"column":47,"index":1492},"line":43,"code":"  it('.preserveOnce() - preserve cookies by key', () => {\n    // normally cookies are reset after each test\n    cy.getCookie('fakeCookie').should('not.be.ok'); // preserving a cookie will not clear it when\n    // the next test starts\n\n    cy.setCookie('lastCookie', '789XYZ');\n    Cypress.Cookies.preserveOnce('lastCookie');\n  });","file":"examples/cypress_api.spec.js","skipped":false,"dir":"cypress"},{"name":".defaults() - set defaults for all cookies","suites":[],"updatePoint":{"line":51,"column":48,"index":1824},"line":51,"code":"  it('.defaults() - set defaults for all cookies', () => {\n    // now any cookie with the name 'session_id' will\n    // not be cleared before each new test runs\n    Cypress.Cookies.defaults({\n      whitelist: 'session_id'\n    });\n  });","file":"examples/cypress_api.spec.js","skipped":false,"dir":"cypress"},{"name":".defaults() - change default config of server","suites":[],"updatePoint":{"line":66,"column":51,"index":2304},"line":66,"code":"  it('.defaults() - change default config of server', () => {\n    Cypress.Server.defaults({\n      delay: 0,\n      force404: false\n    });\n  });","file":"examples/cypress_api.spec.js","skipped":false,"dir":"cypress"},{"name":"Get CPU architecture name of underlying OS","suites":[],"updatePoint":{"line":77,"column":48,"index":2564},"line":77,"code":"  it('Get CPU architecture name of underlying OS', () => {\n    // https://on.cypress.io/arch\n    expect(Cypress.arch).to.exist;\n  });","file":"examples/cypress_api.spec.js","skipped":false,"dir":"cypress"},{"name":"Get and set configuration options","suites":[],"updatePoint":{"line":86,"column":39,"index":2812},"line":86,"code":"  it('Get and set configuration options', () => {\n    // https://on.cypress.io/config\n    let myConfig = Cypress.config();\n    expect(myConfig).to.have.property('animationDistanceThreshold', 5);\n    expect(myConfig).to.have.property('baseUrl', null);\n    expect(myConfig).to.have.property('defaultCommandTimeout', 4000);\n    expect(myConfig).to.have.property('requestTimeout', 5000);\n    expect(myConfig).to.have.property('responseTimeout', 30000);\n    expect(myConfig).to.have.property('viewportHeight', 660);\n    expect(myConfig).to.have.property('viewportWidth', 1000);\n    expect(myConfig).to.have.property('pageLoadTimeout', 60000);\n    expect(myConfig).to.have.property('waitForAnimations', true);\n    expect(Cypress.config('pageLoadTimeout')).to.eq(60000); // this will change the config for the rest of your tests!\n\n    Cypress.config('pageLoadTimeout', 20000);\n    expect(Cypress.config('pageLoadTimeout')).to.eq(20000);\n    Cypress.config('pageLoadTimeout', 60000);\n  });","file":"examples/cypress_api.spec.js","skipped":false,"dir":"cypress"},{"name":".isHidden() - determine if a DOM element is hidden","suites":[],"updatePoint":{"line":110,"column":56,"index":3959},"line":110,"code":"  it('.isHidden() - determine if a DOM element is hidden', () => {\n    let hiddenP = Cypress.$('.dom-p p.hidden').get(0);\n    let visibleP = Cypress.$('.dom-p p.visible').get(0); // our first paragraph has css class 'hidden'\n\n    expect(Cypress.dom.isHidden(hiddenP)).to.be.true;\n    expect(Cypress.dom.isHidden(visibleP)).to.be.false;\n  });","file":"examples/cypress_api.spec.js","skipped":false,"dir":"cypress"},{"name":"Get environment variables","suites":[],"updatePoint":{"line":124,"column":31,"index":4508},"line":124,"code":"  it('Get environment variables', () => {\n    // https://on.cypress.io/env\n    // set multiple environment variables\n    Cypress.env({\n      host: 'veronica.dev.local',\n      api_server: 'http://localhost:8888/v1/'\n    }); // get environment variable\n\n    expect(Cypress.env('host')).to.eq('veronica.dev.local'); // set environment variable\n\n    Cypress.env('api_server', 'http://localhost:8888/v2/');\n    expect(Cypress.env('api_server')).to.eq('http://localhost:8888/v2/'); // get all environment variable\n\n    expect(Cypress.env()).to.have.property('host', 'veronica.dev.local');\n    expect(Cypress.env()).to.have.property('api_server', 'http://localhost:8888/v2/');\n  });","file":"examples/cypress_api.spec.js","skipped":false,"dir":"cypress"},{"name":"Control what is printed to the Command Log","suites":[],"updatePoint":{"line":145,"column":48,"index":5319},"line":145,"code":"  it('Control what is printed to the Command Log', () => {// https://on.cypress.io/cypress-log\n  });","file":"examples/cypress_api.spec.js","skipped":false,"dir":"cypress"},{"name":"Get underlying OS name","suites":[],"updatePoint":{"line":152,"column":28,"index":5523},"line":152,"code":"  it('Get underlying OS name', () => {\n    // https://on.cypress.io/platform\n    expect(Cypress.platform).to.be.exist;\n  });","file":"examples/cypress_api.spec.js","skipped":false,"dir":"cypress"},{"name":"Get current version of Cypress being run","suites":[],"updatePoint":{"line":161,"column":46,"index":5788},"line":161,"code":"  it('Get current version of Cypress being run', () => {\n    // https://on.cypress.io/version\n    expect(Cypress.version).to.be.exist;\n  });","file":"examples/cypress_api.spec.js","skipped":false,"dir":"cypress"},{"name":"Get current spec information","suites":[],"updatePoint":{"line":170,"column":34,"index":6036},"line":170,"code":"  it('Get current spec information', () => {\n    // https://on.cypress.io/spec\n    // wrap the object so we can inspect it easily by clicking in the command log\n    cy.wrap(Cypress.spec).should('have.keys', ['name', 'relative', 'absolute']);\n  });","file":"examples/cypress_api.spec.js","skipped":false,"dir":"cypress"},{"name":"cy.fixture() - load a fixture","suites":[],"updatePoint":{"line":16,"column":35,"index":496},"line":16,"code":"  it('cy.fixture() - load a fixture', () => {\n    // https://on.cypress.io/fixture\n    // Instead of writing a response inline you can\n    // use a fixture file's content.\n    cy.server();\n    cy.fixture('example.json').as('comment'); // when application makes an Ajax request matching \"GET comments/*\"\n    // Cypress will intercept it and reply with object\n    // from the \"comment\" alias\n\n    cy.route('GET', 'comments/*', '@comment').as('getComment'); // we have code that gets a comment when\n    // the button is clicked in scripts.js\n\n    cy.get('.fixture-btn').click();\n    cy.wait('@getComment').its('responseBody').should('have.property', 'name').and('include', 'Using fixtures to represent data'); // you can also just write the fixture in the route\n\n    cy.route('GET', 'comments/*', 'fixture:example.json').as('getComment'); // we have code that gets a comment when\n    // the button is clicked in scripts.js\n\n    cy.get('.fixture-btn').click();\n    cy.wait('@getComment').its('responseBody').should('have.property', 'name').and('include', 'Using fixtures to represent data'); // or write fx to represent fixture\n    // by default it assumes it's .json\n\n    cy.route('GET', 'comments/*', 'fx:example').as('getComment'); // we have code that gets a comment when\n    // the button is clicked in scripts.js\n\n    cy.get('.fixture-btn').click();\n    cy.wait('@getComment').its('responseBody').should('have.property', 'name').and('include', 'Using fixtures to represent data');\n  });","file":"examples/files.spec.js","skipped":false,"dir":"cypress"},{"name":"cy.fixture() or require - load a fixture","suites":[],"updatePoint":{"line":44,"column":46,"index":1996},"line":44,"code":"  it('cy.fixture() or require - load a fixture', function () {\n    // we are inside the \"function () { ... }\"\n    // callback and can use test context object \"this\"\n    // \"this.example\" was loaded in \"beforeEach\" function callback\n    expect(this.example, 'fixture in the test context').to.deep.equal(requiredExample); // or use \"cy.wrap\" and \"should('deep.equal', ...)\" assertion\n    // @ts-ignore\n\n    cy.wrap(this.example, 'fixture vs require').should('deep.equal', requiredExample);\n  });","file":"examples/files.spec.js","skipped":false,"dir":"cypress"},{"name":"cy.readFile() - read a files contents","suites":[],"updatePoint":{"line":53,"column":43,"index":2487},"line":53,"code":"  it('cy.readFile() - read a files contents', () => {\n    // https://on.cypress.io/readfile\n    // You can read a file and yield its contents\n    // The filePath is relative to your project's root.\n    cy.readFile('cypress.json').then(json => {\n      expect(json).to.be.an('object');\n    });\n  });","file":"examples/files.spec.js","skipped":false,"dir":"cypress"},{"name":"cy.writeFile() - write to a file","suites":[],"updatePoint":{"line":61,"column":38,"index":2780},"line":61,"code":"  it('cy.writeFile() - write to a file', () => {\n    // https://on.cypress.io/writefile\n    // You can write to a file\n    // Use a response from a request to automatically\n    // generate a fixture file for use later\n    cy.request('https://jsonplaceholder.cypress.io/users').then(response => {\n      cy.writeFile('cypress/fixtures/users.json', response.body);\n    });\n    cy.fixture('users').should(users => {\n      expect(users[0].name).to.exist;\n    }); // JavaScript arrays and objects are stringified\n    // and formatted into text.\n\n    cy.writeFile('cypress/fixtures/profile.json', {\n      id: 8739,\n      name: 'Jane',\n      email: 'jane@example.com'\n    });\n    cy.fixture('profile').should(profile => {\n      expect(profile.name).to.eq('Jane');\n    });\n  });","file":"examples/files.spec.js","skipped":false,"dir":"cypress"},{"name":"cy.clearLocalStorage() - clear all data in local storage","suites":[],"updatePoint":{"line":9,"column":62,"index":383},"line":9,"code":"  it('cy.clearLocalStorage() - clear all data in local storage', () => {\n    // https://on.cypress.io/clearlocalstorage\n    cy.get('.ls-btn').click().should(() => {\n      expect(localStorage.getItem('prop1')).to.eq('red');\n      expect(localStorage.getItem('prop2')).to.eq('blue');\n      expect(localStorage.getItem('prop3')).to.eq('magenta');\n    }); // clearLocalStorage() yields the localStorage object\n\n    cy.clearLocalStorage().should(ls => {\n      expect(ls.getItem('prop1')).to.be.null;\n      expect(ls.getItem('prop2')).to.be.null;\n      expect(ls.getItem('prop3')).to.be.null;\n    }); // Clear key matching string in Local Storage\n\n    cy.get('.ls-btn').click().should(() => {\n      expect(localStorage.getItem('prop1')).to.eq('red');\n      expect(localStorage.getItem('prop2')).to.eq('blue');\n      expect(localStorage.getItem('prop3')).to.eq('magenta');\n    });\n    cy.clearLocalStorage('prop1').should(ls => {\n      expect(ls.getItem('prop1')).to.be.null;\n      expect(ls.getItem('prop2')).to.eq('blue');\n      expect(ls.getItem('prop3')).to.eq('magenta');\n    }); // Clear keys matching regex in Local Storage\n\n    cy.get('.ls-btn').click().should(() => {\n      expect(localStorage.getItem('prop1')).to.eq('red');\n      expect(localStorage.getItem('prop2')).to.eq('blue');\n      expect(localStorage.getItem('prop3')).to.eq('magenta');\n    });\n    cy.clearLocalStorage(/prop1|2/).should(ls => {\n      expect(ls.getItem('prop1')).to.be.null;\n      expect(ls.getItem('prop2')).to.be.null;\n      expect(ls.getItem('prop3')).to.eq('magenta');\n    });\n  });","file":"examples/local_storage.spec.js","skipped":false,"dir":"cypress"},{"name":"cy.hash() - get the current URL hash","suites":[],"updatePoint":{"line":6,"column":42,"index":194},"line":6,"code":"  it('cy.hash() - get the current URL hash', () => {\n    // https://on.cypress.io/hash\n    cy.hash().should('be.empty');\n  });","file":"examples/location.spec.js","skipped":false,"dir":"cypress"},{"name":"cy.location() - get window.location","suites":[],"updatePoint":{"line":10,"column":41,"index":320},"line":10,"code":"  it('cy.location() - get window.location', () => {\n    // https://on.cypress.io/location\n    cy.location().should(location => {\n      expect(location.hash).to.be.empty;\n      expect(location.href).to.eq('https://example.cypress.io/commands/location');\n      expect(location.host).to.eq('example.cypress.io');\n      expect(location.hostname).to.eq('example.cypress.io');\n      expect(location.origin).to.eq('https://example.cypress.io');\n      expect(location.pathname).to.eq('/commands/location');\n      expect(location.port).to.eq('');\n      expect(location.protocol).to.eq('https:');\n      expect(location.search).to.be.empty;\n    });\n  });","file":"examples/location.spec.js","skipped":false,"dir":"cypress"},{"name":"cy.url() - get the current URL","suites":[],"updatePoint":{"line":24,"column":36,"index":959},"line":24,"code":"  it('cy.url() - get the current URL', () => {\n    // https://on.cypress.io/url\n    cy.url().should('eq', 'https://example.cypress.io/commands/location');\n  });","file":"examples/location.spec.js","skipped":false,"dir":"cypress"},{"name":".end() - end the command chain","suites":[],"updatePoint":{"line":6,"column":36,"index":180},"line":6,"code":"  it('.end() - end the command chain', () => {\n    // https://on.cypress.io/end\n    // cy.end is useful when you want to end a chain of commands\n    // and force Cypress to re-query from the root element\n    cy.get('.misc-table').within(() => {\n      // ends the current chain and yields null\n      cy.contains('Cheryl').click().end(); // queries the entire table again\n\n      cy.contains('Charles').click();\n    });\n  });","file":"examples/misc.spec.js","skipped":false,"dir":"cypress"},{"name":"cy.exec() - execute a system command","suites":[],"updatePoint":{"line":17,"column":42,"index":609},"line":17,"code":"  it('cy.exec() - execute a system command', () => {\n    // https://on.cypress.io/exec\n    // execute a system command.\n    // so you can take actions necessary for\n    // your test outside the scope of Cypress.\n    cy.exec('echo Jane Lane').its('stdout').should('contain', 'Jane Lane'); // we can use Cypress.platform string to\n    // select appropriate command\n    // https://on.cypress/io/platform\n\n    cy.log(`Platform ${Cypress.platform} architecture ${Cypress.arch}`);\n\n    if (Cypress.platform === 'win32') {\n      cy.exec('print cypress.json').its('stderr').should('be.empty');\n    } else {\n      cy.exec('cat cypress.json').its('stderr').should('be.empty');\n      cy.exec('pwd').its('code').should('eq', 0);\n    }\n  });","file":"examples/misc.spec.js","skipped":false,"dir":"cypress"},{"name":"cy.focused() - get the DOM element that has focus","suites":[],"updatePoint":{"line":35,"column":55,"index":1351},"line":35,"code":"  it('cy.focused() - get the DOM element that has focus', () => {\n    // https://on.cypress.io/focused\n    cy.get('.misc-form').find('#name').click();\n    cy.focused().should('have.id', 'name');\n    cy.get('.misc-form').find('#description').click();\n    cy.focused().should('have.id', 'description');\n  });","file":"examples/misc.spec.js","skipped":false,"dir":"cypress"},{"name":"cy.screenshot() - take a screenshot","suites":[],"updatePoint":{"line":43,"column":43,"index":1692},"line":43,"code":"    it('cy.screenshot() - take a screenshot', () => {\n      // https://on.cypress.io/screenshot\n      cy.screenshot('my-image');\n    });","file":"examples/misc.spec.js","skipped":false,"dir":"cypress"},{"name":"Cypress.Screenshot.defaults() - change default config of screenshots","suites":[],"updatePoint":{"line":47,"column":76,"index":1862},"line":47,"code":"    it('Cypress.Screenshot.defaults() - change default config of screenshots', function () {\n      Cypress.Screenshot.defaults({\n        blackout: ['.foo'],\n        capture: 'viewport',\n        clip: {\n          x: 0,\n          y: 0,\n          width: 200,\n          height: 200\n        },\n        scale: false,\n        disableTimersAndAnimations: true,\n        screenshotOnRunFailure: true,\n\n        beforeScreenshot() {},\n\n        afterScreenshot() {}\n\n      });\n    });","file":"examples/misc.spec.js","skipped":false,"dir":"cypress"},{"name":"cy.wrap() - wrap an object","suites":[],"updatePoint":{"line":68,"column":32,"index":2296},"line":68,"code":"  it('cy.wrap() - wrap an object', () => {\n    // https://on.cypress.io/wrap\n    cy.wrap({\n      foo: 'bar'\n    }).should('have.property', 'foo').and('include', 'bar');\n  });","file":"examples/misc.spec.js","skipped":false,"dir":"cypress"},{"name":"cy.go() - go back or forward in the browser's history","suites":[],"updatePoint":{"line":8,"column":59,"index":312},"line":8,"code":"  it(\"cy.go() - go back or forward in the browser's history\", () => {\n    // https://on.cypress.io/go\n    cy.location('pathname').should('include', 'navigation');\n    cy.go('back');\n    cy.location('pathname').should('not.include', 'navigation');\n    cy.go('forward');\n    cy.location('pathname').should('include', 'navigation'); // clicking back\n\n    cy.go(-1);\n    cy.location('pathname').should('not.include', 'navigation'); // clicking forward\n\n    cy.go(1);\n    cy.location('pathname').should('include', 'navigation');\n  });","file":"examples/navigation.spec.js","skipped":false,"dir":"cypress"},{"name":"cy.reload() - reload the page","suites":[],"updatePoint":{"line":22,"column":35,"index":818},"line":22,"code":"  it('cy.reload() - reload the page', () => {\n    // https://on.cypress.io/reload\n    cy.reload(); // reload the page without using the cache\n\n    cy.reload(true);\n  });","file":"examples/navigation.spec.js","skipped":false,"dir":"cypress"},{"name":"cy.visit() - visit a remote url","suites":[],"updatePoint":{"line":28,"column":37,"index":990},"line":28,"code":"  it('cy.visit() - visit a remote url', () => {\n    // https://on.cypress.io/visit\n    // Visit any sub-domain of your current domain\n    // Pass options to the visit\n    cy.visit('https://example.cypress.io/commands/navigation', {\n      timeout: 50000,\n\n      // increase total time for the visit to resolve\n      onBeforeLoad(contentWindow) {\n        // contentWindow is the remote page's window object\n        expect(typeof contentWindow === 'object').to.be.true;\n      },\n\n      onLoad(contentWindow) {\n        // contentWindow is the remote page's window object\n        expect(typeof contentWindow === 'object').to.be.true;\n      }\n\n    });\n  });","file":"examples/navigation.spec.js","skipped":false,"dir":"cypress"},{"name":"cy.server() - control behavior of network requests and responses","suites":[],"updatePoint":{"line":7,"column":70,"index":281},"line":7,"code":"  it('cy.server() - control behavior of network requests and responses', () => {\n    // https://on.cypress.io/server\n    cy.server().should(server => {\n      // the default options on server\n      // you can override any of these options\n      expect(server.delay).to.eq(0);\n      expect(server.method).to.eq('GET');\n      expect(server.status).to.eq(200);\n      expect(server.headers).to.be.null;\n      expect(server.response).to.be.null;\n      expect(server.onRequest).to.be.undefined;\n      expect(server.onResponse).to.be.undefined;\n      expect(server.onAbort).to.be.undefined; // These options control the server behavior\n      // affecting all requests\n      // pass false to disable existing route stubs\n\n      expect(server.enable).to.be.true; // forces requests that don't match your routes to 404\n\n      expect(server.force404).to.be.false; // whitelists requests from ever being logged or stubbed\n\n      expect(server.whitelist).to.be.a('function');\n    });\n    cy.server({\n      method: 'POST',\n      delay: 1000,\n      status: 422,\n      response: {}\n    }); // any route commands will now inherit the above options\n    // from the server. anything we pass specifically\n    // to route will override the defaults though.\n  });","file":"examples/network_requests.spec.js","skipped":false,"dir":"cypress"},{"name":"cy.request() - make an XHR request","suites":[],"updatePoint":{"line":38,"column":40,"index":1492},"line":38,"code":"  it('cy.request() - make an XHR request', () => {\n    // https://on.cypress.io/request\n    cy.request('https://jsonplaceholder.cypress.io/comments').should(response => {\n      expect(response.status).to.eq(200);\n      expect(response.body).to.have.length(500);\n      expect(response).to.have.property('headers');\n      expect(response).to.have.property('duration');\n    });\n  });","file":"examples/network_requests.spec.js","skipped":false,"dir":"cypress"},{"name":"cy.request() - verify response using BDD syntax","suites":[],"updatePoint":{"line":47,"column":53,"index":1886},"line":47,"code":"  it('cy.request() - verify response using BDD syntax', () => {\n    cy.request('https://jsonplaceholder.cypress.io/comments').then(response => {\n      // https://on.cypress.io/assertions\n      expect(response).property('status').to.equal(200);\n      expect(response).property('body').to.have.length(500);\n      expect(response).to.include.keys('headers', 'duration');\n    });\n  });","file":"examples/network_requests.spec.js","skipped":false,"dir":"cypress"},{"name":"cy.request() with query parameters","suites":[],"updatePoint":{"line":55,"column":40,"index":2255},"line":55,"code":"  it('cy.request() with query parameters', () => {\n    // will execute request\n    // https://jsonplaceholder.cypress.io/comments?postId=1&id=3\n    cy.request({\n      url: 'https://jsonplaceholder.cypress.io/comments',\n      qs: {\n        postId: 1,\n        id: 3\n      }\n    }).its('body').should('be.an', 'array').and('have.length', 1).its('0') // yields first element of the array\n    .should('contain', {\n      postId: 1,\n      id: 3\n    });\n  });","file":"examples/network_requests.spec.js","skipped":false,"dir":"cypress"},{"name":"cy.request() - pass result to the second request","suites":[],"updatePoint":{"line":70,"column":54,"index":2721},"line":70,"code":"  it('cy.request() - pass result to the second request', () => {\n    // first, let's find out the userId of the first user we have\n    cy.request('https://jsonplaceholder.cypress.io/users?_limit=1').its('body.0') // yields the first element of the returned list\n    .then(user => {\n      expect(user).property('id').to.be.a('number'); // make a new post on behalf of the user\n\n      cy.request('POST', 'https://jsonplaceholder.cypress.io/posts', {\n        userId: user.id,\n        title: 'Cypress Test Runner',\n        body: 'Fast, easy and reliable testing for anything that runs in a browser.'\n      });\n    }) // note that the value here is the returned value of the 2nd request\n    // which is the new post object\n    .then(response => {\n      expect(response).property('status').to.equal(201); // new entity created\n\n      expect(response).property('body').to.contain({\n        id: 101,\n        // there are already 100 posts, so new entity gets id 101\n        title: 'Cypress Test Runner'\n      }); // we don't know the user id here - since it was in above closure\n      // so in this test just confirm that the property is there\n\n      expect(response.body).property('userId').to.be.a('number');\n    });\n  });","file":"examples/network_requests.spec.js","skipped":false,"dir":"cypress"},{"name":"cy.request() - save response in the shared test context","suites":[],"updatePoint":{"line":96,"column":61,"index":3945},"line":96,"code":"  it('cy.request() - save response in the shared test context', () => {\n    // https://on.cypress.io/variables-and-aliases\n    cy.request('https://jsonplaceholder.cypress.io/users?_limit=1').its('body.0') // yields the first element of the returned list\n    .as('user') // saves the object in the test context\n    .then(function () {\n      // NOTE 👀\n      //  By the time this callback runs the \"as('user')\" command\n      //  has saved the user object in the test context.\n      //  To access the test context we need to use\n      //  the \"function () { ... }\" callback form,\n      //  otherwise \"this\" points at a wrong or undefined object!\n      cy.request('POST', 'https://jsonplaceholder.cypress.io/posts', {\n        userId: this.user.id,\n        title: 'Cypress Test Runner',\n        body: 'Fast, easy and reliable testing for anything that runs in a browser.'\n      }).its('body').as('post'); // save the new post from the response\n    }).then(function () {\n      // When this callback runs, both \"cy.request\" API commands have finished\n      // and the test context has \"user\" and \"post\" objects set.\n      // Let's verify them.\n      expect(this.post, 'post has the right user id').property('userId').to.equal(this.user.id);\n    });\n  });","file":"examples/network_requests.spec.js","skipped":false,"dir":"cypress"},{"name":"cy.route() - route responses to matching requests","suites":[],"updatePoint":{"line":119,"column":55,"index":5187},"line":119,"code":"  it('cy.route() - route responses to matching requests', () => {\n    // https://on.cypress.io/route\n    let message = 'whoa, this comment does not exist';\n    cy.server(); // Listen to GET to comments/1\n\n    cy.route('GET', 'comments/*').as('getComment'); // we have code that gets a comment when\n    // the button is clicked in scripts.js\n\n    cy.get('.network-btn').click(); // https://on.cypress.io/wait\n\n    cy.wait('@getComment').its('status').should('eq', 200); // Listen to POST to comments\n\n    cy.route('POST', '/comments').as('postComment'); // we have code that posts a comment when\n    // the button is clicked in scripts.js\n\n    cy.get('.network-post').click();\n    cy.wait('@postComment'); // get the route\n\n    cy.get('@postComment').should(xhr => {\n      expect(xhr.requestBody).to.include('email');\n      expect(xhr.requestHeaders).to.have.property('Content-Type');\n      expect(xhr.responseBody).to.have.property('name', 'Using POST in cy.route()');\n    }); // Stub a response to PUT comments/ ****\n\n    cy.route({\n      method: 'PUT',\n      url: 'comments/*',\n      status: 404,\n      response: {\n        error: message\n      },\n      delay: 500\n    }).as('putComment'); // we have code that puts a comment when\n    // the button is clicked in scripts.js\n\n    cy.get('.network-put').click();\n    cy.wait('@putComment'); // our 404 statusCode logic in scripts.js executed\n\n    cy.get('.network-put-comment').should('contain', message);\n  });","file":"examples/network_requests.spec.js","skipped":false,"dir":"cypress"},{"name":"cy.get() - query DOM elements","suites":[],"updatePoint":{"line":8,"column":35,"index":285},"line":8,"code":"  it('cy.get() - query DOM elements', () => {\n    // https://on.cypress.io/get\n    cy.get('#query-btn').should('contain', 'Button');\n    cy.get('.query-btn').should('contain', 'Button');\n    cy.get('#querying .well>button:first').should('contain', 'Button'); //              ↲\n    // Use CSS selectors just like jQuery\n\n    cy.get('[data-test-id=\"test-example\"]').should('have.class', 'example'); // 'cy.get()' yields jQuery object, you can get its attribute\n    // by invoking `.attr()` method\n\n    cy.get('[data-test-id=\"test-example\"]').invoke('attr', 'data-test-id').should('equal', 'test-example'); // or you can get element's CSS property\n\n    cy.get('[data-test-id=\"test-example\"]').invoke('css', 'position').should('equal', 'static'); // or use assertions directly during 'cy.get()'\n    // https://on.cypress.io/assertions\n\n    cy.get('[data-test-id=\"test-example\"]').should('have.attr', 'data-test-id', 'test-example').and('have.css', 'position', 'static');\n  });","file":"examples/querying.spec.js","skipped":false,"dir":"cypress"},{"name":"cy.contains() - query DOM elements with matching content","suites":[],"updatePoint":{"line":25,"column":62,"index":1285},"line":25,"code":"  it('cy.contains() - query DOM elements with matching content', () => {\n    // https://on.cypress.io/contains\n    cy.get('.query-list').contains('bananas').should('have.class', 'third'); // we can pass a regexp to `.contains()`\n\n    cy.get('.query-list').contains(/^b\\w+/).should('have.class', 'third');\n    cy.get('.query-list').contains('apples').should('have.class', 'first'); // passing a selector to contains will\n    // yield the selector containing the text\n\n    cy.get('#querying').contains('ul', 'oranges').should('have.class', 'query-list');\n    cy.get('.query-button').contains('Save Form').should('have.class', 'btn');\n  });","file":"examples/querying.spec.js","skipped":false,"dir":"cypress"},{"name":".within() - query DOM elements within a specific element","suites":[],"updatePoint":{"line":36,"column":62,"index":1923},"line":36,"code":"  it('.within() - query DOM elements within a specific element', () => {\n    // https://on.cypress.io/within\n    cy.get('.query-form').within(() => {\n      cy.get('input:first').should('have.attr', 'placeholder', 'Email');\n      cy.get('input:last').should('have.attr', 'placeholder', 'Password');\n    });\n  });","file":"examples/querying.spec.js","skipped":false,"dir":"cypress"},{"name":"cy.root() - query the root DOM element","suites":[],"updatePoint":{"line":43,"column":44,"index":2217},"line":43,"code":"  it('cy.root() - query the root DOM element', () => {\n    // https://on.cypress.io/root\n    // By default, root is the document\n    cy.root().should('match', 'html');\n    cy.get('.query-ul').within(() => {\n      // In this within, the root is now the ul DOM element\n      cy.root().should('have.class', 'query-ul');\n    });\n  });","file":"examples/querying.spec.js","skipped":false,"dir":"cypress"},{"name":"cy.spy() - wrap a method in a spy","suites":[],"updatePoint":{"line":3,"column":39,"index":117},"line":3,"code":"  it('cy.spy() - wrap a method in a spy', () => {\n    // https://on.cypress.io/spy\n    cy.visit('https://example.cypress.io/commands/spies-stubs-clocks');\n    const obj = {\n      foo() {}\n\n    };\n    const spy = cy.spy(obj, 'foo').as('anyArgs');\n    obj.foo();\n    expect(spy).to.be.called;\n  });","file":"examples/spies_stubs_clocks.spec.js","skipped":false,"dir":"cypress"},{"name":"cy.spy() retries until assertions pass","suites":[],"updatePoint":{"line":14,"column":44,"index":419},"line":14,"code":"  it('cy.spy() retries until assertions pass', () => {\n    cy.visit('https://example.cypress.io/commands/spies-stubs-clocks');\n    const obj = {\n      /**\n       * Prints the argument passed\n       *\n       * @param x {any}\n       */\n      foo(x) {\n        console.log('obj.foo called with', x);\n      }\n\n    };\n    cy.spy(obj, 'foo').as('foo');\n    setTimeout(() => {\n      obj.foo('first');\n    }, 500);\n    setTimeout(() => {\n      obj.foo('second');\n    }, 2500);\n    cy.get('@foo').should('have.been.calledTwice');\n  });","file":"examples/spies_stubs_clocks.spec.js","skipped":false,"dir":"cypress"},{"name":"cy.stub() - create a stub and/or replace a function with stub","suites":[],"updatePoint":{"line":36,"column":67,"index":968},"line":36,"code":"  it('cy.stub() - create a stub and/or replace a function with stub', () => {\n    // https://on.cypress.io/stub\n    cy.visit('https://example.cypress.io/commands/spies-stubs-clocks');\n    const obj = {\n      /**\n       * Prints both arguments to the console\n       *\n       * @param a {string}\n       * @param b {string}\n       */\n      foo(a, b) {\n        console.log('a', a, 'b', b);\n      }\n\n    };\n    const stub = cy.stub(obj, 'foo').as('foo');\n    obj.foo('foo', 'bar');\n    expect(stub).to.be.called;\n  });","file":"examples/spies_stubs_clocks.spec.js","skipped":false,"dir":"cypress"},{"name":"cy.clock() - control time in the browser","suites":[],"updatePoint":{"line":55,"column":46,"index":1461},"line":55,"code":"  it('cy.clock() - control time in the browser', () => {\n    // https://on.cypress.io/clock\n    // create the date in UTC so its always the same\n    // no matter what local timezone the browser is running in\n    const now = new Date(Date.UTC(2017, 2, 14)).getTime();\n    cy.clock(now);\n    cy.visit('https://example.cypress.io/commands/spies-stubs-clocks');\n    cy.get('#clock-div').click().should('have.text', '1489449600');\n  });","file":"examples/spies_stubs_clocks.spec.js","skipped":false,"dir":"cypress"},{"name":"cy.tick() - move time in the browser","suites":[],"updatePoint":{"line":64,"column":42,"index":1889},"line":64,"code":"  it('cy.tick() - move time in the browser', () => {\n    // https://on.cypress.io/tick\n    // create the date in UTC so its always the same\n    // no matter what local timezone the browser is running in\n    const now = new Date(Date.UTC(2017, 2, 14)).getTime();\n    cy.clock(now);\n    cy.visit('https://example.cypress.io/commands/spies-stubs-clocks');\n    cy.get('#tick-div').click().should('have.text', '1489449600');\n    cy.tick(10000); // 10 seconds passed\n\n    cy.get('#tick-div').click().should('have.text', '1489449610');\n  });","file":"examples/spies_stubs_clocks.spec.js","skipped":false,"dir":"cypress"},{"name":".children() - get child DOM elements","suites":[],"updatePoint":{"line":6,"column":42,"index":196},"line":6,"code":"  it('.children() - get child DOM elements', () => {\n    // https://on.cypress.io/children\n    cy.get('.traversal-breadcrumb').children('.active').should('contain', 'Data');\n  });","file":"examples/traversal.spec.js","skipped":false,"dir":"cypress"},{"name":".closest() - get closest ancestor DOM element","suites":[],"updatePoint":{"line":10,"column":51,"index":385},"line":10,"code":"  it('.closest() - get closest ancestor DOM element', () => {\n    // https://on.cypress.io/closest\n    cy.get('.traversal-badge').closest('ul').should('have.class', 'list-group');\n  });","file":"examples/traversal.spec.js","skipped":false,"dir":"cypress"},{"name":".eq() - get a DOM element at a specific index","suites":[],"updatePoint":{"line":14,"column":51,"index":571},"line":14,"code":"  it('.eq() - get a DOM element at a specific index', () => {\n    // https://on.cypress.io/eq\n    cy.get('.traversal-list>li').eq(1).should('contain', 'siamese');\n  });","file":"examples/traversal.spec.js","skipped":false,"dir":"cypress"},{"name":".filter() - get DOM elements that match the selector","suites":[],"updatePoint":{"line":18,"column":58,"index":747},"line":18,"code":"  it('.filter() - get DOM elements that match the selector', () => {\n    // https://on.cypress.io/filter\n    cy.get('.traversal-nav>li').filter('.active').should('contain', 'About');\n  });","file":"examples/traversal.spec.js","skipped":false,"dir":"cypress"},{"name":".find() - get descendant DOM elements of the selector","suites":[],"updatePoint":{"line":22,"column":59,"index":937},"line":22,"code":"  it('.find() - get descendant DOM elements of the selector', () => {\n    // https://on.cypress.io/find\n    cy.get('.traversal-pagination').find('li').find('a').should('have.length', 7);\n  });","file":"examples/traversal.spec.js","skipped":false,"dir":"cypress"},{"name":".first() - get first DOM element","suites":[],"updatePoint":{"line":26,"column":38,"index":1109},"line":26,"code":"  it('.first() - get first DOM element', () => {\n    // https://on.cypress.io/first\n    cy.get('.traversal-table td').first().should('contain', '1');\n  });","file":"examples/traversal.spec.js","skipped":false,"dir":"cypress"},{"name":".last() - get last DOM element","suites":[],"updatePoint":{"line":30,"column":36,"index":1263},"line":30,"code":"  it('.last() - get last DOM element', () => {\n    // https://on.cypress.io/last\n    cy.get('.traversal-buttons .btn').last().should('contain', 'Submit');\n  });","file":"examples/traversal.spec.js","skipped":false,"dir":"cypress"},{"name":".next() - get next sibling DOM element","suites":[],"updatePoint":{"line":34,"column":44,"index":1432},"line":34,"code":"  it('.next() - get next sibling DOM element', () => {\n    // https://on.cypress.io/next\n    cy.get('.traversal-ul').contains('apples').next().should('contain', 'oranges');\n  });","file":"examples/traversal.spec.js","skipped":false,"dir":"cypress"},{"name":".nextAll() - get all next sibling DOM elements","suites":[],"updatePoint":{"line":38,"column":52,"index":1619},"line":38,"code":"  it('.nextAll() - get all next sibling DOM elements', () => {\n    // https://on.cypress.io/nextall\n    cy.get('.traversal-next-all').contains('oranges').nextAll().should('have.length', 3);\n  });","file":"examples/traversal.spec.js","skipped":false,"dir":"cypress"},{"name":".nextUntil() - get next sibling DOM elements until next el","suites":[],"updatePoint":{"line":42,"column":64,"index":1827},"line":42,"code":"  it('.nextUntil() - get next sibling DOM elements until next el', () => {\n    // https://on.cypress.io/nextuntil\n    cy.get('#veggies').nextUntil('#nuts').should('have.length', 3);\n  });","file":"examples/traversal.spec.js","skipped":false,"dir":"cypress"},{"name":".not() - remove DOM elements from set of DOM elements","suites":[],"updatePoint":{"line":46,"column":59,"index":2010},"line":46,"code":"  it('.not() - remove DOM elements from set of DOM elements', () => {\n    // https://on.cypress.io/not\n    cy.get('.traversal-disabled .btn').not('[disabled]').should('not.contain', 'Disabled');\n  });","file":"examples/traversal.spec.js","skipped":false,"dir":"cypress"},{"name":".parent() - get parent DOM element from DOM elements","suites":[],"updatePoint":{"line":50,"column":58,"index":2210},"line":50,"code":"  it('.parent() - get parent DOM element from DOM elements', () => {\n    // https://on.cypress.io/parent\n    cy.get('.traversal-mark').parent().should('contain', 'Morbi leo risus');\n  });","file":"examples/traversal.spec.js","skipped":false,"dir":"cypress"},{"name":".parents() - get parent DOM elements from DOM elements","suites":[],"updatePoint":{"line":54,"column":60,"index":2400},"line":54,"code":"  it('.parents() - get parent DOM elements from DOM elements', () => {\n    // https://on.cypress.io/parents\n    cy.get('.traversal-cite').parents().should('match', 'blockquote');\n  });","file":"examples/traversal.spec.js","skipped":false,"dir":"cypress"},{"name":".parentsUntil() - get parent DOM elements from DOM elements until el","suites":[],"updatePoint":{"line":58,"column":74,"index":2599},"line":58,"code":"  it('.parentsUntil() - get parent DOM elements from DOM elements until el', () => {\n    // https://on.cypress.io/parentsuntil\n    cy.get('.clothes-nav').find('.active').parentsUntil('.clothes-nav').should('have.length', 2);\n  });","file":"examples/traversal.spec.js","skipped":false,"dir":"cypress"},{"name":".prev() - get previous sibling DOM element","suites":[],"updatePoint":{"line":62,"column":48,"index":2804},"line":62,"code":"  it('.prev() - get previous sibling DOM element', () => {\n    // https://on.cypress.io/prev\n    cy.get('.birds').find('.active').prev().should('contain', 'Lorikeets');\n  });","file":"examples/traversal.spec.js","skipped":false,"dir":"cypress"},{"name":".prevAll() - get all previous sibling DOM elements","suites":[],"updatePoint":{"line":66,"column":56,"index":2987},"line":66,"code":"  it('.prevAll() - get all previous sibling DOM elements', () => {\n    // https://on.cypress.io/prevAll\n    cy.get('.fruits-list').find('.third').prevAll().should('have.length', 2);\n  });","file":"examples/traversal.spec.js","skipped":false,"dir":"cypress"},{"name":".prevUntil() - get all previous sibling DOM elements until el","suites":[],"updatePoint":{"line":70,"column":67,"index":3186},"line":70,"code":"  it('.prevUntil() - get all previous sibling DOM elements until el', () => {\n    // https://on.cypress.io/prevUntil\n    cy.get('.foods-list').find('#nuts').prevUntil('#veggies').should('have.length', 3);\n  });","file":"examples/traversal.spec.js","skipped":false,"dir":"cypress"},{"name":".siblings() - get all sibling DOM elements","suites":[],"updatePoint":{"line":74,"column":48,"index":3378},"line":74,"code":"  it('.siblings() - get all sibling DOM elements', () => {\n    // https://on.cypress.io/siblings\n    cy.get('.traversal-pills .active').siblings().should('have.length', 2);\n  });","file":"examples/traversal.spec.js","skipped":false,"dir":"cypress"},{"name":"Cypress._ - call a lodash method","suites":[],"updatePoint":{"line":6,"column":38,"index":183},"line":6,"code":"  it('Cypress._ - call a lodash method', () => {\n    // https://on.cypress.io/_\n    cy.request('https://jsonplaceholder.cypress.io/users').then(response => {\n      let ids = Cypress._.chain(response.body).map('id').take(3).value();\n\n      expect(ids).to.deep.eq([1, 2, 3]);\n    });\n  });","file":"examples/utilities.spec.js","skipped":false,"dir":"cypress"},{"name":"Cypress.$ - call a jQuery method","suites":[],"updatePoint":{"line":14,"column":38,"index":471},"line":14,"code":"  it('Cypress.$ - call a jQuery method', () => {\n    // https://on.cypress.io/$\n    let $li = Cypress.$('.utility-jquery li:first');\n    cy.wrap($li).should('not.have.class', 'active').click().should('have.class', 'active');\n  });","file":"examples/utilities.spec.js","skipped":false,"dir":"cypress"},{"name":"Cypress.Blob - blob utilities and base64 string conversion","suites":[],"updatePoint":{"line":19,"column":64,"index":728},"line":19,"code":"  it('Cypress.Blob - blob utilities and base64 string conversion', () => {\n    // https://on.cypress.io/blob\n    cy.get('.utility-blob').then($div => // https://github.com/nolanlawson/blob-util#imgSrcToDataURL\n    // get the dataUrl string for the javascript-logo\n    Cypress.Blob.imgSrcToDataURL('https://example.cypress.io/assets/img/javascript-logo.png', undefined, 'anonymous').then(dataUrl => {\n      // create an <img> element and set its src to the dataUrl\n      let img = Cypress.$('<img />', {\n        src: dataUrl\n      }); // need to explicitly return cy here since we are initially returning\n      // the Cypress.Blob.imgSrcToDataURL promise to our test\n      // append the image\n\n      $div.append(img);\n      cy.get('.utility-blob img').click().should('have.attr', 'src', dataUrl);\n    }));\n  });","file":"examples/utilities.spec.js","skipped":false,"dir":"cypress"},{"name":"Cypress.minimatch - test out glob patterns against strings","suites":[],"updatePoint":{"line":35,"column":64,"index":1539},"line":35,"code":"  it('Cypress.minimatch - test out glob patterns against strings', () => {\n    // https://on.cypress.io/minimatch\n    let matching = Cypress.minimatch('/users/1/comments', '/users/*/comments', {\n      matchBase: true\n    });\n    expect(matching, 'matching wildcard').to.be.true;\n    matching = Cypress.minimatch('/users/1/comments/2', '/users/*/comments', {\n      matchBase: true\n    });\n    expect(matching, 'comments').to.be.false; // ** matches against all downstream path segments\n\n    matching = Cypress.minimatch('/foo/bar/baz/123/quux?a=b&c=2', '/foo/**', {\n      matchBase: true\n    });\n    expect(matching, 'comments').to.be.true; // whereas * matches only the next path segment\n\n    matching = Cypress.minimatch('/foo/bar/baz/123/quux?a=b&c=2', '/foo/*', {\n      matchBase: false\n    });\n    expect(matching, 'comments').to.be.false;\n  });","file":"examples/utilities.spec.js","skipped":false,"dir":"cypress"},{"name":"Cypress.moment() - format or parse dates using a moment method","suites":[],"updatePoint":{"line":56,"column":68,"index":2393},"line":56,"code":"  it('Cypress.moment() - format or parse dates using a moment method', () => {\n    // https://on.cypress.io/moment\n    const time = Cypress.moment().utc('2014-04-25T19:38:53.196Z').format('h:mm A');\n    expect(time).to.be.a('string');\n    cy.get('.utility-moment').contains('3:38 PM').should('have.class', 'badge'); // the time in the element should be between 3pm and 5pm\n\n    const start = Cypress.moment('3:00 PM', 'LT');\n    const end = Cypress.moment('5:00 PM', 'LT');\n    cy.get('.utility-moment .badge').should($el => {\n      // parse American time like \"3:38 PM\"\n      const m = Cypress.moment($el.text().trim(), 'LT'); // display hours + minutes + AM|PM\n\n      const f = 'h:mm A';\n      expect(m.isBetween(start, end), `${m.format(f)} should be between ${start.format(f)} and ${end.format(f)}`).to.be.true;\n    });\n  });","file":"examples/utilities.spec.js","skipped":false,"dir":"cypress"},{"name":"Cypress.Promise - instantiate a bluebird promise","suites":[],"updatePoint":{"line":72,"column":54,"index":3209},"line":72,"code":"  it('Cypress.Promise - instantiate a bluebird promise', () => {\n    // https://on.cypress.io/promise\n    let waited = false;\n    /** @returns Bluebird<string> */\n\n    function waitOneSecond() {\n      // return a promise that resolves after 1 second\n      // @ts-ignore TS2351 (new Cypress.Promise)\n      return new Cypress.Promise((resolve, reject) => {\n        setTimeout(() => {\n          // set waited to true\n          waited = true; // resolve with 'foo' string\n\n          resolve('foo');\n        }, 1000);\n      });\n    }\n\n    cy.then(() => // return a promise to cy.then() that\n    // is awaited until it resolves\n    // @ts-ignore TS7006\n    waitOneSecond().then(str => {\n      expect(str).to.eq('foo');\n      expect(waited).to.be.true;\n    }));\n  });","file":"examples/utilities.spec.js","skipped":false,"dir":"cypress"},{"name":"cy.viewport() - set the viewport size and dimension","suites":[],"updatePoint":{"line":6,"column":57,"index":209},"line":6,"code":"  it('cy.viewport() - set the viewport size and dimension', () => {\n    // https://on.cypress.io/viewport\n    cy.get('#navbar').should('be.visible');\n    cy.viewport(320, 480); // the navbar should have collapse since our screen is smaller\n\n    cy.get('#navbar').should('not.be.visible');\n    cy.get('.navbar-toggle').should('be.visible').click();\n    cy.get('.nav').find('a').should('be.visible'); // lets see what our app looks like on a super large screen\n\n    cy.viewport(2999, 2999); // cy.viewport() accepts a set of preset sizes\n    // to easily set the screen to a device's width and height\n    // We added a cy.wait() between each viewport change so you can see\n    // the change otherwise it is a little too fast to see :)\n\n    cy.viewport('macbook-15');\n    cy.wait(200);\n    cy.viewport('macbook-13');\n    cy.wait(200);\n    cy.viewport('macbook-11');\n    cy.wait(200);\n    cy.viewport('ipad-2');\n    cy.wait(200);\n    cy.viewport('ipad-mini');\n    cy.wait(200);\n    cy.viewport('iphone-6+');\n    cy.wait(200);\n    cy.viewport('iphone-6');\n    cy.wait(200);\n    cy.viewport('iphone-5');\n    cy.wait(200);\n    cy.viewport('iphone-4');\n    cy.wait(200);\n    cy.viewport('iphone-3');\n    cy.wait(200); // cy.viewport() accepts an orientation for all presets\n    // the default orientation is 'portrait'\n\n    cy.viewport('ipad-2', 'portrait');\n    cy.wait(200);\n    cy.viewport('iphone-4', 'landscape');\n    cy.wait(200); // The viewport will be reset back to the default dimensions\n    // in between tests (the  default can be set in cypress.json)\n  });","file":"examples/viewport.spec.js","skipped":false,"dir":"cypress"},{"name":"cy.wait() - wait for a specific amount of time","suites":[],"updatePoint":{"line":9,"column":52,"index":345},"line":9,"code":"  it('cy.wait() - wait for a specific amount of time', () => {\n    cy.get('.wait-input1').type('Wait 1000ms after typing');\n    cy.wait(1000);\n    cy.get('.wait-input2').type('Wait 1000ms after typing');\n    cy.wait(1000);\n    cy.get('.wait-input3').type('Wait 1000ms after typing');\n    cy.wait(1000);\n  });","file":"examples/waiting.spec.js","skipped":false,"dir":"cypress"},{"name":"cy.wait() - wait for a specific route","suites":[],"updatePoint":{"line":17,"column":43,"index":645},"line":17,"code":"  it('cy.wait() - wait for a specific route', () => {\n    cy.server(); // Listen to GET to comments/1\n\n    cy.route('GET', 'comments/*').as('getComment'); // we have code that gets a comment when\n    // the button is clicked in scripts.js\n\n    cy.get('.network-btn').click(); // wait for GET comments/1\n\n    cy.wait('@getComment').its('status').should('eq', 200);\n  });","file":"examples/waiting.spec.js","skipped":false,"dir":"cypress"},{"name":"cy.window() - get the global window object","suites":[],"updatePoint":{"line":6,"column":48,"index":196},"line":6,"code":"  it('cy.window() - get the global window object', () => {\n    // https://on.cypress.io/window\n    cy.window().should('have.property', 'top');\n  });","file":"examples/window.spec.js","skipped":false,"dir":"cypress"},{"name":"cy.document() - get the document object","suites":[],"updatePoint":{"line":10,"column":45,"index":342},"line":10,"code":"  it('cy.document() - get the document object', () => {\n    // https://on.cypress.io/document\n    cy.document().should('have.property', 'charset').and('eq', 'UTF-8');\n  });","file":"examples/window.spec.js","skipped":false,"dir":"cypress"},{"name":"cy.title() - get the title","suites":[],"updatePoint":{"line":14,"column":32,"index":502},"line":14,"code":"  it('cy.title() - get the title', () => {\n    // https://on.cypress.io/title\n    cy.title().should('include', 'Kitchen Sink');\n  });","file":"examples/window.spec.js","skipped":false,"dir":"cypress"},{"name":"should handle default value false of arrowMarkerAbsolute","suites":["Configuration","arrowMarkerAbsolute"],"updatePoint":{"line":4,"column":64,"index":191},"line":4,"code":"    it('should handle default value false of arrowMarkerAbsolute', () => {\n      renderGraph(`graph TD\n        A[Christmas] -->|Get money| B(Go shopping)\n        B --> C{Let me think}\n        C -->|One| D[Laptop]\n        C -->|Two| E[iPhone]\n        C -->|Three| F[fa:fa-car Car]\n        `, {}); // Check the marker-end property to make sure it is properly set to\n      // start with #\n\n      cy.get('.edgePath path').first().should('have.attr', 'marker-end').should('exist').and('include', 'url(#');\n    });","file":"integration/other/configuration.spec.js","skipped":false,"dir":"cypress"},{"name":"should handle default value false of arrowMarkerAbsolute","suites":["Configuration","arrowMarkerAbsolute"],"updatePoint":{"line":16,"column":64,"index":700},"line":16,"code":"    it('should handle default value false of arrowMarkerAbsolute', () => {\n      renderGraph(`graph TD\n        A[Christmas] -->|Get money| B(Go shopping)\n        B --> C{Let me think}\n        C -->|One| D[Laptop]\n        C -->|Two| E[iPhone]\n        C -->|Three| F[fa:fa-car Car]\n        `, {}); // Check the marker-end property to make sure it is properly set to\n      // start with #\n\n      cy.get('.edgePath path').first().should('have.attr', 'marker-end').should('exist').and('include', 'url(#');\n    });","file":"integration/other/configuration.spec.js","skipped":false,"dir":"cypress"},{"name":"should handle arrowMarkerAbsolute excplicitly set to false","suites":["Configuration","arrowMarkerAbsolute"],"updatePoint":{"line":28,"column":66,"index":1211},"line":28,"code":"    it('should handle arrowMarkerAbsolute excplicitly set to false', () => {\n      renderGraph(`graph TD\n        A[Christmas] -->|Get money| B(Go shopping)\n        B --> C{Let me think}\n        C -->|One| D[Laptop]\n        C -->|Two| E[iPhone]\n        C -->|Three| F[fa:fa-car Car]\n        `, {\n        arrowMarkerAbsolute: false\n      }); // Check the marker-end property to make sure it is properly set to\n      // start with #\n\n      cy.get('.edgePath path').first().should('have.attr', 'marker-end').should('exist').and('include', 'url(#');\n    });","file":"integration/other/configuration.spec.js","skipped":false,"dir":"cypress"},{"name":"should handle arrowMarkerAbsolute excplicitly set to \"false\" as false","suites":["Configuration","arrowMarkerAbsolute"],"updatePoint":{"line":42,"column":77,"index":1775},"line":42,"code":"    it('should handle arrowMarkerAbsolute excplicitly set to \"false\" as false', () => {\n      renderGraph(`graph TD\n        A[Christmas] -->|Get money| B(Go shopping)\n        B --> C{Let me think}\n        C -->|One| D[Laptop]\n        C -->|Two| E[iPhone]\n        C -->|Three| F[fa:fa-car Car]\n        `, {\n        arrowMarkerAbsolute: 'false'\n      }); // Check the marker-end property to make sure it is properly set to\n      // start with #\n\n      cy.get('.edgePath path').first().should('have.attr', 'marker-end').should('exist').and('include', 'url(#');\n    });","file":"integration/other/configuration.spec.js","skipped":false,"dir":"cypress"},{"name":"should handle arrowMarkerAbsolute set to true","suites":["Configuration","arrowMarkerAbsolute"],"updatePoint":{"line":56,"column":53,"index":2317},"line":56,"code":"    it('should handle arrowMarkerAbsolute set to true', () => {\n      renderGraph(`graph TD\n        A[Christmas] -->|Get money| B(Go shopping)\n        B --> C{Let me think}\n        C -->|One| D[Laptop]\n        C -->|Two| E[iPhone]\n        C -->|Three| F[fa:fa-car Car]\n        `, {\n        arrowMarkerAbsolute: true\n      });\n      cy.get('.edgePath path').first().should('have.attr', 'marker-end').should('exist').and('include', 'url(http://localhost');\n    });","file":"integration/other/configuration.spec.js","skipped":false,"dir":"cypress"},{"name":"should not taint the initial configuration when using multiple directives","suites":["Configuration","arrowMarkerAbsolute"],"updatePoint":{"line":68,"column":81,"index":2808},"line":68,"code":"    it('should not taint the initial configuration when using multiple directives', () => {\n      const url = 'http://localhost:9000/regression/issue-1874.html';\n      cy.viewport(1440, 1024);\n      cy.visit(url);\n      cy.get('svg');\n      cy.matchImageSnapshot('configuration.spec-should-not-taint-initial-configuration-when-using-multiple-directives');\n    });","file":"integration/other/configuration.spec.js","skipped":false,"dir":"cypress"},{"name":"Graph: should handle a click on a node with a bound function","suites":["Interaction","Interaction - security level loose"],"updatePoint":{"line":3,"column":68,"index":158},"line":3,"code":"    it('Graph: should handle a click on a node with a bound function', () => {\n      const url = 'http://localhost:9000/click_security_loose.html';\n      cy.viewport(1440, 1024);\n      cy.visit(url);\n      cy.get('body').find('g#flowchart-Function-2').click();\n      cy.get('.created-by-click').should('have.text', 'Clicked By Flow');\n    });","file":"integration/other/interaction.spec.js","skipped":false,"dir":"cypress"},{"name":"Graph: should handle a click on a node with a bound function with args","suites":["Interaction","Interaction - security level loose"],"updatePoint":{"line":10,"column":78,"index":511},"line":10,"code":"    it('Graph: should handle a click on a node with a bound function with args', () => {\n      const url = 'http://localhost:9000/click_security_loose.html';\n      cy.viewport(1440, 1024);\n      cy.visit(url);\n      cy.get('body').find('g#flowchart-FunctionArg-18').click();\n      cy.get('.created-by-click-2').should('have.text', 'Clicked By Flow: ARGUMENT');\n    });","file":"integration/other/interaction.spec.js","skipped":false,"dir":"cypress"},{"name":"Flowchart: should handle a click on a node with a bound function where the node starts with a number","suites":["Interaction","Interaction - security level loose"],"updatePoint":{"line":17,"column":108,"index":910},"line":17,"code":"    it('Flowchart: should handle a click on a node with a bound function where the node starts with a number', () => {\n      const url = 'http://localhost:9000/click_security_loose.html';\n      cy.viewport(1440, 1024);\n      cy.visit(url);\n      cy.get('body').find('g[id=\"flowchart-FunctionArg-22\"]').click();\n      cy.get('.created-by-click-2').should('have.text', 'Clicked By Flow: ARGUMENT');\n    });","file":"integration/other/interaction.spec.js","skipped":false,"dir":"cypress"},{"name":"Graph: should handle a click on a node with a bound url","suites":["Interaction","Interaction - security level loose"],"updatePoint":{"line":24,"column":63,"index":1270},"line":24,"code":"    it('Graph: should handle a click on a node with a bound url', () => {\n      const url = 'http://localhost:9000/click_security_loose.html';\n      cy.viewport(1440, 1024);\n      cy.visit(url);\n      cy.get('body').find('#flowchart-URL-3').click();\n      cy.location().should(location => {\n        expect(location.href).to.eq('http://localhost:9000/webpackUsage.html');\n      });\n    });","file":"integration/other/interaction.spec.js","skipped":false,"dir":"cypress"},{"name":"Graph: should handle a click on a node with a bound url where the node starts with a number","suites":["Interaction","Interaction - security level loose"],"updatePoint":{"line":33,"column":99,"index":1695},"line":33,"code":"    it('Graph: should handle a click on a node with a bound url where the node starts with a number', () => {\n      const url = 'http://localhost:9000/click_security_loose.html';\n      cy.viewport(1440, 1024);\n      cy.visit(url);\n      cy.get('body').find('g[id=\"flowchart-2URL-7\"]').click();\n      cy.location().should(location => {\n        expect(location.href).to.eq('http://localhost:9000/webpackUsage.html');\n      });\n    });","file":"integration/other/interaction.spec.js","skipped":false,"dir":"cypress"},{"name":"Flowchart-v2: should handle a click on a node with a bound function","suites":["Interaction","Interaction - security level loose"],"updatePoint":{"line":42,"column":75,"index":2104},"line":42,"code":"    it('Flowchart-v2: should handle a click on a node with a bound function', () => {\n      const url = 'http://localhost:9000/click_security_loose.html';\n      cy.viewport(1440, 1024);\n      cy.visit(url);\n      cy.get('body').find('g#flowchart-Function-10').click();\n      cy.get('.created-by-click').should('have.text', 'Clicked By Flow');\n    });","file":"integration/other/interaction.spec.js","skipped":false,"dir":"cypress"},{"name":"Flowchart-v2: should handle a click on a node with a bound function where the node starts with a number","suites":["Interaction","Interaction - security level loose"],"updatePoint":{"line":49,"column":111,"index":2491},"line":49,"code":"    it('Flowchart-v2: should handle a click on a node with a bound function where the node starts with a number', () => {\n      const url = 'http://localhost:9000/click_security_loose.html';\n      cy.viewport(1440, 1024);\n      cy.visit(url);\n      cy.get('body').find('g[id=\"flowchart-1Function-14\"]').click();\n      cy.get('.created-by-click').should('have.text', 'Clicked By Flow');\n    });","file":"integration/other/interaction.spec.js","skipped":false,"dir":"cypress"},{"name":"Flowchart-v2: should handle a click on a node with a bound url","suites":["Interaction","Interaction - security level loose"],"updatePoint":{"line":56,"column":70,"index":2844},"line":56,"code":"    it('Flowchart-v2: should handle a click on a node with a bound url', () => {\n      const url = 'http://localhost:9000/click_security_loose.html';\n      cy.viewport(1440, 1024);\n      cy.visit(url);\n      cy.get('body').find('#flowchart-URL-11').click();\n      cy.location().should(location => {\n        expect(location.href).to.eq('http://localhost:9000/webpackUsage.html');\n      });\n    });","file":"integration/other/interaction.spec.js","skipped":false,"dir":"cypress"},{"name":"Flowchart-v2: should handle a click on a node with a bound url where the node starts with a number","suites":["Interaction","Interaction - security level loose"],"updatePoint":{"line":65,"column":106,"index":3277},"line":65,"code":"    it('Flowchart-v2: should handle a click on a node with a bound url where the node starts with a number', () => {\n      const url = 'http://localhost:9000/click_security_loose.html';\n      cy.viewport(1440, 1024);\n      cy.visit(url);\n      cy.get('body').find('g[id=\"flowchart-2URL-15\"]').click();\n      cy.location().should(location => {\n        expect(location.href).to.eq('http://localhost:9000/webpackUsage.html');\n      });\n    });","file":"integration/other/interaction.spec.js","skipped":false,"dir":"cypress"},{"name":"should handle a click on a task with a bound URL clicking on the rect","suites":["Interaction","Interaction - security level loose"],"updatePoint":{"line":74,"column":77,"index":3689},"line":74,"code":"    it('should handle a click on a task with a bound URL clicking on the rect', () => {\n      const url = 'http://localhost:9000/click_security_loose.html';\n      cy.viewport(1440, 1024);\n      cy.visit(url);\n      cy.get('body').find('rect#cl1').click({\n        force: true\n      });\n      cy.location().should(location => {\n        expect(location.href).to.eq('http://localhost:9000/webpackUsage.html');\n      });\n    });","file":"integration/other/interaction.spec.js","skipped":false,"dir":"cypress"},{"name":"should handle a click on a task with a bound URL clicking on the text","suites":["Interaction","Interaction - security level loose"],"updatePoint":{"line":85,"column":77,"index":4113},"line":85,"code":"    it('should handle a click on a task with a bound URL clicking on the text', () => {\n      const url = 'http://localhost:9000/click_security_loose.html';\n      cy.viewport(1440, 1024);\n      cy.visit(url);\n      cy.get('body').find('text#cl1-text').click({\n        force: true\n      });\n      cy.location().should(location => {\n        expect(location.href).to.eq('http://localhost:9000/webpackUsage.html');\n      });\n    });","file":"integration/other/interaction.spec.js","skipped":false,"dir":"cypress"},{"name":"should handle a click on a task with a bound function without args","suites":["Interaction","Interaction - security level loose"],"updatePoint":{"line":96,"column":74,"index":4539},"line":96,"code":"    it('should handle a click on a task with a bound function without args', () => {\n      const url = 'http://localhost:9000/click_security_loose.html';\n      cy.viewport(1440, 1024);\n      cy.visit(url);\n      cy.get('body').find('rect#cl2').click({\n        force: true\n      });\n      cy.get('.created-by-gant-click').should('have.text', 'Clicked By Gant cl2');\n    });","file":"integration/other/interaction.spec.js","skipped":false,"dir":"cypress"},{"name":"should handle a click on a task with a bound function with args","suites":["Interaction","Interaction - security level loose"],"updatePoint":{"line":105,"column":71,"index":4909},"line":105,"code":"    it('should handle a click on a task with a bound function with args', () => {\n      const url = 'http://localhost:9000/click_security_loose.html';\n      cy.viewport(1440, 1024);\n      cy.visit(url);\n      cy.get('body').find('rect#cl3').click({\n        force: true\n      });\n      cy.get('.created-by-gant-click').should('have.text', 'Clicked By Gant test1 test2 test3');\n    });","file":"integration/other/interaction.spec.js","skipped":false,"dir":"cypress"},{"name":"should handle a click on a task with a bound function without args","suites":["Interaction","Interaction - security level loose"],"updatePoint":{"line":114,"column":74,"index":5296},"line":114,"code":"    it('should handle a click on a task with a bound function without args', () => {\n      const url = 'http://localhost:9000/click_security_loose.html';\n      cy.viewport(1440, 1024);\n      cy.visit(url);\n      cy.get('body').find('text#cl2-text').click({\n        force: true\n      });\n      cy.get('.created-by-gant-click').should('have.text', 'Clicked By Gant cl2');\n    });","file":"integration/other/interaction.spec.js","skipped":false,"dir":"cypress"},{"name":"should handle a click on a task with a bound function with args ","suites":["Interaction","Interaction - security level loose"],"updatePoint":{"line":123,"column":72,"index":5672},"line":123,"code":"    it('should handle a click on a task with a bound function with args ', () => {\n      const url = 'http://localhost:9000/click_security_loose.html';\n      cy.viewport(1440, 1024);\n      cy.visit(url);\n      cy.get('body').find('text#cl3-text').click({\n        force: true\n      });\n      cy.get('.created-by-gant-click').should('have.text', 'Clicked By Gant test1 test2 test3');\n    });","file":"integration/other/interaction.spec.js","skipped":false,"dir":"cypress"},{"name":"should handle a click on a node without a bound function","suites":["Interaction","Interaction - security level tight"],"updatePoint":{"line":134,"column":64,"index":6117},"line":134,"code":"    it('should handle a click on a node without a bound function', () => {\n      const url = 'http://localhost:9000/click_security_strict.html';\n      cy.viewport(1440, 1024);\n      cy.visit(url);\n      cy.get('body').find('g#flowchart-Function-2').click();\n      cy.get('.created-by-click').should('not.exist'); // cy.get('.created-by-click').should('not.have.text', 'Clicked By Flow');\n    });","file":"integration/other/interaction.spec.js","skipped":false,"dir":"cypress"},{"name":"should handle a click on a node with a bound function where the node starts with a number","suites":["Interaction","Interaction - security level tight"],"updatePoint":{"line":141,"column":97,"index":6546},"line":141,"code":"    it('should handle a click on a node with a bound function where the node starts with a number', () => {\n      const url = 'http://localhost:9000/click_security_strict.html';\n      cy.viewport(1440, 1024);\n      cy.visit(url);\n      cy.get('body').find('g[id=\"flowchart-1Function-6\"]').click(); // cy.get('.created-by-click').should('not.have.text', 'Clicked By Flow');\n\n      cy.get('.created-by-click').should('not.exist');\n    });","file":"integration/other/interaction.spec.js","skipped":false,"dir":"cypress"},{"name":"should handle a click on a node with a bound url","suites":["Interaction","Interaction - security level tight"],"updatePoint":{"line":149,"column":56,"index":6942},"line":149,"code":"    it('should handle a click on a node with a bound url', () => {\n      const url = 'http://localhost:9000/click_security_strict.html';\n      cy.viewport(1440, 1024);\n      cy.visit(url);\n      cy.get('body').find('g#flowchart-URL-3').click();\n      cy.location().should(location => {\n        expect(location.href).to.eq('http://localhost:9000/webpackUsage.html');\n      });\n    });","file":"integration/other/interaction.spec.js","skipped":false,"dir":"cypress"},{"name":"should handle a click on a node with a bound url where the node starts with a number","suites":["Interaction","Interaction - security level tight"],"updatePoint":{"line":158,"column":92,"index":7362},"line":158,"code":"    it('should handle a click on a node with a bound url where the node starts with a number', () => {\n      const url = 'http://localhost:9000/click_security_strict.html';\n      cy.viewport(1440, 1024);\n      cy.visit(url);\n      cy.get('body').find('g[id=\"flowchart-2URL-7\"]').click();\n      cy.location().should(location => {\n        expect(location.href).to.eq('http://localhost:9000/webpackUsage.html');\n      });\n    });","file":"integration/other/interaction.spec.js","skipped":false,"dir":"cypress"},{"name":"should handle a click on a task with a bound URL clicking on the rect","suites":["Interaction","Interaction - security level tight"],"updatePoint":{"line":167,"column":77,"index":7774},"line":167,"code":"    it('should handle a click on a task with a bound URL clicking on the rect', () => {\n      const url = 'http://localhost:9000/click_security_strict.html';\n      cy.viewport(1440, 1024);\n      cy.visit(url);\n      cy.get('body').find('rect#cl1').click({\n        force: true\n      });\n      cy.location().should(location => {\n        expect(location.href).to.eq('http://localhost:9000/webpackUsage.html');\n      });\n    });","file":"integration/other/interaction.spec.js","skipped":false,"dir":"cypress"},{"name":"should handle a click on a task with a bound URL clicking on the text","suites":["Interaction","Interaction - security level tight"],"updatePoint":{"line":178,"column":77,"index":8199},"line":178,"code":"    it('should handle a click on a task with a bound URL clicking on the text', () => {\n      const url = 'http://localhost:9000/click_security_strict.html';\n      cy.viewport(1440, 1024);\n      cy.visit(url);\n      cy.get('body').find('text#cl1-text').click({\n        force: true\n      });\n      cy.location().should(location => {\n        expect(location.href).to.eq('http://localhost:9000/webpackUsage.html');\n      });\n    });","file":"integration/other/interaction.spec.js","skipped":false,"dir":"cypress"},{"name":"should handle a click on a task with a bound function","suites":["Interaction","Interaction - security level tight"],"updatePoint":{"line":189,"column":61,"index":8613},"line":189,"code":"    it('should handle a click on a task with a bound function', () => {\n      const url = 'http://localhost:9000/click_security_strict.html';\n      cy.viewport(1440, 1024);\n      cy.visit(url);\n      cy.get('body').find('rect#cl2').click({\n        force: true\n      }); // cy.get('.created-by-gant-click').should('not.have.text', 'Clicked By Gant cl2');\n\n      cy.get('.created-by-gant-click').should('not.exist');\n    });","file":"integration/other/interaction.spec.js","skipped":false,"dir":"cypress"},{"name":"should handle a click on a task with a bound function","suites":["Interaction","Interaction - security level tight"],"updatePoint":{"line":199,"column":61,"index":9036},"line":199,"code":"    it('should handle a click on a task with a bound function', () => {\n      const url = 'http://localhost:9000/click_security_strict.html';\n      cy.viewport(1440, 1024);\n      cy.visit(url);\n      cy.get('body').find('text#cl2-text').click({\n        force: true\n      }); // cy.get('.created-by-gant-click').should('not.have.text', 'Clicked By Gant cl2');\n\n      cy.get('.created-by-gant-click').should('not.exist');\n    });","file":"integration/other/interaction.spec.js","skipped":false,"dir":"cypress"},{"name":"should handle a click on a node with a bound function","suites":["Interaction","Interaction - security level other, missspelling"],"updatePoint":{"line":211,"column":61,"index":9541},"line":211,"code":"    it('should handle a click on a node with a bound function', () => {\n      const url = 'http://localhost:9000/click_security_other.html';\n      cy.viewport(1440, 1024);\n      cy.visit(url);\n      cy.get('body').find('g#flowchart-Function-2').click(); // cy.get('.created-by-click').should('not.have.text', 'Clicked By Flow');\n\n      cy.get('.created-by-click').should('not.exist');\n    });","file":"integration/other/interaction.spec.js","skipped":false,"dir":"cypress"},{"name":"should handle a click on a node with a bound function where the node starts with a number","suites":["Interaction","Interaction - security level other, missspelling"],"updatePoint":{"line":219,"column":97,"index":9970},"line":219,"code":"    it('should handle a click on a node with a bound function where the node starts with a number', () => {\n      const url = 'http://localhost:9000/click_security_other.html';\n      cy.viewport(1440, 1024);\n      cy.visit(url);\n      cy.get('body').find('g[id=\"flowchart-1Function-6\"]').click();\n      cy.get('.created-by-click').should('not.exist');\n      cy.get('.created-by-click').should('not.exist');\n    });","file":"integration/other/interaction.spec.js","skipped":false,"dir":"cypress"},{"name":"should handle a click on a node with a bound url","suites":["Interaction","Interaction - security level other, missspelling"],"updatePoint":{"line":227,"column":56,"index":10344},"line":227,"code":"    it('should handle a click on a node with a bound url', () => {\n      const url = 'http://localhost:9000/click_security_other.html';\n      cy.viewport(1440, 1024);\n      cy.visit(url);\n      cy.get('body').find('g#flowchart-URL-3').click();\n      cy.location().should(location => {\n        expect(location.href).to.eq('http://localhost:9000/webpackUsage.html');\n      });\n    });","file":"integration/other/interaction.spec.js","skipped":false,"dir":"cypress"},{"name":"should handle a click on a task with a bound function","suites":["Interaction","Interaction - security level other, missspelling"],"updatePoint":{"line":236,"column":61,"index":10732},"line":236,"code":"    it('should handle a click on a task with a bound function', () => {\n      const url = 'http://localhost:9000/click_security_other.html';\n      cy.viewport(1440, 1024);\n      cy.visit(url);\n      cy.get('body').find('rect#cl2').click({\n        force: true\n      });\n      cy.get('.created-by-gant-click').should('not.exist');\n    });","file":"integration/other/interaction.spec.js","skipped":false,"dir":"cypress"},{"name":"should handle a click on a task with a bound function","suites":["Interaction","Interaction - security level other, missspelling"],"updatePoint":{"line":245,"column":61,"index":11069},"line":245,"code":"    it('should handle a click on a task with a bound function', () => {\n      const url = 'http://localhost:9000/click_security_other.html';\n      cy.viewport(1440, 1024);\n      cy.visit(url);\n      cy.get('body').find('text#cl2-text').click({\n        force: true\n      });\n      cy.get('.created-by-gant-click').should('not.exist');\n    });","file":"integration/other/interaction.spec.js","skipped":false,"dir":"cypress"},{"name":"should be able to render after an error has occured","suites":["Rerendering"],"updatePoint":{"line":2,"column":57,"index":90},"line":2,"code":"  it('should be able to render after an error has occured', () => {\n    const url = 'http://localhost:9000/render-after-error.html';\n    cy.viewport(1440, 1024);\n    cy.visit(url);\n    cy.get('#graphDiv').should('exist');\n  });","file":"integration/other/rerender.spec.js","skipped":false,"dir":"cypress"},{"name":"should be able to render and rerender a graph via API","suites":["Rerendering"],"updatePoint":{"line":8,"column":59,"index":320},"line":8,"code":"  it('should be able to render and rerender a graph via API', () => {\n    const url = 'http://localhost:9000/rerender.html';\n    cy.viewport(1440, 1024);\n    cy.visit(url);\n    cy.get('#graph [id^=flowchart-A]').should('have.text', 'XMas');\n    cy.get('body').find('#rerender').click({\n      force: true\n    });\n    cy.get('#graph [id^=flowchart-A]').should('have.text', 'Saturday');\n  });","file":"integration/other/rerender.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a simple sequence diagrams","suites":["Sequencediagram"],"updatePoint":{"line":2,"column":46,"index":83},"line":2,"code":"  it('should render a simple sequence diagrams', () => {\n    const url = 'http://localhost:9000/webpackUsage.html';\n    cy.visit(url);\n    cy.get('body').find('svg').should('have.length', 1);\n  });","file":"integration/other/webpackUsage.spec.js","skipped":false,"dir":"cypress"},{"name":"should handle html escapings properly","suites":["Sequencediagram"],"updatePoint":{"line":7,"column":43,"index":278},"line":7,"code":"  it('should handle html escapings properly', () => {\n    const url = 'http://localhost:9000/webpackUsage.html?test-html-escaping=true';\n    cy.visit(url);\n    cy.get('body').find('svg').should('have.length', 1);\n    cy.get('g.label > foreignobject > div').should('not.contain.text', '<b>');\n  });","file":"integration/other/webpackUsage.spec.js","skipped":false,"dir":"cypress"},{"name":"should handle xss in tags","suites":["XSS"],"updatePoint":{"line":3,"column":31,"index":108},"line":3,"code":"  it('should handle xss in tags', () => {\n    const str = 'eyJjb2RlIjoiXG5ncmFwaCBMUlxuICAgICAgQi0tPkQoPGltZyBvbmVycm9yPWxvY2F0aW9uPWBqYXZhc2NyaXB0XFx1MDAzYXhzc0F0dGFja1xcdTAwMjhkb2N1bWVudC5kb21haW5cXHUwMDI5YCBzcmM9eD4pOyIsIm1lcm1haWQiOnsidGhlbWUiOiJkZWZhdWx0In19';\n    const url = mermaidUrl(str, {}, true);\n    cy.visit(url);\n    cy.wait(1000).then(() => {\n      cy.get('.mermaid').should('exist');\n    });\n    cy.get('svg');\n  });","file":"integration/other/xss.spec.js","skipped":false,"dir":"cypress"},{"name":"should not allow tags in the css","suites":["XSS"],"updatePoint":{"line":12,"column":38,"index":549},"line":12,"code":"  it('should not allow tags in the css', () => {\n    const str = 'eyJjb2RlIjoiJSV7aW5pdDogeyAnZm9udEZhbWlseSc6ICdcXFwiPjwvc3R5bGU-PGltZyBzcmM9eCBvbmVycm9yPXhzc0F0dGFjaygpPid9IH0lJVxuZ3JhcGggTFJcbiAgICAgQSAtLT4gQiIsIm1lcm1haWQiOnsidGhlbWUiOiJkZWZhdWx0IiwiZmxvd2NoYXJ0Ijp7Imh0bWxMYWJlbHMiOmZhbHNlfX0sInVwZGF0ZUVkaXRvciI6ZmFsc2V9';\n    const url = mermaidUrl(str, {\n      theme: 'default',\n      flowchart: {\n        htmlMode: false\n      }\n    }, true);\n    cy.visit(url);\n    cy.wait(1000).then(() => {\n      cy.get('#the-malware').should('not.exist');\n    });\n  });","file":"integration/other/xss.spec.js","skipped":false,"dir":"cypress"},{"name":"should handle xss in tags in non-html mode","suites":["XSS"],"updatePoint":{"line":25,"column":48,"index":1125},"line":25,"code":"  it('should handle xss in tags in non-html mode', () => {\n    const str = 'eyJjb2RlIjoiXG5ncmFwaCBMUlxuICAgICAgQi0tPkQoPGltZyBvbmVycm9yPWxvY2F0aW9uPWBqYXZhc2NyaXB0XFx1MDAzYXhzc0F0dGFja1xcdTAwMjhkb2N1bWVudC5kb21haW5cXHUwMDI5YCBzcmM9eD4pOyIsIm1lcm1haWQiOnsidGhlbWUiOiJkZWZhdWx0IiwiZmxvd2NoYXJ0Ijp7Imh0bWxMYWJlbHMiOmZhbHNlfX19';\n    const url = mermaidUrl(str, {\n      theme: 'default',\n      flowchart: {\n        htmlMode: false\n      }\n    }, true);\n    cy.visit(url);\n    cy.wait(1000);\n    cy.get('#the-malware').should('not.exist');\n  });","file":"integration/other/xss.spec.js","skipped":false,"dir":"cypress"},{"name":"should not allow changing the __proto__ attribute using config","suites":["XSS"],"updatePoint":{"line":37,"column":68,"index":1687},"line":37,"code":"  it('should not allow changing the __proto__ attribute using config', () => {\n    cy.visit('http://localhost:9000/xss2.html');\n    cy.wait(1000);\n    cy.get('#the-malware').should('not.exist');\n  });","file":"integration/other/xss.spec.js","skipped":false,"dir":"cypress"},{"name":"should not allow maniplulating htmlLabels into a false positive","suites":["XSS"],"updatePoint":{"line":42,"column":69,"index":1889},"line":42,"code":"  it('should not allow maniplulating htmlLabels into a false positive', () => {\n    cy.visit('http://localhost:9000/xss4.html');\n    cy.wait(1000);\n    cy.get('#the-malware').should('not.exist');\n  });","file":"integration/other/xss.spec.js","skipped":false,"dir":"cypress"},{"name":"should not allow maniplulating antiscript to run javascript","suites":["XSS"],"updatePoint":{"line":47,"column":65,"index":2087},"line":47,"code":"  it('should not allow maniplulating antiscript to run javascript', () => {\n    cy.visit('http://localhost:9000/xss5.html');\n    cy.wait(1000);\n    cy.get('#the-malware').should('not.exist');\n  });","file":"integration/other/xss.spec.js","skipped":false,"dir":"cypress"},{"name":"should not allow maniplulating antiscript to run javascript using onerror","suites":["XSS"],"updatePoint":{"line":52,"column":79,"index":2299},"line":52,"code":"  it('should not allow maniplulating antiscript to run javascript using onerror', () => {\n    cy.visit('http://localhost:9000/xss6.html');\n    cy.wait(1000);\n    cy.get('#the-malware').should('not.exist');\n  });","file":"integration/other/xss.spec.js","skipped":false,"dir":"cypress"},{"name":"should not allow maniplulating antiscript to run javascript using onerror in state diagrams with dagre wrapper","suites":["XSS"],"updatePoint":{"line":57,"column":116,"index":2548},"line":57,"code":"  it('should not allow maniplulating antiscript to run javascript using onerror in state diagrams with dagre wrapper', () => {\n    cy.visit('http://localhost:9000/xss8.html');\n    cy.wait(1000);\n    cy.get('#the-malware').should('not.exist');\n  });","file":"integration/other/xss.spec.js","skipped":false,"dir":"cypress"},{"name":"should not allow maniplulating antiscript to run javascript using onerror in state diagrams with dagre d3","suites":["XSS"],"updatePoint":{"line":62,"column":111,"index":2792},"line":62,"code":"  it('should not allow maniplulating antiscript to run javascript using onerror in state diagrams with dagre d3', () => {\n    cy.visit('http://localhost:9000/xss9.html');\n    cy.wait(1000);\n    cy.get('#the-malware').should('not.exist');\n  });","file":"integration/other/xss.spec.js","skipped":false,"dir":"cypress"},{"name":"should not allow maniplulating antiscript to run javascript using onerror in state diagrams with dagre d3","suites":["XSS"],"updatePoint":{"line":67,"column":111,"index":3036},"line":67,"code":"  it('should not allow maniplulating antiscript to run javascript using onerror in state diagrams with dagre d3', () => {\n    cy.visit('http://localhost:9000/xss10.html');\n    cy.wait(1000);\n    cy.get('#the-malware').should('not.exist');\n  });","file":"integration/other/xss.spec.js","skipped":false,"dir":"cypress"},{"name":"should not allow maniplulating antiscript to run javascript using onerror in state diagrams with dagre d3","suites":["XSS"],"updatePoint":{"line":72,"column":111,"index":3281},"line":72,"code":"  it('should not allow maniplulating antiscript to run javascript using onerror in state diagrams with dagre d3', () => {\n    cy.visit('http://localhost:9000/xss11.html');\n    cy.wait(1000);\n    cy.get('#the-malware').should('not.exist');\n  });","file":"integration/other/xss.spec.js","skipped":false,"dir":"cypress"},{"name":"should not allow maniplulating antiscript to run javascript using onerror in state diagrams with dagre d3","suites":["XSS"],"updatePoint":{"line":77,"column":111,"index":3526},"line":77,"code":"  it('should not allow maniplulating antiscript to run javascript using onerror in state diagrams with dagre d3', () => {\n    cy.visit('http://localhost:9000/xss12.html');\n    cy.wait(1000);\n    cy.get('#the-malware').should('not.exist');\n  });","file":"integration/other/xss.spec.js","skipped":false,"dir":"cypress"},{"name":"should not allow maniplulating antiscript to run javascript using onerror in state diagrams with dagre d3","suites":["XSS"],"updatePoint":{"line":82,"column":111,"index":3771},"line":82,"code":"  it('should not allow maniplulating antiscript to run javascript using onerror in state diagrams with dagre d3', () => {\n    cy.visit('http://localhost:9000/xss13.html');\n    cy.wait(1000);\n    cy.get('#the-malware').should('not.exist');\n  });","file":"integration/other/xss.spec.js","skipped":false,"dir":"cypress"},{"name":"should not allow maniplulating antiscript to run javascript iframes in class diagrams","suites":["XSS"],"updatePoint":{"line":87,"column":91,"index":3996},"line":87,"code":"  it('should not allow maniplulating antiscript to run javascript iframes in class diagrams', () => {\n    cy.visit('http://localhost:9000/xss14.html');\n    cy.wait(1000);\n    cy.get('#the-malware').should('not.exist');\n  });","file":"integration/other/xss.spec.js","skipped":false,"dir":"cypress"},{"name":"should sanitize cardinalities properly in class diagrams","suites":["XSS"],"updatePoint":{"line":92,"column":62,"index":4192},"line":92,"code":"  it('should sanitize cardinalities properly in class diagrams', () => {\n    cy.visit('http://localhost:9000/xss18.html');\n    cy.wait(1000);\n    cy.get('#the-malware').should('not.exist');\n  });","file":"integration/other/xss.spec.js","skipped":false,"dir":"cypress"},{"name":"should sanitize colons properly","suites":["XSS"],"updatePoint":{"line":97,"column":37,"index":4363},"line":97,"code":"  it('should sanitize colons properly', () => {\n    cy.visit('http://localhost:9000/xss20.html');\n    cy.wait(1000);\n    cy.get('a').click('');\n    cy.wait(1000);\n    cy.get('#the-malware').should('not.exist');\n  });","file":"integration/other/xss.spec.js","skipped":false,"dir":"cypress"},{"name":"should sanitize colons properly","suites":["XSS"],"updatePoint":{"line":104,"column":37,"index":4580},"line":104,"code":"  it('should sanitize colons properly', () => {\n    cy.visit('http://localhost:9000/xss21.html');\n    cy.wait(1000);\n    cy.get('a').click('');\n    cy.wait(1000);\n    cy.get('#the-malware').should('not.exist');\n  });","file":"integration/other/xss.spec.js","skipped":false,"dir":"cypress"},{"name":"0: should render a simple class diagram","suites":["Class diagram V2"],"updatePoint":{"line":3,"column":45,"index":137},"line":3,"code":"  it('0: should render a simple class diagram', () => {\n    imgSnapshotTest(`\n        classDiagram-v2\n\n        classA -- classB : Inheritance\n        classA -- classC : link\n        classC -- classD : link\n        classB -- classD\n\n        `, {\n      logLevel: 1,\n      flowchart: {\n        htmlLabels: false\n      }\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/classDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"1: should render a simple class diagram","suites":["Class diagram V2"],"updatePoint":{"line":20,"column":45,"index":487},"line":20,"code":"  it('1: should render a simple class diagram', () => {\n    imgSnapshotTest(`\n    classDiagram-v2\n      Class01 <|-- AveryLongClass : Cool\n      &lt;&lt;interface&gt;&gt; Class01\n      Class03 *-- Class04\n      Class05 o-- Class06\n      Class07 .. Class08\n      Class09 --> C2 : Where am i?\n      Class09 --* C3\n      Class09 --|> Class07\n      Class12 <|.. Class08\n      Class11 ..>Class12\n      Class07 : equals()\n      Class07 : Object[] elementData\n      Class01 : size()\n      Class01 : int chimp\n      Class01 : int gorilla\n      Class01 : -int privateChimp\n      Class01 : +int publicGorilla\n      Class01 : #int protectedMarmoset\n      Class08 <--> C2: Cool label\n      class Class10 {\n        &lt;&lt;service&gt;&gt;\n        int id\n        test()\n      }\n      `, {\n      logLevel: 1,\n      flowchart: {\n        htmlLabels: false\n      }\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/classDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"2: should render a simple class diagrams with cardinality","suites":["Class diagram V2"],"updatePoint":{"line":55,"column":63,"index":1385},"line":55,"code":"  it('2: should render a simple class diagrams with cardinality', () => {\n    imgSnapshotTest(`\n    classDiagram-v2\n      Class01 \"1\" <|--|> \"*\" AveryLongClass : Cool\n      &lt;&lt;interface&gt;&gt; Class01\n      Class03 \"1\" *-- \"*\" Class04\n      Class05 \"1\" o-- \"many\" Class06\n      Class07 \"1\" .. \"*\" Class08\n      Class09 \"1\" --> \"*\" C2 : Where am i?\n      Class09 \"*\" --* \"*\" C3\n      Class09 \"1\" --|> \"1\" Class07\n      Class07  : equals()\n      Class07  : Object[] elementData\n      Class01  : size()\n      Class01  : int chimp\n      Class01  : int gorilla\n      Class08 \"1\" <--> \"*\" C2: Cool label\n      class Class10 {\n        &lt;&lt;service&gt;&gt;\n        int id\n        test()\n      }\n      `, {\n      logLevel: 1,\n      flowchart: {\n        htmlLabels: false\n      }\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/classDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a simple class diagram with different visibilities","suites":["Class diagram V2"],"updatePoint":{"line":85,"column":70,"index":2204},"line":85,"code":"  it('should render a simple class diagram with different visibilities', () => {\n    imgSnapshotTest(`\n    classDiagram-v2\n      Class01 <|-- AveryLongClass : Cool\n      &lt;&lt;interface&gt;&gt; Class01\n      Class01 : -privateMethod()\n      Class01 : +publicMethod()\n      Class01 : #protectedMethod()\n      Class01 : -int privateChimp\n      Class01 : +int publicGorilla\n      Class01 : #int protectedMarmoset\n      `, {\n      logLevel: 1,\n      flowchart: {\n        htmlLabels: false\n      }\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/classDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"should render multiple class diagrams","suites":["Class diagram V2"],"updatePoint":{"line":104,"column":43,"index":2705},"line":104,"code":"  it('should render multiple class diagrams', () => {\n    imgSnapshotTest([`\n    classDiagram-v2\n      Class01 \"1\" <|--|> \"*\" AveryLongClass : Cool\n      &lt;&lt;interface&gt;&gt; Class01\n      Class03 \"1\" *-- \"*\" Class04\n      Class05 \"1\" o-- \"many\" Class06\n      Class07 \"1\" .. \"*\" Class08\n      Class09 \"1\" --> \"*\" C2 : Where am i?\n      Class09 \"*\" --* \"*\" C3\n      Class09 \"1\" --|> \"1\" Class07\n      Class07  : equals()\n      Class07  : Object[] elementData\n      Class01  : size()\n      Class01  : int chimp\n      Class01  : int gorilla\n      Class08 \"1\" <--> \"*\" C2: Cool label\n      class Class10 {\n        &lt;&lt;service&gt;&gt;\n        int id\n        test()\n      }\n      `, `\n    classDiagram-v2\n      Class01 \"1\" <|--|> \"*\" AveryLongClass : Cool\n      &lt;&lt;interface&gt;&gt; Class01\n      Class03 \"1\" *-- \"*\" Class04\n      Class05 \"1\" o-- \"many\" Class06\n      Class07 \"1\" .. \"*\" Class08\n      Class09 \"1\" --> \"*\" C2 : Where am i?\n      Class09 \"*\" --* \"*\" C3\n      Class09 \"1\" --|> \"1\" Class07\n      Class07  : equals()\n      Class07  : Object[] elementData\n      Class01  : size()\n      Class01  : int chimp\n      Class01  : int gorilla\n      Class08 \"1\" <--> \"*\" C2: Cool label\n      class Class10 {\n        &lt;&lt;service&gt;&gt;\n        int id\n        test()\n      }\n      `], {\n      logLevel: 1,\n      flowchart: {\n        htmlLabels: false\n      }\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/classDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"4: should render a simple class diagram with comments","suites":["Class diagram V2"],"updatePoint":{"line":155,"column":59,"index":4126},"line":155,"code":"  it('4: should render a simple class diagram with comments', () => {\n    imgSnapshotTest(`\n    classDiagram-v2\n      %% this is a comment\n      Class01 <|-- AveryLongClass : Cool\n      &lt;&lt;interface&gt;&gt; Class01\n      Class03 *-- Class04\n      Class05 o-- Class06\n      Class07 .. Class08\n      Class09 --> C2 : Where am i?\n      Class09 --* C3\n      Class09 --|> Class07\n      Class07 : equals()\n      Class07 : Object[] elementData\n      Class01 : size()\n      Class01 : int chimp\n      Class01 : int gorilla\n      Class08 <--> C2: Cool label\n      class Class10 {\n        &lt;&lt;service&gt;&gt;\n        int id\n        test()\n      }\n      `, {\n      logLevel: 1,\n      flowchart: {\n        htmlLabels: false\n      }\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/classDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"5: should render a simple class diagram with abstract method","suites":["Class diagram V2"],"updatePoint":{"line":186,"column":66,"index":4894},"line":186,"code":"  it('5: should render a simple class diagram with abstract method', () => {\n    imgSnapshotTest(`\n    classDiagram-v2\n      Class01 <|-- AveryLongClass : Cool\n      Class01 : someMethod()*\n      `, {\n      logLevel: 1,\n      flowchart: {\n        htmlLabels: false\n      }\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/classDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"6: should render a simple class diagram with static method","suites":["Class diagram V2"],"updatePoint":{"line":199,"column":64,"index":5198},"line":199,"code":"  it('6: should render a simple class diagram with static method', () => {\n    imgSnapshotTest(`\n    classDiagram-v2\n      Class01 <|-- AveryLongClass : Cool\n      Class01 : someMethod()$\n      `, {\n      logLevel: 1,\n      flowchart: {\n        htmlLabels: false\n      }\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/classDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"7: should render a simple class diagram with Generic class","suites":["Class diagram V2"],"updatePoint":{"line":212,"column":64,"index":5502},"line":212,"code":"  it('7: should render a simple class diagram with Generic class', () => {\n    imgSnapshotTest(`\n    classDiagram-v2\n    class Class01~T~\n      Class01 : size()\n      Class01 : int chimp\n      Class01 : int gorilla\n      Class08 <--> C2: Cool label\n      class Class10~T~ {\n        &lt;&lt;service&gt;&gt;\n        int id\n        test()\n      }\n      `, {\n      logLevel: 1,\n      flowchart: {\n        htmlLabels: false\n      }\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/classDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"8: should render a simple class diagram with Generic class and relations","suites":["Class diagram V2"],"updatePoint":{"line":233,"column":78,"index":5976},"line":233,"code":"  it('8: should render a simple class diagram with Generic class and relations', () => {\n    imgSnapshotTest(`\n    classDiagram-v2\n    Class01~T~ <|-- AveryLongClass : Cool\n    Class03~T~ *-- Class04~T~\n      Class01 : size()\n      Class01 : int chimp\n      Class01 : int gorilla\n      Class08 <--> C2: Cool label\n      class Class10~T~ {\n        &lt;&lt;service&gt;&gt;\n        int id\n        test()\n      }\n      `, {\n      logLevel: 1,\n      flowchart: {\n        htmlLabels: false\n      }\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/classDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"9: should render a simple class diagram with clickable link","suites":["Class diagram V2"],"updatePoint":{"line":255,"column":65,"index":6488},"line":255,"code":"  it('9: should render a simple class diagram with clickable link', () => {\n    imgSnapshotTest(`\n    classDiagram-v2\n    Class01~T~ <|-- AveryLongClass : Cool\n    Class03~T~ *-- Class04~T~\n      Class01 : size()\n      Class01 : int chimp\n      Class01 : int gorilla\n      Class08 <--> C2: Cool label\n      class Class10~T~ {\n        &lt;&lt;service&gt;&gt;\n        int id\n        test()\n      }\n      link Class01 \"google.com\" \"A Tooltip\"\n      `, {\n      logLevel: 1,\n      flowchart: {\n        htmlLabels: false\n      }\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/classDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"10: should render a simple class diagram with clickable callback","suites":["Class diagram V2"],"updatePoint":{"line":278,"column":70,"index":7049},"line":278,"code":"  it('10: should render a simple class diagram with clickable callback', () => {\n    imgSnapshotTest(`\n    classDiagram-v2\n    Class01~T~ <|-- AveryLongClass : Cool\n    Class03~T~ *-- Class04~T~\n      Class01 : size()\n      Class01 : int chimp\n      Class01 : int gorilla\n      Class08 <--> C2: Cool label\n      class Class10~T~ {\n        &lt;&lt;service&gt;&gt;\n        int id\n        test()\n      }\n      callback Class01 \"functionCall\" \"A Tooltip\"\n      `, {\n      logLevel: 1,\n      flowchart: {\n        htmlLabels: false\n      }\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/classDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"11: should render a simple class diagram with return type on method","suites":["Class diagram V2"],"updatePoint":{"line":301,"column":73,"index":7619},"line":301,"code":"  it('11: should render a simple class diagram with return type on method', () => {\n    imgSnapshotTest(`\n    classDiagram-v2\n      class Class10~T~ {\n        int[] id\n        test(int[] ids) bool\n        testArray() bool[]\n      }\n      `, {\n      logLevel: 1,\n      flowchart: {\n        htmlLabels: false\n      }\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/classDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"12: should render a simple class diagram with generic types","suites":["Class diagram V2"],"updatePoint":{"line":317,"column":65,"index":7959},"line":317,"code":"  it('12: should render a simple class diagram with generic types', () => {\n    imgSnapshotTest(`\n    classDiagram-v2\n      class Class10~T~ {\n        int[] id\n        List~int~ ids\n        test(List~int~ ids) List~bool~\n        testArray() bool[]\n      }\n      `, {\n      logLevel: 1,\n      flowchart: {\n        htmlLabels: false\n      }\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/classDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"13: should render a simple class diagram with css classes applied","suites":["Class diagram V2"],"updatePoint":{"line":334,"column":71,"index":8337},"line":334,"code":"  it('13: should render a simple class diagram with css classes applied', () => {\n    imgSnapshotTest(`\n    classDiagram-v2\n      class Class10 {\n        int[] id\n        List~int~ ids\n        test(List~int~ ids) List~bool~\n        testArray() bool[]\n      }\n\n      cssClass \"Class10\" exClass2\n      `, {\n      logLevel: 1,\n      flowchart: {\n        htmlLabels: false\n      }\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/classDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"14: should render a simple class diagram with css classes applied directly","suites":["Class diagram V2"],"updatePoint":{"line":353,"column":80,"index":8756},"line":353,"code":"  it('14: should render a simple class diagram with css classes applied directly', () => {\n    imgSnapshotTest(`\n    classDiagram-v2\n      class Class10:::exClass2 {\n        int[] id\n        List~int~ ids\n        test(List~int~ ids) List~bool~\n        testArray() bool[]\n      }\n      `, {\n      logLevel: 1,\n      flowchart: {\n        htmlLabels: false\n      }\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/classDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"15: should render a simple class diagram with css classes applied two multiple classes","suites":["Class diagram V2"],"updatePoint":{"line":370,"column":92,"index":9163},"line":370,"code":"  it('15: should render a simple class diagram with css classes applied two multiple classes', () => {\n    imgSnapshotTest(`\n    classDiagram-v2\n      class Class10\n      class Class20\n\n      cssClass \"Class10, class20\" exClass2\n      `, {\n      logLevel: 1,\n      flowchart: {\n        htmlLabels: false\n      }\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/classDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"16a: should render a simple class diagram with static field","suites":["Class diagram V2"],"updatePoint":{"line":385,"column":65,"index":9481},"line":385,"code":"  it('16a: should render a simple class diagram with static field', () => {\n    imgSnapshotTest(`\n    classDiagram-v2\n      class Foo {\n        +String bar$\n      }\n            `, {\n      logLevel: 1,\n      flowchart: {\n        htmlLabels: false\n      }\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/classDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"16b: should handle the direction statemnent with TB","suites":["Class diagram V2"],"updatePoint":{"line":399,"column":57,"index":9760},"line":399,"code":"  it('16b: should handle the direction statemnent with TB', () => {\n    imgSnapshotTest(`\n      classDiagram\n        direction TB\n        class Student {\n          -idCard : IdCard\n        }\n        class IdCard{\n          -id : int\n          -name : string\n        }\n        class Bike{\n          -id : int\n          -name : string\n        }\n        Student \"1\" --o \"1\" IdCard : carries\n        Student \"1\" --o \"1\" Bike : rides\n\n      `, {\n      logLevel: 1,\n      flowchart: {\n        htmlLabels: false\n      }\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/classDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"18: should handle the direction statemnent with LR","suites":["Class diagram V2"],"updatePoint":{"line":425,"column":56,"index":10305},"line":425,"code":"  it('18: should handle the direction statemnent with LR', () => {\n    imgSnapshotTest(`\n      classDiagram\n        direction LR\n        class Student {\n          -idCard : IdCard\n        }\n        class IdCard{\n          -id : int\n          -name : string\n        }\n        class Bike{\n          -id : int\n          -name : string\n        }\n        Student \"1\" --o \"1\" IdCard : carries\n        Student \"1\" --o \"1\" Bike : rides\n\n      `, {\n      logLevel: 1,\n      flowchart: {\n        htmlLabels: false\n      }\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/classDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"17a: should handle the direction statemnent with BT","suites":["Class diagram V2"],"updatePoint":{"line":451,"column":57,"index":10851},"line":451,"code":"  it('17a: should handle the direction statemnent with BT', () => {\n    imgSnapshotTest(`\n      classDiagram\n        direction BT\n        class Student {\n          -idCard : IdCard\n        }\n        class IdCard{\n          -id : int\n          -name : string\n        }\n        class Bike{\n          -id : int\n          -name : string\n        }\n        Student \"1\" --o \"1\" IdCard : carries\n        Student \"1\" --o \"1\" Bike : rides\n\n      `, {\n      logLevel: 1,\n      flowchart: {\n        htmlLabels: false\n      }\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/classDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"17b: should handle the direction statemment with RL","suites":["Class diagram V2"],"updatePoint":{"line":477,"column":57,"index":11397},"line":477,"code":"  it('17b: should handle the direction statemment with RL', () => {\n    imgSnapshotTest(`\n      classDiagram\n        direction RL\n        class Student {\n          -idCard : IdCard\n        }\n        class IdCard{\n          -id : int\n          -name : string\n        }\n        class Bike{\n          -id : int\n          -name : string\n        }\n        Student \"1\" --o \"1\" IdCard : carries\n        Student \"1\" --o \"1\" Bike : rides\n\n      `, {\n      logLevel: 1,\n      flowchart: {\n        htmlLabels: false\n      }\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/classDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"1: should render a simple class diagram","suites":["Class diagram"],"updatePoint":{"line":3,"column":45,"index":147},"line":3,"code":"  it('1: should render a simple class diagram', () => {\n    imgSnapshotTest(`\n    classDiagram\n      Class01 <|-- AveryLongClass : Cool\n      &lt;&lt;interface&gt;&gt; Class01\n      Class03 *-- Class04\n      Class05 o-- Class06\n      Class07 .. Class08\n      Class09 --> C2 : Where am i?\n      Class09 --* C3\n      Class09 --|> Class07\n      Class12 <|.. Class08\n      Class11 ..>Class12\n      Class07 : equals()\n      Class07 : Object[] elementData\n      Class01 : size()\n      Class01 : int chimp\n      Class01 : int gorilla\n      Class01 : -int privateChimp\n      Class01 : +int publicGorilla\n      Class01 : #int protectedMarmoset\n      Class08 <--> C2: Cool label\n      class Class10 {\n        &lt;&lt;service&gt;&gt;\n        int id\n        test()\n      }\n      `, {\n      logLevel: 1\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/classDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"2: should render a simple class diagrams with cardinality","suites":["Class diagram"],"updatePoint":{"line":35,"column":63,"index":988},"line":35,"code":"  it('2: should render a simple class diagrams with cardinality', () => {\n    imgSnapshotTest(`\n    classDiagram\n      Class01 \"1\" <|--|> \"*\" AveryLongClass : Cool\n      &lt;&lt;interface&gt;&gt; Class01\n      Class03 \"1\" *-- \"*\" Class04\n      Class05 \"1\" o-- \"many\" Class06\n      Class07 \"1\" .. \"*\" Class08\n      Class09 \"1\" --> \"*\" C2 : Where am i?\n      Class09 \"*\" --* \"*\" C3\n      Class09 \"1\" --|> \"1\" Class07\n      Class07  : equals()\n      Class07  : Object[] elementData\n      Class01  : size()\n      Class01  : int chimp\n      Class01  : int gorilla\n      Class08 \"1\" <--> \"*\" C2: Cool label\n      class Class10 {\n        &lt;&lt;service&gt;&gt;\n        int id\n        test()\n      }\n      `, {});\n    cy.get('svg');\n  });","file":"integration/rendering/classDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"3: should render a simple class diagram with different visibilities","suites":["Class diagram"],"updatePoint":{"line":60,"column":73,"index":1730},"line":60,"code":"  it('3: should render a simple class diagram with different visibilities', () => {\n    imgSnapshotTest(`\n    classDiagram\n      Class01 <|-- AveryLongClass : Cool\n      &lt;&lt;interface&gt;&gt; Class01\n      Class01 : -privateMethod()\n      Class01 : +publicMethod()\n      Class01 : #protectedMethod()\n      Class01 : -int privateChimp\n      Class01 : +int publicGorilla\n      Class01 : #int protectedMarmoset\n      `, {});\n    cy.get('svg');\n  });","file":"integration/rendering/classDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"4: should render a simple class diagram with comments","suites":["Class diagram"],"updatePoint":{"line":74,"column":59,"index":2167},"line":74,"code":"  it('4: should render a simple class diagram with comments', () => {\n    imgSnapshotTest(`\n    classDiagram\n      %% this is a comment\n      Class01 <|-- AveryLongClass : Cool\n      &lt;&lt;interface&gt;&gt; Class01\n      Class03 *-- Class04\n      Class05 o-- Class06\n      Class07 .. Class08\n      Class09 --> C2 : Where am i?\n      Class09 --* C3\n      Class09 --|> Class07\n      Class07 : equals()\n      Class07 : Object[] elementData\n      Class01 : size()\n      Class01 : int chimp\n      Class01 : int gorilla\n      Class08 <--> C2: Cool label\n      class Class10 {\n        &lt;&lt;service&gt;&gt;\n        int id\n        test()\n      }\n      `, {});\n    cy.get('svg');\n  });","file":"integration/rendering/classDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"5: should render a simple class diagram with abstract method","suites":["Class diagram"],"updatePoint":{"line":100,"column":66,"index":2855},"line":100,"code":"  it('5: should render a simple class diagram with abstract method', () => {\n    imgSnapshotTest(`\n    classDiagram\n      Class01 <|-- AveryLongClass : Cool\n      Class01 : someMethod()*\n      `, {});\n    cy.get('svg');\n  });","file":"integration/rendering/classDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"6: should render a simple class diagram with static method","suites":["Class diagram"],"updatePoint":{"line":108,"column":64,"index":3079},"line":108,"code":"  it('6: should render a simple class diagram with static method', () => {\n    imgSnapshotTest(`\n    classDiagram\n      Class01 <|-- AveryLongClass : Cool\n      Class01 : someMethod()$\n      `, {});\n    cy.get('svg');\n  });","file":"integration/rendering/classDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"7: should render a simple class diagram with Generic class","suites":["Class diagram"],"updatePoint":{"line":116,"column":64,"index":3303},"line":116,"code":"  it('7: should render a simple class diagram with Generic class', () => {\n    imgSnapshotTest(`\n    classDiagram\n    class Class01~T~\n      Class01 : size()\n      Class01 : int chimp\n      Class01 : int gorilla\n      Class08 <--> C2: Cool label\n      class Class10~T~ {\n        &lt;&lt;service&gt;&gt;\n        int id\n        test()\n      }\n      `, {});\n    cy.get('svg');\n  });","file":"integration/rendering/classDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"8: should render a simple class diagram with Generic class and relations","suites":["Class diagram"],"updatePoint":{"line":132,"column":78,"index":3697},"line":132,"code":"  it('8: should render a simple class diagram with Generic class and relations', () => {\n    imgSnapshotTest(`\n    classDiagram\n    Class01~T~ <|-- AveryLongClass : Cool\n    Class03~T~ *-- Class04~T~\n      Class01 : size()\n      Class01 : int chimp\n      Class01 : int gorilla\n      Class08 <--> C2: Cool label\n      class Class10~T~ {\n        &lt;&lt;service&gt;&gt;\n        int id\n        test()\n      }\n      `, {});\n    cy.get('svg');\n  });","file":"integration/rendering/classDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"9: should render a simple class diagram with clickable link","suites":["Class diagram"],"updatePoint":{"line":149,"column":65,"index":4129},"line":149,"code":"  it('9: should render a simple class diagram with clickable link', () => {\n    imgSnapshotTest(`\n    classDiagram\n    Class01~T~ <|-- AveryLongClass : Cool\n    Class03~T~ *-- Class04~T~\n      Class01 : size()\n      Class01 : int chimp\n      Class01 : int gorilla\n      Class08 <--> C2: Cool label\n      class Class10~T~ {\n        &lt;&lt;service&gt;&gt;\n        int id\n        test()\n      }\n      link Class01 \"google.com\" \"A Tooltip\"\n      `, {});\n    cy.get('svg');\n  });","file":"integration/rendering/classDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"10: should render a simple class diagram with clickable callback","suites":["Class diagram"],"updatePoint":{"line":167,"column":70,"index":4610},"line":167,"code":"  it('10: should render a simple class diagram with clickable callback', () => {\n    imgSnapshotTest(`\n    classDiagram\n    Class01~T~ <|-- AveryLongClass : Cool\n    Class03~T~ *-- Class04~T~\n      Class01 : size()\n      Class01 : int chimp\n      Class01 : int gorilla\n      Class08 <--> C2: Cool label\n      class Class10~T~ {\n        &lt;&lt;service&gt;&gt;\n        int id\n        test()\n      }\n      callback Class01 \"functionCall\" \"A Tooltip\"\n      `, {});\n    cy.get('svg');\n  });","file":"integration/rendering/classDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"11: should render a simple class diagram with return type on method","suites":["Class diagram"],"updatePoint":{"line":185,"column":73,"index":5100},"line":185,"code":"  it('11: should render a simple class diagram with return type on method', () => {\n    imgSnapshotTest(`\n    classDiagram\n      class Class10~T~ {\n        int[] id\n        test(int[] ids) bool\n        testArray() bool[]\n      }\n      `, {});\n    cy.get('svg');\n  });","file":"integration/rendering/classDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"12: should render a simple class diagram with generic types","suites":["Class diagram"],"updatePoint":{"line":196,"column":65,"index":5360},"line":196,"code":"  it('12: should render a simple class diagram with generic types', () => {\n    imgSnapshotTest(`\n    classDiagram\n      class Class10~T~ {\n        int[] id\n        List~int~ ids\n        test(List~int~ ids) List~bool~\n        testArray() bool[]\n      }\n      `, {});\n    cy.get('svg');\n  });","file":"integration/rendering/classDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"13: should render a simple class diagram with css classes applied","suites":["Class diagram"],"updatePoint":{"line":208,"column":71,"index":5658},"line":208,"code":"  it('13: should render a simple class diagram with css classes applied', () => {\n    imgSnapshotTest(`\n    classDiagram\n      class Class10 {\n        int[] id\n        List~int~ ids\n        test(List~int~ ids) List~bool~\n        testArray() bool[]\n      }\n\n      class Class10:::exClass2\n      `, {});\n    cy.get('svg');\n  });","file":"integration/rendering/classDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"14: should render a simple class diagram with css classes applied directly","suites":["Class diagram"],"updatePoint":{"line":222,"column":80,"index":5994},"line":222,"code":"  it('14: should render a simple class diagram with css classes applied directly', () => {\n    imgSnapshotTest(`\n    classDiagram\n      class Class10:::exClass2 {\n        int[] id\n        List~int~ ids\n        test(List~int~ ids) List~bool~\n        testArray() bool[]\n      }\n      `, {});\n    cy.get('svg');\n  });","file":"integration/rendering/classDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"15: should render a simple class diagram with css classes applied two multiple classes","suites":["Class diagram"],"updatePoint":{"line":234,"column":92,"index":6321},"line":234,"code":"  it('15: should render a simple class diagram with css classes applied two multiple classes', () => {\n    imgSnapshotTest(`\n    classDiagram\n      class Class10\n      class Class20\n\n      cssClass \"Class10, Class20\" exClass2\n      class Class20:::exClass2\n      `, {});\n    cy.get('svg');\n  });","file":"integration/rendering/classDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"16: should render multiple class diagrams","suites":["Class diagram"],"updatePoint":{"line":245,"column":47,"index":6572},"line":245,"code":"  it('16: should render multiple class diagrams', () => {\n    imgSnapshotTest([`\n    classDiagram\n      Class01 \"1\" <|--|> \"*\" AveryLongClass : Cool\n      &lt;&lt;interface&gt;&gt; Class01\n      Class03 \"1\" *-- \"*\" Class04\n      Class05 \"1\" o-- \"many\" Class06\n      Class07 \"1\" .. \"*\" Class08\n      Class09 \"1\" --> \"*\" C2 : Where am i?\n      Class09 \"*\" --* \"*\" C3\n      Class09 \"1\" --|> \"1\" Class07\n      Class07  : equals()\n      Class07  : Object[] elementData\n      Class01  : size()\n      Class01  : int chimp\n      Class01  : int gorilla\n      Class08 \"1\" <--> \"*\" C2: Cool label\n      class Class10 {\n        &lt;&lt;service&gt;&gt;\n        int id\n        test()\n      }\n      `, `\n    classDiagram\n      Class01 \"1\" <|--|> \"*\" AveryLongClass : Cool\n      &lt;&lt;interface&gt;&gt; Class01\n      Class03 \"1\" *-- \"*\" Class04\n      Class05 \"1\" o-- \"many\" Class06\n      Class07 \"1\" .. \"*\" Class08\n      Class09 \"1\" --> \"*\" C2 : Where am i?\n      Class09 \"*\" --* \"*\" C3\n      Class09 \"1\" --|> \"1\" Class07\n      Class07  : equals()\n      Class07  : Object[] elementData\n      Class01  : size()\n      Class01  : int chimp\n      Class01  : int gorilla\n      Class08 \"1\" <--> \"*\" C2: Cool label\n      class Class10 {\n        &lt;&lt;service&gt;&gt;\n        int id\n        test()\n      }\n      `], {});\n    cy.get('svg');\n  }); // it('17: should render a class diagram when useMaxWidth is true (default)', () => {","file":"integration/rendering/classDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"No config - use default","suites":["Configuration and directives - nodes should be light blue"],"updatePoint":{"line":3,"column":29,"index":165},"line":3,"code":"  it('No config - use default', () => {\n    imgSnapshotTest(`\n      graph TD\n          A(Default) --> B[/Another/]\n          A --> C[End]\n          subgraph section\n            B\n            C\n          end\n        `, {});\n    cy.get('svg');\n  });","file":"integration/rendering/conf-and-directives.spec.js","skipped":false,"dir":"cypress"},{"name":"Settigns from intitialize - nodes should be green","suites":["Configuration and directives - nodes should be light blue"],"updatePoint":{"line":15,"column":55,"index":439},"line":15,"code":"  it('Settigns from intitialize - nodes should be green', () => {\n    imgSnapshotTest(`\ngraph TD\n          A(Forest) --> B[/Another/]\n          A --> C[End]\n          subgraph section\n            B\n            C\n          end          `, {\n      theme: 'forest'\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/conf-and-directives.spec.js","skipped":false,"dir":"cypress"},{"name":"Settings from initialize overriding themeVariable - nodes shold be red","suites":["Configuration and directives - nodes should be light blue"],"updatePoint":{"line":28,"column":76,"index":755},"line":28,"code":"  it('Settings from initialize overriding themeVariable - nodes shold be red', () => {\n    imgSnapshotTest(`\n\n\n        %%{init: { 'theme': 'base', 'themeVariables':{ 'primaryColor': '#ff0000'}}}%%\ngraph TD\n          A(Start) --> B[/Another/]\n          A[/Another/] --> C[End]\n          subgraph section\n            B\n            C\n          end\n        `, {\n      theme: 'base',\n      themeVariables: {\n        primaryColor: '#ff0000'\n      },\n      logLevel: 0\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/conf-and-directives.spec.js","skipped":false,"dir":"cypress"},{"name":"Settings from directive - nodes should be grey","suites":["Configuration and directives - nodes should be light blue"],"updatePoint":{"line":49,"column":52,"index":1226},"line":49,"code":"  it('Settings from directive - nodes should be grey', () => {\n    imgSnapshotTest(`\n        %%{init: { 'logLevel': 0, 'theme': 'neutral'} }%%\ngraph TD\n          A(Start) --> B[/Another/]\n          A[/Another/] --> C[End]\n          subgraph section\n            B\n            C\n          end\n        `, {});\n    cy.get('svg');\n  });","file":"integration/rendering/conf-and-directives.spec.js","skipped":false,"dir":"cypress"},{"name":"Settings from directive overriding theme variable - nodes should be red","suites":["Configuration and directives - nodes should be light blue"],"updatePoint":{"line":62,"column":77,"index":1583},"line":62,"code":"  it('Settings from directive overriding theme variable - nodes should be red', () => {\n    imgSnapshotTest(`\n          %%{init: {'theme': 'base', 'themeVariables':{ 'primaryColor': '#ff0000'}}}%%\ngraph TD\n          A(Start) --> B[/Another/]\n          A[/Another/] --> C[End]\n          subgraph section\n            B\n            C\n          end\n        `, {});\n    cy.get('svg');\n  });","file":"integration/rendering/conf-and-directives.spec.js","skipped":false,"dir":"cypress"},{"name":"Settings from initialize and directive - nodes should be grey","suites":["Configuration and directives - nodes should be light blue"],"updatePoint":{"line":75,"column":67,"index":1959},"line":75,"code":"  it('Settings from initialize and directive - nodes should be grey', () => {\n    imgSnapshotTest(`\n      %%{init: { 'logLevel': 0, 'theme': 'neutral'} }%%\ngraph TD\n          A(Start) --> B[/Another/]\n          A[/Another/] --> C[End]\n          subgraph section\n            B\n            C\n          end\n        `, {\n      theme: 'forest'\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/conf-and-directives.spec.js","skipped":false,"dir":"cypress"},{"name":"Theme from initialize, directive overriding theme variable - nodes should be red","suites":["Configuration and directives - nodes should be light blue"],"updatePoint":{"line":90,"column":86,"index":2350},"line":90,"code":"  it('Theme from initialize, directive overriding theme variable - nodes should be red', () => {\n    imgSnapshotTest(`\n      %%{init: {'theme': 'base', 'themeVariables':{ 'primaryColor': '#ff0000'}}}%%\ngraph TD\n          A(Start) --> B[/Another/]\n          A[/Another/] --> C[End]\n          subgraph section\n            B\n            C\n          end\n        `, {\n      theme: 'base'\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/conf-and-directives.spec.js","skipped":false,"dir":"cypress"},{"name":"Theme variable from initialize, theme from directive - nodes should be red","suites":["Configuration and directives - nodes should be light blue"],"updatePoint":{"line":105,"column":80,"index":2760},"line":105,"code":"  it('Theme variable from initialize, theme from directive - nodes should be red', () => {\n    imgSnapshotTest(`\n      %%{init: { 'logLevel': 0, 'theme': 'base'} }%%\ngraph TD\n          A(Start) --> B[/Another/]\n          A[/Another/] --> C[End]\n          subgraph section\n            B\n            C\n          end\n        `, {\n      themeVariables: {\n        primaryColor: '#ff0000'\n      }\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/conf-and-directives.spec.js","skipped":false,"dir":"cypress"},{"name":"diagrams should not taint later diagrams","suites":["Configuration and directives - nodes should be light blue","when rendering several diagrams"],"updatePoint":{"line":123,"column":48,"index":3206},"line":123,"code":"    it('diagrams should not taint later diagrams', () => {\n      const url = 'http://localhost:9000/theme-directives.html';\n      cy.visit(url);\n      cy.get('svg');\n      cy.matchImageSnapshot('conf-and-directives.spec-when-rendering-several-diagrams-diagram-1');\n    });","file":"integration/rendering/conf-and-directives.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a state with states in it","suites":["State diagram"],"updatePoint":{"line":3,"column":45,"index":134},"line":3,"code":"  it('should render a state with states in it', () => {\n    imgSnapshotTest(`\n      stateDiagram\n      state PersonalizedCockpit {\n        Other\n        state  Parent {\n          C\n        }\n    }\n    `, {\n      logLevel: 0\n    });\n  });","file":"integration/rendering/current.spec.js","skipped":false,"dir":"cypress"},{"name":"34: testing the label width in percy","suites":["Flowchart"],"updatePoint":{"line":3,"column":42,"index":127},"line":3,"code":"  it('34: testing the label width in percy', () => {\n    imgSnapshotTest(`graph TD\n      A[Christmas]\n      `, {\n      theme: 'forest',\n      fontFamily: '\"Noto Sans SC\", sans-serif'\n    });\n  });","file":"integration/rendering/debug.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a simple ER diagram","suites":["Entity Relationship Diagram"],"updatePoint":{"line":3,"column":39,"index":155},"line":3,"code":"  it('should render a simple ER diagram', () => {\n    imgSnapshotTest(`\n    erDiagram\n        CUSTOMER ||--o{ ORDER : places\n        ORDER ||--|{ LINE-ITEM : contains\n      `, {\n      logLevel: 1\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/erDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render an ER diagram with a recursive relationship","suites":["Entity Relationship Diagram"],"updatePoint":{"line":13,"column":63,"index":408},"line":13,"code":"  it('should render an ER diagram with a recursive relationship', () => {\n    imgSnapshotTest(`\n    erDiagram\n        CUSTOMER ||..o{ CUSTOMER : refers\n        CUSTOMER ||--o{ ORDER : places\n        ORDER ||--|{ LINE-ITEM : contains\n      `, {\n      logLevel: 1\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/erDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render an ER diagram with multiple relationships between the same two entities","suites":["Entity Relationship Diagram"],"updatePoint":{"line":24,"column":91,"index":731},"line":24,"code":"  it('should render an ER diagram with multiple relationships between the same two entities', () => {\n    imgSnapshotTest(`\n    erDiagram\n        CUSTOMER ||--|{ ADDRESS : \"invoiced at\"\n        CUSTOMER ||--|{ ADDRESS : \"receives goods at\"\n      `, {\n      logLevel: 1\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/erDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a cyclical ER diagram","suites":["Entity Relationship Diagram"],"updatePoint":{"line":34,"column":41,"index":983},"line":34,"code":"  it('should render a cyclical ER diagram', () => {\n    imgSnapshotTest(`\n    erDiagram\n        A ||--|{ B : likes\n        B ||--|{ C : likes\n        C ||--|{ A : likes\n      `, {\n      logLevel: 1\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/erDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a not-so-simple ER diagram","suites":["Entity Relationship Diagram"],"updatePoint":{"line":45,"column":46,"index":1219},"line":45,"code":"  it('should render a not-so-simple ER diagram', () => {\n    imgSnapshotTest(`\n    erDiagram\n        CUSTOMER }|..|{ DELIVERY-ADDRESS : has\n        CUSTOMER ||--o{ ORDER : places\n        CUSTOMER ||--o{ INVOICE : \"liable for\"\n        DELIVERY-ADDRESS ||--o{ ORDER : receives\n        INVOICE ||--|{ ORDER : covers\n        ORDER ||--|{ ORDER-ITEM : includes\n        PRODUCT-CATEGORY ||--|{ PRODUCT : contains\n        PRODUCT ||--o{ ORDER-ITEM : \"ordered in\"\n      `, {\n      logLevel: 1\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/erDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render multiple ER diagrams","suites":["Entity Relationship Diagram"],"updatePoint":{"line":61,"column":40,"index":1731},"line":61,"code":"  it('should render multiple ER diagrams', () => {\n    imgSnapshotTest([`\n    erDiagram\n        CUSTOMER ||--o{ ORDER : places\n        ORDER ||--|{ LINE-ITEM : contains\n      `, `\n    erDiagram\n        CUSTOMER ||--o{ ORDER : places\n        ORDER ||--|{ LINE-ITEM : contains\n      `], {\n      logLevel: 1\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/erDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render an ER diagram with blank or empty labels","suites":["Entity Relationship Diagram"],"updatePoint":{"line":75,"column":60,"index":2089},"line":75,"code":"  it('should render an ER diagram with blank or empty labels', () => {\n    imgSnapshotTest(`\n    erDiagram\n        BOOK }|..|{ AUTHOR : \"\"\n        BOOK }|..|{ GENRE : \" \"\n        AUTHOR }|..|{ GENRE : \"  \"\n      `, {\n      logLevel: 1\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/erDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render an ER diagrams when useMaxWidth is true (default)","suites":["Entity Relationship Diagram"],"updatePoint":{"line":86,"column":69,"index":2366},"line":86,"code":"  it('should render an ER diagrams when useMaxWidth is true (default)', () => {\n    renderGraph(`\n    erDiagram\n        CUSTOMER ||--o{ ORDER : places\n        ORDER ||--|{ LINE-ITEM : contains\n      `, {\n      er: {\n        useMaxWidth: true\n      }\n    });\n    cy.get('svg').should(svg => {\n      expect(svg).to.have.attr('width', '100%');\n      expect(svg).to.have.attr('height', '465');\n      const style = svg.attr('style');\n      expect(style).to.match(/^max-width: [\\d.]+px;$/);\n      const maxWidthValue = parseFloat(style.match(/[\\d.]+/g).join('')); // use within because the absolute value can be slightly different depending on the environment ±5%\n\n      expect(maxWidthValue).to.be.within(140 * 0.95, 140 * 1.05);\n    });\n  });","file":"integration/rendering/erDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render an ER when useMaxWidth is false","suites":["Entity Relationship Diagram"],"updatePoint":{"line":106,"column":51,"index":3087},"line":106,"code":"  it('should render an ER when useMaxWidth is false', () => {\n    renderGraph(`\n    erDiagram\n        CUSTOMER ||--o{ ORDER : places\n        ORDER ||--|{ LINE-ITEM : contains\n      `, {\n      er: {\n        useMaxWidth: false\n      }\n    });\n    cy.get('svg').should(svg => {\n      const width = parseFloat(svg.attr('width')); // use within because the absolute value can be slightly different depending on the environment ±5%\n\n      expect(width).to.be.within(140 * 0.95, 140 * 1.05);\n      expect(svg).to.have.attr('height', '465');\n      expect(svg).to.not.have.attr('style');\n    });\n  });","file":"integration/rendering/erDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render entities that have no relationships","suites":["Entity Relationship Diagram"],"updatePoint":{"line":124,"column":55,"index":3684},"line":124,"code":"  it('should render entities that have no relationships', () => {\n    renderGraph(`\n    erDiagram\n        DEAD_PARROT\n        HERMIT\n        RECLUSE\n        SOCIALITE }o--o{ SOCIALITE : \"interacts with\"\n        RECLUSE }o--o{ SOCIALITE : avoids\n      `, {\n      er: {\n        useMaxWidth: false\n      }\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/erDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render entities with and without attributes","suites":["Entity Relationship Diagram"],"updatePoint":{"line":139,"column":56,"index":4021},"line":139,"code":"  it('should render entities with and without attributes', () => {\n    renderGraph(`\n    erDiagram\n        BOOK { string title }\n        AUTHOR }|..|{ BOOK : writes\n        BOOK { float price }\n      `, {\n      logLevel: 1\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/erDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render entities and attributes with big and small entity names","suites":["Entity Relationship Diagram"],"updatePoint":{"line":150,"column":75,"index":4296},"line":150,"code":"  it('should render entities and attributes with big and small entity names', () => {\n    renderGraph(`\n    erDiagram\n        PRIVATE_FINANCIAL_INSTITUTION { \n          string name\n          int    turnover\n        }\n        PRIVATE_FINANCIAL_INSTITUTION ||..|{ EMPLOYEE : employs\n        EMPLOYEE { bool officer_of_firm }\n      `, {\n      logLevel: 1\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/erDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render entities with keys","suites":["Entity Relationship Diagram"],"updatePoint":{"line":164,"column":38,"index":4644},"line":164,"code":"  it('should render entities with keys', () => {\n    renderGraph(`\n    erDiagram\n      AUTHOR_WITH_LONG_ENTITY_NAME {\n        string name PK\n      }\n      AUTHOR_WITH_LONG_ENTITY_NAME }|..|{ BOOK : writes\n      BOOK { \n          float price\n          string author FK \n          string title PK\n        }\n      `, {\n      logLevel: 1\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/erDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render entities with comments","suites":["Entity Relationship Diagram"],"updatePoint":{"line":181,"column":42,"index":5015},"line":181,"code":"  it('should render entities with comments', () => {\n    renderGraph(`\n    erDiagram\n      AUTHOR_WITH_LONG_ENTITY_NAME {\n        string name \"comment\"\n      }\n      AUTHOR_WITH_LONG_ENTITY_NAME }|..|{ BOOK : writes\n      BOOK { \n          string author \n          string title \"author comment\"\n          float price \"price comment\"\n        }\n      `, {\n      logLevel: 1\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/erDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render entities with keys and comments","suites":["Entity Relationship Diagram"],"updatePoint":{"line":198,"column":51,"index":5429},"line":198,"code":"  it('should render entities with keys and comments', () => {\n    renderGraph(`\n    erDiagram\n      AUTHOR_WITH_LONG_ENTITY_NAME {\n        string name PK \"comment\"\n      }\n      AUTHOR_WITH_LONG_ENTITY_NAME }|..|{ BOOK : writes\n      BOOK { \n          string description\n          float price \"price comment\"\n          string title PK \"title comment\"\n          string author FK \n        }\n      `, {\n      logLevel: 1\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/erDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"1: should render a simple flowchart","suites":["Flowchart v2"],"updatePoint":{"line":3,"column":41,"index":142},"line":3,"code":"  it('1: should render a simple flowchart', () => {\n    imgSnapshotTest(`flowchart TD\n      A[Christmas] -->|Get money| B(Go shopping)\n      B --> C{Let me think}\n      C -->|One| D[Laptop]\n      C -->|Two| E[iPhone]\n      C -->|Three| F[fa:fa-car Car]\n      `, {});\n  });","file":"integration/rendering/flowchart-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"2: should render a simple flowchart with diagramPadding set to 0","suites":["Flowchart v2"],"updatePoint":{"line":12,"column":70,"index":444},"line":12,"code":"  it('2: should render a simple flowchart with diagramPadding set to 0', () => {\n    imgSnapshotTest(`flowchart TD\n      A[Christmas] -->|Get money| B(Go shopping)\n      B --> C{Let me think}\n      %% this is a comment\n      C -->|One| D[Laptop]\n      C -->|Two| E[iPhone]\n      C -->|Three| F[fa:fa-car Car]\n      `, {\n      flowchart: {\n        diagramPadding: 0\n      }\n    });\n  });","file":"integration/rendering/flowchart-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"3: a link with correct arrowhead to a subgraph","suites":["Flowchart v2"],"updatePoint":{"line":26,"column":52,"index":813},"line":26,"code":"  it('3: a link with correct arrowhead to a subgraph', () => {\n    imgSnapshotTest(`flowchart TD\n        P1\n        P1 -->P1.5\n        subgraph P1.5\n          P2\n          P2.5(( A ))\n          P3\n        end\n        P2 --> P4\n        P3 --> P6\n        P1.5 --> P5\n      `, {\n      flowchart: {\n        diagramPadding: 0\n      }\n    });\n  });","file":"integration/rendering/flowchart-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"4: Length of edges","suites":["Flowchart v2"],"updatePoint":{"line":44,"column":24,"index":1128},"line":44,"code":"  it('4: Length of edges', () => {\n    imgSnapshotTest(`flowchart TD\n      L1 --- L2\n      L2 --- C\n      M1 ---> C\n      R1 .-> R2\n      R2 <.-> C\n      C -->|Label 1| E1\n      C <-- Label 2 ---> E2\n      C ----> E3\n      C <-...-> E4\n      C ======> E5\n      `, {\n      flowchart: {\n        diagramPadding: 0\n      }\n    });\n  });","file":"integration/rendering/flowchart-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"5: should render escaped without html labels","suites":["Flowchart v2"],"updatePoint":{"line":62,"column":50,"index":1487},"line":62,"code":"  it('5: should render escaped without html labels', () => {\n    imgSnapshotTest(`flowchart TD\n        a[\"<strong>Haiya</strong>\"]---->b\n      `, {\n      htmlLabels: false,\n      flowchart: {\n        htmlLabels: false\n      }\n    });\n  });","file":"integration/rendering/flowchart-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"6: should render non-escaped with html labels","suites":["Flowchart v2"],"updatePoint":{"line":72,"column":51,"index":1728},"line":72,"code":"  it('6: should render non-escaped with html labels', () => {\n    imgSnapshotTest(`flowchart TD\n        a[\"<strong>Haiya</strong>\"]===>b\n      `, {\n      htmlLabels: true,\n      flowchart: {\n        htmlLabels: true\n      },\n      securityLevel: 'loose'\n    });\n  });","file":"integration/rendering/flowchart-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"7: should render a flowchart when useMaxWidth is true (default)","suites":["Flowchart v2"],"updatePoint":{"line":83,"column":69,"index":2014},"line":83,"code":"  it('7: should render a flowchart when useMaxWidth is true (default)', () => {\n    renderGraph(`flowchart TD\n      A[Christmas] -->|Get money| B(Go shopping)\n      B --> C{Let me think}\n      C -->|One| D[Laptop]\n      C -->|Two| E[iPhone]\n      C -->|Three| F[fa:fa-car Car]\n      `, {\n      flowchart: {\n        useMaxWidth: true\n      }\n    });\n    cy.get('svg').should(svg => {\n      expect(svg).to.have.attr('width', '100%');\n      expect(svg).to.have.attr('height'); // use within because the absolute value can be slightly different depending on the environment ±5%\n\n      const height = parseFloat(svg.attr('height'));\n      expect(height).to.be.within(446 * 0.95, 446 * 1.05);\n      const style = svg.attr('style');\n      expect(style).to.match(/^max-width: [\\d.]+px;$/);\n      const maxWidthValue = parseFloat(style.match(/[\\d.]+/g).join(''));\n      expect(maxWidthValue).to.be.within(290 * 0.95 - 1, 290 * 1.05);\n    });\n  });","file":"integration/rendering/flowchart-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"8: should render a flowchart when useMaxWidth is false","suites":["Flowchart v2"],"updatePoint":{"line":107,"column":60,"index":2944},"line":107,"code":"  it('8: should render a flowchart when useMaxWidth is false', () => {\n    renderGraph(`flowchart TD\n      A[Christmas] -->|Get money| B(Go shopping)\n      B --> C{Let me think}\n      C -->|One| D[Laptop]\n      C -->|Two| E[iPhone]\n      C -->|Three| F[fa:fa-car Car]\n      `, {\n      flowchart: {\n        useMaxWidth: false\n      }\n    });\n    cy.get('svg').should(svg => {\n      const height = parseFloat(svg.attr('height'));\n      const width = parseFloat(svg.attr('width')); // use within because the absolute value can be slightly different depending on the environment ±5%\n\n      expect(height).to.be.within(446 * 0.95, 446 * 1.05);\n      expect(width).to.be.within(290 * 0.95 - 1, 290 * 1.05);\n      expect(svg).to.not.have.attr('style');\n    });\n  });","file":"integration/rendering/flowchart-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"V2 - 16: Render Stadium shape","suites":["Flowchart v2"],"updatePoint":{"line":128,"column":35,"index":3679},"line":128,"code":"  it('V2 - 16: Render Stadium shape', () => {\n    imgSnapshotTest(` flowchart TD\n      A([stadium shape test])\n      A -->|Get money| B([Go shopping])\n      B --> C([Let me think...<br />Do I want something for work,<br />something to spend every free second with,<br />or something to get around?])\n      C -->|One| D([Laptop])\n      C -->|Two| E([iPhone])\n      C -->|Three| F([Car<br/>wroom wroom])\n      click A \"index.html#link-clicked\" \"link test\"\n      click B testClick \"click test\"\n      classDef someclass fill:#f96;\n      class A someclass;\n      class C someclass;\n      `, {\n      flowchart: {\n        htmlLabels: false\n      },\n      fontFamily: 'courier'\n    });\n  });","file":"integration/rendering/flowchart-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"50: handle nested subgraphs in reverse order","suites":["Flowchart v2"],"updatePoint":{"line":148,"column":50,"index":4378},"line":148,"code":"  it('50: handle nested subgraphs in reverse order', () => {\n    imgSnapshotTest(`flowchart LR\n        a -->b\n        subgraph A\n        B\n        end\n        subgraph B\n        b\n        end\n      `, {\n      htmlLabels: true,\n      flowchart: {\n        htmlLabels: true\n      },\n      securityLevel: 'loose'\n    });\n  });","file":"integration/rendering/flowchart-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"51: handle nested subgraphs in reverse order","suites":["Flowchart v2"],"updatePoint":{"line":165,"column":50,"index":4701},"line":165,"code":"  it('51: handle nested subgraphs in reverse order', () => {\n    imgSnapshotTest(`flowchart LR\n        a -->b\n        subgraph A\n        B\n        end\n        subgraph B\n        b\n        end\n      `, {\n      htmlLabels: true,\n      flowchart: {\n        htmlLabels: true\n      },\n      securityLevel: 'loose'\n    });\n  });","file":"integration/rendering/flowchart-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"52: handle nested subgraphs in several levels","suites":["Flowchart v2"],"updatePoint":{"line":182,"column":51,"index":5025},"line":182,"code":"  it('52: handle nested subgraphs in several levels', () => {\n    imgSnapshotTest(`flowchart TB\n    b-->B\n    a-->c\n    subgraph O\n      A\n    end\n    subgraph B\n      c\n    end\n    subgraph A\n        a\n        b\n        B\n    end\n      `, {\n      htmlLabels: true,\n      flowchart: {\n        htmlLabels: true\n      },\n      securityLevel: 'loose'\n    });\n  });","file":"integration/rendering/flowchart-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"53: handle nested subgraphs with edges in and out","suites":["Flowchart v2"],"updatePoint":{"line":205,"column":55,"index":5391},"line":205,"code":"  it('53: handle nested subgraphs with edges in and out', () => {\n    imgSnapshotTest(`flowchart TB\n  internet\n  nat\n  routeur\n  lb1\n  lb2\n  compute1\n  compute2\n  subgraph project\n  routeur\n  nat\n    subgraph subnet1\n      compute1\n      lb1\n    end\n    subgraph subnet2\n      compute2\n      lb2\n    end\n  end\n  internet --> routeur\n  routeur --> subnet1 & subnet2\n  subnet1 & subnet2 --> nat --> internet\n      `, {\n      htmlLabels: true,\n      flowchart: {\n        htmlLabels: true\n      },\n      securityLevel: 'loose'\n    });\n  });","file":"integration/rendering/flowchart-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"54: handle nested subgraphs with outgoing links","suites":["Flowchart v2"],"updatePoint":{"line":237,"column":53,"index":5926},"line":237,"code":"  it('54: handle nested subgraphs with outgoing links', () => {\n    imgSnapshotTest(`flowchart TD\n  subgraph  main\n    subgraph subcontainer\n      subcontainer-child\n    end\n     subcontainer-child--> subcontainer-sibling\n  end\n      `, {\n      htmlLabels: true,\n      flowchart: {\n        htmlLabels: true\n      },\n      securityLevel: 'loose'\n    });\n  });","file":"integration/rendering/flowchart-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"55: handle nested subgraphs with outgoing links 2","suites":["Flowchart v2"],"updatePoint":{"line":253,"column":55,"index":6287},"line":253,"code":"  it('55: handle nested subgraphs with outgoing links 2', () => {\n    imgSnapshotTest(`flowchart TD\n\nsubgraph one[One]\n    subgraph sub_one[Sub One]\n        _sub_one\n    end\n    subgraph sub_two[Sub Two]\n        _sub_two\n    end\n    _one\nend\n\n%% here, either the first or the second one\nsub_one --> sub_two\n_one --> b\n      `, {\n      htmlLabels: true,\n      flowchart: {\n        htmlLabels: true\n      },\n      securityLevel: 'loose'\n    });\n  });","file":"integration/rendering/flowchart-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"56: handle nested subgraphs with outgoing links 3","suites":["Flowchart v2"],"updatePoint":{"line":277,"column":55,"index":6736},"line":277,"code":"  it('56: handle nested subgraphs with outgoing links 3', () => {\n    imgSnapshotTest(`flowchart TB\n  subgraph container_Beta\n    process_C-->Process_D\n  end\n  subgraph container_Alpha\n    process_A-->process_B\n    process_A-->|messages|process_C\n    end\n    process_B-->|via_AWSBatch|container_Beta\n      `, {\n      htmlLabels: true,\n      flowchart: {\n        htmlLabels: true\n      },\n      securityLevel: 'loose'\n    });\n  });","file":"integration/rendering/flowchart-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"57: handle nested subgraphs with outgoing links 4","suites":["Flowchart v2"],"updatePoint":{"line":295,"column":55,"index":7167},"line":295,"code":"  it('57: handle nested subgraphs with outgoing links 4', () => {\n    imgSnapshotTest(`flowchart LR\nsubgraph A\na -->b\nend\nsubgraph B\nb\nend\n      `, {\n      htmlLabels: true,\n      flowchart: {\n        htmlLabels: true\n      },\n      securityLevel: 'loose'\n    });\n  });","file":"integration/rendering/flowchart-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"57: handle nested subgraphs with outgoing links 2","suites":["Flowchart v2"],"updatePoint":{"line":311,"column":55,"index":7437},"line":311,"code":"  it('57: handle nested subgraphs with outgoing links 2', () => {\n    imgSnapshotTest(`flowchart TB\n    c1-->a2\n    subgraph one\n    a1-->a2\n    end\n    subgraph two\n    b1-->b2\n    end\n    subgraph three\n    c1-->c2\n    end\n    one --> two\n    three --> two\n    two --> c2\n      `, {\n      htmlLabels: true,\n      flowchart: {\n        htmlLabels: true\n      },\n      securityLevel: 'loose'\n    });\n  });","file":"integration/rendering/flowchart-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"57.x: handle nested subgraphs with outgoing links 5","suites":["Flowchart v2"],"updatePoint":{"line":334,"column":57,"index":7844},"line":334,"code":"  it('57.x: handle nested subgraphs with outgoing links 5', () => {\n    imgSnapshotTest(`%% this does not produce the desired result\nflowchart TB\n  subgraph container_Beta\n    process_C-->Process_D\n  end\n  subgraph container_Alpha\n    process_A-->process_B\n    process_B-->|via_AWSBatch|container_Beta\n    process_A-->|messages|process_C\n  end\n      `, {\n      htmlLabels: true,\n      flowchart: {\n        htmlLabels: true\n      },\n      securityLevel: 'loose'\n    });\n  });","file":"integration/rendering/flowchart-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"58: handle styling with style expressions","suites":["Flowchart v2"],"updatePoint":{"line":353,"column":47,"index":8309},"line":353,"code":"  it('58: handle styling with style expressions', () => {\n    imgSnapshotTest(`\n    flowchart LR\n    id1(Start)-->id2(Stop)\n    style id1 fill:#f9f,stroke:#333,stroke-width:4px\n    style id2 fill:#bbf,stroke:#f66,stroke-width:2px,color:#fff,stroke-dasharray: 5 5\n      `, {\n      htmlLabels: true,\n      flowchart: {\n        htmlLabels: true\n      },\n      securityLevel: 'loose'\n    });\n  });","file":"integration/rendering/flowchart-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"59: handle styling of subgraphs and links","suites":["Flowchart v2"],"updatePoint":{"line":367,"column":47,"index":8703},"line":367,"code":"  it('59: handle styling of subgraphs and links', () => {\n    imgSnapshotTest(`\nflowchart TD\n  A[Christmas] ==> D\n  A[Christmas] -->|Get money| B(Go shopping)\n  A[Christmas] ==> C\n  subgraph T [\"Test\"]\n    A\n    B\n    C\n  end\n\n  classDef Test fill:#F84E68,stroke:#333,color:white;\n  class A,T Test\n  classDef TestSub fill:green;\n  class T TestSub\n  linkStyle 0,1 color:orange, stroke: orange;\n      `, {\n      htmlLabels: true,\n      flowchart: {\n        htmlLabels: true\n      },\n      securityLevel: 'loose'\n    });\n  });","file":"integration/rendering/flowchart-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"60: handle styling for all node shapes - v2","suites":["Flowchart v2"],"updatePoint":{"line":392,"column":49,"index":9229},"line":392,"code":"  it('60: handle styling for all node shapes - v2', () => {\n    imgSnapshotTest(`\n      flowchart LR\n      A[red text] -->|default style| B(blue text)\n      C([red text]) -->|default style| D[[blue text]]\n      E[(red text)] -->|default style| F((blue text))\n      G>red text] -->|default style| H{blue text}\n      I{{red text}} -->|default style| J[/blue text/]\n      K[\\\\ red text\\\\] -->|default style| L[/blue text\\\\]\n      M[\\\\ red text/] -->|default style| N[blue text];\n      O(((red text))) -->|default style| P(((blue text)));\n      linkStyle default color:Sienna;\n      style A stroke:#ff0000,fill:#ffcccc,color:#ff0000;\n      style B stroke:#0000ff,fill:#ccccff,color:#0000ff;\n      style C stroke:#ff0000,fill:#ffcccc,color:#ff0000;\n      style D stroke:#0000ff,fill:#ccccff,color:#0000ff;\n      style E stroke:#ff0000,fill:#ffcccc,color:#ff0000;\n      style F stroke:#0000ff,fill:#ccccff,color:#0000ff;\n      style G stroke:#ff0000,fill:#ffcccc,color:#ff0000;\n      style H stroke:#0000ff,fill:#ccccff,color:#0000ff;\n      style I stroke:#ff0000,fill:#ffcccc,color:#ff0000;\n      style J stroke:#0000ff,fill:#ccccff,color:#0000ff;\n      style K stroke:#ff0000,fill:#ffcccc,color:#ff0000;\n      style L stroke:#0000ff,fill:#ccccff,color:#0000ff;\n      style M stroke:#ff0000,fill:#ffcccc,color:#ff0000;\n      style N stroke:#0000ff,fill:#ccccff,color:#0000ff;\n      style O stroke:#ff0000,fill:#ffcccc,color:#ff0000;\n      style P stroke:#0000ff,fill:#ccccff,color:#0000ff;\n      `, {\n      htmlLabels: true,\n      flowchart: {\n        htmlLabels: true\n      },\n      securityLevel: 'loose',\n      logLevel: 2\n    });\n  });","file":"integration/rendering/flowchart-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"61: fontawesome icons in edge labels","suites":["Flowchart v2"],"updatePoint":{"line":429,"column":42,"index":10857},"line":429,"code":"  it('61: fontawesome icons in edge labels', () => {\n    imgSnapshotTest(`\n      flowchart TD\n        C -->|fa:fa-car Car| F[fa:fa-car Car]\n      `, {\n      htmlLabels: true,\n      flowchart: {\n        htmlLabels: true\n      },\n      securityLevel: 'loose'\n    });\n  });","file":"integration/rendering/flowchart-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"62: should render styled subgraphs","suites":["Flowchart v2"],"updatePoint":{"line":441,"column":40,"index":11126},"line":441,"code":"  it('62: should render styled subgraphs', () => {\n    imgSnapshotTest(`\n      flowchart TB\n      A\n      B\n      subgraph foo[Foo SubGraph]\n        C\n        D\n      end\n      subgraph bar[Bar SubGraph]\n        E\n        F\n      end\n      G\n\n      A-->B\n      B-->C\n      C-->D\n      B-->D\n      D-->E\n      E-->A\n      E-->F\n      F-->D\n      F-->G\n      B-->G\n      G-->D\n\n      style foo fill:#F99,stroke-width:2px,stroke:#F0F,color:darkred\n      style bar fill:#999,stroke-width:10px,stroke:#0F0,color:blue\n      `, {\n      htmlLabels: true,\n      flowchart: {\n        htmlLabels: true\n      },\n      securityLevel: 'loose'\n    });\n  });","file":"integration/rendering/flowchart-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"63: title on subgraphs should be themable","suites":["Flowchart v2"],"updatePoint":{"line":478,"column":47,"index":11776},"line":478,"code":"  it('63: title on subgraphs should be themable', () => {\n    imgSnapshotTest(`\n      %%{init:{\"theme\":\"base\", \"themeVariables\": {\"primaryColor\":\"#411d4e\", \"titleColor\":\"white\", \"darkMode\":true}}}%%\n      flowchart LR\n      subgraph A\n          a --> b\n      end\n      subgraph B\n          i -->f\n      end\n      A --> B\n      `, {\n      htmlLabels: true,\n      flowchart: {\n        htmlLabels: true\n      },\n      securityLevel: 'loose'\n    });\n  });","file":"integration/rendering/flowchart-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"65: text-color from classes","suites":["Flowchart v2"],"updatePoint":{"line":497,"column":33,"index":12214},"line":497,"code":"  it('65: text-color from classes', () => {\n    imgSnapshotTest(`\n      flowchart LR\n        classDef dark fill:#000,stroke:#000,stroke-width:4px,color:#fff\n        Lorem --> Ipsum --> Dolor\n        class Lorem,Dolor dark\n      `, {\n      htmlLabels: true,\n      flowchart: {\n        htmlLabels: true\n      },\n      securityLevel: 'loose'\n    });\n  });","file":"integration/rendering/flowchart-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"66: More nested subgraph cases (TB)","suites":["Flowchart v2"],"updatePoint":{"line":511,"column":41,"index":12575},"line":511,"code":"  it('66: More nested subgraph cases (TB)', () => {\n    imgSnapshotTest(`\nflowchart TB\n    subgraph two\n    b1\n    end\n    subgraph three\n    c2\n    end\n\n    three --> two\n    two --> c2\n\n      `, {\n      htmlLabels: true,\n      flowchart: {\n        htmlLabels: true\n      },\n      securityLevel: 'loose'\n    });\n  });","file":"integration/rendering/flowchart-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"67: More nested subgraph cases (RL)","suites":["Flowchart v2"],"updatePoint":{"line":532,"column":41,"index":12894},"line":532,"code":"  it('67: More nested subgraph cases (RL)', () => {\n    imgSnapshotTest(`\nflowchart RL\n    subgraph two\n    b1\n    end\n    subgraph three\n    c2\n    end\n\n    three --> two\n    two --> c2\n\n      `, {\n      htmlLabels: true,\n      flowchart: {\n        htmlLabels: true\n      },\n      securityLevel: 'loose'\n    });\n  });","file":"integration/rendering/flowchart-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"68: More nested subgraph cases (BT)","suites":["Flowchart v2"],"updatePoint":{"line":553,"column":41,"index":13213},"line":553,"code":"  it('68: More nested subgraph cases (BT)', () => {\n    imgSnapshotTest(`\nflowchart BT\n    subgraph two\n    b1\n    end\n    subgraph three\n    c2\n    end\n\n    three --> two\n    two --> c2\n\n      `, {\n      htmlLabels: true,\n      flowchart: {\n        htmlLabels: true\n      },\n      securityLevel: 'loose'\n    });\n  });","file":"integration/rendering/flowchart-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"69: More nested subgraph cases (LR)","suites":["Flowchart v2"],"updatePoint":{"line":574,"column":41,"index":13532},"line":574,"code":"  it('69: More nested subgraph cases (LR)', () => {\n    imgSnapshotTest(`\nflowchart LR\n    subgraph two\n    b1\n    end\n    subgraph three\n    c2\n    end\n\n    three --> two\n    two --> c2\n\n      `, {\n      htmlLabels: true,\n      flowchart: {\n        htmlLabels: true\n      },\n      securityLevel: 'loose'\n    });\n  });","file":"integration/rendering/flowchart-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"70: Handle nested subgraph cases (TB) link out and link between subgraphs","suites":["Flowchart v2"],"updatePoint":{"line":595,"column":79,"index":13889},"line":595,"code":"  it('70: Handle nested subgraph cases (TB) link out and link between subgraphs', () => {\n    imgSnapshotTest(`\nflowchart TB\n   subgraph S1\n    sub1 -->sub2\n   end\n  subgraph S2\n    sub4\n   end\n   S1 --> S2\n   sub1 --> sub4\n      `, {\n      htmlLabels: true,\n      flowchart: {\n        htmlLabels: true\n      },\n      securityLevel: 'loose'\n    });\n  });","file":"integration/rendering/flowchart-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"71: Handle nested subgraph cases (RL) link out and link between subgraphs","suites":["Flowchart v2"],"updatePoint":{"line":614,"column":79,"index":14244},"line":614,"code":"  it('71: Handle nested subgraph cases (RL) link out and link between subgraphs', () => {\n    imgSnapshotTest(`\nflowchart RL\n   subgraph S1\n    sub1 -->sub2\n   end\n  subgraph S2\n    sub4\n   end\n   S1 --> S2\n   sub1 --> sub4\n      `, {\n      htmlLabels: true,\n      flowchart: {\n        htmlLabels: true\n      },\n      securityLevel: 'loose'\n    });\n  });","file":"integration/rendering/flowchart-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"72: Handle nested subgraph cases (BT) link out and link between subgraphs","suites":["Flowchart v2"],"updatePoint":{"line":633,"column":79,"index":14599},"line":633,"code":"  it('72: Handle nested subgraph cases (BT) link out and link between subgraphs', () => {\n    imgSnapshotTest(`\nflowchart BT\n   subgraph S1\n    sub1 -->sub2\n   end\n  subgraph S2\n    sub4\n   end\n   S1 --> S2\n   sub1 --> sub4\n      `, {\n      htmlLabels: true,\n      flowchart: {\n        htmlLabels: true\n      },\n      securityLevel: 'loose'\n    });\n  });","file":"integration/rendering/flowchart-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"74: Handle nested subgraph cases (RL) link out and link between subgraphs","suites":["Flowchart v2"],"updatePoint":{"line":652,"column":79,"index":14954},"line":652,"code":"  it('74: Handle nested subgraph cases (RL) link out and link between subgraphs', () => {\n    imgSnapshotTest(`\nflowchart RL\n   subgraph S1\n    sub1 -->sub2\n   end\n  subgraph S2\n    sub4\n   end\n   S1 --> S2\n   sub1 --> sub4\n      `, {\n      htmlLabels: true,\n      flowchart: {\n        htmlLabels: true\n      },\n      securityLevel: 'loose'\n    });\n  });","file":"integration/rendering/flowchart-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"74: Handle labels for multiple edges from and to the same couple of nodes","suites":["Flowchart v2"],"updatePoint":{"line":671,"column":79,"index":15309},"line":671,"code":"  it('74: Handle labels for multiple edges from and to the same couple of nodes', () => {\n    imgSnapshotTest(`\nflowchart RL\n    subgraph one\n      a1 -- l1 --> a2\n      a1 -- l2 --> a2\n    end\n      `, {\n      htmlLabels: true,\n      flowchart: {\n        htmlLabels: true\n      },\n      securityLevel: 'loose'\n    });\n  });","file":"integration/rendering/flowchart-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"76: handle unicode encoded character with HTML labels true","suites":["Flowchart v2"],"updatePoint":{"line":686,"column":64,"index":15619},"line":686,"code":"  it('76: handle unicode encoded character with HTML labels true', () => {\n    imgSnapshotTest(`flowchart TB\n      a{{\"Lorem 'ipsum' dolor 'sit' amet, 'consectetur' adipiscing 'elit'.\"}}\n      --> b{{\"Lorem #quot;ipsum#quot; dolor #quot;sit#quot; amet,#quot;consectetur#quot; adipiscing #quot;elit#quot;.\"}}\n      `, {\n      htmlLabels: true,\n      flowchart: {\n        htmlLabels: true\n      },\n      securityLevel: 'loose'\n    });\n  });","file":"integration/rendering/flowchart-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"2050: handling of different rendering direction in subgraphs","suites":["Flowchart v2"],"updatePoint":{"line":698,"column":66,"index":16060},"line":698,"code":"  it('2050: handling of different rendering direction in subgraphs', () => {\n    imgSnapshotTest(`\n    flowchart LR\n\n      subgraph TOP\n        direction TB\n        subgraph B1\n            direction RL\n            i1 -->f1\n        end\n        subgraph B2\n            direction BT\n            i2 -->f2\n        end\n      end\n      A --> TOP --> B\n      B1 --> B2\n      `, {\n      htmlLabels: true,\n      flowchart: {\n        htmlLabels: true\n      },\n      securityLevel: 'loose'\n    });\n  });","file":"integration/rendering/flowchart-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"2388: handling default in the node name","suites":["Flowchart v2"],"updatePoint":{"line":723,"column":45,"index":16531},"line":723,"code":"  it('2388: handling default in the node name', () => {\n    imgSnapshotTest(`\n      flowchart LR\n      default-index.js --> dot.template.js\n      index.js --> module-utl.js\n      `, {\n      htmlLabels: true,\n      flowchart: {\n        htmlLabels: true\n      },\n      securityLevel: 'loose'\n    });\n  });","file":"integration/rendering/flowchart-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"1: should render a simple flowchart no htmlLabels","suites":["Graph"],"updatePoint":{"line":3,"column":55,"index":149},"line":3,"code":"  it('1: should render a simple flowchart no htmlLabels', () => {\n    imgSnapshotTest(`graph TD\n      A[Christmas] -->|Get money| B(Go shopping)\n      B --> C{Let me think}\n      C -->|One| D[Laptop]\n      C -->|Two| E[iPhone]\n      C -->|Three| F[fa:fa-car Car]\n      `, {\n      flowchart: {\n        htmlLabels: false\n      },\n      fontFamily: 'courier'\n    });\n  });","file":"integration/rendering/flowchart.spec.js","skipped":false,"dir":"cypress"},{"name":"2: should render a simple flowchart with htmlLabels","suites":["Graph"],"updatePoint":{"line":17,"column":57,"index":521},"line":17,"code":"  it('2: should render a simple flowchart with htmlLabels', () => {\n    imgSnapshotTest(`graph TD\n      A[Christmas] -->|Get money| B(Go shopping)\n      B --> C{Let me think}\n      C -->|One| D[Laptop]\n      C -->|Two| E[iPhone]\n      C -->|Three| F[fa:fa-car Car]\n      `, {\n      flowchart: {\n        htmlLabels: true\n      },\n      fontFamily: 'courier'\n    });\n  });","file":"integration/rendering/flowchart.spec.js","skipped":false,"dir":"cypress"},{"name":"3: should render a simple flowchart with line breaks","suites":["Graph"],"updatePoint":{"line":31,"column":58,"index":893},"line":31,"code":"  it('3: should render a simple flowchart with line breaks', () => {\n    imgSnapshotTest(`\n    graph TD\n      A[Christmas] -->|Get money| B(Go shopping)\n      B --> C{Let me thinksssss<br/>ssssssssssssssssssssss<br/>sssssssssssssssssssssssssss}\n      C -->|One| D[Laptop]\n      C -->|Two| E[iPhone]\n      C -->|Three| F[Car]\n      `, {\n      fontFamily: 'courier'\n    });\n  });","file":"integration/rendering/flowchart.spec.js","skipped":false,"dir":"cypress"},{"name":"4: should render a simple flowchart with trapezoid and inverse trapezoid vertex options.","suites":["Graph"],"updatePoint":{"line":43,"column":94,"index":1307},"line":43,"code":"  it('4: should render a simple flowchart with trapezoid and inverse trapezoid vertex options.', () => {\n    imgSnapshotTest(`\n    graph TD\n      A[/Christmas\\\\]\n      A -->|Get money| B[\\\\Go shopping/]\n      B --> C{Let me thinksssss<br/>ssssssssssssssssssssss<br/>sssssssssssssssssssssssssss}\n      C -->|One| D[/Laptop/]\n      C -->|Two| E[\\\\iPhone\\\\]\n      C -->|Three| F[Car]\n      `, {\n      fontFamily: 'courier'\n    });\n  });","file":"integration/rendering/flowchart.spec.js","skipped":false,"dir":"cypress"},{"name":"5: should style nodes via a class.","suites":["Graph"],"updatePoint":{"line":56,"column":40,"index":1687},"line":56,"code":"  it('5: should style nodes via a class.', () => {\n    imgSnapshotTest(`\n    graph TD\n      1A --> 1B\n      1B --> 1C\n      1C --> D\n      1C --> E\n\n      classDef processHead fill:#888888,color:white,font-weight:bold,stroke-width:3px,stroke:#001f3f\n      class 1A,1B,D,E processHead\n      `, {\n      fontFamily: 'courier'\n    });\n  });","file":"integration/rendering/flowchart.spec.js","skipped":false,"dir":"cypress"},{"name":"6: should render a flowchart full of circles","suites":["Graph"],"updatePoint":{"line":70,"column":50,"index":2034},"line":70,"code":"  it('6: should render a flowchart full of circles', () => {\n    imgSnapshotTest(`\n    graph LR\n      47(SAM.CommonFA.FMESummary)-->48(SAM.CommonFA.CommonFAFinanceBudget)\n      37(SAM.CommonFA.BudgetSubserviceLineVolume)-->48(SAM.CommonFA.CommonFAFinanceBudget)\n      35(SAM.CommonFA.PopulationFME)-->47(SAM.CommonFA.FMESummary)\n      41(SAM.CommonFA.MetricCost)-->47(SAM.CommonFA.FMESummary)\n      44(SAM.CommonFA.MetricOutliers)-->47(SAM.CommonFA.FMESummary)\n      46(SAM.CommonFA.MetricOpportunity)-->47(SAM.CommonFA.FMESummary)\n      40(SAM.CommonFA.OPVisits)-->47(SAM.CommonFA.FMESummary)\n      38(SAM.CommonFA.CommonFAFinanceRefund)-->47(SAM.CommonFA.FMESummary)\n      43(SAM.CommonFA.CommonFAFinancePicuDays)-->47(SAM.CommonFA.FMESummary)\n      42(SAM.CommonFA.CommonFAFinanceNurseryDays)-->47(SAM.CommonFA.FMESummary)\n      45(SAM.CommonFA.MetricPreOpportunity)-->46(SAM.CommonFA.MetricOpportunity)\n      35(SAM.CommonFA.PopulationFME)-->45(SAM.CommonFA.MetricPreOpportunity)\n      41(SAM.CommonFA.MetricCost)-->45(SAM.CommonFA.MetricPreOpportunity)\n      41(SAM.CommonFA.MetricCost)-->44(SAM.CommonFA.MetricOutliers)\n      39(SAM.CommonFA.ChargeDetails)-->43(SAM.CommonFA.CommonFAFinancePicuDays)\n      39(SAM.CommonFA.ChargeDetails)-->42(SAM.CommonFA.CommonFAFinanceNurseryDays)\n      39(SAM.CommonFA.ChargeDetails)-->41(SAM.CommonFA.MetricCost)\n      39(SAM.CommonFA.ChargeDetails)-->40(SAM.CommonFA.OPVisits)\n      35(SAM.CommonFA.PopulationFME)-->39(SAM.CommonFA.ChargeDetails)\n      36(SAM.CommonFA.PremetricCost)-->39(SAM.CommonFA.ChargeDetails)\n      `, {\n      fontFamily: 'courier'\n    });\n  });","file":"integration/rendering/flowchart.spec.js","skipped":false,"dir":"cypress"},{"name":"7: should render a flowchart full of icons","suites":["Graph"],"updatePoint":{"line":97,"column":48,"index":3646},"line":97,"code":"  it('7: should render a flowchart full of icons', () => {\n    imgSnapshotTest(`\n    graph TD\n      9e122290_1ec3_e711_8c5a_005056ad0002(\"fa:fa-creative-commons My System | Test Environment\")\n      82072290_1ec3_e711_8c5a_005056ad0002(\"fa:fa-cogs Shared Business Logic Server:Service 1\")\n      db052290_1ec3_e711_8c5a_005056ad0002(\"fa:fa-cogs Shared Business Logic Server:Service 2\")\n      4e112290_1ec3_e711_8c5a_005056ad0002(\"fa:fa-cogs Shared Report Server:Service 1\")\n      30122290_1ec3_e711_8c5a_005056ad0002(\"fa:fa-cogs Shared Report Server:Service 2\")\n      5e112290_1ec3_e711_8c5a_005056ad0002(\"fa:fa-cogs Dedicated Test Business Logic Server:Service 1\")\n      c1112290_1ec3_e711_8c5a_005056ad0002(\"fa:fa-cogs Dedicated Test Business Logic Server:Service 2\")\n      b7042290_1ec3_e711_8c5a_005056ad0002(\"fa:fa-circle [DBServer\\\\SharedDbInstance].[SupportDb]\")\n      8f102290_1ec3_e711_8c5a_005056ad0002(\"fa:fa-circle [DBServer\\\\SharedDbInstance].[DevelopmentDb]\")\n      0e102290_1ec3_e711_8c5a_005056ad0002(\"fa:fa-circle [DBServer\\\\SharedDbInstance].[TestDb]\")\n      07132290_1ec3_e711_8c5a_005056ad0002(\"fa:fa-circle [DBServer\\\\SharedDbInstance].[SharedReportingDb]\")\n      c7072290_1ec3_e711_8c5a_005056ad0002(\"fa:fa-server Shared Business Logic Server\")\n      ca122290_1ec3_e711_8c5a_005056ad0002(\"fa:fa-server Shared Report Server\")\n      68102290_1ec3_e711_8c5a_005056ad0002(\"fa:fa-server Dedicated Test Business Logic Server\")\n      f4112290_1ec3_e711_8c5a_005056ad0002(\"fa:fa-database [DBServer\\\\SharedDbInstance]\")\n      d6072290_1ec3_e711_8c5a_005056ad0002(\"fa:fa-server DBServer\")\n      71082290_1ec3_e711_8c5a_005056ad0002(\"fa:fa-cogs DBServer\\\\:MSSQLSERVER\")\n      c0102290_1ec3_e711_8c5a_005056ad0002(\"fa:fa-cogs DBServer\\\\:SQLAgent\")\n      9a072290_1ec3_e711_8c5a_005056ad0002(\"fa:fa-cogs DBServer\\\\:SQLBrowser\")\n      1d0a2290_1ec3_e711_8c5a_005056ad0002(\"fa:fa-server VmHost1\")\n      200a2290_1ec3_e711_8c5a_005056ad0002(\"fa:fa-server VmHost2\")\n      1c0a2290_1ec3_e711_8c5a_005056ad0002(\"fa:fa-server VmHost3\")\n      9e122290_1ec3_e711_8c5a_005056ad0002-->82072290_1ec3_e711_8c5a_005056ad0002\n      9e122290_1ec3_e711_8c5a_005056ad0002-->db052290_1ec3_e711_8c5a_005056ad0002\n      9e122290_1ec3_e711_8c5a_005056ad0002-->4e112290_1ec3_e711_8c5a_005056ad0002\n      9e122290_1ec3_e711_8c5a_005056ad0002-->30122290_1ec3_e711_8c5a_005056ad0002\n      9e122290_1ec3_e711_8c5a_005056ad0002-->5e112290_1ec3_e711_8c5a_005056ad0002\n      9e122290_1ec3_e711_8c5a_005056ad0002-->c1112290_1ec3_e711_8c5a_005056ad0002\n      82072290_1ec3_e711_8c5a_005056ad0002-->b7042290_1ec3_e711_8c5a_005056ad0002\n      82072290_1ec3_e711_8c5a_005056ad0002-->8f102290_1ec3_e711_8c5a_005056ad0002\n      82072290_1ec3_e711_8c5a_005056ad0002-->0e102290_1ec3_e711_8c5a_005056ad0002\n      82072290_1ec3_e711_8c5a_005056ad0002-->c7072290_1ec3_e711_8c5a_005056ad0002\n      db052290_1ec3_e711_8c5a_005056ad0002-->c7072290_1ec3_e711_8c5a_005056ad0002\n      db052290_1ec3_e711_8c5a_005056ad0002-->82072290_1ec3_e711_8c5a_005056ad0002\n      4e112290_1ec3_e711_8c5a_005056ad0002-->b7042290_1ec3_e711_8c5a_005056ad0002\n      4e112290_1ec3_e711_8c5a_005056ad0002-->8f102290_1ec3_e711_8c5a_005056ad0002\n      4e112290_1ec3_e711_8c5a_005056ad0002-->0e102290_1ec3_e711_8c5a_005056ad0002\n      4e112290_1ec3_e711_8c5a_005056ad0002-->07132290_1ec3_e711_8c5a_005056ad0002\n      4e112290_1ec3_e711_8c5a_005056ad0002-->ca122290_1ec3_e711_8c5a_005056ad0002\n      30122290_1ec3_e711_8c5a_005056ad0002-->ca122290_1ec3_e711_8c5a_005056ad0002\n      30122290_1ec3_e711_8c5a_005056ad0002-->4e112290_1ec3_e711_8c5a_005056ad0002\n      5e112290_1ec3_e711_8c5a_005056ad0002-->8f102290_1ec3_e711_8c5a_005056ad0002\n      5e112290_1ec3_e711_8c5a_005056ad0002-->68102290_1ec3_e711_8c5a_005056ad0002\n      c1112290_1ec3_e711_8c5a_005056ad0002-->68102290_1ec3_e711_8c5a_005056ad0002\n      c1112290_1ec3_e711_8c5a_005056ad0002-->5e112290_1ec3_e711_8c5a_005056ad0002\n      b7042290_1ec3_e711_8c5a_005056ad0002-->f4112290_1ec3_e711_8c5a_005056ad0002\n      8f102290_1ec3_e711_8c5a_005056ad0002-->f4112290_1ec3_e711_8c5a_005056ad0002\n      0e102290_1ec3_e711_8c5a_005056ad0002-->f4112290_1ec3_e711_8c5a_005056ad0002\n      07132290_1ec3_e711_8c5a_005056ad0002-->f4112290_1ec3_e711_8c5a_005056ad0002\n      c7072290_1ec3_e711_8c5a_005056ad0002-->1d0a2290_1ec3_e711_8c5a_005056ad0002\n      ca122290_1ec3_e711_8c5a_005056ad0002-->200a2290_1ec3_e711_8c5a_005056ad0002\n      68102290_1ec3_e711_8c5a_005056ad0002-->1c0a2290_1ec3_e711_8c5a_005056ad0002\n      f4112290_1ec3_e711_8c5a_005056ad0002-->d6072290_1ec3_e711_8c5a_005056ad0002\n      f4112290_1ec3_e711_8c5a_005056ad0002-->71082290_1ec3_e711_8c5a_005056ad0002\n      f4112290_1ec3_e711_8c5a_005056ad0002-->c0102290_1ec3_e711_8c5a_005056ad0002\n      f4112290_1ec3_e711_8c5a_005056ad0002-->9a072290_1ec3_e711_8c5a_005056ad0002\n      d6072290_1ec3_e711_8c5a_005056ad0002-->1c0a2290_1ec3_e711_8c5a_005056ad0002\n      71082290_1ec3_e711_8c5a_005056ad0002-->d6072290_1ec3_e711_8c5a_005056ad0002\n      c0102290_1ec3_e711_8c5a_005056ad0002-->d6072290_1ec3_e711_8c5a_005056ad0002\n      c0102290_1ec3_e711_8c5a_005056ad0002-->71082290_1ec3_e711_8c5a_005056ad0002\n      9a072290_1ec3_e711_8c5a_005056ad0002-->d6072290_1ec3_e711_8c5a_005056ad0002\n      9a072290_1ec3_e711_8c5a_005056ad0002-->71082290_1ec3_e711_8c5a_005056ad0002\n      `, {\n      fontFamily: 'courier'\n    });\n  });","file":"integration/rendering/flowchart.spec.js","skipped":false,"dir":"cypress"},{"name":"8: should render labels with numbers at the start","suites":["Graph"],"updatePoint":{"line":166,"column":55,"index":9022},"line":166,"code":"  it('8: should render labels with numbers at the start', () => {\n    imgSnapshotTest(`\n    graph TB;subgraph \"number as labels\";1;end;\n      `, {\n      fontFamily: 'courier'\n    });\n  });","file":"integration/rendering/flowchart.spec.js","skipped":false,"dir":"cypress"},{"name":"9: should render subgraphs","suites":["Graph"],"updatePoint":{"line":173,"column":32,"index":9188},"line":173,"code":"  it('9: should render subgraphs', () => {\n    imgSnapshotTest(`\n    graph TB\n      subgraph One\n        a1-->a2\n      end\n      `, {\n      fontFamily: 'courier'\n    });\n  });","file":"integration/rendering/flowchart.spec.js","skipped":false,"dir":"cypress"},{"name":"10: should render subgraphs with a title starting with a digit","suites":["Graph"],"updatePoint":{"line":183,"column":68,"index":9400},"line":183,"code":"  it('10: should render subgraphs with a title starting with a digit', () => {\n    imgSnapshotTest(`\n    graph TB\n      subgraph 2Two\n        a1-->a2\n      end\n      `, {\n      fontFamily: 'courier'\n    });\n  });","file":"integration/rendering/flowchart.spec.js","skipped":false,"dir":"cypress"},{"name":"11: should render styled subgraphs","suites":["Graph"],"updatePoint":{"line":193,"column":40,"index":9585},"line":193,"code":"  it('11: should render styled subgraphs', () => {\n    imgSnapshotTest(`\n    graph TB\n      A\n      B\n      subgraph foo[Foo SubGraph]\n        C\n        D\n      end\n      subgraph bar[Bar SubGraph]\n        E\n        F\n      end\n      G\n\n      A-->B\n      B-->C\n      C-->D\n      B-->D\n      D-->E\n      E-->A\n      E-->F\n      F-->D\n      F-->G\n      B-->G\n      G-->D\n\n      style foo fill:#F99,stroke-width:2px,stroke:#F0F,color:darkred\n      style bar fill:#999,stroke-width:10px,stroke:#0F0,color:blue\n      `, {\n      fontFamily: 'courier'\n    });\n  });","file":"integration/rendering/flowchart.spec.js","skipped":false,"dir":"cypress"},{"name":"12: should render a flowchart with long names and class definitions","suites":["Graph"],"updatePoint":{"line":226,"column":73,"index":10177},"line":226,"code":"  it('12: should render a flowchart with long names and class definitions', () => {\n    imgSnapshotTest(`graph LR\n      sid-B3655226-6C29-4D00-B685-3D5C734DC7E1[\"\n\n      提交申请\n      熊大\n      \"];\n      class sid-B3655226-6C29-4D00-B685-3D5C734DC7E1 node-executed;\n      sid-4DA958A0-26D9-4D47-93A7-70F39FD7D51A[\"\n      负责人审批\n      强子\n      \"];\n      class sid-4DA958A0-26D9-4D47-93A7-70F39FD7D51A node-executed;\n      sid-E27C0367-E6D6-497F-9736-3CDC21FDE221[\"\n      DBA审批\n      强子\n      \"];\n      class sid-E27C0367-E6D6-497F-9736-3CDC21FDE221 node-executed;\n      sid-BED98281-9585-4D1B-934E-BD1AC6AC0EFD[\"\n      SA审批\n      阿美\n      \"];\n      class sid-BED98281-9585-4D1B-934E-BD1AC6AC0EFD node-executed;\n      sid-7CE72B24-E0C1-46D3-8132-8BA66BE05AA7[\"\n      主管审批\n      光头强\n      \"];\n      class sid-7CE72B24-E0C1-46D3-8132-8BA66BE05AA7 node-executed;\n      sid-A1B3CD96-7697-4D7C-BEAA-73D187B1BE89[\"\n      DBA确认\n      强子\n      \"];\n      class sid-A1B3CD96-7697-4D7C-BEAA-73D187B1BE89 node-executed;\n      sid-3E35A7FF-A2F4-4E07-9247-DBF884C81937[\"\n      SA确认\n      阿美\n      \"];\n      class sid-3E35A7FF-A2F4-4E07-9247-DBF884C81937 node-executed;\n      sid-4FC27B48-A6F9-460A-A675-021F5854FE22[\"\n      结束\n      \"];\n      class sid-4FC27B48-A6F9-460A-A675-021F5854FE22 node-executed;\n      sid-19DD9E9F-98C1-44EE-B604-842AFEE76F1E[\"\n      SA执行1\n      强子\n      \"];\n      class sid-19DD9E9F-98C1-44EE-B604-842AFEE76F1E node-executed;\n      sid-6C2120F3-D940-4958-A067-0903DCE879C4[\"\n      SA执行2\n      强子\n      \"];\n      class sid-6C2120F3-D940-4958-A067-0903DCE879C4 node-executed;\n      sid-9180E2A0-5C4B-435F-B42F-0D152470A338[\"\n      DBA执行1\n      强子\n      \"];\n      class sid-9180E2A0-5C4B-435F-B42F-0D152470A338 node-executed;\n      sid-03A2C3AC-5337-48A5-B154-BB3FD0EC8DAD[\"\n      DBA执行3\n      强子\n      \"];\n      class sid-03A2C3AC-5337-48A5-B154-BB3FD0EC8DAD node-executed;\n      sid-D5E1F2F4-306C-47A2-BF74-F66E3D769756[\"\n      DBA执行2\n      强子\n      \"];\n      class sid-D5E1F2F4-306C-47A2-BF74-F66E3D769756 node-executed;\n      sid-8C3F2F1D-F014-4F99-B966-095DC1A2BD93[\"\n      DBA执行4\n      强子\n      \"];\n      class sid-8C3F2F1D-F014-4F99-B966-095DC1A2BD93 node-executed;\n      sid-1897B30A-9C5C-4D5B-B80B-76A038785070[\"\n      负责人确认\n      梁静茹\n      \"];\n      class sid-1897B30A-9C5C-4D5B-B80B-76A038785070 node-executed;\n      sid-B3655226-6C29-4D00-B685-3D5C734DC7E1-->sid-7CE72B24-E0C1-46D3-8132-8BA66BE05AA7;\n      sid-4DA958A0-26D9-4D47-93A7-70F39FD7D51A-->sid-1897B30A-9C5C-4D5B-B80B-76A038785070;\n      sid-E27C0367-E6D6-497F-9736-3CDC21FDE221-->sid-A1B3CD96-7697-4D7C-BEAA-73D187B1BE89;\n      sid-BED98281-9585-4D1B-934E-BD1AC6AC0EFD-->sid-3E35A7FF-A2F4-4E07-9247-DBF884C81937;\n      sid-19DD9E9F-98C1-44EE-B604-842AFEE76F1E-->sid-6C2120F3-D940-4958-A067-0903DCE879C4;\n      sid-9180E2A0-5C4B-435F-B42F-0D152470A338-->sid-D5E1F2F4-306C-47A2-BF74-F66E3D769756;\n      sid-03A2C3AC-5337-48A5-B154-BB3FD0EC8DAD-->sid-8C3F2F1D-F014-4F99-B966-095DC1A2BD93;\n      sid-6C2120F3-D940-4958-A067-0903DCE879C4-->sid-4DA958A0-26D9-4D47-93A7-70F39FD7D51A;\n      sid-1897B30A-9C5C-4D5B-B80B-76A038785070-->sid-4FC27B48-A6F9-460A-A675-021F5854FE22;\n      sid-3E35A7FF-A2F4-4E07-9247-DBF884C81937-->sid-19DD9E9F-98C1-44EE-B604-842AFEE76F1E;\n      sid-A1B3CD96-7697-4D7C-BEAA-73D187B1BE89-->sid-9180E2A0-5C4B-435F-B42F-0D152470A338;\n      sid-A1B3CD96-7697-4D7C-BEAA-73D187B1BE89-->sid-03A2C3AC-5337-48A5-B154-BB3FD0EC8DAD;\n      sid-D5E1F2F4-306C-47A2-BF74-F66E3D769756-->sid-4DA958A0-26D9-4D47-93A7-70F39FD7D51A;\n      sid-8C3F2F1D-F014-4F99-B966-095DC1A2BD93-->sid-4DA958A0-26D9-4D47-93A7-70F39FD7D51A;\n      sid-7CE72B24-E0C1-46D3-8132-8BA66BE05AA7-->sid-BED98281-9585-4D1B-934E-BD1AC6AC0EFD;\n      sid-7CE72B24-E0C1-46D3-8132-8BA66BE05AA7-->sid-E27C0367-E6D6-497F-9736-3CDC21FDE221;\n      sid-3E35A7FF-A2F4-4E07-9247-DBF884C81937-->sid-6C2120F3-D940-4958-A067-0903DCE879C4;\n      sid-7CE72B24-E0C1-46D3-8132-8BA66BE05AA7-->sid-4DA958A0-26D9-4D47-93A7-70F39FD7D51A;\n      sid-7CE72B24-E0C1-46D3-8132-8BA66BE05AA7-->sid-4FC27B48-A6F9-460A-A675-021F5854FE22;\n      `, {\n      fontFamily: 'courier'\n    });\n  });","file":"integration/rendering/flowchart.spec.js","skipped":false,"dir":"cypress"},{"name":"13: should render color of styled nodes","suites":["Graph"],"updatePoint":{"line":326,"column":45,"index":14256},"line":326,"code":"  it('13: should render color of styled nodes', () => {\n    imgSnapshotTest(`\n      graph LR\n        foo-->bar\n\n        classDef foo fill:lightblue,color:green,stroke:#FF9E2C,font-weight:bold\n        style foo fill:#F99,stroke-width:2px,stroke:#F0F\n        style bar fill:#999,color: #00ff00, stroke-width:10px,stroke:#0F0\n      `, {\n      listUrl: false,\n      listId: 'color styling',\n      fontFamily: 'courier',\n      logLevel: 0\n    });\n  });","file":"integration/rendering/flowchart.spec.js","skipped":false,"dir":"cypress"},{"name":"14: should render hexagons","suites":["Graph"],"updatePoint":{"line":341,"column":32,"index":14691},"line":341,"code":"  it('14: should render hexagons', () => {\n    imgSnapshotTest(`\n      graph TD\n        A[Christmas] -->|Get money| B(Go shopping)\n        B --> C{{Let me think...<br />Do I want something for work,<br />something to spend every free second with,<br />or something to get around?}}\n        C -->|One| D[Laptop]\n        C -->|Two| E[iPhone]\n        C -->|Three| F[Car]\n        click A \"index.html#link-clicked\" \"link test\"\n        click B testClick \"click test\"\n        classDef someclass fill:#f96;\n        class A someclass;\n        class C someclass;\n      `, {\n      listUrl: false,\n      listId: 'color styling',\n      fontFamily: 'courier',\n      logLevel: 0\n    });\n  });","file":"integration/rendering/flowchart.spec.js","skipped":false,"dir":"cypress"},{"name":"15: should render a simple flowchart with comments","suites":["Graph"],"updatePoint":{"line":361,"column":56,"index":15393},"line":361,"code":"  it('15: should render a simple flowchart with comments', () => {\n    imgSnapshotTest(`graph TD\n      A[Christmas] -->|Get money| B(Go shopping)\n      B --> C{Let me think}\n      %% this is a comment\n      C -->|One| D[Laptop]\n      C -->|Two| E[iPhone]\n      C -->|Three| F[fa:fa-car Car]\n      `, {\n      flowchart: {\n        htmlLabels: false\n      },\n      fontFamily: 'courier'\n    });\n  });","file":"integration/rendering/flowchart.spec.js","skipped":false,"dir":"cypress"},{"name":"16: Render Stadium shape","suites":["Graph"],"updatePoint":{"line":376,"column":30,"index":15765},"line":376,"code":"  it('16: Render Stadium shape', () => {\n    imgSnapshotTest(` graph TD\n      A([stadium shape test])\n      A -->|Get money| B([Go shopping])\n      B --> C([Let me think...<br />Do I want something for work,<br />something to spend every free second with,<br />or something to get around?])\n      C -->|One| D([Laptop])\n      C -->|Two| E([iPhone])\n      C -->|Three| F([Car<br/>wroom wroom])\n      click A \"index.html#link-clicked\" \"link test\"\n      click B testClick \"click test\"\n      classDef someclass fill:#f96;\n      class A someclass;\n      class C someclass;\n      `, {\n      flowchart: {\n        htmlLabels: false\n      },\n      fontFamily: 'courier'\n    });\n  });","file":"integration/rendering/flowchart.spec.js","skipped":false,"dir":"cypress"},{"name":"17: Render multiline texts","suites":["Graph"],"updatePoint":{"line":396,"column":32,"index":16442},"line":396,"code":"  it('17: Render multiline texts', () => {\n    imgSnapshotTest(`graph LR\n        A1[Multi<br>Line] -->|Multi<br>Line| B1(Multi<br>Line)\n        C1[Multi<br/>Line] -->|Multi<br/>Line| D1(Multi<br/>Line)\n        E1[Multi<br />Line] -->|Multi<br />Line| F1(Multi<br />Line)\n        A2[Multi<br>Line] -->|Multi<br>Line| B2(Multi<br>Line)\n        C2[Multi<br/>Line] -->|Multi<br/>Line| D2(Multi<br/>Line)\n        E2[Multi<br />Line] -->|Multi<br />Line| F2(Multi<br />Line)\n        linkStyle 0 stroke:DarkGray,stroke-width:2px\n        linkStyle 1 stroke:DarkGray,stroke-width:2px\n        linkStyle 2 stroke:DarkGray,stroke-width:2px\n      `, {\n      flowchart: {\n        htmlLabels: false\n      },\n      fontFamily: 'courier'\n    });\n  });","file":"integration/rendering/flowchart.spec.js","skipped":false,"dir":"cypress"},{"name":"18: Chaining of nodes","suites":["Graph"],"updatePoint":{"line":414,"column":27,"index":17172},"line":414,"code":"  it('18: Chaining of nodes', () => {\n    imgSnapshotTest(`graph LR\n        a --> b --> c\n      `, {\n      flowchart: {\n        htmlLabels: false\n      },\n      fontFamily: 'courier'\n    });\n  });","file":"integration/rendering/flowchart.spec.js","skipped":false,"dir":"cypress"},{"name":"19: Multiple nodes and chaining in one statement","suites":["Graph"],"updatePoint":{"line":424,"column":54,"index":17396},"line":424,"code":"  it('19: Multiple nodes and chaining in one statement', () => {\n    imgSnapshotTest(`graph LR\n        a --> b & c--> d\n      `, {\n      flowchart: {\n        htmlLabels: false\n      },\n      fontFamily: 'courier'\n    });\n  });","file":"integration/rendering/flowchart.spec.js","skipped":false,"dir":"cypress"},{"name":"20: Multiple nodes and chaining in one statement","suites":["Graph"],"updatePoint":{"line":434,"column":54,"index":17623},"line":434,"code":"  it('20: Multiple nodes and chaining in one statement', () => {\n    imgSnapshotTest(`graph TD\n      A[ h ] -- hello --> B[\" test \"]:::exClass & C --> D;\n      classDef exClass background:#bbb,border:1px solid red;\n      `, {\n      flowchart: {\n        htmlLabels: false\n      },\n      fontFamily: 'courier'\n    });\n  });","file":"integration/rendering/flowchart.spec.js","skipped":false,"dir":"cypress"},{"name":"21: Render cylindrical shape","suites":["Graph"],"updatePoint":{"line":445,"column":34,"index":17925},"line":445,"code":"  it('21: Render cylindrical shape', () => {\n    imgSnapshotTest(`graph LR\n      A[(cylindrical<br />shape<br />test)]\n      A -->|Get money| B1[(Go shopping 1)]\n      A -->|Get money| B2[(Go shopping 2)]\n      A -->|Get money| B3[(Go shopping 3)]\n      C[(Let me think...<br />Do I want something for work,<br />something to spend every free second with,<br />or something to get around?)]\n      B1 --> C\n      B2 --> C\n      B3 --> C\n      C -->|One| D[(Laptop)]\n      C -->|Two| E[(iPhone)]\n      C -->|Three| F[(Car)]\n      click A \"index.html#link-clicked\" \"link test\"\n      click B testClick \"click test\"\n      classDef someclass fill:#f96;\n      class A someclass;`, {\n      flowchart: {\n        htmlLabels: false\n      },\n      fontFamily: 'courier'\n    });\n  });","file":"integration/rendering/flowchart.spec.js","skipped":false,"dir":"cypress"},{"name":"22: Render a simple flowchart with nodeSpacing set to 100","suites":["Graph"],"updatePoint":{"line":468,"column":63,"index":18726},"line":468,"code":"  it('22: Render a simple flowchart with nodeSpacing set to 100', () => {\n    imgSnapshotTest(`graph TD\n      A[Christmas] -->|Get money| B(Go shopping)\n      B --> C{Let me think}\n      %% this is a comment\n      C -->|One| D[Laptop]\n      C -->|Two| E[iPhone]\n      C -->|Three| F[fa:fa-car Car]\n      `, {\n      flowchart: {\n        nodeSpacing: 50\n      },\n      fontFamily: 'courier'\n    });\n  });","file":"integration/rendering/flowchart.spec.js","skipped":false,"dir":"cypress"},{"name":"23: Render a simple flowchart with rankSpacing set to 100","suites":["Graph"],"updatePoint":{"line":483,"column":63,"index":19129},"line":483,"code":"  it('23: Render a simple flowchart with rankSpacing set to 100', () => {\n    imgSnapshotTest(`graph TD\n      A[Christmas] -->|Get money| B(Go shopping)\n      B --> C{Let me think}\n      %% this is a comment\n      C -->|One| D[Laptop]\n      C -->|Two| E[iPhone]\n      C -->|Three| F[fa:fa-car Car]\n      `, {\n      flowchart: {\n        rankSpacing: '100'\n      },\n      fontFamily: 'courier'\n    });\n  });","file":"integration/rendering/flowchart.spec.js","skipped":false,"dir":"cypress"},{"name":"24: Keep node label text (if already defined) when a style is applied","suites":["Graph"],"updatePoint":{"line":498,"column":75,"index":19547},"line":498,"code":"  it('24: Keep node label text (if already defined) when a style is applied', () => {\n    imgSnapshotTest(`graph LR\n      A(( )) -->|step 1| B(( ))\n      B(( )) -->|step 2| C(( ))\n      C(( )) -->|step 3| D(( ))\n      linkStyle 1 stroke:greenyellow,stroke-width:2px\n      style C fill:greenyellow,stroke:green,stroke-width:4px\n      `, {\n      flowchart: {\n        htmlLabels: false\n      },\n      fontFamily: 'courier'\n    });\n  });","file":"integration/rendering/flowchart.spec.js","skipped":false,"dir":"cypress"},{"name":"25: Handle link click events (link, anchor, mailto, other protocol, script)","suites":["Graph"],"updatePoint":{"line":512,"column":81,"index":19987},"line":512,"code":"  it('25: Handle link click events (link, anchor, mailto, other protocol, script)', () => {\n    imgSnapshotTest(`graph TB\n      TITLE[\"Link Click Events<br>(click the nodes below)\"]\n      A[\"link test (open in same tab)\"]\n      B[\"link test (open in new tab)\"]\n      C[anchor test]\n      D[mailto test]\n      E[other protocol test]\n      F[script test]\n      TITLE --> A & B & C & D & E & F\n      click A \"https://mermaid-js.github.io/mermaid/#/\" \"link test (open in same tab)\"\n      click B \"https://mermaid-js.github.io/mermaid/#/\" \"link test (open in new tab)\" _blank\n      click C \"#link-clicked\"\n      click D \"mailto:user@user.user\" \"mailto test\"\n      click E \"notes://do-your-thing/id\" \"other protocol test\"\n      click F \"javascript:alert('test')\" \"script test\"\n      `, {\n      securityLevel: 'loose',\n      fontFamily: 'courier'\n    });\n  });","file":"integration/rendering/flowchart.spec.js","skipped":false,"dir":"cypress"},{"name":"26: Set text color of nodes and links according to styles when html labels are enabled","suites":["Graph"],"updatePoint":{"line":533,"column":92,"index":20852},"line":533,"code":"  it('26: Set text color of nodes and links according to styles when html labels are enabled', () => {\n    imgSnapshotTest(`graph LR\n      A[red<br>text] -->|red<br>text| B(blue<br>text)\n      C[/red<br/>text/] -->|blue<br/>text| D{blue<br/>text}\n      E{{default<br />style}} -->|default<br />style| F([default<br />style])\n      linkStyle default color:Sienna;\n      linkStyle 0 color:red;\n      linkStyle 1 stroke:DarkGray,stroke-width:2px,color:#0000ff\n      style A color:red;\n      style B color:blue;\n      style C stroke:#ff0000,fill:#ffcccc,color:#ff0000\n      style D stroke:#0000ff,fill:#ccccff,color:#0000ff\n      click B \"index.html#link-clicked\" \"link test\"\n      click D testClick \"click test\"\n      `, {\n      flowchart: {\n        htmlLabels: true\n      }\n    });\n  });","file":"integration/rendering/flowchart.spec.js","skipped":false,"dir":"cypress"},{"name":"27: Set text color of nodes and links according to styles when html labels are disabled","suites":["Graph"],"updatePoint":{"line":553,"column":93,"index":21639},"line":553,"code":"  it('27: Set text color of nodes and links according to styles when html labels are disabled', () => {\n    imgSnapshotTest(`graph LR\n      A[red<br>text] -->|red<br>text| B(blue<br>text)\n      C[/red<br/>text/] -->|blue<br/>text| D{blue<br/>text}\n      E{{default<br />style}} -->|default<br />style| F([default<br />style])\n      linkStyle default color:Sienna;\n      linkStyle 0 color:red;\n      linkStyle 1 stroke:DarkGray,stroke-width:2px,color:#0000ff\n      style A color:red;\n      style B color:blue;\n      style C stroke:#ff0000,fill:#ffcccc,color:#ff0000\n      style D stroke:#0000ff,fill:#ccccff,color:#0000ff\n      click B \"index.html#link-clicked\" \"link test\"\n      click D testClick \"click test\"\n      `, {\n      flowchart: {\n        htmlLabels: false\n      },\n      fontFamily: 'courier'\n    });\n  });","file":"integration/rendering/flowchart.spec.js","skipped":false,"dir":"cypress"},{"name":"28: Apply default class to all nodes which do not have another class assigned (htmlLabels enabled)","suites":["Graph"],"updatePoint":{"line":574,"column":104,"index":22467},"line":574,"code":"  it('28: Apply default class to all nodes which do not have another class assigned (htmlLabels enabled)', () => {\n    imgSnapshotTest(`graph TD\n      A[myClass1] --> B[default] & C[default]\n      B[default] & C[default] --> D[myClass2]\n      classDef default stroke-width:2px,fill:none,stroke:silver\n      classDef node color:red\n      classDef myClass1 color:#0000ff\n      classDef myClass2 stroke:#0000ff,fill:#ccccff\n      class A myClass1\n      class D myClass2\n      `, {\n      flowchart: {\n        htmlLabels: true\n      }\n    });\n  });","file":"integration/rendering/flowchart.spec.js","skipped":false,"dir":"cypress"},{"name":"29: Apply default class to all nodes which do not have another class assigned (htmlLabels disabled)","suites":["Graph"],"updatePoint":{"line":590,"column":105,"index":23012},"line":590,"code":"  it('29: Apply default class to all nodes which do not have another class assigned (htmlLabels disabled)', () => {\n    imgSnapshotTest(`graph TD\n      A[myClass1] --> B[default] & C[default]\n      B[default] & C[default] --> D[myClass2]\n      classDef default stroke-width:2px,fill:none,stroke:silver\n      classDef node color:red\n      classDef myClass1 color:#0000ff\n      classDef myClass2 stroke:#0000ff,fill:#ccccff\n      class A myClass1\n      class D myClass2\n      `, {\n      flowchart: {\n        htmlLabels: false\n      },\n      fontFamily: 'courier'\n    });\n  });","file":"integration/rendering/flowchart.spec.js","skipped":false,"dir":"cypress"},{"name":"30: Possibility to style text color of nodes and subgraphs as well as apply classes to subgraphs","suites":["Graph"],"updatePoint":{"line":607,"column":102,"index":23584},"line":607,"code":"  it('30: Possibility to style text color of nodes and subgraphs as well as apply classes to subgraphs', () => {\n    imgSnapshotTest(`graph LR\n      subgraph id1 [title is set]\n        A-->B\n      end\n      subgraph id2 [title]\n        E\n      end\n\n      B-->C\n\n      subgraph id3\n      C-->D\n      end\n      class id3,id2,A redBg;\n      class id3,A whiteTxt;\n      classDef redBg fill:#622;\n      classDef whiteTxt color: white;\n      `, {\n      flowchart: {\n        htmlLabels: false\n      },\n      fontFamily: 'courier'\n    });\n  });","file":"integration/rendering/flowchart.spec.js","skipped":false,"dir":"cypress"},{"name":"31: should not slice off edges that are to the left of the left-most vertex","suites":["Graph"],"updatePoint":{"line":632,"column":81,"index":24100},"line":632,"code":"  it('31: should not slice off edges that are to the left of the left-most vertex', () => {\n    imgSnapshotTest(`graph TD\n      work --> sleep\n      sleep --> work\n      eat --> sleep\n      work --> eat\n      `, {\n      flowchart: {\n        htmlLabels: false\n      },\n      fontFamily: 'courier'\n    });\n  });","file":"integration/rendering/flowchart.spec.js","skipped":false,"dir":"cypress"},{"name":"32: Render Subroutine shape","suites":["Graph"],"updatePoint":{"line":645,"column":33,"index":24362},"line":645,"code":"  it('32: Render Subroutine shape', () => {\n    imgSnapshotTest(`graph LR\n      A[[subroutine shape test]]\n      A -->|Get money| B[[Go shopping]]\n      B --> C[[Let me think...<br />Do I want something for work,<br />something to spend every free second with,<br />or something to get around?]]\n      C -->|One| D[[Laptop]]\n      C -->|Two| E[[iPhone]]\n      C -->|Three| F[[Car<br/>wroom wroom]]\n      click A \"index.html#link-clicked\" \"link test\"\n      click B testClick \"click test\"\n      classDef someclass fill:#f96;\n      class A someclass;\n      class C someclass;\n      `, {\n      flowchart: {\n        htmlLabels: false\n      },\n      fontFamily: 'courier'\n    });\n  });","file":"integration/rendering/flowchart.spec.js","skipped":false,"dir":"cypress"},{"name":"33: should render a simple flowchart with diagramPadding set to 0","suites":["Graph"],"updatePoint":{"line":665,"column":71,"index":25080},"line":665,"code":"  it('33: should render a simple flowchart with diagramPadding set to 0', () => {\n    imgSnapshotTest(`graph TD\n      A[Christmas] -->|Get money| B(Go shopping)\n      B --> C{Let me think}\n      %% this is a comment\n      C -->|One| D[Laptop]\n      C -->|Two| E[iPhone]\n      C -->|Three| F[fa:fa-car Car]\n      `, {\n      flowchart: {\n        diagramPadding: 0\n      }\n    });\n  });","file":"integration/rendering/flowchart.spec.js","skipped":false,"dir":"cypress"},{"name":"34: testing the label width in percy","suites":["Graph"],"updatePoint":{"line":679,"column":42,"index":25435},"line":679,"code":"  it('34: testing the label width in percy', () => {\n    imgSnapshotTest(`graph TD\n      A[Christmas]\n      `, {});\n  });","file":"integration/rendering/flowchart.spec.js","skipped":false,"dir":"cypress"},{"name":"35: should honor minimum edge length as specified by the user","suites":["Graph"],"updatePoint":{"line":684,"column":67,"index":25582},"line":684,"code":"  it('35: should honor minimum edge length as specified by the user', () => {\n    imgSnapshotTest(`graph TD\n      L1 --- L2\n      L2 --- C\n      M1 ---> C\n      R1 .-> R2\n      R2 <.-> C\n      C -->|Label 1| E1\n      C -- Label 2 ---> E2\n      C ----> E3\n      C -----> E4\n      C ======> E5\n      `, {});\n  });","file":"integration/rendering/flowchart.spec.js","skipped":false,"dir":"cypress"},{"name":"36: should render escaped without html labels","suites":["Graph"],"updatePoint":{"line":698,"column":51,"index":25878},"line":698,"code":"  it('36: should render escaped without html labels', () => {\n    imgSnapshotTest(`graph TD\n        a[\"<strong>Haiya</strong>\"]-->b\n      `, {\n      htmlLabels: false,\n      flowchart: {\n        htmlLabels: false\n      }\n    });\n  });","file":"integration/rendering/flowchart.spec.js","skipped":false,"dir":"cypress"},{"name":"37: should render non-escaped with html labels","suites":["Graph"],"updatePoint":{"line":708,"column":52,"index":26114},"line":708,"code":"  it('37: should render non-escaped with html labels', () => {\n    imgSnapshotTest(`graph TD\n        a[\"<strong>Haiya</strong>\"]-->b\n      `, {\n      htmlLabels: true,\n      flowchart: {\n        htmlLabels: true\n      },\n      securityLevel: 'loose'\n    });\n  });","file":"integration/rendering/flowchart.spec.js","skipped":false,"dir":"cypress"},{"name":"38: should render a flowchart when useMaxWidth is true (default)","suites":["Graph"],"updatePoint":{"line":719,"column":70,"index":26396},"line":719,"code":"  it('38: should render a flowchart when useMaxWidth is true (default)', () => {\n    renderGraph(`graph TD\n      A[Christmas] -->|Get money| B(Go shopping)\n      B --> C{Let me think}\n      C -->|One| D[Laptop]\n      C -->|Two| E[iPhone]\n      C -->|Three| F[fa:fa-car Car]\n      `, {\n      flowchart: {\n        useMaxWidth: true\n      }\n    });\n    cy.get('svg').should(svg => {\n      expect(svg).to.have.attr('width', '100%');\n      expect(svg).to.have.attr('height'); // use within because the absolute value can be slightly different depending on the environment ±5%\n\n      const height = parseFloat(svg.attr('height'));\n      expect(height).to.be.within(446 * 0.95, 446 * 1.05);\n      const style = svg.attr('style');\n      expect(style).to.match(/^max-width: [\\d.]+px;$/);\n      const maxWidthValue = parseFloat(style.match(/[\\d.]+/g).join(''));\n      expect(maxWidthValue).to.be.within(300 * 0.95, 300 * 1.05);\n    });\n  });","file":"integration/rendering/flowchart.spec.js","skipped":false,"dir":"cypress"},{"name":"39: should render a flowchart when useMaxWidth is false","suites":["Graph"],"updatePoint":{"line":743,"column":61,"index":27319},"line":743,"code":"  it('39: should render a flowchart when useMaxWidth is false', () => {\n    renderGraph(`graph TD\n      A[Christmas] -->|Get money| B(Go shopping)\n      B --> C{Let me think}\n      C -->|One| D[Laptop]\n      C -->|Two| E[iPhone]\n      C -->|Three| F[fa:fa-car Car]\n      `, {\n      flowchart: {\n        useMaxWidth: false\n      }\n    });\n    cy.get('svg').should(svg => {\n      const height = parseFloat(svg.attr('height'));\n      const width = parseFloat(svg.attr('width')); // use within because the absolute value can be slightly different depending on the environment ±5%\n\n      expect(height).to.be.within(446 * 0.95, 446 * 1.05);\n      expect(width).to.be.within(300 * 0.95, 300 * 1.05);\n      expect(svg).to.not.have.attr('style');\n    });\n  });","file":"integration/rendering/flowchart.spec.js","skipped":false,"dir":"cypress"},{"name":"58: handle styling with style expressions","suites":["Graph"],"updatePoint":{"line":764,"column":47,"index":28058},"line":764,"code":"  it('58: handle styling with style expressions', () => {\n    imgSnapshotTest(`\n    graph LR\n    id1(Start)-->id2(Stop)\n    style id1 fill:#f9f,stroke:#333,stroke-width:4px\n    style id2 fill:#bbf,stroke:#f66,stroke-width:2px,color:#fff,stroke-dasharray: 5 5\n      `, {\n      htmlLabels: true,\n      flowchart: {\n        htmlLabels: true\n      },\n      securityLevel: 'loose'\n    });\n  });","file":"integration/rendering/flowchart.spec.js","skipped":false,"dir":"cypress"},{"name":"60: handle styling for all node shapes","suites":["Graph"],"updatePoint":{"line":778,"column":44,"index":28445},"line":778,"code":"  it('60: handle styling for all node shapes', () => {\n    imgSnapshotTest(`\n      graph LR\n      A[red text] -->|default style| B(blue text)\n      C([red text]) -->|default style| D[[blue text]]\n      E[(red text)] -->|default style| F((blue text))\n      G>red text] -->|default style| H{blue text}\n      I{{red text}} -->|default style| J[/blue text/]\n      linkStyle default color:Sienna;\n      style A stroke:#ff0000,fill:#ffcccc,color:#ff0000\n      style B stroke:#0000ff,fill:#ccccff,color:#0000ff\n      style C stroke:#ff0000,fill:#ffcccc,color:#ff0000\n      style D stroke:#0000ff,fill:#ccccff,color:#0000ff\n      style E stroke:#ff0000,fill:#ffcccc,color:#ff0000\n      style F stroke:#0000ff,fill:#ccccff,color:#0000ff\n      style G stroke:#ff0000,fill:#ffcccc,color:#ff0000\n      style H stroke:#0000ff,fill:#ccccff,color:#0000ff\n      style I stroke:#ff0000,fill:#ffcccc,color:#ff0000\n      style J stroke:#0000ff,fill:#ccccff,color:#0000ff\n      `, {\n      htmlLabels: true,\n      flowchart: {\n        htmlLabels: true\n      },\n      securityLevel: 'loose'\n    });\n  });","file":"integration/rendering/flowchart.spec.js","skipped":false,"dir":"cypress"},{"name":"61: fontawesome icons in edge labels","suites":["Graph"],"updatePoint":{"line":805,"column":42,"index":29526},"line":805,"code":"  it('61: fontawesome icons in edge labels', () => {\n    imgSnapshotTest(`\ngraph TD\n  C -->|fa:fa-car Car| F[fa:fa-car Car]\n      `, {\n      htmlLabels: true,\n      flowchart: {\n        htmlLabels: true\n      },\n      securityLevel: 'loose'\n    });\n  });","file":"integration/rendering/flowchart.spec.js","skipped":false,"dir":"cypress"},{"name":"62: fontawesome icons in edge labels","suites":["Graph"],"updatePoint":{"line":817,"column":42,"index":29781},"line":817,"code":"  it('62: fontawesome icons in edge labels', () => {\n    imgSnapshotTest(`\n    graph TB\n      subgraph bar[Bar]\n        F\n      end\n      style bar fill:#999,stroke-width:10px,stroke:#0F0,color:blue\n      `, {\n      htmlLabels: true,\n      flowchart: {\n        htmlLabels: true\n      },\n      securityLevel: 'loose'\n    });\n  });","file":"integration/rendering/flowchart.spec.js","skipped":false,"dir":"cypress"},{"name":"63: fontawesome icons in edge labels","suites":["Graph"],"updatePoint":{"line":832,"column":42,"index":30111},"line":832,"code":"  it('63: fontawesome icons in edge labels', () => {\n    imgSnapshotTest(`\n    graph TB\n      A\n      B\n      subgraph foo[Foo SubGraph]\n        C\n        D\n      end\n      subgraph bar[Bar SubGraph]\n        E\n        F\n      end\n      G\n\n      A-->B\n      B-->C\n      C-->D\n      B-->D\n      D-->E\n      E-->A\n      E-->F\n      F-->D\n      F-->G\n      B-->G\n      G-->D\n\n      style foo fill:#F99,stroke-width:2px,stroke:#F0F,color:darkred\n      style bar fill:#999,stroke-width:10px,stroke:#0F0,color:blue\n      `, {\n      htmlLabels: true,\n      flowchart: {\n        htmlLabels: true\n      },\n      securityLevel: 'loose'\n    });\n  });","file":"integration/rendering/flowchart.spec.js","skipped":false,"dir":"cypress"},{"name":"64: fontawesome icons in edge labels","suites":["Graph"],"updatePoint":{"line":869,"column":42,"index":30750},"line":869,"code":"  it('64: fontawesome icons in edge labels', () => {\n    imgSnapshotTest(`\n    %%{init:{\"theme\":\"base\", \"themeVariables\": {\"primaryColor\":\"#411d4e\", \"titleColor\":\"white\", \"darkMode\":true}}}%%\n    flowchart LR\n    subgraph A\n        a --> b\n    end\n    subgraph B\n        i -->f\n    end\n    A --> B\n      `, {\n      htmlLabels: true,\n      flowchart: {\n        htmlLabels: true\n      },\n      securityLevel: 'loose'\n    });\n  });","file":"integration/rendering/flowchart.spec.js","skipped":false,"dir":"cypress"},{"name":"65: text-color from classes","suites":["Graph"],"updatePoint":{"line":888,"column":33,"index":31170},"line":888,"code":"  it('65: text-color from classes', () => {\n    imgSnapshotTest(`\n      flowchart LR\n        classDef dark fill:#000,stroke:#000,stroke-width:4px,color:#fff\n        Lorem --> Ipsum --> Dolor\n        class Lorem,Dolor dark\n      `, {\n      htmlLabels: true,\n      flowchart: {\n        htmlLabels: true\n      },\n      securityLevel: 'loose'\n    });\n  });","file":"integration/rendering/flowchart.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a gantt chart","suites":["Gantt diagram"],"updatePoint":{"line":6,"column":33,"index":213},"line":6,"code":"  it('should render a gantt chart', () => {\n    imgSnapshotTest(`\n    gantt\n      dateFormat  YYYY-MM-DD\n      axisFormat  %d/%m\n      title Adding GANTT diagram to mermaid\n      excludes weekdays 2014-01-10\n\n      section A section\n      Completed task            :done,    des1, 2014-01-06,2014-01-08\n      Active task               :active,  des2, 2014-01-09, 3d\n      Future task               :         des3, after des2, 5d\n      Future task2               :         des4, after des3, 5d\n\n      section Critical tasks\n      Completed task in the critical line :crit, done, 2014-01-06,24h\n      Implement parser and jison :crit, done, after des1, 2d\n      Create tests for parser             :crit, active, 3d\n      Future task in critical line        :crit, 5d\n      Create tests for renderer           :2d\n      Add to mermaid                      :1d\n\n      section Documentation\n      Describe gantt syntax               :active, a1, after des1, 3d\n      Add gantt diagram to demo page      :after a1  , 20h\n      Add another diagram to demo page    :doc1, after a1  , 48h\n\n      section Last section\n      Describe gantt syntax               :after doc1, 3d\n      Add gantt diagram to demo page      : 20h\n      Add another diagram to demo page    : 48h\n      `, {});\n  });","file":"integration/rendering/gantt.spec.js","skipped":false,"dir":"cypress"},{"name":"Handle multiline section titles with different line breaks","suites":["Gantt diagram"],"updatePoint":{"line":39,"column":64,"index":1527},"line":39,"code":"  it('Handle multiline section titles with different line breaks', () => {\n    imgSnapshotTest(`\n      gantt\n      dateFormat  YYYY-MM-DD\n      axisFormat  %d/%m\n      title       GANTT diagram with multiline section titles\n      excludes    weekdays 2014-01-10\n\n      section A section<br>multiline\n      Completed task            : done,    des1, 2014-01-06,2014-01-08\n      Active task               : active,  des2, 2014-01-09, 3d\n      Future task               :          des3, after des2, 5d\n      Future task2              :          des4, after des3, 5d\n\n      section Critical tasks<br/>multiline\n      Completed task in the critical line : crit, done, 2014-01-06, 24h\n      Implement parser and jison          : crit, done, after des1, 2d\n      Create tests for parser             : crit, active, 3d\n      Future task in critical line        : crit, 5d\n      Create tests for renderer           : 2d\n      Add to mermaid                      : 1d\n\n      section Documentation<br />multiline\n      Describe gantt syntax               : active, a1, after des1, 3d\n      Add gantt diagram to demo page      : after a1, 20h\n      Add another diagram to demo page    : doc1, after a1, 48h\n\n      section Last section<br\t/>multiline\n      Describe gantt syntax               : after doc1, 3d\n      Add gantt diagram to demo page      : 20h\n      Add another diagram to demo page    : 48h\n      `, {});\n  });","file":"integration/rendering/gantt.spec.js","skipped":false,"dir":"cypress"},{"name":"Multiple dependencies syntax","suites":["Gantt diagram"],"updatePoint":{"line":72,"column":34,"index":2910},"line":72,"code":"  it('Multiple dependencies syntax', () => {\n    imgSnapshotTest(`\n      gantt\n      dateFormat  YYYY-MM-DD\n      axisFormat  %d/%m\n      title Adding GANTT diagram to mermaid\n      excludes weekdays 2014-01-10\n\n      apple :a, 2017-07-20, 1w\n      banana :crit, b, 2017-07-23, 1d\n      cherry :active, c, after b a, 1d\n      `, {});\n  });","file":"integration/rendering/gantt.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a gantt chart for issue #1060","suites":["Gantt diagram"],"updatePoint":{"line":85,"column":49,"index":3265},"line":85,"code":"  it('should render a gantt chart for issue #1060', () => {\n    imgSnapshotTest(`\n      gantt\n      excludes weekdays 2017-01-10\n      title Projects Timeline\n\n      section asdf\n          specs :done, :ps, 2019-05-10, 50d\n          Plasma      :pc, 2019-06-20, 60d\n          Rollup  :or, 2019-08-20, 50d\n\n      section CEL\n\n          plasma-chamber      :done, :pc, 2019-05-20, 60d\n          Plasma Implementation (Rust)      :por, 2019-06-20, 120d\n          Predicates (Atomic Swap)      :pred, 2019-07-20, 60d\n\n      section DEX\n\n          History zkSNARK  :hs, 2019-08-10, 40d\n          Exit           :vs, after hs, 60d\n          PredicateSpec          :ps, 2019-09-1, 20d\n          PlasmaIntegration     :pi, after ps,40d\n\n\n      section Events\n\n      ETHBoston :done, :eb, 2019-09-08, 3d\n      DevCon :active, :dc, 2019-10-08, 3d\n\n      section Plasma Calls & updates\n          OVM      :ovm, 2019-07-12, 120d\n      Plasma call 26 :pc26, 2019-08-21, 1d\n      Plasma call 27 :pc27, 2019-09-03, 1d\n      Plasma call 28 :pc28, 2019-09-17, 1d\n        `, {});\n  });","file":"integration/rendering/gantt.spec.js","skipped":false,"dir":"cypress"},{"name":"should hide today marker","suites":["Gantt diagram"],"updatePoint":{"line":122,"column":30,"index":4314},"line":122,"code":"  it('should hide today marker', () => {\n    imgSnapshotTest(`\n      gantt\n        title Hide today marker (vertical line should not be visible)\n        dateFormat YYYY-MM-DD\n        axisFormat %d\n        todayMarker off\n        section Section1\n         Today: 1, -1h\n      `, {});\n  });","file":"integration/rendering/gantt.spec.js","skipped":false,"dir":"cypress"},{"name":"should style today marker","suites":["Gantt diagram"],"updatePoint":{"line":133,"column":31,"index":4604},"line":133,"code":"  it('should style today marker', () => {\n    imgSnapshotTest(`\n    gantt\n      title Style today marker (vertical line should be 5px wide and half-transparent blue)\n      dateFormat YYYY-MM-DD\n      axisFormat %d\n      todayMarker stroke-width:5px,stroke:#00f,opacity:0.5\n      section Section1\n       Today: 1, -1h\n      `, {});\n  });","file":"integration/rendering/gantt.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a gantt diagram when useMaxWidth is true (default)","suites":["Gantt diagram"],"updatePoint":{"line":144,"column":70,"index":4980},"line":144,"code":"  it('should render a gantt diagram when useMaxWidth is true (default)', () => {\n    renderGraph(`\n    gantt\n      dateFormat  YYYY-MM-DD\n      axisFormat  %d/%m\n      title Adding GANTT diagram to mermaid\n      excludes weekdays 2014-01-10\n\n      section A section\n      Completed task            :done,    des1, 2014-01-06,2014-01-08\n      Active task               :active,  des2, 2014-01-09, 3d\n      Future task               :         des3, after des2, 5d\n      Future task2               :         des4, after des3, 5d\n\n      section Critical tasks\n      Completed task in the critical line :crit, done, 2014-01-06,24h\n      Implement parser and jison :crit, done, after des1, 2d\n      Create tests for parser             :crit, active, 3d\n      Future task in critical line        :crit, 5d\n      Create tests for renderer           :2d\n      Add to mermaid                      :1d\n\n      section Documentation\n      Describe gantt syntax               :active, a1, after des1, 3d\n      Add gantt diagram to demo page      :after a1  , 20h\n      Add another diagram to demo page    :doc1, after a1  , 48h\n\n      section Last section\n      Describe gantt syntax               :after doc1, 3d\n      Add gantt diagram to demo page      : 20h\n      Add another diagram to demo page    : 48h\n      `, {\n      gantt: {\n        useMaxWidth: true\n      }\n    });\n    cy.get('svg').should(svg => {\n      expect(svg).to.have.attr('width', '100%');\n      expect(svg).to.have.attr('height'); // use within because the absolute value can be slightly different depending on the environment ±5%\n\n      const height = parseFloat(svg.attr('height'));\n      expect(height).to.be.within(484 * 0.95, 484 * 1.05);\n      const style = svg.attr('style');\n      expect(style).to.match(/^max-width: [\\d.]+px;$/);\n      const maxWidthValue = parseFloat(style.match(/[\\d.]+/g).join(''));\n      expect(maxWidthValue).to.be.within(984 * 0.95, 984 * 1.05);\n    });\n  });","file":"integration/rendering/gantt.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a gantt diagram when useMaxWidth is false","suites":["Gantt diagram"],"updatePoint":{"line":192,"column":61,"index":6921},"line":192,"code":"  it('should render a gantt diagram when useMaxWidth is false', () => {\n    renderGraph(`\n    gantt\n      dateFormat  YYYY-MM-DD\n      axisFormat  %d/%m\n      title Adding GANTT diagram to mermaid\n      excludes weekdays 2014-01-10\n\n      section A section\n      Completed task            :done,    des1, 2014-01-06,2014-01-08\n      Active task               :active,  des2, 2014-01-09, 3d\n      Future task               :         des3, after des2, 5d\n      Future task2               :         des4, after des3, 5d\n\n      section Critical tasks\n      Completed task in the critical line :crit, done, 2014-01-06,24h\n      Implement parser and jison :crit, done, after des1, 2d\n      Create tests for parser             :crit, active, 3d\n      Future task in critical line        :crit, 5d\n      Create tests for renderer           :2d\n      Add to mermaid                      :1d\n\n      section Documentation\n      Describe gantt syntax               :active, a1, after des1, 3d\n      Add gantt diagram to demo page      :after a1  , 20h\n      Add another diagram to demo page    :doc1, after a1  , 48h\n\n      section Last section\n      Describe gantt syntax               :after doc1, 3d\n      Add gantt diagram to demo page      : 20h\n      Add another diagram to demo page    : 48h\n      `, {\n      gantt: {\n        useMaxWidth: false\n      }\n    });\n    cy.get('svg').should(svg => {\n      const height = parseFloat(svg.attr('height'));\n      const width = parseFloat(svg.attr('width')); // use within because the absolute value can be slightly different depending on the environment ±5%\n\n      expect(height).to.be.within(484 * 0.95, 484 * 1.05);\n      expect(width).to.be.within(984 * 0.95, 984 * 1.05);\n      expect(svg).to.not.have.attr('style');\n    });\n  });","file":"integration/rendering/gantt.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a gantt diagram with data labels at the top when topAxis is true","suites":["Gantt diagram"],"updatePoint":{"line":237,"column":84,"index":8715},"line":237,"code":"  it('should render a gantt diagram with data labels at the top when topAxis is true', () => {\n    imgSnapshotTest(`\n    gantt\n      dateFormat  YYYY-MM-DD\n      axisFormat  %d/%m\n      title Adding GANTT diagram to mermaid\n      excludes weekdays 2014-01-10\n\n      section A section\n      Completed task            :done,    des1, 2014-01-06,2014-01-08\n      Active task               :active,  des2, 2014-01-09, 3d\n      Future task               :         des3, after des2, 5d\n      Future task2               :         des4, after des3, 5d\n\n      section Critical tasks\n      Completed task in the critical line :crit, done, 2014-01-06,24h\n      Implement parser and jison :crit, done, after des1, 2d\n      Create tests for parser             :crit, active, 3d\n      Future task in critical line        :crit, 5d\n      Create tests for renderer           :2d\n      Add to mermaid                      :1d\n\n      section Documentation\n      Describe gantt syntax               :active, a1, after des1, 3d\n      Add gantt diagram to demo page      :after a1  , 20h\n      Add another diagram to demo page    :doc1, after a1  , 48h\n\n      section Last section\n      Describe gantt syntax               :after doc1, 3d\n      Add gantt diagram to demo page      : 20h\n      Add another diagram to demo page    : 48h\n      `, {\n      gantt: {\n        topAxis: true\n      }\n    });\n  });","file":"integration/rendering/gantt.spec.js","skipped":false,"dir":"cypress"},{"name":"should render accessibility tags","suites":["Gantt diagram"],"updatePoint":{"line":274,"column":38,"index":10053},"line":274,"code":"  it('should render accessibility tags', function () {\n    const expectedTitle = 'Gantt Diagram';\n    const expectedAccDescription = 'Tasks for Q4';\n    renderGraph(`\n      gantt\n      accTitle: ${expectedTitle}\n      accDescr: ${expectedAccDescription}\n      dateFormat  YYYY-MM-DD\n      section Section\n      A task :a1, 2014-01-01, 30d\n      `, {});\n    cy.get('svg').should(svg => {\n      const el = svg.get(0);\n      const children = Array.from(el.children);\n      const titleEl = children.find(function (node) {\n        return node.tagName === 'title';\n      });\n      const descriptionEl = children.find(function (node) {\n        return node.tagName === 'desc';\n      });\n      expect(titleEl).to.exist;\n      expect(titleEl.textContent).to.equal(expectedTitle);\n      expect(descriptionEl).to.exist;\n      expect(descriptionEl.textContent).to.equal(expectedAccDescription);\n    });\n  });","file":"integration/rendering/gantt.spec.js","skipped":false,"dir":"cypress"},{"name":"1: should render a simple gitgraph with commit on main branch","suites":["Git Graph diagram"],"updatePoint":{"line":3,"column":67,"index":163},"line":3,"code":"  it('1: should render a simple gitgraph with commit on main branch', () => {\n    imgSnapshotTest(`gitGraph\n       commit id: \"1\"\n       commit id: \"2\"\n       commit id: \"3\"\n      `, {});\n  });","file":"integration/rendering/gitGraph.spec.js","skipped":false,"dir":"cypress"},{"name":"2: should render a simple gitgraph with commit on main branch with Id","suites":["Git Graph diagram"],"updatePoint":{"line":10,"column":75,"index":365},"line":10,"code":"  it('2: should render a simple gitgraph with commit on main branch with Id', () => {\n    imgSnapshotTest(`gitGraph\n       commit id: \"One\"\n       commit id: \"Two\"\n       commit id: \"Three\"\n      `, {});\n  });","file":"integration/rendering/gitGraph.spec.js","skipped":false,"dir":"cypress"},{"name":"3: should render a simple gitgraph with different commitTypes on main branch ","suites":["Git Graph diagram"],"updatePoint":{"line":17,"column":83,"index":583},"line":17,"code":"  it('3: should render a simple gitgraph with different commitTypes on main branch ', () => {\n    imgSnapshotTest(`gitGraph\n       commit id: \"Normal Commit\"\n       commit id: \"Reverse Commit\" type: REVERSE\n       commit id: \"Hightlight Commit\" type: HIGHLIGHT\n      `, {});\n  });","file":"integration/rendering/gitGraph.spec.js","skipped":false,"dir":"cypress"},{"name":"4: should render a simple gitgraph with tags commitTypes on main branch ","suites":["Git Graph diagram"],"updatePoint":{"line":24,"column":78,"index":859},"line":24,"code":"  it('4: should render a simple gitgraph with tags commitTypes on main branch ', () => {\n    imgSnapshotTest(`gitGraph\n       commit id: \"Normal Commit with tag\" tag: \"v1.0.0\"\n       commit id: \"Reverse Commit with tag\" type: REVERSE tag: \"RC_1\"\n       commit id: \"Hightlight Commit\" type: HIGHLIGHT  tag: \"8.8.4\"\n      `, {});\n  });","file":"integration/rendering/gitGraph.spec.js","skipped":false,"dir":"cypress"},{"name":"5: should render a simple gitgraph with two branches","suites":["Git Graph diagram"],"updatePoint":{"line":31,"column":58,"index":1173},"line":31,"code":"  it('5: should render a simple gitgraph with two branches', () => {\n    imgSnapshotTest(`gitGraph\n       commit id: \"1\"\n       commit id: \"2\"\n       branch develop\n       checkout develop\n       commit id: \"3\"\n       commit id: \"4\"\n       checkout main\n       commit id: \"5\"\n       commit id: \"6\"\n      `, {});\n  });","file":"integration/rendering/gitGraph.spec.js","skipped":false,"dir":"cypress"},{"name":"6: should render a simple gitgraph with two branches and merge commit","suites":["Git Graph diagram"],"updatePoint":{"line":44,"column":75,"index":1508},"line":44,"code":"  it('6: should render a simple gitgraph with two branches and merge commit', () => {\n    imgSnapshotTest(`gitGraph\n       commit id: \"1\"\n       commit id: \"2\"\n       branch develop\n       checkout develop\n       commit id: \"3\"\n       commit id: \"4\"\n       checkout main\n       merge develop\n       commit id: \"5\"\n       commit id: \"6\"\n      `, {});\n  });","file":"integration/rendering/gitGraph.spec.js","skipped":false,"dir":"cypress"},{"name":"7: should render a simple gitgraph with three branches and merge commit","suites":["Git Graph diagram"],"updatePoint":{"line":58,"column":77,"index":1866},"line":58,"code":"  it('7: should render a simple gitgraph with three branches and merge commit', () => {\n    imgSnapshotTest(`gitGraph\n       commit id: \"1\"\n       commit id: \"2\"\n       branch nice_feature\n       checkout nice_feature\n       commit id: \"3\"\n       checkout main\n       commit id: \"4\"\n       checkout nice_feature\n       branch very_nice_feature\n       checkout very_nice_feature\n       commit id: \"5\"\n       checkout main\n       commit id: \"6\"\n       checkout nice_feature\n       commit id: \"7\"\n       checkout main\n       merge nice_feature\n       checkout very_nice_feature\n       commit id: \"8\"\n       checkout main\n       commit id: \"9\"\n      `, {});\n  });","file":"integration/rendering/gitGraph.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a simple info diagrams","suites":["Sequencediagram"],"updatePoint":{"line":3,"column":42,"index":136},"line":3,"code":"  it('should render a simple info diagrams', () => {\n    imgSnapshotTest(`\n    info\n       showInfo\n      `, {});\n  });","file":"integration/rendering/info.spec.js","skipped":false,"dir":"cypress"},{"name":"Simple test","suites":["User journey diagram"],"updatePoint":{"line":3,"column":17,"index":129},"line":3,"code":"  it('Simple test', () => {\n    imgSnapshotTest(`journey\ntitle Adding journey diagram functionality to mermaid\nsection Order from website\n    `, {});\n  });","file":"integration/rendering/journey.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a user journey chart","suites":["User journey diagram"],"updatePoint":{"line":9,"column":40,"index":308},"line":9,"code":"  it('should render a user journey chart', () => {\n    imgSnapshotTest(`\n    journey\n    title My working day\n    section Go to work\n      Make tea: 5: Me\n      Go upstairs: 3: Me\n      Do work: 1: Me, Cat\n    section Go home\n      Go downstairs: 5: Me\n      Sit down: 3: Me\n      `, {});\n  });","file":"integration/rendering/journey.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a user journey diagram when useMaxWidth is true (default)","suites":["User journey diagram"],"updatePoint":{"line":22,"column":77,"index":640},"line":22,"code":"  it('should render a user journey diagram when useMaxWidth is true (default)', () => {\n    renderGraph(`journey\ntitle E-Commerce\nsection Order from website\n  Add to cart: 5: Me\nsection Checkout from website\n  Add payment details: 5: Me\n    `, {\n      journey: {\n        useMaxWidth: true\n      }\n    });\n    cy.get('svg').should(svg => {\n      expect(svg).to.have.attr('width', '100%');\n      expect(svg).to.have.attr('height');\n      const height = parseFloat(svg.attr('height'));\n      expect(height).to.eq(565);\n      const style = svg.attr('style');\n      expect(style).to.match(/^max-width: [\\d.]+px;$/);\n      const maxWidthValue = parseFloat(style.match(/[\\d.]+/g).join(''));\n      expect(maxWidthValue).to.eq(700);\n    });\n  });","file":"integration/rendering/journey.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a user journey diagram when useMaxWidth is false","suites":["User journey diagram"],"updatePoint":{"line":45,"column":68,"index":1369},"line":45,"code":"  it('should render a user journey diagram when useMaxWidth is false', () => {\n    imgSnapshotTest(`journey\ntitle E-Commerce\nsection Order from website\n  Add to cart: 5: Me\nsection Checkout from website\n  Add payment details: 5: Me\n    `, {\n      journey: {\n        useMaxWidth: false\n      }\n    });\n  });","file":"integration/rendering/journey.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a simple pie diagram","suites":["Pie Chart"],"updatePoint":{"line":3,"column":40,"index":141},"line":3,"code":"  it('should render a simple pie diagram', () => {\n    imgSnapshotTest(`\n    pie title Sports in Sweden\n       \"Bandy\" : 40\n       \"Ice-Hockey\" : 80\n       \"Football\" : 90\n      `, {});\n    cy.get('svg');\n  });","file":"integration/rendering/pie.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a simple pie diagram with long labels","suites":["Pie Chart"],"updatePoint":{"line":12,"column":57,"index":369},"line":12,"code":"  it('should render a simple pie diagram with long labels', () => {\n    imgSnapshotTest(`\n      pie title NETFLIX\n         \"Time spent looking for movie\" : 90\n         \"Time spent watching it\" : 10\n        `, {});\n    cy.get('svg');\n  });","file":"integration/rendering/pie.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a simple pie diagram with capital letters for labels","suites":["Pie Chart"],"updatePoint":{"line":20,"column":72,"index":623},"line":20,"code":"  it('should render a simple pie diagram with capital letters for labels', () => {\n    imgSnapshotTest(`\n      pie title What Voldemort doesn't have?\n         \"FRIENDS\" : 2\n         \"FAMILY\" : 3\n         \"NOSE\" : 45\n        `, {});\n    cy.get('svg');\n  });","file":"integration/rendering/pie.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a pie diagram when useMaxWidth is true (default)","suites":["Pie Chart"],"updatePoint":{"line":29,"column":68,"index":876},"line":29,"code":"  it('should render a pie diagram when useMaxWidth is true (default)', () => {\n    renderGraph(`\n    pie title Sports in Sweden\n       \"Bandy\" : 40\n       \"Ice-Hockey\" : 80\n       \"Football\" : 90\n      `, {\n      pie: {\n        useMaxWidth: true\n      }\n    });\n    cy.get('svg').should(svg => {\n      expect(svg).to.have.attr('width', '100%');\n      expect(svg).to.have.attr('height');\n      const height = parseFloat(svg.attr('height'));\n      expect(height).to.eq(450);\n      const style = svg.attr('style');\n      expect(style).to.match(/^max-width: [\\d.]+px;$/);\n      const maxWidthValue = parseFloat(style.match(/[\\d.]+/g).join(''));\n      expect(maxWidthValue).to.eq(984);\n    });\n  });","file":"integration/rendering/pie.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a pie diagram when useMaxWidth is false","suites":["Pie Chart"],"updatePoint":{"line":51,"column":59,"index":1562},"line":51,"code":"  it('should render a pie diagram when useMaxWidth is false', () => {\n    renderGraph(`\n    pie title Sports in Sweden\n       \"Bandy\" : 40\n       \"Ice-Hockey\" : 80\n       \"Football\" : 90\n      `, {\n      pie: {\n        useMaxWidth: false\n      }\n    });\n    cy.get('svg').should(svg => {\n      const height = parseFloat(svg.attr('height'));\n      const width = parseFloat(svg.attr('width'));\n      expect(height).to.eq(450);\n      expect(width).to.eq(984);\n      expect(svg).to.not.have.attr('style');\n    });\n  });","file":"integration/rendering/pie.spec.js","skipped":false,"dir":"cypress"},{"name":"sample","suites":["Requirement diagram"],"updatePoint":{"line":3,"column":12,"index":123},"line":3,"code":"  it('sample', () => {\n    imgSnapshotTest(`\n    requirementDiagram\n\n    requirement test_req {\n    id: 1\n    text: the test text.\n    risk: high\n    verifymethod: test\n    }\n\n    functionalRequirement test_req2 {\n    id: 1.1\n    text: the second test text.\n    risk: low\n    verifymethod: inspection\n    }\n\n    performanceRequirement test_req3 {\n    id: 1.2\n    text: the third test text.\n    risk: medium\n    verifymethod: demonstration\n    }\n\n    element test_entity {\n    type: simulation\n    }\n\n    element test_entity2 {\n    type: word doc\n    docRef: reqs/test_entity\n    }\n\n\n    test_entity - satisfies -> test_req2\n    test_req - traces -> test_req2\n    test_req - contains -> test_req3\n    test_req <- copies - test_entity2\n      `, {});\n    cy.get('svg');\n  });","file":"integration/rendering/requirement.spec.js","skipped":false,"dir":"cypress"},{"name":"should render accessibility tags","suites":["Requirement diagram"],"updatePoint":{"line":45,"column":38,"index":922},"line":45,"code":"  it('should render accessibility tags', function () {\n    const expectedTitle = 'Gantt Diagram';\n    const expectedAccDescription = 'Tasks for Q4';\n    renderGraph(`\n    requirementDiagram\n    accTitle: ${expectedTitle}\n    accDescr: ${expectedAccDescription}\n\n    requirement test_req {\n    id: 1\n    text: the test text.\n    risk: high\n    verifymethod: test\n    }\n\n    functionalRequirement test_req2 {\n    id: 1.1\n    text: the second test text.\n    risk: low\n    verifymethod: inspection\n    }\n\n    performanceRequirement test_req3 {\n    id: 1.2\n    text: the third test text.\n    risk: medium\n    verifymethod: demonstration\n    }\n\n    element test_entity {\n    type: simulation\n    }\n\n    element test_entity2 {\n    type: word doc\n    docRef: reqs/test_entity\n    }\n\n\n    test_entity - satisfies -> test_req2\n    test_req - traces -> test_req2\n    test_req - contains -> test_req3\n    test_req <- copies - test_entity2\n      `, {});\n    cy.get('svg').should(svg => {\n      const el = svg.get(0);\n      const children = Array.from(el.children);\n      const titleEl = children.find(function (node) {\n        return node.tagName === 'title';\n      });\n      const descriptionEl = children.find(function (node) {\n        return node.tagName === 'desc';\n      });\n      expect(titleEl).to.exist;\n      expect(titleEl.textContent).to.equal(expectedTitle);\n      expect(descriptionEl).to.exist;\n      expect(descriptionEl.textContent).to.equal(expectedAccDescription);\n    });\n  });","file":"integration/rendering/requirement.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a simple sequence diagram","suites":[],"updatePoint":{"line":4,"column":45,"index":183},"line":4,"code":"  it('should render a simple sequence diagram', () => {\n    imgSnapshotTest(`\n      sequenceDiagram\n        participant Alice\n        participant Bob\n        participant John as John<br/>Second Line\n        Alice ->> Bob: Hello Bob, how are you?\n        Bob-->>John: How about you John?\n        Bob--x Alice: I am good thanks!\n        Bob-x John: I am good thanks!\n        Note right of John: Bob thinks a long<br/>long time, so long<br/>that the text does<br/>not fit on a row.\n        Bob-->Alice: Checking with John...\n        alt either this\n          Alice->>John: Yes\n          else or this\n          Alice->>John: No\n          else or this will happen\n          Alice->John: Maybe\n        end\n        par this happens in parallel\n        Alice -->> Bob: Parallel message 1\n        and\n        Alice -->> John: Parallel message 2\n        end\n      `, {\n      sequence: {\n        actorFontFamily: 'courier'\n      }\n    });\n  });","file":"integration/rendering/sequencediagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should handle different line breaks","suites":[],"updatePoint":{"line":34,"column":41,"index":1113},"line":34,"code":"  it('should handle different line breaks', () => {\n    imgSnapshotTest(`\n      sequenceDiagram\n      participant 1 as multiline<br>using #lt;br#gt;\n      participant 2 as multiline<br/>using #lt;br/#gt;\n      participant 3 as multiline<br />using #lt;br /#gt;\n      participant 4 as multiline<br \\t/>using #lt;br \\t/#gt;\n      1->>2: multiline<br>using #lt;br#gt;\n      note right of 2: multiline<br>using #lt;br#gt;\n      2->>3: multiline<br/>using #lt;br/#gt;\n      note right of 3: multiline<br/>using #lt;br/#gt;\n      3->>4: multiline<br />using #lt;br /#gt;\n      note right of 4: multiline<br />using #lt;br /#gt;\n      4->>1: multiline<br />using #lt;br /#gt;\n      note right of 1: multiline<br \\t/>using #lt;br \\t/#gt;\n    `, {});\n  });","file":"integration/rendering/sequencediagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should handle line breaks and wrap annotations","suites":[],"updatePoint":{"line":51,"column":52,"index":1872},"line":51,"code":"  it('should handle line breaks and wrap annotations', () => {\n    imgSnapshotTest(`\n      sequenceDiagram\n      participant Alice\n      participant Bob\n      participant John as John<br/>Second Line\n      Alice ->> Bob: Hello Bob, how are you?\n      Bob-->>John: How about you John?\n      Note right of John: John thinks a long<br/>long time, so long<br/>that the text does<br/>not fit on a row.\n      Bob-->Alice: Checking with John...\n      Note over John:wrap: John looks like he's still thinking, so Bob prods him a bit.\n      Bob-x John: Hey John -<br/>we're still waiting to know<br/>how you're doing\n      Note over John:nowrap: John's trying hard not to break his train of thought.\n      Bob-x John:wrap: John! Are you still debating about how you're doing? How long does it take??\n      Note over John: After a few more moments, John<br/>finally snaps out of it.\n    `, {});\n  });","file":"integration/rendering/sequencediagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render loops with a slight margin","suites":[],"updatePoint":{"line":68,"column":46,"index":2757},"line":68,"code":"  it('should render loops with a slight margin', () => {\n    imgSnapshotTest(`\n        sequenceDiagram\n        Alice->>Bob: Extremely utterly long line of longness which had preivously overflown the actor box as it is much longer than what it should be\n        loop Loopy\n            Bob->>Alice: Pasten\n        end      `, {});\n  });","file":"integration/rendering/sequencediagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render different note fonts when configured","suites":[],"updatePoint":{"line":77,"column":58,"index":3139},"line":77,"code":"    it('should render different note fonts when configured', () => {\n      imgSnapshotTest(`\n        sequenceDiagram\n        Alice->>Bob: I'm short\n        note left of Alice: I should have bigger fonts\n        Bob->>Alice: Short as well\n      `, {\n        sequence: {\n          noteFontSize: 18,\n          noteFontFamily: 'Arial'\n        }\n      });\n    });","file":"integration/rendering/sequencediagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render different message fonts when configured","suites":[],"updatePoint":{"line":90,"column":61,"index":3501},"line":90,"code":"    it('should render different message fonts when configured', () => {\n      imgSnapshotTest(`\n        sequenceDiagram\n        Alice->>Bob: I'm short\n        Bob->>Alice: Short as well\n      `, {\n        sequence: {\n          messageFontSize: 18,\n          messageFontFamily: 'Arial'\n        }\n      });\n    });","file":"integration/rendering/sequencediagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render different actor fonts when configured","suites":[],"updatePoint":{"line":102,"column":59,"index":3812},"line":102,"code":"    it('should render different actor fonts when configured', () => {\n      imgSnapshotTest(`\n        sequenceDiagram\n        Alice->>Bob: I'm short\n        Bob->>Alice: Short as well\n      `, {\n        sequence: {\n          actorFontSize: 18,\n          actorFontFamily: 'times'\n        }\n      });\n    });","file":"integration/rendering/sequencediagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render notes aligned to the left when configured","suites":[],"updatePoint":{"line":114,"column":63,"index":4123},"line":114,"code":"    it('should render notes aligned to the left when configured', () => {\n      imgSnapshotTest(`\n        sequenceDiagram\n        Alice->>Bob: I'm short\n        note left of Alice: I am left aligned\n        Bob->>Alice: Short as well\n      `, {\n        sequence: {\n          noteAlign: 'left'\n        }\n      });\n    });","file":"integration/rendering/sequencediagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render notes aligned to the right when configured","suites":[],"updatePoint":{"line":126,"column":64,"index":4445},"line":126,"code":"    it('should render notes aligned to the right when configured', () => {\n      imgSnapshotTest(`\n        sequenceDiagram\n        Alice->>Bob: I'm short\n        note left of Alice: I am right aligned\n        Bob->>Alice: Short as well\n      `, {\n        sequence: {\n          noteAlign: 'right'\n        }\n      });\n    });","file":"integration/rendering/sequencediagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render long actor descriptions","suites":[],"updatePoint":{"line":140,"column":45,"index":4796},"line":140,"code":"    it('should render long actor descriptions', () => {\n      imgSnapshotTest(`\n        sequenceDiagram\n        participant A as Extremely utterly long line of longness which had preivously overflown the actor box as it is much longer than what it should be\n        A->>Bob: Hola\n        Bob-->A: Pasten !\n      `, {\n        logLevel: 0\n      });\n    });","file":"integration/rendering/sequencediagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should wrap (inline) long actor descriptions","suites":[],"updatePoint":{"line":150,"column":52,"index":5158},"line":150,"code":"    it('should wrap (inline) long actor descriptions', () => {\n      imgSnapshotTest(`\n        sequenceDiagram\n        participant A as wrap:Extremely utterly long line of longness which had preivously overflown the actor box as it is much longer than what it should be\n        A->>Bob: Hola\n        Bob-->A: Pasten !\n      `, {\n        logLevel: 0\n      });\n    });","file":"integration/rendering/sequencediagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should wrap (directive) long actor descriptions","suites":[],"updatePoint":{"line":160,"column":55,"index":5528},"line":160,"code":"    it('should wrap (directive) long actor descriptions', () => {\n      imgSnapshotTest(`\n        %%{init: {'config': {'wrap': true }}}%%\n        sequenceDiagram\n        participant A as Extremely utterly long line of longness which had preivously overflown the actor box as it is much longer than what it should be\n        A->>Bob: Hola\n        Bob-->A: Pasten !\n      `, {});\n    });","file":"integration/rendering/sequencediagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should be possible to use actor symbols instead of boxes","suites":[],"updatePoint":{"line":169,"column":64,"index":5923},"line":169,"code":"    it('should be possible to use actor symbols instead of boxes', () => {\n      imgSnapshotTest(`\n        sequenceDiagram\n          actor Alice\n          actor Bob\n          Alice->>Bob: Hi Bob\n          Bob->>Alice: Hi Alice\n      `, {});\n    });","file":"integration/rendering/sequencediagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render long notes left of actor","suites":[],"updatePoint":{"line":178,"column":46,"index":6154},"line":178,"code":"    it('should render long notes left of actor', () => {\n      imgSnapshotTest(`\n        sequenceDiagram\n        Alice->>Bob: Hola\n        Note left of Alice: Extremely utterly long line of longness which had preivously overflown the actor box as it is much longer than what it should be\n        Bob->>Alice: I'm short though\n      `, {});\n    });","file":"integration/rendering/sequencediagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render long notes wrapped (inline) left of actor","suites":[],"updatePoint":{"line":186,"column":63,"index":6519},"line":186,"code":"    it('should render long notes wrapped (inline) left of actor', () => {\n      imgSnapshotTest(`\n        sequenceDiagram\n        Alice->>Bob: Hola\n        Note left of Alice:wrap: Extremely utterly long line of longness which had preivously overflown the actor box as it is much longer than what it should be\n        Bob->>Alice: I'm short though\n      `, {});\n    });","file":"integration/rendering/sequencediagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render long notes right of actor","suites":[],"updatePoint":{"line":194,"column":47,"index":6873},"line":194,"code":"    it('should render long notes right of actor', () => {\n      imgSnapshotTest(`\n        sequenceDiagram\n        Alice->>Bob: Hola\n        Note right of Alice: Extremely utterly long line of longness which had preivously overflown the actor box as it is much longer than what it should be\n        Bob->>Alice: I'm short though\n      `, {});\n    });","file":"integration/rendering/sequencediagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render long notes wrapped (inline) right of actor","suites":[],"updatePoint":{"line":202,"column":64,"index":7240},"line":202,"code":"    it('should render long notes wrapped (inline) right of actor', () => {\n      imgSnapshotTest(`\n        sequenceDiagram\n        Alice->>Bob: Hola\n        Note right of Alice:wrap: Extremely utterly long line of longness which had preivously overflown the actor box as it is much longer than what it should be\n        Bob->>Alice: I'm short though\n      `, {});\n    });","file":"integration/rendering/sequencediagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render long notes over actor","suites":[],"updatePoint":{"line":210,"column":43,"index":7591},"line":210,"code":"    it('should render long notes over actor', () => {\n      imgSnapshotTest(`\n        sequenceDiagram\n        Alice->>Bob: Hola\n        Note over Alice: Extremely utterly long line of longness which had preivously overflown the actor box as it is much longer than what it should be\n        Bob->>Alice: I'm short though\n      `, {});\n    });","file":"integration/rendering/sequencediagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render long notes wrapped (inline) over actor","suites":[],"updatePoint":{"line":218,"column":60,"index":7950},"line":218,"code":"    it('should render long notes wrapped (inline) over actor', () => {\n      imgSnapshotTest(`\n        sequenceDiagram\n        Alice->>Bob: Hola\n        Note over Alice:wrap: Extremely utterly long line of longness which had preivously overflown the actor box as it is much longer than what it should be\n        Bob->>Alice: I'm short though\n      `, {});\n    });","file":"integration/rendering/sequencediagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render long messages from an actor to the left to one to the right","suites":[],"updatePoint":{"line":226,"column":81,"index":8335},"line":226,"code":"    it('should render long messages from an actor to the left to one to the right', () => {\n      imgSnapshotTest(`\n        sequenceDiagram\n        Alice->>Bob: Extremely utterly long line of longness which had preivously overflown the actor box as it is much longer than what it should be\n        Bob->>Alice: I'm short though\n      `, {});\n    });","file":"integration/rendering/sequencediagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render long messages wrapped (inline) from an actor to the left to one to the right","suites":[],"updatePoint":{"line":233,"column":98,"index":8702},"line":233,"code":"    it('should render long messages wrapped (inline) from an actor to the left to one to the right', () => {\n      imgSnapshotTest(`\n        sequenceDiagram\n        Alice->>Bob:wrap:Extremely utterly long line of longness which had preivously overflown the actor box as it is much longer than what it should be\n        Bob->>Alice: I'm short though\n      `, {});\n    });","file":"integration/rendering/sequencediagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render long messages from an actor to the right to one to the left","suites":[],"updatePoint":{"line":240,"column":81,"index":9056},"line":240,"code":"    it('should render long messages from an actor to the right to one to the left', () => {\n      imgSnapshotTest(`\n        sequenceDiagram\n        Alice->>Bob: I'm short\n        Bob->>Alice: Extremely utterly long line of longness which had preivously overflown the actor box as it is much longer than what it should be\n      `, {});\n    });","file":"integration/rendering/sequencediagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render long messages wrapped (inline) from an actor to the right to one to the left","suites":[],"updatePoint":{"line":247,"column":98,"index":9416},"line":247,"code":"    it('should render long messages wrapped (inline) from an actor to the right to one to the left', () => {\n      imgSnapshotTest(`\n        sequenceDiagram\n        Alice->>Bob: I'm short\n        Bob->>Alice:wrap: Extremely utterly long line of longness which had preivously overflown the actor box as it is much longer than what it should be\n      `, {});\n    });","file":"integration/rendering/sequencediagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a single and nested rects","suites":[],"updatePoint":{"line":256,"column":47,"index":9774},"line":256,"code":"    it('should render a single and nested rects', () => {\n      imgSnapshotTest(`\n        sequenceDiagram\n          participant A\n          participant B\n          participant C\n          participant D\n          participant E\n          participant G\n\n          A ->>+ B: Task 1\n          rect rgb(178, 102, 255)\n            B ->>+ C: Task 2\n            C -->>- B: Return\n          end\n\n          A ->> D: Task 3\n          rect rgb(0, 128, 255)\n            D ->>+ E: Task 4\n            rect rgb(0, 204, 0)\n            E ->>+ G: Task 5\n            G -->>- E: Return\n            end\n            E ->> E: Task 6\n          end\n          D -->> A: Complete\n      `, {});\n    });","file":"integration/rendering/sequencediagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a single and nested opt with long test overflowing","suites":[],"updatePoint":{"line":284,"column":72,"index":10472},"line":284,"code":"    it('should render a single and nested opt with long test overflowing', () => {\n      imgSnapshotTest(`\n        sequenceDiagram\n          participant A\n          participant B\n          participant C\n          participant D\n          participant E\n          participant G\n\n          A ->>+ B: Task 1\n          opt this is an opt with a long title that will overflow\n            B ->>+ C: Task 2\n            C -->>- B: Return\n          end\n\n          A ->> D: Task 3\n          opt this is another opt with a long title that will overflow\n            D ->>+ E: Task 4\n            opt this is a nested opt with a long title that will overflow\n            E ->>+ G: Task 5\n            G -->>- E: Return\n            end\n            E ->> E: Task 6\n          end\n          D -->> A: Complete\n      `, {});\n    });","file":"integration/rendering/sequencediagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a single and nested opt with long test wrapping","suites":[],"updatePoint":{"line":312,"column":69,"index":11280},"line":312,"code":"    it('should render a single and nested opt with long test wrapping', () => {\n      imgSnapshotTest(`\n        %%{init: { 'config': { 'wrap': true } } }%%\n        sequenceDiagram\n          participant A\n          participant B\n          participant C\n          participant D\n          participant E\n          participant G\n\n          A ->>+ B: Task 1\n          opt this is an opt with a long title that will overflow\n            B ->>+ C: Task 2\n            C -->>- B: Return\n          end\n\n          A ->> D: Task 3\n          opt this is another opt with a long title that will overflow\n            D ->>+ E: Task 4\n            opt this is a nested opt with a long title that will overflow\n            E ->>+ G: Task 5\n            G -->>- E: Return\n            end\n            E ->> E: Task 6\n          end\n          D -->> A: Complete\n      `, {});\n    });","file":"integration/rendering/sequencediagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render rect around and inside loops","suites":[],"updatePoint":{"line":341,"column":50,"index":12121},"line":341,"code":"    it('should render rect around and inside loops', () => {\n      imgSnapshotTest(`\n        sequenceDiagram\n          A ->> B: 1\n          rect rgb(204, 0, 102)\n            loop check C\n              C ->> C: Every 10 seconds\n            end\n          end\n          A ->> B: 2\n          loop check D\n            C ->> D: 3\n            rect rgb(153, 153, 255)\n            D -->> D: 5\n            D --> C: 4\n            end\n          end\n      `, {});\n    });","file":"integration/rendering/sequencediagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render rect around and inside alts","suites":[],"updatePoint":{"line":360,"column":49,"index":12579},"line":360,"code":"    it('should render rect around and inside alts', () => {\n      imgSnapshotTest(`\n        sequenceDiagram\n          A ->> B: 1\n          rect rgb(204, 0, 102)\n            alt yes\n              C ->> C: 1\n            else no\n              rect rgb(0, 204, 204)\n                C ->> C: 0\n              end\n            end\n          end\n          B ->> A: Return\n      `, {});\n    });","file":"integration/rendering/sequencediagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render rect around and inside opts","suites":[],"updatePoint":{"line":376,"column":49,"index":12964},"line":376,"code":"    it('should render rect around and inside opts', () => {\n      imgSnapshotTest(`\n        sequenceDiagram\n          A ->> B: 1\n          rect rgb(204, 0, 102)\n            opt maybe\n              C -->> D: Do something\n              rect rgb(0, 204, 204)\n                C ->> C: 0\n              end\n            end\n          end\n\n          opt possibly\n            rect rgb(0, 204, 204)\n              C ->> C: 0\n            end\n          end\n          B ->> A: Return\n      `, {});\n    });","file":"integration/rendering/sequencediagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render autonumber when configured with such","suites":[],"updatePoint":{"line":397,"column":58,"index":13465},"line":397,"code":"    it('should render autonumber when configured with such', () => {\n      imgSnapshotTest(`\n        sequenceDiagram\n        Alice->>John: Hello John, how are you?\n        loop Healthcheck\n            John->>John: Fight against hypochondria\n        end\n        Note right of John: Rational thoughts!\n        John-->>Alice: Great!\n        John->>Bob: How about you?\n        Bob-->>John: Jolly good!\n      `, {\n        sequence: {\n          actorMargin: 50,\n          showSequenceNumbers: true\n        }\n      });\n    });","file":"integration/rendering/sequencediagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render autonumber when autonumber keyword is used","suites":[],"updatePoint":{"line":415,"column":64,"index":13991},"line":415,"code":"    it('should render autonumber when autonumber keyword is used', () => {\n      imgSnapshotTest(`\n        sequenceDiagram\n        autonumber\n        Alice->>John: Hello John, how are you?\n        loop Healthcheck\n            John->>John: Fight against hypochondria\n        end\n        Note right of John: Rational thoughts!\n        John-->>Alice: Great!\n        John->>Bob: How about you?\n        Bob-->>John: Jolly good!\n      `, {});\n    });","file":"integration/rendering/sequencediagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render autonumber with different line breaks","suites":[],"updatePoint":{"line":429,"column":59,"index":14431},"line":429,"code":"    it('should render autonumber with different line breaks', () => {\n      imgSnapshotTest(`\n        sequenceDiagram\n        autonumber\n        Alice->>John: Hello John,<br>how are you?\n        Alice->>John: John,<br/>can you hear me?\n        John-->>Alice: Hi Alice,<br />I can hear you!\n        John-->>Alice: I feel great!\n      `, {});\n    });","file":"integration/rendering/sequencediagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render dark theme from init directive and configure font size 24 font","suites":[],"updatePoint":{"line":439,"column":84,"index":14805},"line":439,"code":"    it('should render dark theme from init directive and configure font size 24 font', () => {\n      imgSnapshotTest(`\n        %%{init: {'theme': 'dark', 'config': {'fontSize': 24}}}%%\n        sequenceDiagram\n        Alice->>John: Hello John, how are you?\n        Alice->>John: John, can you hear me?\n        John-->>Alice: Hi Alice, I can hear you!\n        John-->>Alice: I feel great!\n      `, {});\n    });","file":"integration/rendering/sequencediagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render with wrapping enabled","suites":[],"updatePoint":{"line":449,"column":43,"index":15173},"line":449,"code":"    it('should render with wrapping enabled', () => {\n      imgSnapshotTest(`\n        %%{init: { 'config': { 'wrap': true }}}%%\n        sequenceDiagram\n        participant A as Alice, the talkative one\n        A->>John: Hello John, how are you today? I'm feeling quite verbose today.\n        A->>John: John, can you hear me? If you are not available, we can talk later.\n        John-->>A: Hi Alice, I can hear you! I was finishing up an important meeting.\n        John-->>A: I feel great! I was not ignoring you. I am sorry you had to wait for a response.\n      `, {});\n    });","file":"integration/rendering/sequencediagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render with an init directive","suites":[],"updatePoint":{"line":460,"column":44,"index":15752},"line":460,"code":"    it('should render with an init directive', () => {\n      imgSnapshotTest(`%%{init: { \"theme\": \"dark\", 'config': { \"fontFamily\": \"Menlo\", \"fontSize\": 18, \"fontWeight\": 400, \"wrap\": true }}}%%\n          sequenceDiagram\n          Alice->>Bob: Hello Bob, how are you? If you are not available right now, I can leave you a message. Please get back to me as soon as you can!\n          Note left of Alice: Bob thinks\n          Bob->>Alice: Fine!`, {});\n    });","file":"integration/rendering/sequencediagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should override config with directive settings","suites":[],"updatePoint":{"line":469,"column":54,"index":16258},"line":469,"code":"    it('should override config with directive settings', () => {\n      imgSnapshotTest(`\n        %%{init: { \"config\": { \"mirrorActors\": true }}}%%\n        sequenceDiagram\n        Alice->>Bob: I'm short\n        note left of Alice: config set to mirrorActors: false<br/>directive set to mirrorActors: true\n        Bob->>Alice: Short as well\n      `, {\n        logLevel: 0,\n        sequence: {\n          mirrorActors: false,\n          noteFontSize: 18,\n          noteFontFamily: 'Arial'\n        }\n      });\n    });","file":"integration/rendering/sequencediagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should override config with directive settings 2","suites":[],"updatePoint":{"line":485,"column":56,"index":16772},"line":485,"code":"    it('should override config with directive settings 2', () => {\n      imgSnapshotTest(`\n        %%{init: { \"config\": { \"mirrorActors\": false, \"wrap\": true }}}%%\n        sequenceDiagram\n        Alice->>Bob: I'm short\n        note left of Alice: config: mirrorActors=true<br/>directive: mirrorActors=false\n        Bob->>Alice: Short as well\n      `, {\n        logLevel: 0,\n        sequence: {\n          mirrorActors: true,\n          noteFontSize: 18,\n          noteFontFamily: 'Arial'\n        }\n      });\n    });","file":"integration/rendering/sequencediagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should support actor links and properties EXPERIMENTAL: USE WITH CAUTION","suites":[],"updatePoint":{"line":503,"column":80,"index":17343},"line":503,"code":"    it('should support actor links and properties EXPERIMENTAL: USE WITH CAUTION', () => {\n      //Be aware that the syntax for \"properties\" is likely to be changed.\n      imgSnapshotTest(`\n        %%{init: { \"config\": { \"mirrorActors\": true, \"forceMenus\": true }}}%%\n        sequenceDiagram\n        participant a as Alice\n        participant j as John\n        note right of a: Hello world!\n        properties a: {\"class\": \"internal-service-actor\", \"type\": \"@clock\"}\n        properties j: {\"class\": \"external-service-actor\", \"type\": \"@computer\"}\n        links a: {\"Repo\": \"https://www.contoso.com/repo\", \"Swagger\": \"https://www.contoso.com/swagger\"}\n        links j: {\"Repo\": \"https://www.contoso.com/repo\"}\n        links a: {\"Dashboard\": \"https://www.contoso.com/dashboard\", \"On-Call\": \"https://www.contoso.com/oncall\"}\n        link a: Contacts @ https://contacts.contoso.com/?contact=alice@contoso.com\n        a->>j: Hello John, how are you?\n        j-->>a: Great!\n      `, {\n        logLevel: 0,\n        sequence: {\n          mirrorActors: true,\n          noteFontSize: 18,\n          noteFontFamily: 'Arial'\n        }\n      });\n    });","file":"integration/rendering/sequencediagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should support actor links and properties when not mirrored EXPERIMENTAL: USE WITH CAUTION","suites":[],"updatePoint":{"line":528,"column":98,"index":18500},"line":528,"code":"    it('should support actor links and properties when not mirrored EXPERIMENTAL: USE WITH CAUTION', () => {\n      //Be aware that the syntax for \"properties\" is likely to be changed.\n      imgSnapshotTest(`\n        %%{init: { \"config\": { \"mirrorActors\": false, \"forceMenus\": true, \"wrap\": true }}}%%\n        sequenceDiagram\n        participant a as Alice\n        participant j as John\n        note right of a: Hello world!\n        properties a: {\"class\": \"internal-service-actor\", \"type\": \"@clock\"}\n        properties j: {\"class\": \"external-service-actor\", \"type\": \"@computer\"}\n        links a: {\"Repo\": \"https://www.contoso.com/repo\", \"Swagger\": \"https://www.contoso.com/swagger\"}\n        links j: {\"Repo\": \"https://www.contoso.com/repo\"}\n        links a: {\"Dashboard\": \"https://www.contoso.com/dashboard\", \"On-Call\": \"https://www.contoso.com/oncall\"}\n        a->>j: Hello John, how are you?\n        j-->>a: Great!\n      `, {\n        logLevel: 0,\n        sequence: {\n          mirrorActors: false,\n          noteFontSize: 18,\n          noteFontFamily: 'Arial'\n        }\n      });\n    });","file":"integration/rendering/sequencediagram.spec.js","skipped":false,"dir":"cypress"},{"name":"shouldn't display unused participants","suites":[],"updatePoint":{"line":552,"column":45,"index":19537},"line":552,"code":"    it(\"shouldn't display unused participants\", () => {\n      //Be aware that the syntax for \"properties\" is likely to be changed.\n      imgSnapshotTest(`\n        %%{init: { \"config\": { \"sequence\": {\"hideUnusedParticipants\": true }}}}%%\n        sequenceDiagram\n        participant a\n      `, {\n        logLevel: 0,\n        sequence: {\n          mirrorActors: false,\n          noteFontSize: 18,\n          noteFontFamily: 'Arial'\n        }\n      });\n    });","file":"integration/rendering/sequencediagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a sequence diagram when useMaxWidth is true (default)","suites":[],"updatePoint":{"line":569,"column":75,"index":20059},"line":569,"code":"    it('should render a sequence diagram when useMaxWidth is true (default)', () => {\n      renderGraph(`\n      sequenceDiagram\n        participant Alice\n        participant Bob\n        participant John as John<br/>Second Line\n        Alice ->> Bob: Hello Bob, how are you?\n        Bob-->>John: How about you John?\n        Bob--x Alice: I am good thanks!\n        Bob-x John: I am good thanks!\n        Note right of John: Bob thinks a long<br/>long time, so long<br/>that the text does<br/>not fit on a row.\n        Bob-->Alice: Checking with John...\n        alt either this\n          Alice->>John: Yes\n          else or this\n          Alice->>John: No\n          else or this will happen\n          Alice->John: Maybe\n        end\n        par this happens in parallel\n        Alice -->> Bob: Parallel message 1\n        and\n        Alice -->> John: Parallel message 2\n        end\n      `, {\n        sequence: {\n          useMaxWidth: true\n        }\n      });\n      cy.get('svg').should(svg => {\n        expect(svg).to.have.attr('width', '100%');\n        expect(svg).to.have.attr('height');\n        const height = parseFloat(svg.attr('height'));\n        expect(height).to.be.within(920, 971);\n        const style = svg.attr('style');\n        expect(style).to.match(/^max-width: [\\d.]+px;$/);\n        const maxWidthValue = parseFloat(style.match(/[\\d.]+/g).join('')); // use within because the absolute value can be slightly different depending on the environment ±5%\n\n        expect(maxWidthValue).to.be.within(820 * 0.95, 820 * 1.05);\n      });\n    });","file":"integration/rendering/sequencediagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a sequence diagram when useMaxWidth is false","suites":[],"updatePoint":{"line":610,"column":66,"index":21599},"line":610,"code":"    it('should render a sequence diagram when useMaxWidth is false', () => {\n      renderGraph(`\n      sequenceDiagram\n        participant Alice\n        participant Bob\n        participant John as John<br/>Second Line\n        Alice ->> Bob: Hello Bob, how are you?\n        Bob-->>John: How about you John?\n        Bob--x Alice: I am good thanks!\n        Bob-x John: I am good thanks!\n        Note right of John: Bob thinks a long<br/>long time, so long<br/>that the text does<br/>not fit on a row.\n        Bob-->Alice: Checking with John...\n        alt either this\n          Alice->>John: Yes\n          else or this\n          Alice->>John: No\n          else or this will happen\n          Alice->John: Maybe\n        end\n        par this happens in parallel\n        Alice -->> Bob: Parallel message 1\n        and\n        Alice -->> John: Parallel message 2\n        end\n      `, {\n        sequence: {\n          useMaxWidth: false\n        }\n      });\n      cy.get('svg').should(svg => {\n        const height = parseFloat(svg.attr('height'));\n        const width = parseFloat(svg.attr('width'));\n        expect(height).to.be.within(920, 971); // use within because the absolute value can be slightly different depending on the environment ±5%\n\n        expect(width).to.be.within(820 * 0.95, 820 * 1.05);\n        expect(svg).to.not.have.attr('style');\n      });\n    });","file":"integration/rendering/sequencediagram.spec.js","skipped":false,"dir":"cypress"},{"name":"v2 should render a simple info","suites":["State diagram"],"updatePoint":{"line":3,"column":36,"index":138},"line":3,"code":"  it('v2 should render a simple info', () => {\n    imgSnapshotTest(`\n    info\n      `, {\n      logLevel: 1,\n      fontFamily: 'courier'\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/stateDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"v2 should render a simple state diagrams","suites":["State diagram"],"updatePoint":{"line":12,"column":46,"index":317},"line":12,"code":"  it('v2 should render a simple state diagrams', () => {\n    imgSnapshotTest(`\n    stateDiagram-v2\n\n    [*] --> State1\n    State1 --> [*]\n      `, {\n      logLevel: 0,\n      fontFamily: 'courier'\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/stateDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"v2 should render a long descriptions instead of id when available","suites":["State diagram"],"updatePoint":{"line":24,"column":71,"index":571},"line":24,"code":"  it('v2 should render a long descriptions instead of id when available', () => {\n    imgSnapshotTest(`\n      stateDiagram-v2\n\n      [*] --> S1\n      state \"Some long name\" as S1\n      `, {\n      logLevel: 0,\n      fontFamily: 'courier'\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/stateDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"v2 should render a long descriptions with additional descriptions","suites":["State diagram"],"updatePoint":{"line":36,"column":71,"index":841},"line":36,"code":"  it('v2 should render a long descriptions with additional descriptions', () => {\n    imgSnapshotTest(`\n      stateDiagram-v2\n\n      [*] --> S1\n      state \"Some long name\" as S1: The description\n      `, {\n      logLevel: 0,\n      fontFamily: 'courier'\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/stateDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"v2 should render a single state with short descriptions","suites":["State diagram"],"updatePoint":{"line":48,"column":61,"index":1118},"line":48,"code":"  it('v2 should render a single state with short descriptions', () => {\n    imgSnapshotTest(`\n    stateDiagram-v2\n      state \"A long long name\" as long1\n      state \"A\" as longlonglongid\n      `, {\n      logLevel: 0,\n      fontFamily: 'courier'\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/stateDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"v2 should render a transition descriptions with new lines","suites":["State diagram"],"updatePoint":{"line":59,"column":63,"index":1399},"line":59,"code":"  it('v2 should render a transition descriptions with new lines', () => {\n    imgSnapshotTest(`\n      stateDiagram-v2\n\n      [*] --> S1\n      S1 --> S2: long line using<br/>should work\n      S1 --> S3: long line using <br>should work\n      S1 --> S4: long line using \\\\nshould work\n      `, {\n      logLevel: 0,\n      fontFamily: 'courier'\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/stateDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"v2 should render a state with a note","suites":["State diagram"],"updatePoint":{"line":73,"column":42,"index":1751},"line":73,"code":"  it('v2 should render a state with a note', () => {\n    imgSnapshotTest(`\n    stateDiagram-v2\n    State1: The state with a note\n    note right of State1\n      Important information! You can write\n      notes.\n    end note\n      `, {\n      logLevel: 0,\n      fontFamily: 'courier'\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/stateDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"v2 should render a state with on the left side when so specified","suites":["State diagram"],"updatePoint":{"line":87,"column":70,"index":2093},"line":87,"code":"  it('v2 should render a state with on the left side when so specified', () => {\n    imgSnapshotTest(`\n    stateDiagram-v2\n    State1: The state with a note with minus - and plus + in it\n    note left of State1\n      Important information! You can write\n      notes with . and  in them.\n    end note\n      `, {\n      logLevel: 0,\n      fontFamily: 'courier'\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/stateDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"v2 should render a state with a note together with another state","suites":["State diagram"],"updatePoint":{"line":101,"column":70,"index":2484},"line":101,"code":"  it('v2 should render a state with a note together with another state', () => {\n    imgSnapshotTest(`\n    stateDiagram-v2\n    State1: The state with a note +,-\n    note right of State1\n      Important information! You can write +,-\n      notes.\n    end note\n    State1 --> State2 : With +,-\n    note left of State2 : This is the note +,-<br/>\n      `, {\n      logLevel: 0,\n      fontFamily: 'courier'\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/stateDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"v2 should render a note with multiple lines in it","suites":["State diagram"],"updatePoint":{"line":117,"column":55,"index":2904},"line":117,"code":"  it('v2 should render a note with multiple lines in it', () => {\n    imgSnapshotTest(`\n    stateDiagram-v2\n    State1: The state with a note\n    note right of State1\n      Important information! You\\ncan write\n      notes with multiple lines...\n      Here is another line...\n      And another line...\n    end note\n    `, {\n      logLevel: 0,\n      fontFamily: 'courier'\n    });\n  });","file":"integration/rendering/stateDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"v2 should handle multiline notes with different line breaks","suites":["State diagram"],"updatePoint":{"line":132,"column":65,"index":3299},"line":132,"code":"  it('v2 should handle multiline notes with different line breaks', () => {\n    imgSnapshotTest(`\n      stateDiagram-v2\n      State1\n      note right of State1\n      Line1<br>Line2<br/>Line3<br />Line4<br\t/>Line5\n      end note\n      `, {\n      logLevel: 0,\n      fontFamily: 'courier'\n    });\n  });","file":"integration/rendering/stateDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"v2 should render a states with descriptions including multi-line descriptions","suites":["State diagram"],"updatePoint":{"line":144,"column":83,"index":3617},"line":144,"code":"  it('v2 should render a states with descriptions including multi-line descriptions', () => {\n    imgSnapshotTest(`\n    stateDiagram-v2\n    State1: This a a single line description\n    State2: This a a multi line description\n    State2: here comes the multi part\n    [*] --> State1\n    State1 --> State2\n    State2 --> [*]\n      `, {\n      logLevel: 0,\n      fontFamily: 'courier'\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/stateDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"v2 should render a simple state diagrams 2","suites":["State diagram"],"updatePoint":{"line":159,"column":48,"index":3996},"line":159,"code":"  it('v2 should render a simple state diagrams 2', () => {\n    imgSnapshotTest(`\n    stateDiagram-v2\n    [*] --> State1\n    State1 --> State2\n    State1 --> State3\n    State1 --> [*]\n      `, {\n      logLevel: 0,\n      fontFamily: 'courier'\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/stateDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"v2 should render a simple state diagrams with labels","suites":["State diagram"],"updatePoint":{"line":172,"column":58,"index":4280},"line":172,"code":"  it('v2 should render a simple state diagrams with labels', () => {\n    imgSnapshotTest(`\n    stateDiagram-v2\n    [*] --> State1\n    State1 --> State2 : Transition 1\n    State1 --> State3 : Transition 2\n    State1 --> State4 : Transition 3\n    State1 --> State5 : Transition 4\n    State2 --> State3 : Transition 5\n    State1 --> [*]\n      `, {\n      logLevel: 0,\n      fontFamily: 'courier'\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/stateDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"v2 should render state descriptions","suites":["State diagram"],"updatePoint":{"line":188,"column":41,"index":4688},"line":188,"code":"  it('v2 should render state descriptions', () => {\n    imgSnapshotTest(`\n      stateDiagram-v2\n        state \"Long state description\" as XState1\n        state \"Another Long state description\" as XState2\n        XState2 : New line\n        XState1 --> XState2\n      `, {\n      logLevel: 0,\n      fontFamily: 'courier'\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/stateDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"v2 should render composite states","suites":["State diagram"],"updatePoint":{"line":201,"column":39,"index":5036},"line":201,"code":"  it('v2 should render composite states', () => {\n    imgSnapshotTest(`\n      stateDiagram-v2\n      [*] --> NotShooting: Pacifist\n      NotShooting --> A\n      NotShooting --> B\n      NotShooting --> C\n\n      state NotShooting {\n        [*] --> Idle: Yet another long long öong öong öong label\n        Idle --> Configuring : EvConfig\n        Configuring --> Idle : EvConfig  EvConfig EvConfig  EvConfig EvConfig\n      }\n      `, {\n      logLevel: 0,\n      fontFamily: 'courier'\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/stateDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"v2 should render multiple composite states","suites":["State diagram"],"updatePoint":{"line":220,"column":48,"index":5556},"line":220,"code":"  it('v2 should render multiple composite states', () => {\n    imgSnapshotTest(`\n      stateDiagram-v2\n      [*]-->TV\n\n      state TV {\n        [*] --> Off: Off to start with\n        On --> Off : Turn off\n        Off --> On : Turn on\n      }\n\n      TV--> Console\n\n      state Console {\n        [*] --> Off2: Off to start with\n        On2--> Off2 : Turn off\n        Off2 --> On2 : Turn on\n        On2-->Playing\n\n        state Playing {\n          Alive --> Dead\n          Dead-->Alive\n         }\n      }\n      `, {\n      logLevel: 0,\n      fontFamily: 'courier'\n    });\n  });","file":"integration/rendering/stateDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"v2 should render forks in composite states","suites":["State diagram"],"updatePoint":{"line":249,"column":48,"index":6130},"line":249,"code":"  it('v2 should render forks in composite states', () => {\n    imgSnapshotTest(`\n      stateDiagram-v2\n      [*]-->TV\n\n      state TV {\n        state fork_state &lt;&lt;fork&gt;&gt;\n        [*] --> fork_state\n        fork_state --> State2\n        fork_state --> State3\n\n        state join_state &lt;&lt;join&gt;&gt;\n        State2 --> join_state\n        State3 --> join_state\n        join_state --> State4\n        State4 --> [*]\n      }\n      `, {\n      logLevel: 0,\n      fontFamily: 'courier'\n    });\n  });","file":"integration/rendering/stateDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"v2 should render forks and joins","suites":["State diagram"],"updatePoint":{"line":271,"column":38,"index":6629},"line":271,"code":"  it('v2 should render forks and joins', () => {\n    imgSnapshotTest(`\n    stateDiagram-v2\n    state fork_state &lt;&lt;fork&gt;&gt;\n      [*] --> fork_state\n      fork_state --> State2\n      fork_state --> State3\n\n      state join_state &lt;&lt;join&gt;&gt;\n      State2 --> join_state\n      State3 --> join_state\n      join_state --> State4\n      State4 --> [*]\n    `, {\n      logLevel: 0,\n      fontFamily: 'courier'\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/stateDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"v2 should render concurrency states","suites":["State diagram"],"updatePoint":{"line":290,"column":41,"index":7085},"line":290,"code":"  it('v2 should render concurrency states', () => {\n    imgSnapshotTest(`\n    stateDiagram-v2\n    [*] --> Active\n\n    state Active {\n      [*] --> NumLockOff\n      NumLockOff --> NumLockOn : EvNumLockPressed\n      NumLockOn --> NumLockOff : EvNumLockPressed\n      --\n      [*] --> CapsLockOff\n      CapsLockOff --> CapsLockOn : EvCapsLockPressed\n      CapsLockOn --> CapsLockOff : EvCapsLockPressed\n      --\n      [*] --> ScrollLockOff\n      ScrollLockOff --> ScrollLockOn : EvCapsLockPressed\n      ScrollLockOn --> ScrollLockOff : EvCapsLockPressed\n    }\n    `, {\n      logLevel: 0,\n      fontFamily: 'courier'\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/stateDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"v2 should render a state with states in it","suites":["State diagram"],"updatePoint":{"line":314,"column":48,"index":7737},"line":314,"code":"  it('v2 should render a state with states in it', () => {\n    imgSnapshotTest(`\n      stateDiagram-v2\n      state PilotCockpit {\n        state  Parent {\n          C\n        }\n    }\n    `, {\n      logLevel: 0\n    });\n  });","file":"integration/rendering/stateDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"v2 it should be possibel to use a choice","suites":["State diagram"],"updatePoint":{"line":326,"column":46,"index":7958},"line":326,"code":"  it('v2 it should be possibel to use a choice', () => {\n    imgSnapshotTest(`\n  stateDiagram-v2\n    [*] --> Off\n    Off --> On\n    state MyChoice [[choice]]\n    On --> MyChoice\n    MyChoice --> Washing\n    MyChoice --> Drying\n    Washing --> Finished\n    Finished --> [*]\n    `, {\n      logLevel: 0\n    });\n  });","file":"integration/rendering/stateDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"v2 width of compond state should grow with title if title is wider","suites":["State diagram"],"updatePoint":{"line":341,"column":72,"index":8298},"line":341,"code":"  it('v2 width of compond state should grow with title if title is wider', () => {\n    imgSnapshotTest(`\nstateDiagram-v2\n  state \"Long state name 2\" as NotShooting {\n    a-->b\n  }\n    `, {\n      logLevel: 0\n    });\n  });","file":"integration/rendering/stateDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"v2 state label with names in it","suites":["State diagram"],"updatePoint":{"line":351,"column":37,"index":8484},"line":351,"code":"  it('v2 state label with names in it', () => {\n    imgSnapshotTest(`\n      stateDiagram-v2\n        Yswsii: Your state with spaces in it\n        [*] --> Yswsii\n    `, {\n      logLevel: 0\n    });\n  });","file":"integration/rendering/stateDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"v2 Simplest composite state","suites":["State diagram"],"updatePoint":{"line":360,"column":33,"index":8681},"line":360,"code":"  it('v2 Simplest composite state', () => {\n    imgSnapshotTest(`\n      stateDiagram-v2\n        state  Parent {\n          C\n        }\n    `, {\n      logLevel: 0,\n      fontFamily: 'courier'\n    });\n  });","file":"integration/rendering/stateDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"v2 should handle multiple arrows from one node to another","suites":["State diagram"],"updatePoint":{"line":371,"column":63,"index":8915},"line":371,"code":"  it('v2 should handle multiple arrows from one node to another', () => {\n    imgSnapshotTest(`\n      stateDiagram-v2\n        a --> b: Start\n        a --> b: Stop\n    `, {\n      logLevel: 0,\n      fontFamily: 'courier'\n    });\n  });","file":"integration/rendering/stateDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"v2 should handle multiple notes added to one state","suites":["State diagram"],"updatePoint":{"line":381,"column":56,"index":9141},"line":381,"code":"  it('v2 should handle multiple notes added to one state', () => {\n    imgSnapshotTest(`\nstateDiagram-v2\n    MyState\n    note left of MyState : I am a leftie\n    note right of MyState : I am a rightie\n    `, {\n      logLevel: 0,\n      fontFamily: 'courier'\n    });\n  });","file":"integration/rendering/stateDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"v2 should handle different rendering directions in composite states","suites":["State diagram"],"updatePoint":{"line":392,"column":73,"index":9429},"line":392,"code":"  it('v2 should handle different rendering directions in composite states', () => {\n    imgSnapshotTest(`\nstateDiagram-v2\n  direction LR\n  state A {\n    direction BT\n    a --> b\n  }\n  state C {\n    direction RL\n    c --> d\n  }\n  A --> C\n    `, {\n      logLevel: 0,\n      fontFamily: 'courier'\n    });\n  });","file":"integration/rendering/stateDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"v2 handle transition from one state in a composite state to a composite state","suites":["State diagram"],"updatePoint":{"line":410,"column":83,"index":9746},"line":410,"code":"  it('v2 handle transition from one state in a composite state to a composite state', () => {\n    imgSnapshotTest(`\nstateDiagram-v2\n  state S1 {\n    sub1 -->sub2\n  }\n\n  state S2 {\n    sub4\n  }\n  S1 --> S2\n  sub1 --> sub4\n    `, {\n      logLevel: 0,\n      fontFamily: 'courier'\n    });\n  });","file":"integration/rendering/stateDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"v2 should render a state diagram when useMaxWidth is true (default)","suites":["State diagram"],"updatePoint":{"line":427,"column":73,"index":10027},"line":427,"code":"  it('v2 should render a state diagram when useMaxWidth is true (default)', () => {\n    renderGraph(`\n    stateDiagram-v2\n\n    [*] --> State1\n    State1 --> [*]\n      `, {\n      state: {\n        useMaxWidth: true\n      }\n    });\n    cy.get('svg').should(svg => {\n      expect(svg).to.have.attr('width', '100%');\n      expect(svg).to.have.attr('height');\n      const height = parseFloat(svg.attr('height'));\n      expect(height).to.be.within(177, 178);\n      const style = svg.attr('style');\n      expect(style).to.match(/^max-width: [\\d.]+px;$/);\n      const maxWidthValue = parseFloat(style.match(/[\\d.]+/g).join('')); // use within because the absolute value can be slightly different depending on the environment ±5%\n\n      expect(maxWidthValue).to.be.within(135 * 0.95, 135 * 1.05);\n    });\n  });","file":"integration/rendering/stateDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"v2 should render a state diagram when useMaxWidth is false","suites":["State diagram"],"updatePoint":{"line":450,"column":64,"index":10819},"line":450,"code":"  it('v2 should render a state diagram when useMaxWidth is false', () => {\n    renderGraph(`\n    stateDiagram-v2\n\n    [*] --> State1\n    State1 --> [*]\n      `, {\n      state: {\n        useMaxWidth: false\n      }\n    });\n    cy.get('svg').should(svg => {\n      const height = parseFloat(svg.attr('height'));\n      const width = parseFloat(svg.attr('width'));\n      expect(height).to.be.within(177, 178); // use within because the absolute value can be slightly different depending on the environment ±5%\n\n      expect(width).to.be.within(135 * 0.95, 135 * 1.05);\n      expect(svg).to.not.have.attr('style');\n    });\n  });","file":"integration/rendering/stateDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a simple state diagrams","suites":["State diagram"],"updatePoint":{"line":3,"column":43,"index":145},"line":3,"code":"  it('should render a simple state diagrams', () => {\n    imgSnapshotTest(`\n    stateDiagram\n    [*] --> State1\n    State1 --> [*]\n      `, {\n      logLevel: 0,\n      fontFamily: 'courier'\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/stateDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a long descriptions instead of id when available","suites":["State diagram"],"updatePoint":{"line":14,"column":68,"index":392},"line":14,"code":"  it('should render a long descriptions instead of id when available', () => {\n    imgSnapshotTest(`\n      stateDiagram\n\n      [*] --> S1\n      state \"Some long name\" as S1\n      `, {\n      logLevel: 0,\n      fontFamily: 'courier'\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/stateDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a long descriptions with additional descriptions","suites":["State diagram"],"updatePoint":{"line":26,"column":68,"index":656},"line":26,"code":"  it('should render a long descriptions with additional descriptions', () => {\n    imgSnapshotTest(`\n      stateDiagram\n\n      [*] --> S1\n      state \"Some long name\" as S1: The description\n      `, {\n      logLevel: 0,\n      fontFamily: 'courier'\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/stateDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a single state with short descriptions","suites":["State diagram"],"updatePoint":{"line":38,"column":58,"index":927},"line":38,"code":"  it('should render a single state with short descriptions', () => {\n    imgSnapshotTest(`\n    stateDiagram\n      state \"A long long name\" as long1\n      state \"A\" as longlonglongid\n      `, {\n      logLevel: 0,\n      fontFamily: 'courier'\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/stateDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a transition descriptions with new lines","suites":["State diagram"],"updatePoint":{"line":49,"column":60,"index":1202},"line":49,"code":"  it('should render a transition descriptions with new lines', () => {\n    imgSnapshotTest(`\n      stateDiagram\n\n      [*] --> S1\n      S1 --> S2: long line using<br/>should work\n      S1 --> S3: long line using <br>should work\n      S1 --> S4: long line using \\\\nshould work\n      `, {\n      logLevel: 0,\n      fontFamily: 'courier'\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/stateDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a state with a note","suites":["State diagram"],"updatePoint":{"line":63,"column":39,"index":1548},"line":63,"code":"  it('should render a state with a note', () => {\n    imgSnapshotTest(`\n    stateDiagram\n    State1: The state with a note\n    note right of State1\n      Important information! You can write\n      notes.\n    end note\n      `, {\n      logLevel: 0,\n      fontFamily: 'courier'\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/stateDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a state with on the left side when so specified","suites":["State diagram"],"updatePoint":{"line":77,"column":67,"index":1884},"line":77,"code":"  it('should render a state with on the left side when so specified', () => {\n    imgSnapshotTest(`\n    stateDiagram\n    State1: The state with a note with minus - and plus + in it\n    note left of State1\n      Important information! You can write\n      notes with . and  in them.\n    end note\n      `, {\n      logLevel: 0,\n      fontFamily: 'courier'\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/stateDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a state with a note together with another state","suites":["State diagram"],"updatePoint":{"line":91,"column":67,"index":2269},"line":91,"code":"  it('should render a state with a note together with another state', () => {\n    imgSnapshotTest(`\n    stateDiagram\n    State1: The state with a note +,-\n    note right of State1\n      Important information! You can write +,-\n      notes.\n    end note\n    State1 --> State2 : With +,-\n    note left of State2 : This is the note +,-<br/>\n      `, {\n      logLevel: 0,\n      fontFamily: 'courier'\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/stateDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a note with multiple lines in it","suites":["State diagram"],"updatePoint":{"line":107,"column":52,"index":2683},"line":107,"code":"  it('should render a note with multiple lines in it', () => {\n    imgSnapshotTest(`\n    stateDiagram\n    State1: The state with a note\n    note right of State1\n      Important information! You\\ncan write\n      notes with multiple lines...\n      Here is another line...\n      And another line...\n    end note\n    `, {\n      logLevel: 0,\n      fontFamily: 'courier'\n    });\n  });","file":"integration/rendering/stateDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should handle multiline notes with different line breaks","suites":["State diagram"],"updatePoint":{"line":122,"column":62,"index":3072},"line":122,"code":"  it('should handle multiline notes with different line breaks', () => {\n    imgSnapshotTest(`\n      stateDiagram\n      State1\n      note right of State1\n      Line1<br>Line2<br/>Line3<br />Line4<br\t/>Line5\n      end note\n      `, {\n      logLevel: 0,\n      fontFamily: 'courier'\n    });\n  });","file":"integration/rendering/stateDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a states with descriptions including multi-line descriptions","suites":["State diagram"],"updatePoint":{"line":134,"column":80,"index":3384},"line":134,"code":"  it('should render a states with descriptions including multi-line descriptions', () => {\n    imgSnapshotTest(`\n    stateDiagram\n    State1: This a a single line description\n    State2: This a a multi line description\n    State2: here comes the multi part\n    [*] --> State1\n    State1 --> State2\n    State2 --> [*]\n      `, {\n      logLevel: 0,\n      fontFamily: 'courier'\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/stateDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a simple state diagrams 2","suites":["State diagram"],"updatePoint":{"line":149,"column":45,"index":3757},"line":149,"code":"  it('should render a simple state diagrams 2', () => {\n    imgSnapshotTest(`\n    stateDiagram\n    [*] --> State1\n    State1 --> State2\n    State1 --> State3\n    State1 --> [*]\n      `, {\n      logLevel: 0,\n      fontFamily: 'courier'\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/stateDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a simple state diagrams with labels","suites":["State diagram"],"updatePoint":{"line":162,"column":55,"index":4035},"line":162,"code":"  it('should render a simple state diagrams with labels', () => {\n    imgSnapshotTest(`\n    stateDiagram\n    [*] --> State1\n    State1 --> State2 : Transition 1\n    State1 --> State3 : Transition 2\n    State1 --> State4 : Transition 3\n    State1 --> State5 : Transition 4\n    State2 --> State3 : Transition 5\n    State1 --> [*]\n      `, {\n      logLevel: 0,\n      fontFamily: 'courier'\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/stateDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render state descriptions","suites":["State diagram"],"updatePoint":{"line":178,"column":38,"index":4437},"line":178,"code":"  it('should render state descriptions', () => {\n    imgSnapshotTest(`\n      stateDiagram\n        state \"Long state description\" as XState1\n        state \"Another Long state description\" as XState2\n        XState2 : New line\n        XState1 --> XState2\n      `, {\n      logLevel: 0,\n      fontFamily: 'courier'\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/stateDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render composite states","suites":["State diagram"],"updatePoint":{"line":191,"column":36,"index":4779},"line":191,"code":"  it('should render composite states', () => {\n    imgSnapshotTest(`\n      stateDiagram\n      [*] --> NotShooting: Pacifist\n      NotShooting --> A\n      NotShooting --> B\n      NotShooting --> C\n\n      state NotShooting {\n        [*] --> Idle: Yet another long long öong öong öong label\n        Idle --> Configuring : EvConfig\n        Configuring --> Idle : EvConfig  EvConfig EvConfig  EvConfig EvConfig\n      }\n      `, {\n      logLevel: 0,\n      fontFamily: 'courier'\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/stateDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render multiple composit states","suites":["State diagram"],"updatePoint":{"line":210,"column":44,"index":5292},"line":210,"code":"  it('should render multiple composit states', () => {\n    imgSnapshotTest(`\n      stateDiagram\n      [*]-->TV\n\n      state TV {\n        [*] --> Off: Off to start with\n        On --> Off : Turn off\n        Off --> On : Turn on\n      }\n\n      TV--> Console\n\n      state Console {\n        [*] --> Off2: Off to start with\n        On2--> Off2 : Turn off\n        Off2 --> On2 : Turn on\n        On2-->Playing\n\n        state Playing {\n          Alive --> Dead\n          Dead-->Alive\n         }\n      }\n      `, {\n      logLevel: 0,\n      fontFamily: 'courier'\n    });\n  });","file":"integration/rendering/stateDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render forks in composit states","suites":["State diagram"],"updatePoint":{"line":239,"column":44,"index":5859},"line":239,"code":"  it('should render forks in composit states', () => {\n    imgSnapshotTest(`\n      stateDiagram\n      [*]-->TV\n\n      state TV {\n        state fork_state &lt;&lt;fork&gt;&gt;\n        [*] --> fork_state\n        fork_state --> State2\n        fork_state --> State3\n\n        state join_state &lt;&lt;join&gt;&gt;\n        State2 --> join_state\n        State3 --> join_state\n        join_state --> State4\n        State4 --> [*]\n      }\n      `, {\n      logLevel: 0,\n      fontFamily: 'courier'\n    });\n  });","file":"integration/rendering/stateDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render forks and joins","suites":["State diagram"],"updatePoint":{"line":261,"column":35,"index":6352},"line":261,"code":"  it('should render forks and joins', () => {\n    imgSnapshotTest(`\n    stateDiagram\n    state fork_state &lt;&lt;fork&gt;&gt;\n      [*] --> fork_state\n      fork_state --> State2\n      fork_state --> State3\n\n      state join_state &lt;&lt;join&gt;&gt;\n      State2 --> join_state\n      State3 --> join_state\n      join_state --> State4\n      State4 --> [*]\n    `, {\n      logLevel: 0,\n      fontFamily: 'courier'\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/stateDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render concurrency states","suites":["State diagram"],"updatePoint":{"line":280,"column":38,"index":6802},"line":280,"code":"  it('should render concurrency states', () => {\n    imgSnapshotTest(`\n    stateDiagram\n    [*] --> Active\n\n    state Active {\n      [*] --> NumLockOff\n      NumLockOff --> NumLockOn : EvNumLockPressed\n      NumLockOn --> NumLockOff : EvNumLockPressed\n      --\n      [*] --> CapsLockOff\n      CapsLockOff --> CapsLockOn : EvCapsLockPressed\n      CapsLockOn --> CapsLockOff : EvCapsLockPressed\n      --\n      [*] --> ScrollLockOff\n      ScrollLockOff --> ScrollLockOn : EvCapsLockPressed\n      ScrollLockOn --> ScrollLockOff : EvCapsLockPressed\n    }\n    `, {\n      logLevel: 0,\n      fontFamily: 'courier'\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/stateDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a state with states in it","suites":["State diagram"],"updatePoint":{"line":304,"column":45,"index":7448},"line":304,"code":"  it('should render a state with states in it', () => {\n    imgSnapshotTest(`\n      stateDiagram\n      state PilotCockpit {\n        state  Parent {\n          C\n        }\n    }\n    `, {\n      logLevel: 0,\n      fontFamily: 'courier'\n    });\n  });","file":"integration/rendering/stateDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"Simplest composite state","suites":["State diagram"],"updatePoint":{"line":317,"column":30,"index":7679},"line":317,"code":"  it('Simplest composite state', () => {\n    imgSnapshotTest(`\n      stateDiagram\n        state  Parent {\n          C\n        }\n    `, {\n      logLevel: 0,\n      fontFamily: 'courier'\n    });\n  });","file":"integration/rendering/stateDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should handle multiple arrows from one node to another","suites":["State diagram"],"updatePoint":{"line":328,"column":60,"index":7907},"line":328,"code":"  it('should handle multiple arrows from one node to another', () => {\n    imgSnapshotTest(`\n      stateDiagram\n        a --> b: Start\n        a --> b: Stop\n    `, {\n      logLevel: 0,\n      fontFamily: 'courier'\n    });\n  });","file":"integration/rendering/stateDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a state diagram when useMaxWidth is true (default)","suites":["State diagram"],"updatePoint":{"line":338,"column":70,"index":8144},"line":338,"code":"  it('should render a state diagram when useMaxWidth is true (default)', () => {\n    renderGraph(`\n    stateDiagram\n    [*] --> State1\n    State1 --> [*]\n      `, {\n      state: {\n        useMaxWidth: true\n      }\n    });\n    cy.get('svg').should(svg => {\n      expect(svg).to.have.attr('width', '100%');\n      expect(svg).to.have.attr('height');\n      const height = parseFloat(svg.attr('height'));\n      expect(height).to.be.within(176, 178);\n      const style = svg.attr('style');\n      expect(style).to.match(/^max-width: [\\d.]+px;$/);\n      const maxWidthValue = parseFloat(style.match(/[\\d.]+/g).join('')); // use within because the absolute value can be slightly different depending on the environment ±5%\n      // Todo investigate difference\n      // expect(maxWidthValue).to.be.within(112 * .95, 112 * 1.05);\n\n      expect(maxWidthValue).to.be.within(130, 140);\n    });\n  });","file":"integration/rendering/stateDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a state diagram when useMaxWidth is false","suites":["State diagram"],"updatePoint":{"line":362,"column":61,"index":9020},"line":362,"code":"  it('should render a state diagram when useMaxWidth is false', () => {\n    renderGraph(`\n    stateDiagram\n    [*] --> State1\n    State1 --> [*]\n      `, {\n      state: {\n        useMaxWidth: false\n      }\n    });\n    cy.get('svg').should(svg => {\n      const height = parseFloat(svg.attr('height'));\n      const width = parseFloat(svg.attr('width'));\n      expect(height).to.be.within(176, 178); // use within because the absolute value can be slightly different depending on the environment ±5%\n      // Todo investigate difference\n      // expect(width).to.be.within(112 * .95, 112 * 1.05);\n\n      expect(width).to.be.within(130, 140);\n      expect(svg).to.not.have.attr('style');\n    });\n  });","file":"integration/rendering/stateDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should not allow unbalanced CSS definitions","suites":["themeCSS balancing, it"],"updatePoint":{"line":3,"column":49,"index":150},"line":3,"code":"  it('should not allow unbalanced CSS definitions', () => {\n    imgSnapshotTest(`\n  %%{init: { 'themeCSS': '} * { background: red }' } }%%\n  flowchart TD\n    a --> b\n          `, {});\n    cy.get('svg');\n  });","file":"integration/rendering/theme.spec.js","skipped":false,"dir":"cypress"},{"name":"should not allow unbalanced CSS definitions 2","suites":["themeCSS balancing, it"],"updatePoint":{"line":11,"column":51,"index":361},"line":11,"code":"  it('should not allow unbalanced CSS definitions 2', () => {\n    imgSnapshotTest(`\n  %%{init: { 'themeCSS': '\\u007D * { background: red }' } }%%\n  flowchart TD\n    a2 --> b2\n          `, {});\n    cy.get('svg');\n  });","file":"integration/rendering/theme.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a pie diagram","suites":["Pie Chart"],"updatePoint":{"line":26,"column":37,"index":773},"line":26,"code":"      it('should render a pie diagram', () => {\n        imgSnapshotTest(`\n        pie title Sports in Sweden\n          accTitle: This is a title\n          accDescr: This is a description\n          \"Bandy\" : 40\n          \"Ice-Hockey\" : 80\n          \"Football\" : 90\n          `, {\n          theme\n        });\n        cy.get('svg');\n      });","file":"integration/rendering/theme.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a flowchart diagram","suites":["Pie Chart"],"updatePoint":{"line":39,"column":43,"index":1119},"line":39,"code":"      it('should render a flowchart diagram', () => {\n        imgSnapshotTest(`\n        %%{init: { 'logLevel': 0} }%%\n        graph TD\n          accTitle: This is a title\n          accDescr: This is a description\n          A[Christmas] -->|Get money| B(Go shopping)\n          B --> C{Let me think}\n          B --> G[/Another/]\n          C ==>|One| D[Laptop]\n          C -->|Two| E[iPhone]\n          C -->|Three| F[fa:fa-car Car]\n          subgraph section\n            C\n            D\n            E\n            F\n            G\n          end\n          `, {\n          theme\n        });\n        cy.get('svg');\n      });","file":"integration/rendering/theme.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a new flowchart diagram","suites":["Pie Chart"],"updatePoint":{"line":63,"column":47,"index":1739},"line":63,"code":"      it('should render a new flowchart diagram', () => {\n        imgSnapshotTest(`\n        %%{init: { 'logLevel': 0, 'theme': '${theme}'} }%%\n        flowchart TD\n          accTitle: This is a title\n          accDescr: This is a description\n\n          A[Christmas] -->|Get money| B(Go shopping)\n          B --> C{Let me think}\n          B --> G[Another]\n          C ==>|One| D[Laptop]\n          C x--x|Two| E[iPhone]\n          C o--o|Three| F[fa:fa-car Car]\n          subgraph section\n            C\n            D\n            E\n            F\n            G\n          end\n          `, {\n          theme\n        });\n        cy.get('svg');\n      });","file":"integration/rendering/theme.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a sequence diagram","suites":["Pie Chart"],"updatePoint":{"line":88,"column":42,"index":2380},"line":88,"code":"      it('should render a sequence diagram', () => {\n        imgSnapshotTest(`\n        %%{init: { 'logLevel': 0, 'theme': '${theme}'} }%%\n        sequenceDiagram\n          accTitle: This is a title\n          accDescr: This is a description\n\n          autonumber\n          par Action 1\n            Alice->>John: Hello John, how are you?\n          and Action 2\n            Alice->>Bob: Hello Bob, how are you?\n          end\n          Alice->>+John: Hello John, how are you?\n          Alice->>+John: John, can you hear me?\n          John-->>-Alice: Hi Alice, I can hear you!\n          Note right of John: John is perceptive\n          John-->>-Alice: I feel great!\n              loop Every minute\n                John-->Alice: Great!\n            end\n\n\n          `, {\n          theme\n        });\n        cy.get('svg');\n      });","file":"integration/rendering/theme.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a class diagram","suites":["Pie Chart"],"updatePoint":{"line":116,"column":39,"index":3201},"line":116,"code":"      it('should render a class diagram', () => {\n        imgSnapshotTest(`\n        %%{init: { 'logLevel': 0, 'theme': '${theme}'} }%%\n        classDiagram\n          accTitle: This is a title\n          accDescr: This is a description\n\n          Animal \"*\" <|-- \"1\" Duck\n          Animal \"1\" <|-- \"10\" Fish\n          Animal <|-- Zebra\n          Animal : +int age\n          Animal : +String gender\n          Animal: +isMammal()\n          Animal: +mate()\n          class Duck{\n            +String beakColor\n            +swim()\n            +quack()\n          }\n          class Fish{\n            -int sizeInFeet\n            -canEat()\n          }\n          class Zebra{\n            +bool is_wild\n            +run()\n          }\n        classA <|-- classB\n        classC *-- classD\n        classE o-- classF\n        classG <-- classH\n        classI -- classJ\n        classK <.. classL\n        classM <|.. classN\n        classO .. classP\n        classA --|> classB : Inheritance\n        classC --* classD : Composition\n        classE --o classF : Aggregation\n        classG --> classH : Association\n        classI -- classJ : Link(Solid)\n        classK ..> classL : Dependency\n        classM ..|> classN : Realization\n        classO .. classP : Link(Dashed)\n          `, {\n          theme\n        });\n        cy.get('svg');\n      });","file":"integration/rendering/theme.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a state diagram","suites":["Pie Chart"],"updatePoint":{"line":164,"column":39,"index":4526},"line":164,"code":"      it('should render a state diagram', () => {\n        imgSnapshotTest(`\n        %%{init: { 'logLevel': 0, 'theme': '${theme}'} }%%\nstateDiagram\n        accTitle: This is a title\n        accDescr: This is a description\n\n        [*] --> Active\n\n        state Active {\n            [*] --> NumLockOff\n            NumLockOff --> NumLockOn : EvNumLockPressed\n            NumLockOn --> NumLockOff : EvNumLockPressed\n            --\n            [*] --> CapsLockOff\n            CapsLockOff --> CapsLockOn : EvCapsLockPressed\n            CapsLockOn --> CapsLockOff : EvCapsLockPressed\n            --\n            [*] --> ScrollLockOff\n            ScrollLockOff --> ScrollLockOn : EvCapsLockPressed\n            ScrollLockOn --> ScrollLockOff : EvCapsLockPressed\n        }\n        state SomethingElse {\n          A --> B\n          B --> A\n        }\n\n        Active --> SomethingElse\n        note right of SomethingElse : This is the note to the right.\n          `, {\n          theme\n        });\n        cy.get('svg');\n      });","file":"integration/rendering/theme.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a state diagram (v2)","suites":["Pie Chart"],"updatePoint":{"line":198,"column":44,"index":5549},"line":198,"code":"      it('should render a state diagram (v2)', () => {\n        imgSnapshotTest(`\n        %%{init: { 'logLevel': 0, 'theme': '${theme}'} }%%\nstateDiagram-v2\n        accTitle: This is a title\n        accDescr: This is a description\n\n        [*] --> Active\n\n        state Active {\n            [*] --> NumLockOff\n            NumLockOff --> NumLockOn : EvNumLockPressed\n            NumLockOn --> NumLockOff : EvNumLockPressed\n            --\n            [*] --> CapsLockOff\n            CapsLockOff --> CapsLockOn : EvCapsLockPressed\n            CapsLockOn --> CapsLockOff : EvCapsLockPressed\n            --\n            [*] --> ScrollLockOff\n            ScrollLockOff --> ScrollLockOn : EvCapsLockPressed\n            ScrollLockOn --> ScrollLockOff : EvCapsLockPressed\n        }\n        state SomethingElse {\n          A --> B\n          B --> A\n        }\n\n        Active --> SomethingElse2\n        note right of SomethingElse2 : This is the note to the right.\n          `, {\n          theme\n        });\n        cy.get('svg');\n      });","file":"integration/rendering/theme.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a er diagram","suites":["Pie Chart"],"updatePoint":{"line":232,"column":36,"index":6569},"line":232,"code":"      it('should render a er diagram', () => {\n        imgSnapshotTest(`\nerDiagram\n          accTitle: This is a title\n          accDescr: This is a description\n\n        CUSTOMER }|..|{ DELIVERY-ADDRESS : has\n        CUSTOMER ||--o{ ORDER : places\n        CUSTOMER ||--o{ INVOICE : \"liable for\"\n        DELIVERY-ADDRESS ||--o{ ORDER : receives\n        INVOICE ||--|{ ORDER : covers\n        ORDER ||--|{ ORDER-ITEM : includes\n        PRODUCT-CATEGORY ||--|{ PRODUCT : contains\n        PRODUCT ||--o{ ORDER-ITEM : \"ordered in\"\n\n          `, {\n          theme\n        });\n        cy.get('svg');\n      });","file":"integration/rendering/theme.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a user journey diagram","suites":["Pie Chart"],"updatePoint":{"line":252,"column":46,"index":7181},"line":252,"code":"      it('should render a user journey diagram', () => {\n        imgSnapshotTest(`\n        %%{init: { 'logLevel': 0, 'theme': '${theme}'} }%%\n        journey\n            accTitle: This is a title\n            accDescr: This is a description\n\n            title My working day\n            section Go to work\n              Make tea: 5: Me\n              Go upstairs: 3: Me\n              Do work: 1: Me, Cat\n            section Go home\n              Go downstairs: 5: Me\n              Sit down: 5: Me\n                        `, {\n          theme\n        });\n        cy.get('svg');\n      });","file":"integration/rendering/theme.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a gantt diagram","suites":["Pie Chart"],"updatePoint":{"line":272,"column":39,"index":7759},"line":272,"code":"      it('should render a gantt diagram', () => {\n        cy.clock(new Date('2014-01-06').getTime());\n        imgSnapshotTest(`\n      gantt\n       accTitle: This is a title\n       accDescr: This is a description\n\n       dateFormat                :YYYY-MM-DD\n       title                     :Adding GANTT diagram functionality to mermaid\n       excludes                  :excludes the named dates/days from being included in a charted task..\n       section A section\n       Completed task            :done,    des1, 2014-01-06,2014-01-08\n       Active task               :active,  des2, 2014-01-09, 3d\n       Future task               :         des3, after des2, 5d\n       Future task2              :         des4, after des3, 5d\n\n       section Critical tasks\n       Completed task in the critical line :crit, done, 2014-01-06,24h\n       Implement parser and jison          :crit, done, after des1, 2d\n       Create tests for parser             :crit, active, 3d\n       Future task in critical line        :crit, 5d\n       Create tests for renderer           :2d\n       Add to mermaid                      :1d\n\n       section Documentation\n       Describe gantt syntax               :active, a1, after des1, 3d\n       Add gantt diagram to demo page      :after a1  , 20h\n       Add another diagram to demo page    :doc1, after a1  , 48h\n\n       section Last section\n       Describe gantt syntax               :after doc1, 3d\n       Add gantt diagram to demo page      :20h\n       Add another diagram to demo page    :48h\n       `, {\n          theme\n        });\n        cy.get('svg');\n      });","file":"integration/rendering/theme.spec.js","skipped":false,"dir":"cypress"}]}