{
    "repo": "OpenZeppelin/openzeppelin-contracts",
    "url": "https://github.com/OpenZeppelin/openzeppelin-contracts",
    "branch": "master",
    "configs": [
        {
            "package": "marktext",
            "lang": "js",
            "dir": "tmp/marktext__marktext/test",
            "framework": "mocha",
            "pattern": "**/*[._-]{test,spec,unittest,unit}.{ts,js}"
        },
        {
            "package": "three",
            "lang": "js",
            "dir": "tmp/mrdoob__three.js/test",
            "framework": "mocha",
            "pattern": "**/*[._-]{test,spec,unittest,unit}.{ts,js}"
        },
        {
            "package": "polygon-next",
            "lang": "js",
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/dabit3__polygon-ethereum-nextjs-marketplace/test",
            "framework": "mocha",
            "pattern": "**/*[._-]{test,spec,unittest,unit}.{ts,js}"
        },
        {
            "package": "end",
            "lang": "js",
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/blockchain-masterclass/dex-2-testing/10-test-create-market-order-happy-path/test",
            "framework": "mocha",
            "pattern": "**/*.{js,ts}"
        },
        {
            "package": "wallet",
            "lang": "js",
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/blockchain-masterclass/wallet-2-testing/4-your-first-solidity-test/test",
            "framework": "mocha",
            "pattern": "**/*.{js,ts}"
        },
        {
            "package": "11-yield-farming",
            "lang": "js",
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/defi-development-mastery/1-defi-building-blocks/11-yield-farming/test",
            "framework": "mocha",
            "pattern": "**/*.{js,ts}"
        },
        {
            "package": "12-flashloans",
            "lang": "js",
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/defi-development-mastery/1-defi-building-blocks/12-flashloans/test",
            "framework": "mocha",
            "pattern": "**/*.{js,ts}"
        },
        {
            "package": "13-dao",
            "lang": "js",
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/defi-development-mastery/1-defi-building-blocks/13-dao/test",
            "framework": "mocha",
            "pattern": "**/*.{js,ts}"
        },
        {
            "package": "2-tokens",
            "lang": "js",
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/defi-development-mastery/1-defi-building-blocks/2-erc20-tokens/test",
            "framework": "mocha",
            "pattern": "**/*.{js,ts}"
        },
        {
            "package": "3-erc721-tokens",
            "lang": "js",
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/defi-development-mastery/1-defi-building-blocks/3-erc721-tokens/test",
            "framework": "mocha",
            "pattern": "**/*.{js,ts}"
        },
        {
            "package": "5-wrapped-ether",
            "lang": "js",
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/defi-development-mastery/1-defi-building-blocks/4-wrapped-ether/test",
            "framework": "mocha",
            "pattern": "**/*.{js,ts}"
        },
        {
            "package": "6-collateral-backed-tokens",
            "lang": "js",
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/defi-development-mastery/1-defi-building-blocks/5-collateral-backed-tokens/test",
            "framework": "mocha",
            "pattern": "**/*.{js,ts}"
        },
        {
            "package": "3-oracles",
            "lang": "js",
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/defi-development-mastery/1-defi-building-blocks/6-oracles/test",
            "framework": "mocha",
            "pattern": "**/*.{js,ts}"
        },
        {
            "package": "7-stablecoins",
            "lang": "js",
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/defi-development-mastery/1-defi-building-blocks/7-stablecoins/test",
            "framework": "mocha",
            "pattern": "**/*.{js,ts}"
        },
        {
            "package": "yield-farming",
            "lang": "js",
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/defi-development-mastery/1-defi-building-blocks/9-liquidity-mining/test",
            "framework": "mocha",
            "pattern": "**/*.{js,ts}"
        },
        {
            "package": "3-compound",
            "lang": "js",
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/defi-development-mastery/2-integrating-defi-protocols/4-compound/test",
            "framework": "mocha",
            "pattern": "**/*.{js,ts}"
        },
        {
            "package": "3-project-yield-farming",
            "lang": "js",
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/defi-development-mastery/4-project-yield-farming/test",
            "framework": "mocha",
            "pattern": "**/*.{js,ts}"
        },
        {
            "package": "defi-wallet",
            "lang": "js",
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/defi-development-mastery/6-project-defi-wallet/test",
            "framework": "mocha",
            "pattern": "**/*.{js,ts}"
        },
        {
            "package": "core",
            "lang": "js",
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/defi-development-mastery/bonus-1-fork-uniswap/3-fork-smart-contracts/core/test",
            "framework": "mocha",
            "pattern": "**/*.{js,ts}"
        },
        {
            "package": "periphery",
            "lang": "js",
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/defi-development-mastery/bonus-1-fork-uniswap/3-fork-smart-contracts/periphery/test",
            "framework": "mocha",
            "pattern": "**/*.{js,ts}"
        },
        {
            "package": "migrator",
            "lang": "js",
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/defi-development-mastery/bonus-1-fork-uniswap/5-liquidity-attack/migrator/test",
            "framework": "mocha",
            "pattern": "**/*.{js,ts}"
        },
        {
            "package": "client",
            "lang": "js",
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/draft/cryptorobots/test",
            "framework": "mocha",
            "pattern": "**/*.{js,ts}"
        },
        {
            "package": "DimDex",
            "lang": "js",
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/draft/dex-erc20/finished/test",
            "framework": "mocha",
            "pattern": "**/*.{js,ts}"
        },
        {
            "package": "drizzle-box",
            "lang": "js",
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/draft/dex-erc20/finished2/test",
            "framework": "mocha",
            "pattern": "**/*.{js,ts}"
        },
        {
            "package": "1-fork-safemoon",
            "lang": "js",
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/live-trainings/1-fork-safemoon/test",
            "framework": "mocha",
            "pattern": "**/*.{js,ts}"
        },
        {
            "lang": "js",
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/live-trainings/2-polygon-matic/smart-contract-deployment/test",
            "framework": "mocha",
            "pattern": "**/*.{js,ts}"
        },
        {
            "package": "marketplace-complete",
            "lang": "js",
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/live-trainings/5-ethereum-nft-marketplace/marketplace-complete/test",
            "framework": "mocha",
            "pattern": "**/*.{js,ts}"
        },
        {
            "package": "298-arbitrage-uniswap-sushiswap",
            "lang": "js",
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/profitable-flashloans/update-bsc-flashloan/test",
            "framework": "mocha",
            "pattern": "**/*.{js,ts}"
        },
        {
            "package": "20-Setup the Truffle Project",
            "lang": "js",
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/profitable-flashloans/update/20-setup-the-truffle-project/test",
            "framework": "mocha",
            "pattern": "**/*.{js,ts}"
        },
        {
            "package": "21-setup-sending-address",
            "lang": "js",
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/profitable-flashloans/update/21-setup-sending-address/test",
            "framework": "mocha",
            "pattern": "**/*.{js,ts}"
        },
        {
            "package": "22-create-flashloan-smart-contract",
            "lang": "js",
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/profitable-flashloans/update/22-create-flashloan-smart-contract/test",
            "framework": "mocha",
            "pattern": "**/*.{js,ts}"
        },
        {
            "package": "23-add-exchanges-tokens-addresses",
            "lang": "js",
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/profitable-flashloans/update/23-add-exchanges-tokens-addresses/test",
            "framework": "mocha",
            "pattern": "**/*.{js,ts}"
        },
        {
            "package": "24-buy-bakery-sell-pancake",
            "lang": "js",
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/profitable-flashloans/update/24-buy-bakery-sell-pancake/test",
            "framework": "mocha",
            "pattern": "**/*.{js,ts}"
        },
        {
            "package": "25-buy-pancake-sell-bakery",
            "lang": "js",
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/profitable-flashloans/update/25-buy-pancake-sell-bakery/test",
            "framework": "mocha",
            "pattern": "**/*.{js,ts}"
        },
        {
            "package": "26-withdraw-profits",
            "lang": "js",
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/profitable-flashloans/update/26-withdraw-profits/test",
            "framework": "mocha",
            "pattern": "**/*.{js,ts}"
        },
        {
            "package": "27-send-transaction-to-initiate-flashloan",
            "lang": "js",
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/profitable-flashloans/update/27-send-transaction-to-initiate-flashloan/test",
            "framework": "mocha",
            "pattern": "**/*.{js,ts}"
        },
        {
            "package": "28-depoly-flashloan-smart-contract",
            "lang": "js",
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/profitable-flashloans/update/28-depoly-flashloan-smart-contract/test",
            "framework": "mocha",
            "pattern": "**/*.{js,ts}"
        },
        {
            "package": "218-money-legos",
            "lang": "js",
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/screencast/218-money-legos/test",
            "framework": "mocha",
            "pattern": "**/*.{js,ts}"
        },
        {
            "package": "223-personal-tokens",
            "lang": "js",
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/screencast/223-personal-tokens/test",
            "framework": "mocha",
            "pattern": "**/*.{js,ts}"
        },
        {
            "package": "SushiSwap",
            "lang": "js",
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/screencast/235-fork-sushiswap/test",
            "framework": "mocha",
            "pattern": "**/*[._-]{test,spec,unittest,unit}.{ts,js}"
        },
        {
            "package": "241-defi-nft",
            "lang": "js",
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/screencast/241-re-fungible-tokens/test",
            "framework": "mocha",
            "pattern": "**/*.{js,ts}"
        },
        {
            "package": "247-binance-smart-chain",
            "lang": "js",
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/screencast/247-binance-smart-chain/test",
            "framework": "mocha",
            "pattern": "**/*.{js,ts}"
        },
        {
            "package": "257-staking-pool-tutorial",
            "lang": "js",
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/screencast/257-staking-pool-tutorial/test",
            "framework": "mocha",
            "pattern": "**/*.{js,ts}"
        },
        {
            "package": "264-intro-to-ethersjs",
            "lang": "js",
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/screencast/264-intro-to-ethersjs/test",
            "framework": "mocha",
            "pattern": "**/*.{js,ts}"
        },
        {
            "package": "hardhat-tutorial",
            "lang": "js",
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/screencast/282-hardhat-tutorial/test",
            "framework": "mocha",
            "pattern": "**/*.{js,ts}"
        },
        {
            "package": "314-eth-bsc-bridge",
            "lang": "js",
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/screencast/314-eth-bsc-bridge/test",
            "framework": "mocha",
            "pattern": "**/*.{js,ts}"
        },
        {
            "package": "318-create-nft",
            "lang": "js",
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/screencast/318-create-nft/test",
            "framework": "mocha",
            "pattern": "**/*.{js,ts}"
        },
        {
            "package": "320-connect-frontend-contract-bsc",
            "lang": "js",
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/screencast/321-connect-frontend-contract-bsc/test",
            "framework": "mocha",
            "pattern": "**/*.{js,ts}"
        },
        {
            "package": "325-create-pool-pancakeswap",
            "lang": "js",
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/screencast/325-create-pool-pancakeswap/test",
            "framework": "mocha",
            "pattern": "**/*.{js,ts}"
        },
        {
            "package": "hardhat-project",
            "lang": "js",
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/screencast/326-nft-flashloan/test",
            "framework": "mocha",
            "pattern": "**/*[._-]{test,spec,unittest,unit}.{ts,js}"
        },
        {
            "package": "330-uniswap-trading-nodejs",
            "lang": "js",
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/screencast/330-uniswap-trading-nodejs/test",
            "framework": "mocha",
            "pattern": "**/*.{js,ts}"
        },
        {
            "package": "345-deploy-smart-contract-bsc",
            "lang": "js",
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/screencast/345-deploy-smart-contract-bsc/test",
            "framework": "mocha",
            "pattern": "**/*.{js,ts}"
        },
        {
            "package": "354-timelock-contract",
            "lang": "js",
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/screencast/354-timelock-contract/test",
            "framework": "mocha",
            "pattern": "**/*.{js,ts}"
        },
        {
            "package": "360-truffle-tutorial-beginner",
            "lang": "js",
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/screencast/360-truffle-tutorial-beginner/test",
            "framework": "mocha",
            "pattern": "**/*.{js,ts}"
        },
        {
            "package": "369-token-flashloan",
            "lang": "js",
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/screencast/369-token-flashloan/test",
            "framework": "mocha",
            "pattern": "**/*.{js,ts}"
        },
        {
            "package": "method3",
            "lang": "js",
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/screencast/372-smart-contract-upgrade/method3/test",
            "framework": "mocha",
            "pattern": "**/*.{js,ts}"
        },
        {
            "package": "373-set-token-price",
            "lang": "js",
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/screencast/373-set-token-price/test",
            "framework": "mocha",
            "pattern": "**/*.{js,ts}"
        },
        {
            "package": "375-crypto-subscription",
            "lang": "js",
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/screencast/375-crypto-subscription/test",
            "framework": "mocha",
            "pattern": "**/*.{js,ts}"
        },
        {
            "package": "378-deploy-contract-7-blockchains",
            "lang": "js",
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/screencast/378-deploy-contract-7-blockchains/test",
            "framework": "mocha",
            "pattern": "**/*.{js,ts}"
        },
        {
            "package": "379-nft-royalties",
            "lang": "js",
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/screencast/379-nft-royalties/test",
            "framework": "mocha",
            "pattern": "**/*.{js,ts}"
        },
        {
            "package": "391-rewards-token",
            "lang": "js",
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/screencast/391-rewards-token/test",
            "framework": "mocha",
            "pattern": "**/*.{js,ts}"
        },
        {
            "package": "394-nft-airdrop",
            "lang": "js",
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/screencast/394-nft-airdrop/test",
            "framework": "mocha",
            "pattern": "**/*.{js,ts}"
        },
        {
            "package": "397-multicall",
            "lang": "js",
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/screencast/397-multicall/test",
            "framework": "mocha",
            "pattern": "**/*.{js,ts}"
        },
        {
            "package": "244-nfts-marketplace",
            "lang": "js",
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/screencast/future-nfts-marketplace/test",
            "framework": "mocha",
            "pattern": "**/*.{js,ts}"
        },
        {
            "package": "todo-ethereum",
            "lang": "js",
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/todolist/step_metamask/test",
            "framework": "mocha",
            "pattern": "**/*[._-]{test,spec,unittest,unit}.{ts,js}"
        },
        {
            "package": "token",
            "lang": "js",
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/token/test",
            "framework": "mocha",
            "pattern": "**/*.{js,ts}"
        },
        {
            "package": "monaco-editor",
            "lang": "js",
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/microsoft__monaco-editor/test",
            "framework": "mocha",
            "pattern": "**/*[._-]{test,spec,unittest,unit}.{ts,js}"
        },
        {
            "lang": "js",
            "dir": "tmp/mrdoob__three.js/tmp/facebook__create-react-app/test",
            "framework": "jest",
            "pattern": "**/*[._-]{test,spec,unittest,unit}.{ts,js}"
        },
        {
            "package": "create-react-app",
            "lang": "js",
            "dir": "tmp/mrdoob__three.js/tmp/facebook__create-react-app/packages/create-react-app/__tests__",
            "framework": "jest",
            "pattern": "**/*[._-]{test,spec,unittest,unit}.{ts,js}"
        },
        {
            "package": "react-dev-utils",
            "lang": "js",
            "dir": "tmp/mrdoob__three.js/tmp/facebook__create-react-app/packages/react-dev-utils/__tests__",
            "framework": "jest",
            "pattern": "**/*[._-]{test,spec,unittest,unit}.{ts,js}"
        },
        {
            "package": "react-error-overlay",
            "lang": "js",
            "dir": "tmp/mrdoob__three.js/tmp/facebook__create-react-app/packages/react-error-overlay/src/__tests__",
            "framework": "jest",
            "pattern": "**/*.{js,ts}"
        },
        {
            "package": "@freecodecamp/client",
            "lang": "js",
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/client/src/__tests__",
            "framework": "mocha",
            "pattern": "**/*[._-]{test,spec,unittest,unit}.{ts,js}"
        },
        {
            "package": "@freecodecamp/curriculum",
            "lang": "js",
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/curriculum/test",
            "framework": "mocha",
            "pattern": "**/*[._-]{test,spec,unittest,unit}.{ts,js}"
        },
        {
            "package": "@freecodecamp/freecodecamp",
            "lang": "js",
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress",
            "framework": "jest",
            "pattern": "**/*.{js,ts}"
        },
        {
            "package": "strapi",
            "lang": "js",
            "dir": "tmp/mrdoob__three.js/tmp/strapi__strapi/test",
            "framework": "jest",
            "pattern": "**/*.{js,ts}"
        },
        {
            "package": "@strapi/plugin-content-type-builder",
            "lang": "js",
            "dir": "tmp/mrdoob__three.js/tmp/strapi__strapi/packages/core/content-type-builder/tests",
            "framework": "mocha",
            "pattern": "**/*.{js,ts}"
        },
        {
            "package": "@strapi/strapi",
            "lang": "js",
            "dir": "tmp/mrdoob__three.js/tmp/strapi__strapi/packages/core/strapi/tests",
            "framework": "mocha",
            "pattern": "**/*.{js,ts}"
        },
        {
            "package": "@strapi/plugin-upload",
            "lang": "js",
            "dir": "tmp/mrdoob__three.js/tmp/strapi__strapi/packages/core/upload/tests",
            "framework": "mocha",
            "pattern": "**/*.{js,ts}"
        },
        {
            "package": "@strapi/plugin-graphql",
            "lang": "js",
            "dir": "tmp/mrdoob__three.js/tmp/strapi__strapi/packages/plugins/graphql/tests",
            "framework": "mocha",
            "pattern": "**/*.{js,ts}"
        },
        {
            "package": "@strapi/plugin-i18n",
            "lang": "js",
            "dir": "tmp/mrdoob__three.js/tmp/strapi__strapi/packages/plugins/i18n/tests",
            "framework": "mocha",
            "pattern": "**/*.{js,ts}"
        },
        {
            "package": "@strapi/plugin-users-permissions",
            "lang": "js",
            "dir": "tmp/mrdoob__three.js/tmp/strapi__strapi/packages/plugins/users-permissions/tests",
            "framework": "mocha",
            "pattern": "**/*.{js,ts}"
        }
    ],
    "tests": [
        {
            "name": "Basic - Invalid text",
            "suites": [
                "Test extractWord"
            ],
            "updatePoint": {
                "line": 25,
                "column": 26
            },
            "line": 25,
            "code": "  it('Basic - Invalid text', () => {\n    test(null, 0, null);\n  });",
            "file": "unit/specs/extract-word.spec.js",
            "skipped": false,
            "dir": "tmp/marktext__marktext/test"
        },
        {
            "name": "Basic - Empty text",
            "suites": [
                "Test extractWord"
            ],
            "updatePoint": {
                "line": 28,
                "column": 24
            },
            "line": 28,
            "code": "  it('Basic - Empty text', () => {\n    test('', 0, null);\n  });",
            "file": "unit/specs/extract-word.spec.js",
            "skipped": false,
            "dir": "tmp/marktext__marktext/test"
        },
        {
            "name": "Basic - Invalid offset 1",
            "suites": [
                "Test extractWord"
            ],
            "updatePoint": {
                "line": 31,
                "column": 30
            },
            "line": 31,
            "code": "  it('Basic - Invalid offset 1', () => {\n    test(basicCheck, -182, buildResult(0, 5, 'Lorem'));\n  });",
            "file": "unit/specs/extract-word.spec.js",
            "skipped": false,
            "dir": "tmp/marktext__marktext/test"
        },
        {
            "name": "Basic - Invalid offset 2",
            "suites": [
                "Test extractWord"
            ],
            "updatePoint": {
                "line": 34,
                "column": 30
            },
            "line": 34,
            "code": "  it('Basic - Invalid offset 2', () => {\n    test(basicCheck, undefined, null);\n  });",
            "file": "unit/specs/extract-word.spec.js",
            "skipped": false,
            "dir": "tmp/marktext__marktext/test"
        },
        {
            "name": "Basic - Invalid offset 3",
            "suites": [
                "Test extractWord"
            ],
            "updatePoint": {
                "line": 37,
                "column": 30
            },
            "line": 37,
            "code": "  it('Basic - Invalid offset 3', () => {\n    test(basicCheck, 478343, buildResult(12, 17, 'dolor'));\n  });",
            "file": "unit/specs/extract-word.spec.js",
            "skipped": false,
            "dir": "tmp/marktext__marktext/test"
        },
        {
            "name": "Get first word",
            "suites": [
                "Test extractWord"
            ],
            "updatePoint": {
                "line": 40,
                "column": 20
            },
            "line": 40,
            "code": "  it('Get first word', () => {\n    test(basicText, 0, buildResult(0, 5, 'Lorem'));\n  });",
            "file": "unit/specs/extract-word.spec.js",
            "skipped": false,
            "dir": "tmp/marktext__marktext/test"
        },
        {
            "name": "Get second word",
            "suites": [
                "Test extractWord"
            ],
            "updatePoint": {
                "line": 43,
                "column": 21
            },
            "line": 43,
            "code": "  it('Get second word', () => {\n    test(basicText, 8, buildResult(6, 11, 'ipsum'));\n  });",
            "file": "unit/specs/extract-word.spec.js",
            "skipped": false,
            "dir": "tmp/marktext__marktext/test"
        },
        {
            "name": "Get last word",
            "suites": [
                "Test extractWord"
            ],
            "updatePoint": {
                "line": 46,
                "column": 19
            },
            "line": 46,
            "code": "  it('Get last word', () => {\n    test(basicText, 268, buildResult(266, 270, 'orci'));\n  });",
            "file": "unit/specs/extract-word.spec.js",
            "skipped": false,
            "dir": "tmp/marktext__marktext/test"
        },
        {
            "name": "Last character is not a valid word",
            "suites": [
                "Test extractWord"
            ],
            "updatePoint": {
                "line": 49,
                "column": 40
            },
            "line": 49,
            "code": "  it('Last character is not a valid word', () => {\n    test(basicText, 271, null);\n  });",
            "file": "unit/specs/extract-word.spec.js",
            "skipped": false,
            "dir": "tmp/marktext__marktext/test"
        },
        {
            "name": "Get custom index (1)",
            "suites": [
                "Test extractWord"
            ],
            "updatePoint": {
                "line": 52,
                "column": 26
            },
            "line": 52,
            "code": "  it('Get custom index (1)', () => {\n    test(basicText, 79, buildResult(79, 81, 'in'));\n  });",
            "file": "unit/specs/extract-word.spec.js",
            "skipped": false,
            "dir": "tmp/marktext__marktext/test"
        },
        {
            "name": "Get custom index (2)",
            "suites": [
                "Test extractWord"
            ],
            "updatePoint": {
                "line": 55,
                "column": 26
            },
            "line": 55,
            "code": "  it('Get custom index (2)', () => {\n    console.log(basicText[104], basicText[105], basicText[106]);\n    test(basicText, 106, buildResult(105, 112, 'euismod'));\n  });",
            "file": "unit/specs/extract-word.spec.js",
            "skipped": false,
            "dir": "tmp/marktext__marktext/test"
        },
        {
            "name": "Markdown - Get first word",
            "suites": [
                "Test extractWord"
            ],
            "updatePoint": {
                "line": 59,
                "column": 31
            },
            "line": 59,
            "code": "  it('Markdown - Get first word', () => {\n    test(basicMdText, 2, buildResult(2, 7, 'Lorem'));\n  });",
            "file": "unit/specs/extract-word.spec.js",
            "skipped": false,
            "dir": "tmp/marktext__marktext/test"
        },
        {
            "name": "Markdown - Get second word",
            "suites": [
                "Test extractWord"
            ],
            "updatePoint": {
                "line": 62,
                "column": 32
            },
            "line": 62,
            "code": "  it('Markdown - Get second word', () => {\n    test(basicMdText, 14, buildResult(10, 15, 'ipsum'));\n  });",
            "file": "unit/specs/extract-word.spec.js",
            "skipped": false,
            "dir": "tmp/marktext__marktext/test"
        },
        {
            "name": "Markdown - Get custom index (1)",
            "suites": [
                "Test extractWord"
            ],
            "updatePoint": {
                "line": 65,
                "column": 37
            },
            "line": 65,
            "code": "  it('Markdown - Get custom index (1)', () => {\n    test(basicMdText, 20, buildResult(18, 23, 'dolor'));\n  });",
            "file": "unit/specs/extract-word.spec.js",
            "skipped": false,
            "dir": "tmp/marktext__marktext/test"
        },
        {
            "name": "Markdown - Get custom index (2)",
            "suites": [
                "Test extractWord"
            ],
            "updatePoint": {
                "line": 68,
                "column": 37
            },
            "line": 68,
            "code": "  it('Markdown - Get custom index (2)', () => {\n    test(basicMdText, 37, buildResult(35, 39, 'amet'));\n  });",
            "file": "unit/specs/extract-word.spec.js",
            "skipped": false,
            "dir": "tmp/marktext__marktext/test"
        },
        {
            "name": "Markdown - Not valid word",
            "suites": [
                "Test extractWord"
            ],
            "updatePoint": {
                "line": 71,
                "column": 31
            },
            "line": 71,
            "code": "  it('Markdown - Not valid word', () => {\n    test(basicMdText, 50, null);\n  });",
            "file": "unit/specs/extract-word.spec.js",
            "skipped": false,
            "dir": "tmp/marktext__marktext/test"
        },
        {
            "name": "Markdown - Not valid word",
            "suites": [
                "Test extractWord"
            ],
            "updatePoint": {
                "line": 74,
                "column": 31
            },
            "line": 74,
            "code": "  it('Markdown - Not valid word', () => {\n    test(basicMdText, 55, null);\n  });",
            "file": "unit/specs/extract-word.spec.js",
            "skipped": false,
            "dir": "tmp/marktext__marktext/test"
        },
        {
            "name": "Markdown - Valid non-ASCII word",
            "suites": [
                "Test extractWord"
            ],
            "updatePoint": {
                "line": 77,
                "column": 37
            },
            "line": 77,
            "code": "  it('Markdown - Valid non-ASCII word', () => {\n    test(basicMdText, 61, buildResult(60, 63, '虥諰諨'));\n  });",
            "file": "unit/specs/extract-word.spec.js",
            "skipped": false,
            "dir": "tmp/marktext__marktext/test"
        },
        {
            "name": "Non-ASCII - Get first word",
            "suites": [
                "Test extractWord"
            ],
            "updatePoint": {
                "line": 80,
                "column": 32
            },
            "line": 80,
            "code": "  it('Non-ASCII - Get first word', () => {\n    test(nonAscii, 0, buildResult(0, 2, '虥諰'));\n  });",
            "file": "unit/specs/extract-word.spec.js",
            "skipped": false,
            "dir": "tmp/marktext__marktext/test"
        },
        {
            "name": "Non-ASCII - Get second word",
            "suites": [
                "Test extractWord"
            ],
            "updatePoint": {
                "line": 83,
                "column": 33
            },
            "line": 83,
            "code": "  it('Non-ASCII - Get second word', () => {\n    test(nonAscii, 4, buildResult(3, 6, '鯦鯢鯡'));\n  });",
            "file": "unit/specs/extract-word.spec.js",
            "skipped": false,
            "dir": "tmp/marktext__marktext/test"
        },
        {
            "name": "Non-ASCII - Get last word",
            "suites": [
                "Test extractWord"
            ],
            "updatePoint": {
                "line": 86,
                "column": 31
            },
            "line": 86,
            "code": "  it('Non-ASCII - Get last word', () => {\n    test(nonAscii, 56, buildResult(55, 57, '騩鰒'));\n  });",
            "file": "unit/specs/extract-word.spec.js",
            "skipped": false,
            "dir": "tmp/marktext__marktext/test"
        },
        {
            "name": "Non-ASCII - Last character is not a valid word",
            "suites": [
                "Test extractWord"
            ],
            "updatePoint": {
                "line": 89,
                "column": 52
            },
            "line": 89,
            "code": "  it('Non-ASCII - Last character is not a valid word', () => {\n    test(nonAscii, 58, null);\n  });",
            "file": "unit/specs/extract-word.spec.js",
            "skipped": false,
            "dir": "tmp/marktext__marktext/test"
        },
        {
            "name": "Non-ASCII - Get custom index",
            "suites": [
                "Test extractWord"
            ],
            "updatePoint": {
                "line": 92,
                "column": 34
            },
            "line": 92,
            "code": "  it('Non-ASCII - Get custom index', () => {\n    test(nonAscii, 19, buildResult(18, 21, '鱐鱍鱕'));\n  });",
            "file": "unit/specs/extract-word.spec.js",
            "skipped": false,
            "dir": "tmp/marktext__marktext/test"
        },
        {
            "name": "Basic Text Formatting",
            "suites": [
                "Muya parser"
            ],
            "updatePoint": {
                "line": 35,
                "column": 27
            },
            "line": 35,
            "code": "  it('Basic Text Formatting', () => {\n    verifyMarkdown(templates.BasicTextFormattingTemplate(), defaultOptions);\n  });",
            "file": "unit/specs/markdown-basic.spec.js",
            "skipped": false,
            "dir": "tmp/marktext__marktext/test"
        },
        {
            "name": "Blockquotes",
            "suites": [
                "Muya parser"
            ],
            "updatePoint": {
                "line": 38,
                "column": 17
            },
            "line": 38,
            "code": "  it('Blockquotes', () => {\n    verifyMarkdown(templates.BlockquotesTemplate(), defaultOptions);\n  });",
            "file": "unit/specs/markdown-basic.spec.js",
            "skipped": false,
            "dir": "tmp/marktext__marktext/test"
        },
        {
            "name": "Code Blocks",
            "suites": [
                "Muya parser"
            ],
            "updatePoint": {
                "line": 41,
                "column": 17
            },
            "line": 41,
            "code": "  it('Code Blocks', () => {\n    verifyMarkdown(templates.CodeBlocksTemplate(), defaultOptions);\n  });",
            "file": "unit/specs/markdown-basic.spec.js",
            "skipped": false,
            "dir": "tmp/marktext__marktext/test"
        },
        {
            "name": "Escapes",
            "suites": [
                "Muya parser"
            ],
            "updatePoint": {
                "line": 44,
                "column": 13
            },
            "line": 44,
            "code": "  it('Escapes', () => {\n    verifyMarkdown(templates.EscapesTemplate(), defaultOptions);\n  });",
            "file": "unit/specs/markdown-basic.spec.js",
            "skipped": false,
            "dir": "tmp/marktext__marktext/test"
        },
        {
            "name": "Headings",
            "suites": [
                "Muya parser"
            ],
            "updatePoint": {
                "line": 47,
                "column": 14
            },
            "line": 47,
            "code": "  it('Headings', () => {\n    verifyMarkdown(templates.HeadingsTemplate(), defaultOptions);\n  });",
            "file": "unit/specs/markdown-basic.spec.js",
            "skipped": false,
            "dir": "tmp/marktext__marktext/test"
        },
        {
            "name": "Images",
            "suites": [
                "Muya parser"
            ],
            "updatePoint": {
                "line": 50,
                "column": 12
            },
            "line": 50,
            "code": "  it('Images', () => {\n    verifyMarkdown(templates.ImagesTemplate(), defaultOptions);\n  });",
            "file": "unit/specs/markdown-basic.spec.js",
            "skipped": false,
            "dir": "tmp/marktext__marktext/test"
        },
        {
            "name": "Links",
            "suites": [
                "Muya parser"
            ],
            "updatePoint": {
                "line": 53,
                "column": 11
            },
            "line": 53,
            "code": "  it('Links', () => {\n    verifyMarkdown(templates.LinksTemplate(), defaultOptions);\n  });",
            "file": "unit/specs/markdown-basic.spec.js",
            "skipped": false,
            "dir": "tmp/marktext__marktext/test"
        },
        {
            "name": "Lists",
            "suites": [
                "Muya parser"
            ],
            "updatePoint": {
                "line": 56,
                "column": 11
            },
            "line": 56,
            "code": "  it('Lists', () => {\n    verifyMarkdown(templates.ListsTemplate(), defaultOptions);\n  });",
            "file": "unit/specs/markdown-basic.spec.js",
            "skipped": false,
            "dir": "tmp/marktext__marktext/test"
        },
        {
            "name": "GFM - Basic Text Formatting",
            "suites": [
                "Muya parser"
            ],
            "updatePoint": {
                "line": 59,
                "column": 33
            },
            "line": 59,
            "code": "  it('GFM - Basic Text Formatting', () => {\n    verifyMarkdown(templates.GfmBasicTextFormattingTemplate(), defaultOptions);\n  });",
            "file": "unit/specs/markdown-basic.spec.js",
            "skipped": false,
            "dir": "tmp/marktext__marktext/test"
        },
        {
            "name": "GFM - Lists",
            "suites": [
                "Muya parser"
            ],
            "updatePoint": {
                "line": 62,
                "column": 17
            },
            "line": 62,
            "code": "  it('GFM - Lists', () => {\n    verifyMarkdown(templates.GfmListsTemplate(), defaultOptions);\n  });",
            "file": "unit/specs/markdown-basic.spec.js",
            "skipped": false,
            "dir": "tmp/marktext__marktext/test"
        },
        {
            "name": "GFM - Tables",
            "suites": [
                "Muya parser"
            ],
            "updatePoint": {
                "line": 65,
                "column": 18
            },
            "line": 65,
            "code": "  it('GFM - Tables', () => {\n    verifyMarkdown(templates.GfmTablesTemplate(), defaultOptions);\n  });",
            "file": "unit/specs/markdown-basic.spec.js",
            "skipped": false,
            "dir": "tmp/marktext__marktext/test"
        },
        {
            "name": "Basic Text Formatting",
            "suites": [
                "Muya parser (CRLF)"
            ],
            "updatePoint": {
                "line": 70,
                "column": 27
            },
            "line": 70,
            "code": "  it('Basic Text Formatting', () => {\n    verifyMarkdown(templates.BasicTextFormattingTemplate(), defaultOptionsCrlf);\n  });",
            "file": "unit/specs/markdown-basic.spec.js",
            "skipped": false,
            "dir": "tmp/marktext__marktext/test"
        },
        {
            "name": "Blockquotes",
            "suites": [
                "Muya parser (CRLF)"
            ],
            "updatePoint": {
                "line": 73,
                "column": 17
            },
            "line": 73,
            "code": "  it('Blockquotes', () => {\n    verifyMarkdown(templates.BlockquotesTemplate(), defaultOptionsCrlf);\n  });",
            "file": "unit/specs/markdown-basic.spec.js",
            "skipped": false,
            "dir": "tmp/marktext__marktext/test"
        },
        {
            "name": "Code Blocks",
            "suites": [
                "Muya parser (CRLF)"
            ],
            "updatePoint": {
                "line": 76,
                "column": 17
            },
            "line": 76,
            "code": "  it('Code Blocks', () => {\n    verifyMarkdown(templates.CodeBlocksTemplate(), defaultOptionsCrlf);\n  });",
            "file": "unit/specs/markdown-basic.spec.js",
            "skipped": false,
            "dir": "tmp/marktext__marktext/test"
        },
        {
            "name": "Escapes",
            "suites": [
                "Muya parser (CRLF)"
            ],
            "updatePoint": {
                "line": 79,
                "column": 13
            },
            "line": 79,
            "code": "  it('Escapes', () => {\n    verifyMarkdown(templates.EscapesTemplate(), defaultOptionsCrlf);\n  });",
            "file": "unit/specs/markdown-basic.spec.js",
            "skipped": false,
            "dir": "tmp/marktext__marktext/test"
        },
        {
            "name": "Headings",
            "suites": [
                "Muya parser (CRLF)"
            ],
            "updatePoint": {
                "line": 82,
                "column": 14
            },
            "line": 82,
            "code": "  it('Headings', () => {\n    verifyMarkdown(templates.HeadingsTemplate(), defaultOptionsCrlf);\n  });",
            "file": "unit/specs/markdown-basic.spec.js",
            "skipped": false,
            "dir": "tmp/marktext__marktext/test"
        },
        {
            "name": "Images",
            "suites": [
                "Muya parser (CRLF)"
            ],
            "updatePoint": {
                "line": 85,
                "column": 12
            },
            "line": 85,
            "code": "  it('Images', () => {\n    verifyMarkdown(templates.ImagesTemplate(), defaultOptionsCrlf);\n  });",
            "file": "unit/specs/markdown-basic.spec.js",
            "skipped": false,
            "dir": "tmp/marktext__marktext/test"
        },
        {
            "name": "Links",
            "suites": [
                "Muya parser (CRLF)"
            ],
            "updatePoint": {
                "line": 88,
                "column": 11
            },
            "line": 88,
            "code": "  it('Links', () => {\n    verifyMarkdown(templates.LinksTemplate(), defaultOptionsCrlf);\n  });",
            "file": "unit/specs/markdown-basic.spec.js",
            "skipped": false,
            "dir": "tmp/marktext__marktext/test"
        },
        {
            "name": "Lists",
            "suites": [
                "Muya parser (CRLF)"
            ],
            "updatePoint": {
                "line": 91,
                "column": 11
            },
            "line": 91,
            "code": "  it('Lists', () => {\n    verifyMarkdown(templates.ListsTemplate(), defaultOptionsCrlf);\n  });",
            "file": "unit/specs/markdown-basic.spec.js",
            "skipped": false,
            "dir": "tmp/marktext__marktext/test"
        },
        {
            "name": "GFM - Basic Text Formatting",
            "suites": [
                "Muya parser (CRLF)"
            ],
            "updatePoint": {
                "line": 94,
                "column": 33
            },
            "line": 94,
            "code": "  it('GFM - Basic Text Formatting', () => {\n    verifyMarkdown(templates.GfmBasicTextFormattingTemplate(), defaultOptionsCrlf);\n  });",
            "file": "unit/specs/markdown-basic.spec.js",
            "skipped": false,
            "dir": "tmp/marktext__marktext/test"
        },
        {
            "name": "GFM - Lists",
            "suites": [
                "Muya parser (CRLF)"
            ],
            "updatePoint": {
                "line": 97,
                "column": 17
            },
            "line": 97,
            "code": "  it('GFM - Lists', () => {\n    verifyMarkdown(templates.GfmListsTemplate(), defaultOptionsCrlf);\n  });",
            "file": "unit/specs/markdown-basic.spec.js",
            "skipped": false,
            "dir": "tmp/marktext__marktext/test"
        },
        {
            "name": "GFM - Tables",
            "suites": [
                "Muya parser (CRLF)"
            ],
            "updatePoint": {
                "line": 100,
                "column": 18
            },
            "line": 100,
            "code": "  it('GFM - Tables', () => {\n    verifyMarkdown(templates.GfmTablesTemplate(), defaultOptionsCrlf);\n  });",
            "file": "unit/specs/markdown-basic.spec.js",
            "skipped": false,
            "dir": "tmp/marktext__marktext/test"
        },
        {
            "name": "Indent by 1 space",
            "suites": [
                "Muya list identation"
            ],
            "updatePoint": {
                "line": 56,
                "column": 23
            },
            "line": 56,
            "code": "  it('Indent by 1 space', () => {\n    const md = `start\n\n- foo\n- foo\n  - foo\n  - foo\n    - foo\n    - foo\n      - foo\n  - foo\n- foo\n\nsep\n\n1. foo\n2. foo\n   1. foo\n   2. foo\n      1. foo\n   3. foo\n3. foo\n   20. foo\n       141. foo\n            1. foo\n`;\n    verifyMarkdown(md, 1);\n  });",
            "file": "unit/specs/markdown-list-indentation.spec.js",
            "skipped": false,
            "dir": "tmp/marktext__marktext/test"
        },
        {
            "name": "Indent by 2 spaces",
            "suites": [
                "Muya list identation"
            ],
            "updatePoint": {
                "line": 84,
                "column": 24
            },
            "line": 84,
            "code": "  it('Indent by 2 spaces', () => {\n    const md = `start\n\n- foo\n- foo\n   - foo\n   - foo\n      - foo\n      - foo\n         - foo\n   - foo\n- foo\n\nsep\n\n1. foo\n2. foo\n    1. foo\n    2. foo\n        1. foo\n    3. foo\n3. foo\n    20. foo\n         141. foo\n               1. foo\n`;\n    verifyMarkdown(md, 2);\n  });",
            "file": "unit/specs/markdown-list-indentation.spec.js",
            "skipped": false,
            "dir": "tmp/marktext__marktext/test"
        },
        {
            "name": "Indent by 3 spaces",
            "suites": [
                "Muya list identation"
            ],
            "updatePoint": {
                "line": 112,
                "column": 24
            },
            "line": 112,
            "code": "  it('Indent by 3 spaces', () => {\n    const md = `start\n\n- foo\n- foo\n    - foo\n    - foo\n        - foo\n        - foo\n            - foo\n    - foo\n- foo\n\nsep\n\n1. foo\n2. foo\n     1. foo\n     2. foo\n          1. foo\n     3. foo\n3. foo\n     20. foo\n           141. foo\n                  1. foo\n`;\n    verifyMarkdown(md, 3);\n  });",
            "file": "unit/specs/markdown-list-indentation.spec.js",
            "skipped": false,
            "dir": "tmp/marktext__marktext/test"
        },
        {
            "name": "Indent by 4 spaces",
            "suites": [
                "Muya list identation"
            ],
            "updatePoint": {
                "line": 140,
                "column": 24
            },
            "line": 140,
            "code": "  it('Indent by 4 spaces', () => {\n    const md = `start\n\n- foo\n- foo\n     - foo\n     - foo\n          - foo\n          - foo\n               - foo\n     - foo\n- foo\n\nsep\n\n1. foo\n2. foo\n      1. foo\n      2. foo\n            1. foo\n      3. foo\n3. foo\n      20. foo\n             141. foo\n                     1. foo\n`;\n    verifyMarkdown(md, 4);\n  });",
            "file": "unit/specs/markdown-list-indentation.spec.js",
            "skipped": false,
            "dir": "tmp/marktext__marktext/test"
        },
        {
            "name": "Indent using Daring Fireball Markdown Spec",
            "suites": [
                "Muya list identation"
            ],
            "updatePoint": {
                "line": 194,
                "column": 48
            },
            "line": 194,
            "code": "  it('Indent using Daring Fireball Markdown Spec', () => {\n    const md = `start\n\n- foo\n- foo\n    - foo\n    - foo\n        - foo\n        - foo\n            - foo\n    - foo\n- foo\n\nsep\n\n1. foo\n2. foo\n    1. foo\n    2. foo\n        1. foo\n    3. foo\n3. foo\n    20. foo\n        99. foo\n            1. foo\n`;\n    verifyMarkdown(md, 'dfm', md);\n  });",
            "file": "unit/specs/markdown-list-indentation.spec.js",
            "skipped": false,
            "dir": "tmp/marktext__marktext/test"
        },
        {
            "name": "Should create and execute market sales",
            "suites": [
                "NFTMarket"
            ],
            "updatePoint": {
                "line": 2,
                "column": 44
            },
            "line": 2,
            "code": "  it(\"Should create and execute market sales\", async function () {\n    const Market = await ethers.getContractFactory(\"NFTMarket\");\n    const market = await Market.deploy();\n    await market.deployed();\n    const marketAddress = market.address;\n    const NFT = await ethers.getContractFactory(\"NFT\");\n    const nft = await NFT.deploy(marketAddress);\n    await nft.deployed();\n    const nftContractAddress = nft.address;\n    let listingPrice = await market.getListingPrice();\n    listingPrice = listingPrice.toString();\n    const auctionPrice = ethers.utils.parseUnits('1', 'ether');\n    await nft.createToken(\"https://www.mytokenlocation.com\");\n    await nft.createToken(\"https://www.mytokenlocation2.com\");\n    await market.createMarketItem(nftContractAddress, 1, auctionPrice, {\n      value: listingPrice\n    });\n    await market.createMarketItem(nftContractAddress, 2, auctionPrice, {\n      value: listingPrice\n    });\n    const [_, buyerAddress] = await ethers.getSigners();\n    await market.connect(buyerAddress).createMarketSale(nftContractAddress, 1, {\n      value: auctionPrice\n    });\n    items = await market.fetchMarketItems();\n    items = await Promise.all(items.map(async i => {\n      const tokenUri = await nft.tokenURI(i.tokenId);\n      let item = {\n        price: i.price.toString(),\n        tokenId: i.tokenId.toString(),\n        seller: i.seller,\n        owner: i.owner,\n        tokenUri\n      };\n      return item;\n    }));\n    console.log('items: ', items);\n  });",
            "file": "sample-test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/dabit3__polygon-ethereum-nextjs-marketplace/test"
        },
        {
            "name": "should deposit tokens",
            "suites": [],
            "updatePoint": {
                "line": 39,
                "column": 27
            },
            "line": 39,
            "code": "  it('should deposit tokens', async () => {\n    const amount = web3.utils.toWei('100');\n    await dex.deposit(amount, DAI, {\n      from: trader1\n    });\n    const balance = await dex.traderBalances(trader1, DAI);\n    assert(balance.toString() === amount);\n  });",
            "file": "dex.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/blockchain-masterclass/dex-2-testing/10-test-create-market-order-happy-path/test"
        },
        {
            "name": "should NOT deposit tokens if token does not exist",
            "suites": [],
            "updatePoint": {
                "line": 47,
                "column": 55
            },
            "line": 47,
            "code": "  it('should NOT deposit tokens if token does not exist', async () => {\n    await expectRevert(dex.deposit(web3.utils.toWei('100'), web3.utils.fromAscii('TOKEN-DOES-NOT-EXIST'), {\n      from: trader1\n    }), 'this token does not exist');\n  });",
            "file": "dex.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/blockchain-masterclass/dex-2-testing/10-test-create-market-order-happy-path/test"
        },
        {
            "name": "should withdraw tokens",
            "suites": [],
            "updatePoint": {
                "line": 52,
                "column": 28
            },
            "line": 52,
            "code": "  it('should withdraw tokens', async () => {\n    const amount = web3.utils.toWei('100');\n    await dex.deposit(amount, DAI, {\n      from: trader1\n    });\n    await dex.withdraw(amount, DAI, {\n      from: trader1\n    });\n    const [balanceDex, balanceDai] = await Promise.all([dex.traderBalances(trader1, DAI), dai.balanceOf(trader1)]);\n    assert(balanceDex.isZero());\n    assert(balanceDai.toString() === web3.utils.toWei('1000'));\n  });",
            "file": "dex.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/blockchain-masterclass/dex-2-testing/10-test-create-market-order-happy-path/test"
        },
        {
            "name": "should NOT withdraw tokens if token does not exist",
            "suites": [],
            "updatePoint": {
                "line": 64,
                "column": 56
            },
            "line": 64,
            "code": "  it('should NOT withdraw tokens if token does not exist', async () => {\n    await expectRevert(dex.withdraw(web3.utils.toWei('1000'), web3.utils.fromAscii('TOKEN-DOES-NOT-EXIST'), {\n      from: trader1\n    }), 'this token does not exist');\n  });",
            "file": "dex.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/blockchain-masterclass/dex-2-testing/10-test-create-market-order-happy-path/test"
        },
        {
            "name": "should NOT withdraw tokens if balance too low",
            "suites": [],
            "updatePoint": {
                "line": 69,
                "column": 51
            },
            "line": 69,
            "code": "  it('should NOT withdraw tokens if balance too low', async () => {\n    await dex.deposit(web3.utils.toWei('100'), DAI, {\n      from: trader1\n    });\n    await expectRevert(dex.withdraw(web3.utils.toWei('1000'), DAI, {\n      from: trader1\n    }), 'balance too low');\n  });",
            "file": "dex.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/blockchain-masterclass/dex-2-testing/10-test-create-market-order-happy-path/test"
        },
        {
            "name": "should create limit order",
            "suites": [],
            "updatePoint": {
                "line": 77,
                "column": 31
            },
            "line": 77,
            "code": "  it('should create limit order', async () => {\n    await dex.deposit(web3.utils.toWei('100'), DAI, {\n      from: trader1\n    });\n    await dex.createLimitOrder(REP, web3.utils.toWei('10'), 10, SIDE.BUY, {\n      from: trader1\n    });\n    let buyOrders = await dex.getOrders(REP, SIDE.BUY);\n    let sellOrders = await dex.getOrders(REP, SIDE.SELL);\n    assert(buyOrders.length === 1);\n    assert(buyOrders[0].trader === trader1);\n    assert(buyOrders[0].ticker === web3.utils.padRight(REP, 64));\n    assert(buyOrders[0].price === '10');\n    assert(buyOrders[0].amount === web3.utils.toWei('10'));\n    assert(sellOrders.length === 0);\n    await dex.deposit(web3.utils.toWei('200'), DAI, {\n      from: trader2\n    });\n    await dex.createLimitOrder(REP, web3.utils.toWei('10'), 11, SIDE.BUY, {\n      from: trader2\n    });\n    buyOrders = await dex.getOrders(REP, SIDE.BUY);\n    sellOrders = await dex.getOrders(REP, SIDE.SELL);\n    assert(buyOrders.length === 2);\n    assert(buyOrders[0].trader === trader2);\n    assert(buyOrders[1].trader === trader1);\n    assert(sellOrders.length === 0);\n    await dex.deposit(web3.utils.toWei('200'), DAI, {\n      from: trader2\n    });\n    await dex.createLimitOrder(REP, web3.utils.toWei('10'), 9, SIDE.BUY, {\n      from: trader2\n    });\n    buyOrders = await dex.getOrders(REP, SIDE.BUY);\n    sellOrders = await dex.getOrders(REP, SIDE.SELL);\n    assert(buyOrders.length === 3);\n    assert(buyOrders[0].trader === trader2);\n    assert(buyOrders[1].trader === trader1);\n    assert(buyOrders[2].trader === trader2);\n    assert(sellOrders.length === 0);\n  });",
            "file": "dex.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/blockchain-masterclass/dex-2-testing/10-test-create-market-order-happy-path/test"
        },
        {
            "name": "should NOT create limit order if token balance too low",
            "suites": [],
            "updatePoint": {
                "line": 118,
                "column": 60
            },
            "line": 118,
            "code": "  it('should NOT create limit order if token balance too low', async () => {\n    await dex.deposit(web3.utils.toWei('99'), REP, {\n      from: trader1\n    });\n    await expectRevert(dex.createLimitOrder(REP, web3.utils.toWei('100'), 10, SIDE.SELL, {\n      from: trader1\n    }), 'token balance too low');\n  });",
            "file": "dex.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/blockchain-masterclass/dex-2-testing/10-test-create-market-order-happy-path/test"
        },
        {
            "name": "should NOT create limit order if dai balance too low",
            "suites": [],
            "updatePoint": {
                "line": 126,
                "column": 58
            },
            "line": 126,
            "code": "  it('should NOT create limit order if dai balance too low', async () => {\n    await dex.deposit(web3.utils.toWei('99'), DAI, {\n      from: trader1\n    });\n    await expectRevert(dex.createLimitOrder(REP, web3.utils.toWei('10'), 10, SIDE.BUY, {\n      from: trader1\n    }), 'dai balance too low');\n  });",
            "file": "dex.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/blockchain-masterclass/dex-2-testing/10-test-create-market-order-happy-path/test"
        },
        {
            "name": "should NOT create limit order if token is DAI",
            "suites": [],
            "updatePoint": {
                "line": 134,
                "column": 51
            },
            "line": 134,
            "code": "  it('should NOT create limit order if token is DAI', async () => {\n    await expectRevert(dex.createLimitOrder(DAI, web3.utils.toWei('1000'), 10, SIDE.BUY, {\n      from: trader1\n    }), 'cannot trade DAI');\n  });",
            "file": "dex.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/blockchain-masterclass/dex-2-testing/10-test-create-market-order-happy-path/test"
        },
        {
            "name": "should NOT create limit order if token does not not exist",
            "suites": [],
            "updatePoint": {
                "line": 139,
                "column": 63
            },
            "line": 139,
            "code": "  it('should NOT create limit order if token does not not exist', async () => {\n    await expectRevert(dex.createLimitOrder(web3.utils.fromAscii('TOKEN-DOES-NOT-EXIST'), web3.utils.toWei('1000'), 10, SIDE.BUY, {\n      from: trader1\n    }), 'this token does not exist');\n  });",
            "file": "dex.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/blockchain-masterclass/dex-2-testing/10-test-create-market-order-happy-path/test"
        },
        {
            "name": "should create market order & match",
            "suites": [],
            "updatePoint": {
                "line": 144,
                "column": 40
            },
            "line": 144,
            "code": "  it('should create market order & match', async () => {\n    await dex.deposit(web3.utils.toWei('100'), DAI, {\n      from: trader1\n    });\n    await dex.createLimitOrder(REP, web3.utils.toWei('10'), 10, SIDE.BUY, {\n      from: trader1\n    });\n    await dex.deposit(web3.utils.toWei('100'), REP, {\n      from: trader2\n    });\n    await dex.createMarketOrder(REP, web3.utils.toWei('5'), SIDE.SELL, {\n      from: trader2\n    });\n    const balances = await Promise.all([dex.traderBalances(trader1, DAI), dex.traderBalances(trader1, REP), dex.traderBalances(trader2, DAI), dex.traderBalances(trader2, REP)]);\n    const orders = await dex.getOrders(REP, SIDE.BUY);\n    assert(orders.length === 1);\n    assert(orders[0].filled = web3.utils.toWei('5'));\n    assert(balances[0].toString() === web3.utils.toWei('50'));\n    assert(balances[1].toString() === web3.utils.toWei('5'));\n    assert(balances[2].toString() === web3.utils.toWei('50'));\n    assert(balances[3].toString() === web3.utils.toWei('95'));\n  });",
            "file": "dex.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/blockchain-masterclass/dex-2-testing/10-test-create-market-order-happy-path/test"
        },
        {
            "name": "should have correct approvers and quorum",
            "suites": [],
            "updatePoint": {
                "line": 13,
                "column": 46
            },
            "line": 13,
            "code": "  it('should have correct approvers and quorum', async () => {\n    const approvers = await wallet.getApprovers();\n    const quorum = await wallet.quorum();\n    assert(approvers.length === 3);\n    assert(approvers[0] === accounts[0]);\n    assert(approvers[1] === accounts[1]);\n    assert(approvers[2] === accounts[2]);\n    assert(quorum.toNumber() === 2);\n  });",
            "file": "wallet.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/blockchain-masterclass/wallet-2-testing/4-your-first-solidity-test/test"
        },
        {
            "name": "should mint 400 governance token",
            "suites": [],
            "updatePoint": {
                "line": 21,
                "column": 38
            },
            "line": 21,
            "code": "  it('should mint 400 governance token', async () => {\n    await underlyingToken.approve(liquidityPool.address, web3.utils.toWei('100'), {\n      from: trader1\n    });\n    await liquidityPool.deposit(web3.utils.toWei('100'), {\n      from: trader1\n    });\n    await time.advanceBlock();\n    await time.advanceBlock();\n    await time.advanceBlock();\n    await liquidityPool.withdraw(web3.utils.toWei('100'), {\n      from: trader1\n    });\n    const balanceGovToken = await governanceToken.balanceOf(trader1);\n    assert(web3.utils.fromWei(balanceGovToken.toString()) === '400');\n  });",
            "file": "liquidityPool.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/defi-development-mastery/1-defi-building-blocks/9-liquidity-mining/test"
        },
        {
            "name": "should mint 600 governance token",
            "suites": [],
            "updatePoint": {
                "line": 37,
                "column": 38
            },
            "line": 37,
            "code": "  it('should mint 600 governance token', async () => {\n    await underlyingToken.approve(liquidityPool.address, web3.utils.toWei('100'), {\n      from: trader1\n    });\n    await liquidityPool.deposit(web3.utils.toWei('100'), {\n      from: trader1\n    });\n    await time.advanceBlock();\n    await time.advanceBlock();\n    await time.advanceBlock();\n    await time.advanceBlock();\n    await underlyingToken.approve(liquidityPool.address, web3.utils.toWei('100'), {\n      from: trader1\n    }); //this tx will add a block\n\n    await liquidityPool.deposit(web3.utils.toWei('100'), {\n      from: trader1\n    });\n    const balanceGovToken = await governanceToken.balanceOf(trader1);\n    assert(web3.utils.fromWei(balanceGovToken.toString()) === '600');\n  });",
            "file": "liquidityPool.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/defi-development-mastery/1-defi-building-blocks/9-liquidity-mining/test"
        },
        {
            "name": "...should store the value 89.",
            "suites": [],
            "updatePoint": {
                "line": 4,
                "column": 35
            },
            "line": 4,
            "code": "  it(\"...should store the value 89.\", async () => {\n    const simpleStorageInstance = await SimpleStorage.deployed(); // Set value of 89\n\n    await simpleStorageInstance.set(89, {\n      from: accounts[0]\n    }); // Get stored value\n\n    const storedData = await simpleStorageInstance.get.call();\n    assert.equal(storedData, 89, \"The value 89 was not stored.\");\n  });",
            "file": "simplestorage.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/draft/cryptorobots/test"
        },
        {
            "name": "Deployment should pre-fund ERC20 tokens for accounts 3 & 4",
            "suites": [],
            "updatePoint": {
                "line": 23,
                "column": 64
            },
            "line": 23,
            "code": "  it('Deployment should pre-fund ERC20 tokens for accounts 3 & 4', async () => {\n    const balances = [];\n    const tokens = [eos, omg];\n    const addresses = [accounts[3], accounts[4]];\n    balances.push(await eos.balanceOf(accounts[3]));\n    balances.push(await omg.balanceOf(accounts[3]));\n    balances.push(await eos.balanceOf(accounts[4]));\n    balances.push(await omg.balanceOf(accounts[4]));\n    balances.map(balance => assert.equal(balance.valueOf(), 1000));\n  });",
            "file": "dex.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/draft/dex-erc20/finished/test"
        },
        {
            "name": "valueOf() should return an initial null token balance",
            "suites": [],
            "updatePoint": {
                "line": 33,
                "column": 59
            },
            "line": 33,
            "code": "  it('valueOf() should return an initial null token balance', async () => {\n    const balances = await tokenBalances(dex, accounts);\n    balances.map(balance => assert.equal(balance.valueOf(), 0));\n  });",
            "file": "dex.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/draft/dex-erc20/finished/test"
        },
        {
            "name": "deposit() should increment balance of sending address",
            "suites": [],
            "updatePoint": {
                "line": 37,
                "column": 59
            },
            "line": 37,
            "code": "  it('deposit() should increment balance of sending address', async () => {\n    await dex.deposit(10, 'EOS', {\n      from: accounts[3]\n    });\n    await dex.deposit(11, 'OMG', {\n      from: accounts[3]\n    });\n    await dex.deposit(12, 'EOS', {\n      from: accounts[4]\n    });\n    await dex.deposit(13, 'OMG', {\n      from: accounts[4]\n    });\n    const balances = await tokenBalances(dex, accounts);\n    [10, 11, 12, 13].forEach((expected, i) => {\n      assert.equal(balances[i].valueOf(), expected);\n    });\n  });",
            "file": "dex.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/draft/dex-erc20/finished/test"
        },
        {
            "name": "addToken() should add token",
            "suites": [],
            "updatePoint": {
                "line": 36,
                "column": 33
            },
            "line": 36,
            "code": "  it('addToken() should add token', async () => {\n    await dex.methods.addToken(web3.utils.fromAscii('TestToken'), testToken.options.address).send({\n      from: admin,\n      gas: 200000\n    });\n    const tokens = await dex.methods.getTokens().call();\n    const tokenAdded = tokens.filter(t => web3.utils.toUtf8(t.ticker) === 'TestToken');\n    assert(tokenAdded.length === 1);\n  });",
            "file": "dex.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/draft/dex-erc20/finished2/test"
        },
        {
            "name": "addToken() should update token",
            "suites": [],
            "updatePoint": {
                "line": 45,
                "column": 36
            },
            "line": 45,
            "code": "  it('addToken() should update token', async () => {\n    await dex.methods.addToken(web3.utils.fromAscii('EOS'), accounts[9]).send({\n      from: admin,\n      gas: 200000\n    });\n    const tokens = await dex.methods.getTokens().call();\n    const tokenUpdated = tokens.filter(t => web3.utils.toUtf8(t.ticker) === 'EOS' && t.at === accounts[9]);\n    assert(tokenUpdated.length === 1);\n  });",
            "file": "dex.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/draft/dex-erc20/finished2/test"
        },
        {
            "name": "Should interact with the token contract",
            "suites": [
                "NFTMarket"
            ],
            "updatePoint": {
                "line": 4,
                "column": 45
            },
            "line": 4,
            "code": "  it(\"Should interact with the token contract\", async function () {\n    const Market = await ethers.getContractFactory(\"NFTMarket\");\n    const market = await Market.deploy();\n    await market.deployed();\n    const marketAddress = market.address;\n    const NFT = await ethers.getContractFactory(\"NFT\");\n    const nft = await NFT.deploy(marketAddress);\n    await nft.deployed();\n    const nftContractAddress = nft.address;\n    await nft.createToken(\"a\");\n    await nft.createToken(\"b\");\n    await nft.createToken(\"c\");\n    await market.createMarketItem(nftContractAddress, 1, 1000);\n    await market.createMarketItem(nftContractAddress, 2, 1000);\n    await market.createMarketItem(nftContractAddress, 3, 1000);\n    const [_, userAddress, userAddress2, userAddress3] = await ethers.getSigners();\n    await market.connect(userAddress).createMarketSale(nftContractAddress, 1, {\n      value: 1000\n    });\n    await market.connect(userAddress2).createMarketSale(nftContractAddress, 2, {\n      value: 1000\n    });\n    await market.connect(userAddress2).createMarketSale(nftContractAddress, 3, {\n      value: 1000\n    });\n    transaction = await nft.createToken(\"d\");\n    transaction = await nft.createToken(\"e\");\n    transaction = await nft.createToken(\"f\");\n    transaction = await nft.createToken(\"g\");\n    transaction = await nft.createToken(\"h\");\n    transaction = await nft.createToken(\"i\");\n    await market.createMarketItem(nftContractAddress, 4, 1000);\n    await market.createMarketItem(nftContractAddress, 5, 1000);\n    await market.createMarketItem(nftContractAddress, 6, 1000);\n    await market.createMarketItem(nftContractAddress, 7, 1000);\n    await market.createMarketItem(nftContractAddress, 8, 1000);\n    await market.createMarketItem(nftContractAddress, 9, 1000);\n    await market.connect(userAddress2).createMarketSale(nftContractAddress, 4, {\n      value: 1000\n    }); // d\n\n    await market.connect(userAddress2).createMarketSale(nftContractAddress, 5, {\n      value: 1000\n    }); // e\n\n    await market.connect(userAddress2).createMarketSale(nftContractAddress, 6, {\n      value: 1000\n    }); // f\n\n    await market.connect(userAddress2).createMarketSale(nftContractAddress, 7, {\n      value: 1000\n    }); // g\n\n    items = await market.fetchMarketItems();\n    items = await Promise.all(items.map(async i => {\n      const tokenUri = await nft.tokenURI(i.tokenId);\n      let item = {\n        price: i.price.toNumber(),\n        tokenId: i.price.toNumber(),\n        seller: i.seller,\n        owner: i.owner,\n        tokenUri\n      };\n      return item;\n    }));\n    console.log('items: ', items);\n    const myNfts = await market.connect(userAddress2).fetchMyNFTs();\n    console.log('myNfts:', myNfts);\n  });",
            "file": "test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/live-trainings/5-ethereum-nft-marketplace/marketplace-complete/test"
        },
        {
            "name": "should set correct state variables",
            "suites": [],
            "updatePoint": {
                "line": 18,
                "column": 40
            },
            "line": 18,
            "code": "  it('should set correct state variables', async () => {\n    this.chef = await MasterChef.new(this.sushi.address, dev, '1000', '0', '1000', {\n      from: alice\n    });\n    await this.sushi.transferOwnership(this.chef.address, {\n      from: alice\n    });\n    const sushi = await this.chef.sushi();\n    const devaddr = await this.chef.devaddr();\n    const owner = await this.sushi.owner();\n    assert.equal(sushi.valueOf(), this.sushi.address);\n    assert.equal(devaddr.valueOf(), dev);\n    assert.equal(owner.valueOf(), this.chef.address);\n  });",
            "file": "AMasterChef.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/screencast/235-fork-sushiswap/test"
        },
        {
            "name": "should allow dev and only dev to update dev",
            "suites": [],
            "updatePoint": {
                "line": 32,
                "column": 49
            },
            "line": 32,
            "code": "  it('should allow dev and only dev to update dev', async () => {\n    this.chef = await MasterChef.new(this.sushi.address, dev, '1000', '0', '1000', {\n      from: alice\n    });\n    assert.equal((await this.chef.devaddr()).valueOf(), dev);\n    await expectRevert(this.chef.dev(bob, {\n      from: bob\n    }), 'dev: wut?');\n    await this.chef.dev(bob, {\n      from: dev\n    });\n    assert.equal((await this.chef.devaddr()).valueOf(), bob);\n    await this.chef.dev(alice, {\n      from: bob\n    });\n    assert.equal((await this.chef.devaddr()).valueOf(), alice);\n  });",
            "file": "AMasterChef.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/screencast/235-fork-sushiswap/test"
        },
        {
            "name": "should allow emergency withdraw",
            "suites": [
                "With ERC/LP token added to the field"
            ],
            "updatePoint": {
                "line": 76,
                "column": 39
            },
            "line": 76,
            "code": "    it('should allow emergency withdraw', async () => {\n      // 100 per block farming rate starting at block 100 with bonus until block 1000\n      this.chef = await MasterChef.new(this.sushi.address, dev, '100', '100', '1000', {\n        from: alice\n      });\n      await this.chef.add('100', this.lp.address, true);\n      await this.lp.approve(this.chef.address, '1000', {\n        from: bob\n      });\n      await this.chef.deposit(0, '100', {\n        from: bob\n      });\n      assert.equal((await this.lp.balanceOf(bob)).valueOf(), '900');\n      await this.chef.emergencyWithdraw(0, {\n        from: bob\n      });\n      assert.equal((await this.lp.balanceOf(bob)).valueOf(), '1000');\n    });",
            "file": "AMasterChef.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/screencast/235-fork-sushiswap/test"
        },
        {
            "name": "should give out SUSHIs only after farming time",
            "suites": [
                "With ERC/LP token added to the field"
            ],
            "updatePoint": {
                "line": 94,
                "column": 54
            },
            "line": 94,
            "code": "    it('should give out SUSHIs only after farming time', async () => {\n      // 100 per block farming rate starting at block 100 with bonus until block 1000\n      this.chef = await MasterChef.new(this.sushi.address, dev, '100', '100', '1000', {\n        from: alice\n      });\n      await this.sushi.transferOwnership(this.chef.address, {\n        from: alice\n      });\n      await this.chef.add('100', this.lp.address, true);\n      await this.lp.approve(this.chef.address, '1000', {\n        from: bob\n      });\n      await this.chef.deposit(0, '100', {\n        from: bob\n      });\n      await time.advanceBlockTo('89');\n      await this.chef.deposit(0, '0', {\n        from: bob\n      }); // block 90\n\n      assert.equal((await this.sushi.balanceOf(bob)).valueOf(), '0');\n      await time.advanceBlockTo('94');\n      await this.chef.deposit(0, '0', {\n        from: bob\n      }); // block 95\n\n      assert.equal((await this.sushi.balanceOf(bob)).valueOf(), '0');\n      await time.advanceBlockTo('99');\n      await this.chef.deposit(0, '0', {\n        from: bob\n      }); // block 100\n\n      assert.equal((await this.sushi.balanceOf(bob)).valueOf(), '0');\n      await time.advanceBlockTo('100');\n      await this.chef.deposit(0, '0', {\n        from: bob\n      }); // block 101\n\n      assert.equal((await this.sushi.balanceOf(bob)).valueOf(), '1000');\n      await time.advanceBlockTo('104');\n      await this.chef.deposit(0, '0', {\n        from: bob\n      }); // block 105\n\n      assert.equal((await this.sushi.balanceOf(bob)).valueOf(), '5000');\n      assert.equal((await this.sushi.balanceOf(dev)).valueOf(), '500');\n      assert.equal((await this.sushi.totalSupply()).valueOf(), '5500');\n    });",
            "file": "AMasterChef.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/screencast/235-fork-sushiswap/test"
        },
        {
            "name": "should not distribute SUSHIs if no one deposit",
            "suites": [
                "With ERC/LP token added to the field"
            ],
            "updatePoint": {
                "line": 142,
                "column": 54
            },
            "line": 142,
            "code": "    it('should not distribute SUSHIs if no one deposit', async () => {\n      // 100 per block farming rate starting at block 200 with bonus until block 1000\n      this.chef = await MasterChef.new(this.sushi.address, dev, '100', '200', '1000', {\n        from: alice\n      });\n      await this.sushi.transferOwnership(this.chef.address, {\n        from: alice\n      });\n      await this.chef.add('100', this.lp.address, true);\n      await this.lp.approve(this.chef.address, '1000', {\n        from: bob\n      });\n      await time.advanceBlockTo('199');\n      assert.equal((await this.sushi.totalSupply()).valueOf(), '0');\n      await time.advanceBlockTo('204');\n      assert.equal((await this.sushi.totalSupply()).valueOf(), '0');\n      await time.advanceBlockTo('209');\n      await this.chef.deposit(0, '10', {\n        from: bob\n      }); // block 210\n\n      assert.equal((await this.sushi.totalSupply()).valueOf(), '0');\n      assert.equal((await this.sushi.balanceOf(bob)).valueOf(), '0');\n      assert.equal((await this.sushi.balanceOf(dev)).valueOf(), '0');\n      assert.equal((await this.lp.balanceOf(bob)).valueOf(), '990');\n      await time.advanceBlockTo('219');\n      await this.chef.withdraw(0, '10', {\n        from: bob\n      }); // block 220\n\n      assert.equal((await this.sushi.totalSupply()).valueOf(), '11000');\n      assert.equal((await this.sushi.balanceOf(bob)).valueOf(), '10000');\n      assert.equal((await this.sushi.balanceOf(dev)).valueOf(), '1000');\n      assert.equal((await this.lp.balanceOf(bob)).valueOf(), '1000');\n    });",
            "file": "AMasterChef.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/screencast/235-fork-sushiswap/test"
        },
        {
            "name": "should distribute SUSHIs properly for each staker",
            "suites": [
                "With ERC/LP token added to the field"
            ],
            "updatePoint": {
                "line": 177,
                "column": 57
            },
            "line": 177,
            "code": "    it('should distribute SUSHIs properly for each staker', async () => {\n      // 100 per block farming rate starting at block 300 with bonus until block 1000\n      this.chef = await MasterChef.new(this.sushi.address, dev, '100', '300', '1000', {\n        from: alice\n      });\n      await this.sushi.transferOwnership(this.chef.address, {\n        from: alice\n      });\n      await this.chef.add('100', this.lp.address, true);\n      await this.lp.approve(this.chef.address, '1000', {\n        from: alice\n      });\n      await this.lp.approve(this.chef.address, '1000', {\n        from: bob\n      });\n      await this.lp.approve(this.chef.address, '1000', {\n        from: carol\n      }); // Alice deposits 10 LPs at block 310\n\n      await time.advanceBlockTo('309');\n      await this.chef.deposit(0, '10', {\n        from: alice\n      }); // Bob deposits 20 LPs at block 314\n\n      await time.advanceBlockTo('313');\n      await this.chef.deposit(0, '20', {\n        from: bob\n      }); // Carol deposits 30 LPs at block 318\n\n      await time.advanceBlockTo('317');\n      await this.chef.deposit(0, '30', {\n        from: carol\n      }); // Alice deposits 10 more LPs at block 320. At this point:\n      //   Alice should have: 4*1000 + 4*1/3*1000 + 2*1/6*1000 = 5666\n      //   MasterChef should have the remaining: 10000 - 5666 = 4334\n\n      await time.advanceBlockTo('319');\n      await this.chef.deposit(0, '10', {\n        from: alice\n      });\n      assert.equal((await this.sushi.totalSupply()).valueOf(), '11000');\n      assert.equal((await this.sushi.balanceOf(alice)).valueOf(), '5666');\n      assert.equal((await this.sushi.balanceOf(bob)).valueOf(), '0');\n      assert.equal((await this.sushi.balanceOf(carol)).valueOf(), '0');\n      assert.equal((await this.sushi.balanceOf(this.chef.address)).valueOf(), '4334');\n      assert.equal((await this.sushi.balanceOf(dev)).valueOf(), '1000'); // Bob withdraws 5 LPs at block 330. At this point:\n      //   Bob should have: 4*2/3*1000 + 2*2/6*1000 + 10*2/7*1000 = 6190\n\n      await time.advanceBlockTo('329');\n      await this.chef.withdraw(0, '5', {\n        from: bob\n      });\n      assert.equal((await this.sushi.totalSupply()).valueOf(), '22000');\n      assert.equal((await this.sushi.balanceOf(alice)).valueOf(), '5666');\n      assert.equal((await this.sushi.balanceOf(bob)).valueOf(), '6190');\n      assert.equal((await this.sushi.balanceOf(carol)).valueOf(), '0');\n      assert.equal((await this.sushi.balanceOf(this.chef.address)).valueOf(), '8144');\n      assert.equal((await this.sushi.balanceOf(dev)).valueOf(), '2000'); // Alice withdraws 20 LPs at block 340.\n      // Bob withdraws 15 LPs at block 350.\n      // Carol withdraws 30 LPs at block 360.\n\n      await time.advanceBlockTo('339');\n      await this.chef.withdraw(0, '20', {\n        from: alice\n      });\n      await time.advanceBlockTo('349');\n      await this.chef.withdraw(0, '15', {\n        from: bob\n      });\n      await time.advanceBlockTo('359');\n      await this.chef.withdraw(0, '30', {\n        from: carol\n      });\n      assert.equal((await this.sushi.totalSupply()).valueOf(), '55000');\n      assert.equal((await this.sushi.balanceOf(dev)).valueOf(), '5000'); // Alice should have: 5666 + 10*2/7*1000 + 10*2/6.5*1000 = 11600\n\n      assert.equal((await this.sushi.balanceOf(alice)).valueOf(), '11600'); // Bob should have: 6190 + 10*1.5/6.5 * 1000 + 10*1.5/4.5*1000 = 11831\n\n      assert.equal((await this.sushi.balanceOf(bob)).valueOf(), '11831'); // Carol should have: 2*3/6*1000 + 10*3/7*1000 + 10*3/6.5*1000 + 10*3/4.5*1000 + 10*1000 = 26568\n\n      assert.equal((await this.sushi.balanceOf(carol)).valueOf(), '26568'); // All of them should have 1000 LPs back.\n\n      assert.equal((await this.lp.balanceOf(alice)).valueOf(), '1000');\n      assert.equal((await this.lp.balanceOf(bob)).valueOf(), '1000');\n      assert.equal((await this.lp.balanceOf(carol)).valueOf(), '1000');\n    });",
            "file": "AMasterChef.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/screencast/235-fork-sushiswap/test"
        },
        {
            "name": "should give proper SUSHIs allocation to each pool",
            "suites": [
                "With ERC/LP token added to the field"
            ],
            "updatePoint": {
                "line": 263,
                "column": 57
            },
            "line": 263,
            "code": "    it('should give proper SUSHIs allocation to each pool', async () => {\n      // 100 per block farming rate starting at block 400 with bonus until block 1000\n      this.chef = await MasterChef.new(this.sushi.address, dev, '100', '400', '1000', {\n        from: alice\n      });\n      await this.sushi.transferOwnership(this.chef.address, {\n        from: alice\n      });\n      await this.lp.approve(this.chef.address, '1000', {\n        from: alice\n      });\n      await this.lp2.approve(this.chef.address, '1000', {\n        from: bob\n      }); // Add first LP to the pool with allocation 1\n\n      await this.chef.add('10', this.lp.address, true); // Alice deposits 10 LPs at block 410\n\n      await time.advanceBlockTo('409');\n      await this.chef.deposit(0, '10', {\n        from: alice\n      }); // Add LP2 to the pool with allocation 2 at block 420\n\n      await time.advanceBlockTo('419');\n      await this.chef.add('20', this.lp2.address, true); // Alice should have 10*1000 pending reward\n\n      assert.equal((await this.chef.pendingSushi(0, alice)).valueOf(), '10000'); // Bob deposits 10 LP2s at block 425\n\n      await time.advanceBlockTo('424');\n      await this.chef.deposit(1, '5', {\n        from: bob\n      }); // Alice should have 10000 + 5*1/3*1000 = 11666 pending reward\n\n      assert.equal((await this.chef.pendingSushi(0, alice)).valueOf(), '11666');\n      await time.advanceBlockTo('430'); // At block 430. Bob should get 5*2/3*1000 = 3333. Alice should get ~1666 more.\n\n      assert.equal((await this.chef.pendingSushi(0, alice)).valueOf(), '13333');\n      assert.equal((await this.chef.pendingSushi(1, bob)).valueOf(), '3333');\n    });",
            "file": "AMasterChef.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/screencast/235-fork-sushiswap/test"
        },
        {
            "name": "should stop giving bonus SUSHIs after the bonus period ends",
            "suites": [
                "With ERC/LP token added to the field"
            ],
            "updatePoint": {
                "line": 301,
                "column": 67
            },
            "line": 301,
            "code": "    it('should stop giving bonus SUSHIs after the bonus period ends', async () => {\n      // 100 per block farming rate starting at block 500 with bonus until block 600\n      this.chef = await MasterChef.new(this.sushi.address, dev, '100', '500', '600', {\n        from: alice\n      });\n      await this.sushi.transferOwnership(this.chef.address, {\n        from: alice\n      });\n      await this.lp.approve(this.chef.address, '1000', {\n        from: alice\n      });\n      await this.chef.add('1', this.lp.address, true); // Alice deposits 10 LPs at block 590\n\n      await time.advanceBlockTo('589');\n      await this.chef.deposit(0, '10', {\n        from: alice\n      }); // At block 605, she should have 1000*10 + 100*5 = 10500 pending.\n\n      await time.advanceBlockTo('605');\n      assert.equal((await this.chef.pendingSushi(0, alice)).valueOf(), '10500'); // At block 606, Alice withdraws all pending rewards and should get 10600.\n\n      await this.chef.deposit(0, '0', {\n        from: alice\n      });\n      assert.equal((await this.chef.pendingSushi(0, alice)).valueOf(), '0');\n      assert.equal((await this.sushi.balanceOf(alice)).valueOf(), '10600');\n    });",
            "file": "AMasterChef.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/screencast/235-fork-sushiswap/test"
        },
        {
            "name": "should do the migration successfully",
            "suites": [],
            "updatePoint": {
                "line": 48,
                "column": 42
            },
            "line": 48,
            "code": "  it('should do the migration successfully', async () => {\n    await this.token.transfer(this.lp1.address, '10000000', {\n      from: minter\n    });\n    await this.weth.transfer(this.lp1.address, '500000', {\n      from: minter\n    });\n    await this.lp1.mint(minter);\n    assert.equal((await this.lp1.balanceOf(minter)).valueOf(), '2235067'); // Add some fake revenue\n\n    await this.token.transfer(this.lp1.address, '100000', {\n      from: minter\n    });\n    await this.weth.transfer(this.lp1.address, '5000', {\n      from: minter\n    });\n    await this.lp1.sync();\n    await this.lp1.approve(this.chef.address, '100000000000', {\n      from: minter\n    });\n    await this.chef.deposit('0', '2000000', {\n      from: minter\n    });\n    assert.equal((await this.lp1.balanceOf(this.chef.address)).valueOf(), '2000000');\n    await expectRevert(this.chef.migrate(0), 'migrate: no migrator');\n    await this.chef.setMigrator(this.migrator.address, {\n      from: alice\n    });\n    await expectRevert(this.chef.migrate(0), 'migrate: bad');\n    await this.factory2.setMigrator(this.migrator.address, {\n      from: alice\n    });\n    await this.chef.migrate(0);\n    assert.equal((await this.lp1.balanceOf(this.chef.address)).valueOf(), '0');\n    assert.equal((await this.lp2.balanceOf(this.chef.address)).valueOf(), '2000000');\n    await this.chef.withdraw('0', '2000000', {\n      from: minter\n    });\n    await this.lp2.transfer(this.lp2.address, '2000000', {\n      from: minter\n    });\n    await this.lp2.burn(bob);\n    assert.equal((await this.token.balanceOf(bob)).valueOf(), '9033718');\n    assert.equal((await this.weth.balanceOf(bob)).valueOf(), '451685');\n  });",
            "file": "Migrator.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/screencast/235-fork-sushiswap/test"
        },
        {
            "name": "should allow first minting from public only after migrator is gone",
            "suites": [],
            "updatePoint": {
                "line": 93,
                "column": 72
            },
            "line": 93,
            "code": "  it('should allow first minting from public only after migrator is gone', async () => {\n    await this.factory2.setMigrator(this.migrator.address, {\n      from: alice\n    });\n    this.tokenx = await MockERC20.new('TOKENX', 'TOKENX', '100000000', {\n      from: minter\n    });\n    this.lpx = await UniswapV2Pair.at((await this.factory2.createPair(this.weth.address, this.tokenx.address)).logs[0].args.pair);\n    await this.weth.transfer(this.lpx.address, '10000000', {\n      from: minter\n    });\n    await this.tokenx.transfer(this.lpx.address, '500000', {\n      from: minter\n    });\n    await expectRevert(this.lpx.mint(minter), 'Must not have migrator');\n    await this.factory2.setMigrator('0x0000000000000000000000000000000000000000', {\n      from: alice\n    });\n    await this.lpx.mint(minter);\n  });",
            "file": "Migrator.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/screencast/235-fork-sushiswap/test"
        },
        {
            "name": "should not allow enter if not enough approve",
            "suites": [],
            "updatePoint": {
                "line": 27,
                "column": 50
            },
            "line": 27,
            "code": "  it('should not allow enter if not enough approve', async () => {\n    await expectRevert(this.bar.enter('100', {\n      from: alice\n    }), 'ERC20: transfer amount exceeds allowance');\n    await this.sushi.approve(this.bar.address, '50', {\n      from: alice\n    });\n    await expectRevert(this.bar.enter('100', {\n      from: alice\n    }), 'ERC20: transfer amount exceeds allowance');\n    await this.sushi.approve(this.bar.address, '100', {\n      from: alice\n    });\n    await this.bar.enter('100', {\n      from: alice\n    });\n    assert.equal((await this.bar.balanceOf(alice)).valueOf(), '100');\n  });",
            "file": "SushiBar.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/screencast/235-fork-sushiswap/test"
        },
        {
            "name": "should not allow withraw more than what you have",
            "suites": [],
            "updatePoint": {
                "line": 45,
                "column": 54
            },
            "line": 45,
            "code": "  it('should not allow withraw more than what you have', async () => {\n    await this.sushi.approve(this.bar.address, '100', {\n      from: alice\n    });\n    await this.bar.enter('100', {\n      from: alice\n    });\n    await expectRevert(this.bar.leave('200', {\n      from: alice\n    }), 'ERC20: burn amount exceeds balance');\n  });",
            "file": "SushiBar.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/screencast/235-fork-sushiswap/test"
        },
        {
            "name": "should work with more than one participant",
            "suites": [],
            "updatePoint": {
                "line": 56,
                "column": 48
            },
            "line": 56,
            "code": "  it('should work with more than one participant', async () => {\n    await this.sushi.approve(this.bar.address, '100', {\n      from: alice\n    });\n    await this.sushi.approve(this.bar.address, '100', {\n      from: bob\n    }); // Alice enters and gets 20 shares. Bob enters and gets 10 shares.\n\n    await this.bar.enter('20', {\n      from: alice\n    });\n    await this.bar.enter('10', {\n      from: bob\n    });\n    assert.equal((await this.bar.balanceOf(alice)).valueOf(), '20');\n    assert.equal((await this.bar.balanceOf(bob)).valueOf(), '10');\n    assert.equal((await this.sushi.balanceOf(this.bar.address)).valueOf(), '30'); // SushiBar get 20 more SUSHIs from an external source.\n\n    await this.sushi.transfer(this.bar.address, '20', {\n      from: carol\n    }); // Alice deposits 10 more SUSHIs. She should receive 10*30/50 = 6 shares.\n\n    await this.bar.enter('10', {\n      from: alice\n    });\n    assert.equal((await this.bar.balanceOf(alice)).valueOf(), '26');\n    assert.equal((await this.bar.balanceOf(bob)).valueOf(), '10'); // Bob withdraws 5 shares. He should receive 5*60/36 = 8 shares\n\n    await this.bar.leave('5', {\n      from: bob\n    });\n    assert.equal((await this.bar.balanceOf(alice)).valueOf(), '26');\n    assert.equal((await this.bar.balanceOf(bob)).valueOf(), '5');\n    assert.equal((await this.sushi.balanceOf(this.bar.address)).valueOf(), '52');\n    assert.equal((await this.sushi.balanceOf(alice)).valueOf(), '70');\n    assert.equal((await this.sushi.balanceOf(bob)).valueOf(), '98');\n  });",
            "file": "SushiBar.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/screencast/235-fork-sushiswap/test"
        },
        {
            "name": "should make SUSHIs successfully",
            "suites": [],
            "updatePoint": {
                "line": 37,
                "column": 37
            },
            "line": 37,
            "code": "  it('should make SUSHIs successfully', async () => {\n    await this.factory.setFeeTo(this.maker.address, {\n      from: alice\n    });\n    await this.weth.transfer(this.sushiWETH.address, '10000000', {\n      from: minter\n    });\n    await this.sushi.transfer(this.sushiWETH.address, '10000000', {\n      from: minter\n    });\n    await this.sushiWETH.mint(minter);\n    await this.weth.transfer(this.wethToken1.address, '10000000', {\n      from: minter\n    });\n    await this.token1.transfer(this.wethToken1.address, '10000000', {\n      from: minter\n    });\n    await this.wethToken1.mint(minter);\n    await this.weth.transfer(this.wethToken2.address, '10000000', {\n      from: minter\n    });\n    await this.token2.transfer(this.wethToken2.address, '10000000', {\n      from: minter\n    });\n    await this.wethToken2.mint(minter);\n    await this.token1.transfer(this.token1Token2.address, '10000000', {\n      from: minter\n    });\n    await this.token2.transfer(this.token1Token2.address, '10000000', {\n      from: minter\n    });\n    await this.token1Token2.mint(minter); // Fake some revenue\n\n    await this.token1.transfer(this.token1Token2.address, '100000', {\n      from: minter\n    });\n    await this.token2.transfer(this.token1Token2.address, '100000', {\n      from: minter\n    });\n    await this.token1Token2.sync();\n    await this.token1.transfer(this.token1Token2.address, '10000000', {\n      from: minter\n    });\n    await this.token2.transfer(this.token1Token2.address, '10000000', {\n      from: minter\n    });\n    await this.token1Token2.mint(minter); // Maker should have the LP now\n\n    assert.equal((await this.token1Token2.balanceOf(this.maker.address)).valueOf(), '16528'); // After calling convert, bar should have SUSHI value at ~1/6 of revenue\n\n    await this.maker.convert(this.token1.address, this.token2.address);\n    assert.equal((await this.sushi.balanceOf(bar)).valueOf(), '32965');\n    assert.equal((await this.token1Token2.balanceOf(this.maker.address)).valueOf(), '0'); // Should also work for SUSHI-ETH pair\n\n    await this.sushi.transfer(this.sushiWETH.address, '100000', {\n      from: minter\n    });\n    await this.weth.transfer(this.sushiWETH.address, '100000', {\n      from: minter\n    });\n    await this.sushiWETH.sync();\n    await this.sushi.transfer(this.sushiWETH.address, '10000000', {\n      from: minter\n    });\n    await this.weth.transfer(this.sushiWETH.address, '10000000', {\n      from: minter\n    });\n    await this.sushiWETH.mint(minter);\n    assert.equal((await this.sushiWETH.balanceOf(this.maker.address)).valueOf(), '16537');\n    await this.maker.convert(this.sushi.address, this.weth.address);\n    assert.equal((await this.sushi.balanceOf(bar)).valueOf(), '66249');\n    assert.equal((await this.sushiWETH.balanceOf(this.maker.address)).valueOf(), '0');\n  });",
            "file": "SushiMaker.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/screencast/235-fork-sushiswap/test"
        },
        {
            "name": "should work properly",
            "suites": [],
            "updatePoint": {
                "line": 29,
                "column": 26
            },
            "line": 29,
            "code": "  it('should work properly', async () => {\n    await this.sushi.approve(this.rest.address, '1000', {\n      from: alice\n    });\n    await this.sushi.approve(this.rest.address, '1000', {\n      from: bob\n    }); // Alice enters and gets 20 shares. Bob enters and gets 10 shares.\n\n    await this.rest.enter('200', {\n      from: alice\n    });\n    await this.rest.enter('100', {\n      from: bob\n    });\n    assert.equal((await this.rest.userInfo(alice)).amount.valueOf(), '200');\n    assert.equal((await this.rest.userInfo(bob)).amount.valueOf(), '100');\n    assert.equal((await this.rest.userInfo(alice)).share.valueOf(), '199');\n    assert.equal((await this.rest.userInfo(bob)).share.valueOf(), '99'); // SushiBar get 200 more SUSHIs from an external source.\n\n    await this.sushi.transfer(this.rest.address, '200', {\n      from: carol\n    }); // Pending rewards should be correct\n\n    await this.rest.cleanup();\n    assert.equal((await this.rest.getPendingReward(alice)).valueOf(), '133');\n    assert.equal((await this.rest.getPendingReward(bob)).valueOf(), '66'); // Advance 1000 blocks.\n\n    for (let i = 0; i < 1000; ++i) {\n      await time.advanceBlock();\n    } // Alice deposits 200 more SUSHIs. But it's worth 10% less\n\n\n    await this.rest.enter('200', {\n      from: alice\n    });\n    assert.equal((await this.sushi.balanceOf(alice)).valueOf(), '733');\n    assert.equal((await this.sushi.balanceOf(bob)).valueOf(), '900');\n    assert.equal((await this.rest.userInfo(alice)).amount.valueOf(), '400');\n    assert.equal((await this.rest.userInfo(bob)).amount.valueOf(), '100');\n    assert.equal((await this.rest.userInfo(alice)).share.valueOf(), '378');\n    assert.equal((await this.rest.userInfo(bob)).share.valueOf(), '99');\n    assert.equal((await this.rest.getPendingReward(alice)).valueOf(), '0');\n    assert.equal((await this.rest.getPendingReward(bob)).valueOf(), '66'); // SushiBar get 200 more SUSHIs from an external source.\n\n    await this.sushi.transfer(this.rest.address, '200', {\n      from: carol\n    });\n    await this.rest.cleanup();\n    assert.equal((await this.rest.getPendingReward(alice)).valueOf(), '159'); // 378/477*200\n\n    assert.equal((await this.rest.getPendingReward(bob)).valueOf(), '107'); // 66+99/477*200\n    // Alice withdraw half and Bob withdraw all.\n\n    await this.rest.leave('200', {\n      from: alice\n    });\n    await this.rest.leave('100', {\n      from: bob\n    });\n    assert.equal((await this.sushi.balanceOf(alice)).valueOf(), '1092');\n    assert.equal((await this.sushi.balanceOf(bob)).valueOf(), '1107');\n    assert.equal((await this.rest.userInfo(alice)).amount.valueOf(), '200');\n    assert.equal((await this.rest.userInfo(bob)).amount.valueOf(), '0');\n    assert.equal((await this.rest.userInfo(alice)).share.valueOf(), '189');\n    assert.equal((await this.rest.userInfo(bob)).share.valueOf(), '0');\n    assert.equal((await this.rest.getPendingReward(alice)).valueOf(), '0');\n    assert.equal((await this.rest.getPendingReward(bob)).valueOf(), '0');\n  });",
            "file": "SushiRestaurant.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/screencast/235-fork-sushiswap/test"
        },
        {
            "name": "should have correct name and symbol and decimal",
            "suites": [],
            "updatePoint": {
                "line": 13,
                "column": 53
            },
            "line": 13,
            "code": "  it('should have correct name and symbol and decimal', async () => {\n    const name = await this.sushi.name();\n    const symbol = await this.sushi.symbol();\n    const decimals = await this.sushi.decimals();\n    assert.equal(name.valueOf(), 'SushiToken');\n    assert.equal(symbol.valueOf(), 'SUSHI');\n    assert.equal(decimals.valueOf(), '18');\n  });",
            "file": "SushiToken.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/screencast/235-fork-sushiswap/test"
        },
        {
            "name": "should only allow owner to mint token",
            "suites": [],
            "updatePoint": {
                "line": 21,
                "column": 43
            },
            "line": 21,
            "code": "  it('should only allow owner to mint token', async () => {\n    await this.sushi.mint(alice, '100', {\n      from: alice\n    });\n    await this.sushi.mint(bob, '1000', {\n      from: alice\n    });\n    await expectRevert(this.sushi.mint(carol, '1000', {\n      from: bob\n    }), 'Ownable: caller is not the owner');\n    const totalSupply = await this.sushi.totalSupply();\n    const aliceBal = await this.sushi.balanceOf(alice);\n    const bobBal = await this.sushi.balanceOf(bob);\n    const carolBal = await this.sushi.balanceOf(carol);\n    assert.equal(totalSupply.valueOf(), '1100');\n    assert.equal(aliceBal.valueOf(), '100');\n    assert.equal(bobBal.valueOf(), '1000');\n    assert.equal(carolBal.valueOf(), '0');\n  });",
            "file": "SushiToken.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/screencast/235-fork-sushiswap/test"
        },
        {
            "name": "should supply token transfers properly",
            "suites": [],
            "updatePoint": {
                "line": 40,
                "column": 44
            },
            "line": 40,
            "code": "  it('should supply token transfers properly', async () => {\n    await this.sushi.mint(alice, '100', {\n      from: alice\n    });\n    await this.sushi.mint(bob, '1000', {\n      from: alice\n    });\n    await this.sushi.transfer(carol, '10', {\n      from: alice\n    });\n    await this.sushi.transfer(carol, '100', {\n      from: bob\n    });\n    const totalSupply = await this.sushi.totalSupply();\n    const aliceBal = await this.sushi.balanceOf(alice);\n    const bobBal = await this.sushi.balanceOf(bob);\n    const carolBal = await this.sushi.balanceOf(carol);\n    assert.equal(totalSupply.valueOf(), '1100');\n    assert.equal(aliceBal.valueOf(), '90');\n    assert.equal(bobBal.valueOf(), '900');\n    assert.equal(carolBal.valueOf(), '110');\n  });",
            "file": "SushiToken.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/screencast/235-fork-sushiswap/test"
        },
        {
            "name": "should fail if you try to do bad transfers",
            "suites": [],
            "updatePoint": {
                "line": 62,
                "column": 48
            },
            "line": 62,
            "code": "  it('should fail if you try to do bad transfers', async () => {\n    await this.sushi.mint(alice, '100', {\n      from: alice\n    });\n    await expectRevert(this.sushi.transfer(carol, '110', {\n      from: alice\n    }), 'ERC20: transfer amount exceeds balance');\n    await expectRevert(this.sushi.transfer(carol, '1', {\n      from: bob\n    }), 'ERC20: transfer amount exceeds balance');\n  });",
            "file": "SushiToken.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/screencast/235-fork-sushiswap/test"
        },
        {
            "name": "should not allow non-owner to do operation",
            "suites": [],
            "updatePoint": {
                "line": 30,
                "column": 48
            },
            "line": 30,
            "code": "  it('should not allow non-owner to do operation', async () => {\n    await this.sushi.transferOwnership(this.timelock.address, {\n      from: alice\n    });\n    await expectRevert(this.sushi.transferOwnership(carol, {\n      from: alice\n    }), 'Ownable: caller is not the owner');\n    await expectRevert(this.sushi.transferOwnership(carol, {\n      from: bob\n    }), 'Ownable: caller is not the owner');\n    await expectRevert(this.timelock.queueTransaction(this.sushi.address, '0', 'transferOwnership(address)', encodeParameters(['address'], [carol]), (await time.latest()).add(time.duration.days(4)), {\n      from: alice\n    }), 'Timelock::queueTransaction: Call must come from admin.');\n  });",
            "file": "Timelock.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/screencast/235-fork-sushiswap/test"
        },
        {
            "name": "should do the timelock thing",
            "suites": [],
            "updatePoint": {
                "line": 44,
                "column": 34
            },
            "line": 44,
            "code": "  it('should do the timelock thing', async () => {\n    await this.sushi.transferOwnership(this.timelock.address, {\n      from: alice\n    });\n    const eta = (await time.latest()).add(time.duration.days(4));\n    await this.timelock.queueTransaction(this.sushi.address, '0', 'transferOwnership(address)', encodeParameters(['address'], [carol]), eta, {\n      from: bob\n    });\n    await time.increase(time.duration.days(1));\n    await expectRevert(this.timelock.executeTransaction(this.sushi.address, '0', 'transferOwnership(address)', encodeParameters(['address'], [carol]), eta, {\n      from: bob\n    }), \"Timelock::executeTransaction: Transaction hasn't surpassed time lock.\");\n    await time.increase(time.duration.days(4));\n    await this.timelock.executeTransaction(this.sushi.address, '0', 'transferOwnership(address)', encodeParameters(['address'], [carol]), eta, {\n      from: bob\n    });\n    assert.equal((await this.sushi.owner()).valueOf(), carol);\n  });",
            "file": "Timelock.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/screencast/235-fork-sushiswap/test"
        },
        {
            "name": "should also work with MasterChef",
            "suites": [],
            "updatePoint": {
                "line": 62,
                "column": 38
            },
            "line": 62,
            "code": "  it('should also work with MasterChef', async () => {\n    this.lp1 = await MockERC20.new('LPToken', 'LP', '10000000000', {\n      from: minter\n    });\n    this.lp2 = await MockERC20.new('LPToken', 'LP', '10000000000', {\n      from: minter\n    });\n    this.chef = await MasterChef.new(this.sushi.address, dev, '1000', '0', '1000', {\n      from: alice\n    });\n    await this.sushi.transferOwnership(this.chef.address, {\n      from: alice\n    });\n    await this.chef.add('100', this.lp1.address, true);\n    await this.chef.transferOwnership(this.timelock.address, {\n      from: alice\n    });\n    const eta = (await time.latest()).add(time.duration.days(4));\n    await this.timelock.queueTransaction(this.chef.address, '0', 'set(uint256,uint256,bool)', encodeParameters(['uint256', 'uint256', 'bool'], ['0', '200', false]), eta, {\n      from: bob\n    });\n    await this.timelock.queueTransaction(this.chef.address, '0', 'add(uint256,address,bool)', encodeParameters(['uint256', 'address', 'bool'], ['100', this.lp2.address, false]), eta, {\n      from: bob\n    });\n    await time.increase(time.duration.days(4));\n    await this.timelock.executeTransaction(this.chef.address, '0', 'set(uint256,uint256,bool)', encodeParameters(['uint256', 'uint256', 'bool'], ['0', '200', false]), eta, {\n      from: bob\n    });\n    await this.timelock.executeTransaction(this.chef.address, '0', 'add(uint256,address,bool)', encodeParameters(['uint256', 'address', 'bool'], ['100', this.lp2.address, false]), eta, {\n      from: bob\n    });\n    assert.equal((await this.chef.poolInfo('0')).valueOf().allocPoint, '200');\n    assert.equal((await this.chef.totalAllocPoint()).valueOf(), '300');\n    assert.equal((await this.chef.poolLength()).valueOf(), '2');\n  });",
            "file": "Timelock.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/screencast/235-fork-sushiswap/test"
        },
        {
            "name": "should work",
            "suites": [],
            "updatePoint": {
                "line": 24,
                "column": 17
            },
            "line": 24,
            "code": "  it('should work', async () => {\n    this.sushi = await SushiToken.new({\n      from: alice\n    });\n    await this.sushi.delegate(dev, {\n      from: dev\n    });\n    this.chef = await MasterChef.new(this.sushi.address, dev, '100', '0', '0', {\n      from: alice\n    });\n    await this.sushi.transferOwnership(this.chef.address, {\n      from: alice\n    });\n    this.lp = await MockERC20.new('LPToken', 'LP', '10000000000', {\n      from: minter\n    });\n    this.lp2 = await MockERC20.new('LPToken2', 'LP2', '10000000000', {\n      from: minter\n    });\n    await this.chef.add('100', this.lp.address, true, {\n      from: alice\n    });\n    await this.lp.approve(this.chef.address, '1000', {\n      from: minter\n    });\n    await this.chef.deposit(0, '100', {\n      from: minter\n    }); // Perform another deposit to make sure some SUSHIs are minted in that 1 block.\n\n    await this.chef.deposit(0, '100', {\n      from: minter\n    });\n    assert.equal((await this.sushi.totalSupply()).valueOf(), '110');\n    assert.equal((await this.sushi.balanceOf(minter)).valueOf(), '100');\n    assert.equal((await this.sushi.balanceOf(dev)).valueOf(), '10'); // Transfer ownership to timelock contract\n\n    this.timelock = await Timelock.new(alice, time.duration.days(2), {\n      from: alice\n    });\n    this.gov = await GovernorAlpha.new(this.timelock.address, this.sushi.address, alice, {\n      from: alice\n    });\n    await this.timelock.setPendingAdmin(this.gov.address, {\n      from: alice\n    });\n    await this.gov.__acceptAdmin({\n      from: alice\n    });\n    await this.chef.transferOwnership(this.timelock.address, {\n      from: alice\n    });\n    await expectRevert(this.chef.add('100', this.lp2.address, true, {\n      from: alice\n    }), 'Ownable: caller is not the owner');\n    await expectRevert(this.gov.propose([this.chef.address], ['0'], ['add(uint256,address,bool)'], [encodeParameters(['uint256', 'address', 'bool'], ['100', this.lp2.address, true])], 'Add LP2', {\n      from: alice\n    }), 'GovernorAlpha::propose: proposer votes below proposal threshold');\n    await this.gov.propose([this.chef.address], ['0'], ['add(uint256,address,bool)'], [encodeParameters(['uint256', 'address', 'bool'], ['100', this.lp2.address, true])], 'Add LP2', {\n      from: dev\n    });\n    await time.advanceBlock();\n    await this.gov.castVote('1', true, {\n      from: dev\n    });\n    await expectRevert(this.gov.queue('1'), \"GovernorAlpha::queue: proposal can only be queued if it is succeeded\");\n    console.log(\"Advancing 17280 blocks. Will take a while...\");\n\n    for (let i = 0; i < 17280; ++i) {\n      await time.advanceBlock();\n    }\n\n    await this.gov.queue('1');\n    await expectRevert(this.gov.execute('1'), \"Timelock::executeTransaction: Transaction hasn't surpassed time lock.\");\n    await time.increase(time.duration.days(3));\n    await this.gov.execute('1');\n    assert.equal((await this.chef.poolLength()).valueOf(), '2');\n  });",
            "file": "ZGovernor.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/screencast/235-fork-sushiswap/test"
        },
        {
            "name": "should work",
            "suites": [],
            "updatePoint": {
                "line": 15,
                "column": 17
            },
            "line": 15,
            "code": "  it('should work', async () => {\n    //Deploy dai and nft tokens\n    const dai = await DAI.new();\n    const nft = await NFT.new('My awesome NFT', 'NFT');\n    await nft.mint(admin, 1);\n    await Promise.all([dai.mint(buyer1, DAI_AMOUNT), dai.mint(buyer2, DAI_AMOUNT), dai.mint(buyer3, DAI_AMOUNT), dai.mint(buyer4, DAI_AMOUNT)]); //Deploy fungible NFT & start ICO\n\n    const rft = await RFT.new('My Awesome Fungible NFT', 'FNFT', nft.address, 1, 1, web3.utils.toWei('100000'), dai.address);\n    await nft.approve(rft.address, 1);\n    await rft.startIco(); //Invest in ICO\n\n    await dai.approve(rft.address, DAI_AMOUNT, {\n      from: buyer1\n    });\n    await rft.buyShare(SHARE_AMOUNT, {\n      from: buyer1\n    });\n    await dai.approve(rft.address, DAI_AMOUNT, {\n      from: buyer2\n    });\n    await rft.buyShare(SHARE_AMOUNT, {\n      from: buyer2\n    });\n    await dai.approve(rft.address, DAI_AMOUNT, {\n      from: buyer3\n    });\n    await rft.buyShare(SHARE_AMOUNT, {\n      from: buyer3\n    });\n    await dai.approve(rft.address, DAI_AMOUNT, {\n      from: buyer4\n    });\n    await rft.buyShare(SHARE_AMOUNT, {\n      from: buyer4\n    }); //End ICO\n\n    await time.increase(7 * 86400 + 1);\n    await rft.withdrawIcoProfits(); //Check balances\n\n    const balanceShareBuyer1 = await rft.balanceOf(buyer1);\n    const balanceShareBuyer2 = await rft.balanceOf(buyer2);\n    const balanceShareBuyer3 = await rft.balanceOf(buyer3);\n    const balanceShareBuyer4 = await rft.balanceOf(buyer4);\n    assert(balanceShareBuyer1.toString() === SHARE_AMOUNT);\n    assert(balanceShareBuyer2.toString() === SHARE_AMOUNT);\n    assert(balanceShareBuyer3.toString() === SHARE_AMOUNT);\n    assert(balanceShareBuyer4.toString() === SHARE_AMOUNT);\n    const balanceAdminDAI = await dai.balanceOf(admin);\n    assert(balanceAdminDAI.toString() === web3.utils.toWei('100000'));\n  });",
            "file": "RFT.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/screencast/241-re-fungible-tokens/test"
        },
        {
            "name": "Should set the right owner",
            "suites": [
                "Token contract",
                "Deployment"
            ],
            "updatePoint": {
                "line": 13,
                "column": 34
            },
            "line": 13,
            "code": "    it('Should set the right owner', async function () {\n      expect(await token.owner()).to.equal(owner.address);\n    });",
            "file": "Token.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/screencast/282-hardhat-tutorial/test"
        },
        {
            "name": "Should assign the total supply of tokens to the owner",
            "suites": [
                "Token contract",
                "Deployment"
            ],
            "updatePoint": {
                "line": 16,
                "column": 61
            },
            "line": 16,
            "code": "    it('Should assign the total supply of tokens to the owner', async () => {\n      const ownerBalance = await token.balanceOf(owner.address);\n      expect(await token.totalSupply()).to.equal(ownerBalance);\n    });",
            "file": "Token.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/screencast/282-hardhat-tutorial/test"
        },
        {
            "name": "Should transfer tokens between accounts",
            "suites": [
                "Token contract",
                "Transactions"
            ],
            "updatePoint": {
                "line": 22,
                "column": 47
            },
            "line": 22,
            "code": "    it('Should transfer tokens between accounts', async () => {\n      await token.transfer(addr1.address, 50);\n      const addr1Balance = await token.balanceOf(addr1.address);\n      expect(addr1Balance).to.equal(50);\n      await token.connect(addr1).transfer(addr2.address, 50);\n      const addr2Balance = await token.balanceOf(addr2.address);\n      expect(addr2Balance).to.equal(50);\n    });",
            "file": "Token.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/screencast/282-hardhat-tutorial/test"
        },
        {
            "name": "Should fail if sender doesn’t have enough tokens",
            "suites": [
                "Token contract",
                "Transactions"
            ],
            "updatePoint": {
                "line": 30,
                "column": 56
            },
            "line": 30,
            "code": "    it('Should fail if sender doesn’t have enough tokens', async () => {\n      const initialOwnerBalance = await token.balanceOf(owner.address);\n      await expect(token.connect(addr1).transfer(owner.address, 1)).to.be.revertedWith('Not enough tokens');\n      expect(await token.balanceOf(owner.address)).to.equal(initialOwnerBalance);\n    });",
            "file": "Token.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/screencast/282-hardhat-tutorial/test"
        },
        {
            "name": "Should update balances after transfers",
            "suites": [
                "Token contract",
                "Transactions"
            ],
            "updatePoint": {
                "line": 35,
                "column": 46
            },
            "line": 35,
            "code": "    it('Should update balances after transfers', async () => {\n      const initialOwnerBalance = await token.balanceOf(owner.address);\n      await token.transfer(addr1.address, 100);\n      await token.transfer(addr2.address, 50);\n      const finalOwnerBalance = await token.balanceOf(owner.address);\n      expect(finalOwnerBalance).to.equal(initialOwnerBalance - 150);\n      const addr1Balance = await token.balanceOf(addr1.address);\n      expect(addr1Balance).to.equal(100);\n      const addr2Balance = await token.balanceOf(addr2.address);\n      expect(addr2Balance).to.equal(50);\n    });",
            "file": "Token.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/screencast/282-hardhat-tutorial/test"
        },
        {
            "name": "Should return the new greeting once it's changed",
            "suites": [
                "Greeter"
            ],
            "updatePoint": {
                "line": 6,
                "column": 54
            },
            "line": 6,
            "code": "  it(\"Should return the new greeting once it's changed\", async function () {\n    const Greeter = await ethers.getContractFactory(\"Greeter\");\n    const greeter = await Greeter.deploy(\"Hello, world!\");\n    await greeter.deployed();\n    expect(await greeter.greet()).to.equal(\"Hello, world!\");\n    await greeter.setGreeting(\"Hola, mundo!\");\n    expect(await greeter.greet()).to.equal(\"Hola, mundo!\");\n  });",
            "file": "sample-test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/screencast/326-nft-flashloan/test"
        },
        {
            "name": "Should lock and unlock token & ether",
            "suites": [],
            "updatePoint": {
                "line": 18,
                "column": 42
            },
            "line": 18,
            "code": "  it('Should lock and unlock token & ether', async () => {\n    let contractEtherBalance, contractTokenBakance, ownerTokenBalance;\n    const etherAmount = web3.utils.toWei('1');\n    const tokenAmount = web3.utils.toWei('1');\n    await web3.eth.sendTransaction({\n      from: owner,\n      to: timelock.address,\n      value: etherAmount\n    });\n    await token.approve(timelock.address, tokenAmount);\n    await timelock.deposit(token.address, tokenAmount);\n    contractEtherBalance = await web3.eth.getBalance(timelock.address);\n    contractTokenBalance = await token.balanceOf(timelock.address);\n    assert(contractEtherBalance.toString() === etherAmount);\n    assert(contractTokenBalance.toString() === tokenAmount);\n    await expectRevert(timelock.withdraw(token.address, tokenAmount, {\n      from: otherAddress\n    }), 'only owner');\n    await expectRevert(timelock.withdraw(token.address, tokenAmount, {\n      from: owner\n    }), 'too early');\n    await time.increase(time.duration.years(1));\n    await timelock.withdraw(constants.ZERO_ADDRESS, etherAmount, {\n      from: owner\n    });\n    await timelock.withdraw(token.address, tokenAmount, {\n      from: owner\n    });\n    contractEtherBalance = await web3.eth.getBalance(timelock.address);\n    contractTokenBalance = await token.balanceOf(timelock.address);\n    ownerEtherBalance = await web3.eth.getBalance(owner);\n    ownerTokenBalance = await token.balanceOf(owner);\n    assert(contractEtherBalance.toString() === '0');\n    assert(contractTokenBalance.toString() === '0');\n    assert(ownerTokenBalance.toString() === tokenAmount);\n    assert(ownerEtherBalance.toString().length === 20);\n    assert(ownerEtherBalance.toString().slice(0, 2) === '99');\n  });",
            "file": "timelock.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/screencast/354-timelock-contract/test"
        },
        {
            "name": "Should update data",
            "suites": [],
            "updatePoint": {
                "line": 4,
                "column": 24
            },
            "line": 4,
            "code": "  it('Should update data', async () => {\n    const storage = await SimpleStorage.new();\n    await storage.updateData(10);\n    const data = await storage.readData();\n    assert(data.toString() === '10');\n  });",
            "file": "simpleStorage.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/screencast/360-truffle-tutorial-beginner/test"
        },
        {
            "name": "should execute flashloan",
            "suites": [],
            "updatePoint": {
                "line": 12,
                "column": 30
            },
            "line": 12,
            "code": "  it('should execute flashloan', async () => {\n    const token = await Token.new();\n    const borrower = await GoodBorrower.new();\n    const totalSupplyBefore = await token.totalSupply();\n    await borrower.startFlashloan(token.address, web3.utils.toWei('1000'));\n    const totalSupplyAfter = await token.totalSupply();\n    assert(totalSupplyBefore.eq(totalSupplyAfter));\n  });",
            "file": "token.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/screencast/369-token-flashloan/test"
        },
        {
            "name": "should NOT execute flashloan",
            "suites": [],
            "updatePoint": {
                "line": 20,
                "column": 34
            },
            "line": 20,
            "code": "  it('should NOT execute flashloan', async () => {\n    const token = await Token.new();\n    const borrower = await BadBorrower.new();\n    await expectRevert(borrower.startFlashloan(token.address, web3.utils.toWei('1000')), 'burn amount exceeds balance');\n  });",
            "file": "token.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/screencast/369-token-flashloan/test"
        },
        {
            "name": "should upgrade",
            "suites": [],
            "updatePoint": {
                "line": 8,
                "column": 20
            },
            "line": 8,
            "code": "  it('should upgrade', async () => {\n    const v1 = await V1.new();\n    await v1.transfer(recipient1, 100000);\n    await v1.transfer(recipient2, 100000);\n    const v2 = await V2.new();\n    const migrator = await Migrator.new(v1.address, v2.address);\n    await v2.transfer(migrator.address, 1000000);\n    await migrator.migrate(); //from: admin, that's the default address\n\n    await migrator.migrate({\n      from: recipient1\n    });\n    await migrator.migrate({\n      from: recipient2\n    });\n    const balanceAdmin = await v2.balanceOf(admin);\n    const balanceRecipient1 = await v2.balanceOf(recipient1);\n    const balanceRecipient2 = await v2.balanceOf(recipient2);\n    assert(balanceAdmin.toNumber() === 800000);\n    assert(balanceRecipient1.toNumber() === 100000);\n    assert(balanceRecipient2.toNumber() === 100000);\n  });",
            "file": "upgrade.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/screencast/372-smart-contract-upgrade/method3/test"
        },
        {
            "name": "should create a plan",
            "suites": [],
            "updatePoint": {
                "line": 24,
                "column": 26
            },
            "line": 24,
            "code": "  it('should create a plan', async () => {\n    await payment.createPlan(token.address, 100, THIRTY_DAYS, {\n      from: merchant\n    });\n    const plan1 = await payment.plans(0);\n    assert(plan1.token === token.address);\n    assert(plan1.amount.toString() === '100');\n    assert(plan1.frequency.toString() === THIRTY_DAYS.toString());\n    await payment.createPlan(token.address, 200, SIXTY_DAYS, {\n      from: merchant\n    });\n    const plan2 = await payment.plans(1);\n    assert(plan2.token === token.address);\n    assert(plan2.amount.toString() === '200');\n    assert(plan2.frequency.toString() === SIXTY_DAYS.toString());\n  });",
            "file": "payment.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/screencast/375-crypto-subscription/test"
        },
        {
            "name": "should NOT create a plan",
            "suites": [],
            "updatePoint": {
                "line": 40,
                "column": 30
            },
            "line": 40,
            "code": "  it('should NOT create a plan', async () => {\n    await expectRevert(payment.createPlan(constants.ZERO_ADDRESS, 100, THIRTY_DAYS, {\n      from: merchant\n    }), 'address cannot be null address');\n    await expectRevert(payment.createPlan(token.address, 0, THIRTY_DAYS, {\n      from: merchant\n    }), 'amount needs to be > 0');\n    await expectRevert(payment.createPlan(token.address, 100, 0, {\n      from: merchant\n    }), 'frequency needs to be > 0');\n  });",
            "file": "payment.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/screencast/375-crypto-subscription/test"
        },
        {
            "name": "should create a subscription",
            "suites": [],
            "updatePoint": {
                "line": 51,
                "column": 34
            },
            "line": 51,
            "code": "  it('should create a subscription', async () => {\n    await payment.createPlan(token.address, 100, THIRTY_DAYS, {\n      from: merchant\n    });\n    await payment.subscribe(0, {\n      from: subscriber\n    });\n    const block = await web3.eth.getBlock('latest');\n    const subscription = await payment.subscriptions(subscriber, 0);\n    assert(subscription.subscriber === subscriber);\n    assert(subscription.start.toString() === block.timestamp.toString());\n    assert(subscription.nextPayment.toString() === (block.timestamp + 86400 * 30).toString());\n  });",
            "file": "payment.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/screencast/375-crypto-subscription/test"
        },
        {
            "name": "should NOT create a subscription",
            "suites": [],
            "updatePoint": {
                "line": 64,
                "column": 38
            },
            "line": 64,
            "code": "  it('should NOT create a subscription', async () => {\n    await expectRevert(payment.subscribe(0, {\n      from: subscriber\n    }), 'this plan does not exist');\n  });",
            "file": "payment.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/screencast/375-crypto-subscription/test"
        },
        {
            "name": "should subscribe and pay",
            "suites": [],
            "updatePoint": {
                "line": 69,
                "column": 30
            },
            "line": 69,
            "code": "  it('should subscribe and pay', async () => {\n    let balanceMerchant, balanceSubscriber;\n    await payment.createPlan(token.address, 100, THIRTY_DAYS, {\n      from: merchant\n    });\n    await payment.subscribe(0, {\n      from: subscriber\n    });\n    balanceMerchant = await token.balanceOf(merchant);\n    balanceSubscriber = await token.balanceOf(subscriber);\n    assert(balanceMerchant.toString() === '100');\n    assert(balanceSubscriber.toString() === '900');\n    await time.increase(THIRTY_DAYS + 1);\n    await payment.pay(subscriber, 0);\n    balanceMerchant = await token.balanceOf(merchant);\n    balanceSubscriber = await token.balanceOf(subscriber);\n    assert(balanceMerchant.toString() === '200');\n    assert(balanceSubscriber.toString() === '800');\n    await time.increase(THIRTY_DAYS + 1);\n    await payment.pay(subscriber, 0);\n    balanceMerchant = await token.balanceOf(merchant);\n    balanceSubscriber = await token.balanceOf(subscriber);\n    assert(balanceMerchant.toString() === '300');\n    assert(balanceSubscriber.toString() === '700');\n  });",
            "file": "payment.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/screencast/375-crypto-subscription/test"
        },
        {
            "name": "should subscribe and NOT pay",
            "suites": [],
            "updatePoint": {
                "line": 94,
                "column": 34
            },
            "line": 94,
            "code": "  it('should subscribe and NOT pay', async () => {\n    let balanceMerchant, balanceSubscriber;\n    await payment.createPlan(token.address, 100, THIRTY_DAYS, {\n      from: merchant\n    });\n    await payment.subscribe(0, {\n      from: subscriber\n    });\n    await time.increase(THIRTY_DAYS - 1);\n    await expectRevert(payment.pay(subscriber, 0), 'not due yet');\n  });",
            "file": "payment.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/screencast/375-crypto-subscription/test"
        },
        {
            "name": "should cancel subscription",
            "suites": [],
            "updatePoint": {
                "line": 105,
                "column": 32
            },
            "line": 105,
            "code": "  it('should cancel subscription', async () => {\n    await payment.createPlan(token.address, 100, THIRTY_DAYS, {\n      from: merchant\n    });\n    await payment.subscribe(0, {\n      from: subscriber\n    });\n    await payment.cancel(0, {\n      from: subscriber\n    });\n    const subscription = await payment.subscriptions(subscriber, 0);\n    assert(subscription.subscriber === constants.ZERO_ADDRESS);\n  });",
            "file": "payment.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/screencast/375-crypto-subscription/test"
        },
        {
            "name": "should NOT cancel subscription",
            "suites": [],
            "updatePoint": {
                "line": 118,
                "column": 36
            },
            "line": 118,
            "code": "  it('should NOT cancel subscription', async () => {\n    await expectRevert(payment.cancel(0, {\n      from: subscriber\n    }), 'this subscription does not exist');\n  });",
            "file": "payment.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/screencast/375-crypto-subscription/test"
        },
        {
            "name": "Should transfer NFT and pay royalties",
            "suites": [
                "NFT"
            ],
            "updatePoint": {
                "line": 20,
                "column": 43
            },
            "line": 20,
            "code": "  it('Should transfer NFT and pay royalties', async () => {\n    let ownerNFT, balanceSender, balanceArtist;\n    nft = nft.connect(artist);\n    await nft.transferFrom(artist.address, owner1.address, 0);\n    ownerNFT = await nft.ownerOf(0);\n    expect(ownerNFT).to.equal(owner1.address);\n    await token.connect(owner1).approve(nft.address, txFee);\n    await nft.connect(owner1).transferFrom(owner1.address, owner2.address, 0);\n    ownerNFT = await nft.ownerOf(0);\n    balanceSender = await token.balanceOf(owner1.address);\n    balanceArtist = await token.balanceOf(artist.address);\n    expect(ownerNFT).to.equal(owner2.address);\n    expect(balanceSender.toString()).to.equal(ethers.utils.parseUnits('499', 'ether'));\n    expect(balanceArtist.toString()).to.equal(ethers.utils.parseUnits('1', 'ether'));\n  });",
            "file": "nft.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/screencast/379-nft-royalties/test"
        },
        {
            "name": "Should not pay royalties if in excludedList",
            "suites": [
                "NFT"
            ],
            "updatePoint": {
                "line": 35,
                "column": 49
            },
            "line": 35,
            "code": "  it('Should not pay royalties if in excludedList', async () => {\n    let balanceSender, balanceArtist;\n    nft = nft.connect(artist);\n    await nft.transferFrom(artist.address, owner1.address, 0);\n    balanceArtist = await token.balanceOf(artist.address);\n    expect(balanceArtist).to.equal(0);\n    await nft.setExcluded(owner1.address, true);\n    nft = nft.connect(owner1);\n    await nft.transferFrom(owner1.address, owner2.address, 0);\n    balanceSender = await token.balanceOf(owner1.address);\n    balanceArtist = await token.balanceOf(artist.address);\n    expect(balanceSender).to.equal(ethers.utils.parseUnits('500', 'ether'));\n    expect(balanceArtist).to.equal(0);\n  });",
            "file": "nft.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/screencast/379-nft-royalties/test"
        },
        {
            "name": "Should not transfer NFT if not enough token for royalties",
            "suites": [
                "NFT"
            ],
            "updatePoint": {
                "line": 49,
                "column": 63
            },
            "line": 49,
            "code": "  it('Should not transfer NFT if not enough token for royalties', async () => {\n    nft = nft.connect(artist);\n    await nft.transferFrom(artist.address, owner1.address, 0);\n    token = token.connect(owner1);\n    await token.transfer(owner2.address, ethers.utils.parseUnits('500'));\n    await token.approve(nft.address, txFee);\n    nft = nft.connect(owner1);\n    await expect(nft.transferFrom(owner1.address, owner2.address, 0)).to.be.revertedWith('ERC20: transfer amount exceeds balance');\n  });",
            "file": "nft.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/screencast/379-nft-royalties/test"
        },
        {
            "name": "Should add/remove from excludedList",
            "suites": [
                "NFT"
            ],
            "updatePoint": {
                "line": 58,
                "column": 41
            },
            "line": 58,
            "code": "  it('Should add/remove from excludedList', async () => {\n    nft = nft.connect(artist);\n    await nft.setExcluded(owner1.address, true);\n    expect(await nft.excludedList(owner1.address)).to.equal(true);\n    await nft.setExcluded(owner1.address, false);\n    expect(await nft.excludedList(owner1.address)).to.equal(false);\n    nft = nft.connect(owner2);\n    await expect(nft.setExcluded(owner2.address, true)).to.be.revertedWith('artist only');\n  });",
            "file": "nft.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/screencast/379-nft-royalties/test"
        },
        {
            "name": "should give rewards",
            "suites": [],
            "updatePoint": {
                "line": 19,
                "column": 25
            },
            "line": 19,
            "code": "  it('should give rewards', async () => {\n    const {\n      timestamp\n    } = await web3.eth.getBlock('latest');\n    const start = timestamp;\n    const end = timestamp + 10;\n    await token.setRewards(start, end, 2);\n    await token.transfer(investor, 500);\n    await time.increase(10);\n    await token.claim(investor, {\n      from: investor\n    });\n    const rewardBalance = await reward.balanceOf(investor); //I fixed the below assertion by increasing the number of tokens transferred to the investor\n    //Before I put a very low number that made the reward amount less than 1, which was rounded down to 0 by a division in the smart contract\n    //This edge case happened because I used very small amounts of tokens for testing (i.e way less than 1 token)\n    //But in real tokens, amounts in wei will be much greater, this edge case will probably never happen and even small investors will always get some rewards\n\n    assert(rewardBalance.toString() === '10'); //10 * 2 * 500 / 1000 = 10\n  });",
            "file": "token.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/screencast/391-rewards-token/test"
        },
        {
            "name": "should airdrop",
            "suites": [],
            "updatePoint": {
                "line": 13,
                "column": 20
            },
            "line": 13,
            "code": "  it('should airdrop', async () => {\n    await airdrop.addAirdrops([{\n      nft: nft.address,\n      id: 0\n    }, {\n      nft: nft.address,\n      id: 1\n    }, {\n      nft: nft.address,\n      id: 2\n    }]);\n    await airdrop.addRecipients([recipient1, recipient2, recipient3]);\n    await airdrop.claim({\n      from: recipient1\n    });\n    await airdrop.claim({\n      from: recipient2\n    });\n    await airdrop.claim({\n      from: recipient3\n    });\n    const owner1 = await nft.ownerOf(0);\n    const owner2 = await nft.ownerOf(1);\n    const owner3 = await nft.ownerOf(2);\n    assert(owner1 === recipient1);\n    assert(owner2 === recipient2);\n    assert(owner3 === recipient3);\n  });",
            "file": "NFTAirdrop.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/screencast/394-nft-airdrop/test"
        },
        {
            "name": "should read the 2 token balances",
            "suites": [],
            "updatePoint": {
                "line": 23,
                "column": 38
            },
            "line": 23,
            "code": "  it('should read the 2 token balances', async () => {\n    const multi = new MultiCall(provider);\n    const callParams = [{\n      target: token1.address,\n      function: 'balanceOf',\n      args: [admin]\n    }, {\n      target: token2.address,\n      function: 'balanceOf',\n      args: [admin]\n    }];\n    const tokenDatas = await multi.multiCall(abi, callParams);\n    assert(tokenDatas[1][0].toString() === '1000');\n    assert(tokenDatas[1][1].toString() === '1000');\n  });",
            "file": "multicall.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/screencast/397-multicall/test"
        },
        {
            "name": "should NOT create auction",
            "suites": [],
            "updatePoint": {
                "line": 29,
                "column": 31
            },
            "line": 29,
            "code": "  it('should NOT create auction', async () => {\n    await expectRevert(market.createAuction(nft.address, 1, web3.utils.toWei('1'), CATEGORIES.GAME, {\n      from: seller\n    }), 'auction already exist');\n  });",
            "file": "market.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/screencast/future-nfts-marketplace/test"
        },
        {
            "name": "should NOT create bid",
            "suites": [],
            "updatePoint": {
                "line": 34,
                "column": 27
            },
            "line": 34,
            "code": "  it('should NOT create bid', async () => {\n    await expectRevert(market.createBid(nft.address, 2, {\n      from: buyer1,\n      value: web3.utils.toWei('2')\n    }), 'auction does not exist');\n    await expectRevert(market.createBid(nft.address, 1, {\n      from: buyer1,\n      value: 100\n    }), 'bid amount is too low');\n    await time.increase(7 * 86400 + 1);\n    await expectRevert(market.createBid(nft.address, 1, {\n      from: buyer1,\n      value: web3.utils.toWei('2')\n    }), 'auction is finished');\n  });",
            "file": "market.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/screencast/future-nfts-marketplace/test"
        },
        {
            "name": "should create bid",
            "suites": [],
            "updatePoint": {
                "line": 49,
                "column": 23
            },
            "line": 49,
            "code": "  it('should create bid', async () => {\n    const balanceBuyer1Before = await web3.eth.getBalance(buyer1);\n    const balanceBuyer2Before = await web3.eth.getBalance(buyer2);\n    await market.createBid(nft.address, 1, {\n      from: buyer1,\n      value: web3.utils.toWei('2')\n    });\n    await market.createBid(nft.address, 1, {\n      from: buyer2,\n      value: web3.utils.toWei('3')\n    });\n    const balanceBuyer1 = await web3.eth.getBalance(buyer1);\n    const balanceBuyer2 = await web3.eth.getBalance(buyer2); //trick to test a balance difference,\n    //taking into consideration gas fees\n\n    assert(balanceBuyer1.slice(0, 3) === '999'); //2 ether returned\n\n    assert(balanceBuyer2.slice(0, 3) === '969'); //no ether returned\n  });",
            "file": "market.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/screencast/future-nfts-marketplace/test"
        },
        {
            "name": "should do a full auction - auction failed",
            "suites": [],
            "updatePoint": {
                "line": 68,
                "column": 47
            },
            "line": 68,
            "code": "  it('should do a full auction - auction failed', async () => {\n    await time.increase(7 * 86400 + 1);\n    await market.closeBid(nft.address, 1);\n    const tokenOwner = await nft.ownerOf(1);\n    assert(tokenOwner === seller);\n  });",
            "file": "market.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/screencast/future-nfts-marketplace/test"
        },
        {
            "name": "should do a full auction - auction succeeded",
            "suites": [],
            "updatePoint": {
                "line": 74,
                "column": 50
            },
            "line": 74,
            "code": "  it('should do a full auction - auction succeeded', async () => {\n    await market.createBid(nft.address, 1, {\n      from: buyer1,\n      value: web3.utils.toWei('2')\n    });\n    await market.createBid(nft.address, 1, {\n      from: buyer2,\n      value: web3.utils.toWei('3')\n    });\n    await market.createBid(nft.address, 1, {\n      from: buyer3,\n      value: web3.utils.toWei('4')\n    });\n    await time.increase(7 * 86400 + 1);\n    const balance1 = web3.utils.toBN(await web3.eth.getBalance(seller));\n    await market.closeBid(nft.address, 1);\n    const tokenOwner = await nft.ownerOf(1);\n    const balance2 = web3.utils.toBN(await web3.eth.getBalance(seller));\n    assert(tokenOwner === buyer3);\n    assert(balance2.sub(balance1).toString() === web3.utils.toWei('4'));\n  });",
            "file": "market.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/screencast/future-nfts-marketplace/test"
        },
        {
            "name": "Adds tasks correctly",
            "suites": [
                "Todo methods"
            ],
            "updatePoint": {
                "line": 23,
                "column": 26
            },
            "line": 23,
            "code": "  it('Adds tasks correctly', async () => {\n    let taskIds = await todo.methods.getTaskIds().call();\n    assert.equal(taskIds.length, 0);\n    await todo.methods.createTask('eat the blocks', 'Julien').send({\n      from: accounts[0],\n      gas: '1000000'\n    });\n    taskIds = await todo.methods.getTaskIds().call();\n    assert.equal(taskIds.length, 1);\n    await todo.methods.createTask('eat the blocks again', 'Julien').send({\n      from: accounts[0],\n      gas: '1000000'\n    });\n    taskIds = await todo.methods.getTaskIds().call();\n    assert.equal(taskIds.length, 2);\n  });",
            "file": "Todo.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/todolist/step_metamask/test"
        },
        {
            "name": "Returns tasks correctly",
            "suites": [
                "Todo methods"
            ],
            "updatePoint": {
                "line": 39,
                "column": 29
            },
            "line": 39,
            "code": "  it('Returns tasks correctly', async () => {\n    const content = 'eat the blocks';\n    const author = 'Julien';\n    await todo.methods.createTask(content, author).send({\n      from: accounts[0],\n      gas: '1000000'\n    });\n    const task = await todo.methods.getTask(1).call();\n    const actualKeys = Object.keys(task);\n    const expectedKeys = ['taskId', 'dateCreated', 'content', 'author', 'isDone', 'dateComplete'];\n\n    for (key of expectedKeys) {\n      assert(actualKeys.includes(key));\n    }\n\n    assert(actualKeys.includes('taskId'));\n    assert(actualKeys.includes('dateCreated'));\n    assert(actualKeys.includes('content'));\n    assert(actualKeys.includes('author'));\n    assert(actualKeys.includes('isDone'));\n    assert(actualKeys.includes('dateComplete'));\n    assert.equal(task.taskId, 1);\n    assert(!isNaN(task.dateCreated));\n    assert.equal(task.content, content);\n    assert.equal(task.author, author);\n    assert(!task.isDone);\n    assert(!isNaN(task.dateComplete));\n  });",
            "file": "Todo.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/todolist/step_metamask/test"
        },
        {
            "name": "Throws if task doesn't exist",
            "suites": [
                "Todo methods"
            ],
            "updatePoint": {
                "line": 67,
                "column": 34
            },
            "line": 67,
            "code": "  it(\"Throws if task doesn't exist\", async () => {\n    todo.methods.getTask(1).call().catch(assert);\n  });",
            "file": "Todo.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/todolist/step_metamask/test"
        },
        {
            "name": "Will toggle done status on and off",
            "suites": [
                "Todo methods"
            ],
            "updatePoint": {
                "line": 70,
                "column": 40
            },
            "line": 70,
            "code": "  it('Will toggle done status on and off', async () => {\n    await todo.methods.createTask('foo', 'bar').send({\n      from: accounts[0],\n      gas: '1000000'\n    });\n    await todo.methods.toggleDone(1).send({\n      from: accounts[0],\n      gas: '1000000'\n    });\n    let task = await todo.methods.getTask(1).call();\n    assert(task.isDone);\n    assert(task.dateComplete);\n    await todo.methods.toggleDone(1).send({\n      from: accounts[0],\n      gas: '1000000'\n    });\n    task = await todo.methods.getTask(1).call();\n    assert.equal(task.isDone, false);\n    assert.equal(!task.dateComplete, false);\n  });",
            "file": "Todo.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/todolist/step_metamask/test"
        },
        {
            "name": "Should airdrop",
            "suites": [],
            "updatePoint": {
                "line": 46,
                "column": 20
            },
            "line": 46,
            "code": "  it('Should airdrop', async () => {\n    const {\n      signature,\n      recipient,\n      amount\n    } = createSignature();\n    await airdrop.claimTokens(recipient, amount, signature);\n    const balance = await token.balanceOf(recipient);\n    assert(balance.eq(web3.utils.toBN(amount)));\n  });",
            "file": "airdrop.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/token/test"
        },
        {
            "name": "Should not airdrop twice for same address",
            "suites": [],
            "updatePoint": {
                "line": 56,
                "column": 47
            },
            "line": 56,
            "code": "  it('Should not airdrop twice for same address', async () => {\n    const {\n      signature,\n      recipient,\n      amount\n    } = createSignature();\n    await airdrop.claimTokens(recipient, amount, signature), await expectRevert(airdrop.claimTokens(recipient, amount, signature), 'airdrop already processed');\n  });",
            "file": "airdrop.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/token/test"
        },
        {
            "name": "Should not airdrop above airdrop limit",
            "suites": [],
            "updatePoint": {
                "line": 64,
                "column": 44
            },
            "line": 64,
            "code": "  it('Should not airdrop above airdrop limit', async () => {\n    const {\n      signature,\n      recipient,\n      amount\n    } = createSignature({\n      amount: web3.utils.toWei('100001')\n    });\n    await expectRevert(airdrop.claimTokens(recipient, amount, signature), 'airdropped 100% of the tokens');\n  });",
            "file": "airdrop.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/token/test"
        },
        {
            "name": "Should not airdrop if wrong recipient",
            "suites": [],
            "updatePoint": {
                "line": 74,
                "column": 43
            },
            "line": 74,
            "code": "  it('Should not airdrop if wrong recipient', async () => {\n    const {\n      signature,\n      recipient,\n      amount\n    } = createSignature();\n    const {\n      address: wrongRecipient\n    } = web3.eth.accounts.create();\n    await expectRevert(airdrop.claimTokens(wrongRecipient, amount, signature), 'wrong signature');\n  });",
            "file": "airdrop.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/token/test"
        },
        {
            "name": "Should not airdrop if wrong amount",
            "suites": [],
            "updatePoint": {
                "line": 85,
                "column": 40
            },
            "line": 85,
            "code": "  it('Should not airdrop if wrong amount', async () => {\n    const {\n      signature,\n      recipient,\n      amount\n    } = createSignature();\n    const wrongAmount = '123';\n    await expectRevert(airdrop.claimTokens(recipient, wrongAmount, signature), 'wrong signature');\n  });",
            "file": "airdrop.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/token/test"
        },
        {
            "name": "Should not airdrop if wrong signature",
            "suites": [],
            "updatePoint": {
                "line": 94,
                "column": 43
            },
            "line": 94,
            "code": "  it('Should not airdrop if wrong signature', async () => {\n    const {\n      signature,\n      recipient,\n      amount\n    } = createSignature();\n    const wrongSignature = '0x5ddff27c8b194f7056ad9d051bfca208f430d75d44d21b62e2248ea9de18fa104c43bb0241075a1a771c9003339cf54e2279ee828278c7ad46e5ab834411154a1d';\n    await expectRevert(airdrop.claimTokens(recipient, amount, wrongSignature), 'wrong signature');\n  });",
            "file": "airdrop.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/token/test"
        },
        {
            "name": "admin should have total supply",
            "suites": [],
            "updatePoint": {
                "line": 10,
                "column": 36
            },
            "line": 10,
            "code": "  it('admin should have total supply', async () => {\n    const totalSupply = await token.totalSupply();\n    const balanceAdmin = await token.balanceOf(admin);\n    assert(totalSupply.toString() === TOTAL_SUPPLY);\n    assert(balanceAdmin.toString() === TOTAL_SUPPLY);\n  });",
            "file": "token.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/awesome-selfhosted__awesome-selfhosted/tmp/jklepatch__eattheblocks/token/test"
        },
        {
            "name": "skipped locally",
            "suites": [],
            "updatePoint": {
                "line": 5,
                "column": 23
            },
            "line": 5,
            "code": "  test('skipped locally', () => {});",
            "file": "fixtures/boostrap-sass/index.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/facebook__create-react-app/test"
        },
        {
            "name": "builds in development",
            "suites": [],
            "updatePoint": {
                "line": 7,
                "column": 29
            },
            "line": 7,
            "code": "  test('builds in development', async () => {\n    const {\n      fulfilled\n    } = await testSetup.scripts.start({\n      smoke: true\n    });\n    expect(fulfilled).toBe(true);\n  });",
            "file": "fixtures/boostrap-sass/index.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/facebook__create-react-app/test"
        },
        {
            "name": "builds in production",
            "suites": [],
            "updatePoint": {
                "line": 15,
                "column": 28
            },
            "line": 15,
            "code": "  test('builds in production', async () => {\n    const {\n      fulfilled\n    } = await testSetup.scripts.build();\n    expect(fulfilled).toBe(true);\n  });",
            "file": "fixtures/boostrap-sass/index.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/facebook__create-react-app/test"
        },
        {
            "name": "builds in development",
            "suites": [],
            "updatePoint": {
                "line": 3,
                "column": 27
            },
            "line": 3,
            "code": "test('builds in development', async () => {\n  const {\n    fulfilled\n  } = await testSetup.scripts.start({\n    smoke: true\n  });\n  expect(fulfilled).toBe(true);\n});",
            "file": "fixtures/builds-with-multiple-runtimes/index.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/facebook__create-react-app/test"
        },
        {
            "name": "builds in production",
            "suites": [],
            "updatePoint": {
                "line": 11,
                "column": 26
            },
            "line": 11,
            "code": "test('builds in production', async () => {\n  const {\n    fulfilled\n  } = await testSetup.scripts.build();\n  expect(fulfilled).toBe(true);\n});",
            "file": "fixtures/builds-with-multiple-runtimes/index.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/facebook__create-react-app/test"
        },
        {
            "name": "skipped locally",
            "suites": [],
            "updatePoint": {
                "line": 5,
                "column": 23
            },
            "line": 5,
            "code": "  test('skipped locally', () => {});",
            "file": "fixtures/global-scss-asset-resolution/index.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/facebook__create-react-app/test"
        },
        {
            "name": "builds in development",
            "suites": [],
            "updatePoint": {
                "line": 7,
                "column": 29
            },
            "line": 7,
            "code": "  test('builds in development', async () => {\n    const {\n      fulfilled\n    } = await testSetup.scripts.start({\n      smoke: true\n    });\n    expect(fulfilled).toBe(true);\n  });",
            "file": "fixtures/global-scss-asset-resolution/index.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/facebook__create-react-app/test"
        },
        {
            "name": "builds in production",
            "suites": [],
            "updatePoint": {
                "line": 15,
                "column": 28
            },
            "line": 15,
            "code": "  test('builds in production', async () => {\n    const {\n      fulfilled\n    } = await testSetup.scripts.build();\n    expect(fulfilled).toBe(true);\n  });",
            "file": "fixtures/global-scss-asset-resolution/index.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/facebook__create-react-app/test"
        },
        {
            "name": "passes tests",
            "suites": [],
            "updatePoint": {
                "line": 3,
                "column": 18
            },
            "line": 3,
            "code": "test('passes tests', async () => {\n  const {\n    fulfilled\n  } = await testSetup.scripts.test({\n    jestEnvironment: 'node'\n  });\n  expect(fulfilled).toBe(true);\n});",
            "file": "fixtures/issue-5176-flow-class-properties/index.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/facebook__create-react-app/test"
        },
        {
            "name": "creates instance without",
            "suites": [],
            "updatePoint": {
                "line": 2,
                "column": 28
            },
            "line": 2,
            "code": "it('creates instance without', () => {\n  const app = new App();\n  expect(app.foo()).toBe('bar');\n});",
            "file": "fixtures/issue-5176-flow-class-properties/src/App.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/facebook__create-react-app/test"
        },
        {
            "name": "Ignores node_modules when detecting TypeScript",
            "suites": [],
            "updatePoint": {
                "line": 7,
                "column": 52
            },
            "line": 7,
            "code": "test('Ignores node_modules when detecting TypeScript', async () => {\n  // CRA build will check for TypeScript files by\n  // globbing for src/**/*.ts however this shouldn't\n  // include any node_modules directories within src.\n  // See https://github.com/facebook/create-react-app/issues/5947\n  const tsConfigPath = path.join(testSetup.testDirectory, 'tsconfig.json');\n  const tsPackagePath = [testSetup.testDirectory, 'src', 'node_modules', 'package', 'index.ts'];\n  const dtsSrcPath = [testSetup.testDirectory, 'src', 'types', 'index.d.ts'];\n  const tsSrcPath = path.join(testSetup.testDirectory, 'src', 'index.ts'); // Step 1.\n  // See if src/node_modules/package/index.ts is treated\n  // as a JS project\n\n  fs.mkdirSync(path.join(...tsPackagePath.slice(0, 2)));\n  fs.mkdirSync(path.join(...tsPackagePath.slice(0, 3)));\n  fs.mkdirSync(path.join(...tsPackagePath.slice(0, 4)));\n  fs.writeFileSync(path.join(...tsPackagePath));\n  await testSetup.scripts.build();\n  expect(fs.existsSync(tsConfigPath)).toBe(false); // Step 1b.\n  // See if src/types/index.d.ts is treated as a JS project\n\n  fs.mkdirSync(path.join(...dtsSrcPath.slice(0, 3)));\n  fs.writeFileSync(path.join(...dtsSrcPath));\n  await testSetup.scripts.build();\n  expect(fs.existsSync(tsConfigPath)).toBe(false); // Step 2.\n  // Add TS and ensure tsconfig.json is generated\n\n  fs.writeFileSync(tsSrcPath);\n  await testSetup.scripts.build();\n  expect(fs.existsSync(tsConfigPath)).toBe(true);\n});",
            "file": "fixtures/issue-5947-not-typescript/index.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/facebook__create-react-app/test"
        },
        {
            "name": "builds in development",
            "suites": [],
            "updatePoint": {
                "line": 3,
                "column": 27
            },
            "line": 3,
            "code": "test('builds in development', async () => {\n  const {\n    fulfilled\n  } = await testSetup.scripts.start({\n    smoke: true\n  });\n  expect(fulfilled).toBe(true);\n});",
            "file": "fixtures/jsconfig/index.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/facebook__create-react-app/test"
        },
        {
            "name": "builds in production",
            "suites": [],
            "updatePoint": {
                "line": 11,
                "column": 26
            },
            "line": 11,
            "code": "test('builds in production', async () => {\n  const {\n    fulfilled\n  } = await testSetup.scripts.build();\n  expect(fulfilled).toBe(true);\n});",
            "file": "fixtures/jsconfig/index.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/facebook__create-react-app/test"
        },
        {
            "name": "passes tests",
            "suites": [],
            "updatePoint": {
                "line": 17,
                "column": 18
            },
            "line": 17,
            "code": "test('passes tests', async () => {\n  const {\n    fulfilled\n  } = await testSetup.scripts.test();\n  expect(fulfilled).toBe(true);\n});",
            "file": "fixtures/jsconfig/index.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/facebook__create-react-app/test"
        },
        {
            "name": "loads modules absolutely with baseUrl",
            "suites": [],
            "updatePoint": {
                "line": 10,
                "column": 43
            },
            "line": 10,
            "code": "test('loads modules absolutely with baseUrl', () => {\n  const div = document.createElement('div');\n  return new Promise(resolve => {\n    ReactDOM.render( /*#__PURE__*/React.createElement(App, {\n      onReady: resolve\n    }), div);\n  });\n});",
            "file": "fixtures/jsconfig/src/App.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/facebook__create-react-app/test"
        },
        {
            "name": "can use mjs library in development",
            "suites": [],
            "updatePoint": {
                "line": 5,
                "column": 40
            },
            "line": 5,
            "code": "test('can use mjs library in development', async () => {\n  const {\n    port,\n    done\n  } = await testSetup.scripts.start();\n  const browser = await puppeteer.launch({\n    headless: true\n  });\n\n  try {\n    const page = await browser.newPage();\n    await page.goto(`http://localhost:${port}/`);\n    await page.waitForSelector('.mjs-gql-result', {\n      timeout: 0\n    });\n    const output = await page.evaluate(() => {\n      return Array.from(document.getElementsByClassName('mjs-gql-result')).pop().innerHTML;\n    });\n    expect(output).toMatchSnapshot();\n  } finally {\n    browser.close();\n    done();\n  }\n});",
            "file": "fixtures/mjs-support/index.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/facebook__create-react-app/test"
        },
        {
            "name": "can use mjs library in production",
            "suites": [],
            "updatePoint": {
                "line": 29,
                "column": 39
            },
            "line": 29,
            "code": "test('can use mjs library in production', async () => {\n  await testSetup.scripts.build();\n  const {\n    port,\n    done\n  } = await testSetup.scripts.serve();\n  const browser = await puppeteer.launch({\n    headless: true\n  });\n\n  try {\n    const page = await browser.newPage();\n    await page.goto(`http://localhost:${port}/`);\n    await page.waitForSelector('.mjs-gql-result', {\n      timeout: 0\n    });\n    const output = await page.evaluate(() => {\n      return Array.from(document.getElementsByClassName('mjs-gql-result')).pop().innerHTML;\n    });\n    expect(output).toMatchSnapshot();\n  } finally {\n    browser.close();\n    done();\n  }\n});",
            "file": "fixtures/mjs-support/index.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/facebook__create-react-app/test"
        },
        {
            "name": "contains a relative path in production build",
            "suites": [],
            "updatePoint": {
                "line": 9,
                "column": 50
            },
            "line": 9,
            "code": "test('contains a relative path in production build', async () => {\n  await testSetup.scripts.build();\n  const buildDir = path.join(testSetup.testDirectory, 'build');\n  const cssFile = path.join(buildDir, globby.sync('**/*.css', {\n    cwd: buildDir\n  }).pop());\n  const svgFile = path.join(buildDir, globby.sync('**/*.svg', {\n    cwd: buildDir\n  }).pop());\n  const desiredPath = /url\\((.+?)\\)/.exec(fs.readFileSync(cssFile, 'utf8')).pop();\n  expect(path.resolve(path.join(path.dirname(cssFile), desiredPath))).toBe(path.resolve(svgFile));\n});",
            "file": "fixtures/relative-paths/index.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/facebook__create-react-app/test"
        },
        {
            "name": "builds in development",
            "suites": [],
            "updatePoint": {
                "line": 3,
                "column": 27
            },
            "line": 3,
            "code": "test('builds in development', async () => {\n  const {\n    fulfilled\n  } = await testSetup.scripts.start({\n    smoke: true\n  });\n  expect(fulfilled).toBe(true);\n});",
            "file": "fixtures/typescript-advanced/index.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/facebook__create-react-app/test"
        },
        {
            "name": "builds in production",
            "suites": [],
            "updatePoint": {
                "line": 11,
                "column": 26
            },
            "line": 11,
            "code": "test('builds in production', async () => {\n  const {\n    fulfilled\n  } = await testSetup.scripts.build();\n  expect(fulfilled).toBe(true);\n});",
            "file": "fixtures/typescript-advanced/index.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/facebook__create-react-app/test"
        },
        {
            "name": "passes tests",
            "suites": [],
            "updatePoint": {
                "line": 17,
                "column": 18
            },
            "line": 17,
            "code": "test('passes tests', async () => {\n  const {\n    fulfilled\n  } = await testSetup.scripts.test({\n    jestEnvironment: 'node'\n  });\n  expect(fulfilled).toBe(true);\n});",
            "file": "fixtures/typescript-advanced/index.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/facebook__create-react-app/test"
        },
        {
            "name": "shows error overlay in browser",
            "suites": [],
            "updatePoint": {
                "line": 6,
                "column": 36
            },
            "line": 6,
            "code": "test('shows error overlay in browser', async () => {\n  const {\n    port,\n    done\n  } = await testSetup.scripts.start();\n  const browser = await puppeteer.launch({\n    headless: true\n  });\n\n  try {\n    const page = await browser.newPage();\n    await page.goto(`http://localhost:${port}/`);\n    await page.waitForSelector('iframe', {\n      timeout: 5000\n    });\n    const overlayMsg = await page.evaluate(() => {\n      const overlay = document.querySelector('iframe').contentWindow;\n      return overlay.document.body.innerHTML;\n    });\n    expect(overlayMsg).toContain(expectedErrorMsg);\n  } finally {\n    browser.close();\n    done();\n  }\n});",
            "file": "fixtures/typescript-typecheck/index.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/facebook__create-react-app/test"
        },
        {
            "name": "shows error in console (dev mode)",
            "suites": [],
            "updatePoint": {
                "line": 31,
                "column": 39
            },
            "line": 31,
            "code": "test('shows error in console (dev mode)', async () => {\n  const {\n    stderr\n  } = await testSetup.scripts.start({\n    smoke: true\n  });\n  expect(stderr).toContain(expectedErrorMsg);\n});",
            "file": "fixtures/typescript-typecheck/index.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/facebook__create-react-app/test"
        },
        {
            "name": "shows error in console (prod mode)",
            "suites": [],
            "updatePoint": {
                "line": 39,
                "column": 40
            },
            "line": 39,
            "code": "test('shows error in console (prod mode)', async () => {\n  const {\n    stderr\n  } = await testSetup.scripts.build();\n  expect(stderr).toContain(expectedErrorMsg);\n});",
            "file": "fixtures/typescript-typecheck/index.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/facebook__create-react-app/test"
        },
        {
            "name": "passes tests",
            "suites": [],
            "updatePoint": {
                "line": 3,
                "column": 18
            },
            "line": 3,
            "code": "test('passes tests', async () => {\n  const {\n    fulfilled\n  } = await testSetup.scripts.test({\n    jestEnvironment: 'node'\n  });\n  expect(fulfilled).toBe(true);\n});",
            "file": "fixtures/typescript/index.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/facebook__create-react-app/test"
        },
        {
            "name": "formats babel syntax error",
            "suites": [],
            "updatePoint": {
                "line": 7,
                "column": 32
            },
            "line": 7,
            "code": "test('formats babel syntax error', async () => {\n  fs.copySync(path.join(__dirname, 'src', 'AppBabel.js'), path.join(testSetup.testDirectory, 'src', 'App.js'));\n  const {\n    stdout,\n    stderr\n  } = await testSetup.scripts.build();\n  expect({\n    stdout,\n    stderr\n  }).toMatchSnapshot();\n});",
            "file": "fixtures/webpack-message-formatting/index.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/facebook__create-react-app/test"
        },
        {
            "name": "formats css syntax error",
            "suites": [],
            "updatePoint": {
                "line": 18,
                "column": 30
            },
            "line": 18,
            "code": "test('formats css syntax error', async () => {\n  fs.copySync(path.join(__dirname, 'src', 'AppCss.js'), path.join(testSetup.testDirectory, 'src', 'App.js'));\n  const {\n    stdout,\n    stderr\n  } = await testSetup.scripts.build();\n  expect({\n    stdout,\n    stderr\n  }).toMatchSnapshot();\n});",
            "file": "fixtures/webpack-message-formatting/index.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/facebook__create-react-app/test"
        },
        {
            "name": "formats unknown export",
            "suites": [],
            "updatePoint": {
                "line": 29,
                "column": 28
            },
            "line": 29,
            "code": "test('formats unknown export', async () => {\n  fs.copySync(path.join(__dirname, 'src', 'AppUnknownExport.js'), path.join(testSetup.testDirectory, 'src', 'App.js'));\n  const {\n    stdout,\n    stderr\n  } = await testSetup.scripts.build();\n  expect({\n    stdout,\n    stderr\n  }).toMatchSnapshot();\n});",
            "file": "fixtures/webpack-message-formatting/index.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/facebook__create-react-app/test"
        },
        {
            "name": "formats aliased unknown export",
            "suites": [],
            "updatePoint": {
                "line": 40,
                "column": 36
            },
            "line": 40,
            "code": "test('formats aliased unknown export', async () => {\n  fs.copySync(path.join(__dirname, 'src', 'AppAliasUnknownExport.js'), path.join(testSetup.testDirectory, 'src', 'App.js'));\n  const {\n    stdout,\n    stderr\n  } = await testSetup.scripts.build();\n  expect({\n    stdout,\n    stderr\n  }).toMatchSnapshot();\n});",
            "file": "fixtures/webpack-message-formatting/index.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/facebook__create-react-app/test"
        },
        {
            "name": "formats no default export",
            "suites": [],
            "updatePoint": {
                "line": 51,
                "column": 31
            },
            "line": 51,
            "code": "test('formats no default export', async () => {\n  fs.copySync(path.join(__dirname, 'src', 'AppNoDefault.js'), path.join(testSetup.testDirectory, 'src', 'App.js'));\n  const {\n    stdout,\n    stderr\n  } = await testSetup.scripts.build();\n  expect({\n    stdout,\n    stderr\n  }).toMatchSnapshot();\n});",
            "file": "fixtures/webpack-message-formatting/index.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/facebook__create-react-app/test"
        },
        {
            "name": "formats missing package",
            "suites": [],
            "updatePoint": {
                "line": 62,
                "column": 29
            },
            "line": 62,
            "code": "test('formats missing package', async () => {\n  fs.copySync(path.join(__dirname, 'src', 'AppMissingPackage.js'), path.join(testSetup.testDirectory, 'src', 'App.js'));\n  let {\n    stdout,\n    stderr\n  } = await testSetup.scripts.build();\n\n  if (process.platform === 'win32') {\n    stderr = stderr.replace('.\\\\src\\\\App.js', './src/App.js');\n  }\n\n  expect({\n    stdout,\n    stderr\n  }).toMatchSnapshot();\n});",
            "file": "fixtures/webpack-message-formatting/index.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/facebook__create-react-app/test"
        },
        {
            "name": "formats eslint warning",
            "suites": [],
            "updatePoint": {
                "line": 78,
                "column": 28
            },
            "line": 78,
            "code": "test('formats eslint warning', async () => {\n  fs.copySync(path.join(__dirname, 'src', 'AppLintWarning.js'), path.join(testSetup.testDirectory, 'src', 'App.js'));\n  let {\n    stdout,\n    stderr\n  } = await testSetup.scripts.build();\n  const sizeIndex = stdout.indexOf('File sizes after gzip');\n\n  if (sizeIndex !== -1) {\n    stdout = stdout.substring(0, sizeIndex);\n  }\n\n  expect({\n    stdout,\n    stderr\n  }).toMatchSnapshot();\n});",
            "file": "fixtures/webpack-message-formatting/index.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/facebook__create-react-app/test"
        },
        {
            "name": "formats eslint error",
            "suites": [],
            "updatePoint": {
                "line": 95,
                "column": 26
            },
            "line": 95,
            "code": "test('formats eslint error', async () => {\n  fs.copySync(path.join(__dirname, 'src', 'AppLintError.js'), path.join(testSetup.testDirectory, 'src', 'App.js'));\n  const {\n    stdout,\n    stderr\n  } = await testSetup.scripts.build();\n  expect({\n    stdout,\n    stderr\n  }).toMatchSnapshot();\n});",
            "file": "fixtures/webpack-message-formatting/index.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/facebook__create-react-app/test"
        },
        {
            "name": "helps when users tries to use sass",
            "suites": [],
            "updatePoint": {
                "line": 106,
                "column": 40
            },
            "line": 106,
            "code": "test('helps when users tries to use sass', async () => {\n  fs.copySync(path.join(__dirname, 'src', 'AppSass.js'), path.join(testSetup.testDirectory, 'src', 'App.js'));\n  const {\n    stdout,\n    stderr\n  } = await testSetup.scripts.build();\n  expect(stdout).toBeFalsy(); // TODO: Snapshots differ between Node 10/12 as the call stack log output has changed.\n\n  expect(stderr).toContain('To import Sass files, you first need to install sass.');\n});",
            "file": "fixtures/webpack-message-formatting/index.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/facebook__create-react-app/test"
        },
        {
            "name": "formats file not found error",
            "suites": [],
            "updatePoint": {
                "line": 116,
                "column": 34
            },
            "line": 116,
            "code": "test('formats file not found error', async () => {\n  fs.copySync(path.join(__dirname, 'src', 'AppUnknownFile.js'), path.join(testSetup.testDirectory, 'src', 'App.js'));\n  let {\n    stdout,\n    stderr\n  } = await testSetup.scripts.build();\n\n  if (process.platform === 'win32') {\n    stderr = stderr.replace('.\\\\src\\\\App.js', './src/App.js').replace('.\\\\src', './src');\n  }\n\n  expect({\n    stdout,\n    stderr\n  }).toMatchSnapshot();\n});",
            "file": "fixtures/webpack-message-formatting/index.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/facebook__create-react-app/test"
        },
        {
            "name": "formats case sensitive path error",
            "suites": [],
            "updatePoint": {
                "line": 132,
                "column": 39
            },
            "line": 132,
            "code": "test('formats case sensitive path error', async () => {\n  fs.copySync(path.join(__dirname, 'src', 'AppIncorrectCase.js'), path.join(testSetup.testDirectory, 'src', 'App.js'));\n  const {\n    stdout,\n    stderr\n  } = await testSetup.scripts.start({\n    smoke: true\n  });\n\n  if (process.platform === 'darwin') {\n    expect(stderr).toMatch(`Cannot find file: 'export5.js' does not match the corresponding name on disk: './src/Export5.js'.`);\n  } else {\n    expect(stderr).not.toEqual(''); // TODO: figure out how we can test this on Linux/Windows\n    // I believe getting this working requires we tap into enhanced-resolve\n    // pipeline, which is debt we don't want to take on right now.\n  }\n});",
            "file": "fixtures/webpack-message-formatting/index.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/facebook__create-react-app/test"
        },
        {
            "name": "formats out of scope error",
            "suites": [],
            "updatePoint": {
                "line": 149,
                "column": 32
            },
            "line": 149,
            "code": "test('formats out of scope error', async () => {\n  fs.copySync(path.join(__dirname, 'src', 'AppOutOfScopeImport.js'), path.join(testSetup.testDirectory, 'src', 'App.js'));\n  let {\n    stdout,\n    stderr\n  } = await testSetup.scripts.build();\n\n  if (process.platform === 'win32') {\n    stderr = stderr.replace('.\\\\src\\\\App.js', './src/App.js');\n  }\n\n  expect({\n    stdout,\n    stderr\n  }).toMatchSnapshot();\n});",
            "file": "fixtures/webpack-message-formatting/index.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/facebook__create-react-app/test"
        },
        {
            "name": "check yarn installation",
            "suites": [
                "create-react-app"
            ],
            "updatePoint": {
                "line": 58,
                "column": 29
            },
            "line": 58,
            "code": "  it('check yarn installation', async () => {\n    const {\n      exitCode\n    } = await execa('yarn', ['--version']); // Assert for exit code\n\n    expect(exitCode).toBe(0);\n  });",
            "file": "integration/create-react-app/index.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/facebook__create-react-app/test"
        },
        {
            "name": "asks to supply an argument if none supplied",
            "suites": [
                "create-react-app"
            ],
            "updatePoint": {
                "line": 65,
                "column": 49
            },
            "line": 65,
            "code": "  it('asks to supply an argument if none supplied', async () => {\n    const {\n      exitCode,\n      stderr,\n      files\n    } = await run([], {\n      reject: false\n    }); // Assertions\n\n    expect(exitCode).toBe(1);\n    expect(stderr).toContain('Please specify the project directory');\n    expect(files).toBe(null);\n  });",
            "file": "integration/create-react-app/index.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/facebook__create-react-app/test"
        },
        {
            "name": "creates a project on supplying a name as the argument",
            "suites": [
                "create-react-app"
            ],
            "updatePoint": {
                "line": 78,
                "column": 59
            },
            "line": 78,
            "code": "  it('creates a project on supplying a name as the argument', async () => {\n    const {\n      exitCode,\n      files\n    } = await run([projectName], {\n      cwd: __dirname\n    }); // Assert for exit code\n\n    expect(exitCode).toBe(0); // Assert for the generated files\n\n    expectAllFiles(files, generatedFiles);\n  });",
            "file": "integration/create-react-app/index.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/facebook__create-react-app/test"
        },
        {
            "name": "warns about conflicting files in path",
            "suites": [
                "create-react-app"
            ],
            "updatePoint": {
                "line": 90,
                "column": 43
            },
            "line": 90,
            "code": "  it('warns about conflicting files in path', async () => {\n    // Create the temporary directory\n    await mkdirp(genPath); // Create a package.json file\n\n    const pkgJson = join(genPath, 'package.json');\n    writeFileSync(pkgJson, '{ \"foo\": \"bar\" }');\n    const {\n      exitCode,\n      stdout,\n      files\n    } = await run([projectName], {\n      cwd: __dirname,\n      reject: false\n    }); // Assert for exit code\n\n    expect(exitCode).toBe(1); // Assert for the expected message\n\n    expect(stdout).toContain(`The directory ${projectName} contains files that could conflict`); // Existing file is still there\n\n    expectAllFiles(files, ['package.json']);\n  });",
            "file": "integration/create-react-app/index.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/facebook__create-react-app/test"
        },
        {
            "name": "creates a project in the current directory",
            "suites": [
                "create-react-app"
            ],
            "updatePoint": {
                "line": 111,
                "column": 48
            },
            "line": 111,
            "code": "  it('creates a project in the current directory', async () => {\n    // Create temporary directory\n    await mkdirp(genPath); // Create a project in the current directory\n\n    const {\n      exitCode,\n      files\n    } = await run(['.'], {\n      cwd: genPath\n    }); // Assert for exit code\n\n    expect(exitCode).toBe(0); // Assert for the generated files\n\n    expectAllFiles(files, generatedFiles);\n  });",
            "file": "integration/create-react-app/index.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/facebook__create-react-app/test"
        },
        {
            "name": "uses yarn as the package manager",
            "suites": [
                "create-react-app"
            ],
            "updatePoint": {
                "line": 126,
                "column": 38
            },
            "line": 126,
            "code": "  it('uses yarn as the package manager', async () => {\n    const {\n      exitCode,\n      files\n    } = await run([projectName], {\n      cwd: __dirname,\n      env: {\n        npm_config_user_agent: 'yarn'\n      }\n    }); // Assert for exit code\n\n    expect(exitCode).toBe(0); // Assert for the generated files\n\n    const generatedFilesWithYarn = generatedFiles.map(file => file === 'package-lock.json' ? 'yarn.lock' : file);\n    expectAllFiles(files, generatedFilesWithYarn);\n  });",
            "file": "integration/create-react-app/index.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/facebook__create-react-app/test"
        },
        {
            "name": "creates a project based on the typescript template",
            "suites": [
                "create-react-app"
            ],
            "updatePoint": {
                "line": 142,
                "column": 56
            },
            "line": 142,
            "code": "  it('creates a project based on the typescript template', async () => {\n    const {\n      exitCode,\n      files\n    } = await run([projectName, '--template', 'typescript'], {\n      cwd: __dirname\n    }); // Assert for exit code\n\n    expect(exitCode).toBe(0); // Assert for the generated files\n\n    expectAllFiles(files, [...generatedFiles, 'tsconfig.json']);\n  });",
            "file": "integration/create-react-app/index.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/facebook__create-react-app/test"
        },
        {
            "name": "no options gives cra-template",
            "suites": [
                "getTemplateInstallPackage"
            ],
            "updatePoint": {
                "line": 14,
                "column": 35
            },
            "line": 14,
            "code": "  it('no options gives cra-template', async () => {\n    await expect(getTemplateInstallPackage()).resolves.toBe('cra-template');\n  });",
            "file": "getTemplateInstallPackage.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/facebook__create-react-app/packages/create-react-app/__tests__"
        },
        {
            "name": "cra-template gives cra-template",
            "suites": [
                "getTemplateInstallPackage"
            ],
            "updatePoint": {
                "line": 17,
                "column": 37
            },
            "line": 17,
            "code": "  it('cra-template gives cra-template', async () => {\n    await expect(getTemplateInstallPackage('cra-template')).resolves.toBe('cra-template');\n  });",
            "file": "getTemplateInstallPackage.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/facebook__create-react-app/packages/create-react-app/__tests__"
        },
        {
            "name": "cra-template-typescript gives cra-template-typescript",
            "suites": [
                "getTemplateInstallPackage"
            ],
            "updatePoint": {
                "line": 20,
                "column": 59
            },
            "line": 20,
            "code": "  it('cra-template-typescript gives cra-template-typescript', async () => {\n    await expect(getTemplateInstallPackage('cra-template-typescript')).resolves.toBe('cra-template-typescript');\n  });",
            "file": "getTemplateInstallPackage.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/facebook__create-react-app/packages/create-react-app/__tests__"
        },
        {
            "name": "typescript gives cra-template-typescript",
            "suites": [
                "getTemplateInstallPackage"
            ],
            "updatePoint": {
                "line": 23,
                "column": 46
            },
            "line": 23,
            "code": "  it('typescript gives cra-template-typescript', async () => {\n    await expect(getTemplateInstallPackage('typescript')).resolves.toBe('cra-template-typescript');\n  });",
            "file": "getTemplateInstallPackage.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/facebook__create-react-app/packages/create-react-app/__tests__"
        },
        {
            "name": "typescript@next gives cra-template-typescript@next",
            "suites": [
                "getTemplateInstallPackage"
            ],
            "updatePoint": {
                "line": 26,
                "column": 56
            },
            "line": 26,
            "code": "  it('typescript@next gives cra-template-typescript@next', async () => {\n    await expect(getTemplateInstallPackage('typescript@next')).resolves.toBe('cra-template-typescript@next');\n  });",
            "file": "getTemplateInstallPackage.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/facebook__create-react-app/packages/create-react-app/__tests__"
        },
        {
            "name": "cra-template@next gives cra-template@next",
            "suites": [
                "getTemplateInstallPackage"
            ],
            "updatePoint": {
                "line": 29,
                "column": 47
            },
            "line": 29,
            "code": "  it('cra-template@next gives cra-template@next', async () => {\n    await expect(getTemplateInstallPackage('cra-template@next')).resolves.toBe('cra-template@next');\n  });",
            "file": "getTemplateInstallPackage.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/facebook__create-react-app/packages/create-react-app/__tests__"
        },
        {
            "name": "cra-template-typescript@next gives cra-template-typescript@next",
            "suites": [
                "getTemplateInstallPackage"
            ],
            "updatePoint": {
                "line": 32,
                "column": 69
            },
            "line": 32,
            "code": "  it('cra-template-typescript@next gives cra-template-typescript@next', async () => {\n    await expect(getTemplateInstallPackage('cra-template-typescript@next')).resolves.toBe('cra-template-typescript@next');\n  });",
            "file": "getTemplateInstallPackage.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/facebook__create-react-app/packages/create-react-app/__tests__"
        },
        {
            "name": "@iansu gives @iansu/cra-template",
            "suites": [
                "getTemplateInstallPackage"
            ],
            "updatePoint": {
                "line": 35,
                "column": 38
            },
            "line": 35,
            "code": "  it('@iansu gives @iansu/cra-template', async () => {\n    await expect(getTemplateInstallPackage('@iansu')).resolves.toBe('@iansu/cra-template');\n  });",
            "file": "getTemplateInstallPackage.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/facebook__create-react-app/packages/create-react-app/__tests__"
        },
        {
            "name": "@iansu/cra-template gives @iansu/cra-template",
            "suites": [
                "getTemplateInstallPackage"
            ],
            "updatePoint": {
                "line": 38,
                "column": 51
            },
            "line": 38,
            "code": "  it('@iansu/cra-template gives @iansu/cra-template', async () => {\n    await expect(getTemplateInstallPackage('@iansu/cra-template')).resolves.toBe('@iansu/cra-template');\n  });",
            "file": "getTemplateInstallPackage.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/facebook__create-react-app/packages/create-react-app/__tests__"
        },
        {
            "name": "@iansu/cra-template@next gives @iansu/cra-template@next",
            "suites": [
                "getTemplateInstallPackage"
            ],
            "updatePoint": {
                "line": 41,
                "column": 61
            },
            "line": 41,
            "code": "  it('@iansu/cra-template@next gives @iansu/cra-template@next', async () => {\n    await expect(getTemplateInstallPackage('@iansu/cra-template@next')).resolves.toBe('@iansu/cra-template@next');\n  });",
            "file": "getTemplateInstallPackage.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/facebook__create-react-app/packages/create-react-app/__tests__"
        },
        {
            "name": "@iansu/cra-template-typescript@next gives @iansu/cra-template-typescript@next",
            "suites": [
                "getTemplateInstallPackage"
            ],
            "updatePoint": {
                "line": 44,
                "column": 83
            },
            "line": 44,
            "code": "  it('@iansu/cra-template-typescript@next gives @iansu/cra-template-typescript@next', async () => {\n    await expect(getTemplateInstallPackage('@iansu/cra-template-typescript@next')).resolves.toBe('@iansu/cra-template-typescript@next');\n  });",
            "file": "getTemplateInstallPackage.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/facebook__create-react-app/packages/create-react-app/__tests__"
        },
        {
            "name": "http://example.com/cra-template.tar.gz gives http://example.com/cra-template.tar.gz",
            "suites": [
                "getTemplateInstallPackage"
            ],
            "updatePoint": {
                "line": 47,
                "column": 89
            },
            "line": 47,
            "code": "  it('http://example.com/cra-template.tar.gz gives http://example.com/cra-template.tar.gz', async () => {\n    await expect(getTemplateInstallPackage('http://example.com/cra-template.tar.gz')).resolves.toBe('http://example.com/cra-template.tar.gz');\n  });",
            "file": "getTemplateInstallPackage.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/facebook__create-react-app/packages/create-react-app/__tests__"
        },
        {
            "name": "normal file",
            "suites": [
                "ignore watch files regex"
            ],
            "updatePoint": {
                "line": 12,
                "column": 17
            },
            "line": 12,
            "code": "  it('normal file', () => {\n    const appSrc = '/root/src/';\n    const isIgnored = ignoredFiles(appSrc).test('/foo');\n    const isIgnoredInSrc = ignoredFiles(appSrc).test('/root/src/foo');\n    expect(isIgnored).toBe(false);\n    expect(isIgnoredInSrc).toBe(false);\n  });",
            "file": "ignoredFiles.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/facebook__create-react-app/packages/react-dev-utils/__tests__"
        },
        {
            "name": "node modules",
            "suites": [
                "ignore watch files regex"
            ],
            "updatePoint": {
                "line": 19,
                "column": 18
            },
            "line": 19,
            "code": "  it('node modules', () => {\n    const appSrc = '/root/src/';\n    const isIgnored = ignoredFiles(appSrc).test('/root/node_modules/foo');\n    expect(isIgnored).toBe(true);\n  });",
            "file": "ignoredFiles.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/facebook__create-react-app/packages/react-dev-utils/__tests__"
        },
        {
            "name": "node modules inside source directory",
            "suites": [
                "ignore watch files regex"
            ],
            "updatePoint": {
                "line": 24,
                "column": 42
            },
            "line": 24,
            "code": "  it('node modules inside source directory', () => {\n    const appSrc = '/root/src/';\n    const isIgnored = ignoredFiles(appSrc).test('/root/src/node_modules/foo');\n    const isIgnoredMoreThanOneLevel = ignoredFiles(appSrc).test('/root/src/bar/node_modules/foo');\n    expect(isIgnored).toBe(false);\n    expect(isIgnoredMoreThanOneLevel).toBe(false);\n  });",
            "file": "ignoredFiles.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/facebook__create-react-app/packages/react-dev-utils/__tests__"
        },
        {
            "name": "path contains source directory",
            "suites": [
                "ignore watch files regex"
            ],
            "updatePoint": {
                "line": 31,
                "column": 36
            },
            "line": 31,
            "code": "  it('path contains source directory', () => {\n    const appSrc = '/root/src/';\n    const isIgnored = ignoredFiles(appSrc).test('/bar/root/src/node_modules/foo');\n    expect(isIgnored).toBe(true);\n  });",
            "file": "ignoredFiles.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/facebook__create-react-app/packages/react-dev-utils/__tests__"
        },
        {
            "name": "path starts with source directory",
            "suites": [
                "ignore watch files regex"
            ],
            "updatePoint": {
                "line": 36,
                "column": 39
            },
            "line": 36,
            "code": "  it('path starts with source directory', () => {\n    const appSrc = '/root/src/';\n    const isIgnored = ignoredFiles(appSrc).test('/root/src2/node_modules/foo');\n    expect(isIgnored).toBe(true);\n  });",
            "file": "ignoredFiles.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/facebook__create-react-app/packages/react-dev-utils/__tests__"
        },
        {
            "name": "extracts last source map directive",
            "suites": [],
            "updatePoint": {
                "line": 8,
                "column": 40
            },
            "line": 8,
            "code": "test('extracts last source map directive', async () => {\n  const res = await extractSourceMapUrl(`test.js`, `//# sourceMappingURL=test.js.map\\nconsole.log('a')\\n//# sourceMappingURL=bundle.js.map`);\n  expect(res).toBe('bundle.js.map');\n});",
            "file": "extract-source-map.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/facebook__create-react-app/packages/react-error-overlay/src/__tests__"
        },
        {
            "name": "errors when no source map",
            "suites": [],
            "updatePoint": {
                "line": 12,
                "column": 31
            },
            "line": 12,
            "code": "test('errors when no source map', async () => {\n  const testFileName = 'test.js';\n  let error;\n\n  try {\n    await extractSourceMapUrl(testFileName, `console.log('hi')\\n\\nconsole.log('bye')`);\n  } catch (e) {\n    error = e;\n  }\n\n  expect(error).toBe(`Cannot find a source map directive for ${testFileName}.`);\n});",
            "file": "extract-source-map.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/facebook__create-react-app/packages/react-error-overlay/src/__tests__"
        },
        {
            "name": "finds an external source map",
            "suites": [],
            "updatePoint": {
                "line": 12,
                "column": 34
            },
            "line": 12,
            "code": "test('finds an external source map', async () => {\n  const file = fs.readFileSync(resolve(__dirname, '../../fixtures/bundle.mjs')).toString('utf8');\n  fetch.mockResponseOnce(fs.readFileSync(resolve(__dirname, '../../fixtures/bundle.mjs.map')).toString('utf8'));\n  const sm = await getSourceMap('/', file);\n  expect(sm.getOriginalPosition(26122, 21)).toEqual({\n    line: 7,\n    column: 0,\n    source: 'webpack:///packages/react-scripts/template/src/App.js'\n  });\n});",
            "file": "get-source-map.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/facebook__create-react-app/packages/react-error-overlay/src/__tests__"
        },
        {
            "name": "find an inline source map",
            "suites": [],
            "updatePoint": {
                "line": 22,
                "column": 31
            },
            "line": 22,
            "code": "test('find an inline source map', async () => {\n  const sourceName = 'test.js';\n  const file = fs.readFileSync(resolve(__dirname, '../../fixtures/inline.mjs')).toString('utf8');\n  const fileO = fs.readFileSync(resolve(__dirname, '../../fixtures/inline.es6.mjs')).toString('utf8');\n  const sm = await getSourceMap('/', file);\n  expect(sm.getSources()).toEqual([sourceName]);\n  expect(sm.getSource(sourceName)).toBe(fileO);\n  expect(sm.getGeneratedPosition(sourceName, 5, 10)).toEqual({\n    line: 10,\n    column: 8\n  });\n});",
            "file": "get-source-map.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/facebook__create-react-app/packages/react-error-overlay/src/__tests__"
        },
        {
            "name": "error on a source map with unsupported encoding",
            "suites": [],
            "updatePoint": {
                "line": 34,
                "column": 53
            },
            "line": 34,
            "code": "test('error on a source map with unsupported encoding', async () => {\n  expect.assertions(2);\n  const file = fs.readFileSync(resolve(__dirname, '../../fixtures/junk-inline.mjs')).toString('utf8');\n  let error;\n\n  try {\n    await getSourceMap('/', file);\n  } catch (e) {\n    error = e;\n  }\n\n  expect(error instanceof Error).toBe(true);\n  expect(error.message).toBe('Sorry, non-base64 inline source-map encoding is not supported.');\n});",
            "file": "get-source-map.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/facebook__create-react-app/packages/react-error-overlay/src/__tests__"
        },
        {
            "name": "should return lines around from a string",
            "suites": [],
            "updatePoint": {
                "line": 9,
                "column": 46
            },
            "line": 9,
            "code": "test('should return lines around from a string', () => {\n  expect(getLinesAround(4, 2, arr)).toMatchSnapshot();\n});",
            "file": "lines-around.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/facebook__create-react-app/packages/react-error-overlay/src/__tests__"
        },
        {
            "name": "should return lines around from an array",
            "suites": [],
            "updatePoint": {
                "line": 12,
                "column": 46
            },
            "line": 12,
            "code": "test('should return lines around from an array', () => {\n  expect(getLinesAround(4, 2, arr.join('\\n'))).toMatchSnapshot();\n});",
            "file": "lines-around.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/facebook__create-react-app/packages/react-error-overlay/src/__tests__"
        },
        {
            "name": "basic error; 0 context",
            "suites": [],
            "updatePoint": {
                "line": 11,
                "column": 28
            },
            "line": 11,
            "code": "test('basic error; 0 context', async () => {\n  expect.assertions(1);\n  const error = 'TypeError: document.body.missing is not a function\\n    at App.componentDidMount (http://localhost:3000/static/js/bundle.js:26122:21)\\n    at http://localhost:3000/static/js/bundle.js:30091:25\\n    at measureLifeCyclePerf (http://localhost:3000/static/js/bundle.js:29901:12)\\n    at http://localhost:3000/static/js/bundle.js:30090:11\\n    at CallbackQueue.notifyAll (http://localhost:3000/static/js/bundle.js:13256:22)\\n    at ReactReconcileTransaction.close (http://localhost:3000/static/js/bundle.js:35124:26)\\n    at ReactReconcileTransaction.closeAll (http://localhost:3000/static/js/bundle.js:7390:25)\\n    at ReactReconcileTransaction.perform (http://localhost:3000/static/js/bundle.js:7337:16)\\n    at batchedMountComponentIntoNode (http://localhost:3000/static/js/bundle.js:14204:15)\\n    at ReactDefaultBatchingStrategyTransaction.perform (http://localhost:3000/static/js/bundle.js:7324:20)\\n    at Object.batchedUpdates (http://localhost:3000/static/js/bundle.js:33900:26)\\n    at Object.batchedUpdates (http://localhost:3000/static/js/bundle.js:2181:27)\\n    at Object._renderNewRootComponent (http://localhost:3000/static/js/bundle.js:14398:18)\\n    at Object._renderSubtreeIntoContainer (http://localhost:3000/static/js/bundle.js:14479:32)\\n    at Object.render (http://localhost:3000/static/js/bundle.js:14500:23)\\n    at Object.friendlySyntaxErrorLabel (http://localhost:3000/static/js/bundle.js:17287:20)\\n    at __webpack_require__ (http://localhost:3000/static/js/bundle.js:660:30)\\n    at fn (http://localhost:3000/static/js/bundle.js:84:20)\\n    at Object.<anonymous> (http://localhost:3000/static/js/bundle.js:41219:18)\\n    at __webpack_require__ (http://localhost:3000/static/js/bundle.js:660:30)\\n    at validateFormat (http://localhost:3000/static/js/bundle.js:709:39)\\n    at http://localhost:3000/static/js/bundle.js:712:10';\n  fetch.mockResponseOnce(fs.readFileSync(resolve(__dirname, '../../fixtures/bundle.mjs')).toString('utf8'));\n  fetch.mockResponseOnce(fs.readFileSync(resolve(__dirname, '../../fixtures/bundle.mjs.map')).toString('utf8'));\n  const frames = await map(parse(error), 0);\n  expect(frames).toEqual(JSON.parse(fs.readFileSync(resolve(__dirname, '../../fixtures/bundle.json')).toString('utf8')));\n});",
            "file": "mapper.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/facebook__create-react-app/packages/react-error-overlay/src/__tests__"
        },
        {
            "name": "default context (3)",
            "suites": [],
            "updatePoint": {
                "line": 19,
                "column": 25
            },
            "line": 19,
            "code": "test('default context (3)', async () => {\n  expect.assertions(1);\n  const error = 'TypeError: document.body.missing is not a function\\n    at App.componentDidMount (http://localhost:3000/static/js/bundle.js:26122:21)';\n  fetch.mockResponseOnce(fs.readFileSync(resolve(__dirname, '../../fixtures/bundle.mjs')).toString('utf8'));\n  fetch.mockResponseOnce(fs.readFileSync(resolve(__dirname, '../../fixtures/bundle.mjs.map')).toString('utf8'));\n  const frames = await map(parse(error));\n  expect(frames).toEqual(JSON.parse(fs.readFileSync(resolve(__dirname, '../../fixtures/bundle-default.json')).toString('utf8')));\n});",
            "file": "mapper.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/facebook__create-react-app/packages/react-error-overlay/src/__tests__"
        },
        {
            "name": "bad comes back same",
            "suites": [],
            "updatePoint": {
                "line": 27,
                "column": 25
            },
            "line": 27,
            "code": "test('bad comes back same', async () => {\n  expect.assertions(2);\n  const error = 'TypeError: document.body.missing is not a function\\n    at App.componentDidMount (A:1:2)';\n  const orig = parse(error);\n  expect(orig).toEqual([{\n    _originalColumnNumber: null,\n    _originalFileName: null,\n    _originalFunctionName: null,\n    _originalLineNumber: null,\n    _originalScriptCode: null,\n    _scriptCode: null,\n    columnNumber: 2,\n    fileName: 'A',\n    functionName: 'App.componentDidMount',\n    lineNumber: 1\n  }]);\n  const frames = await map(orig);\n  expect(frames).toEqual(orig);\n});",
            "file": "mapper.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/facebook__create-react-app/packages/react-error-overlay/src/__tests__"
        },
        {
            "name": "stack with eval",
            "suites": [],
            "updatePoint": {
                "line": 8,
                "column": 21
            },
            "line": 8,
            "code": "test('stack with eval', () => {\n  expect(parse(`TypeError: window[f] is not a function\n    at e (file:///Users/joe/Documents/Development/OSS/stack-frame/index.html:25:18)\n    at eval (eval at c (file:///Users/joe/Documents/Development/OSS/stack-frame/index.html:12:9), <anonymous>:1:1)\n    at a (file:///Users/joe/Documents/Development/OSS/stack-frame/index.html:8:9)\n    at file:///Users/joe/Documents/Development/OSS/stack-frame/index.html:32:7`)).toMatchSnapshot();\n});",
            "file": "parser/chrome.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/facebook__create-react-app/packages/react-error-overlay/src/__tests__"
        },
        {
            "name": "eval 1",
            "suites": [],
            "updatePoint": {
                "line": 8,
                "column": 12
            },
            "line": 8,
            "code": "test('eval 1', () => {\n  expect(parse(`test1@file:///C:/example.html line 7 > eval line 1 > eval:1:1\ntest2@file:///C:/example.html line 7 > eval:1:1\ntest3@file:///C:/example.html:7:6`.split('\\n'))).toMatchSnapshot();\n});",
            "file": "parser/firefox.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/facebook__create-react-app/packages/react-error-overlay/src/__tests__"
        },
        {
            "name": "eval 2",
            "suites": [],
            "updatePoint": {
                "line": 13,
                "column": 12
            },
            "line": 13,
            "code": "test('eval 2', () => {\n  expect(parse({\n    stack: `anonymous@file:///C:/example.html line 7 > Function:1:1\n@file:///C:/example.html:7:6`\n  })).toMatchSnapshot();\n});",
            "file": "parser/firefox.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/facebook__create-react-app/packages/react-error-overlay/src/__tests__"
        },
        {
            "name": "stack with eval",
            "suites": [],
            "updatePoint": {
                "line": 19,
                "column": 21
            },
            "line": 19,
            "code": "test('stack with eval', () => {\n  expect(parse(`e@file:///Users/joe/Documents/Development/OSS/stack-frame/index.html:25:9\n@file:///Users/joe/Documents/Development/OSS/stack-frame/index.html line 17 > eval:1:1\na@file:///Users/joe/Documents/Development/OSS/stack-frame/index.html:8:9\n@file:///Users/joe/Documents/Development/OSS/stack-frame/index.html:32:7`)).toMatchSnapshot();\n});",
            "file": "parser/firefox.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/facebook__create-react-app/packages/react-error-overlay/src/__tests__"
        },
        {
            "name": "v14 to v29",
            "suites": [],
            "updatePoint": {
                "line": 25,
                "column": 16
            },
            "line": 25,
            "code": "test('v14 to v29', () => {\n  expect(parse(`trace@file:///C:/example.html:9\nb@file:///C:/example.html:16\na@file:///C:/example.html:19\n@file:///C:/example.html:21`)).toMatchSnapshot();\n});",
            "file": "parser/firefox.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/facebook__create-react-app/packages/react-error-overlay/src/__tests__"
        },
        {
            "name": "v30+",
            "suites": [],
            "updatePoint": {
                "line": 31,
                "column": 10
            },
            "line": 31,
            "code": "test('v30+', () => {\n  expect(parse(`trace@file:///C:/example.html:9:17\nb@file:///C:/example.html:16:13\na@file:///C:/example.html:19:13\n@file:///C:/example.html:21:9`)).toMatchSnapshot();\n});",
            "file": "parser/firefox.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/facebook__create-react-app/packages/react-error-overlay/src/__tests__"
        },
        {
            "name": "throws on null",
            "suites": [],
            "updatePoint": {
                "line": 8,
                "column": 20
            },
            "line": 8,
            "code": "test('throws on null', () => {\n  let error;\n\n  try {\n    parse(null);\n  } catch (e) {\n    error = e;\n  }\n\n  expect(error instanceof Error).toBe(true);\n  expect(error.message).toBe('You cannot pass a null object.');\n});",
            "file": "parser/generic.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/facebook__create-react-app/packages/react-error-overlay/src/__tests__"
        },
        {
            "name": "throws on unparsable",
            "suites": [],
            "updatePoint": {
                "line": 20,
                "column": 26
            },
            "line": 20,
            "code": "test('throws on unparsable', () => {\n  let error;\n\n  try {\n    parse({});\n  } catch (e) {\n    error = e;\n  }\n\n  expect(error instanceof Error).toBe(true);\n  expect(error.message).toBe('The error you provided does not contain a stack trace.');\n});",
            "file": "parser/generic.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/facebook__create-react-app/packages/react-error-overlay/src/__tests__"
        },
        {
            "name": "15.y.z",
            "suites": [],
            "updatePoint": {
                "line": 8,
                "column": 12
            },
            "line": 8,
            "code": "test('15.y.z', () => {\n  expect(parse(`Warning: Each child in array should have a unique \"key\" prop. Check render method of \\`FileA\\`.\n     in div (at FileA.js:9)\n     in FileA (at App.js:9)\n     in div (at App.js:8)\n     in App (at index.js:7)`)).toMatchSnapshot();\n});",
            "file": "parser/react.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/facebook__create-react-app/packages/react-error-overlay/src/__tests__"
        },
        {
            "name": "stack with eval",
            "suites": [],
            "updatePoint": {
                "line": 8,
                "column": 21
            },
            "line": 8,
            "code": "test('stack with eval', () => {\n  expect(parse(`e@file:///Users/joe/Documents/Development/OSS/stack-frame/index.html:25:18\neval code\neval@[native code]\na@file:///Users/joe/Documents/Development/OSS/stack-frame/index.html:8:10\nglobal code@file:///Users/joe/Documents/Development/OSS/stack-frame/index.html:32:8`)).toMatchSnapshot();\n});",
            "file": "parser/safari.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/facebook__create-react-app/packages/react-error-overlay/src/__tests__"
        },
        {
            "name": "script line shape",
            "suites": [],
            "updatePoint": {
                "line": 8,
                "column": 23
            },
            "line": 8,
            "code": "test('script line shape', () => {\n  expect(new ScriptLine(5, 'foobar', true)).toMatchSnapshot();\n});",
            "file": "script-lines.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/facebook__create-react-app/packages/react-error-overlay/src/__tests__"
        },
        {
            "name": "script line to provide default highlight",
            "suites": [],
            "updatePoint": {
                "line": 11,
                "column": 46
            },
            "line": 11,
            "code": "test('script line to provide default highlight', () => {\n  expect(new ScriptLine(5, 'foobar')).toMatchSnapshot();\n});",
            "file": "script-lines.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/facebook__create-react-app/packages/react-error-overlay/src/__tests__"
        },
        {
            "name": "proper empty shape",
            "suites": [],
            "updatePoint": {
                "line": 8,
                "column": 24
            },
            "line": 8,
            "code": "test('proper empty shape', () => {\n  const empty = new StackFrame();\n  expect(empty).toMatchSnapshot();\n  expect(empty.getFunctionName()).toBe('(anonymous function)');\n  expect(empty.getSource()).toBe('');\n  expect(empty.toString()).toBe('(anonymous function)');\n});",
            "file": "stack-frame.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/facebook__create-react-app/packages/react-error-overlay/src/__tests__"
        },
        {
            "name": "proper full shape",
            "suites": [],
            "updatePoint": {
                "line": 15,
                "column": 23
            },
            "line": 15,
            "code": "test('proper full shape', () => {\n  const empty = new StackFrame('a', 'b.js', 13, 37, undefined, 'apple', 'test.js', 37, 13);\n  expect(empty).toMatchSnapshot();\n  expect(empty.getFunctionName()).toBe('a');\n  expect(empty.getSource()).toBe('b.js:13:37');\n  expect(empty.toString()).toBe('a (b.js:13:37)');\n});",
            "file": "stack-frame.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/facebook__create-react-app/packages/react-error-overlay/src/__tests__"
        },
        {
            "name": "basic warning",
            "suites": [],
            "updatePoint": {
                "line": 11,
                "column": 19
            },
            "line": 11,
            "code": "test('basic warning', async () => {\n  expect.assertions(2);\n  const error = `Warning: Each child in an array or iterator should have a unique \"key\" prop. Check the render method of \\`B\\`. See https://fb.me/react-warning-keys for more information.\n    in div (at B.js:8)\n    in B (at A.js:6)\n    in A (at App.js:8)\n    in div (at App.js:10)\n    in App (at index.js:6)`;\n  fetch.mockResponseOnce(fs.readFileSync(resolve(__dirname, '../../fixtures/bundle_u.mjs')).toString('utf8'));\n  fetch.mockResponseOnce(fs.readFileSync(resolve(__dirname, '../../fixtures/bundle_u.mjs.map')).toString('utf8'));\n  const frames = await unmap('/static/js/bundle.js', parse(error), 0);\n  const expected = JSON.parse(fs.readFileSync(resolve(__dirname, '../../fixtures/bundle2.json')).toString('utf8'));\n  expect(frames).toEqual(expected);\n  fetch.mockResponseOnce(fs.readFileSync(resolve(__dirname, '../../fixtures/bundle_u.mjs')).toString('utf8'));\n  fetch.mockResponseOnce(fs.readFileSync(resolve(__dirname, '../../fixtures/bundle_u.mjs.map')).toString('utf8'));\n  expect(await unmap('/static/js/bundle.js', expected)).toEqual(expected);\n});",
            "file": "unmapper.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/facebook__create-react-app/packages/react-error-overlay/src/__tests__"
        },
        {
            "name": "default context & unfound source",
            "suites": [],
            "updatePoint": {
                "line": 28,
                "column": 38
            },
            "line": 28,
            "code": "test('default context & unfound source', async () => {\n  expect.assertions(1);\n  const error = `Warning: Each child in an array or iterator should have a unique \"key\" prop. Check the render method of \\`B\\`. See https://fb.me/react-warning-keys for more information.\n    in div (at B.js:8)\n    in unknown (at blabla.js:10)`;\n  fetch.mockResponseOnce(fs.readFileSync(resolve(__dirname, '../../fixtures/bundle_u.mjs')).toString('utf8'));\n  fetch.mockResponseOnce(fs.readFileSync(resolve(__dirname, '../../fixtures/bundle_u.mjs.map')).toString('utf8'));\n  const frames = await unmap('/static/js/bundle.js', parse(error));\n  expect(frames).toMatchSnapshot();\n});",
            "file": "unmapper.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/facebook__create-react-app/packages/react-error-overlay/src/__tests__"
        },
        {
            "name": "can wrap and unwrap handled errors",
            "suites": [
                "handled-error integration"
            ],
            "updatePoint": {
                "line": 19,
                "column": 40
            },
            "line": 19,
            "code": "  it('can wrap and unwrap handled errors', () => {\n    expect.assertions(4);\n    const wrappedA = wrapHandledError(new Error(), handledA);\n    const wrappedB = wrapHandledError(new Error(), handledB);\n    const wrappedC = wrapHandledError(new Error(), handledC);\n    const wrappedD = wrapHandledError(new Error(), handledD);\n    const unwrappedA = unwrapHandledError(wrappedA);\n    const unwrappedB = unwrapHandledError(wrappedB);\n    const unwrappedC = unwrapHandledError(wrappedC);\n    const unwrappedD = unwrapHandledError(wrappedD);\n    expect(unwrappedA).toEqual(handledA);\n    expect(unwrappedB).toEqual(handledB);\n    expect(unwrappedC).toEqual(handledC);\n    expect(unwrappedD).toEqual(handledD);\n  });",
            "file": "integration/handled-error.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/client/src/__tests__"
        },
        {
            "name": "should return an object with comment keys and count values",
            "suites": [
                "extractCSSComments"
            ],
            "updatePoint": {
                "line": 54,
                "column": 64
            },
            "line": 54,
            "code": "  it('should return an object with comment keys and count values', () => {\n    const commentCounts = {\n      'comment 1': 2,\n      'comment 2': 1\n    };\n    expect(extractCSSComments(someHTMLWithCSS)).toEqual(commentCounts);\n  });",
            "file": "utils/extract-css-comments.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/curriculum/test"
        },
        {
            "name": "should catch comments outside of declarations",
            "suites": [
                "extractCSSComments"
            ],
            "updatePoint": {
                "line": 61,
                "column": 51
            },
            "line": 61,
            "code": "  it('should catch comments outside of declarations', () => {\n    const commentCounts = {\n      'comment 1': 2,\n      'comment 2': 1\n    };\n    expect(extractCSSComments(outsideDeclarations)).toEqual(commentCounts);\n  });",
            "file": "utils/extract-css-comments.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/curriculum/test"
        },
        {
            "name": "should catch comments inside of media queries",
            "suites": [
                "extractCSSComments"
            ],
            "updatePoint": {
                "line": 68,
                "column": 51
            },
            "line": 68,
            "code": "  it('should catch comments inside of media queries', () => {\n    const commentCounts = {\n      'comment 1': 1,\n      'comment 2': 2\n    };\n    expect(extractCSSComments(mediaQuery)).toEqual(commentCounts);\n  });",
            "file": "utils/extract-css-comments.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/curriculum/test"
        },
        {
            "name": "should return an object with comment keys and count values",
            "suites": [
                "extractHTMLComments"
            ],
            "updatePoint": {
                "line": 13,
                "column": 64
            },
            "line": 13,
            "code": "  it('should return an object with comment keys and count values', () => {\n    const commentCounts = {\n      'a comment': 2,\n      'another comment': 1\n    };\n    expect(extractHTMLComments(someHTML)).toEqual(commentCounts);\n  });",
            "file": "utils/extract-html-comments.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/curriculum/test"
        },
        {
            "name": "should return an object with comment keys and count values",
            "suites": [
                "extractJSComments"
            ],
            "updatePoint": {
                "line": 17,
                "column": 64
            },
            "line": 17,
            "code": "  it('should return an object with comment keys and count values', () => {\n    const commentCounts = {\n      'single line comment': 2,\n      'a multiline comment': 1\n    };\n    expect(extractJSComments(someJS)).toEqual(commentCounts);\n  });",
            "file": "utils/extract-js-comments.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/curriculum/test"
        },
        {
            "name": "should throw an informative error if the JS is invalid",
            "suites": [
                "extractJSComments"
            ],
            "updatePoint": {
                "line": 24,
                "column": 60
            },
            "line": 24,
            "code": "  it('should throw an informative error if the JS is invalid', () => {\n    expect(() => extractJSComments(someInvalidJS)).toThrow(`extract-js-comments could not parse the code below, this challenge has invalid syntax:\n\n${someInvalidJS}\n`);\n  });",
            "file": "utils/extract-js-comments.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/curriculum/test"
        },
        {
            "name": "should return an object with comment keys and count values",
            "suites": [
                "extractJSXComments"
            ],
            "updatePoint": {
                "line": 19,
                "column": 64
            },
            "line": 19,
            "code": "  it('should return an object with comment keys and count values', () => {\n    const commentCounts = {\n      'JSX comment': 2,\n      'single line comment': 1,\n      'a multiline comment': 1\n    };\n    expect(extractJSXComments(someJSX)).toEqual(commentCounts);\n  });",
            "file": "utils/extract-jsx-comments.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/curriculum/test"
        },
        {
            "name": "should catch inline comments",
            "suites": [
                "extractScriptJSComments"
            ],
            "updatePoint": {
                "line": 52,
                "column": 34
            },
            "line": 52,
            "code": "  it('should catch inline comments', () => {\n    const commentCounts = {\n      'comment 1': 2,\n      'comment 2': 1\n    };\n    expect(extractScriptJSComments(inlineComments)).toEqual(commentCounts);\n  });",
            "file": "utils/extract-script-js-comments.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/curriculum/test"
        },
        {
            "name": "should catch multiline comments",
            "suites": [
                "extractScriptJSComments"
            ],
            "updatePoint": {
                "line": 59,
                "column": 37
            },
            "line": 59,
            "code": "  it('should catch multiline comments', () => {\n    const commentCounts = {\n      'comment 1': 2,\n      'comment 2': 1\n    };\n    expect(extractScriptJSComments(multilineComments)).toEqual(commentCounts);\n  });",
            "file": "utils/extract-script-js-comments.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/curriculum/test"
        },
        {
            "name": "should ignore comments outside script tags",
            "suites": [
                "extractScriptJSComments"
            ],
            "updatePoint": {
                "line": 66,
                "column": 48
            },
            "line": 66,
            "code": "  it('should ignore comments outside script tags', () => {\n    const commentCounts = {\n      'comment 1': 2,\n      'comment 2': 1\n    };\n    expect(extractScriptJSComments(outsideScript)).toEqual(commentCounts);\n  });",
            "file": "utils/extract-script-js-comments.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/curriculum/test"
        },
        {
            "name": "sorts challenges by superblock, block and challenge order",
            "suites": [
                "sortChallenges"
            ],
            "updatePoint": {
                "line": 187,
                "column": 63
            },
            "line": 187,
            "code": "  it('sorts challenges by superblock, block and challenge order', () => {\n    const copyOfChallenges = [...challenges];\n    shuffle(copyOfChallenges);\n    const actualChallenges = sortChallenges(copyOfChallenges);\n    expect(actualChallenges).toEqual(challenges);\n  });",
            "file": "utils/sort-challenges.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/curriculum/test"
        },
        {
            "name": "does not change the original array",
            "suites": [
                "sortChallenges"
            ],
            "updatePoint": {
                "line": 193,
                "column": 40
            },
            "line": 193,
            "code": "  it('does not change the original array', () => {\n    const copyOfChallenges = [...challenges];\n    copyOfChallenges[0] = {\n      name: 'JS - project 3 - step 4',\n      superOrder: 3,\n      order: 3,\n      challengeOrder: 4\n    };\n    const actualChallenges = sortChallenges(copyOfChallenges);\n    expect(actualChallenges[0]).not.toEqual(copyOfChallenges[0]);\n  });",
            "file": "utils/sort-challenges.test.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/curriculum/test"
        },
        {
            "name": "Should render",
            "suites": [
                "Landing page"
            ],
            "updatePoint": {
                "line": 10,
                "column": 19
            },
            "line": 10,
            "code": "  it('Should render', () => {\n    cy.visit('/');\n    cy.title().should('eq', 'Learn to Code — For Free — Coding Courses for Busy People');\n    cy.contains(selectors.callToAction, \"Get started (it's free)\");\n    cy.get(selectors.callToAction).should('have.length', 2);\n  });",
            "file": "integration/landing.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "Has visible header and sub-header",
            "suites": [
                "Landing page"
            ],
            "updatePoint": {
                "line": 16,
                "column": 39
            },
            "line": 16,
            "code": "  it('Has visible header and sub-header', () => {\n    cy.contains(selectors.heading, 'Learn to code — for free.');\n    cy.contains('Build projects.').should('be.visible');\n    cy.contains('Earn certifications.').should('be.visible');\n    cy.contains('Since 2014, more than 40,000 freeCodeCamp.org ' + 'graduates have gotten jobs at tech companies including:').should('be.visible');\n  });",
            "file": "integration/landing.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "Has 5 brand logos",
            "suites": [
                "Landing page"
            ],
            "updatePoint": {
                "line": 22,
                "column": 23
            },
            "line": 22,
            "code": "  it('Has 5 brand logos', () => {\n    cy.get('.logo-row').children().its('length').should('eq', 5);\n  });",
            "file": "integration/landing.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "Has `as seens as` section",
            "suites": [
                "Landing page"
            ],
            "updatePoint": {
                "line": 25,
                "column": 31
            },
            "line": 25,
            "code": "  it('Has `as seens as` section', () => {\n    cy.contains('Build projects.').should('be.visible');\n    cy.get('.big-heading').siblings().get('svg');\n  });",
            "file": "integration/landing.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "Has a visible large image on large viewports",
            "suites": [
                "Landing page"
            ],
            "updatePoint": {
                "line": 29,
                "column": 50
            },
            "line": 29,
            "code": "  it('Has a visible large image on large viewports', function () {\n    cy.viewport(1200, 660).get(selectors.landingPageImage).should('be.visible');\n    cy.viewport(1199, 660).get(selectors.landingPageImage).should('not.exist');\n  });",
            "file": "integration/landing.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "Has links to all the certifications",
            "suites": [
                "Landing page"
            ],
            "updatePoint": {
                "line": 33,
                "column": 41
            },
            "line": 33,
            "code": "  it('Has links to all the certifications', function () {\n    cy.get(selectors.certifications).children().its('length').should('eq', 10);\n    cy.wrap(certifications).each(cert => {\n      cy.get(selectors.certifications).contains(cert);\n    });\n  });",
            "file": "integration/landing.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "Has 3 testimonial cards",
            "suites": [
                "Landing page"
            ],
            "updatePoint": {
                "line": 39,
                "column": 29
            },
            "line": 39,
            "code": "  it('Has 3 testimonial cards', function () {\n    cy.get(selectors.testimonials).children().its('length').should('eq', 3);\n  });",
            "file": "integration/landing.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "should be possible to navigate to the next challenge/projects and previous",
            "suites": [
                "The hotkeys should work correctly"
            ],
            "updatePoint": {
                "line": 26,
                "column": 80
            },
            "line": 26,
            "code": "  it('should be possible to navigate to the next challenge/projects and previous', () => {\n    cy.visit(links.classic1);\n    cy.focused().type('{esc}');\n    cy.focused().type('n');\n    cy.url().should('include', links.classic2);\n    cy.contains(titles.classic2);\n    cy.focused().type('p');\n    cy.url().should('include', links.classic1);\n    cy.visit(links.frontEnd1);\n    cy.focused().type('{esc}').type('n');\n    cy.url().should('include', links.frontEnd2);\n    cy.contains(titles.frontEnd2);\n    cy.focused().type('p');\n    cy.url().should('include', links.frontEnd1);\n  });",
            "file": "integration/learn/challenge-hot-keys.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "should be possible to navigate to the next (and previous) video",
            "suites": [
                "The hotkeys should work correctly"
            ],
            "updatePoint": {
                "line": 41,
                "column": 69
            },
            "line": 41,
            "code": "  it('should be possible to navigate to the next (and previous) video', () => {\n    cy.visit(links.video1);\n    cy.focused().type('{esc}').type('n');\n    cy.url().should('include', links.video2);\n    cy.contains(titles.video2);\n    cy.focused().type('p');\n    cy.url().should('include', links.video1);\n  });",
            "file": "integration/learn/challenge-hot-keys.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "should be possible to navigate to the next (and previous) backend project",
            "suites": [
                "The hotkeys should work correctly"
            ],
            "updatePoint": {
                "line": 49,
                "column": 79
            },
            "line": 49,
            "code": "  it('should be possible to navigate to the next (and previous) backend project', () => {\n    cy.visit(links.backEnd1);\n    cy.focused().type('{esc}').type('n');\n    cy.url().should('include', links.backEnd2);\n    cy.contains(titles.backEnd2);\n    cy.focused().type('p');\n    cy.url().should('include', links.backEnd1);\n  });",
            "file": "integration/learn/challenge-hot-keys.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "should be possible to focus on the editor with pressing \"e\"",
            "suites": [
                "The hotkeys should work correctly"
            ],
            "updatePoint": {
                "line": 57,
                "column": 65
            },
            "line": 57,
            "code": "  it('should be possible to focus on the editor with pressing \"e\"', () => {\n    cy.visit(links.classic1);\n    cy.get(selectors.editorContainer).click();\n    cy.focused().as('editor').type('{esc}');\n    cy.get(selectors.instructions).click().type('e');\n    cy.get('@editor').should('have.focus');\n  });",
            "file": "integration/learn/challenge-hot-keys.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "should be possible to press ctrl enter to run the test",
            "suites": [
                "The hotkeys should work correctly"
            ],
            "updatePoint": {
                "line": 64,
                "column": 60
            },
            "line": 64,
            "code": "  it('should be possible to press ctrl enter to run the test', () => {\n    cy.visit(links.classic1);\n    cy.get(selectors.instructions).click().type('{ctrl}{enter}');\n    cy.get(selectors.console).contains('// running tests');\n  });",
            "file": "integration/learn/challenge-hot-keys.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "should be possible to go to navigation view by pressing escape",
            "suites": [
                "The hotkeys should work correctly"
            ],
            "updatePoint": {
                "line": 69,
                "column": 68
            },
            "line": 69,
            "code": "  it('should be possible to go to navigation view by pressing escape', () => {\n    cy.visit(links.classic1);\n    cy.get(selectors.editorContainer).click();\n    cy.focused().as('editor').type('{esc}');\n    cy.get('@editor').should('not.have.focus');\n  });",
            "file": "integration/learn/challenge-hot-keys.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "it should be possible to focus on the instructions by pressing r",
            "suites": [
                "The hotkeys should work correctly"
            ],
            "updatePoint": {
                "line": 75,
                "column": 70
            },
            "line": 75,
            "code": "  it('it should be possible to focus on the instructions by pressing r', () => {\n    cy.visit(links.classic1);\n    cy.get(selectors.editorContainer).type('{esc}');\n    cy.get(selectors.console).click().type('r');\n    cy.get(selectors.instructionsPanel).should('have.focus');\n  });",
            "file": "integration/learn/challenge-hot-keys.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "renders",
            "suites": [
                "Backend challenge"
            ],
            "updatePoint": {
                "line": 12,
                "column": 13
            },
            "line": 12,
            "code": "  it('renders', () => {\n    cy.visit(locations.index);\n    cy.title().should('eq', 'Managing Packages with NPM - How to Use package.json, the Core of Any' + ' Node.js Project or npm Package | Learn | freeCodeCamp.org');\n  });",
            "file": "integration/learn/challenges/backend.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "does not generate unhandled errors on submission",
            "suites": [
                "Backend challenge"
            ],
            "updatePoint": {
                "line": 16,
                "column": 54
            },
            "line": 16,
            "code": "  it('does not generate unhandled errors on submission', () => {\n    cy.visit(locations.index);\n    cy.get(selectors.input).type('https://example.com').type('{enter}').then(() => {\n      cy.get(selectors.defaultOutput).contains(runningOutput).contains(finishedOutput);\n      cy.contains(unhandledErrorMessage).should('not.exist');\n    });\n  });",
            "file": "integration/learn/challenges/backend.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "renders seed code without localStorage",
            "suites": [
                "Challenge with editor"
            ],
            "updatePoint": {
                "line": 10,
                "column": 44
            },
            "line": 10,
            "code": "  it('renders seed code without localStorage', () => {\n    const editorContents = `<h1>Hello</h1>`;\n    cy.get(selectors.editor).as('editor').contains(editorContents);\n    cy.get('@editor').click().focused().type(`{movetoend}<h1>Hello World</h1>`);\n    cy.reload();\n    cy.get('@editor', {\n      timeout: 10000\n    }).contains(editorContents);\n  }); // DISABLED until we update the local storage UI",
            "file": "integration/learn/challenges/code-storage.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "renders the default output text",
            "suites": [
                "Classic challenge"
            ],
            "updatePoint": {
                "line": 21,
                "column": 37
            },
            "line": 21,
            "code": "  it('renders the default output text', () => {\n    cy.title().should('eq', 'Basic HTML and HTML5: Say Hello to HTML Elements |' + ' freeCodeCamp.org');\n    cy.get(selectors.defaultOutput).contains(defaultOutput);\n  });",
            "file": "integration/learn/challenges/output.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "shows test output when the tests are run",
            "suites": [
                "Classic challenge"
            ],
            "updatePoint": {
                "line": 25,
                "column": 46
            },
            "line": 25,
            "code": "  it('shows test output when the tests are run', () => {\n    // first wait for the editor to load\n    cy.get(selectors.editor, {\n      timeout: 15000\n    });\n    cy.get(selectors.runTestsButton).click().then(() => {\n      cy.get(selectors.defaultOutput).contains(runningOutput).contains(finishedOutput);\n    });\n  });",
            "file": "integration/learn/challenges/output.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "shows test output when the tests are triggered by the keyboard",
            "suites": [
                "Classic challenge"
            ],
            "updatePoint": {
                "line": 34,
                "column": 68
            },
            "line": 34,
            "code": "  it('shows test output when the tests are triggered by the keyboard', () => {\n    // first wait for the editor to load\n    cy.get(selectors.editor, {\n      timeout: 15000\n    });\n    cy.get(selectors.hotkeys).focus().type('{ctrl}{enter}').then(() => {\n      cy.get(selectors.defaultOutput).contains(runningOutput).contains(finishedOutput);\n    });\n  });",
            "file": "integration/learn/challenges/output.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "renders the default output text",
            "suites": [
                "jQuery challenge"
            ],
            "updatePoint": {
                "line": 48,
                "column": 37
            },
            "line": 48,
            "code": "  it('renders the default output text', () => {\n    cy.title().should('eq', 'jQuery: Target HTML Elements with Selectors Using jQuery | freeCodeCamp.org');\n    cy.get(selectors.defaultOutput).contains(defaultOutput);\n  });",
            "file": "integration/learn/challenges/output.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "should not show a reference error",
            "suites": [
                "jQuery challenge"
            ],
            "updatePoint": {
                "line": 52,
                "column": 39
            },
            "line": 52,
            "code": "  it('should not show a reference error', () => {\n    cy.wait(5000);\n    cy.get(selectors.defaultOutput).should('not.contain', 'ReferenceError: $ is not defined');\n  });",
            "file": "integration/learn/challenges/output.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "should appear on the first challenges of each practice project",
            "suites": [
                "project preview"
            ],
            "updatePoint": {
                "line": 5,
                "column": 70
            },
            "line": 5,
            "code": "    it('should appear on the first challenges of each practice project', () => {\n      practiceProjectUrls.forEach(url => {\n        cy.visit(url + 'part-1');\n        cy.contains('Complete project demo.');\n        cy.get('[data-cy=\"project-preview-modal\"]').should('be.focused');\n      });\n    }); // Tests for the absence of an element are tricky, if, as is the case here,",
            "file": "integration/learn/challenges/project-preview.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "should NOT appear on the second challenges of each practice project",
            "suites": [
                "project preview"
            ],
            "updatePoint": {
                "line": 15,
                "column": 75
            },
            "line": 15,
            "code": "    it('should NOT appear on the second challenges of each practice project', () => {\n      practiceProjectUrls.forEach(url => {\n        cy.visit(url + 'part-2');\n        cy.focused().parents().should('have.class', 'react-monaco-editor-container');\n      });\n    });",
            "file": "integration/learn/challenges/project-preview.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "should NOT appear on the first challenges of legacy blocks",
            "suites": [
                "project preview"
            ],
            "updatePoint": {
                "line": 23,
                "column": 64
            },
            "line": 23,
            "code": "  it('should NOT appear on the first challenges of legacy blocks', () => {\n    legacyFirstChallengeUrls.forEach(url => {\n      cy.visit(url); // if no modals are showing, then the editor should have focus:\n\n      cy.focused().parents().should('have.class', 'react-monaco-editor-container');\n    });\n  });",
            "file": "integration/learn/challenges/project-preview.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "Should be possible to submit Python projects",
            "suites": [
                "project submission"
            ],
            "updatePoint": {
                "line": 31,
                "column": 50
            },
            "line": 31,
            "code": "  it('Should be possible to submit Python projects', () => {\n    const {\n      superBlock,\n      block,\n      challenges\n    } = pythonProjects;\n    challenges.forEach(({\n      slug\n    }) => {\n      const url = `/learn/${superBlock}/${block}/${slug}`;\n      cy.visit(url);\n      cy.get('#dynamic-front-end-form').get('#solution').type('https://replit.com/@camperbot/python-project#main.py');\n      cy.contains(\"I've completed this challenge\").click();\n      cy.contains('go to next challenge'); // clicking on 'Go to next challenge' seems to have caused flakiness, so\n      // it's commented out until we figure out why.\n      // cy.contains('Go to next challenge').click();\n      // The next two commands are to confirm that go to next challenge has\n      // moved us to the expected challenge before we loop again.\n      // cy.get('.title-text').should('include.text', nextChallengeText);\n      // cy.url().should('not.have.string', url);\n    });\n  });",
            "file": "integration/learn/challenges/projects.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "JavaScript projects can be submitted and then viewed in /settings and on the certifications",
            "suites": [
                "project submission"
            ],
            "updatePoint": {
                "line": 53,
                "column": 97
            },
            "line": 53,
            "code": "  it('JavaScript projects can be submitted and then viewed in /settings and on the certifications', {\n    browser: 'electron'\n  }, () => {\n    cy.fixture('../../config/curriculum.json').then(curriculum => {\n      const targetBlock = 'javascript-algorithms-and-data-structures-projects';\n      const javaScriptSuperBlock = Object.values(curriculum).filter(({\n        blocks\n      }) => blocks[targetBlock])[0];\n      const {\n        challenges,\n        meta\n      } = javaScriptSuperBlock.blocks[targetBlock];\n      const projectTitles = meta.challengeOrder.map(([, title]) => title);\n      const projectsInOrder = projectTitles.map(projectTitle => {\n        return challenges.find(({\n          title\n        }) => title === projectTitle);\n      }); // We need to wait for everything to finish loading and hydrating, so we\n      // use this text as a proxy for that.\n\n      const textInNextPage = projectTitles.slice(1);\n      textInNextPage.push('Claim Your Certification');\n      projectsInOrder.forEach(({\n        block,\n        superBlock,\n        dashedName,\n        solutions\n      }, i) => {\n        const url = `/learn/${superBlock}/${block}/${dashedName}`;\n        cy.visit(url);\n        solutions.forEach(files => {\n          files.forEach(({\n            contents\n          }) => {\n            cy.get(selectors.editor).as('editor');\n            cy.get('@editor').click().focused().type('{ctrl+a}{del}'); // NOTE: clipboard operations are flaky in watch mode, because\n            // the document can lose focus\n\n            cy.window().its('navigator.clipboard').invoke('writeText', contents);\n            cy.document().invoke('execCommand', 'paste');\n            cy.contains('Run the Tests').click();\n            cy.contains('Submit and go to next challenge', {\n              timeout: 8000\n            }).click();\n            cy.contains(textInNextPage[i]);\n          });\n        });\n      });\n      cy.visit('/settings');\n      projectTitles.forEach(title => {\n        cy.get(`[data-cy=\"${title}\"]`).click(); // TODO: if we write a test to check that the solution is visible\n        // before reloading, we should include that here.\n\n        cy.contains('Solution for');\n        cy.contains('Close').click();\n      }); // Claim and view solutions on certification page\n\n      cy.toggleAll();\n      cy.visit('/learn/javascript-algorithms-and-data-structures');\n      cy.contains('Claim Certification').click();\n      cy.contains('Show Certification').click();\n      projectTitles.forEach(title => {\n        cy.get(`[data-cy=\"${title} solution\"]`).click(); // TODO: if we write a test to check that the solution is visible\n        // before reloading, we should include that here.\n\n        cy.contains('Solution for');\n        cy.contains('Close').click();\n      });\n    });\n  });",
            "file": "integration/learn/challenges/projects.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "Should render",
            "suites": [
                "Certification intro page"
            ],
            "updatePoint": {
                "line": 7,
                "column": 19
            },
            "line": 7,
            "code": "  it('Should render', () => {\n    cy.contains(\"If you're looking for free coding exercises to prepare for your next job interview, we've got you covered.\").should('be.visible');\n  });",
            "file": "integration/learn/coding-interview-prep/intro-page.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "Title should not include the word \"Certification\"",
            "suites": [
                "Certification intro page"
            ],
            "updatePoint": {
                "line": 10,
                "column": 55
            },
            "line": 10,
            "code": "  it('Title should not include the word \"Certification\"', () => {\n    cy.title().should('eq', 'Coding Interview Prep | freeCodeCamp.org');\n  });",
            "file": "integration/learn/coding-interview-prep/intro-page.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "Should render on landing page",
            "suites": [
                "Footer"
            ],
            "updatePoint": {
                "line": 5,
                "column": 35
            },
            "line": 5,
            "code": "  it('Should render on landing page', () => {\n    cy.visit('/');\n    cy.get(selectors.footer).should('be.visible');\n  });",
            "file": "integration/learn/common-components/footer.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "Should render on learn page",
            "suites": [
                "Footer"
            ],
            "updatePoint": {
                "line": 9,
                "column": 33
            },
            "line": 9,
            "code": "  it('Should render on learn page', () => {\n    cy.visit('/learn');\n    cy.get(selectors.footer).should('be.visible');\n    cy.visit('/learn/');\n    cy.get(selectors.footer).should('be.visible');\n  });",
            "file": "integration/learn/common-components/footer.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "Should render on superblock page",
            "suites": [
                "Footer"
            ],
            "updatePoint": {
                "line": 15,
                "column": 38
            },
            "line": 15,
            "code": "  it('Should render on superblock page', () => {\n    cy.visit('/learn/responsive-web-design/');\n    cy.get(selectors.footer).should('be.visible');\n  });",
            "file": "integration/learn/common-components/footer.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "Should not render on challenge page",
            "suites": [
                "Footer"
            ],
            "updatePoint": {
                "line": 19,
                "column": 41
            },
            "line": 19,
            "code": "  it('Should not render on challenge page', () => {\n    cy.visit('/learn/responsive-web-design/basic-html-and-html5/say-hello-to-html-elements');\n    cy.get(selectors.footer).should('not.exist');\n  });",
            "file": "integration/learn/common-components/footer.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "should be visible",
            "suites": [
                "Help Button"
            ],
            "updatePoint": {
                "line": 2,
                "column": 23
            },
            "line": 2,
            "code": "  it('should be visible', () => {\n    cy.visit('/learn/responsive-web-design/basic-html-and-html5/say-hello-to-html-elements');\n    cy.get('#get-help-dropdown').scrollIntoView().should('be.visible');\n  });",
            "file": "integration/learn/common-components/helpButton.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "should toggle the dropdown menu",
            "suites": [
                "Help Button"
            ],
            "updatePoint": {
                "line": 6,
                "column": 37
            },
            "line": 6,
            "code": "  it('should toggle the dropdown menu', () => {\n    cy.get('#get-help-dropdown').scrollIntoView().click();\n    cy.get('ul[role=\"menu\"]').should('be.visible');\n  });",
            "file": "integration/learn/common-components/helpButton.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "should render three links when video is available",
            "suites": [
                "Help Button"
            ],
            "updatePoint": {
                "line": 10,
                "column": 55
            },
            "line": 10,
            "code": "  it('should render three links when video is available', () => {\n    cy.get('ul[role=\"menu\"]').within(() => {\n      cy.get('a').should('have.length', 3);\n      cy.get('a').eq(0).contains('Get a Hint');\n      cy.get('a').eq(1).contains('Watch a Video');\n      cy.get('a').eq(2).contains('Ask for Help');\n    });\n  });",
            "file": "integration/learn/common-components/helpButton.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "should render two links when video is not available",
            "suites": [
                "Help Button"
            ],
            "updatePoint": {
                "line": 18,
                "column": 57
            },
            "line": 18,
            "code": "  it('should render two links when video is not available', () => {\n    cy.visit('/learn/front-end-development-libraries/bootstrap/apply-the-default-bootstrap-button-style');\n    cy.get('#get-help-dropdown').scrollIntoView().click();\n    cy.get('ul[role=\"menu\"]').within(() => {\n      cy.get('a').should('have.length', 2);\n      cy.get('a').eq(0).contains('Get a Hint');\n      cy.get('a').eq(1).contains('Ask for Help');\n    });\n  });",
            "file": "integration/learn/common-components/helpButton.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "Should have a \"Sign in\" button",
            "suites": [
                "Navbar when logged out"
            ],
            "updatePoint": {
                "line": 47,
                "column": 36
            },
            "line": 47,
            "code": "  it('Should have a \"Sign in\" button', () => {\n    cy.contains(\"[data-test-label='landing-small-cta']\", 'Sign in');\n  });",
            "file": "integration/learn/common-components/navbar.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "Should render properly",
            "suites": [
                "Navbar Logged in"
            ],
            "updatePoint": {
                "line": 66,
                "column": 28
            },
            "line": 66,
            "code": "  it('Should render properly', () => {\n    cy.get('#universal-nav').should('be.visible');\n    cy.get('#universal-nav').should('have.class', 'universal-nav');\n  });",
            "file": "integration/learn/common-components/navbar.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "Should have `Profile` link when user is signed in",
            "suites": [
                "Navbar Logged in"
            ],
            "updatePoint": {
                "line": 86,
                "column": 55
            },
            "line": 86,
            "code": "  it('Should have `Profile` link when user is signed in', () => {\n    cy.get(selectors.menuButton).click();\n    cy.get(selectors.navigationLinks).contains('Profile').click();\n    cy.url().should('include', '/developmentuser');\n  });",
            "file": "integration/learn/common-components/navbar.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "Should have a profile image with class `default-border`",
            "suites": [
                "Navbar Logged in"
            ],
            "updatePoint": {
                "line": 91,
                "column": 61
            },
            "line": 91,
            "code": "  it('Should have a profile image with class `default-border`', () => {\n    cy.get(selectors.avatarContainer).should('have.class', 'default-border');\n    cy.get(selectors.defaultAvatar).should('exist');\n  });",
            "file": "integration/learn/common-components/navbar.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "Should have a profile image with dimensions that are <= 31px",
            "suites": [
                "Navbar Logged in"
            ],
            "updatePoint": {
                "line": 95,
                "column": 66
            },
            "line": 95,
            "code": "  it('Should have a profile image with dimensions that are <= 31px', () => {\n    cy.get(selectors.avatarImage).invoke('width').should('lte', 31);\n    cy.get(selectors.avatarImage).invoke('height').should('lte', 31);\n  });",
            "file": "integration/learn/common-components/navbar.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "Should render properly",
            "suites": [
                "Search bar optimized"
            ],
            "updatePoint": {
                "line": 21,
                "column": 28
            },
            "line": 21,
            "code": "  it('Should render properly', () => {\n    cy.get('[data-cy=ais-SearchBox]').should('be.visible');\n  });",
            "file": "integration/learn/common-components/searchBar.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "Should not display hits",
            "suites": [
                "Search bar optimized"
            ],
            "updatePoint": {
                "line": 24,
                "column": 29
            },
            "line": 24,
            "code": "  it('Should not display hits', () => {\n    search('freeCodeCamp');\n    cy.get('[data-cy=ais-Hits-list]').should('not.exist');\n  });",
            "file": "integration/learn/common-components/searchBar.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "Should open a new tab ",
            "suites": [
                "Search bar optimized"
            ],
            "updatePoint": {
                "line": 28,
                "column": 28
            },
            "line": 28,
            "code": "  it('Should open a new tab ', () => {\n    cy.visit('/', {\n      onBeforeLoad(win) {\n        cy.stub(win, 'open').as('open');\n      }\n\n    });\n    search('freeCodeCamp');\n    cy.get('[data-cy=ais-SearchBox-form]').submit();\n    const queryUrl = 'https://www.freecodecamp.org/news/search/?query=freeCodeCamp';\n    cy.get('@open').should('have.been.calledOnceWith', queryUrl);\n  });",
            "file": "integration/learn/common-components/searchBar.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "Should render properly",
            "suites": [
                "Search bar"
            ],
            "updatePoint": {
                "line": 48,
                "column": 28
            },
            "line": 48,
            "code": "  it('Should render properly', () => {\n    cy.get('.ais-SearchBox').should('be.visible');\n  });",
            "file": "integration/learn/common-components/searchBar.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "Should accept input and display hits",
            "suites": [
                "Search bar"
            ],
            "updatePoint": {
                "line": 51,
                "column": 42
            },
            "line": 51,
            "code": "  it('Should accept input and display hits', () => {\n    search('freeCodeCamp');\n    cy.get('[data-cy=ais-Hits-list]').children().should('to.have.length.of.at.least', 1);\n  });",
            "file": "integration/learn/common-components/searchBar.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "Should clear hits when input is cleared",
            "suites": [
                "Search bar"
            ],
            "updatePoint": {
                "line": 55,
                "column": 45
            },
            "line": 55,
            "code": "  it('Should clear hits when input is cleared', () => {\n    search('freeCodeCamp');\n    cy.get('[data-cy=ais-Hits-list]').children().should('to.have.length.of.at.least', 1);\n    clear();\n    cy.get('div.ais-Hits').should('not.exist');\n  });",
            "file": "integration/learn/common-components/searchBar.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "Should show up to 8 hits when height >= 768px",
            "suites": [
                "Search bar"
            ],
            "updatePoint": {
                "line": 61,
                "column": 51
            },
            "line": 61,
            "code": "  it('Should show up to 8 hits when height >= 768px', () => {\n    cy.viewport(1300, 768);\n    search('freeCodeCamp');\n    cy.get('[data-cy=ais-Hits-list]').children().should('to.have.length.of', 8);\n  });",
            "file": "integration/learn/common-components/searchBar.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "Should show up to 5 hits when height < 768px",
            "suites": [
                "Search bar"
            ],
            "updatePoint": {
                "line": 66,
                "column": 50
            },
            "line": 66,
            "code": "  it('Should show up to 5 hits when height < 768px', () => {\n    cy.viewport(1300, 767);\n    search('freeCodeCamp');\n    cy.get('[data-cy=ais-Hits-list]').children().should('to.have.length.of', 5);\n  });",
            "file": "integration/learn/common-components/searchBar.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "Should show no hits for queries that do not exist in the Algolia index",
            "suites": [
                "Search bar"
            ],
            "updatePoint": {
                "line": 71,
                "column": 76
            },
            "line": 71,
            "code": "  it('Should show no hits for queries that do not exist in the Algolia index', () => {\n    search('testtttt');\n    cy.get('[data-cy=ais-Hits-list]').children().should('to.have.length.of', 0);\n    cy.contains('No tutorials found');\n  });",
            "file": "integration/learn/common-components/searchBar.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "Should not redirect to the News search page if there are no hits",
            "suites": [
                "Search bar"
            ],
            "updatePoint": {
                "line": 76,
                "column": 70
            },
            "line": 76,
            "code": "  it('Should not redirect to the News search page if there are no hits', () => {\n    search('testtttt');\n    cy.get('.ais-SearchBox-form').submit();\n    cy.url('/');\n  });",
            "file": "integration/learn/common-components/searchBar.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "Should render",
            "suites": [
                "Donate page"
            ],
            "updatePoint": {
                "line": 17,
                "column": 19
            },
            "line": 17,
            "code": "  it('Should render', () => {\n    cy.title().should('eq', 'Support our nonprofit | freeCodeCamp.org');\n  });",
            "file": "integration/learn/donate/donate-page-default.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "Should display default amount and duration",
            "suites": [
                "Donate page"
            ],
            "updatePoint": {
                "line": 20,
                "column": 48
            },
            "line": 20,
            "code": "  it('Should display default amount and duration', () => {\n    cy.contains('Confirm your donation of $5 / month:').should('be.visible');\n  });",
            "file": "integration/learn/donate/donate-page-default.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "Should have support section",
            "suites": [
                "Donate page"
            ],
            "updatePoint": {
                "line": 23,
                "column": 33
            },
            "line": 23,
            "code": "  it('Should have support section', () => {\n    cy.contains('Want to make a bigger one-time donation, mail us a check, or give in other ways?').should('be.visible');\n  });",
            "file": "integration/learn/donate/donate-page-default.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "Support section should have support text",
            "suites": [
                "Donate page"
            ],
            "updatePoint": {
                "line": 26,
                "column": 46
            },
            "line": 26,
            "code": "  it('Support section should have support text', () => {\n    cy.contains(selectors.donateSupport.firstTitle, 'Want to make a bigger one-time donation, mail us a check, or give in other ways?');\n    cy.contains(selectors.donateSupport.secondTitle, 'Need help with your current or past donations?');\n    cy.contains(selectors.donateSupport.firstText, \"Here are many other ways you can support our non-profit's mission.\");\n    cy.contains(selectors.donateSupport.secondText, 'Forward a copy of your donation receipt to donors@freecodecamp.org and tell us how we can help.');\n  });",
            "file": "integration/learn/donate/donate-page-default.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "Support section should have donation link",
            "suites": [
                "Donate page"
            ],
            "updatePoint": {
                "line": 32,
                "column": 47
            },
            "line": 32,
            "code": "  it('Support section should have donation link', () => {\n    cy.get(selectors.donateSupport.link).should('have.attr', 'href', 'https://www.freecodecamp.org/news/how-to-donate-to-free-code-camp');\n  });",
            "file": "integration/learn/donate/donate-page-default.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "Donor alert should not be visible for non-donor",
            "suites": [
                "Donate page"
            ],
            "updatePoint": {
                "line": 35,
                "column": 53
            },
            "line": 35,
            "code": "  it('Donor alert should not be visible for non-donor', () => {\n    cy.get('.alert-info').should('not.exist');\n  });",
            "file": "integration/learn/donate/donate-page-default.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "Donor alert should be visible for donor",
            "suites": [
                "Donate page"
            ],
            "updatePoint": {
                "line": 18,
                "column": 45
            },
            "line": 18,
            "code": "  it('Donor alert should be visible for donor', () => {\n    cy.get('.alert-info').should('be.visible');\n  });",
            "file": "integration/learn/donate/donate-page-donor.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "Donor should see alert message",
            "suites": [
                "Donate page"
            ],
            "updatePoint": {
                "line": 21,
                "column": 36
            },
            "line": 21,
            "code": "  it('Donor should see alert message', () => {\n    cy.contains(selectors.donateAlert.firstText, 'Thank you for being a supporter of freeCodeCamp. You currently have a recurring donation.');\n    cy.contains(selectors.donateAlert.lastText, \"Want to make a bigger one-time donation, mail us a check, or give in other ways? Here are many other ways you can support our non-profit's mission.\");\n  });",
            "file": "integration/learn/donate/donate-page-donor.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "Donor alert section should have donation link",
            "suites": [
                "Donate page"
            ],
            "updatePoint": {
                "line": 25,
                "column": 51
            },
            "line": 25,
            "code": "  it('Donor alert section should have donation link', () => {\n    cy.get(selectors.donateAlert.link).should('have.attr', 'href', 'https://www.freecodecamp.org/news/how-to-donate-to-free-code-camp');\n  });",
            "file": "integration/learn/donate/donate-page-donor.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "Should be able to submit projects",
            "suites": [
                "Donate page"
            ],
            "updatePoint": {
                "line": 11,
                "column": 39
            },
            "line": 11,
            "code": "  it('Should be able to submit projects', () => {\n    const submitProject = str => {\n      cy.visit(`/learn/responsive-web-design/responsive-web-design-projects/build-a-${str}`);\n      cy.get('#dynamic-front-end-form').get('#solution').type('https://codepen.io/camperbot/full/oNvPqqo', {\n        force: true\n      });\n      cy.contains(\"I've completed this challenge\").click();\n      cy.contains('Submit and go to next challenge').click();\n    };\n\n    projects.forEach(project => submitProject(project));\n  });",
            "file": "integration/learn/donate/donation-block-completion-modal.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "Should have a pop up modal",
            "suites": [
                "Donate page"
            ],
            "updatePoint": {
                "line": 23,
                "column": 32
            },
            "line": 23,
            "code": "  it('Should have a pop up modal', () => {\n    cy.contains('Nicely done. You just completed Responsive Web Design Projects.');\n  });",
            "file": "integration/learn/donate/donation-block-completion-modal.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "should render the expected forum and news links.",
            "suites": [
                "Navigation links"
            ],
            "updatePoint": {
                "line": 2,
                "column": 54
            },
            "line": 2,
            "code": "  it('should render the expected forum and news links.', () => {\n    cy.visit('/learn');\n    cy.get('.toggle-button-nav').should('be.visible');\n    cy.get('.toggle-button-nav').click();\n    cy.get('.nav-list').contains('Forum').should('have.attr', 'href', 'https://forum.freecodecamp.org/');\n    cy.get('.nav-list').contains('News').should('have.attr', 'href', 'https://freecodecamp.org/news/');\n  });",
            "file": "integration/learn/header/header-nav-links.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "Should render",
            "suites": [
                "Learn Landing page (not logged in)"
            ],
            "updatePoint": {
                "line": 9,
                "column": 19
            },
            "line": 9,
            "code": "  it('Should render', () => {\n    cy.visit(locations.index);\n    cy.title().should('eq', 'Learn to Code — For Free — Coding Courses for Busy People');\n  });",
            "file": "integration/learn/index.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "Has the correct heading for an unauthenticated User",
            "suites": [
                "Learn Landing page (not logged in)"
            ],
            "updatePoint": {
                "line": 13,
                "column": 57
            },
            "line": 13,
            "code": "  it('Has the correct heading for an unauthenticated User', () => {\n    cy.visit(locations.index);\n    cy.contains('h1', \"Welcome to freeCodeCamp's curriculum.\");\n  });",
            "file": "integration/learn/index.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "Should render a curriculum map",
            "suites": [
                "Learn Landing page (not logged in)"
            ],
            "updatePoint": {
                "line": 17,
                "column": 36
            },
            "line": 17,
            "code": "  it('Should render a curriculum map', () => {\n    cy.document().then(document => {\n      const superBlocks = document.querySelectorAll(`${selectors.challengeMap} > li > a`);\n      expect(superBlocks).to.have.length(11);\n      superBlocks.forEach((superBlock, idx) => {\n        expect(superBlock.innerText).to.have.string(superBlockNames[idx]);\n      });\n    });\n  });",
            "file": "integration/learn/index.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "Should show a quote",
            "suites": [
                "Quotes"
            ],
            "updatePoint": {
                "line": 31,
                "column": 25
            },
            "line": 31,
            "code": "  it('Should show a quote', () => {\n    cy.get('blockquote').within(() => {\n      cy.get('q').should('be.visible');\n    });\n  });",
            "file": "integration/learn/index.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "Should show quote author",
            "suites": [
                "Quotes"
            ],
            "updatePoint": {
                "line": 36,
                "column": 30
            },
            "line": 36,
            "code": "  it('Should show quote author', () => {\n    cy.get('blockquote').within(() => {\n      cy.get('cite').should('be.visible');\n    });\n  });",
            "file": "integration/learn/index.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "Has all superblocks visible",
            "suites": [
                "Superblocks and Blocks"
            ],
            "updatePoint": {
                "line": 46,
                "column": 33
            },
            "line": 46,
            "code": "  it('Has all superblocks visible', () => {\n    cy.wrap(superBlockNames.slice(1)).each(name => {\n      cy.contains(name).should('be.visible');\n    });\n  });",
            "file": "integration/learn/index.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "It should have a superblock and a course",
            "suites": [
                "The breadcumbs should work corectly"
            ],
            "updatePoint": {
                "line": 5,
                "column": 46
            },
            "line": 5,
            "code": "  it('It should have a superblock and a course', () => {\n    cy.visit(challengeUrl);\n    cy.get('.ellipsis').contains('Responsive Web Design').and('be.visible');\n    cy.get('.breadcrumb-left').should('have.attr', 'href').and('include', superBlockUrl);\n    cy.get('.breadcrumb-right').contains('Basic HTML and HTML5').and('be.visible');\n    cy.get('.breadcrumb-right').should('have.attr', 'href').and('include', courseUrl);\n  });",
            "file": "integration/learn/redirects/breadcrumbs.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "Should redirect to the right url",
            "suites": [
                "The breadcumbs should work corectly"
            ],
            "updatePoint": {
                "line": 12,
                "column": 38
            },
            "line": 12,
            "code": "  it('Should redirect to the right url', () => {\n    cy.visit(challengeUrl);\n    cy.get('.breadcrumb-left').click();\n    cy.url().should('include', '/responsive-web-design');\n    cy.visit(challengeUrl);\n    cy.get('.breadcrumb-right').click();\n    cy.url().should('include', '/responsive-web-design/#basic-html-and-html5');\n  });",
            "file": "integration/learn/redirects/breadcrumbs.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "should redirect from /es6/explore-differences-between-the-var-and-let-keywords to /basic-javascript/explore-differences-between-the-var-and-let-keywords",
            "suites": [
                "ES6 to Basic JavaScript redirects"
            ],
            "updatePoint": {
                "line": 3,
                "column": 180
            },
            "line": 3,
            "code": "  it(`should redirect from ${basePath}/es6/explore-differences-between-the-var-and-let-keywords to ${basePath}/basic-javascript/explore-differences-between-the-var-and-let-keywords`, () => {\n    cy.visit(`${basePath}/es6/explore-differences-between-the-var-and-let-keywords`);\n    cy.location().should(loc => {\n      expect(loc.pathname).to.eq(`${basePath}/basic-javascript/explore-differences-between-the-var-and-let-keywords`);\n    });\n  });",
            "file": "integration/learn/redirects/es6-to-basic-javascript.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "should redirect from /es6/declare-a-read-only-variable-with-the-const-keyword to /basic-javascript/declare-a-read-only-variable-with-the-const-keyword",
            "suites": [
                "ES6 to Basic JavaScript redirects"
            ],
            "updatePoint": {
                "line": 9,
                "column": 178
            },
            "line": 9,
            "code": "  it(`should redirect from ${basePath}/es6/declare-a-read-only-variable-with-the-const-keyword to ${basePath}/basic-javascript/declare-a-read-only-variable-with-the-const-keyword`, () => {\n    cy.visit(`${basePath}/es6/declare-a-read-only-variable-with-the-const-keyword`);\n    cy.location().should(loc => {\n      expect(loc.pathname).to.eq(`${basePath}/basic-javascript/declare-a-read-only-variable-with-the-const-keyword`);\n    });\n  });",
            "file": "integration/learn/redirects/es6-to-basic-javascript.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "should redirect from /adjust-the-size-of-a-header-versus-a-paragraph-tag to /adjust-the-size-of-a-heading-element-versus-a-paragraph-element",
            "suites": [
                "Header to heading element redirect"
            ],
            "updatePoint": {
                "line": 3,
                "column": 168
            },
            "line": 3,
            "code": "  it(`should redirect from ${basePath}/adjust-the-size-of-a-header-versus-a-paragraph-tag to ${basePath}/adjust-the-size-of-a-heading-element-versus-a-paragraph-element`, () => {\n    cy.visit(`${basePath}/adjust-the-size-of-a-header-versus-a-paragraph-tag`);\n    cy.location().should(loc => {\n      expect(loc.pathname).to.eq(`${basePath}/adjust-the-size-of-a-heading-element-versus-a-paragraph-element`);\n    });\n  });",
            "file": "integration/learn/redirects/heading-challenge.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "renders",
            "suites": [
                "Basic Css Introduction page"
            ],
            "updatePoint": {
                "line": 11,
                "column": 13
            },
            "line": 11,
            "code": "  it('renders', () => {\n    cy.visit(locations.index);\n    cy.title().should('eq', 'Basic CSS | freeCodeCamp.org');\n  });",
            "file": "integration/learn/responsive-web-design/basic-css/index.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "renders a warning user about extensions",
            "suites": [
                "Basic Css Introduction page"
            ],
            "updatePoint": {
                "line": 15,
                "column": 45
            },
            "line": 15,
            "code": "  it('renders a warning user about extensions', () => {\n    cy.visit(locations.index);\n    cy.get(selectors.warningMessage).contains(warningMessage);\n  });",
            "file": "integration/learn/responsive-web-design/basic-css/index.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "renders a lesson index",
            "suites": [
                "Basic Css Introduction page"
            ],
            "updatePoint": {
                "line": 19,
                "column": 28
            },
            "line": 19,
            "code": "  it('renders a lesson index', () => {\n    lessonNames.forEach(name => {\n      cy.get(selectors.tableOfContents).contains('span', name);\n    });\n  });",
            "file": "integration/learn/responsive-web-design/basic-css/index.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "should have a card with href \"claim-cert-block\"",
            "suites": [
                "Responsive Web Design Superblock",
                "Before submitting projects"
            ],
            "updatePoint": {
                "line": 29,
                "column": 55
            },
            "line": 29,
            "code": "    it('should have a card with href \"claim-cert-block\"', () => {\n      cy.get('a[href=\"#claim-cert-block\"]').scrollIntoView();\n      cy.get('a[href=\"#claim-cert-block\"]').should('be.visible');\n    });",
            "file": "integration/learn/responsive-web-design/claim-cert-from-learn.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "should have an anchor element with the text \"Claim Certification\", and class \"disabled\"",
            "suites": [
                "Responsive Web Design Superblock",
                "Before submitting projects"
            ],
            "updatePoint": {
                "line": 33,
                "column": 95
            },
            "line": 33,
            "code": "    it('should have an anchor element with the text \"Claim Certification\", and class \"disabled\"', () => {\n      cy.get('a.disabled').should('be.visible');\n      cy.get('a.disabled').should('have.text', 'Claim Certification');\n    });",
            "file": "integration/learn/responsive-web-design/claim-cert-from-learn.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "should have an unordered list with class \"map-challenges-ul\" containing 5 items",
            "suites": [
                "Responsive Web Design Superblock",
                "Before submitting projects"
            ],
            "updatePoint": {
                "line": 37,
                "column": 87
            },
            "line": 37,
            "code": "    it('should have an unordered list with class \"map-challenges-ul\" containing 5 items', () => {\n      cy.get('[data-cy=claim-cert-steps]').should('be.visible');\n      cy.get('[data-cy=claim-cert-steps]').children().should('have.length', 5);\n    });",
            "file": "integration/learn/responsive-web-design/claim-cert-from-learn.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "should be possible to claim and view certifications from the superBlock page",
            "suites": [
                "Responsive Web Design Superblock",
                "After submitting all 5 projects"
            ],
            "updatePoint": {
                "line": 71,
                "column": 84
            },
            "line": 71,
            "code": "    it('should be possible to claim and view certifications from the superBlock page', () => {\n      cy.location().should(loc => {\n        expect(loc.pathname).to.eq(`/learn/${projects.superBlock}/`);\n      });\n      cy.get('.donation-modal').should('be.visible');\n      cy.contains('Ask me later').click();\n      cy.get('.donation-modal').should('not.exist'); // directed to claim-cert-block section\n\n      cy.url().should('include', '#claim-cert-block'); // make sure that the window has not snapped to the top (a weird bug that\n      // we never figured out and so could randomly reappear)\n\n      cy.window().its('scrollY').should('not.equal', 0);\n      cy.contains('Claim Your Certification');\n      cy.contains('Claim Certification').should('not.be.disabled').click();\n      cy.contains('Show Certification').click();\n      cy.location().should(loc => {\n        expect(loc.pathname).to.eq('/certification/developmentuser/responsive-web-design');\n      });\n    });",
            "file": "integration/learn/responsive-web-design/claim-cert-from-learn.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "Should render",
            "suites": [
                "Certification intro page"
            ],
            "updatePoint": {
                "line": 10,
                "column": 19
            },
            "line": 10,
            "code": "  it('Should render', () => {\n    cy.title().should('eq', 'Responsive Web Design Certification | freeCodeCamp.org');\n  });",
            "file": "integration/learn/responsive-web-design/intro-page.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "Should have certification intro text",
            "suites": [
                "Certification intro page"
            ],
            "updatePoint": {
                "line": 13,
                "column": 42
            },
            "line": 13,
            "code": "  it('Should have certification intro text', () => {\n    cy.contains(\"In this Responsive Web Design Certification, you'll learn the languages that developers use to build webpages\").should('be.visible');\n  });",
            "file": "integration/learn/responsive-web-design/intro-page.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "First block should be expanded",
            "suites": [
                "Certification intro page"
            ],
            "updatePoint": {
                "line": 16,
                "column": 36
            },
            "line": 16,
            "code": "  it('First block should be expanded', () => {\n    cy.contains('Say Hello to HTML Elements').should('be.visible');\n  });",
            "file": "integration/learn/responsive-web-design/intro-page.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "Second block should be closed",
            "suites": [
                "Certification intro page"
            ],
            "updatePoint": {
                "line": 19,
                "column": 35
            },
            "line": 19,
            "code": "  it('Second block should be closed', () => {\n    cy.contains('Change the Color of Text').should('not.exist');\n  });",
            "file": "integration/learn/responsive-web-design/intro-page.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "Block should handle toggle clicks correctly",
            "suites": [
                "Certification intro page"
            ],
            "updatePoint": {
                "line": 22,
                "column": 49
            },
            "line": 22,
            "code": "  it('Block should handle toggle clicks correctly', () => {\n    cy.get(selectors.firstBlock).click();\n    cy.contains('Say Hello to HTML Elements').should('not.exist');\n    cy.get(selectors.firstBlock).click();\n    cy.contains('Say Hello to HTML Elements').should('be.visible');\n  });",
            "file": "integration/learn/responsive-web-design/intro-page.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "should redirect from front-end-libraries to front-end-development-libraries",
            "suites": [
                "Legacy redirects"
            ],
            "updatePoint": {
                "line": 5,
                "column": 81
            },
            "line": 5,
            "code": "  it('should redirect from front-end-libraries to front-end-development-libraries', () => {\n    cy.visit('learn/front-end-libraries');\n    cy.url().should('include', 'learn/front-end-development-libraries');\n    cy.visit('learn/front-end-libraries/bootstrap');\n    cy.location().should(loc => {\n      expect(loc.pathname).to.eq('/learn/front-end-development-libraries/bootstrap/');\n    });\n    cy.visit('learn/front-end-libraries/front-end-libraries-projects');\n    cy.location().should(loc => {\n      expect(loc.pathname).to.eq('/learn/front-end-development-libraries/front-end-development-libraries-projects/');\n    });\n    cy.visit('learn/front-end-libraries/front-end-libraries-projects/build-a-random-quote-machine');\n    cy.location().should(loc => {\n      expect(loc.pathname).to.eq('/learn/front-end-development-libraries/front-end-development-libraries-projects/build-a-random-quote-machine');\n    });\n    cy.visit('certification/certifieduser/front-end-libraries');\n    cy.location().should(loc => {\n      expect(loc.pathname).to.eq('/certification/certifieduser/front-end-development-libraries');\n    });\n    cy.visit('learn/front-end-libraries/bootstrap/use-responsive-design-with-bootstrap-fluid-containers');\n    cy.location().should(loc => {\n      expect(loc.pathname).to.eq('/learn/front-end-development-libraries/bootstrap/use-responsive-design-with-bootstrap-fluid-containers');\n    }); // Bit of hack: but we need to make sure the page is fully loaded before\n    // moving on.\n\n    cy.get('.react-monaco-editor-container').should('be.visible');\n  });",
            "file": "integration/legacy/redirects/adding-development.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "should redirect from /apis-and-microservices to /back-end-development-and-apis",
            "suites": [
                "Legacy redirects"
            ],
            "updatePoint": {
                "line": 32,
                "column": 84
            },
            "line": 32,
            "code": "  it('should redirect from /apis-and-microservices to /back-end-development-and-apis', () => {\n    cy.visit('learn/apis-and-microservices');\n    cy.location().should(loc => {\n      expect(loc.pathname).to.eq('/learn/back-end-development-and-apis/');\n    });\n    cy.visit('learn/apis-and-microservices/managing-packages-with-npm');\n    cy.location().should(loc => {\n      expect(loc.pathname).to.eq('/learn/back-end-development-and-apis/managing-packages-with-npm/');\n    });\n    cy.visit('learn/apis-and-microservices/managing-packages-with-npm/how-to-use-package-json-the-core-of-any-node-js-project-or-npm-package');\n    cy.location().should(loc => {\n      expect(loc.pathname).to.eq('/learn/back-end-development-and-apis/managing-packages-with-npm/how-to-use-package-json-the-core-of-any-node-js-project-or-npm-package');\n    });\n    cy.visit('learn/apis-and-microservices/apis-and-microservices-projects');\n    cy.location().should(loc => {\n      expect(loc.pathname).to.eq('/learn/back-end-development-and-apis/back-end-development-and-apis-projects/');\n    });\n    cy.visit('learn/apis-and-microservices/apis-and-microservices-projects/timestamp-microservice');\n    cy.location().should(loc => {\n      expect(loc.pathname).to.eq('/learn/back-end-development-and-apis/back-end-development-and-apis-projects/timestamp-microservice');\n    });\n    cy.visit('certification/certifieduser/apis-and-microservices');\n    cy.location().should(loc => {\n      expect(loc.pathname).to.eq('/certification/certifieduser/back-end-development-and-apis');\n    });\n  });",
            "file": "integration/legacy/redirects/adding-development.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "redirects to learn/superblock",
            "suites": [
                "challenges/superblock redirect"
            ],
            "updatePoint": {
                "line": 12,
                "column": 35
            },
            "line": 12,
            "code": "  it('redirects to learn/superblock', () => {\n    cy.visit(locations.chalSuper);\n    cy.title().should('eq', 'Responsive Web Design Certification | freeCodeCamp.org');\n    cy.location().should(loc => {\n      expect(loc.pathname).to.eq(locations.learnSuper);\n    });\n  });",
            "file": "integration/legacy/redirects/challenges.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "redirects to learn/superblock/block",
            "suites": [
                "challenges/superblock/block redirect"
            ],
            "updatePoint": {
                "line": 21,
                "column": 41
            },
            "line": 21,
            "code": "  it('redirects to learn/superblock/block', () => {\n    cy.visit(locations.chalBlock);\n    cy.title().should('eq', 'Basic HTML and HTML5 | freeCodeCamp.org');\n    cy.location().should(loc => {\n      expect(loc.pathname).to.eq(locations.learnBlock);\n    });\n  });",
            "file": "integration/legacy/redirects/challenges.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "redirects to learn/superblock/block/challenge",
            "suites": [
                "challenges/superblock/block/challenge redirect"
            ],
            "updatePoint": {
                "line": 30,
                "column": 51
            },
            "line": 30,
            "code": "  it('redirects to learn/superblock/block/challenge', () => {\n    cy.visit(locations.chalChallenge);\n    cy.title().should('eq', // eslint-disable-next-line max-len\n    'Basic HTML and HTML5: Say Hello to HTML Elements | freeCodeCamp.org');\n    cy.location().should(loc => {\n      expect(loc.pathname).to.eq(locations.learnChallenge);\n    });\n  });",
            "file": "integration/legacy/redirects/challenges.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "Should render the default settings page",
            "suites": [
                "Settings certifications area",
                "initially"
            ],
            "updatePoint": {
                "line": 8,
                "column": 47
            },
            "line": 8,
            "code": "    it('Should render the default settings page', () => {\n      cy.visit('/settings/');\n      cy.findAllByText('Claim Certification').should($btns => {\n        expect($btns).to.have.length(15);\n      });\n      cy.findByText('Show Certification').should('not.exist');\n      cy.contains('Agree');\n      cy.contains('Claim Certification').click();\n      cy.contains('To claim a certification, you must first accept our academic honesty policy');\n    });",
            "file": "integration/settings/certifications.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "Should update the user as they try to claim their certifications",
            "suites": [
                "Settings certifications area",
                "after isHonest"
            ],
            "updatePoint": {
                "line": 24,
                "column": 72
            },
            "line": 24,
            "code": "    it('Should update the user as they try to claim their certifications', () => {\n      cy.visit('/settings');\n      cy.contains('Agree').click();\n      cy.contains('You have accepted our Academic Honesty Policy.');\n      cy.contains('Claim Certification').click();\n      cy.contains('It looks like you have not completed the necessary steps. Please complete the required projects to claim the Responsive Web Design Certification');\n    });",
            "file": "integration/settings/certifications.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "Should be possible to submit the new email",
            "suites": [
                "Email input field"
            ],
            "updatePoint": {
                "line": 7,
                "column": 48
            },
            "line": 7,
            "code": "  it('Should be possible to submit the new email', () => {\n    cy.get('[id=new-email]').type('bar@foo.com').should('have.attr', 'value', 'bar@foo.com');\n    cy.get('[id=confirm-email]').type('bar@foo.com').should('have.attr', 'value', 'bar@foo.com');\n    cy.get('[id=form-update-email]').within(() => {\n      cy.contains('Save').click();\n    });\n    cy.contains('Check your email and click the link we sent you to confirm your new email address.');\n  });",
            "file": "integration/settings/email-change.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "Displays an error message when there are problems with the submitted emails",
            "suites": [
                "Email input field"
            ],
            "updatePoint": {
                "line": 15,
                "column": 81
            },
            "line": 15,
            "code": "  it('Displays an error message when there are problems with the submitted emails', () => {\n    cy.get('[id=new-email]').type('bar@foo.com');\n    cy.get('[id=confirm-email]').type('foo@bar.com');\n    cy.get('[class=help-block]').contains('Both new email addresses must be the same');\n    cy.get('[id=new-email]').clear().type('foo@bar.com');\n    cy.get('[class=help-block]').contains('This email is the same as your current email');\n  });",
            "file": "integration/settings/email-change.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "Should be possible to get Quincys weekly email",
            "suites": [
                "Email input field"
            ],
            "updatePoint": {
                "line": 22,
                "column": 52
            },
            "line": 22,
            "code": "  it('Should be possible to get Quincys weekly email', () => {\n    cy.contains('Yes please').click();\n  });",
            "file": "integration/settings/email-change.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "Should be possible to type",
            "suites": [
                "Picture input field"
            ],
            "updatePoint": {
                "line": 8,
                "column": 32
            },
            "line": 8,
            "code": "  it('Should be possible to type', () => {\n    cy.get('@pictureInput').clear({\n      force: true\n    }).type('twaha', {\n      force: true\n    }).should('have.attr', 'value', 'twaha');\n  });",
            "file": "integration/settings/image-picture-check.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "Show an error message if an incorrect url was submitted",
            "suites": [
                "Picture input field"
            ],
            "updatePoint": {
                "line": 15,
                "column": 61
            },
            "line": 15,
            "code": "  it('Show an error message if an incorrect url was submitted', () => {\n    cy.get('@pictureInput').clear({\n      force: true\n    }).type('https://s3.amazonaws.com/freecodecamp/camper-image', {\n      force: true\n    }).then(() => {\n      cy.contains('URL must link directly to an image file');\n    });\n  });",
            "file": "integration/settings/image-picture-check.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "Can submit a correct URL",
            "suites": [
                "Picture input field"
            ],
            "updatePoint": {
                "line": 24,
                "column": 30
            },
            "line": 24,
            "code": "  it('Can submit a correct URL', () => {\n    cy.get('@pictureInput').clear({\n      force: true\n    }).type('https://s3.amazonaws.com/freecodecamp/camper-image-placeholder.png', {\n      force: true\n    });\n    cy.wait(500);\n    cy.get('#camper-identity > .btn').should('not.be.disabled');\n  });",
            "file": "integration/settings/image-picture-check.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "should be possible to reset your progress",
            "suites": [
                "Settings"
            ],
            "updatePoint": {
                "line": 5,
                "column": 47
            },
            "line": 5,
            "code": "  it('should be possible to reset your progress', () => {\n    cy.visit('/settings');\n    cy.contains('Reset all of my progress').click();\n    cy.contains('Reset everything. I want to start from the beginning').click();\n    cy.location().should(loc => {\n      expect(loc.pathname).to.eq('/');\n    });\n    cy.contains('Your progress has been reset');\n  });",
            "file": "integration/settings/settings.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "Should be possible to type",
            "suites": [
                "Username input field"
            ],
            "updatePoint": {
                "line": 13,
                "column": 32
            },
            "line": 13,
            "code": "  it('Should be possible to type', () => {\n    goToSettings();\n    cy.get('@usernameInput').clear({\n      force: true\n    }).type('twaha', {\n      force: true\n    }).should('have.attr', 'value', 'twaha');\n  });",
            "file": "integration/settings/username-change.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "Should show message when validating name",
            "suites": [
                "Username input field"
            ],
            "updatePoint": {
                "line": 21,
                "column": 46
            },
            "line": 21,
            "code": "  it('Should show message when validating name', () => {\n    goToSettings();\n    cy.get('@usernameInput').clear({\n      force: true\n    }).type('twaha', {\n      force: true\n    });\n    cy.contains('Validating username...').should('have.attr', 'role', 'alert') // We are checking for classes here to check for proper styling\n    // This will be replaced with Percy in the future\n    .should('have.class', 'alert alert-info');\n  });",
            "file": "integration/settings/username-change.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "Should show username is available if it is",
            "suites": [
                "Username input field"
            ],
            "updatePoint": {
                "line": 32,
                "column": 48
            },
            "line": 32,
            "code": "  it('Should show username is available if it is', () => {\n    goToSettings();\n    cy.get('@usernameInput').clear({\n      force: true\n    }).type('brad', {\n      force: true\n    });\n    cy.contains('Username is available').should('be.visible').should('have.attr', 'role', 'alert') // We are checking for classes here to check for proper styling\n    // This will be replaced with Percy in the future\n    .should('have.class', 'alert alert-success');\n  });",
            "file": "integration/settings/username-change.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "Should info message if username is available",
            "suites": [
                "Username input field"
            ],
            "updatePoint": {
                "line": 43,
                "column": 50
            },
            "line": 43,
            "code": "  it('Should info message if username is available', () => {\n    goToSettings();\n    cy.get('@usernameInput').clear({\n      force: true\n    }).type('mrugesh', {\n      force: true\n    });\n    cy.contains('Please note, changing your username will also change ' + 'the URL to your profile and your certifications.').should('be.visible').should('have.attr', 'role', 'alert') // We are checking for classes here to check for proper styling\n    // This will be replaced with Percy in the future\n    .should('have.class', 'alert alert-info');\n  }); // eslint-disable-next-line",
            "file": "integration/settings/username-change.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "Should be able to click the `Save` button if username is avalable",
            "suites": [
                "Username input field"
            ],
            "updatePoint": {
                "line": 55,
                "column": 71
            },
            "line": 55,
            "code": "  it('Should be able to click the `Save` button if username is avalable', () => {\n    goToSettings();\n    cy.get('@usernameInput').clear({\n      force: true\n    }).type('oliver', {\n      force: true\n    });\n    cy.get('@usernameForm').within(() => {\n      cy.contains('Save').should('not.be.disabled');\n    });\n  });",
            "file": "integration/settings/username-change.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "Should show username is unavailable if it is",
            "suites": [
                "Username input field"
            ],
            "updatePoint": {
                "line": 66,
                "column": 50
            },
            "line": 66,
            "code": "  it('Should show username is unavailable if it is', () => {\n    goToSettings();\n    cy.get('@usernameInput').clear({\n      force: true\n    }).type('twaha', {\n      force: true\n    });\n    cy.contains('Username not available').should('be.visible').should('have.attr', 'role', 'alert') // We are checking for classes here to check for proper styling\n    // This will be replaced with Percy in the future\n    .should('have.class', 'alert alert-warning');\n  }); // eslint-disable-next-line",
            "file": "integration/settings/username-change.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "Should not be possible to click the `Save` button if username is unavailable",
            "suites": [
                "Username input field"
            ],
            "updatePoint": {
                "line": 78,
                "column": 82
            },
            "line": 78,
            "code": "  it('Should not be possible to click the `Save` button if username is unavailable', () => {\n    goToSettings();\n    cy.get('@usernameInput').clear({\n      force: true\n    }).type('twaha', {\n      force: true\n    });\n    cy.contains('Username is available').should('not.exist');\n    cy.contains('Username not available').should('not.exist');\n    cy.contains('Please note, changing your username will also change ' + 'the URL to your profile and your certifications.').should('not.exist');\n    cy.get('@usernameForm').contains('Save').should('be.disabled');\n  });",
            "file": "integration/settings/username-change.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "Should not show anything if user types their current name",
            "suites": [
                "Username input field"
            ],
            "updatePoint": {
                "line": 90,
                "column": 63
            },
            "line": 90,
            "code": "  it('Should not show anything if user types their current name', () => {\n    goToSettings();\n    cy.get('@usernameInput').clear({\n      force: true\n    }).type('developmentuser', {\n      force: true\n    });\n    cy.get('@usernameForm').contains('Save').should('be.disabled');\n  }); // eslint-disable-next-line max-len",
            "file": "integration/settings/username-change.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "Should not be possible to click the `Save` button if user types their current name",
            "suites": [
                "Username input field"
            ],
            "updatePoint": {
                "line": 100,
                "column": 88
            },
            "line": 100,
            "code": "  it('Should not be possible to click the `Save` button if user types their current name', () => {\n    goToSettings();\n    cy.get('@usernameInput').clear({\n      force: true\n    }).type('developmentuser', {\n      force: true\n    });\n    cy.get('@usernameForm').contains('Save').should('be.disabled');\n  });",
            "file": "integration/settings/username-change.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "Should show warning if username includes invalid character",
            "suites": [
                "Username input field"
            ],
            "updatePoint": {
                "line": 109,
                "column": 64
            },
            "line": 109,
            "code": "  it('Should show warning if username includes invalid character', () => {\n    goToSettings();\n    cy.get('@usernameInput').clear({\n      force: true\n    }).type('Quincy Larson', {\n      force: true\n    });\n    cy.contains('Username \"Quincy Larson\" contains invalid characters').should('be.visible').should('have.attr', 'role', 'alert') // We are checking for classes here to check for proper styling\n    // This will be replaced with Percy in the future\n    .should('have.class', 'alert alert-danger');\n  }); // eslint-disable-next-line max-len",
            "file": "integration/settings/username-change.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "Should not be able to click the `Save` button if username includes invalid character",
            "suites": [
                "Username input field"
            ],
            "updatePoint": {
                "line": 121,
                "column": 90
            },
            "line": 121,
            "code": "  it('Should not be able to click the `Save` button if username includes invalid character', () => {\n    goToSettings();\n    cy.get('@usernameInput').clear({\n      force: true\n    }).type('Quincy Larson', {\n      force: true\n    });\n    cy.get('@usernameForm').contains('Save').should('be.disabled');\n  });",
            "file": "integration/settings/username-change.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "Should change username if `Save` button is clicked",
            "suites": [
                "Username input field"
            ],
            "updatePoint": {
                "line": 130,
                "column": 56
            },
            "line": 130,
            "code": "  it('Should change username if `Save` button is clicked', () => {\n    goToSettings();\n    cy.get('@usernameInput').clear({\n      force: true\n    }).type('quincy', {\n      force: true\n    });\n    cy.contains('Username is available');\n    cy.get('@usernameForm').contains('Save').click({\n      force: true\n    });\n    cy.contains('Account Settings for quincy').should('be.visible');\n    cy.resetUsername();\n  });",
            "file": "integration/settings/username-change.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "Should change username with uppercase characters if `Save` button is clicked",
            "suites": [
                "Username input field"
            ],
            "updatePoint": {
                "line": 144,
                "column": 82
            },
            "line": 144,
            "code": "  it('Should change username with uppercase characters if `Save` button is clicked', () => {\n    goToSettings();\n    cy.get('@usernameInput').clear({\n      force: true\n    }).type('Quincy', {\n      force: true\n    });\n    cy.contains('Username is available');\n    cy.get('@usernameForm').contains('Save').click({\n      force: true\n    });\n    cy.contains('Account Settings for Quincy').should('be.visible');\n    cy.resetUsername();\n  });",
            "file": "integration/settings/username-change.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "Should show flash message showing username has been updated",
            "suites": [
                "Username input field"
            ],
            "updatePoint": {
                "line": 158,
                "column": 65
            },
            "line": 158,
            "code": "  it('Should show flash message showing username has been updated', () => {\n    goToSettings();\n    cy.get('@usernameInput').clear({\n      force: true\n    }).type('nhcarrigan', {\n      force: true\n    });\n    cy.contains('Username is available');\n    cy.get('@usernameInput').type('{enter}', {\n      force: true,\n      release: false\n    });\n    cy.contains('We have updated your username to nhcarrigan').should('be.visible') // We are checking for classes here to check for proper styling\n    // This will be replaced with Percy in the future\n    .should('have.class', 'flash-message alert alert-success alert-dismissable');\n    cy.resetUsername();\n  });",
            "file": "integration/settings/username-change.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "Should be able to close the shown flash message",
            "suites": [
                "Username input field"
            ],
            "updatePoint": {
                "line": 175,
                "column": 53
            },
            "line": 175,
            "code": "  it('Should be able to close the shown flash message', () => {\n    goToSettings();\n    cy.get('@usernameInput').clear({\n      force: true\n    }).type('bjorno', {\n      force: true\n    });\n    cy.contains('Username is available');\n    cy.get('@usernameInput').type('{enter}', {\n      force: true,\n      release: false\n    });\n    cy.contains('We have updated your username to bjorno').within(() => {\n      cy.get('button').click();\n    });\n    cy.contains('We have updated your username to bjorno').should('not.exist');\n    cy.resetUsername();\n  });",
            "file": "integration/settings/username-change.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "Should change username if enter is pressed",
            "suites": [
                "Username input field"
            ],
            "updatePoint": {
                "line": 193,
                "column": 48
            },
            "line": 193,
            "code": "  it('Should change username if enter is pressed', () => {\n    goToSettings();\n    cy.get('@usernameInput').clear({\n      force: true\n    }).type('symbol', {\n      force: true\n    });\n    cy.contains('Username is available');\n    cy.get('@usernameInput').type('{enter}', {\n      force: true,\n      release: false\n    });\n    cy.contains('Account Settings for symbol').should('be.visible');\n    cy.resetUsername();\n  });",
            "file": "integration/settings/username-change.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "should render a LinkedIn button",
            "suites": [
                "A certification,",
                "while viewing your own,"
            ],
            "updatePoint": {
                "line": 10,
                "column": 39
            },
            "line": 10,
            "code": "    it('should render a LinkedIn button', function () {\n      cy.visit(certifiedUser);\n      cy.contains('Add this certification to my LinkedIn profile').should('have.attr', 'href').and('match', // eslint-disable-next-line max-len\n      /https:\\/\\/www\\.linkedin\\.com\\/profile\\/add\\?startTask=CERTIFICATION_NAME&name=Responsive Web Design&organizationId=4831032&issueYear=\\d\\d\\d\\d&issueMonth=\\d\\d?&certUrl=https:\\/\\/freecodecamp\\.org\\/certification\\/certifieduser\\/responsive-web-design/);\n    });",
            "file": "integration/ShowCertification.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "should render a Twitter button",
            "suites": [
                "A certification,",
                "while viewing your own,"
            ],
            "updatePoint": {
                "line": 15,
                "column": 38
            },
            "line": 15,
            "code": "    it('should render a Twitter button', function () {\n      cy.visit(certifiedUser);\n      cy.contains('Share this certification on Twitter').should('have.attr', 'href', 'https://twitter.com/intent/tweet?text=I just earned the Responsive Web Design certification @freeCodeCamp! Check it out here: https://freecodecamp.org/certification/certifieduser/responsive-web-design');\n    });",
            "file": "integration/ShowCertification.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "should be issued with the submission date",
            "suites": [
                "A certification,",
                "while viewing your own,"
            ],
            "updatePoint": {
                "line": 19,
                "column": 49
            },
            "line": 19,
            "code": "    it('should be issued with the submission date', () => {\n      cy.visit(certifiedUser);\n      const issued = `Issued\\xa0August 3, 2018`;\n      cy.get('[data-cy=issue-date]').should('have.text', issued);\n    });",
            "file": "integration/ShowCertification.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "should display certificate",
            "suites": [
                "A certification,",
                "while viewing someone else's,"
            ],
            "updatePoint": {
                "line": 29,
                "column": 34
            },
            "line": 29,
            "code": "    it('should display certificate', function () {\n      cy.contains('has successfully completed the freeCodeCamp.org').should('exist');\n      cy.contains('Responsive Web Design').should('exist');\n    });",
            "file": "integration/ShowCertification.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "should not render a LinkedIn button",
            "suites": [
                "A certification,",
                "while viewing someone else's,"
            ],
            "updatePoint": {
                "line": 33,
                "column": 43
            },
            "line": 33,
            "code": "    it('should not render a LinkedIn button', function () {\n      cy.contains('Add this certification to my LinkedIn profile').should('not.exist');\n    });",
            "file": "integration/ShowCertification.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "should not render a Twitter button",
            "suites": [
                "A certification,",
                "while viewing someone else's,"
            ],
            "updatePoint": {
                "line": 36,
                "column": 42
            },
            "line": 36,
            "code": "    it('should not render a Twitter button', function () {\n      cy.contains('Share this certification on Twitter').should('not.exist');\n    });",
            "file": "integration/ShowCertification.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "landing page has correct <meta> for description",
            "suites": [
                "The Document Metadata"
            ],
            "updatePoint": {
                "line": 20,
                "column": 53
            },
            "line": 20,
            "code": "  it('landing page has correct <meta> for description', () => {\n    cy.get('head meta[name=\"description\"]').should('have.attr', 'content', 'Learn to Code — For Free');\n  });",
            "file": "integration/tags.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "landing page has correct <meta> for og title",
            "suites": [
                "The Document Metadata"
            ],
            "updatePoint": {
                "line": 23,
                "column": 50
            },
            "line": 23,
            "code": "  it('landing page has correct <meta> for og title', () => {\n    cy.get('head meta[name=\"og:title\"]').should('have.attr', 'content', 'freeCodeCamp.org');\n  });",
            "file": "integration/tags.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "landing page has correct <meta> for og description",
            "suites": [
                "The Document Metadata"
            ],
            "updatePoint": {
                "line": 26,
                "column": 56
            },
            "line": 26,
            "code": "  it('landing page has correct <meta> for og description', () => {\n    cy.get('head meta[name=\"og:description\"]').should('have.attr', 'content', social.description);\n  });",
            "file": "integration/tags.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "landing page has correct <meta> for twitter title",
            "suites": [
                "The Document Metadata"
            ],
            "updatePoint": {
                "line": 29,
                "column": 55
            },
            "line": 29,
            "code": "  it('landing page has correct <meta> for twitter title', () => {\n    cy.get('head meta[name=\"twitter:title\"]').should('have.attr', 'content', 'freeCodeCamp.org');\n  });",
            "file": "integration/tags.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "landing page has correct <meta>for twitter description",
            "suites": [
                "The Document Metadata"
            ],
            "updatePoint": {
                "line": 32,
                "column": 60
            },
            "line": 32,
            "code": "  it('landing page has correct <meta>for twitter description', () => {\n    cy.get('head meta[name=\"twitter:description\"]').should('have.attr', 'content', social.description);\n  });",
            "file": "integration/tags.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "landing page should not have mathjax body script",
            "suites": [
                "The Document Metadata"
            ],
            "updatePoint": {
                "line": 35,
                "column": 54
            },
            "line": 35,
            "code": "  it('landing page should not have mathjax body script', () => {\n    cy.reload();\n    cy.get(scripts.mathjax.selector).should('not.exist');\n  });",
            "file": "integration/tags.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "responsive webdesign challenges should not have mathjax body script",
            "suites": [
                "The Document Metadata"
            ],
            "updatePoint": {
                "line": 39,
                "column": 73
            },
            "line": 39,
            "code": "  it('responsive webdesign challenges should not have mathjax body script', () => {\n    cy.visit(challengs.responsiveWebDesign);\n    cy.reload();\n    cy.get(scripts.mathjax.selector).should('not.exist');\n  });",
            "file": "integration/tags.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "project euler challenges should have mathjax body script",
            "suites": [
                "The Document Metadata"
            ],
            "updatePoint": {
                "line": 44,
                "column": 62
            },
            "line": 44,
            "code": "  it('project euler challenges should have mathjax body script', () => {\n    cy.visit(challengs.projectEuler);\n    cy.reload();\n    cy.get(scripts.mathjax.selector).should('have.attr', 'src', scripts.mathjax.src);\n  });",
            "file": "integration/tags.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "rosetta code challenges should have mathjax body script",
            "suites": [
                "The Document Metadata"
            ],
            "updatePoint": {
                "line": 49,
                "column": 61
            },
            "line": 49,
            "code": "  it('rosetta code challenges should have mathjax body script', () => {\n    cy.visit(challengs.projectEuler);\n    cy.reload();\n    cy.get(scripts.mathjax.selector).should('have.attr', 'src', scripts.mathjax.src);\n  });",
            "file": "integration/tags.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "Should show `Top Contributor` text with badge",
            "suites": [
                "Top contributor in user profile"
            ],
            "updatePoint": {
                "line": 16,
                "column": 51
            },
            "line": 16,
            "code": "  it('Should show `Top Contributor` text with badge', () => {\n    cy.contains('Top Contributor').parent().within(() => {\n      cy.contains('Top Contributor').should('be.visible');\n      cy.get('svg').should('be.visible');\n    });\n  }); // eslint-disable-next-line max-len",
            "file": "integration/top-contributor.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "Should take user to `Top Contributor` page when `Top Contributor` gets clicked",
            "suites": [
                "Top contributor in user profile"
            ],
            "updatePoint": {
                "line": 23,
                "column": 84
            },
            "line": 23,
            "code": "  it('Should take user to `Top Contributor` page when `Top Contributor` gets clicked', () => {\n    cy.contains('Top Contributor').should('have.attr', 'href', 'https://www.freecodecamp.org/news/freecodecamp-top-contributors/');\n  });",
            "file": "integration/top-contributor.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "Should show years when it was achieved",
            "suites": [
                "Top contributor in user profile"
            ],
            "updatePoint": {
                "line": 26,
                "column": 44
            },
            "line": 26,
            "code": "  it('Should show years when it was achieved', () => {\n    cy.contains('2017, 2018 and 2019').should('be.visible');\n  });",
            "file": "integration/top-contributor.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "should not redirect away from email sign up page on login",
            "suites": [
                "Privacy terms"
            ],
            "updatePoint": {
                "line": 2,
                "column": 63
            },
            "line": 2,
            "code": "  it('should not redirect away from email sign up page on login', () => {\n    // Flag used to identify if the `/update-privacy-terms` have been called\n    let privacyTermsUpdated = false;\n    cy.intercept('PUT', '/update-privacy-terms', () => {\n      privacyTermsUpdated = true;\n    }).as('updatePrivacyTerms'); // Seed dev user with `acceptedPrivacyTerms` unset\n\n    cy.exec('npm run seed -- --unset-privacy-terms'); // Go to the homepage and log in manually so we can assert the following:\n    // 1. Redirection to /email-sign-up works properly\n    // 2. The /update-privacy-terms has not been requested\n\n    cy.visit('/');\n    cy.get('[data-test-label=\"landing-small-cta\"]').click();\n    cy.location('pathname').should('contain', '/email-sign-up');\n    cy.wrap(privacyTermsUpdated).should('eq', false); // Assert email sign up elements and make sure we don't get redirected somewhere else\n\n    cy.title().should('contain', 'Email Sign Up');\n    cy.get('[data-cy=\"email-sign-up\"]').should('exist'); // Navigate away from this page via quincy emails which should unmount the component\n    // and request /update-privacy-terms\n\n    cy.get('button:contains(\"Yes please\")').click();\n    cy.wait('@updatePrivacyTerms').then(() => {\n      expect(privacyTermsUpdated).to.eq(true);\n      cy.contains('Welcome back');\n      cy.location('pathname').should('contain', '/learn');\n    });\n  });",
            "file": "integration/user/privacy-terms.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "should be possible to report a user from their profile page",
            "suites": [
                "Report User"
            ],
            "updatePoint": {
                "line": 6,
                "column": 65
            },
            "line": 6,
            "code": "  it('should be possible to report a user from their profile page', () => {\n    // Since going to a user page initially generates a 404, we have to ignore\n    // status codes on that request\n    cy.visit('/twaha', {\n      failOnStatusCode: false\n    }); // The following line is only required if you want to test it in development\n    // cy.contains('Preview custom 404 page').click();\n\n    cy.contains(\"Flag This User's Account for Abuse\").click();\n    cy.contains(\"Do you want to report twaha's portfolio for abuse?\");\n    cy.get('[id=report-user-textarea]').type('Some details');\n    cy.contains('Submit the report').click();\n    cy.location().should(loc => {\n      expect(loc.pathname).to.eq('/learn');\n    });\n    cy.contains('A report was sent to the team with foo@bar.com in copy');\n  });",
            "file": "integration/user/report-user.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/freeCodeCamp__freeCodeCamp/cypress"
        },
        {
            "name": "Should visit the content type builder",
            "suites": [
                "Test CTB",
                "Check create and update API"
            ],
            "updatePoint": {
                "line": 26,
                "column": 45
            },
            "line": 26,
            "code": "    it('Should visit the content type builder', () => {\n      cy.get('a[href=\"/admin/plugins/content-type-builder\"').click();\n      cy.url().should('equal', pluginUrl);\n    });",
            "file": "front/integrationOld/createApi_specs.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/strapi__strapi/packages/core/content-type-builder/tests"
        },
        {
            "name": "Should prevent the user from creating a camelCase api",
            "suites": [
                "Test CTB",
                "Check create and update API"
            ],
            "updatePoint": {
                "line": 30,
                "column": 61
            },
            "line": 30,
            "code": "    it('Should prevent the user from creating a camelCase api', () => {\n      cy.server();\n      cy.route('GET', `${backendUrl}/content-type-builder/models`).as('models');\n      cy.get('a[href=\"/admin/plugins/content-type-builder\"').click().wait('@models').get('#openAddCT').click().get('#name').type('camelCase').get('#description').type('\\n').get('#name').should('have.value', 'camelcase').get('#name').type('{selectall}').type('not camel-case').get('#description').type('{backspace}').get('#name').should('have.value', 'notcamelcase');\n    });",
            "file": "front/integrationOld/createApi_specs.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/strapi__strapi/packages/core/content-type-builder/tests"
        },
        {
            "name": "Should create a TAG API",
            "suites": [
                "Test CTB",
                "Check create and update API"
            ],
            "updatePoint": {
                "line": 35,
                "column": 31
            },
            "line": 35,
            "code": "    it('Should create a TAG API', function () {\n      cy.server();\n      cy.route('GET', `${backendUrl}/content-type-builder/models`).as('models');\n      cy.route('POST', `${backendUrl}/content-type-builder/models`).as('createModel');\n      cy.route('DELETE', `${backendUrl}/content-type-builder/models/tag`).as('deleteTag');\n      cy.get('a[href=\"/admin/plugins/content-type-builder\"').click().wait('@models'); // Open modal\n\n      cy.get('#openAddCT').click().wait(animDelay); // Check the modal is opened this will tell is if we have a build issue\n\n      cy.checkModalOpening();\n      cy.get('.modal').invoke('show'); // Fill the form\n\n      Object.keys(TAG_API).forEach(key => {\n        cy.log(key);\n        cy.get(`#${key}`).type(TAG_API[key]);\n      }); // Submit the form and navigate to product page\n\n      cy.submitForm().url().should('equal', `${pluginUrl}/models/tag`); // Open the attributes's modal\n\n      cy.get('#openAddAttr').click().wait(animDelay); // Check that we don't have a build error from reacstrap\n\n      cy.checkModalOpening().should('be.visible'); // Ensure the modal is opened to get #attrCardstring\n\n      cy.wait(1000).get('button#attrCardstring').click().get('input[name=\"name\"]').type('name').get('#continue').click();\n      cy.get('button#saveData').should('have.id', 'saveData').click().wait('@createModel').wait(frontLoadingDelay);\n      cy.get('#attributesList li').first().should('contain', 'name'); // Delete tag API\n\n      cy.get('a[href=\"/admin/plugins/content-type-builder\"]').click().wait(frontLoadingDelay).wait(frontLoadingDelay).get('#deletetag').click().checkModalOpening().should('be.visible').get('#ctaConfirm').click().wait('@deleteTag').wait(frontLoadingDelay).get('#ctbModelsList li').should('have.length', 4).waitRestart();\n    });",
            "file": "front/integrationOld/createApi_specs.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/strapi__strapi/packages/core/content-type-builder/tests"
        },
        {
            "name": "Should update PRODUCT API field and visit the create product page",
            "suites": [
                "Test CTB",
                "Check create and update API"
            ],
            "updatePoint": {
                "line": 64,
                "column": 73
            },
            "line": 64,
            "code": "    it('Should update PRODUCT API field and visit the create product page', () => {\n      cy.server();\n      cy.createProductAndTagApis(jwt);\n      cy.route(`${backendUrl}/content-type-builder/models/product?`).as('getProductModel');\n      cy.route('PUT', `${backendUrl}/content-type-builder/models/product`).as('updateProductModel');\n      cy.visit('/admin/plugins/content-type-builder/models/product#editproduct::attributestring::baseSettings::0');\n      cy.wait('@getProductModel');\n      cy.wait(frontLoadingDelay); // Open the modal via url\n\n      cy.checkModalOpening().should('be.visible').get('input[name=\"name\"]').type('{selectall}').type('updatedName').get('#continue').click();\n      cy.get('#attributesList li').first().contains('updatedName'); // Yield el in .nav containing 'About'\n\n      cy.get('button#saveData').click().wait('@updateProductModel').wait(frontLoadingDelay); // Check that we can still go to the create page\n\n      cy.get('a[href=\"/admin/plugins/content-manager/product?source=content-manager\"').click().get('button[label=\"content-manager.containers.List.addAnEntry\"').click();\n      cy.window().its('__store__').its('store').then(pluginStore => {\n        const displayedFields = pluginStore.getState().getIn(['content-manager_global', 'schema', 'models', 'product', 'editDisplay', 'fields']).toJS();\n        expect(displayedFields).to.include.members(['description', 'price', 'updatedName', 'bool', 'bool1', 'email']);\n      });\n      cy.waitRestart();\n    });",
            "file": "front/integrationOld/createApi_specs.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/strapi__strapi/packages/core/content-type-builder/tests"
        },
        {
            "name": "Should update PRODUCT API name and visit the create product page",
            "suites": [
                "Test CTB",
                "Check create and update API"
            ],
            "updatePoint": {
                "line": 85,
                "column": 72
            },
            "line": 85,
            "code": "    it('Should update PRODUCT API name and visit the create product page', () => {\n      cy.server(); // cy.createProductAndTagApis(jwt);\n\n      cy.route(`${backendUrl}/content-type-builder/models/product?`).as('getProductModel');\n      cy.route('PUT', `${backendUrl}/content-type-builder/models/product`).as('updateProductModel');\n      cy.visit('/admin/plugins/content-type-builder/models/product#editproduct::contentType::baseSettings');\n      cy.wait('@getProductModel');\n      cy.wait(frontLoadingDelay); // Open the modal via url\n\n      cy.checkModalOpening().should('be.visible').get('input[name=\"name\"]').type('{selectall}').type('produit').submitForm().wait('@updateProductModel').wait(frontLoadingDelay); // Check that we can still go to the create page\n\n      cy.get('a[href=\"/admin/plugins/content-manager/produit?source=content-manager\"').click().wait(frontLoadingDelay).get('button[label=\"content-manager.containers.List.addAnEntry\"').click().get('h1').should('have.id', 'addNewEntry'); // cy.window()\n      //   .its('__store__')\n      //   .its('content-manager')\n      //   .then(pluginStore => {\n      //     const displayedFields = pluginStore\n      //       .getState()\n      //       .getIn(['global', 'schema', 'models', 'product', 'editDisplay', 'fields'])\n      //       .toJS();\n      //     expect(displayedFields).to.include.members(['description', 'price', 'updatedName', 'bool', 'bool1', 'email']);\n      //   });\n    });",
            "file": "front/integrationOld/createApi_specs.js",
            "skipped": false,
            "dir": "tmp/mrdoob__three.js/tmp/strapi__strapi/packages/core/content-type-builder/tests"
        }
    ],
    "badge": "OpenZeppelin__openzeppelin-contracts.svg"
}