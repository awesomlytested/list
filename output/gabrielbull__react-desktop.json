{"repo":"gabrielbull/react-desktop","url":"https://github.com/gabrielbull/react-desktop","branch":"master","configs":[{"package":"react-desktop","lang":"js","dir":"test","framework":"mocha","pattern":"**/*.{js,ts}"}],"tests":[{"name":"create box component with label","suites":["Box"],"updatePoint":{"line":6,"column":37,"index":210},"line":6,"code":"  it('create box component with label', () => {\n    const string = renderToString( /*#__PURE__*/React.createElement(Box, {\n      label: \"My Label\"\n    }));\n    expect(string).to.match(/My Label/);\n  });","file":"tests/box.js","skipped":false,"dir":"test"},{"name":"create button component with text","suites":["Button"],"updatePoint":{"line":6,"column":39,"index":223},"line":6,"code":"  it('create button component with text', () => {\n    const string = renderToString( /*#__PURE__*/React.createElement(Button, null, \"Hello\"));\n    expect(string).to.match(/Hello/);\n  });","file":"tests/button.js","skipped":false,"dir":"test"},{"name":"create button component with one node","suites":["Button"],"updatePoint":{"line":10,"column":43,"index":414},"line":10,"code":"  it('create button component with one node', () => {\n    const string = renderToString( /*#__PURE__*/React.createElement(Button, null, /*#__PURE__*/React.createElement(\"span\", null, \"Hello\")));\n    expect(string).to.match(/<span.*>Hello/);\n  });","file":"tests/button.js","skipped":false,"dir":"test"},{"name":"create button component with multiple nodes","suites":["Button"],"updatePoint":{"line":14,"column":49,"index":667},"line":14,"code":"  it('create button component with multiple nodes', () => {\n    const string = renderToString( /*#__PURE__*/React.createElement(Button, null, /*#__PURE__*/React.createElement(\"span\", null, \"Hello\"), /*#__PURE__*/React.createElement(\"span\", null, \"World\")));\n    expect(string).to.match(/<span.*>Hello/);\n    expect(string).to.match(/<span.*>World/);\n  });","file":"tests/button.js","skipped":false,"dir":"test"},{"name":"create osx checkbox","suites":["Checkbox"],"updatePoint":{"line":7,"column":25,"index":274},"line":7,"code":"  it('create osx checkbox', () => {\n    const string = renderToString( /*#__PURE__*/React.createElement(CheckboxOSX, {\n      label: \"my label\"\n    }));\n    expect(string).to.match(/my label/);\n  });","file":"tests/checkbox.js","skipped":false,"dir":"test"},{"name":"create windows checkbox","suites":["Checkbox"],"updatePoint":{"line":13,"column":29,"index":477},"line":13,"code":"  it('create windows checkbox', () => {\n    const string = renderToString( /*#__PURE__*/React.createElement(CheckboxWindows, {\n      label: \"my label\"\n    }));\n    expect(string).to.match(/my label/);\n  });","file":"tests/checkbox.js","skipped":false,"dir":"test"},{"name":"works","suites":["Color","#hexToRgb"],"updatePoint":{"line":6,"column":13,"index":186},"line":6,"code":"    it('works', () => {\n      expect(Color.hexToRgb('#000000')).to.deep.equal({\n        r: 0,\n        g: 0,\n        b: 0\n      });\n      expect(Color.hexToRgb('#1883d7')).to.deep.equal({\n        r: 24,\n        g: 131,\n        b: 215\n      });\n      expect(Color.hexToRgb('#ffffff')).to.deep.equal({\n        r: 255,\n        g: 255,\n        b: 255\n      });\n      expect(Color.hexToRgb('#000')).to.deep.equal({\n        r: 0,\n        g: 0,\n        b: 0\n      });\n      expect(Color.hexToRgb('#fff')).to.deep.equal({\n        r: 255,\n        g: 255,\n        b: 255\n      });\n    });","file":"tests/color.js","skipped":false,"dir":"test"},{"name":"works","suites":["Color","#transparentize"],"updatePoint":{"line":35,"column":13,"index":808},"line":35,"code":"    it('works', () => {\n      expect(Color.transparentize('#000000', 0)).to.deep.equal('rgba(0, 0, 0, 1)');\n      expect(Color.transparentize('#000000', 0.4)).to.deep.equal('rgba(0, 0, 0, 0.6)');\n      expect(Color.transparentize('#000000', 0.7)).to.deep.equal('rgba(0, 0, 0, 0.3)');\n      expect(Color.transparentize('#000000', 1)).to.deep.equal('rgba(0, 0, 0, 0)');\n    });","file":"tests/color.js","skipped":false,"dir":"test"},{"name":"works","suites":["Color","#convertColor"],"updatePoint":{"line":45,"column":13,"index":1303},"line":45,"code":"    it('works', () => {\n      expect(Color.convertColor('white')).to.equal('#ffffff');\n      expect(Color.convertColor('blue')).to.equal('#0000ff');\n      expect(Color.convertColor('black')).to.equal('#000000');\n    });","file":"tests/color.js","skipped":false,"dir":"test"},{"name":"works","suites":["Color","#isDarkColor"],"updatePoint":{"line":52,"column":13,"index":1564},"line":52,"code":"    it('works', () => {\n      expect(Color.isDarkColor('#000000')).to.be.true;\n      expect(Color.isDarkColor('#ffffff')).to.be.false;\n    });","file":"tests/color.js","skipped":false,"dir":"test"},{"name":"create osx dialog","suites":["Dialog"],"updatePoint":{"line":6,"column":23,"index":205},"line":6,"code":"  it('create osx dialog', () => {\n    const string = renderToString( /*#__PURE__*/React.createElement(Dialog, null));\n    expect(string).to.match(/div/);\n  });","file":"tests/dialog.js","skipped":false,"dir":"test"},{"name":"detect os","suites":["index"],"updatePoint":{"line":5,"column":15,"index":163},"line":5,"code":"  it('detect os', () => {\n    expect(components.os()).to.be.oneOf([MACOS, WINDOWS]);\n  });","file":"tests/index.js","skipped":false,"dir":"test"},{"name":"should be exported","suites":["index"],"updatePoint":{"line":8,"column":24,"index":263},"line":8,"code":"  it('should be exported', () => {\n    expect(components.Box).to.exist;\n    expect(components.Button).to.exist;\n    expect(components.Checkbox).to.exist;\n    expect(components.Dialog).to.exist;\n    expect(components.Label).to.exist;\n    expect(components.Link).to.exist;\n    expect(components.ListView).to.exist;\n    expect(components.ListViewFooter).to.exist;\n    expect(components.ListViewHeader).to.exist;\n    expect(components.ListViewRow).to.exist;\n    expect(components.ListViewSection).to.exist;\n    expect(components.ListViewSectionHeader).to.exist;\n    expect(components.ListViewSeparator).to.exist;\n    expect(components.MasterDetailsView).to.exist;\n    expect(components.NavPane).to.exist;\n    expect(components.Pin).to.exist;\n    expect(components.ProgressCircle).to.exist;\n    expect(components.Radio).to.exist;\n    expect(components.SearchField).to.exist;\n    expect(components.SegmentedControl).to.exist;\n    expect(components.SegmentedControlItem).to.exist;\n    expect(components.Text).to.exist;\n    expect(components.TextInput).to.exist;\n    expect(components.TitleBar).to.exist;\n    expect(components.Toolbar).to.exist;\n    expect(components.ToolbarNav).to.exist;\n    expect(components.ToolbarNavItem).to.exist;\n    expect(components.View).to.exist;\n    expect(components.Window).to.exist;\n  });","file":"tests/index.js","skipped":false,"dir":"test"},{"name":"create label component with text","suites":["Label"],"updatePoint":{"line":6,"column":38,"index":219},"line":6,"code":"  it('create label component with text', () => {\n    const string = renderToString( /*#__PURE__*/React.createElement(Label, null, \"Hello\"));\n    expect(string).to.match(/Hello/);\n  });","file":"tests/label.js","skipped":false,"dir":"test"},{"name":"create label component with one node","suites":["Label"],"updatePoint":{"line":10,"column":42,"index":408},"line":10,"code":"  it('create label component with one node', () => {\n    const string = renderToString( /*#__PURE__*/React.createElement(Label, null, /*#__PURE__*/React.createElement(\"span\", null, \"Hello\")));\n    expect(string).to.match(/<span.*>Hello/);\n  });","file":"tests/label.js","skipped":false,"dir":"test"},{"name":"create label component with multiple nodes","suites":["Label"],"updatePoint":{"line":14,"column":48,"index":659},"line":14,"code":"  it('create label component with multiple nodes', () => {\n    const string = renderToString( /*#__PURE__*/React.createElement(Label, null, /*#__PURE__*/React.createElement(\"span\", null, \"Hello\"), /*#__PURE__*/React.createElement(\"span\", null, \"World\")));\n    expect(string).to.match(/<span.*>Hello/);\n    expect(string).to.match(/<span.*>World/);\n  });","file":"tests/label.js","skipped":false,"dir":"test"},{"name":"create osx link","suites":["Link"],"updatePoint":{"line":6,"column":21,"index":197},"line":6,"code":"  it('create osx link', () => {\n    const string = renderToString( /*#__PURE__*/React.createElement(Link, null, \"My Link\"));\n    expect(string).to.match(/My Link/);\n  });","file":"tests/link.js","skipped":false,"dir":"test"},{"name":"create list view component","suites":["ListView"],"updatePoint":{"line":12,"column":32,"index":609},"line":12,"code":"  it('create list view component', () => {\n    const string = renderToString( /*#__PURE__*/React.createElement(ListView, null));\n    expect(string).to.match(/<section/);\n  });","file":"tests/listView.js","skipped":false,"dir":"test"},{"name":"create list view footer component","suites":["ListView"],"updatePoint":{"line":16,"column":39,"index":792},"line":16,"code":"  it('create list view footer component', () => {\n    const string = renderToString( /*#__PURE__*/React.createElement(ListViewFooter, null));\n    expect(string).to.match(/<footer/);\n  });","file":"tests/listView.js","skipped":false,"dir":"test"},{"name":"create list view header component","suites":["ListView"],"updatePoint":{"line":20,"column":39,"index":980},"line":20,"code":"  it('create list view header component', () => {\n    const string = renderToString( /*#__PURE__*/React.createElement(ListViewHeader, null));\n    expect(string).to.match(/<header/);\n  });","file":"tests/listView.js","skipped":false,"dir":"test"},{"name":"create list view row component","suites":["ListView"],"updatePoint":{"line":24,"column":36,"index":1165},"line":24,"code":"  it('create list view row component', () => {\n    const string = renderToString( /*#__PURE__*/React.createElement(ListViewRow, null));\n    expect(string).to.match(/<li/);\n  });","file":"tests/listView.js","skipped":false,"dir":"test"},{"name":"create list view section component","suites":["ListView"],"updatePoint":{"line":28,"column":40,"index":1347},"line":28,"code":"  it('create list view section component', () => {\n    const string = renderToString( /*#__PURE__*/React.createElement(ListViewSection, null));\n    expect(string).to.match(/<section/);\n  });","file":"tests/listView.js","skipped":false,"dir":"test"},{"name":"create list view section header component","suites":["ListView"],"updatePoint":{"line":32,"column":47,"index":1545},"line":32,"code":"  it('create list view section header component', () => {\n    const string = renderToString( /*#__PURE__*/React.createElement(ListViewSectionHeader, null));\n    expect(string).to.match(/<header/);\n  });","file":"tests/listView.js","skipped":false,"dir":"test"},{"name":"create list view separator component","suites":["ListView"],"updatePoint":{"line":36,"column":42,"index":1743},"line":36,"code":"  it('create list view separator component', () => {\n    const string = renderToString( /*#__PURE__*/React.createElement(ListViewSeparator, null));\n    expect(string).to.match(/<hr/);\n  });","file":"tests/listView.js","skipped":false,"dir":"test"},{"name":"should be exported","suites":["OSX"],"updatePoint":{"line":4,"column":24,"index":427},"line":4,"code":"  it('should be exported', () => {\n    expect(Box).to.exist;\n    expect(Button).to.exist;\n    expect(Checkbox).to.exist;\n    expect(Dialog).to.exist;\n    expect(Label).to.exist;\n    expect(Link).to.exist;\n    expect(ListView).to.exist;\n    expect(ListViewFooter).to.exist;\n    expect(ListViewHeader).to.exist;\n    expect(ListViewRow).to.exist;\n    expect(ListViewSection).to.exist;\n    expect(ListViewSectionHeader).to.exist;\n    expect(ListViewSeparator).to.exist;\n    expect(Pin).to.exist;\n    expect(ProgressCircle).to.exist;\n    expect(Radio).to.exist;\n    expect(SearchField).to.exist;\n    expect(SegmentedControl).to.exist;\n    expect(SegmentedControlItem).to.exist;\n    expect(Text).to.exist;\n    expect(TextInput).to.exist;\n    expect(TitleBar).to.exist;\n    expect(Toolbar).to.exist;\n    expect(ToolbarNav).to.exist;\n    expect(ToolbarNavItem).to.exist;\n    expect(View).to.exist;\n    expect(Window).to.exist;\n  });","file":"tests/macOs.js","skipped":false,"dir":"test"},{"name":"create osx pin","suites":["Pin"],"updatePoint":{"line":6,"column":20,"index":193},"line":6,"code":"  it('create osx pin', () => {\n    const string = renderToString( /*#__PURE__*/React.createElement(Pin, {\n      length: 1\n    }));\n    expect(string).to.match(/input/);\n  });","file":"tests/pin.js","skipped":false,"dir":"test"},{"name":"create osx progress circle","suites":["Progress Circle"],"updatePoint":{"line":7,"column":32,"index":314},"line":7,"code":"  it('create osx progress circle', () => {\n    const string = renderToString( /*#__PURE__*/React.createElement(ProgressCirecleOSX, {\n      size: 50\n    }));\n    expect(string).to.match(/width: ?50px/);\n  });","file":"tests/progressCircle.js","skipped":false,"dir":"test"},{"name":"create windows progress circle","suites":["Progress Circle"],"updatePoint":{"line":13,"column":36,"index":526},"line":13,"code":"  it('create windows progress circle', () => {\n    const string = renderToString( /*#__PURE__*/React.createElement(ProgressCirecleWindows, {\n      size: 50\n    }));\n    expect(string).to.match(/width: ?50px/);\n  });","file":"tests/progressCircle.js","skipped":false,"dir":"test"},{"name":"create search field component","suites":["SearchField"],"updatePoint":{"line":6,"column":35,"index":232},"line":6,"code":"  it('create search field component', () => {\n    const string = renderToString( /*#__PURE__*/React.createElement(SearchField, null));\n    expect(string).to.match(/<input/);\n  });","file":"tests/searchField.js","skipped":false,"dir":"test"},{"name":"create osx text","suites":["Text"],"updatePoint":{"line":7,"column":21,"index":250},"line":7,"code":"  it('create osx text', () => {\n    const string = renderToString( /*#__PURE__*/React.createElement(TextOSX, null, \"My Text\"));\n    expect(string).to.match(/My Text/);\n  });","file":"tests/text.js","skipped":false,"dir":"test"},{"name":"create windows text","suites":["Text"],"updatePoint":{"line":11,"column":25,"index":428},"line":11,"code":"  it('create windows text', () => {\n    const string = renderToString( /*#__PURE__*/React.createElement(TextWindows, null, \"My Text\"));\n    expect(string).to.match(/My Text/);\n  });","file":"tests/text.js","skipped":false,"dir":"test"},{"name":"create text input component with a placeholder","suites":["TextArea","Windows"],"updatePoint":{"line":8,"column":54,"index":326},"line":8,"code":"    it('create text input component with a placeholder', () => {\n      const string = renderToString( /*#__PURE__*/React.createElement(TextArea, {\n        placeholder: \"Placeholder Text\"\n      }));\n      expect(string).to.match(/placeholder=\"Placeholder Text\"/);\n    });","file":"tests/textArea.js","skipped":false,"dir":"test"},{"name":"create text input component with default text value","suites":["TextArea","Windows"],"updatePoint":{"line":14,"column":59,"index":602},"line":14,"code":"    it('create text input component with default text value', () => {\n      const string = renderToString( /*#__PURE__*/React.createElement(TextArea, {\n        defaultValue: \"Default Text\"\n      }));\n      expect(string).to.match(/>Default Text</);\n    });","file":"tests/textArea.js","skipped":false,"dir":"test"},{"name":"create text input component with a placeholder","suites":["TextArea","macOS"],"updatePoint":{"line":22,"column":54,"index":888},"line":22,"code":"    it('create text input component with a placeholder', () => {\n      const string = renderToString( /*#__PURE__*/React.createElement(TextAreaOSX, {\n        placeholder: \"Placeholder Text\"\n      }));\n      expect(string).to.match(/placeholder=\"Placeholder Text\"/);\n    });","file":"tests/textArea.js","skipped":false,"dir":"test"},{"name":"create text input component with a centered placeholder","suites":["TextArea","macOS"],"updatePoint":{"line":28,"column":63,"index":1171},"line":28,"code":"    it('create text input component with a centered placeholder', () => {\n      const string = renderToString( /*#__PURE__*/React.createElement(TextAreaOSX, {\n        centerPlaceholder: true,\n        placeholder: \"Placeholder Text\"\n      }));\n      expect(string).to.match(/Placeholder Text<\\/span>/);\n      expect(string).not.to.match(/placeholder=\"Placeholder Text\"/);\n    });","file":"tests/textArea.js","skipped":false,"dir":"test"},{"name":"create text input component with default text value","suites":["TextArea","macOS"],"updatePoint":{"line":36,"column":59,"index":1546},"line":36,"code":"    it('create text input component with default text value', () => {\n      const string = renderToString( /*#__PURE__*/React.createElement(TextAreaOSX, {\n        defaultValue: \"Default Text\"\n      }));\n      expect(string).to.match(/>Default Text</);\n    });","file":"tests/textArea.js","skipped":false,"dir":"test"},{"name":"create text input component with a placeholder","suites":["TextInput","Windows"],"updatePoint":{"line":8,"column":54,"index":331},"line":8,"code":"    it('create text input component with a placeholder', () => {\n      const string = renderToString( /*#__PURE__*/React.createElement(TextInput, {\n        placeholder: \"Placeholder Text\"\n      }));\n      expect(string).to.match(/placeholder=\"Placeholder Text\"/);\n    });","file":"tests/textInput.js","skipped":false,"dir":"test"},{"name":"create text input component with default text value","suites":["TextInput","Windows"],"updatePoint":{"line":14,"column":59,"index":608},"line":14,"code":"    it('create text input component with default text value', () => {\n      const string = renderToString( /*#__PURE__*/React.createElement(TextInput, {\n        defaultValue: \"Default Text\"\n      }));\n      expect(string).to.match(/value=\"Default Text\"/);\n    });","file":"tests/textInput.js","skipped":false,"dir":"test"},{"name":"should create a password input field","suites":["TextInput","Windows"],"updatePoint":{"line":20,"column":44,"index":857},"line":20,"code":"    it('should create a password input field', () => {\n      const string = renderToString( /*#__PURE__*/React.createElement(TextInput, {\n        password: true\n      }));\n      expect(string).to.match(/type=\"password\"/);\n    });","file":"tests/textInput.js","skipped":false,"dir":"test"},{"name":"create text input component with a placeholder","suites":["TextInput","macOS"],"updatePoint":{"line":28,"column":54,"index":1131},"line":28,"code":"    it('create text input component with a placeholder', () => {\n      const string = renderToString( /*#__PURE__*/React.createElement(TextFieldOSX, {\n        placeholder: \"Placeholder Text\"\n      }));\n      expect(string).to.match(/placeholder=\"Placeholder Text\"/);\n    });","file":"tests/textInput.js","skipped":false,"dir":"test"},{"name":"create text input component with a centered placeholder","suites":["TextInput","macOS"],"updatePoint":{"line":34,"column":63,"index":1415},"line":34,"code":"    it('create text input component with a centered placeholder', () => {\n      const string = renderToString( /*#__PURE__*/React.createElement(TextFieldOSX, {\n        centerPlaceholder: true,\n        placeholder: \"Placeholder Text\"\n      }));\n      expect(string).to.match(/Placeholder Text<\\/span>/);\n      expect(string).not.to.match(/placeholder=\"Placeholder Text\"/);\n    });","file":"tests/textInput.js","skipped":false,"dir":"test"},{"name":"create text input component with default text value","suites":["TextInput","macOS"],"updatePoint":{"line":42,"column":59,"index":1791},"line":42,"code":"    it('create text input component with default text value', () => {\n      const string = renderToString( /*#__PURE__*/React.createElement(TextFieldOSX, {\n        defaultValue: \"Default Text\"\n      }));\n      expect(string).to.match(/value=\"Default Text\"/);\n    });","file":"tests/textInput.js","skipped":false,"dir":"test"},{"name":"should create a password input field","suites":["TextInput","macOS"],"updatePoint":{"line":48,"column":44,"index":2043},"line":48,"code":"    it('should create a password input field', () => {\n      const string = renderToString( /*#__PURE__*/React.createElement(TextFieldOSX, {\n        password: true\n      }));\n      expect(string).to.match(/type=\"password\"/);\n    });","file":"tests/textInput.js","skipped":false,"dir":"test"},{"name":"create toolbar component","suites":["Toolbar"],"updatePoint":{"line":6,"column":30,"index":215},"line":6,"code":"  it('create toolbar component', () => {\n    const string = renderToString( /*#__PURE__*/React.createElement(Toolbar, null));\n    expect(string).to.match(/<div/);\n  });","file":"tests/toolbar.js","skipped":false,"dir":"test"},{"name":"create toolbar nav component","suites":["ToolbarNav"],"updatePoint":{"line":7,"column":34,"index":292},"line":7,"code":"  it('create toolbar nav component', () => {\n    const string = renderToString( /*#__PURE__*/React.createElement(ToolbarNav, null));\n    expect(string).to.match(/<div/);\n  });","file":"tests/toolbarNav.js","skipped":false,"dir":"test"},{"name":"create toolbar nav item component","suites":["ToolbarNav"],"updatePoint":{"line":11,"column":39,"index":473},"line":11,"code":"  it('create toolbar nav item component', () => {\n    const string = renderToString( /*#__PURE__*/React.createElement(ToolbarNavItem, null));\n    expect(string).to.match(/<a/);\n  });","file":"tests/toolbarNav.js","skipped":false,"dir":"test"},{"name":"should be exported","suites":["Windows"],"updatePoint":{"line":4,"column":24,"index":226},"line":4,"code":"  it('should be exported', () => {\n    expect(Button).to.exist;\n    expect(Checkbox).to.exist;\n    expect(Label).to.exist;\n    expect(MasterDetailsView).to.exist;\n    expect(NavPane).to.exist;\n    expect(ProgressCircle).to.exist;\n    expect(Text).to.exist;\n    expect(TextInput).to.exist;\n    expect(TitleBar).to.exist;\n    expect(View).to.exist;\n    expect(Window).to.exist;\n  });","file":"tests/windows.js","skipped":false,"dir":"test"}]}