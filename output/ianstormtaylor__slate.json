{"repo":"ianstormtaylor/slate","url":"https://github.com/ianstormtaylor/slate","branch":"main","configs":[{"package":"slate-packages","lang":"js","dir":"cypress","framework":"mocha","pattern":"**/*.{js,ts}"},{"package":"slate-history","lang":"ts","dir":"packages/slate-history/test","framework":"mocha","pattern":"**/*.{js,ts}"},{"package":"slate-hyperscript","lang":"ts","dir":"packages/slate-hyperscript/test","framework":"mocha","pattern":"**/*.{js,ts}"},{"package":"slate-react","lang":"js","dir":"packages/slate-react/test","framework":"mocha","pattern":"**/*.{js,ts}"},{"package":"slate","lang":"ts","dir":"packages/slate/test","framework":"mocha","pattern":"**/*.{js,ts}"}],"tests":[{"name":"checks the bullet when clicked","suites":["Check-lists example"],"updatePoint":{"line":5,"column":36},"line":5,"code":"  it('checks the bullet when clicked', () => {\n    const slateNodeElement = 'div[data-slate-node=\"element\"]';\n    cy.get(slateNodeElement).should('have.length', 6);\n    cy.get(slateNodeElement).eq(3).should('contain', 'Criss-cross!').find('span').eq(1).should('have.css', 'text-decoration-line', 'line-through'); // Unchecking the checkboxes should un-cross the corresponding text.\n\n    cy.get(slateNodeElement).eq(3).should('contain', 'Criss-cross!').find('span').eq(0).find('input').uncheck().get(slateNodeElement).eq(3).should('contain', 'Criss-cross!').find('span').eq(1).should('have.css', 'text-decoration-line', 'none');\n    cy.get('p[data-slate-node=\"element\"]').should('have.length', 2);\n  });","file":"integration/examples/check-lists.ts","skipped":false,"dir":"cypress"},{"name":"highlights HTML tags","suites":["code highlighting"],"updatePoint":{"line":7,"column":26},"line":7,"code":"  it('highlights HTML tags', () => {\n    cy.get(slateEditor).find('span').eq(0).find(leafNode).eq(0).should('contain', '<h1>').should('have.css', 'color', 'rgb(153, 0, 85)');\n  });","file":"integration/examples/code-highlighting.ts","skipped":false,"dir":"cypress"},{"name":"highlights javascript syntax","suites":["code highlighting"],"updatePoint":{"line":10,"column":34},"line":10,"code":"  it('highlights javascript syntax', {\n    defaultCommandTimeout: 10000 // test was not passing within 4s default\n\n  }, () => {\n    const JSCode = 'const slateVar = 30;{enter}';\n    cy.get('select').select('JavaScript'); // Select the 'JavaScript' option\n\n    cy.get('select').should('have.value', 'js'); // Confirm value to avoid race condition\n\n    cy.get(slateEditor).type('{movetostart}').type(JSCode); // Type JavaScript code\n\n    cy.get(slateEditor).find('span').eq(0).find(leafNode).eq(0).should('contain', 'const').should('have.css', 'color', 'rgb(0, 119, 170)');\n  });","file":"integration/examples/code-highlighting.ts","skipped":false,"dir":"cypress"},{"name":"checks for the elements","suites":["editable voids"],"updatePoint":{"line":15,"column":29},"line":15,"code":"  it('checks for the elements', () => {\n    elements.forEach(({\n      tag,\n      count\n    }) => {\n      cy.get(tag).should('have.length', count);\n    });\n  });","file":"integration/examples/editable-voids.ts","skipped":false,"dir":"cypress"},{"name":"should double the elements","suites":["editable voids"],"updatePoint":{"line":23,"column":32},"line":23,"code":"  it('should double the elements', () => {\n    // click the `+` sign to duplicate the editable void\n    cy.get('span.material-icons').eq(1).click();\n    elements.forEach(({\n      tag,\n      count\n    }) => {\n      cy.get(tag).should('have.length', count * 2);\n    });\n  });","file":"integration/examples/editable-voids.ts","skipped":false,"dir":"cypress"},{"name":"contains embeded","suites":["embeds example"],"updatePoint":{"line":6,"column":22},"line":6,"code":"  it('contains embeded', () => {\n    cy.get(slateEditor).find('iframe').should('exist').should('have.length', 1);\n  });","file":"integration/examples/embeds.ts","skipped":false,"dir":"cypress"},{"name":"checks for the elements","suites":["forced layout example"],"updatePoint":{"line":12,"column":29},"line":12,"code":"  it('checks for the elements', () => {\n    elements.forEach(({\n      tag,\n      count\n    }) => {\n      cy.get(tag).should('have.length', count);\n    });\n  });","file":"integration/examples/forced-layout.ts","skipped":false,"dir":"cypress"},{"name":"checks if elements persist even after everything is deleted","suites":["forced layout example"],"updatePoint":{"line":20,"column":65},"line":20,"code":"  it('checks if elements persist even after everything is deleted', () => {\n    // clear the textbox\n    cy.get('div[role=\"textbox\"]').type(`{selectall}`).clear();\n    elements.forEach(({\n      tag,\n      count\n    }) => {\n      cy.get(tag).should('have.length', count);\n    });\n  });","file":"integration/examples/forced-layout.ts","skipped":false,"dir":"cypress"},{"name":"hovering toolbar appears","suites":["hovering toolbar example"],"updatePoint":{"line":5,"column":30},"line":5,"code":"  it('hovering toolbar appears', () => {\n    cy.get('div').eq(12).should('not.exist');\n    cy.get('span[data-slate-string=\"true\"]').eq(0).type(`{selectall}`).get('div').eq(12).should('exist').should('have.css', 'opacity', '1').find('span.material-icons').should('have.length', 3);\n  });","file":"integration/examples/hovering-toolbar.ts","skipped":false,"dir":"cypress"},{"name":"contains image","suites":["huge document example"],"updatePoint":{"line":12,"column":20},"line":12,"code":"  it('contains image', () => {\n    elements.forEach(({\n      tag,\n      count\n    }) => {\n      cy.get(tag).should('have.length', count);\n    });\n  });","file":"integration/examples/huge-document.ts","skipped":false,"dir":"cypress"},{"name":"should be editable","suites":["iframe editor"],"updatePoint":{"line":15,"column":24},"line":15,"code":"  it('should be editable', () => {\n    getIframeBody().findByRole('textbox').type('{movetostart}').type('Hello World').should('contain.text', 'Hello World');\n  });","file":"integration/examples/iframe.ts","skipped":false,"dir":"cypress"},{"name":"contains image","suites":["images example"],"updatePoint":{"line":5,"column":20},"line":5,"code":"  it('contains image', () => {\n    cy.findByRole('textbox').find('img').should('exist').should('have.length', 2);\n  });","file":"integration/examples/images.ts","skipped":false,"dir":"cypress"},{"name":"contains link","suites":["Inlines example"],"updatePoint":{"line":5,"column":19},"line":5,"code":"  it('contains link', () => {\n    cy.findByRole('textbox').find('a').should('contain.text', 'hyperlink');\n  });","file":"integration/examples/inlines.ts","skipped":false,"dir":"cypress"},{"name":"checks for markdown","suites":["markdown preview"],"updatePoint":{"line":7,"column":25},"line":7,"code":"  it('checks for markdown', () => {\n    cy.get(slateEditor).find(markdown).should('have.length', 9);\n    cy.get(slateEditor).type('{movetoend}{enter}## Try it out!{enter}').find(markdown).should('have.length', 10);\n  });","file":"integration/examples/markdown-preview.ts","skipped":false,"dir":"cypress"},{"name":"contains quote","suites":["On markdown-shortcuts example"],"updatePoint":{"line":5,"column":20},"line":5,"code":"  it('contains quote', () => {\n    cy.findByRole('textbox').find('blockquote').should('contain.text', 'A wise quote.');\n  });","file":"integration/examples/markdown-shortcuts.ts","skipped":false,"dir":"cypress"},{"name":"can add list items","suites":["On markdown-shortcuts example"],"updatePoint":{"line":8,"column":24},"line":8,"code":"  it('can add list items', () => {\n    cy.findByRole('textbox').find('ul').should('not.exist');\n    cy.findByRole('textbox') // need wait() here otherwise the slate component is not fully mounted yet sometimes\n    .wait(1000).type('{movetostart}* 1st Item{enter}2nd Item{enter}3rd Item{enter}{backspace}');\n    cy.get('ul > li');\n    cy.get('ul > li').should('have.length', 3);\n    cy.get('ul > li').eq(0).should('contain.text', '1st Item').get('ul > li').eq(1).should('contain.text', '2nd Item').get('ul > li').eq(2).should('contain.text', '3rd Item');\n  });","file":"integration/examples/markdown-shortcuts.ts","skipped":false,"dir":"cypress"},{"name":"can add a h1 item","suites":["On markdown-shortcuts example"],"updatePoint":{"line":16,"column":23},"line":16,"code":"  it('can add a h1 item', () => {\n    cy.findByRole('textbox').find('h1').should('not.exist');\n    cy.findByRole('textbox').type('{enter}{leftarrow}# Heading');\n    cy.get('h1').should('have.length', 1);\n    cy.findByRole('textbox').find('h1').should('contain.text', 'Heading');\n  });","file":"integration/examples/markdown-shortcuts.ts","skipped":false,"dir":"cypress"},{"name":"renders mention element","suites":["mentions example"],"updatePoint":{"line":3,"column":29},"line":3,"code":"  it('renders mention element', () => {\n    cy.findByRole('textbox').dataCy('mention-R2-D2').should('exist').dataCy('mention-Mace-Windu').should('exist');\n  });","file":"integration/examples/mentions.ts","skipped":false,"dir":"cypress"},{"name":"shows list of mentions","suites":["mentions example"],"updatePoint":{"line":6,"column":28},"line":6,"code":"  it('shows list of mentions', () => {\n    cy.findByRole('textbox').type('{movetoend}').type(' @ma').dataCy('mentions-portal').should('exist');\n  });","file":"integration/examples/mentions.ts","skipped":false,"dir":"cypress"},{"name":"inserts on enter from list","suites":["mentions example"],"updatePoint":{"line":9,"column":32},"line":9,"code":"  it('inserts on enter from list', () => {\n    cy.findByRole('textbox').type('{movetoend}').type(' @Ja').type('{enter}').dataCy('mention-Jabba').should('exist');\n  });","file":"integration/examples/mentions.ts","skipped":false,"dir":"cypress"},{"name":"pasted bold text uses <strong>","suites":["paste html example"],"updatePoint":{"line":16,"column":36},"line":16,"code":"  it('pasted bold text uses <strong>', () => {\n    cyNewPasteHtml('<strong>Hello Bold</strong>').get('strong').should('contain.text', 'Hello');\n  });","file":"integration/examples/paste-html.ts","skipped":false,"dir":"cypress"},{"name":"pasted code uses <code>","suites":["paste html example"],"updatePoint":{"line":19,"column":29},"line":19,"code":"  it('pasted code uses <code>', () => {\n    cyNewPasteHtml('<code>console.log(\"hello from slate!\")</code>').get('code').should('contain.text', 'slate!');\n  });","file":"integration/examples/paste-html.ts","skipped":false,"dir":"cypress"},{"name":"renders custom placeholder","suites":["placeholder example"],"updatePoint":{"line":3,"column":32},"line":3,"code":"  it('renders custom placeholder', () => {\n    const placeholderElement = cy.get('[data-slate-placeholder=true]');\n    placeholderElement.should('contain.text', 'Type something').get('pre').should('contain.text', 'renderPlaceholder');\n  });","file":"integration/examples/placeholder.ts","skipped":false,"dir":"cypress"},{"name":"inserts text when typed","suites":["plaintext example"],"updatePoint":{"line":3,"column":29},"line":3,"code":"  it('inserts text when typed', () => {\n    cy.findByRole('textbox').type('{movetostart}').type('Hello World').should('contain.text', 'Hello World');\n  });","file":"integration/examples/plaintext.ts","skipped":false,"dir":"cypress"},{"name":"should not be editable","suites":["readonly editor"],"updatePoint":{"line":5,"column":28},"line":5,"code":"  it('should not be editable', () => {\n    const slateEditor = '[data-slate-editor=\"true\"]';\n    cy.get(slateEditor).should('not.have.attr', 'contentEditable', 'true').should('not.have.attr', 'role', 'textbox').click().should('not.be.focused');\n  });","file":"integration/examples/read-only.ts","skipped":false,"dir":"cypress"},{"name":"renders rich text","suites":["On richtext example"],"updatePoint":{"line":3,"column":23},"line":3,"code":"  it('renders rich text', () => {\n    cy.findByRole('textbox').get('strong').should('contain.text', 'rich').get('blockquote').should('contain.text', 'wise quote');\n  });","file":"integration/examples/richtext.ts","skipped":false,"dir":"cypress"},{"name":"inserts text when typed","suites":["On richtext example"],"updatePoint":{"line":6,"column":29},"line":6,"code":"  it('inserts text when typed', () => {\n    cy.findByRole('textbox').type('{movetostart}').type('Hello World').should('contain.text', 'Hello World');\n  });","file":"integration/examples/richtext.ts","skipped":false,"dir":"cypress"},{"name":"highlights the searched text","suites":["search highlighting"],"updatePoint":{"line":3,"column":34},"line":3,"code":"  it('highlights the searched text', () => {\n    const searchField = 'input[type=\"search\"]';\n    const highlightedText = 'search-highlighted';\n    cy.get(searchField).type('text');\n    cy.dataCy(highlightedText).should('have.length', 2);\n  });","file":"integration/examples/search-highlighting.ts","skipped":false,"dir":"cypress"},{"name":"renders slate editor inside nested shadow","suites":["shadow-dom example"],"updatePoint":{"line":3,"column":47},"line":3,"code":"  it('renders slate editor inside nested shadow', () => {\n    const outerShadow = cy.dataCy('outer-shadow-root').shadow();\n    const innerShadow = outerShadow.find('> div').shadow();\n    innerShadow.findByRole('textbox').should('exist');\n  });","file":"integration/examples/shadow-dom.ts","skipped":false,"dir":"cypress"},{"name":"table tag rendered","suites":["table example"],"updatePoint":{"line":5,"column":24},"line":5,"code":"  it('table tag rendered', () => {\n    cy.findByRole('textbox').get('table').should('exist');\n  });","file":"integration/examples/tables.ts","skipped":false,"dir":"cypress"},{"name":"should be called on all nodes in document","suites":["slate-react","Editable","decorate"],"updatePoint":{"line":23,"column":51},"line":23,"code":"      it('should be called on all nodes in document', () => {\n        const editor = SlateReact.withReact(Slate.createEditor());\n        const value = [{\n          type: 'block',\n          children: [{\n            text: ''\n          }]\n        }];\n        let count = 0;\n\n        const decorate = ([node, path]) => {\n          count++;\n          return [];\n        };\n\n        const el = /*#__PURE__*/React.createElement(SlateReact.Slate, {\n          editor,\n          value\n        }, /*#__PURE__*/React.createElement(SlateReact.Editable, {\n          decorate\n        }));\n        TestRenderer.create(el, {\n          createNodeMock\n        }); // editor, block, text\n\n        assert.strictEqual(count, 3);\n      });","file":"index.js","skipped":false,"dir":"packages/slate-react/test"},{"name":"Sample string , boundary ","suites":["getCharacterDistance - "],"updatePoint":{"line":148,"column":65},"line":148,"code":"        it(`Sample string ${label}, boundary ${isRTL ? i : i + 1}`, () => {\n          assert.strictEqual(getCharacterDistance(str, isRTL), strs[i].length)\n        })","file":"utils/string.ts","skipped":false,"dir":"packages/slate/test"}]}