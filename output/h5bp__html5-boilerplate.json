{"repo":"h5bp/html5-boilerplate","url":"https://github.com/h5bp/html5-boilerplate","branch":"main","configs":[{"package":"html5-boilerplate","lang":"js","dir":"test","framework":"mocha","pattern":"**/*.{js,ts}"}],"tests":[{"name":"\".htaccess\" should have the \"ErrorDocument...\" line uncommented","suites":["Test if the files from the \"\" directory have the expected content"],"updatePoint":{"line":40,"column":71,"index":1280},"line":40,"code":"    it('\".htaccess\" should have the \"ErrorDocument...\" line uncommented', done => {\n      const string = '\\n\\nErrorDocument 404 /404.html\\n\\n';\n      checkString(path.resolve(dir, '.htaccess'), string, done);\n    });","file":"file_content.js","skipped":false,"dir":"test"},{"name":"\"index.html\" should contain the correct Modernizr version in the local URL","suites":["Test if the files from the \"\" directory have the expected content"],"updatePoint":{"line":44,"column":82,"index":1508},"line":44,"code":"    it('\"index.html\" should contain the correct Modernizr version in the local URL', done => {\n      const string = `js/vendor/modernizr-${pkg.devDependencies.modernizr}.min.js`;\n      checkString(path.resolve(dir, 'index.html'), string, done);\n    });","file":"file_content.js","skipped":false,"dir":"test"},{"name":"\"style.css\" should contain a custom banner","suites":["Test if the files from the \"\" directory have the expected content"],"updatePoint":{"line":48,"column":50,"index":1729},"line":48,"code":"    it('\"style.css\" should contain a custom banner', function (done) {\n      const string = `/*! HTML5 Boilerplate v${pkg.version} | ${pkg.license} License | ${pkg.homepage} */\\n`;\n      checkString(path.resolve(dir, 'css/style.css'), string, done);\n    });","file":"file_content.js","skipped":false,"dir":"test"},{"name":"\"\" should be present and it should be a ","suites":[],"updatePoint":{"line":41,"column":74,"index":2073},"line":41,"code":"    it(`\"${file}\" should be present and it should be a ${expectedFileType}`, () => {\n      assert.equal(true, ok);\n    });","file":"file_existence.js","skipped":false,"dir":"test"},{"name":"\"\" should NOT be present","suites":[],"updatePoint":{"line":50,"column":39,"index":2343},"line":50,"code":"    it(`\"${file}\" should NOT be present`, () => {\n      assert(false);\n    });","file":"file_existence.js","skipped":false,"dir":"test"}]}