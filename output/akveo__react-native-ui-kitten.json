{"repo":"akveo/react-native-ui-kitten","url":"https://github.com/akveo/react-native-ui-kitten","branch":"master","configs":[{"package":"@ui-kitten/metro-config","lang":"ts","dir":"src/metro-config/tests","framework":"jest","pattern":"**/*[._-]{test,spec,unittest,unit}.{ts,js}"},{"package":"HelloWorld","lang":"js","dir":"src/template-js/template/__tests__","framework":"jest","pattern":"**/*[._-]{test,spec,unittest,unit}.{ts,js}"}],"tests":[{"name":"should bootstrap @eva-design/eva package","suites":["@bootstrap-service: instance checks"],"updatePoint":{"line":41,"column":46},"line":41,"code":"  it('should bootstrap @eva-design/eva package', () => {\n    BootstrapService.run(evaConfig);\n\n    const outputString = Fs.readFileSync(`node_modules/${evaConfig.evaPackage}/generated.json`).toString();\n    const outputAsObject = JSON.parse(outputString);\n\n    expect(outputAsObject.checksum).toBeTruthy();\n    expect(outputAsObject.checksum).toEqual('default');\n    expect(outputAsObject.styles).toBeTruthy();\n  });","file":"bootstrap.service.spec.ts","skipped":false,"dir":"src/metro-config/tests"},{"name":"should bootstrap @eva-design/eva package with custom styles","suites":["@bootstrap-service: instance checks"],"updatePoint":{"line":52,"column":65},"line":52,"code":"  it('should bootstrap @eva-design/eva package with custom styles', () => {\n    BootstrapService.run({ ...evaConfig, customMappingPath: 'src/metro-config/tests/custom-mapping.json' });\n\n    const outputString = Fs.readFileSync(`node_modules/${evaConfig.evaPackage}/generated.json`).toString();\n    const outputAsObject = JSON.parse(outputString);\n\n    expect(outputAsObject.checksum).toBeTruthy();\n    expect(outputAsObject.checksum).not.toEqual('default');\n    expect(outputAsObject.styles.StatusBar).toBeTruthy();\n  });","file":"bootstrap.service.spec.ts","skipped":false,"dir":"src/metro-config/tests"},{"name":"should configure metro bundler with default values","suites":[],"updatePoint":{"line":9,"column":54},"line":9,"code":"it('should configure metro bundler with default values', () => {\n  const { reporter, ...restConfig } = MetroConfig.create(evaConfig);\n\n  expect(reporter).toBeTruthy();\n  expect(restConfig).toBeTruthy();\n});","file":"index.spec.ts","skipped":false,"dir":"src/metro-config/tests"},{"name":"should configure metro bundler with extended configuration","suites":[],"updatePoint":{"line":16,"column":62},"line":16,"code":"it('should configure metro bundler with extended configuration', () => {\n  const metroConfig = {\n    watchFolders: [\n      './path-to/test-dir',\n    ],\n  };\n\n  const { reporter, watchFolders, ...restConfig } = MetroConfig.create(evaConfig, metroConfig);\n\n  expect(reporter).toBeTruthy();\n  expect(watchFolders[0]).toEqual(metroConfig.watchFolders[0]);\n  expect(restConfig).toBeTruthy();\n});","file":"index.spec.ts","skipped":false,"dir":"src/metro-config/tests"},{"name":"renders correctly","suites":[],"updatePoint":{"line":9,"column":21,"index":222},"line":9,"code":"it('renders correctly', () => {\n  renderer.create( /*#__PURE__*/React.createElement(App, null));\n});","file":"App-test.js","skipped":false,"dir":"src/template-js/template/__tests__"}]}