{"repo":"FormidableLabs/victory","url":"https://github.com/FormidableLabs/victory","branch":"main","configs":[{"package":"victory-monorepo","lang":"js","dir":"test","framework":"mocha","pattern":"**/*[._-]{test,spec,unittest,unit}.{ts,js}"}],"tests":[{"name":"should render a single area and no line when no line style is given","suites":["victory-primitives/area"],"updatePoint":{"line":54,"column":73,"index":1035},"line":54,"code":"  it(\"should render a single area and no line when no line style is given\", () => {\n    const props = merge({}, baseProps, {\n      style: {\n        stroke: \"none\"\n      }\n    });\n    const {\n      container\n    } = render( /*#__PURE__*/React.createElement(VictoryContainer, null, /*#__PURE__*/React.createElement(Area, props)));\n    expect(container.querySelectorAll(\"path\")).toHaveLength(1);\n  });","file":"jest/victory-area/area.test.js","skipped":false,"dir":"test"},{"name":"should render an area and line when a line style is given","suites":["victory-primitives/area"],"updatePoint":{"line":65,"column":63,"index":1424},"line":65,"code":"  it(\"should render an area and line when a line style is given\", () => {\n    const {\n      container\n    } = render( /*#__PURE__*/React.createElement(VictoryContainer, null, /*#__PURE__*/React.createElement(Area, baseProps))); // multiple paths should be grouped\n\n    expect(container.querySelectorAll(\"path\")).toHaveLength(2);\n  });","file":"jest/victory-area/area.test.js","skipped":false,"dir":"test"},{"name":"should return the minimum if yOffset is not present","suites":["victory-area/helper-methods","getDataWithBaseline"],"updatePoint":{"line":47,"column":59,"index":942},"line":47,"code":"    it(\"should return the minimum if yOffset is not present\", () => {\n      const props = {\n        data\n      };\n      const result = getDataWithBaseline(props, scale(defaultDomain));\n      const expectedResult = [{\n        _y0: 0,\n        _y1: 1,\n        _y: 1,\n        _x: 1,\n        _x0: 0,\n        _x1: 1\n      }, {\n        _y0: 0,\n        _y1: 1,\n        _y: 1,\n        _x: 2,\n        _x0: 0,\n        _x1: 2\n      }];\n      expect(result).toEqual(expectedResult);\n    });","file":"jest/victory-area/helper-methods.test.js","skipped":false,"dir":"test"},{"name":"should return the domain minimum when it is greater than zero","suites":["victory-area/helper-methods","getDataWithBaseline"],"updatePoint":{"line":69,"column":69,"index":1430},"line":69,"code":"    it(\"should return the domain minimum when it is greater than zero\", () => {\n      const props = {\n        data\n      };\n      const result = getDataWithBaseline(props, scale(nonZeroDomain));\n      const expectedResult = [{\n        _y0: 1,\n        _y1: 1,\n        _y: 1,\n        _x: 1,\n        _x0: 0,\n        _x1: 1\n      }, {\n        _y0: 1,\n        _y1: 1,\n        _y: 1,\n        _x: 2,\n        _x0: 0,\n        _x1: 2\n      }];\n      expect(result).toEqual(expectedResult);\n    });","file":"jest/victory-area/helper-methods.test.js","skipped":false,"dir":"test"},{"name":"should return zero when the domain minimum is negative","suites":["victory-area/helper-methods","getDataWithBaseline"],"updatePoint":{"line":91,"column":62,"index":1911},"line":91,"code":"    it(\"should return zero when the domain minimum is negative\", () => {\n      const props = {\n        data\n      };\n      const result = getDataWithBaseline(props, scale(negativeDomain));\n      const expectedResult = [{\n        _y0: 0,\n        _y1: 1,\n        _y: 1,\n        _x: 1,\n        _x0: 0,\n        _x1: 1\n      }, {\n        _y0: 0,\n        _y1: 1,\n        _y: 1,\n        _x: 2,\n        _x0: 0,\n        _x1: 2\n      }];\n      expect(result).toEqual(expectedResult);\n    });","file":"jest/victory-area/helper-methods.test.js","skipped":false,"dir":"test"},{"name":"should return yOffset if present","suites":["victory-area/helper-methods","getDataWithBaseline"],"updatePoint":{"line":113,"column":40,"index":2371},"line":113,"code":"    it(\"should return yOffset if present\", () => {\n      const props = {\n        data: stackedData\n      };\n      const result = getDataWithBaseline(props, scale(defaultDomain));\n      const expectedResult = stackedData;\n      expect(result).toEqual(expectedResult);\n    });","file":"jest/victory-area/helper-methods.test.js","skipped":false,"dir":"test"},{"name":"attaches safe user props to the container component","suites":["components/victory-area","default component rendering"],"updatePoint":{"line":12,"column":59,"index":834},"line":12,"code":"    it(\"attaches safe user props to the container component\", () => {\n      render( /*#__PURE__*/React.createElement(VictoryArea, {\n        \"data-testid\": \"victory-area\",\n        \"aria-label\": \"Chart\",\n        \"unsafe-prop\": \"test\"\n      }));\n      const container = screen.getByTestId(\"victory-area\");\n      expect(screen.getByLabelText(\"Chart\")).toBeDefined();\n      expect(container).not.toHaveAttribute(\"unsafe-prop\");\n      expect(container.nodeName).toEqual(\"svg\");\n    });","file":"jest/victory-area/victory-area.test.js","skipped":false,"dir":"test"},{"name":"attaches safe user props to the group component if the component is rendered inside a VictoryChart","suites":["components/victory-area","default component rendering"],"updatePoint":{"line":23,"column":106,"index":1361},"line":23,"code":"    it(\"attaches safe user props to the group component if the component is rendered inside a VictoryChart\", () => {\n      render( /*#__PURE__*/React.createElement(VictoryArea, {\n        \"data-testid\": \"victory-area\",\n        \"aria-label\": \"Chart\",\n        \"unsafe-prop\": \"test\"\n      }), {\n        wrapper: VictoryChart\n      });\n      const container = screen.getByTestId(\"victory-area\");\n      expect(screen.getByLabelText(\"Chart\")).toBeDefined();\n      expect(container).not.toHaveAttribute(\"unsafe-prop\");\n      expect(container.nodeName).toEqual(\"g\");\n    });","file":"jest/victory-area/victory-area.test.js","skipped":false,"dir":"test"},{"name":"renders an svg with the correct viewbox","suites":["components/victory-area","default component rendering"],"updatePoint":{"line":36,"column":47,"index":1868},"line":36,"code":"    it(\"renders an svg with the correct viewbox\", () => {\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryArea, null));\n      const viewBoxValue = `0 0 ${450} ${300}`;\n      expect(container.querySelector(\"svg\").getAttribute(\"viewBox\")).toEqual(viewBoxValue);\n    });","file":"jest/victory-area/victory-area.test.js","skipped":false,"dir":"test"},{"name":"renders the correct d3 path","suites":["components/victory-area","component rendering with data"],"updatePoint":{"line":45,"column":35,"index":2224},"line":45,"code":"    it(\"renders the correct d3 path\", () => {\n      const props = {\n        width: 400,\n        height: 300,\n        padding: 50,\n        scale: \"linear\",\n        interpolation: \"linear\",\n        data: [{\n          x: 0,\n          y: 0,\n          y0: 0\n        }, {\n          x: 2,\n          y: 3,\n          y0: 0\n        }, {\n          x: 4,\n          y: 1,\n          y0: 0\n        }]\n      };\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryArea, props));\n      expect(container.querySelector(\"path\").getAttribute(\"d\")).toEqual(calculateD3Path(props, \"area\"));\n    });","file":"jest/victory-area/victory-area.test.js","skipped":false,"dir":"test"},{"name":"renders the correct d3 path with custom interpolation string property","suites":["components/victory-area","component rendering with data"],"updatePoint":{"line":71,"column":77,"index":2879},"line":71,"code":"    it(\"renders the correct d3 path with custom interpolation string property\", () => {\n      const props = {\n        interpolation: \"catmullRom\",\n        width: 400,\n        height: 300,\n        padding: 50,\n        scale: \"linear\",\n        data: [{\n          x: 0,\n          y: 0,\n          y0: 0\n        }, {\n          x: 2,\n          y: 3,\n          y0: 0\n        }, {\n          x: 4,\n          y: 1,\n          y0: 0\n        }]\n      };\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryArea, props));\n      expect(container.querySelector(\"path\").getAttribute(\"d\")).toEqual(calculateD3Path(props, \"area\"));\n    });","file":"jest/victory-area/victory-area.test.js","skipped":false,"dir":"test"},{"name":"renders the correct d3 path with custom interpolation function","suites":["components/victory-area","component rendering with data"],"updatePoint":{"line":97,"column":70,"index":3531},"line":97,"code":"    it(\"renders the correct d3 path with custom interpolation function\", () => {\n      const props = {\n        interpolation: curveCatmullRom,\n        width: 400,\n        height: 300,\n        padding: 50,\n        scale: \"linear\",\n        data: [{\n          x: 0,\n          y: 0,\n          y0: 0\n        }, {\n          x: 2,\n          y: 3,\n          y0: 0\n        }, {\n          x: 4,\n          y: 1,\n          y0: 0\n        }]\n      };\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryArea, props));\n      expect(container.querySelector(\"path\").getAttribute(\"d\")).toEqual(calculateD3Path(props, \"area\"));\n    });","file":"jest/victory-area/victory-area.test.js","skipped":false,"dir":"test"},{"name":"sorts data according to sortKey prop","suites":["components/victory-area","component rendering with data"],"updatePoint":{"line":123,"column":44,"index":4160},"line":123,"code":"    it(\"sorts data according to sortKey prop\", () => {\n      const props = {\n        scale: \"linear\",\n        interpolation: \"linear\",\n        sortKey: \"x\",\n        data: range(5) // eslint-disable-next-line max-nested-callbacks\n        .map(i => ({\n          x: i,\n          y: i,\n          y0: 0\n        })).reverse()\n      };\n      render( /*#__PURE__*/React.createElement(VictoryArea, _extends({}, props, {\n        dataComponent: /*#__PURE__*/React.createElement(Area, {\n          \"data-testid\": \"area\",\n          \"data-json\": ({\n            data\n          }) => JSON.stringify(data)\n        })\n      })));\n      const area = screen.getByTestId(\"area\");\n      const data = JSON.parse(area.getAttribute(\"data-json\"));\n      const xValues = data.map(d => d._x);\n      expect(xValues).toEqual([0, 1, 2, 3, 4]);\n    });","file":"jest/victory-area/victory-area.test.js","skipped":false,"dir":"test"},{"name":"sorts data according to sortOrder prop","suites":["components/victory-area","component rendering with data"],"updatePoint":{"line":148,"column":46,"index":4982},"line":148,"code":"    it(\"sorts data according to sortOrder prop\", () => {\n      const props = {\n        scale: \"linear\",\n        interpolation: \"linear\",\n        sortKey: \"x\",\n        sortOrder: \"descending\",\n        data: range(5).map(i => ({\n          x: i,\n          y: i,\n          y0: 0\n        })).reverse()\n      };\n      render( /*#__PURE__*/React.createElement(VictoryArea, _extends({}, props, {\n        dataComponent: /*#__PURE__*/React.createElement(Area, {\n          \"data-testid\": \"area\",\n          \"data-json\": ({\n            data\n          }) => JSON.stringify(data)\n        })\n      })));\n      const area = screen.getByTestId(\"area\");\n      const data = JSON.parse(area.getAttribute(\"data-json\"));\n      const xValues = data.map(d => d._x);\n      expect(xValues).toEqual([4, 3, 2, 1, 0]);\n    });","file":"jest/victory-area/victory-area.test.js","skipped":false,"dir":"test"},{"name":"attaches an event to the parent svg","suites":["components/victory-area","event handling"],"updatePoint":{"line":175,"column":43,"index":5819},"line":175,"code":"    it(\"attaches an event to the parent svg\", () => {\n      const clickHandler = jest.fn();\n      render( /*#__PURE__*/React.createElement(VictoryArea, {\n        \"data-testid\": \"container\",\n        events: [{\n          target: \"parent\",\n          eventHandlers: {\n            onClick: clickHandler\n          }\n        }]\n      }));\n      const svg = screen.getByTestId(\"container\");\n      fireEvent.click(svg);\n      expect(clickHandler).toHaveBeenCalled();\n    });","file":"jest/victory-area/victory-area.test.js","skipped":false,"dir":"test"},{"name":"attaches an event to data","suites":["components/victory-area","event handling"],"updatePoint":{"line":190,"column":33,"index":6275},"line":190,"code":"    it(\"attaches an event to data\", () => {\n      const clickHandler = jest.fn();\n      render( /*#__PURE__*/React.createElement(VictoryArea, {\n        dataComponent: /*#__PURE__*/React.createElement(Area, {\n          \"data-testid\": \"data\"\n        }),\n        events: [{\n          target: \"data\",\n          eventHandlers: {\n            onClick: clickHandler\n          }\n        }]\n      }));\n      const dataComponent = screen.getByTestId(\"data\");\n      fireEvent.click(dataComponent);\n      expect(clickHandler).toHaveBeenCalled();\n    });","file":"jest/victory-area/victory-area.test.js","skipped":false,"dir":"test"},{"name":"attaches an event to a label","suites":["components/victory-area","event handling"],"updatePoint":{"line":207,"column":36,"index":6819},"line":207,"code":"    it(\"attaches an event to a label\", () => {\n      const clickHandler = jest.fn();\n      render( /*#__PURE__*/React.createElement(VictoryArea, {\n        data: [{\n          x: 1,\n          y: 1\n        }, {\n          x: 2,\n          y: 2\n        }],\n        labels: ({\n          datum\n        }) => datum.x,\n        events: [{\n          target: \"labels\",\n          eventHandlers: {\n            onClick: clickHandler\n          }\n        }]\n      }));\n      fireEvent.click(screen.getByText(\"1\"));\n      expect(clickHandler).toHaveBeenCalled();\n    });","file":"jest/victory-area/victory-area.test.js","skipped":false,"dir":"test"},{"name":"adds an aria role to the path area","suites":["components/victory-area","accessibility"],"updatePoint":{"line":232,"column":42,"index":7419},"line":232,"code":"    it(\"adds an aria role to the path area\", () => {\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryArea, null));\n      container.querySelectorAll(\"path\").forEach(p => {\n        expect(p.getAttribute(\"role\")).toBe(\"presentation\");\n      });\n    });","file":"jest/victory-area/victory-area.test.js","skipped":false,"dir":"test"},{"name":"adds aria-label and tabIndex to Area primitive","suites":["components/victory-area","accessibility"],"updatePoint":{"line":240,"column":54,"index":7723},"line":240,"code":"    it(\"adds aria-label and tabIndex to Area primitive\", () => {\n      const ariaTestData = [{\n        x: 1,\n        y: 2\n      }, {\n        x: 2,\n        y: 3\n      }, {\n        x: 3,\n        y: 5\n      }, {\n        x: 4,\n        y: 4\n      }, {\n        x: 5,\n        y: 7\n      }];\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryArea, {\n        data: ariaTestData,\n        dataComponent: /*#__PURE__*/React.createElement(Area, {\n          ariaLabel: ({\n            data\n          }) => `data point 1's x value is ${data[0].x}`,\n          tabIndex: 4\n        })\n      }));\n      container.querySelectorAll(\"path\").forEach((p, i) => {\n        expect(p.getAttribute(\"aria-label\")).toEqual(`data point 1's x value is ${ariaTestData[i].x}`);\n        expect(parseInt(p.getAttribute(\"tabindex\"))).toEqual(4);\n      });\n    });","file":"jest/victory-area/victory-area.test.js","skipped":false,"dir":"test"},{"name":"should render a vertical bar","suites":["victory-primitives/bar"],"updatePoint":{"line":49,"column":34,"index":1062},"line":49,"code":"  it(\"should render a vertical bar\", () => {\n    const bar = renderBarSvg();\n    const barShape = getBarShape(bar);\n    expect(Math.round(barShape.height)).toEqual(10);\n  });","file":"jest/victory-bar/bar.test.js","skipped":false,"dir":"test"},{"name":"should render a horizontal bar","suites":["victory-primitives/bar"],"updatePoint":{"line":54,"column":36,"index":1239},"line":54,"code":"  it(\"should render a horizontal bar\", () => {\n    const props = {\n      horizontal: true\n    };\n    const bar = renderBarSvg(props);\n    const barShape = getBarShape(bar);\n    expect(Math.round(barShape.width)).toEqual(2);\n  });","file":"jest/victory-bar/bar.test.js","skipped":false,"dir":"test"},{"name":"should render a default bar width when one is not provided","suites":["victory-primitives/bar"],"updatePoint":{"line":62,"column":64,"index":1497},"line":62,"code":"  it(\"should render a default bar width when one is not provided\", () => {\n    const props = {\n      width: 10,\n      padding: 1,\n      data: Array(4)\n    };\n    const bar = renderBarSvg(props);\n    const barShape = getBarShape(bar);\n    expect(Math.floor(barShape.width)).toEqual(2);\n  });","file":"jest/victory-bar/bar.test.js","skipped":false,"dir":"test"},{"name":"should allow override of width by passing a style","suites":["victory-primitives/bar"],"updatePoint":{"line":72,"column":55,"index":1779},"line":72,"code":"  it(\"should allow override of width by passing a style\", () => {\n    const props = {\n      style: {\n        width: 3\n      }\n    };\n    const bar = renderBarSvg(props);\n    const barShape = getBarShape(bar);\n    expect(Math.floor(barShape.width)).toEqual(3);\n  });","file":"jest/victory-bar/bar.test.js","skipped":false,"dir":"test"},{"name":"should allow modification of width by passing barRatio","suites":["victory-primitives/bar"],"updatePoint":{"line":82,"column":60,"index":2050},"line":82,"code":"  it(\"should allow modification of width by passing barRatio\", () => {\n    const props = {\n      data: [{\n        _x: 2,\n        x: 2,\n        _y: 4,\n        y: 4,\n        eventKey: 0\n      }],\n      barRatio: 3\n    };\n    const bar = renderBarSvg(props);\n    const barShape = getBarShape(bar);\n    expect(Math.floor(barShape.width)).toEqual(24);\n  });","file":"jest/victory-bar/bar.test.js","skipped":false,"dir":"test"},{"name":"between positive coordinates","suites":["point","calculates distances"],"updatePoint":{"line":9,"column":36,"index":348},"line":9,"code":"    it(\"between positive coordinates\", () => {\n      const p0 = point(1, 2);\n      const p1 = point(2, 3);\n      expectDistanceToBeClose(p0, p1);\n    });","file":"jest/victory-bar/geometry-helper-methods.test.js","skipped":false,"dir":"test"},{"name":"between negative coordinates","suites":["point","calculates distances"],"updatePoint":{"line":14,"column":36,"index":502},"line":14,"code":"    it(\"between negative coordinates\", () => {\n      const p0 = point(-1, -2);\n      const p1 = point(-2, -3);\n      expectDistanceToBeClose(p0, p1);\n    });","file":"jest/victory-bar/geometry-helper-methods.test.js","skipped":false,"dir":"test"},{"name":"between zero, zero coordinates","suites":["point","calculates distances"],"updatePoint":{"line":19,"column":38,"index":662},"line":19,"code":"    it(\"between zero, zero coordinates\", () => {\n      const p0 = point(0, 0);\n      const p1 = point(0, 0);\n      expectDistanceToBeClose(p0, p1, 0);\n    });","file":"jest/victory-bar/geometry-helper-methods.test.js","skipped":false,"dir":"test"},{"name":"can add correctly","suites":["point","calculates distances"],"updatePoint":{"line":25,"column":23,"index":812},"line":25,"code":"  it(\"can add correctly\", () => {\n    const p0 = point(1, 1);\n    const p1 = point(2, 3);\n    const {\n      x,\n      y\n    } = p0.add(p1);\n    expect(x).toEqual(3);\n    expect(y).toEqual(4);\n  });","file":"jest/victory-bar/geometry-helper-methods.test.js","skipped":false,"dir":"test"},{"name":"can subtract correctly","suites":["point","calculates distances"],"updatePoint":{"line":35,"column":28,"index":1014},"line":35,"code":"  it(\"can subtract correctly\", () => {\n    const p0 = point(1, 1);\n    const p1 = point(2, 3);\n    const {\n      x,\n      y\n    } = p1.subtract(p0);\n    expect(x).toEqual(1);\n    expect(y).toEqual(2);\n  });","file":"jest/victory-bar/geometry-helper-methods.test.js","skipped":false,"dir":"test"},{"name":"can scalar multiply correctly","suites":["point","calculates distances"],"updatePoint":{"line":45,"column":35,"index":1228},"line":45,"code":"  it(\"can scalar multiply correctly\", () => {\n    const p = point(3, 4);\n    const {\n      x,\n      y\n    } = p.scalarMult(-2);\n    expect(x).toEqual(-6);\n    expect(y).toEqual(-8);\n  });","file":"jest/victory-bar/geometry-helper-methods.test.js","skipped":false,"dir":"test"},{"name":"can scalar divide correctly","suites":["point","calculates distances"],"updatePoint":{"line":54,"column":33,"index":1414},"line":54,"code":"  it(\"can scalar divide correctly\", () => {\n    const p = point(3, 4);\n    const {\n      x,\n      y\n    } = p.scalarDivide(2);\n    const answerX = 1.5;\n    const answerY = 2;\n    expect(x).toBeCloseTo(answerX);\n    expect(y).toBeCloseTo(answerY);\n  });","file":"jest/victory-bar/geometry-helper-methods.test.js","skipped":false,"dir":"test"},{"name":"throws when dividing by zero","suites":["point","calculates distances"],"updatePoint":{"line":65,"column":34,"index":1668},"line":65,"code":"  it(\"throws when dividing by zero\", () => {\n    const p = point(3, 4);\n    expect(() => p.scalarDivide(0)).toThrow();\n  });","file":"jest/victory-bar/geometry-helper-methods.test.js","skipped":false,"dir":"test"},{"name":"can check for equality correctly","suites":["point","calculates distances"],"updatePoint":{"line":69,"column":38,"index":1797},"line":69,"code":"  it(\"can check for equality correctly\", () => {\n    const p0 = point(3, 4);\n    const p1 = point(3, 4);\n    expect(p0.equals(p1)).toBeTruthy();\n  });","file":"jest/victory-bar/geometry-helper-methods.test.js","skipped":false,"dir":"test"},{"name":"handles separate circles","suites":["circle","calculates circle-circle intersection correctly"],"updatePoint":{"line":77,"column":32,"index":2043},"line":77,"code":"    it(\"handles separate circles\", () => {\n      const c0 = circle(point(0, 0), 1);\n      const c1 = circle(point(0, 10), 1);\n      expect(c0.intersection(c1)).toEqual([]);\n    });","file":"jest/victory-bar/geometry-helper-methods.test.js","skipped":false,"dir":"test"},{"name":"handles one circle containing another","suites":["circle","calculates circle-circle intersection correctly"],"updatePoint":{"line":82,"column":45,"index":2237},"line":82,"code":"    it(\"handles one circle containing another\", () => {\n      const c0 = circle(point(0, 0), 2);\n      const c1 = circle(point(0, 0), 10);\n      expect(c0.intersection(c1)).toEqual([]);\n    });","file":"jest/victory-bar/geometry-helper-methods.test.js","skipped":false,"dir":"test"},{"name":"handles same circle case","suites":["circle","calculates circle-circle intersection correctly"],"updatePoint":{"line":87,"column":32,"index":2418},"line":87,"code":"    it(\"handles same circle case\", () => {\n      const c0 = circle(point(0, 0), 1);\n      const c1 = circle(point(0, 0), 1);\n      expect(c0.intersection(c1)).toEqual([]);\n    });","file":"jest/victory-bar/geometry-helper-methods.test.js","skipped":false,"dir":"test"},{"name":"handles circles of zero radius","suites":["circle","calculates circle-circle intersection correctly"],"updatePoint":{"line":92,"column":38,"index":2604},"line":92,"code":"    it(\"handles circles of zero radius\", () => {\n      const c0 = circle(point(0, 0), 0);\n      const c1 = circle(point(0, 0), 0);\n      expect(c0.intersection(c1)).toEqual([]);\n      const c2 = circle(point(0, 0), 0);\n      const c3 = circle(point(0, 1), 0);\n      expect(c2.intersection(c3)).toEqual([]);\n    });","file":"jest/victory-bar/geometry-helper-methods.test.js","skipped":false,"dir":"test"},{"name":"handles circles meeting at exactly one point","suites":["circle","calculates circle-circle intersection correctly"],"updatePoint":{"line":100,"column":52,"index":2933},"line":100,"code":"    it(\"handles circles meeting at exactly one point\", () => {\n      const c0 = circle(point(0, 0), 1);\n      const c1 = circle(point(0, 2), 1);\n      const [{\n        x: x0,\n        y: y0\n      }, {\n        x: x1,\n        y: y1\n      }] = c0.intersection(c1);\n      expect(x0).toEqual(0);\n      expect(x1).toEqual(0);\n      expect(y0).toEqual(1);\n      expect(y1).toEqual(1);\n    });","file":"jest/victory-bar/geometry-helper-methods.test.js","skipped":false,"dir":"test"},{"name":"handles circles meeting at two points","suites":["circle","calculates circle-circle intersection correctly"],"updatePoint":{"line":115,"column":45,"index":3311},"line":115,"code":"    it(\"handles circles meeting at two points\", () => {\n      const c0 = circle(point(2, 3), 3);\n      const c1 = circle(point(1, -1), 4);\n      const [{\n        x: x0,\n        y: y0\n      }, {\n        x: x1,\n        y: y1\n      }] = c0.intersection(c1);\n      expect(x0).toBeCloseTo(-0.96);\n      expect(y0).toBeCloseTo(2.49);\n      expect(x1).toBeCloseTo(4.37);\n      expect(y1).toBeCloseTo(1.16);\n    });","file":"jest/victory-bar/geometry-helper-methods.test.js","skipped":false,"dir":"test"},{"name":"the left-most point is the 0th element, the right-most is the 1st","suites":["circle","calculates circle-circle intersection correctly"],"updatePoint":{"line":130,"column":73,"index":3747},"line":130,"code":"    it(\"the left-most point is the 0th element, the right-most is the 1st\", () => {\n      const c0 = circle(point(2, 3), 3);\n      const c1 = circle(point(1, -1), 4);\n      const [{\n        x: x0\n      }, {\n        x: x1\n      }] = c0.intersection(c1);\n      expect(x0 <= x1).toBeTruthy();\n    });","file":"jest/victory-bar/geometry-helper-methods.test.js","skipped":false,"dir":"test"},{"name":"attaches safe user props to the container component","suites":["components/victory-bar","default component rendering"],"updatePoint":{"line":10,"column":59,"index":475},"line":10,"code":"    it(\"attaches safe user props to the container component\", () => {\n      render( /*#__PURE__*/React.createElement(VictoryBar, {\n        \"data-testid\": \"victory-bar\",\n        \"aria-label\": \"Chart\",\n        \"unsafe-prop\": \"test\"\n      }));\n      const container = screen.getByTestId(\"victory-bar\");\n      expect(screen.getByLabelText(\"Chart\")).toBeDefined();\n      expect(container).not.toHaveAttribute(\"unsafe-prop\");\n      expect(container.tagName).toEqual(\"svg\");\n    });","file":"jest/victory-bar/victory-bar.test.js","skipped":false,"dir":"test"},{"name":"attaches safe user props to the group component if the component is rendered inside a VictoryChart","suites":["components/victory-bar","default component rendering"],"updatePoint":{"line":21,"column":106,"index":998},"line":21,"code":"    it(\"attaches safe user props to the group component if the component is rendered inside a VictoryChart\", () => {\n      render( /*#__PURE__*/React.createElement(VictoryBar, {\n        \"data-testid\": \"victory-bar\",\n        \"aria-label\": \"Chart\",\n        \"unsafe-prop\": \"test\"\n      }), {\n        wrapper: VictoryChart\n      });\n      const container = screen.getByTestId(\"victory-bar\");\n      expect(screen.getByLabelText(\"Chart\")).toBeDefined();\n      expect(container).not.toHaveAttribute(\"unsafe-prop\");\n      expect(container.tagName).toEqual(\"g\");\n    });","file":"jest/victory-bar/victory-bar.test.js","skipped":false,"dir":"test"},{"name":"renders an svg with the correct width and height","suites":["components/victory-bar","default component rendering"],"updatePoint":{"line":34,"column":56,"index":1510},"line":34,"code":"    it(\"renders an svg with the correct width and height\", () => {\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryBar, null));\n      const svg = container.querySelector(\"svg\");\n      expect(svg.getAttribute(\"style\")).toContain(\"width: 100%; height: 100%\");\n    });","file":"jest/victory-bar/victory-bar.test.js","skipped":false,"dir":"test"},{"name":"renders an svg with the correct viewBox","suites":["components/victory-bar","default component rendering"],"updatePoint":{"line":41,"column":47,"index":1809},"line":41,"code":"    it(\"renders an svg with the correct viewBox\", () => {\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryBar, null));\n      const svg = container.querySelector(\"svg\");\n      const viewBoxValue = `0 0 ${450} ${300}`;\n      expect(svg.getAttribute(\"viewBox\")).toEqual(viewBoxValue);\n    });","file":"jest/victory-bar/victory-bar.test.js","skipped":false,"dir":"test"},{"name":"renders 4 bars","suites":["components/victory-bar","default component rendering"],"updatePoint":{"line":49,"column":22,"index":2116},"line":49,"code":"    it(\"renders 4 bars\", () => {\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryBar, null));\n      const bars = container.querySelectorAll(\"path\");\n      expect(bars.length).toEqual(4);\n    });","file":"jest/victory-bar/victory-bar.test.js","skipped":false,"dir":"test"},{"name":"renders each bar as a rectangle","suites":["components/victory-bar","default component rendering"],"updatePoint":{"line":56,"column":39,"index":2370},"line":56,"code":"    it(\"renders each bar as a rectangle\", () => {\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryBar, null));\n      const barCommandStrings = Array.from(container.querySelectorAll(\"path\")).map(bar => bar.getAttribute(\"d\"));\n      barCommandStrings.forEach(commandString => {\n        expect(isBar(commandString)).toBeTruthy();\n      });\n    });","file":"jest/victory-bar/victory-bar.test.js","skipped":false,"dir":"test"},{"name":"renders bars for {x, y} shaped data (default)","suites":["components/victory-bar","rendering data"],"updatePoint":{"line":67,"column":53,"index":2814},"line":67,"code":"    it(\"renders bars for {x, y} shaped data (default)\", () => {\n      const data = range(10).map(i => ({\n        x: i,\n        y: i\n      }));\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryBar, {\n        data: data\n      }));\n      const bars = container.querySelectorAll(\"path\");\n      expect(bars.length).toEqual(10);\n    });","file":"jest/victory-bar/victory-bar.test.js","skipped":false,"dir":"test"},{"name":"renders ordered bars when sortKey is passed","suites":["components/victory-bar","rendering data"],"updatePoint":{"line":80,"column":51,"index":3184},"line":80,"code":"    it(\"renders ordered bars when sortKey is passed\", () => {\n      const data = range(5).map(i => ({\n        x: i,\n        y: i\n      })).reverse();\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryBar, {\n        data: data,\n        sortKey: \"x\"\n      }));\n      const barHeight = Array.from(container.querySelectorAll(\"path\")).map(bar => {\n        const commandString = bar.getAttribute(\"d\");\n        return getBarHeight(commandString);\n      });\n      const ascendingBars = [...barHeight].sort((a, b) => a - b);\n      expect(barHeight).toEqual(ascendingBars);\n    });","file":"jest/victory-bar/victory-bar.test.js","skipped":false,"dir":"test"},{"name":"renders reverse ordered bars when sortOrder is descending","suites":["components/victory-bar","rendering data"],"updatePoint":{"line":98,"column":65,"index":3810},"line":98,"code":"    it(\"renders reverse ordered bars when sortOrder is descending\", () => {\n      const data = range(5).map(i => ({\n        x: i,\n        y: i\n      })).reverse();\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryBar, {\n        data: data,\n        sortKey: \"x\",\n        sortOrder: \"descending\"\n      }));\n      const barHeight = Array.from(container.querySelectorAll(\"path\")).map(bar => {\n        const commandString = bar.getAttribute(\"d\");\n        return getBarHeight(commandString);\n      });\n      const descendingBars = [...barHeight].sort((a, b) => b - a);\n      expect(barHeight).toEqual(descendingBars);\n    });","file":"jest/victory-bar/victory-bar.test.js","skipped":false,"dir":"test"},{"name":"renders bars for array-shaped data","suites":["components/victory-bar","rendering data"],"updatePoint":{"line":117,"column":42,"index":4448},"line":117,"code":"    it(\"renders bars for array-shaped data\", () => {\n      const data = range(20).map(i => [i, i]);\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryBar, {\n        data: data,\n        x: 0,\n        y: 1\n      }));\n      const bars = container.querySelectorAll(\"path\");\n      expect(bars).toHaveLength(20);\n    });","file":"jest/victory-bar/victory-bar.test.js","skipped":false,"dir":"test"},{"name":"renders bars for deeply-nested data","suites":["components/victory-bar","rendering data"],"updatePoint":{"line":129,"column":43,"index":4804},"line":129,"code":"    it(\"renders bars for deeply-nested data\", () => {\n      const data = range(8).map(i => ({\n        a: {\n          b: [{\n            x: i,\n            y: i\n          }]\n        }\n      }));\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryBar, {\n        data: data,\n        x: \"a.b[0].x\",\n        y: \"a.b[0].y\"\n      }));\n      const bars = container.querySelectorAll(\"path\");\n      expect(bars).toHaveLength(8);\n    });","file":"jest/victory-bar/victory-bar.test.js","skipped":false,"dir":"test"},{"name":"renders bars values with null accessor","suites":["components/victory-bar","rendering data"],"updatePoint":{"line":148,"column":46,"index":5271},"line":148,"code":"    it(\"renders bars values with null accessor\", () => {\n      const data = range(8);\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryBar, {\n        data: data,\n        x: null,\n        y: null\n      }));\n      const bars = container.querySelectorAll(\"path\");\n      expect(bars).toHaveLength(8);\n    });","file":"jest/victory-bar/victory-bar.test.js","skipped":false,"dir":"test"},{"name":"renders bars with appropriate relative heights","suites":["components/victory-bar","rendering data"],"updatePoint":{"line":160,"column":54,"index":5625},"line":160,"code":"    it(\"renders bars with appropriate relative heights\", () => {\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryBar, {\n        data: [{\n          x: 1,\n          y: 1\n        }, {\n          x: 2,\n          y: 2\n        }, {\n          x: 3,\n          y: 3\n        }]\n      }));\n      const bars = Array.from(container.querySelectorAll(\"path\"));\n      const heights = bars.map(bar => {\n        const commandString = bar.getAttribute(\"d\");\n        return getBarHeight(commandString);\n      });\n      expect(Math.trunc(heights[1] / 2)).toEqual(Math.trunc(heights[0], 0.5));\n      expect((heights[2] / 3 * 2).toFixed(3)).toEqual(heights[1].toFixed(3));\n    });","file":"jest/victory-bar/victory-bar.test.js","skipped":false,"dir":"test"},{"name":"does not render data with null x or y values","suites":["components/victory-bar","rendering data"],"updatePoint":{"line":183,"column":52,"index":6322},"line":183,"code":"    it(\"does not render data with null x or y values\", () => {\n      const data = [{\n        x: 1,\n        y: 2\n      }, {\n        x: null,\n        y: 4\n      }, {\n        x: 5,\n        y: null\n      }];\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryBar, {\n        data: data\n      }));\n      expect(container.querySelectorAll(\"path\")).toHaveLength(1);\n    });","file":"jest/victory-bar/victory-bar.test.js","skipped":false,"dir":"test"},{"name":"attaches an event to the parent svg","suites":["components/victory-bar","event handling"],"updatePoint":{"line":207,"column":43,"index":6860},"line":207,"code":"    it(\"attaches an event to the parent svg\", () => {\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryBar, {\n        events: [{\n          target: \"parent\",\n          eventHandlers: {\n            onClick: clickHandler\n          }\n        }]\n      }));\n      const bar = container.querySelector(\"path\");\n      fireEvent.click(bar);\n      expect(clickHandler).toHaveBeenCalled();\n    });","file":"jest/victory-bar/victory-bar.test.js","skipped":false,"dir":"test"},{"name":"attaches an event to data","suites":["components/victory-bar","event handling"],"updatePoint":{"line":222,"column":33,"index":7277},"line":222,"code":"    it(\"attaches an event to data\", () => {\n      const data = [{\n        x: 0,\n        y: 0,\n        label: \"0\"\n      }, {\n        x: 1,\n        y: 1,\n        label: \"1\"\n      }, {\n        x: 2,\n        y: 2,\n        label: \"2\"\n      }];\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryBar, {\n        data: data,\n        events: [{\n          target: \"data\",\n          eventHandlers: {\n            onClick: clickHandler\n          }\n        }]\n      }));\n      const bars = container.querySelectorAll(\"path\");\n      bars.forEach((bar, index) => {\n        clickHandler.mockReset();\n        fireEvent.click(bar);\n        expect(clickHandler).toHaveBeenCalled();\n        const barContext = clickHandler.mock.calls[0][1];\n        expect(barContext.datum.x).toEqual(data[index].x);\n      });\n    });","file":"jest/victory-bar/victory-bar.test.js","skipped":false,"dir":"test"},{"name":"attaches an event to a label","suites":["components/victory-bar","event handling"],"updatePoint":{"line":256,"column":36,"index":8116},"line":256,"code":"    it(\"attaches an event to a label\", () => {\n      const data = [{\n        x: 0,\n        y: 0,\n        label: \"label 0\"\n      }, {\n        x: 1,\n        y: 1,\n        label: \"label 1\"\n      }, {\n        x: 2,\n        y: 2,\n        label: \"label 2\"\n      }];\n      render( /*#__PURE__*/React.createElement(VictoryBar, {\n        data: data,\n        labels: ({\n          datum\n        }) => datum.label,\n        events: [{\n          target: \"labels\",\n          eventHandlers: {\n            onClick: clickHandler\n          }\n        }]\n      }));\n      const label = screen.getByText(\"label 1\");\n      fireEvent.click(label);\n      expect(clickHandler).toHaveBeenCalled();\n    });","file":"jest/victory-bar/victory-bar.test.js","skipped":false,"dir":"test"},{"name":"adds an aria role to each bar in the series","suites":["components/victory-bar","accessibility"],"updatePoint":{"line":288,"column":51,"index":8852},"line":288,"code":"    it(\"adds an aria role to each bar in the series\", () => {\n      const data = range(10).map((y, x) => ({\n        x,\n        y\n      }));\n      render( /*#__PURE__*/React.createElement(VictoryBar, {\n        data: data\n      }));\n      const presentationElements = screen.getAllByRole(\"presentation\");\n      expect(presentationElements).toHaveLength(11); // bars plus container\n    });","file":"jest/victory-bar/victory-bar.test.js","skipped":false,"dir":"test"},{"name":"applies aria-label and tabIndex to the Bar primitive","suites":["components/victory-bar","accessibility"],"updatePoint":{"line":299,"column":60,"index":9248},"line":299,"code":"    it(\"applies aria-label and tabIndex to the Bar primitive\", () => {\n      const data = range(5, 11).map((y, x) => ({\n        y,\n        x\n      }));\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryBar, {\n        data: data,\n        dataComponent: /*#__PURE__*/React.createElement(Bar, {\n          ariaLabel: ({\n            datum\n          }) => `x: ${datum.x}`,\n          tabIndex: ({\n            index\n          }) => index + 1\n        })\n      }));\n      container.querySelectorAll(\"path\").forEach((bar, index) => {\n        expect(parseInt(bar.getAttribute(\"tabindex\"))).toEqual(index + 1);\n        expect(bar.getAttribute(\"aria-label\")).toEqual(`x: ${data[index].x}`);\n      });\n    });","file":"jest/victory-bar/victory-bar.test.js","skipped":false,"dir":"test"},{"name":"attaches safe user props to the container component","suites":["components/victory-box-plot","default component rendering"],"updatePoint":{"line":55,"column":59,"index":1166},"line":55,"code":"    it(\"attaches safe user props to the container component\", () => {\n      render( /*#__PURE__*/React.createElement(VictoryBoxPlot, {\n        \"data-testid\": \"victory-boxplot\",\n        \"aria-label\": \"Chart\",\n        \"unsafe-prop\": \"test\"\n      }));\n      const container = screen.getByTestId(\"victory-boxplot\");\n      expect(screen.getByLabelText(\"Chart\")).toBeDefined();\n      expect(container).not.toHaveAttribute(\"unsafe-prop\");\n      expect(container.nodeName).toEqual(\"svg\");\n    });","file":"jest/victory-box-plot/victory-box-plot.test.js","skipped":false,"dir":"test"},{"name":"attaches safe user props to the group component if the component is rendered inside a VictoryChart","suites":["components/victory-box-plot","default component rendering"],"updatePoint":{"line":66,"column":106,"index":1702},"line":66,"code":"    it(\"attaches safe user props to the group component if the component is rendered inside a VictoryChart\", () => {\n      render( /*#__PURE__*/React.createElement(VictoryBoxPlot, {\n        \"data-testid\": \"victory-boxplot\",\n        \"aria-label\": \"Chart\",\n        \"unsafe-prop\": \"test\"\n      }), {\n        wrapper: VictoryChart\n      });\n      const container = screen.getByTestId(\"victory-boxplot\");\n      expect(screen.getByLabelText(\"Chart\")).toBeDefined();\n      expect(container).not.toHaveAttribute(\"unsafe-prop\");\n      expect(container.nodeName).toEqual(\"g\");\n    });","file":"jest/victory-box-plot/victory-box-plot.test.js","skipped":false,"dir":"test"},{"name":"renders an svg with the correct width and height","suites":["components/victory-box-plot","default component rendering"],"updatePoint":{"line":79,"column":56,"index":2227},"line":79,"code":"    it(\"renders an svg with the correct width and height\", () => {\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryBoxPlot, {\n        data: dataset\n      }));\n      const svg = container.querySelector(\"svg\");\n      expect(svg.getAttribute(\"style\")).toContain(\"width: 100%; height: 100%\");\n    });","file":"jest/victory-box-plot/victory-box-plot.test.js","skipped":false,"dir":"test"},{"name":"renders an svg with the correct viewBox","suites":["components/victory-box-plot","default component rendering"],"updatePoint":{"line":88,"column":47,"index":2557},"line":88,"code":"    it(\"renders an svg with the correct viewBox\", () => {\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryBoxPlot, {\n        data: dataset\n      }));\n      const svg = container.querySelector(\"svg\");\n      const viewBoxValue = `0 0 ${450} ${300}`;\n      expect(svg.getAttribute(\"viewBox\")).toEqual(viewBoxValue);\n    });","file":"jest/victory-box-plot/victory-box-plot.test.js","skipped":false,"dir":"test"},{"name":"renders 3 points","suites":["components/victory-box-plot","default component rendering"],"updatePoint":{"line":98,"column":24,"index":2897},"line":98,"code":"    it(\"renders 3 points\", () => {\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryBoxPlot, {\n        data: dataset\n      }));\n      const points = container.querySelectorAll(\"rect\"); // two boxes per point\n\n      expect(points).toHaveLength(6);\n    });","file":"jest/victory-box-plot/victory-box-plot.test.js","skipped":false,"dir":"test"},{"name":"does not render data with null x or y values","suites":["components/victory-box-plot","default component rendering"],"updatePoint":{"line":109,"column":50,"index":3225},"line":109,"code":"  it(\"does not render data with null x or y values\", () => {\n    const data = [{\n      x: 1,\n      y: 2\n    }, {\n      x: 1,\n      y: 3\n    }, {\n      x: null,\n      y: 2\n    }, {\n      x: null,\n      y: 3\n    }, {\n      x: 2,\n      y: null\n    }, {\n      x: 2,\n      y: null\n    }];\n    const {\n      groups\n    } = renderWithTestGroup(data);\n    expect(groups).toHaveLength(1);\n  });","file":"jest/victory-box-plot/victory-box-plot.test.js","skipped":false,"dir":"test"},{"name":"does not render data with null y values when given an array","suites":["components/victory-box-plot","default component rendering"],"updatePoint":{"line":134,"column":65,"index":3626},"line":134,"code":"  it(\"does not render data with null y values when given an array\", () => {\n    const data = [{\n      x: 1,\n      y: [1, 2, 3]\n    }, {\n      x: 1,\n      y: [null, 2, 5]\n    }];\n    const {\n      groups\n    } = renderWithTestGroup(data);\n    expect(groups).toHaveLength(1);\n  });","file":"jest/victory-box-plot/victory-box-plot.test.js","skipped":false,"dir":"test"},{"name":"does not render data with null min, max, median, q1, or q3 values","suites":["components/victory-box-plot","default component rendering"],"updatePoint":{"line":147,"column":71,"index":3912},"line":147,"code":"  it(\"does not render data with null min, max, median, q1, or q3 values\", () => {\n    const data = [{\n      x: 1,\n      min: 2,\n      median: 5,\n      max: 10,\n      q1: 3,\n      q3: 7\n    }, {\n      x: 2,\n      min: null,\n      median: 4,\n      max: 9,\n      q1: 3,\n      q3: 6\n    }, {\n      x: 3,\n      min: 1,\n      median: null,\n      max: 12,\n      q1: 4,\n      q3: 10\n    }, {\n      x: 4,\n      min: 3,\n      median: 9,\n      max: null,\n      q1: 5,\n      q3: 13\n    }, {\n      x: 5,\n      min: 2,\n      median: 8,\n      max: 15,\n      q1: null,\n      q3: 12\n    }, {\n      x: 5,\n      min: 2,\n      median: 10,\n      max: 20,\n      q1: 8,\n      q3: null\n    }];\n    const {\n      groups\n    } = renderWithTestGroup(data);\n    expect(groups).toHaveLength(1);\n  });","file":"jest/victory-box-plot/victory-box-plot.test.js","skipped":false,"dir":"test"},{"name":"adds an aria role to each point in the series","suites":["components/victory-box-plot","accessibility"],"updatePoint":{"line":199,"column":53,"index":4776},"line":199,"code":"    it(\"adds an aria role to each point in the series\", () => {\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryBoxPlot, {\n        data: dataset\n      }));\n      container.querySelectorAll(\"rect\").forEach(box => {\n        expect(box.getAttribute(\"role\")).toEqual(\"presentation\");\n      });\n    });","file":"jest/victory-box-plot/victory-box-plot.test.js","skipped":false,"dir":"test"},{"name":"applies aria-label to whisker primitive","suites":["components/victory-box-plot","accessibility"],"updatePoint":{"line":209,"column":47,"index":5110},"line":209,"code":"    it(\"applies aria-label to whisker primitive\", () => {\n      render( /*#__PURE__*/React.createElement(VictoryBoxPlot, {\n        data: dataset,\n        maxComponent: /*#__PURE__*/React.createElement(Whisker, {\n          ariaLabel: ({\n            datum\n          }) => buildLabel(datum.x, datum._max),\n          tabIndex: ({\n            index\n          }) => index + 1\n        })\n      }));\n      dataset.map(({\n        x,\n        max\n      }) => buildLabel(x, max)).forEach((label, index) => {\n        const [labeledWhisker] = screen.getAllByLabelText(label);\n        expect(labeledWhisker).toBeDefined();\n        expect(labeledWhisker.getAttribute(\"tabindex\")).toEqual(`${index + 1}`);\n      });\n    });","file":"jest/victory-box-plot/victory-box-plot.test.js","skipped":false,"dir":"test"},{"name":"applies aria-label to border primitive","suites":["components/victory-box-plot","accessibility"],"updatePoint":{"line":230,"column":46,"index":5816},"line":230,"code":"    it(\"applies aria-label to border primitive\", () => {\n      render( /*#__PURE__*/React.createElement(VictoryBoxPlot, {\n        data: dataset,\n        q3Component: /*#__PURE__*/React.createElement(Border, {\n          ariaLabel: ({\n            datum\n          }) => buildLabel(datum.x, datum._q3),\n          tabIndex: ({\n            index\n          }) => index + 1\n        })\n      }));\n      dataset.map(({\n        x,\n        q3\n      }) => buildLabel(x, q3)).forEach((label, index) => {\n        const labeledBorder = screen.getByLabelText(label);\n        expect(labeledBorder).toBeDefined();\n        expect(labeledBorder.getAttribute(\"tabindex\")).toEqual(`${index + 1}`);\n      });\n    });","file":"jest/victory-box-plot/victory-box-plot.test.js","skipped":false,"dir":"test"},{"name":"applies tabIndex and aria-label to line-segmnet primitive","suites":["components/victory-box-plot","accessibility"],"updatePoint":{"line":251,"column":65,"index":6528},"line":251,"code":"    it(\"applies tabIndex and aria-label to line-segmnet primitive\", () => {\n      render( /*#__PURE__*/React.createElement(VictoryBoxPlot, {\n        data: dataset,\n        medianComponent: /*#__PURE__*/React.createElement(LineSegment, {\n          ariaLabel: ({\n            datum\n          }) => buildLabel(datum.x, datum._median),\n          tabIndex: ({\n            index\n          }) => index + 1\n        })\n      }));\n      dataset.map(({\n        x,\n        median\n      }) => buildLabel(x, median)).forEach((label, index) => {\n        const labeledLine = screen.getByLabelText(label);\n        expect(labeledLine).toBeDefined();\n        expect(labeledLine.getAttribute(\"tabindex\")).toEqual(`${index + 1}`);\n      });\n    });","file":"jest/victory-box-plot/victory-box-plot.test.js","skipped":false,"dir":"test"},{"name":"returns true when within bounds","suites":["containers/brush-helpers","withinBounds"],"updatePoint":{"line":8,"column":39,"index":241},"line":8,"code":"    it(\"returns true when within bounds\", () => {\n      const point = {\n        x: 1,\n        y: 1\n      };\n      const bounds = {\n        x1: 0,\n        x2: 2,\n        y1: 0,\n        y2: 2\n      };\n      const isWithinBoundsResults = withinBounds(point, bounds);\n      expect(isWithinBoundsResults).toBeTruthy();\n    });","file":"jest/victory-brush-container/brush-helpers.test.js","skipped":false,"dir":"test"},{"name":"returns false when not within bounds","suites":["containers/brush-helpers","withinBounds"],"updatePoint":{"line":22,"column":44,"index":568},"line":22,"code":"    it(\"returns false when not within bounds\", () => {\n      const point = {\n        x: 10,\n        y: 1\n      };\n      const bounds = {\n        x1: 0,\n        x2: 2,\n        y1: 0,\n        y2: 2\n      };\n      const isWithinBoundsResults = withinBounds(point, bounds);\n      expect(isWithinBoundsResults).toBeFalsy();\n    });","file":"jest/victory-brush-container/brush-helpers.test.js","skipped":false,"dir":"test"},{"name":"returns true when within bounds using dates","suites":["containers/brush-helpers","withinBounds"],"updatePoint":{"line":36,"column":51,"index":902},"line":36,"code":"    it(\"returns true when within bounds using dates\", () => {\n      const point = {\n        x: new Date(\"1/2/2022\"),\n        y: 1\n      };\n      const bounds = {\n        x1: new Date(\"1/1/2022\"),\n        x2: new Date(\"2/1/2022\"),\n        y1: 0,\n        y2: 2\n      };\n      const isWithinBoundsResults = withinBounds(point, bounds);\n      expect(isWithinBoundsResults).toBeTruthy();\n    });","file":"jest/victory-brush-container/brush-helpers.test.js","skipped":false,"dir":"test"},{"name":"returns false when not within bounds using dates","suites":["containers/brush-helpers","withinBounds"],"updatePoint":{"line":50,"column":56,"index":1298},"line":50,"code":"    it(\"returns false when not within bounds using dates\", () => {\n      const point = {\n        x: new Date(\"3/2/2022\"),\n        y: 1\n      };\n      const bounds = {\n        x1: new Date(\"1/1/2022\"),\n        x2: new Date(\"2/1/2022\"),\n        y1: 0,\n        y2: 2\n      };\n      const isWithinBoundsResults = withinBounds(point, bounds);\n      expect(isWithinBoundsResults).toBeFalsy();\n    });","file":"jest/victory-brush-container/brush-helpers.test.js","skipped":false,"dir":"test"},{"name":"returns the correct box","suites":["containers/brush-helpers","constrainBox"],"updatePoint":{"line":66,"column":31,"index":1709},"line":66,"code":"    it(\"returns the correct box\", () => {\n      const fullDomainBox = {\n        x1: 0,\n        x2: 2,\n        y1: 0,\n        y2: 2\n      };\n      const box = {\n        x1: 1,\n        x2: 2,\n        y1: 1,\n        y2: 2\n      };\n      const constrainBoxResult = constrainBox(box, fullDomainBox);\n      expect(constrainBoxResult).toEqual({\n        x1: 1,\n        y1: 1,\n        x2: 2,\n        y2: 2\n      });\n    });","file":"jest/victory-brush-container/brush-helpers.test.js","skipped":false,"dir":"test"},{"name":"returns the correct box when x axis consists of dates","suites":["containers/brush-helpers","constrainBox"],"updatePoint":{"line":87,"column":61,"index":2154},"line":87,"code":"    it(\"returns the correct box when x axis consists of dates\", () => {\n      const fullDomainBox = {\n        x1: new Date(\"1/2/2022 PST\"),\n        x2: new Date(\"2/1/2022 PST\"),\n        y1: 0,\n        y2: 2\n      };\n      const box = {\n        x1: new Date(\"1/1/2022 PST\"),\n        x2: new Date(\"1/10/2022 PST\"),\n        y1: 1,\n        y2: 2\n      };\n      const constrainBoxResult = constrainBox(box, fullDomainBox);\n      expect(constrainBoxResult).toEqual({\n        x1: 1641110400000,\n        y1: 1,\n        x2: 1641888000000,\n        y2: 2\n      });\n    });","file":"jest/victory-brush-container/brush-helpers.test.js","skipped":false,"dir":"test"},{"name":"should render a wick line","suites":["victory-primitives/candle"],"updatePoint":{"line":47,"column":31,"index":1349},"line":47,"code":"  it(\"should render a wick line\", () => {\n    const {\n      container\n    } = renderCandle();\n    const wicks = container.querySelectorAll(\"line\");\n    const values = [{\n      x1: 5,\n      x2: 5,\n      y1: 50,\n      y2: 10\n    }, {\n      x1: 5,\n      x2: 5,\n      y1: 30,\n      y2: 5\n    }];\n    wicks.forEach((wick, i) => {\n      const [x1, x2, y1, y2] = [\"x1\", \"x2\", \"y1\", \"y2\"].map(prop => parseInt(wick.getAttribute(prop)));\n      expect(values[i]).toMatchObject({\n        x1,\n        x2,\n        y1,\n        y2\n      });\n    });\n  });","file":"jest/victory-candlestick/candle.test.js","skipped":false,"dir":"test"},{"name":"should render a candle rectangle","suites":["victory-primitives/candle"],"updatePoint":{"line":73,"column":38,"index":1896},"line":73,"code":"  it(\"should render a candle rectangle\", () => {\n    const {\n      container\n    } = renderCandle();\n    const rect = container.querySelector(\"rect\");\n    const [width, height, x, y] = [\"width\", \"height\", \"x\", \"y\"].map(prop => rect.getAttribute(prop)); // width = style.width || 0.5 * (width - 2 * padding) / data.length;\n\n    expect(width).toEqual(\"2\");\n    expect(height).toEqual(\"20\"); // x = x - width / 2\n\n    expect(x).toEqual(\"4\");\n    expect(y).toEqual(\"10\");\n  });","file":"jest/victory-candlestick/candle.test.js","skipped":false,"dir":"test"},{"name":"sorts data by sortKey","suites":["victory-candlestick/helper-methods ","getData"],"updatePoint":{"line":19,"column":31,"index":571},"line":19,"code":"      it(\"sorts data by sortKey\", () => {\n        const data = createData(range(5).map(i => ({\n          x: i,\n          open: i,\n          close: i,\n          high: i,\n          low: i\n        })).reverse());\n        const dataResult = getData({\n          data,\n          x: \"x\",\n          open: \"open\",\n          close: \"close\",\n          high: \"high\",\n          low: \"low\",\n          sortKey: \"x\"\n        });\n        expect(dataResult.map(datum => datum.x)).toEqual([0, 1, 2, 3, 4]);\n      });","file":"jest/victory-candlestick/helper-methods.test.js","skipped":false,"dir":"test"},{"name":"returns a domain array for the x axis","suites":["victory-candlestick/helper-methods ","getDomain"],"updatePoint":{"line":53,"column":47,"index":1354},"line":53,"code":"      it(\"returns a domain array for the x axis\", () => {\n        const domainXResult = getDomain({\n          data: dataSet,\n          x: \"x\",\n          open: \"open\",\n          close: \"close\",\n          high: \"high\",\n          low: \"low\"\n        }, \"x\");\n        expect(domainXResult).toEqual([5, 10]);\n      });","file":"jest/victory-candlestick/helper-methods.test.js","skipped":false,"dir":"test"},{"name":"returns a domain array for the y axis","suites":["victory-candlestick/helper-methods ","getDomain"],"updatePoint":{"line":64,"column":47,"index":1667},"line":64,"code":"      it(\"returns a domain array for the y axis\", () => {\n        const domainYResult = getDomain({\n          data: dataSet,\n          open: \"open\",\n          close: \"close\",\n          high: \"high\",\n          low: \"low\"\n        }, \"y\");\n        expect(domainYResult).toEqual([5, 30]);\n      });","file":"jest/victory-candlestick/helper-methods.test.js","skipped":false,"dir":"test"},{"name":"attaches safe user props to the container component","suites":["components/victory-candlestick","default component rendering"],"updatePoint":{"line":28,"column":59,"index":693},"line":28,"code":"    it(\"attaches safe user props to the container component\", () => {\n      render( /*#__PURE__*/React.createElement(VictoryCandlestick, {\n        \"data-testid\": \"victory-candlestick\",\n        \"aria-label\": \"Chart\",\n        \"unsafe-prop\": \"test\"\n      }));\n      const container = screen.getByTestId(\"victory-candlestick\");\n      expect(screen.getByLabelText(\"Chart\")).toBeDefined();\n      expect(container).not.toHaveAttribute(\"unsafe-prop\");\n      expect(container.nodeName).toEqual(\"svg\");\n    });","file":"jest/victory-candlestick/victory-candlestick.test.js","skipped":false,"dir":"test"},{"name":"attaches safe user props to the group component if the component is rendered inside a VictoryChart","suites":["components/victory-candlestick","default component rendering"],"updatePoint":{"line":39,"column":106,"index":1241},"line":39,"code":"    it(\"attaches safe user props to the group component if the component is rendered inside a VictoryChart\", () => {\n      render( /*#__PURE__*/React.createElement(VictoryCandlestick, {\n        \"data-testid\": \"victory-candlestick\",\n        \"aria-label\": \"Chart\",\n        \"unsafe-prop\": \"test\"\n      }), {\n        wrapper: VictoryChart\n      });\n      const container = screen.getByTestId(\"victory-candlestick\");\n      expect(screen.getByLabelText(\"Chart\")).toBeDefined();\n      expect(container).not.toHaveAttribute(\"unsafe-prop\");\n      expect(container.nodeName).toEqual(\"g\");\n    });","file":"jest/victory-candlestick/victory-candlestick.test.js","skipped":false,"dir":"test"},{"name":"renders an svg with the correct width and height","suites":["components/victory-candlestick","default component rendering"],"updatePoint":{"line":52,"column":56,"index":1778},"line":52,"code":"    it(\"renders an svg with the correct width and height\", () => {\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryCandlestick, {\n        data: dataSet\n      }));\n      const svg = container.querySelector(\"svg\");\n      expect(svg.getAttribute(\"style\")).toContain(\"width: 100%; height: 100%\");\n    });","file":"jest/victory-candlestick/victory-candlestick.test.js","skipped":false,"dir":"test"},{"name":"renders an svg with the correct viewBox","suites":["components/victory-candlestick","default component rendering"],"updatePoint":{"line":61,"column":47,"index":2112},"line":61,"code":"    it(\"renders an svg with the correct viewBox\", () => {\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryCandlestick, {\n        data: dataSet\n      }));\n      const svg = container.querySelector(\"svg\");\n      const viewBoxValue = `0 0 ${450} ${300}`;\n      expect(svg.getAttribute(\"viewBox\")).toEqual(viewBoxValue);\n    });","file":"jest/victory-candlestick/victory-candlestick.test.js","skipped":false,"dir":"test"},{"name":"renders 8 points","suites":["components/victory-candlestick","default component rendering"],"updatePoint":{"line":71,"column":24,"index":2456},"line":71,"code":"    it(\"renders 8 points\", () => {\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryCandlestick, null));\n      const points = container.querySelectorAll(\"rect\");\n      expect(points).toHaveLength(8);\n    });","file":"jest/victory-candlestick/victory-candlestick.test.js","skipped":false,"dir":"test"},{"name":"renders injected points for {x, y} shaped data (default)","suites":["components/victory-candlestick","rendering data"],"updatePoint":{"line":80,"column":64,"index":2788},"line":80,"code":"    it(\"renders injected points for {x, y} shaped data (default)\", () => {\n      const data = range(5).map(i => ({\n        x: i,\n        open: i,\n        close: i,\n        high: i,\n        low: i\n      }));\n      render( /*#__PURE__*/React.createElement(VictoryCandlestick, {\n        data: data,\n        dataComponent: /*#__PURE__*/React.createElement(MyCandle, null)\n      }));\n      const points = screen.getAllByTestId(\"my-candle\");\n      expect(points).toHaveLength(5);\n    });","file":"jest/victory-candlestick/victory-candlestick.test.js","skipped":false,"dir":"test"},{"name":"renders points for {x, y} shaped data (default)","suites":["components/victory-candlestick","rendering data"],"updatePoint":{"line":95,"column":55,"index":3261},"line":95,"code":"    it(\"renders points for {x, y} shaped data (default)\", () => {\n      const data = range(5).map(i => ({\n        x: i,\n        open: i,\n        close: i,\n        high: i,\n        low: i\n      }));\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryCandlestick, {\n        data: data\n      }));\n      const points = container.querySelectorAll(\"rect\");\n      expect(points).toHaveLength(5);\n    });","file":"jest/victory-candlestick/victory-candlestick.test.js","skipped":false,"dir":"test"},{"name":"renders ordered bars when sortKey is passed","suites":["components/victory-candlestick","rendering data"],"updatePoint":{"line":111,"column":51,"index":3693},"line":111,"code":"    it(\"renders ordered bars when sortKey is passed\", () => {\n      const data = range(5).map(i => ({\n        x: i,\n        open: i,\n        close: i,\n        high: i,\n        low: i\n      })).reverse();\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryCandlestick, {\n        data: data,\n        sortKey: \"x\"\n      }));\n      const candles = container.querySelectorAll(\"rect\");\n      const xValues = Array.from(candles).map(bar => bar.getAttribute(\"x\"));\n      const xValuesAscending = [...xValues].sort((a, b) => a - b);\n      expect(xValues).toEqual(xValuesAscending);\n    });","file":"jest/victory-candlestick/victory-candlestick.test.js","skipped":false,"dir":"test"},{"name":"renders reverse ordered bars when sortOrder is descending","suites":["components/victory-candlestick","rendering data"],"updatePoint":{"line":130,"column":65,"index":4327},"line":130,"code":"    it(\"renders reverse ordered bars when sortOrder is descending\", () => {\n      const data = range(5).map(i => ({\n        x: i,\n        open: i,\n        close: i,\n        high: i,\n        low: i\n      })).reverse();\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryCandlestick, {\n        data: data,\n        sortKey: \"x\",\n        sortOrder: \"descending\"\n      }));\n      const candles = container.querySelectorAll(\"rect\");\n      const xValues = Array.from(candles).map(bar => bar.getAttribute(\"x\"));\n      const xValuesDescending = [...xValues].sort((a, b) => b - a);\n      expect(xValues).toEqual(xValuesDescending);\n    });","file":"jest/victory-candlestick/victory-candlestick.test.js","skipped":false,"dir":"test"},{"name":"renders points for array-shaped data","suites":["components/victory-candlestick","rendering data"],"updatePoint":{"line":150,"column":44,"index":4975},"line":150,"code":"    it(\"renders points for array-shaped data\", () => {\n      const data = range(10).map(i => [i, i, i, i, i]);\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryCandlestick, {\n        data: data,\n        x: 0,\n        open: 1,\n        close: 2,\n        high: 3,\n        low: 4\n      }));\n      const points = container.querySelectorAll(\"rect\");\n      expect(points).toHaveLength(10);\n    });","file":"jest/victory-candlestick/victory-candlestick.test.js","skipped":false,"dir":"test"},{"name":"renders points for deeply-nested data","suites":["components/victory-candlestick","rendering data"],"updatePoint":{"line":165,"column":45,"index":5408},"line":165,"code":"    it(\"renders points for deeply-nested data\", () => {\n      const data = range(20).map(i => ({\n        a: {\n          b: [{\n            x: i,\n            open: i,\n            close: i,\n            high: i,\n            low: i\n          }]\n        }\n      }));\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryCandlestick, {\n        data: data,\n        x: \"a.b[0].x\",\n        open: \"a.b[0].open\",\n        close: \"a.b[0].close\",\n        high: \"a.b[0].high\",\n        low: \"a.b[0].low\"\n      }));\n      const points = container.querySelectorAll(\"rect\");\n      expect(points).toHaveLength(20);\n    });","file":"jest/victory-candlestick/victory-candlestick.test.js","skipped":false,"dir":"test"},{"name":"renders data values with null accessor","suites":["components/victory-candlestick","rendering data"],"updatePoint":{"line":190,"column":46,"index":6048},"line":190,"code":"    it(\"renders data values with null accessor\", () => {\n      const data = range(10);\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryCandlestick, {\n        data: data,\n        x: null,\n        open: null,\n        close: null,\n        high: null,\n        low: null\n      }));\n      const points = container.querySelectorAll(\"rect\");\n      expect(points).toHaveLength(10);\n    });","file":"jest/victory-candlestick/victory-candlestick.test.js","skipped":false,"dir":"test"},{"name":"does not render data with null x, open, close, high, or low values","suites":["components/victory-candlestick","rendering data"],"updatePoint":{"line":205,"column":74,"index":6499},"line":205,"code":"    it(\"does not render data with null x, open, close, high, or low values\", () => {\n      const data = [{\n        x: 1,\n        open: 10,\n        close: 17,\n        high: 19,\n        low: 8\n      }, {\n        x: null,\n        open: 17,\n        close: 17,\n        high: 17,\n        low: 17\n      }, {\n        x: 2,\n        open: null,\n        close: 17,\n        high: 17,\n        low: 17\n      }, {\n        x: 3,\n        open: 17,\n        close: null,\n        high: 17,\n        low: 17\n      }, {\n        x: 4,\n        open: 17,\n        close: 17,\n        high: null,\n        low: 17\n      }, {\n        x: 5,\n        open: 17,\n        close: 17,\n        high: 17,\n        low: null\n      }];\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryCandlestick, {\n        data: data\n      }));\n      const points = container.querySelectorAll(\"rect\");\n      expect(points).toHaveLength(1);\n    });","file":"jest/victory-candlestick/victory-candlestick.test.js","skipped":false,"dir":"test"},{"name":"attaches an event to data","suites":["components/victory-candlestick","event handling"],"updatePoint":{"line":257,"column":33,"index":7530},"line":257,"code":"    it(\"attaches an event to data\", () => {\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryCandlestick, {\n        data: dataSet,\n        events: [{\n          target: \"data\",\n          eventHandlers: {\n            onClick: clickHandler\n          }\n        }]\n      }));\n      const data = container.querySelectorAll(\"rect\");\n      data.forEach((node, index) => {\n        clickHandler.mockReset();\n        fireEvent.click(node);\n        const {\n          key\n        } = clickHandler.mock.calls[0][1];\n        expect(key).toEqual(`candlestick-data-${index}`);\n      });\n    });","file":"jest/victory-candlestick/victory-candlestick.test.js","skipped":false,"dir":"test"},{"name":"adds an aria role to each point in the series","suites":["components/victory-candlestick","accessibility"],"updatePoint":{"line":281,"column":53,"index":8211},"line":281,"code":"    it(\"adds an aria role to each point in the series\", () => {\n      const data = [{\n        x: 0,\n        open: 9,\n        close: 30,\n        high: 56,\n        low: 7\n      }, {\n        x: 1,\n        open: 80,\n        close: 40,\n        high: 120,\n        low: 10\n      }, {\n        x: 2,\n        open: 50,\n        close: 80,\n        high: 90,\n        low: 20\n      }];\n      render( /*#__PURE__*/React.createElement(VictoryCandlestick, {\n        data: data\n      }));\n      const presentationElements = screen.getAllByRole(\"presentation\"); // Each data point is 3 (rect and 2 lines) for 9 total, plus the container element\n\n      expect(presentationElements).toHaveLength(10);\n    });","file":"jest/victory-candlestick/victory-candlestick.test.js","skipped":false,"dir":"test"},{"name":"adds an aria-label and tabIndex to Candle primitive","suites":["components/victory-candlestick","accessibility"],"updatePoint":{"line":308,"column":59,"index":8905},"line":308,"code":"    it(\"adds an aria-label and tabIndex to Candle primitive\", () => {\n      const data = [{\n        x: new Date(2016, 6, 1),\n        open: 20,\n        close: 43,\n        high: 66,\n        low: 7\n      }, {\n        x: new Date(2016, 6, 2),\n        open: 80,\n        close: 40,\n        high: 120,\n        low: 10\n      }, {\n        x: new Date(2016, 6, 3),\n        open: 50,\n        close: 80,\n        high: 90,\n        low: 20\n      }];\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryCandlestick, {\n        data: data,\n        dataComponent: /*#__PURE__*/React.createElement(Candle, {\n          \"data-testid\": \"candle\",\n          ariaLabel: ({\n            datum\n          }) => `open ${datum.open}, close ${datum.close}`,\n          tabIndex: ({\n            index\n          }) => index + 5\n        })\n      }));\n      container.querySelectorAll(\"rect\").forEach((node, index) => {\n        const expectedLabel = `open ${data[index].open}, close ${data[index].close}`;\n        expect(node.getAttribute(\"aria-label\")).toEqual(expectedLabel);\n        expect(node.getAttribute(\"tabindex\")).toEqual(`${index + 5}`);\n      });\n    });","file":"jest/victory-candlestick/victory-candlestick.test.js","skipped":false,"dir":"test"},{"name":"returns a pair of default axes when no children are given","suites":["victory-chart/helpers-methods","getChildComponents"],"updatePoint":{"line":17,"column":65,"index":664},"line":17,"code":"    it(\"returns a pair of default axes when no children are given\", () => {\n      const children = [];\n      const result = getChildComponents({\n        children\n      }, defaultAxes);\n      expect(result).toHaveLength(2);\n      expect(result).toEqual([defaultAxes.independent, defaultAxes.dependent]);\n    });","file":"jest/victory-chart/helper-methods.test.js","skipped":false,"dir":"test"},{"name":"adds default axes when none of the children are axis components","suites":["victory-chart/helpers-methods","getChildComponents"],"updatePoint":{"line":25,"column":71,"index":981},"line":25,"code":"    it(\"adds default axes when none of the children are axis components\", () => {\n      const line = getVictoryLine({});\n      const children = [line];\n      const result = getChildComponents({\n        children\n      }, defaultAxes);\n      expect(result).toHaveLength(3);\n      expect(result).toContain(defaultAxes.independent);\n      expect(result).toContain(defaultAxes.dependent);\n    });","file":"jest/victory-chart/helper-methods.test.js","skipped":false,"dir":"test"},{"name":"does not add default axes if axis any axis components exist in children","suites":["victory-chart/helpers-methods","getChildComponents"],"updatePoint":{"line":35,"column":79,"index":1381},"line":35,"code":"    it(\"does not add default axes if axis any axis components exist in children\", () => {\n      const axis = getVictoryAxis({});\n      const children = [axis];\n      const result = getChildComponents({\n        children\n      }, defaultAxes);\n      expect(result).toHaveLength(1);\n      expect(result[0].props).toEqual(axis.props);\n    });","file":"jest/victory-chart/helper-methods.test.js","skipped":false,"dir":"test"},{"name":"renders an svg with the correct width and height","suites":["components/victory-chart","default component rendering"],"updatePoint":{"line":7,"column":56,"index":337},"line":7,"code":"    it(\"renders an svg with the correct width and height\", () => {\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryChart, null));\n      const svg = container.querySelector(\"svg\");\n      expect(svg.getAttribute(\"style\")).toContain(\"width: 100%; height: 100%\");\n    });","file":"jest/victory-chart/victory-chart.test.js","skipped":false,"dir":"test"},{"name":"renders an svg with the correct viewBox","suites":["components/victory-chart","default component rendering"],"updatePoint":{"line":14,"column":47,"index":638},"line":14,"code":"    it(\"renders an svg with the correct viewBox\", () => {\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryChart, null));\n      const svg = container.querySelector(\"svg\");\n      const viewBoxValue = `0 0 ${450} ${300}`;\n      expect(svg.getAttribute(\"viewBox\")).toEqual(viewBoxValue);\n    });","file":"jest/victory-chart/victory-chart.test.js","skipped":false,"dir":"test"},{"name":"renders two axes by default","suites":["components/victory-chart","axis rendering"],"updatePoint":{"line":24,"column":35,"index":1003},"line":24,"code":"    it(\"renders two axes by default\", () => {\n      const props = {\n        defaultAxes: {\n          independent: /*#__PURE__*/React.createElement(VictoryAxis, {\n            \"data-testid\": \"axis\"\n          }),\n          dependent: /*#__PURE__*/React.createElement(VictoryAxis, {\n            \"data-testid\": \"axis\",\n            dependentAxis: true\n          })\n        }\n      };\n      render( /*#__PURE__*/React.createElement(VictoryChart, props));\n      const axes = screen.getAllByTestId(\"axis\");\n      expect(axes).toHaveLength(2);\n    });","file":"jest/victory-chart/victory-chart.test.js","skipped":false,"dir":"test"},{"name":"renders one axis if one axis is given","suites":["components/victory-chart","axis rendering"],"updatePoint":{"line":40,"column":45,"index":1555},"line":40,"code":"    it(\"renders one axis if one axis is given\", () => {\n      render( /*#__PURE__*/React.createElement(VictoryChart, null, /*#__PURE__*/React.createElement(VictoryAxis, {\n        \"data-testid\": \"axis\"\n      })));\n      const axes = screen.getAllByTestId(\"axis\");\n      expect(axes).toHaveLength(1);\n    }); // TODO: Is this test useful? It's hard to test this with react testing library, which","file":"jest/victory-chart/victory-chart.test.js","skipped":false,"dir":"test"},{"name":"allows axis to control the crossAxis, and offset props","suites":["components/victory-chart","axis rendering"],"updatePoint":{"line":49,"column":62,"index":2005},"line":49,"code":"    it(\"allows axis to control the crossAxis, and offset props\", () => {\n      render( /*#__PURE__*/React.createElement(VictoryChart, null, /*#__PURE__*/React.createElement(VictoryAxis, {\n        \"data-testid\": \"axis\",\n        crossAxis: false,\n        offsetX: 50,\n        offsetY: 50,\n        \"data-cross-axis\": props => props.crossAxis,\n        \"data-offset-x\": props => props.offsetX,\n        \"data-offset-y\": props => props.offsetY\n      })));\n      const axis = screen.getByTestId(\"axis\");\n      expect(axis.getAttribute(\"data-cross-axis\")).toEqual(\"false\");\n      expect(axis.getAttribute(\"data-offset-x\")).toEqual(\"50\");\n      expect(axis.getAttribute(\"data-offset-y\")).toEqual(\"50\");\n    });","file":"jest/victory-chart/victory-chart.test.js","skipped":false,"dir":"test"},{"name":"accepts user props","suites":["components/victory-chart","axis rendering"],"updatePoint":{"line":64,"column":26,"index":2670},"line":64,"code":"    it(\"accepts user props\", () => {\n      render( /*#__PURE__*/React.createElement(VictoryChart, {\n        \"data-testid\": \"victory-chart\",\n        \"aria-label\": \"Chart\"\n      }));\n      expect(screen.getByTestId(\"victory-chart\")).toBeDefined();\n      expect(screen.getByLabelText(\"Chart\")).toBeDefined();\n    });","file":"jest/victory-chart/victory-chart.test.js","skipped":false,"dir":"test"},{"name":"attaches an event to the parent svg","suites":["components/victory-chart","event handling"],"updatePoint":{"line":74,"column":43,"index":3044},"line":74,"code":"    it(\"attaches an event to the parent svg\", () => {\n      const clickHandler = jest.fn();\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryChart, {\n        events: [{\n          target: \"parent\",\n          eventHandlers: {\n            onClick: clickHandler\n          }\n        }]\n      }));\n      const svg = container.querySelector(\"svg\");\n      fireEvent.click(svg);\n      expect(clickHandler).toHaveBeenCalled();\n    });","file":"jest/victory-chart/victory-chart.test.js","skipped":false,"dir":"test"},{"name":"renders an g with an aria-label","suites":["components/victory-accessible-group"],"updatePoint":{"line":5,"column":37,"index":225},"line":5,"code":"  it(\"renders an g with an aria-label\", () => {\n    const {\n      container\n    } = render( /*#__PURE__*/React.createElement(VictoryAccessibleGroup, {\n      \"aria-label\": \"test-aria-label\"\n    }), {\n      wrapper: \"svg\"\n    });\n    expect(container.querySelector(\"g\")).toMatchInlineSnapshot(`\n      <g\n        aria-label=\"test-aria-label\"\n        class=\"VictoryAccessibleGroup\"\n      />\n    `);\n  });","file":"jest/victory-core/victory-accessible-group/victory-accessible-group.test.js","skipped":false,"dir":"test"},{"name":"renders an g with a tabIndex and className","suites":["components/victory-accessible-group"],"updatePoint":{"line":20,"column":48,"index":637},"line":20,"code":"  it(\"renders an g with a tabIndex and className\", () => {\n    const {\n      container\n    } = render( /*#__PURE__*/React.createElement(VictoryAccessibleGroup, {\n      tabIndex: 5,\n      className: \"accessibility\"\n    }), {\n      wrapper: \"svg\"\n    });\n    expect(container.querySelector(\"g\")).toMatchInlineSnapshot(`\n      <g\n        class=\"accessibility\"\n        tabindex=\"5\"\n      />\n    `);\n  });","file":"jest/victory-core/victory-accessible-group/victory-accessible-group.test.js","skipped":false,"dir":"test"},{"name":"renders an g with a desc node if given","suites":["components/victory-accessible-group"],"updatePoint":{"line":36,"column":44,"index":1034},"line":36,"code":"  it(\"renders an g with a desc node if given\", () => {\n    const {\n      container\n    } = render( /*#__PURE__*/React.createElement(VictoryAccessibleGroup, {\n      \"aria-label\": \"desc node tests\",\n      desc: \"test description\",\n      \"aria-describedby\": \"describes group\"\n    }), {\n      wrapper: \"svg\"\n    });\n    expect(container.querySelector(\"g\")).toMatchInlineSnapshot(`\n      <g\n        aria-describedby=\"describes group\"\n        aria-label=\"desc node tests\"\n        class=\"VictoryAccessibleGroup\"\n      >\n        <desc\n          id=\"describes group\"\n        >\n          test description\n        </desc>\n      </g>\n    `);\n  });","file":"jest/victory-core/victory-accessible-group/victory-accessible-group.test.js","skipped":false,"dir":"test"},{"name":"uses the desc getAttribute value for descId and aria-describedby if no aria-describedby getAttribute value","suites":["components/victory-accessible-group"],"updatePoint":{"line":60,"column":112,"index":1738},"line":60,"code":"  it(\"uses the desc getAttribute value for descId and aria-describedby if no aria-describedby getAttribute value\", () => {\n    const {\n      container\n    } = render( /*#__PURE__*/React.createElement(VictoryAccessibleGroup, {\n      \"aria-label\": \"desc node tests\",\n      desc: \"applies to both aria-describeby and descId\"\n    }), {\n      wrapper: \"svg\"\n    });\n    expect(container.querySelector(\"g\")).toMatchInlineSnapshot(`\n      <g\n        aria-describedby=\"applies-to-both-aria-describeby-and-descId\"\n        aria-label=\"desc node tests\"\n        class=\"VictoryAccessibleGroup\"\n      >\n        <desc\n          id=\"applies-to-both-aria-describeby-and-descId\"\n        >\n          applies to both aria-describeby and descId\n        </desc>\n      </g>\n    `);\n  });","file":"jest/victory-core/victory-accessible-group/victory-accessible-group.test.js","skipped":false,"dir":"test"},{"name":"does not attempt to interpolate identical values","suites":["victoryInterpolator"],"updatePoint":{"line":4,"column":54,"index":217},"line":4,"code":"  it(\"does not attempt to interpolate identical values\", () => {\n    // This case fails with the default interpolator, returning *almost* 3.\n    expect(victoryInterpolator(3, 3)(0.25920000000000004)).toEqual(3);\n  });","file":"jest/victory-core/victory-animation/util.test.js","skipped":false,"dir":"test"},{"name":"does not attempt to interpolate Boolean values","suites":["victoryInterpolator"],"updatePoint":{"line":8,"column":52,"index":433},"line":8,"code":"  it(\"does not attempt to interpolate Boolean values\", () => {\n    // The default interpolator would return 0.5.\n    expect(victoryInterpolator(false, true)(0.5)).toEqual(true);\n  });","file":"jest/victory-core/victory-animation/util.test.js","skipped":false,"dir":"test"},{"name":"always returns the end value if starting from null","suites":["victoryInterpolator"],"updatePoint":{"line":12,"column":56,"index":621},"line":12,"code":"  it(\"always returns the end value if starting from null\", () => {\n    const interpolator = victoryInterpolator(null, 5);\n    expect(interpolator(0)).toEqual(5);\n    expect(interpolator(0.49)).toEqual(5);\n    expect(interpolator(0.5)).toEqual(5);\n    expect(interpolator(1)).toEqual(5);\n  });","file":"jest/victory-core/victory-animation/util.test.js","skipped":false,"dir":"test"},{"name":"always returns the end value if ending on null","suites":["victoryInterpolator"],"updatePoint":{"line":19,"column":52,"index":910},"line":19,"code":"  it(\"always returns the end value if ending on null\", () => {\n    const interpolator = victoryInterpolator(5, null);\n    expect(interpolator(0)).toBeNull();\n    expect(interpolator(0.49)).toBeNull();\n    expect(interpolator(0.5)).toBeNull();\n    expect(interpolator(1)).toBeNull();\n  });","file":"jest/victory-core/victory-animation/util.test.js","skipped":false,"dir":"test"},{"name":"always returns the end value if starting from undefined","suites":["victoryInterpolator"],"updatePoint":{"line":26,"column":61,"index":1208},"line":26,"code":"  it(\"always returns the end value if starting from undefined\", () => {\n    const interpolator = victoryInterpolator(undefined, 5);\n    expect(interpolator(0)).toEqual(5);\n    expect(interpolator(0.49)).toEqual(5);\n    expect(interpolator(0.5)).toEqual(5);\n    expect(interpolator(1)).toEqual(5);\n  });","file":"jest/victory-core/victory-animation/util.test.js","skipped":false,"dir":"test"},{"name":"always returns the end value if ending on undefined","suites":["victoryInterpolator"],"updatePoint":{"line":33,"column":57,"index":1507},"line":33,"code":"  it(\"always returns the end value if ending on undefined\", () => {\n    const interpolator = victoryInterpolator(5, undefined);\n    expect(interpolator(0)).toBeUndefined();\n    expect(interpolator(0.49)).toBeUndefined();\n    expect(interpolator(0.5)).toBeUndefined();\n    expect(interpolator(1)).toBeUndefined();\n  });","file":"jest/victory-core/victory-animation/util.test.js","skipped":false,"dir":"test"},{"name":"interpolates functions","suites":["victoryInterpolator"],"updatePoint":{"line":40,"column":28,"index":1797},"line":40,"code":"  it(\"interpolates functions\", () => {\n    const fromFn = () => 5;\n\n    const toFn = () => 10;\n\n    const interpolator = victoryInterpolator(fromFn, toFn);\n    const halfwayFn = interpolator(0.5);\n    expect(halfwayFn).toBeInstanceOf(Function);\n    expect(halfwayFn()).toEqual(7.5);\n  });","file":"jest/victory-core/victory-animation/util.test.js","skipped":false,"dir":"test"},{"name":"interpolates string values","suites":["victoryInterpolator"],"updatePoint":{"line":50,"column":32,"index":2090},"line":50,"code":"  it(\"interpolates string values\", () => {\n    // From https://github.com/d3/d3-interpolate/blob/main/test/value-test.js#L5-L7\n    const interpolator = victoryInterpolator(\"foo\", \"bar\");\n    expect(interpolator(0.5)).toEqual(\"bar\");\n  });","file":"jest/victory-core/victory-animation/util.test.js","skipped":false,"dir":"test"},{"name":"interpolates color values","suites":["victoryInterpolator"],"updatePoint":{"line":55,"column":31,"index":2328},"line":55,"code":"  it(\"interpolates color values\", () => {\n    // From https://github.com/d3/d3-interpolate/blob/main/test/value-test.js#L15\n    const interpolator = victoryInterpolator(\"red\", \"blue\");\n    expect(interpolator(0.5)).toEqual(\"rgb(128, 0, 128)\");\n  });","file":"jest/victory-core/victory-animation/util.test.js","skipped":false,"dir":"test"},{"name":"interpolates object values","suites":["victoryInterpolator"],"updatePoint":{"line":60,"column":32,"index":2579},"line":60,"code":"  it(\"interpolates object values\", () => {\n    // From https://github.com/d3/d3-interpolate/blob/main/test/value-test.js#L44\n    const interpolator = victoryInterpolator({\n      color: \"red\"\n    }, {\n      color: \"blue\"\n    });\n    expect(interpolator(0.5)).toEqual({\n      color: \"rgb(128, 0, 128)\"\n    });\n  });","file":"jest/victory-core/victory-animation/util.test.js","skipped":false,"dir":"test"},{"name":"renders an svg with a role of img","suites":["components/victory-container"],"updatePoint":{"line":5,"column":39,"index":225},"line":5,"code":"  it(\"renders an svg with a role of img\", () => {\n    const {\n      container\n    } = render( /*#__PURE__*/React.createElement(VictoryContainer, null));\n    const output = container.querySelector(\"svg\");\n    expect(output.getAttribute(\"role\")).toContain(\"img\");\n  });","file":"jest/victory-core/victory-container/victory-container.test.js","skipped":false,"dir":"test"},{"name":"renders an svg with a custom role","suites":["components/victory-container"],"updatePoint":{"line":12,"column":39,"index":493},"line":12,"code":"  it(\"renders an svg with a custom role\", () => {\n    const {\n      container\n    } = render( /*#__PURE__*/React.createElement(VictoryContainer, {\n      role: \"presentation\"\n    }));\n    expect(container.querySelector(\"svg\").getAttribute(\"role\")).toEqual(\"presentation\");\n  });","file":"jest/victory-core/victory-container/victory-container.test.js","skipped":false,"dir":"test"},{"name":"renders an svg with a title node","suites":["components/victory-container"],"updatePoint":{"line":20,"column":38,"index":770},"line":20,"code":"  it(\"renders an svg with a title node\", () => {\n    const {\n      container\n    } = render( /*#__PURE__*/React.createElement(VictoryContainer, {\n      title: \"Victory Chart\"\n    }));\n    expect(container.querySelector(\"title\")).toMatchInlineSnapshot(`\n      <title\n        id=\"victory-container-3-title\"\n      >\n        Victory Chart\n      </title>\n    `);\n  });","file":"jest/victory-core/victory-container/victory-container.test.js","skipped":false,"dir":"test"},{"name":"renders an svg with a desc node","suites":["components/victory-container"],"updatePoint":{"line":34,"column":37,"index":1133},"line":34,"code":"  it(\"renders an svg with a desc node\", () => {\n    const {\n      container\n    } = render( /*#__PURE__*/React.createElement(VictoryContainer, {\n      desc: \"description\"\n    }));\n    expect(container.querySelector(\"desc\")).toMatchInlineSnapshot(`\n      <desc\n        id=\"victory-container-4-desc\"\n      >\n        description\n      </desc>\n    `);\n  });","file":"jest/victory-core/victory-container/victory-container.test.js","skipped":false,"dir":"test"},{"name":"renders an svg with an aria-describedby attribute","suites":["components/victory-container"],"updatePoint":{"line":48,"column":55,"index":1505},"line":48,"code":"  it(\"renders an svg with an aria-describedby attribute\", () => {\n    const {\n      container\n    } = render( /*#__PURE__*/React.createElement(VictoryContainer, {\n      \"aria-describedby\": \"testid\",\n      desc: \"description\"\n    }));\n    const describedElement = container.querySelector(`svg[aria-describedby~=\"testid\"]`);\n    expect(describedElement).toBeDefined();\n  });","file":"jest/victory-core/victory-container/victory-container.test.js","skipped":false,"dir":"test"},{"name":"renders an svg with an aria-labelledby attribute","suites":["components/victory-container"],"updatePoint":{"line":58,"column":54,"index":1877},"line":58,"code":"  it(\"renders an svg with an aria-labelledby attribute\", () => {\n    const {\n      container\n    } = render( /*#__PURE__*/React.createElement(VictoryContainer, {\n      \"aria-labelledby\": \"testid\",\n      title: \"title\"\n    }));\n    const describedElement = container.querySelector(`svg[aria-labelledby~=\"testid\"]`);\n    expect(describedElement).toBeDefined();\n  });","file":"jest/victory-core/victory-container/victory-container.test.js","skipped":false,"dir":"test"},{"name":"renders an svg with the correct viewbox","suites":["components/victory-container"],"updatePoint":{"line":68,"column":45,"index":2233},"line":68,"code":"  it(\"renders an svg with the correct viewbox\", () => {\n    const width = 300;\n    const height = 300;\n    const {\n      container\n    } = render( /*#__PURE__*/React.createElement(VictoryContainer, {\n      width: width,\n      height: height\n    }));\n    const svg = container.querySelector(\"svg\");\n    const viewBoxValue = `0 0 ${width} ${height}`;\n    expect(svg.getAttribute(\"viewBox\")).toEqual(viewBoxValue);\n  });","file":"jest/victory-core/victory-container/victory-container.test.js","skipped":false,"dir":"test"},{"name":"attaches an event to the container","suites":["components/victory-container"],"updatePoint":{"line":81,"column":40,"index":2646},"line":81,"code":"  it(\"attaches an event to the container\", () => {\n    const clickHandler = jest.fn();\n    const {\n      container\n    } = render( /*#__PURE__*/React.createElement(VictoryContainer, {\n      events: {\n        onClick: clickHandler\n      }\n    }));\n    const svg = container.querySelector(\"svg\");\n    fireEvent.click(svg);\n    expect(clickHandler).toBeCalled();\n  });","file":"jest/victory-core/victory-container/victory-container.test.js","skipped":false,"dir":"test"},{"name":"accepts user props","suites":["components/victory-label"],"updatePoint":{"line":5,"column":24,"index":215},"line":5,"code":"  it(\"accepts user props\", () => {\n    render( /*#__PURE__*/React.createElement(VictoryLabel, {\n      \"data-testid\": \"victory-label\",\n      \"aria-label\": \"test-aria-label\",\n      text: \"label\"\n    }), {\n      wrapper: \"svg\"\n    });\n    expect(screen.getByTestId(\"victory-label\")).toBeDefined();\n    expect(screen.getByLabelText(\"test-aria-label\")).toBeDefined();\n  });","file":"jest/victory-core/victory-label/victory-label.test.js","skipped":false,"dir":"test"},{"name":"has expected content with render","suites":["components/victory-label"],"updatePoint":{"line":16,"column":38,"index":598},"line":16,"code":"  it(\"has expected content with render\", () => {\n    const {\n      container\n    } = render( /*#__PURE__*/React.createElement(VictoryLabel, {\n      text: \"such text, wow\"\n    }), {\n      wrapper: \"svg\"\n    });\n    expect(container.querySelector(\"tspan\").innerHTML).toMatchInlineSnapshot(`\"such text, wow\"`);\n  });","file":"jest/victory-core/victory-label/victory-label.test.js","skipped":false,"dir":"test"},{"name":"sets dx and dy for text element","suites":["components/victory-label"],"updatePoint":{"line":26,"column":37,"index":911},"line":26,"code":"  it(\"sets dx and dy for text element\", () => {\n    const {\n      container\n    } = render( /*#__PURE__*/React.createElement(VictoryLabel, {\n      dx: 30,\n      dy: 30,\n      text: \"such text, wow\"\n    }), {\n      wrapper: \"svg\"\n    });\n    const output = container.querySelector(\"text\");\n    expect(output.getAttribute(\"dx\")).toEqual(\"30\"); // dy = props.dy + (capHeight(0.71) / 2 + (0.5 - length(1) / 2) * lineHeight(1)) * fontSize(14);\n\n    expect(output.getAttribute(\"dy\")).toBeNull();\n  });","file":"jest/victory-core/victory-label/victory-label.test.js","skipped":false,"dir":"test"},{"name":"sets x and y for text element","suites":["components/victory-label"],"updatePoint":{"line":41,"column":35,"index":1405},"line":41,"code":"  it(\"sets x and y for text element\", () => {\n    const {\n      container\n    } = render( /*#__PURE__*/React.createElement(VictoryLabel, {\n      x: \"100%\",\n      y: 30,\n      text: \"such text, wow\"\n    }), {\n      wrapper: \"svg\"\n    });\n    const output = container.querySelector(\"text\");\n    expect(output.getAttribute(\"x\")).toEqual(\"100%\");\n    expect(parseFloat(output.getAttribute(\"y\"))).toEqual(34.97);\n  });","file":"jest/victory-core/victory-label/victory-label.test.js","skipped":false,"dir":"test"},{"name":"has a transform property that rotates the text to match the labelAngle getAttribute","suites":["components/victory-label"],"updatePoint":{"line":55,"column":89,"index":1873},"line":55,"code":"  it(\"has a transform property that rotates the text to match the labelAngle getAttribute\", () => {\n    const {\n      container\n    } = render( /*#__PURE__*/React.createElement(VictoryLabel, {\n      angle: 46,\n      text: \"such text, wow\"\n    }), {\n      wrapper: \"svg\"\n    });\n    const output = container.querySelector(\"text\");\n    expect(output.getAttribute(\"transform\")).toContain(\"rotate(46\");\n  });","file":"jest/victory-core/victory-label/victory-label.test.js","skipped":false,"dir":"test"},{"name":"accepts the angle getAttribute as a function","suites":["components/victory-label"],"updatePoint":{"line":67,"column":50,"index":2239},"line":67,"code":"  it(\"accepts the angle getAttribute as a function\", () => {\n    const {\n      container\n    } = render( /*#__PURE__*/React.createElement(VictoryLabel, {\n      angle: () => 46,\n      text: \"such text, wow\"\n    }), {\n      wrapper: \"svg\"\n    });\n    const output = container.querySelector(\"text\");\n    expect(output.getAttribute(\"transform\")).toContain(\"rotate(46\");\n  });","file":"jest/victory-core/victory-label/victory-label.test.js","skipped":false,"dir":"test"},{"name":"strips px from fontSize","suites":["components/victory-label"],"updatePoint":{"line":79,"column":29,"index":2590},"line":79,"code":"  it(\"strips px from fontSize\", () => {\n    const {\n      container\n    } = render( /*#__PURE__*/React.createElement(VictoryLabel, {\n      style: {\n        fontSize: \"10px\"\n      },\n      text: \"such text, wow\",\n      \"data-font-size\": props => props.style.fontSize\n    }), {\n      wrapper: \"svg\"\n    });\n    const output = container.querySelector(\"text\");\n    expect(output.getAttribute(\"data-font-size\")).toEqual(\"10\");\n  });","file":"jest/victory-core/victory-label/victory-label.test.js","skipped":false,"dir":"test"},{"name":"uses a default fontSize when an invalid fontSize is given","suites":["components/victory-label"],"updatePoint":{"line":94,"column":63,"index":3052},"line":94,"code":"  it(\"uses a default fontSize when an invalid fontSize is given\", () => {\n    // This suppresses the console warning for invalid fontSize prop\n    jest.spyOn(Log, \"warn\").mockImplementation(() => {});\n    const {\n      container\n    } = render( /*#__PURE__*/React.createElement(VictoryLabel, {\n      style: {\n        fontSize: \"foo\"\n      },\n      text: \"such text, wow\"\n    }), {\n      wrapper: \"svg\"\n    });\n    const output = container.querySelector(\"tspan\");\n    expect(output.getAttribute(\"style\")).toContain(\"font-size: 14px\");\n  });","file":"jest/victory-core/victory-label/victory-label.test.js","skipped":false,"dir":"test"},{"name":"renders an array of text as seperate tspans","suites":["components/victory-label"],"updatePoint":{"line":110,"column":49,"index":3578},"line":110,"code":"  it(\"renders an array of text as seperate tspans\", () => {\n    const {\n      container\n    } = render( /*#__PURE__*/React.createElement(VictoryLabel, {\n      text: [\"one\", \"two\", \"three\"]\n    }), {\n      wrapper: \"svg\"\n    });\n    const output = container.querySelectorAll(\"tspan\");\n    expect(output.length).toEqual(3);\n  });","file":"jest/victory-core/victory-label/victory-label.test.js","skipped":false,"dir":"test"},{"name":"renders splits newlines into tspans","suites":["components/victory-label"],"updatePoint":{"line":121,"column":41,"index":3898},"line":121,"code":"  it(\"renders splits newlines into tspans\", () => {\n    const {\n      container\n    } = render( /*#__PURE__*/React.createElement(VictoryLabel, {\n      text: \"one\\ntwo\\nthree\"\n    }), {\n      wrapper: \"svg\"\n    });\n    const output = container.querySelectorAll(\"tspan\");\n    expect(output.length).toEqual(3);\n  });","file":"jest/victory-core/victory-label/victory-label.test.js","skipped":false,"dir":"test"},{"name":"renders title and desc if provided ","suites":["components/victory-label"],"updatePoint":{"line":132,"column":41,"index":4212},"line":132,"code":"  it(\"renders title and desc if provided \", () => {\n    const {\n      container\n    } = render( /*#__PURE__*/React.createElement(VictoryLabel, {\n      text: \"title and desc\",\n      title: \"title\",\n      desc: \"desc\"\n    }), {\n      wrapper: \"svg\"\n    });\n    const {\n      container: container2\n    } = render( /*#__PURE__*/React.createElement(VictoryLabel, {\n      text: \"title and desc\"\n    }), {\n      wrapper: \"svg\"\n    });\n    const title = container.querySelectorAll(\"title\");\n    expect(title.length).toEqual(1);\n    const desc = container.querySelectorAll(\"desc\");\n    expect(desc.length).toEqual(1);\n    const noTitle = container2.querySelectorAll(\"title\");\n    expect(noTitle.length).toEqual(0);\n    const noDesc = container2.querySelectorAll(\"desc\");\n    expect(noDesc.length).toEqual(0);\n  });","file":"jest/victory-core/victory-label/victory-label.test.js","skipped":false,"dir":"test"},{"name":"renders tspan styles independently when `style` is an array","suites":["components/victory-label"],"updatePoint":{"line":158,"column":65,"index":5042},"line":158,"code":"  it(\"renders tspan styles independently when `style` is an array\", () => {\n    const fill = [\"red\", \"green\", \"blue\"];\n    const {\n      container\n    } = render( /*#__PURE__*/React.createElement(VictoryLabel, {\n      text: \"one\\ntwo\\nthree\",\n      style: [{\n        fill: fill[0]\n      }, {\n        fill: fill[1]\n      }, {\n        fill: fill[2]\n      }]\n    }), {\n      wrapper: \"svg\"\n    });\n    const output = container.querySelectorAll(\"tspan\");\n    output.forEach((tspan, index) => {\n      expect(tspan.getAttribute(\"style\")).toContain(`fill: ${fill[index]}`);\n    });\n  });","file":"jest/victory-core/victory-label/victory-label.test.js","skipped":false,"dir":"test"},{"name":"attaches an to the parent object","suites":["components/victory-label","event handling"],"updatePoint":{"line":180,"column":40,"index":5635},"line":180,"code":"    it(\"attaches an to the parent object\", () => {\n      const clickHandler = jest.fn();\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryLabel, {\n        text: \"hi\",\n        events: {\n          onClick: clickHandler\n        }\n      }), {\n        wrapper: \"svg\"\n      });\n      fireEvent.click(container.querySelector(\"text\"));\n      expect(clickHandler).toHaveBeenCalled();\n    });","file":"jest/victory-core/victory-label/victory-label.test.js","skipped":false,"dir":"test"},{"name":"renders 'tspan' elements inline when `inline` getAttribute is passed","suites":["components/victory-label","event handling"],"updatePoint":{"line":196,"column":74,"index":6099},"line":196,"code":"  it(\"renders 'tspan' elements inline when `inline` getAttribute is passed\", () => {\n    const {\n      container\n    } = render( /*#__PURE__*/React.createElement(VictoryLabel, {\n      text: [\"Inline\", \"label\", \"testing\"],\n      inline: true,\n      dx: 5\n    }), {\n      wrapper: \"svg\"\n    });\n    const output = container.querySelectorAll(\"tspan\");\n    output.forEach(tspan => {\n      // passing `inline` sets x and dy to undefined\n      expect(tspan.getAttribute(\"x\")).toBeNull();\n      expect(tspan.getAttribute(\"dy\") === null || tspan.getAttribute(\"dy\") === \"0\").toBeTruthy();\n      expect(tspan.getAttribute(\"dx\")).toEqual(\"5\");\n    });\n  });","file":"jest/victory-core/victory-label/victory-label.test.js","skipped":false,"dir":"test"},{"name":"passes lineHeight as an array if provided","suites":["components/victory-label","event handling"],"updatePoint":{"line":214,"column":47,"index":6719},"line":214,"code":"  it(\"passes lineHeight as an array if provided\", () => {\n    const lineHeight = [1, 2, 3];\n    const expectedDy = [0, 21, 35];\n    const {\n      container\n    } = render( /*#__PURE__*/React.createElement(VictoryLabel, {\n      text: [\"lineHeight\", \"array\", \"testing\"],\n      lineHeight: lineHeight\n    }), {\n      wrapper: \"svg\"\n    });\n    const output = container.querySelectorAll(\"tspan\");\n    output.forEach((tspan, index) => {\n      /*\n      to calculate dy:\n      ((this.lineHeight[i] + (this.lineHeight[i - 1] || this.lineHeight[0])) / 2)\n      */\n      expect(parseInt(tspan.getAttribute(\"dy\"))).toEqual(expectedDy[index]);\n    });\n  });","file":"jest/victory-core/victory-label/victory-label.test.js","skipped":false,"dir":"test"},{"name":"defaults lineHeight to 1 if an empty array is provided for lineHeight","suites":["components/victory-label","event handling"],"updatePoint":{"line":234,"column":75,"index":7393},"line":234,"code":"  it(\"defaults lineHeight to 1 if an empty array is provided for lineHeight\", () => {\n    const expectedDy = [0, 14, 14, 14];\n    const {\n      container\n    } = render( /*#__PURE__*/React.createElement(VictoryLabel, {\n      text: [\"lineHeight\", \"empty\", \"array\", \"testing\"],\n      lineHeight: []\n    }), {\n      wrapper: \"svg\"\n    });\n    const output = container.querySelectorAll(\"tspan\");\n    output.forEach((tspan, index) => {\n      expect(parseInt(tspan.getAttribute(\"dy\"))).toEqual(expectedDy[index]);\n    });\n  });","file":"jest/victory-core/victory-label/victory-label.test.js","skipped":false,"dir":"test"},{"name":"defaults style to `defaultStyles` if an empty array is provided for `style`","suites":["components/victory-label","event handling"],"updatePoint":{"line":249,"column":81,"index":7921},"line":249,"code":"  it(\"defaults style to `defaultStyles` if an empty array is provided for `style`\", () => {\n    const {\n      container\n    } = render( /*#__PURE__*/React.createElement(VictoryLabel, {\n      text: [\"style\", \"empty\", \"array\", \"testing\"],\n      style: []\n    }), {\n      wrapper: \"svg\"\n    });\n    expect(container.querySelector(\"tspan\").getAttribute(\"style\")).toMatchInlineSnapshot(`\"fill: #252525; font-size: 14px; font-family: 'Gill Sans', 'Gill Sans MT', 'Ser­avek', 'Trebuchet MS', sans-serif; stroke: transparent;\"`);\n  });","file":"jest/victory-core/victory-label/victory-label.test.js","skipped":false,"dir":"test"},{"name":"passes id if provided as a string","suites":["components/victory-label","event handling"],"updatePoint":{"line":260,"column":39,"index":8407},"line":260,"code":"  it(\"passes id if provided as a string\", () => {\n    const {\n      container\n    } = render( /*#__PURE__*/React.createElement(VictoryLabel, {\n      text: \"Some VictoryLabel\",\n      id: \"my-custom-id\"\n    }), {\n      wrapper: \"svg\"\n    });\n    const output = container.querySelectorAll(\"text\");\n    output.forEach(text => {\n      expect(text.getAttribute(\"id\")).toEqual(\"my-custom-id\");\n    });\n  });","file":"jest/victory-core/victory-label/victory-label.test.js","skipped":false,"dir":"test"},{"name":"passes id if provided as a number","suites":["components/victory-label","event handling"],"updatePoint":{"line":274,"column":39,"index":8808},"line":274,"code":"  it(\"passes id if provided as a number\", () => {\n    const {\n      container\n    } = render( /*#__PURE__*/React.createElement(VictoryLabel, {\n      text: \"Some VictoryLabel\",\n      id: 12345\n    }), {\n      wrapper: \"svg\"\n    });\n    const output = container.querySelectorAll(\"text\");\n    output.forEach(text => {\n      expect(text.getAttribute(\"id\")).toEqual(\"12345\");\n    });\n  });","file":"jest/victory-core/victory-label/victory-label.test.js","skipped":false,"dir":"test"},{"name":"runs function if id provided as a function","suites":["components/victory-label","event handling"],"updatePoint":{"line":288,"column":48,"index":9202},"line":288,"code":"  it(\"runs function if id provided as a function\", () => {\n    const {\n      container\n    } = render( /*#__PURE__*/React.createElement(VictoryLabel, {\n      text: \"Some VictoryLabel\",\n      id: () => `created-in-function-${Math.random()}`\n    }), {\n      wrapper: \"svg\"\n    });\n    const output = container.querySelectorAll(\"text\");\n    output.forEach(text => {\n      expect(text.getAttribute(\"id\")).toMatch(/^created-in-function-[\\d\\.]+$/);\n    });\n  });","file":"jest/victory-core/victory-label/victory-label.test.js","skipped":false,"dir":"test"},{"name":"should render a children","suites":["victory-primitives/clip-path"],"updatePoint":{"line":18,"column":30,"index":402},"line":18,"code":"  it(\"should render a children\", () => {\n    const {\n      container\n    } = render( /*#__PURE__*/React.createElement(ClipPath, baseProps, /*#__PURE__*/React.createElement(\"rect\", {\n      \"data-testid\": \"rect\"\n    })), {\n      wrapper: \"svg\"\n    });\n    expect(container.querySelector(\"clipPath\")).toMatchInlineSnapshot(`\n      <clippath\n        id=\"4\"\n      >\n        <rect\n          data-testid=\"rect\"\n        />\n      </clippath>\n    `);\n  });","file":"jest/victory-core/victory-primitives/clip-path.test.js","skipped":false,"dir":"test"},{"name":"should render a clipPath with the passed id","suites":["victory-primitives/clip-path"],"updatePoint":{"line":36,"column":49,"index":868},"line":36,"code":"  it(\"should render a clipPath with the passed id\", () => {\n    const {\n      container\n    } = render( /*#__PURE__*/React.createElement(ClipPath, baseProps), {\n      wrapper: \"svg\"\n    });\n    expect(container.querySelector(\"clipPath\")).toMatchInlineSnapshot(`\n      <clippath\n        id=\"4\"\n      />\n    `);\n  });","file":"jest/victory-core/victory-primitives/clip-path.test.js","skipped":false,"dir":"test"},{"name":"should render a single curve for consecutive data","suites":["victory-primitives/curve"],"updatePoint":{"line":44,"column":55,"index":825},"line":44,"code":"  it(\"should render a single curve for consecutive data\", () => {\n    const {\n      container\n    } = render( /*#__PURE__*/React.createElement(Curve, baseProps), {\n      wrapper: \"svg\"\n    });\n    expect(container.querySelector(\"path\")).toMatchInlineSnapshot(`\n      <path\n        d=\"M1,4L1.1666666666666667,4.166666666666667C1.3333333333333333,4.333333333333333,1.6666666666666667,4.666666666666667,2,5.166666666666667C2.3333333333333335,5.666666666666667,2.6666666666666665,6.333333333333333,3,7.166666666666667C3.3333333333333335,8,3.6666666666666665,9,4,10.333333333333334C4.333333333333333,11.666666666666666,4.666666666666667,13.333333333333334,4.833333333333333,14.166666666666666L5,15\"\n        role=\"presentation\"\n        shape-rendering=\"auto\"\n        style=\"fill: none; stroke: black;\"\n      />\n    `);\n  });","file":"jest/victory-core/victory-primitives/curve.test.js","skipped":false,"dir":"test"},{"name":"should render a line element with the correct coordinates","suites":["victory-primitives/line"],"updatePoint":{"line":11,"column":63,"index":291},"line":11,"code":"  it(\"should render a line element with the correct coordinates\", () => {\n    const {\n      container\n    } = render( /*#__PURE__*/React.createElement(Line, baseProps), {\n      wrapper: \"svg\"\n    });\n    expect(container.querySelector(\"line\")).toMatchInlineSnapshot(`\n      <line\n        vector-effect=\"non-scaling-stroke\"\n        x1=\"0\"\n        x2=\"2\"\n        y1=\"1\"\n        y2=\"4\"\n      />\n    `);\n  });","file":"jest/victory-core/victory-primitives/line.test.js","skipped":false,"dir":"test"},{"name":"should render the appropriate symbol","suites":["victory-primitives/point"],"updatePoint":{"line":11,"column":42,"index":328},"line":11,"code":"  it(\"should render the appropriate symbol\", () => {\n    [\"circle\", \"square\", \"diamond\", \"triangleDown\", \"triangleUp\", \"plus\", \"minus\", \"star\", \"cross\"].forEach(symbol => {\n      const stub = jest.spyOn(pathHelpers, symbol) // eslint-disable-next-line max-nested-callbacks\n      .mockImplementation(() => `${symbol} symbol`);\n      const props = assign({}, baseProps, {\n        symbol\n      });\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(Point, props), {\n        wrapper: \"svg\"\n      });\n      const directions = container.querySelector(\"path\").getAttribute(\"d\");\n      expect(stub).toHaveBeenCalledTimes(1);\n      expect(stub).toHaveBeenCalledWith(5, 10, 1);\n      expect(directions).toEqual(`${symbol} symbol`);\n    });\n  });","file":"jest/victory-core/victory-primitives/point.test.js","skipped":false,"dir":"test"},{"name":"renders a path with attribute `d` equal to the result of `props.pathFunction` called with `props.slice`","suites":["victory-primitives/slice","rendering"],"updatePoint":{"line":6,"column":111,"index":302},"line":6,"code":"    it(\"renders a path with attribute `d` equal to the result of `props.pathFunction` called with `props.slice`\", () => {\n      const EXPECTED_D_ATTR = \"M1,1\";\n      const slice = {\n        x: 1,\n        y: 1\n      };\n\n      const pathFunction = sli => {\n        // The path function is called with `props.slice`\n        expect(sli).toEqual(slice);\n        return EXPECTED_D_ATTR;\n      };\n\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(Slice, {\n        pathFunction: pathFunction,\n        slice: slice\n      }), {\n        wrapper: \"svg\"\n      });\n      expect(container.querySelector(\"path\")).toMatchInlineSnapshot(`\n        <path\n          d=\"M1,1\"\n          role=\"presentation\"\n          shape-rendering=\"auto\"\n        />\n      `);\n    });","file":"jest/victory-core/victory-primitives/slice.test.js","skipped":false,"dir":"test"},{"name":"returns true when the orientation is vertical","suites":["helpers/axis","isVertical"],"updatePoint":{"line":11,"column":53,"index":453},"line":11,"code":"    it(\"returns true when the orientation is vertical\", () => {\n      const props = {\n        orientation: \"left\"\n      };\n      const verticalResult = Axis.isVertical(props);\n      expect(verticalResult).toEqual(true);\n    });","file":"jest/victory-core/victory-util/axis.test.js","skipped":false,"dir":"test"},{"name":"returns false when the orientation is horizontal","suites":["helpers/axis","isVertical"],"updatePoint":{"line":18,"column":56,"index":684},"line":18,"code":"    it(\"returns false when the orientation is horizontal\", () => {\n      const props = {\n        orientation: \"bottom\"\n      };\n      const verticalResult = Axis.isVertical(props);\n      expect(verticalResult).toEqual(false);\n    });","file":"jest/victory-core/victory-util/axis.test.js","skipped":false,"dir":"test"},{"name":"determines a domain from tickValues","suites":["helpers/axis","getDomain"],"updatePoint":{"line":27,"column":43,"index":943},"line":27,"code":"    it(\"determines a domain from tickValues\", () => {\n      const props = {\n        tickValues: [1, 2, 3]\n      };\n      const domainResult = Axis.getDomain(props);\n      expect(domainResult).toEqual([1, 3]);\n    });","file":"jest/victory-core/victory-util/axis.test.js","skipped":false,"dir":"test"},{"name":"determines a domain from string tick values","suites":["helpers/axis","getDomain"],"updatePoint":{"line":34,"column":51,"index":1168},"line":34,"code":"    it(\"determines a domain from string tick values\", () => {\n      const props = {\n        tickValues: [\"a\", \"b\", \"c\", \"d\"]\n      };\n      const domainResult = Axis.getDomain(props);\n      expect(domainResult).toEqual([1, 4]);\n    });","file":"jest/victory-core/victory-util/axis.test.js","skipped":false,"dir":"test"},{"name":"reverses a domain from tickValues when the axis is vertical","suites":["helpers/axis","getDomain"],"updatePoint":{"line":41,"column":67,"index":1420},"line":41,"code":"    it(\"reverses a domain from tickValues when the axis is vertical\", () => {\n      const props = {\n        tickValues: [1, 2, 3],\n        dependentAxis: true\n      };\n      const domainResult = Axis.getDomain(props);\n      expect(domainResult).toEqual([3, 1]);\n    });","file":"jest/victory-core/victory-util/axis.test.js","skipped":false,"dir":"test"},{"name":"determines a domain from props","suites":["helpers/axis","getDomain"],"updatePoint":{"line":49,"column":38,"index":1661},"line":49,"code":"    it(\"determines a domain from props\", () => {\n      const props = {\n        domain: [1, 2]\n      };\n      const domainResult = Axis.getDomain(props);\n      expect(domainResult).toEqual([1, 2]);\n    });","file":"jest/victory-core/victory-util/axis.test.js","skipped":false,"dir":"test"},{"name":"calculates a domain from a single tickValue","suites":["helpers/axis","getDomain"],"updatePoint":{"line":56,"column":51,"index":1879},"line":56,"code":"    it(\"calculates a domain from a single tickValue\", () => {\n      const props = {\n        tickValues: [1]\n      };\n      const domainResult = Axis.getDomain(props);\n      const verySmallNumber = Math.pow(10, -10);\n      expect(domainResult).toEqual([1 - verySmallNumber, 1 + verySmallNumber]);\n    });","file":"jest/victory-core/victory-util/axis.test.js","skipped":false,"dir":"test"},{"name":"returns undefined if the given axis doesn't match this axis","suites":["helpers/axis","getDomain"],"updatePoint":{"line":64,"column":67,"index":2199},"line":64,"code":"    it(\"returns undefined if the given axis doesn't match this axis\", () => {\n      const props = {\n        domain: [1, 3]\n      };\n      const domainResultX = Axis.getDomain(props, \"x\");\n      expect(domainResultX).toEqual([1, 3]);\n      const domainResultY = Axis.getDomain(props, \"y\");\n      expect(domainResultY).toBeUndefined();\n    });","file":"jest/victory-core/victory-util/axis.test.js","skipped":false,"dir":"test"},{"name":"determines the axis based on type (dependent / independent)","suites":["helpers/axis","getAxis"],"updatePoint":{"line":75,"column":67,"index":2577},"line":75,"code":"    it(\"determines the axis based on type (dependent / independent)\", () => {\n      expect(Axis.getAxis({\n        dependentAxis: true\n      })).toEqual(\"y\");\n      expect(Axis.getAxis({})).toEqual(\"x\");\n    });","file":"jest/victory-core/victory-util/axis.test.js","skipped":false,"dir":"test"},{"name":"returns the independent axis when called with 'x'","suites":["helpers/axis","getAxisComponent"],"updatePoint":{"line":96,"column":57,"index":3153},"line":96,"code":"    it(\"returns the independent axis when called with 'x'\", () => {\n      const childComponents = [dependentAxis, independentAxis, bar];\n      const componentResult = Axis.getAxisComponent(childComponents, \"x\");\n      expect(dependentAxis.type.getAxis).toBeCalledWith(dependentAxis.props);\n      expect(independentAxis.type.getAxis).toBeCalledWith(independentAxis.props);\n      expect(componentResult).toEqual(independentAxis);\n    });","file":"jest/victory-core/victory-util/axis.test.js","skipped":false,"dir":"test"},{"name":"returns tickFormat function from props","suites":["helpers/axis","getTickFormat"],"updatePoint":{"line":117,"column":46,"index":3878},"line":117,"code":"    it(\"returns tickFormat function from props\", () => {\n      const props = {\n        tickFormat: x => x * 5\n      };\n      const tickProps = {\n        scale,\n        ticks\n      };\n      const formatResult = Axis.getTickFormat(props, tickProps);\n      expect(scale.tickFormat).not.toHaveBeenCalled();\n      expect(formatResult).toEqual(props.tickFormat);\n    });","file":"jest/victory-core/victory-util/axis.test.js","skipped":false,"dir":"test"},{"name":"converts tickFormat array from props to a function","suites":["helpers/axis","getTickFormat"],"updatePoint":{"line":129,"column":58,"index":4255},"line":129,"code":"    it(\"converts tickFormat array from props to a function\", () => {\n      const props = {\n        tickFormat: [1, 2, 3, 4, 5]\n      };\n      const tickProps = {\n        scale,\n        ticks\n      };\n      const formatResult = Axis.getTickFormat(props, tickProps);\n      expect(scale.tickFormat).not.toHaveBeenCalled();\n      expect(formatResult).toBeInstanceOf(Function);\n    });","file":"jest/victory-core/victory-util/axis.test.js","skipped":false,"dir":"test"},{"name":"converts tickFormat string array from props to a function","suites":["helpers/axis","getTickFormat"],"updatePoint":{"line":141,"column":65,"index":4643},"line":141,"code":"    it(\"converts tickFormat string array from props to a function\", () => {\n      const props = {\n        tickValues: [\"cats\", \"dogs\", \"birds\"]\n      };\n      const tickProps = {\n        scale,\n        ticks\n      };\n      const formatResult = Axis.getTickFormat(props, tickProps);\n      expect(scale.tickFormat).not.toHaveBeenCalled();\n      expect(formatResult).toBeInstanceOf(Function);\n    });","file":"jest/victory-core/victory-util/axis.test.js","skipped":false,"dir":"test"},{"name":"calculates a tick format from scale","suites":["helpers/axis","getTickFormat"],"updatePoint":{"line":153,"column":43,"index":5019},"line":153,"code":"    it(\"calculates a tick format from scale\", () => {\n      const props = {};\n      const tickProps = {\n        scale,\n        ticks\n      };\n      const formatResult = Axis.getTickFormat(props, tickProps);\n      expect(formatResult).toBeInstanceOf(Function);\n    });","file":"jest/victory-core/victory-util/axis.test.js","skipped":false,"dir":"test"},{"name":"returns tickValues from props","suites":["helpers/axis","getTicks"],"updatePoint":{"line":175,"column":37,"index":5536},"line":175,"code":"    it(\"returns tickValues from props\", () => {\n      const props = {\n        tickValues: [1, 2, 3]\n      };\n      const tickResult = Axis.getTicks(props);\n      expect(tickResult).toEqual(props.tickValues);\n    });","file":"jest/victory-core/victory-util/axis.test.js","skipped":false,"dir":"test"},{"name":"returns converts string tickValues to numbers","suites":["helpers/axis","getTicks"],"updatePoint":{"line":182,"column":53,"index":5768},"line":182,"code":"    it(\"returns converts string tickValues to numbers\", () => {\n      const props = {\n        tickValues: [\"a\", \"b\", \"c\", \"d\"]\n      };\n      const tickResult = Axis.getTicks(props);\n      expect(tickResult).toEqual([1, 2, 3, 4]);\n    });","file":"jest/victory-core/victory-util/axis.test.js","skipped":false,"dir":"test"},{"name":"calculates tickValues from scale.ticks()","suites":["helpers/axis","getTicks"],"updatePoint":{"line":189,"column":48,"index":6002},"line":189,"code":"    it(\"calculates tickValues from scale.ticks()\", () => {\n      const props = {\n        tickCount: 5\n      };\n      Axis.getTicks(props, scale);\n      expect(scale.ticks).toBeCalledWith(5);\n    }); // TODO: This is failing, but I'm not sure whether it's an issue with the test or the code","file":"jest/victory-core/victory-util/axis.test.js","skipped":false,"dir":"test"},{"name":"calculates tickValues from scale.ticks(), and removes zero if axes cross","suites":["helpers/axis","getTicks"],"line":197,"code":"    it.skip(\"calculates tickValues from scale.ticks(), and removes zero if axes cross\", () => {","file":"jest/victory-core/victory-util/axis.test.js","skipped":true,"dir":"test"},{"name":"handles empty argument","suites":["victory-util/collection","containsStrings"],"updatePoint":{"line":4,"column":30,"index":156},"line":4,"code":"    it(\"handles empty argument\", () => {\n      expect(Collection.containsStrings()).toEqual(false);\n    });","file":"jest/victory-core/victory-util/collection.test.js","skipped":false,"dir":"test"},{"name":"handles empty array","suites":["victory-util/collection","containsStrings"],"updatePoint":{"line":7,"column":27,"index":261},"line":7,"code":"    it(\"handles empty array\", () => {\n      expect(Collection.containsStrings([])).toEqual(false);\n    });","file":"jest/victory-core/victory-util/collection.test.js","skipped":false,"dir":"test"},{"name":"returns false for collections of non-strings","suites":["victory-util/collection","containsStrings"],"updatePoint":{"line":10,"column":52,"index":393},"line":10,"code":"    it(\"returns false for collections of non-strings\", () => {\n      expect(Collection.containsStrings([0, 1])).toEqual(false);\n      expect(Collection.containsStrings([undefined, null, NaN])).toEqual(false);\n      expect(Collection.containsStrings([{}, {\n        a: \"foo\"\n      }])).toEqual(false);\n    });","file":"jest/victory-core/victory-util/collection.test.js","skipped":false,"dir":"test"},{"name":"returns false for collections with strings","suites":["victory-util/collection","containsStrings"],"updatePoint":{"line":17,"column":50,"index":699},"line":17,"code":"    it(\"returns false for collections with strings\", () => {\n      expect(Collection.containsStrings([\"hello\"])).toEqual(true);\n      expect(Collection.containsStrings([\"hello\", \"there\"])).toEqual(true);\n      expect(Collection.containsStrings([0, \"hello\", {}, null])).toEqual(true);\n    });","file":"jest/victory-core/victory-util/collection.test.js","skipped":false,"dir":"test"},{"name":"handles empty argument","suites":["victory-util/collection","containsOnlyStrings"],"updatePoint":{"line":24,"column":30,"index":1019},"line":24,"code":"    it(\"handles empty argument\", () => {\n      expect(Collection.containsOnlyStrings()).toEqual(false);\n    });","file":"jest/victory-core/victory-util/collection.test.js","skipped":false,"dir":"test"},{"name":"handles empty array","suites":["victory-util/collection","containsOnlyStrings"],"updatePoint":{"line":27,"column":27,"index":1128},"line":27,"code":"    it(\"handles empty array\", () => {\n      expect(Collection.containsOnlyStrings([])).toEqual(false);\n    });","file":"jest/victory-core/victory-util/collection.test.js","skipped":false,"dir":"test"},{"name":"returns false for collections of non-strings","suites":["victory-util/collection","containsOnlyStrings"],"updatePoint":{"line":30,"column":52,"index":1264},"line":30,"code":"    it(\"returns false for collections of non-strings\", () => {\n      expect(Collection.containsOnlyStrings([0, 1])).toEqual(false);\n      expect(Collection.containsOnlyStrings([undefined, null, NaN])).toEqual(false);\n      expect(Collection.containsOnlyStrings([{}, {\n        a: \"foo\"\n      }])).toEqual(false);\n    });","file":"jest/victory-core/victory-util/collection.test.js","skipped":false,"dir":"test"},{"name":"returns false for collections with some strings","suites":["victory-util/collection","containsOnlyStrings"],"updatePoint":{"line":37,"column":55,"index":1587},"line":37,"code":"    it(\"returns false for collections with some strings\", () => {\n      expect(Collection.containsOnlyStrings([\"hello\", 0])).toEqual(false);\n      expect(Collection.containsOnlyStrings([\"hello\", [\"not me\"]])).toEqual(false);\n      expect(Collection.containsOnlyStrings([0, \"hello\", {}, null])).toEqual(false);\n    });","file":"jest/victory-core/victory-util/collection.test.js","skipped":false,"dir":"test"},{"name":"returns true for collections with only strings","suites":["victory-util/collection","containsOnlyStrings"],"updatePoint":{"line":42,"column":54,"index":1904},"line":42,"code":"    it(\"returns true for collections with only strings\", () => {\n      expect(Collection.containsOnlyStrings([\"hello\"])).toEqual(true);\n      expect(Collection.containsOnlyStrings([\"hello\", \"there\"])).toEqual(true);\n    });","file":"jest/victory-core/victory-util/collection.test.js","skipped":false,"dir":"test"},{"name":"handles empty argument","suites":["victory-util/collection","isArrayOfArrays"],"updatePoint":{"line":48,"column":30,"index":2148},"line":48,"code":"    it(\"handles empty argument\", () => {\n      expect(Collection.isArrayOfArrays()).toEqual(false);\n    });","file":"jest/victory-core/victory-util/collection.test.js","skipped":false,"dir":"test"},{"name":"handles empty array","suites":["victory-util/collection","isArrayOfArrays"],"updatePoint":{"line":51,"column":27,"index":2253},"line":51,"code":"    it(\"handles empty array\", () => {\n      expect(Collection.isArrayOfArrays([])).toEqual(false);\n    });","file":"jest/victory-core/victory-util/collection.test.js","skipped":false,"dir":"test"},{"name":"returns false for collections of non-arrays","suites":["victory-util/collection","isArrayOfArrays"],"updatePoint":{"line":54,"column":51,"index":2384},"line":54,"code":"    it(\"returns false for collections of non-arrays\", () => {\n      expect(Collection.isArrayOfArrays([1])).toEqual(false);\n      expect(Collection.isArrayOfArrays([{}])).toEqual(false);\n      expect(Collection.isArrayOfArrays([\"a\"])).toEqual(false);\n    });","file":"jest/victory-core/victory-util/collection.test.js","skipped":false,"dir":"test"},{"name":"returns false for mixed collections","suites":["victory-util/collection","isArrayOfArrays"],"updatePoint":{"line":59,"column":43,"index":2635},"line":59,"code":"    it(\"returns false for mixed collections\", () => {\n      expect(Collection.isArrayOfArrays([[], 1, {}])).toEqual(false);\n      expect(Collection.isArrayOfArrays([1, [], {}])).toEqual(false);\n      expect(Collection.isArrayOfArrays([1, {}, []])).toEqual(false);\n    });","file":"jest/victory-core/victory-util/collection.test.js","skipped":false,"dir":"test"},{"name":"returns true for collections of arrays","suites":["victory-util/collection","isArrayOfArrays"],"updatePoint":{"line":64,"column":46,"index":2910},"line":64,"code":"    it(\"returns true for collections of arrays\", () => {\n      expect(Collection.isArrayOfArrays([[]])).toEqual(true);\n      expect(Collection.isArrayOfArrays([[{}]])).toEqual(true);\n      expect(Collection.isArrayOfArrays([[[]]])).toEqual(true);\n      expect(Collection.isArrayOfArrays([[], []])).toEqual(true);\n    });","file":"jest/victory-core/victory-util/collection.test.js","skipped":false,"dir":"test"},{"name":"handles empty array","suites":["victory-util/collection","removeUndefined"],"updatePoint":{"line":72,"column":27,"index":3256},"line":72,"code":"    it(\"handles empty array\", () => {\n      expect(Collection.removeUndefined([])).toEqual([]);\n    });","file":"jest/victory-core/victory-util/collection.test.js","skipped":false,"dir":"test"},{"name":"does not filter non-undefineds","suites":["victory-util/collection","removeUndefined"],"updatePoint":{"line":75,"column":38,"index":3371},"line":75,"code":"    it(\"does not filter non-undefineds\", () => {\n      const testArray = [0, 1, \"a\", {}, false, null, NaN];\n      expect(Collection.removeUndefined(testArray)).toEqual(testArray);\n    });","file":"jest/victory-core/victory-util/collection.test.js","skipped":false,"dir":"test"},{"name":"filters out undefineds","suites":["victory-util/collection","removeUndefined"],"updatePoint":{"line":79,"column":30,"index":3551},"line":79,"code":"    it(\"filters out undefineds\", () => {\n      const testArray = [undefined, 0, undefined, {}, false, null, NaN, undefined];\n      const expectedArray = [0, {}, false, null, NaN];\n      expect(Collection.removeUndefined(testArray)).toEqual(expectedArray);\n    });","file":"jest/victory-core/victory-util/collection.test.js","skipped":false,"dir":"test"},{"name":"returns a date if array contains dates","suites":["victory-util/collection","getMaxValue"],"updatePoint":{"line":86,"column":46,"index":3871},"line":86,"code":"    it(\"returns a date if array contains dates\", () => {\n      const array = [new Date(2016, 3, 6), new Date(2017, 5, 3), 10];\n      expect(Collection.getMaxValue(array)).toEqual(new Date(2017, 5, 3));\n    });","file":"jest/victory-core/victory-util/collection.test.js","skipped":false,"dir":"test"},{"name":"returns a number if array does not contain dates","suites":["victory-util/collection","getMaxValue"],"updatePoint":{"line":90,"column":56,"index":4091},"line":90,"code":"    it(\"returns a number if array does not contain dates\", () => {\n      const array = [3, 8, 10];\n      expect(Collection.getMaxValue(array)).toEqual(10);\n    });","file":"jest/victory-core/victory-util/collection.test.js","skipped":false,"dir":"test"},{"name":"allows values to be concated and returns the appropriate number","suites":["victory-util/collection","getMaxValue"],"updatePoint":{"line":94,"column":71,"index":4270},"line":94,"code":"    it(\"allows values to be concated and returns the appropriate number\", () => {\n      const array = [3, 8, 10];\n      expect(Collection.getMaxValue(array, 1, 20)).toEqual(20);\n    });","file":"jest/victory-core/victory-util/collection.test.js","skipped":false,"dir":"test"},{"name":"returns a date if array contains dates","suites":["victory-util/collection","getMinValue"],"updatePoint":{"line":100,"column":46,"index":4471},"line":100,"code":"    it(\"returns a date if array contains dates\", () => {\n      const array = [new Date(2016, 3, 6), new Date(2017, 5, 3), new Date(2015, 11, 4)];\n      expect(Collection.getMinValue(array)).toEqual(new Date(2015, 11, 4));\n    });","file":"jest/victory-core/victory-util/collection.test.js","skipped":false,"dir":"test"},{"name":"returns a number if array does not contain dates","suites":["victory-util/collection","getMinValue"],"updatePoint":{"line":104,"column":56,"index":4711},"line":104,"code":"    it(\"returns a number if array does not contain dates\", () => {\n      const array = [3, 8, 10];\n      expect(Collection.getMinValue(array)).toEqual(3);\n    });","file":"jest/victory-core/victory-util/collection.test.js","skipped":false,"dir":"test"},{"name":"allows values to be concated and returns the appropriate number","suites":["victory-util/collection","getMinValue"],"updatePoint":{"line":108,"column":71,"index":4889},"line":108,"code":"    it(\"allows values to be concated and returns the appropriate number\", () => {\n      const array = [3, 8, 10];\n      expect(Collection.getMinValue(array, 1, 20)).toEqual(1);\n    });","file":"jest/victory-core/victory-util/collection.test.js","skipped":false,"dir":"test"},{"name":"returns a string map from strings in tickValues","suites":["victory-util/data","createStringMap"],"updatePoint":{"line":17,"column":55,"index":583},"line":17,"code":"    it(\"returns a string map from strings in tickValues\", () => {\n      const props = {\n        tickValues\n      };\n      const stringMap = Data.createStringMap(props, \"x\");\n      expect(stringMap).toEqual({\n        one: 1,\n        two: 2,\n        three: 3\n      });\n    });","file":"jest/victory-core/victory-util/data.test.js","skipped":false,"dir":"test"},{"name":"returns a string map from strings in categories","suites":["victory-util/data","createStringMap"],"updatePoint":{"line":28,"column":55,"index":858},"line":28,"code":"    it(\"returns a string map from strings in categories\", () => {\n      const props = {\n        categories\n      };\n      const stringMap = Data.createStringMap(props, \"x\");\n      expect(stringMap).toEqual({\n        red: 1,\n        green: 2,\n        blue: 3\n      });\n    });","file":"jest/victory-core/victory-util/data.test.js","skipped":false,"dir":"test"},{"name":"returns a string map from strings in data","suites":["victory-util/data","createStringMap","returning string maps with "],"updatePoint":{"line":54,"column":53,"index":1468},"line":54,"code":"        it(\"returns a string map from strings in data\", () => {\n          const props = {\n            data\n          };\n          const stringMap = Data.createStringMap(props, \"x\");\n          expect(stringMap).toEqual({\n            one: 1,\n            red: 2,\n            cat: 3\n          });\n        });","file":"jest/victory-core/victory-util/data.test.js","skipped":false,"dir":"test"},{"name":"a unique set of values is returned from multiple sources","suites":["victory-util/data","createStringMap","returning string maps with "],"updatePoint":{"line":65,"column":68,"index":1788},"line":65,"code":"        it(\"a unique set of values is returned from multiple sources\", () => {\n          const props = {\n            tickValues,\n            data\n          };\n          const stringMap = Data.createStringMap(props, \"x\");\n          expect(stringMap).toEqual({\n            one: 1,\n            two: 2,\n            three: 3,\n            red: 4,\n            cat: 5\n          });\n        });","file":"jest/victory-core/victory-util/data.test.js","skipped":false,"dir":"test"},{"name":"returns an array of strings from a data prop","suites":["victory-util/data","getStringsFromData with "],"updatePoint":{"line":87,"column":54,"index":2328},"line":87,"code":"      it(\"returns an array of strings from a data prop\", () => {\n        const props = {\n          data: createData([{\n            x: \"one\",\n            y: 1\n          }, {\n            x: \"red\",\n            y: 2\n          }, {\n            x: \"cat\",\n            y: 3\n          }])\n        };\n        const dataStrings = Data.getStringsFromData(props, \"x\");\n        expect(dataStrings).toEqual([\"one\", \"red\", \"cat\"]);\n      });","file":"jest/victory-core/victory-util/data.test.js","skipped":false,"dir":"test"},{"name":"returns an array of strings from array-type data","suites":["victory-util/data","getStringsFromData with "],"updatePoint":{"line":103,"column":58,"index":2758},"line":103,"code":"      it(\"returns an array of strings from array-type data\", () => {\n        const props = {\n          data: createData([[\"one\", 1], [\"red\", 2], [\"cat\", 3]]),\n          x: 0,\n          y: 1\n        };\n        const dataStrings = Data.getStringsFromData(props, \"x\");\n        expect(dataStrings).toEqual([\"one\", \"red\", \"cat\"]);\n      });","file":"jest/victory-core/victory-util/data.test.js","skipped":false,"dir":"test"},{"name":"only returns strings, if data is mixed","suites":["victory-util/data","getStringsFromData with "],"updatePoint":{"line":112,"column":48,"index":3084},"line":112,"code":"      it(\"only returns strings, if data is mixed\", () => {\n        const props = {\n          data: createData([{\n            x: 1,\n            y: 1\n          }, {\n            x: \"three\",\n            y: 3\n          }])\n        };\n        expect(Data.getStringsFromData(props, \"x\")).toEqual([\"three\"]);\n      });","file":"jest/victory-core/victory-util/data.test.js","skipped":false,"dir":"test"},{"name":"returns an empty array when no strings are present","suites":["victory-util/data","getStringsFromData with "],"updatePoint":{"line":124,"column":60,"index":3407},"line":124,"code":"      it(\"returns an empty array when no strings are present\", () => {\n        const props = {\n          data: createData([{\n            x: 1,\n            y: 1\n          }, {\n            x: 3,\n            y: 3\n          }])\n        };\n        expect(Data.getStringsFromData(props, \"x\")).toEqual([]);\n      });","file":"jest/victory-core/victory-util/data.test.js","skipped":false,"dir":"test"},{"name":"returns an empty array when the data prop is undefined","suites":["victory-util/data","getStringsFromData with "],"updatePoint":{"line":136,"column":64,"index":3721},"line":136,"code":"      it(\"returns an empty array when the data prop is undefined\", () => {\n        expect(Data.getStringsFromData({}, \"x\")).toEqual([]);\n      });","file":"jest/victory-core/victory-util/data.test.js","skipped":false,"dir":"test"},{"name":"returns an array of strings when tickValues is an array","suites":["victory-util/data","getStringsFromAxes"],"updatePoint":{"line":142,"column":63,"index":3922},"line":142,"code":"    it(\"returns an array of strings when tickValues is an array\", () => {\n      const props = {\n        tickValues: [1, \"three\", 5]\n      };\n      expect(Data.getStringsFromAxes(props, \"x\")).toEqual([\"three\"]);\n    });","file":"jest/victory-core/victory-util/data.test.js","skipped":false,"dir":"test"},{"name":"returns an array of strings when tickValues is an object","suites":["victory-util/data","getStringsFromAxes"],"updatePoint":{"line":148,"column":64,"index":4142},"line":148,"code":"    it(\"returns an array of strings when tickValues is an object\", () => {\n      const props = {\n        tickValues: {\n          x: [1, \"three\", 5]\n        }\n      };\n      expect(Data.getStringsFromAxes(props, \"x\")).toEqual([\"three\"]);\n    });","file":"jest/victory-core/victory-util/data.test.js","skipped":false,"dir":"test"},{"name":"returns an empty array when a given axis is not defined","suites":["victory-util/data","getStringsFromAxes"],"updatePoint":{"line":156,"column":63,"index":4386},"line":156,"code":"    it(\"returns an empty array when a given axis is not defined\", () => {\n      const props = {\n        tickValues: {\n          y: [1, \"three\", 5]\n        }\n      };\n      expect(Data.getStringsFromAxes(props, \"x\")).toEqual([]);\n    });","file":"jest/victory-core/victory-util/data.test.js","skipped":false,"dir":"test"},{"name":"returns an empty array when no strings are present","suites":["victory-util/data","getStringsFromAxes"],"updatePoint":{"line":164,"column":58,"index":4618},"line":164,"code":"    it(\"returns an empty array when no strings are present\", () => {\n      const props = {\n        tickValues: [1, 3, 5]\n      };\n      expect(Data.getStringsFromAxes(props, \"x\")).toEqual([]);\n    });","file":"jest/victory-core/victory-util/data.test.js","skipped":false,"dir":"test"},{"name":"returns an empty array when the tickValues prop is undefined","suites":["victory-util/data","getStringsFromAxes"],"updatePoint":{"line":170,"column":68,"index":4829},"line":170,"code":"    it(\"returns an empty array when the tickValues prop is undefined\", () => {\n      expect(Data.getStringsFromAxes({}, \"x\")).toEqual([]);\n    });","file":"jest/victory-core/victory-util/data.test.js","skipped":false,"dir":"test"},{"name":"returns an empty array when no strings are present","suites":["victory-util/data","getStringsFromCategories"],"updatePoint":{"line":175,"column":58,"index":5019},"line":175,"code":"    it(\"returns an empty array when no strings are present\", () => {\n      const props = {\n        categories: [1, 3, 5]\n      };\n      expect(Data.getStringsFromCategories(props, \"x\")).toEqual([]);\n    });","file":"jest/victory-core/victory-util/data.test.js","skipped":false,"dir":"test"},{"name":"returns an empty array when the category prop is undefined","suites":["victory-util/data","getStringsFromCategories"],"updatePoint":{"line":181,"column":66,"index":5234},"line":181,"code":"    it(\"returns an empty array when the category prop is undefined\", () => {\n      expect(Data.getStringsFromCategories({}, \"x\")).toEqual([]);\n    });","file":"jest/victory-core/victory-util/data.test.js","skipped":false,"dir":"test"},{"name":"formats a single dataset","suites":["victory-util/data","formatData with "],"updatePoint":{"line":190,"column":34,"index":5495},"line":190,"code":"      it(\"formats a single dataset\", () => {\n        const dataset = [{\n          _x: 1,\n          _y: 3,\n          x: 1,\n          y: 3\n        }, {\n          _x: 2,\n          _y: 5,\n          x: 2,\n          y: 5\n        }];\n        const props = {\n          data: createData(dataset)\n        };\n        const formatted = Data.formatData(dataset, props);\n        expect(Array.isArray(formatted)).toBeTruthy();\n        expect(Object.keys(formatted[0])).toEqual(expect.arrayContaining([\"_x\", \"_y\", \"x\", \"y\"]));\n      });","file":"jest/victory-core/victory-util/data.test.js","skipped":false,"dir":"test"},{"name":"formats and returns the data prop","suites":["victory-util/data","getData","with "],"updatePoint":{"line":217,"column":45,"index":6206},"line":217,"code":"        it(\"formats and returns the data prop\", () => {\n          const data = createData([{\n            x: \"kittens\",\n            y: 3\n          }, {\n            x: \"cats\",\n            y: 5\n          }]);\n          const props = {\n            data,\n            x: \"x\",\n            y: \"y\"\n          };\n          const expectedReturnWithEventKeys = [{\n            _x: 1,\n            x: \"kittens\",\n            xName: \"kittens\",\n            _y: 3,\n            y: 3\n          }, {\n            _x: 2,\n            x: \"cats\",\n            xName: \"cats\",\n            _y: 5,\n            y: 5\n          }];\n          const returnData = Data.getData(props);\n          expect(returnData).toEqual(expectedReturnWithEventKeys);\n        });","file":"jest/victory-core/victory-util/data.test.js","skipped":false,"dir":"test"},{"name":"uses the event key when it is passed in","suites":["victory-util/data","getData","with "],"updatePoint":{"line":246,"column":51,"index":6937},"line":246,"code":"        it(\"uses the event key when it is passed in\", () => {\n          const data = createData([{\n            x: 2,\n            y: 2,\n            eventKey: 13\n          }, {\n            x: 1,\n            y: 3,\n            eventKey: 21\n          }, {\n            x: 3,\n            y: 1,\n            eventKey: 11\n          }]);\n          const returnData = Data.getData({\n            data\n          });\n          expect(returnData).toEqual([{\n            _x: 2,\n            x: 2,\n            _y: 2,\n            y: 2,\n            eventKey: 13\n          }, {\n            _x: 1,\n            x: 1,\n            _y: 3,\n            y: 3,\n            eventKey: 21\n          }, {\n            _x: 3,\n            x: 3,\n            _y: 1,\n            y: 1,\n            eventKey: 11\n          }]);\n        });","file":"jest/victory-core/victory-util/data.test.js","skipped":false,"dir":"test"},{"name":"uses a custom event key when it is passed in","suites":["victory-util/data","getData","with "],"updatePoint":{"line":283,"column":56,"index":7738},"line":283,"code":"        it(\"uses a custom event key when it is passed in\", () => {\n          const data = createData([{\n            x: 2,\n            y: 2,\n            myEventKey: 3\n          }, {\n            x: 1,\n            y: 3,\n            myEventKey: 2\n          }, {\n            x: 3,\n            y: 1,\n            myEventKey: 1\n          }]);\n          const returnData = Data.getData({\n            data,\n            eventKey: \"myEventKey\"\n          });\n          expect(returnData).toEqual([{\n            _x: 2,\n            x: 2,\n            _y: 2,\n            y: 2,\n            eventKey: 3,\n            myEventKey: 3\n          }, {\n            _x: 1,\n            x: 1,\n            _y: 3,\n            y: 3,\n            eventKey: 2,\n            myEventKey: 2\n          }, {\n            _x: 3,\n            x: 3,\n            _y: 1,\n            y: 1,\n            eventKey: 1,\n            myEventKey: 1\n          }]);\n        });","file":"jest/victory-core/victory-util/data.test.js","skipped":false,"dir":"test"},{"name":"uses a eventKey functions","suites":["victory-util/data","getData","with "],"updatePoint":{"line":324,"column":37,"index":8637},"line":324,"code":"        it(\"uses a eventKey functions\", () => {\n          const data = createData([{\n            x: 2,\n            y: 2\n          }, {\n            x: 1,\n            y: 3\n          }, {\n            x: 3,\n            y: 1\n          }]);\n          const returnData = Data.getData({\n            data,\n            eventKey: d => d.x\n          });\n          expect(returnData).toEqual([{\n            _x: 2,\n            x: 2,\n            _y: 2,\n            y: 2,\n            eventKey: 2\n          }, {\n            _x: 1,\n            x: 1,\n            _y: 3,\n            y: 3,\n            eventKey: 1\n          }, {\n            _x: 3,\n            x: 3,\n            _y: 1,\n            y: 1,\n            eventKey: 3\n          }]);\n        });","file":"jest/victory-core/victory-util/data.test.js","skipped":false,"dir":"test"},{"name":"uses a eventKey functions with index","suites":["victory-util/data","getData","with "],"updatePoint":{"line":359,"column":48,"index":9381},"line":359,"code":"        it(\"uses a eventKey functions with index\", () => {\n          const data = createData([{\n            x: 2,\n            y: 2\n          }, {\n            x: 1,\n            y: 3\n          }, {\n            x: 3,\n            y: 1\n          }]);\n          const returnData = Data.getData({\n            data,\n            eventKey: (d, i) => i\n          });\n          expect(returnData).toEqual([{\n            _x: 2,\n            x: 2,\n            _y: 2,\n            y: 2,\n            eventKey: 0\n          }, {\n            _x: 1,\n            x: 1,\n            _y: 3,\n            y: 3,\n            eventKey: 1\n          }, {\n            _x: 3,\n            x: 3,\n            _y: 1,\n            y: 1,\n            eventKey: 2\n          }]);\n        });","file":"jest/victory-core/victory-util/data.test.js","skipped":false,"dir":"test"},{"name":"does not sort data when sort key not passed","suites":["victory-util/data","getData","with "],"updatePoint":{"line":394,"column":55,"index":10135},"line":394,"code":"        it(\"does not sort data when sort key not passed\", () => {\n          const data = createData([{\n            x: 2,\n            y: 2\n          }, {\n            x: 1,\n            y: 3\n          }, {\n            x: 3,\n            y: 1\n          }]);\n          const returnData = Data.getData({\n            data\n          });\n          expect(returnData).toEqual([{\n            _x: 2,\n            x: 2,\n            _y: 2,\n            y: 2\n          }, {\n            _x: 1,\n            x: 1,\n            _y: 3,\n            y: 3\n          }, {\n            _x: 3,\n            x: 3,\n            _y: 1,\n            y: 1\n          }]);\n        });","file":"jest/victory-core/victory-util/data.test.js","skipped":false,"dir":"test"},{"name":"sorts data according to sort key","suites":["victory-util/data","getData","with "],"updatePoint":{"line":425,"column":44,"index":10768},"line":425,"code":"        it(\"sorts data according to sort key\", () => {\n          const data = createData([{\n            x: 1,\n            y: 1,\n            order: 2\n          }, {\n            x: 3,\n            y: 3,\n            order: 1\n          }, {\n            x: 2,\n            y: 2,\n            order: 3\n          }]);\n          const returnData = Data.getData({\n            data,\n            sortKey: \"order\"\n          });\n          expect(returnData).toEqual([{\n            _x: 3,\n            x: 3,\n            _y: 3,\n            y: 3,\n            order: 1\n          }, {\n            _x: 1,\n            x: 1,\n            _y: 1,\n            y: 1,\n            order: 2\n          }, {\n            _x: 2,\n            x: 2,\n            _y: 2,\n            y: 2,\n            order: 3\n          }]);\n        });","file":"jest/victory-core/victory-util/data.test.js","skipped":false,"dir":"test"},{"name":"sorts data according to sort key and sort order","suites":["victory-util/data","getData","with "],"updatePoint":{"line":463,"column":59,"index":11578},"line":463,"code":"        it(\"sorts data according to sort key and sort order\", () => {\n          const data = createData([{\n            x: 1,\n            y: 1,\n            order: 2\n          }, {\n            x: 3,\n            y: 3,\n            order: 1\n          }, {\n            x: 2,\n            y: 2,\n            order: 3\n          }]);\n          const returnData = Data.getData({\n            data,\n            sortKey: \"order\",\n            sortOrder: \"descending\"\n          });\n          expect(returnData).toEqual([{\n            _x: 2,\n            x: 2,\n            _y: 2,\n            y: 2,\n            order: 3\n          }, {\n            _x: 1,\n            x: 1,\n            _y: 1,\n            y: 1,\n            order: 2\n          }, {\n            _x: 3,\n            x: 3,\n            _y: 3,\n            y: 3,\n            order: 1\n          }]);\n        }); // Ensures previous VictoryLine api for sortKey prop stays consistent","file":"jest/victory-core/victory-util/data.test.js","skipped":false,"dir":"test"},{"name":"sorts data according to evaluated sort key when sort key is x or y","suites":["victory-util/data","getData","with "],"updatePoint":{"line":503,"column":78,"index":12515},"line":503,"code":"        it(\"sorts data according to evaluated sort key when sort key is x or y\", () => {\n          const data = createData([{\n            _x: 2,\n            x: 10,\n            _y: 2,\n            y: 10\n          }, {\n            _x: 1,\n            x: 20,\n            _y: 3,\n            y: 20\n          }, {\n            _x: 3,\n            x: 30,\n            _y: 1,\n            y: 30\n          }]);\n          const returnDataX = Data.getData({\n            data,\n            sortKey: \"x\"\n          });\n          expect(returnDataX).toEqual([{\n            _x: 1,\n            x: 20,\n            _y: 3,\n            y: 20\n          }, {\n            _x: 2,\n            x: 10,\n            _y: 2,\n            y: 10\n          }, {\n            _x: 3,\n            x: 30,\n            _y: 1,\n            y: 30\n          }]);\n          const returnDataY = Data.getData({\n            data,\n            sortKey: \"y\"\n          });\n          expect(returnDataY).toEqual([{\n            _x: 3,\n            x: 30,\n            _y: 1,\n            y: 30\n          }, {\n            _x: 2,\n            x: 10,\n            _y: 2,\n            y: 10\n          }, {\n            _x: 1,\n            x: 20,\n            _y: 3,\n            y: 20\n          }]);\n        });","file":"jest/victory-core/victory-util/data.test.js","skipped":false,"dir":"test"},{"name":"generates a dataset from domain","suites":["victory-util/data","getData","with "],"updatePoint":{"line":563,"column":39,"index":13728},"line":563,"code":"    it(\"generates a dataset from domain\", () => {\n      const generatedReturn = [{\n        x: 0,\n        y: 0\n      }, {\n        x: 10,\n        y: 10\n      }];\n      const props = {\n        x: \"x\",\n        y: \"y\",\n        domain: {\n          x: [0, 10],\n          y: [0, 10]\n        }\n      };\n      const returnData = Data.generateData(props);\n      expect(returnData).toEqual(generatedReturn);\n    });","file":"jest/victory-core/victory-util/data.test.js","skipped":false,"dir":"test"},{"name":"generates a dataset from domain and samples","suites":["victory-util/data","getData","with "],"updatePoint":{"line":582,"column":51,"index":14144},"line":582,"code":"    it(\"generates a dataset from domain and samples\", () => {\n      const generatedReturn = [{\n        x: 0,\n        y: 0\n      }, {\n        x: 5,\n        y: 5\n      }, {\n        x: 10,\n        y: 10\n      }];\n      const props = {\n        x: \"x\",\n        y: \"y\",\n        domain: {\n          x: [0, 10],\n          y: [0, 10]\n        },\n        samples: 2\n      };\n      const returnData = Data.generateData(props);\n      expect(returnData).toEqual(generatedReturn);\n    });","file":"jest/victory-core/victory-util/data.test.js","skipped":false,"dir":"test"},{"name":"returns true when a component has a static role matching a whitelist","suites":["victory-util/data","isDataComponent"],"updatePoint":{"line":611,"column":76,"index":14776},"line":611,"code":"    it(\"returns true when a component has a static role matching a whitelist\", () => {\n      expect(Data.isDataComponent( /*#__PURE__*/React.createElement(TestDataComponent, null))).toBe(true);\n    });","file":"jest/victory-core/victory-util/data.test.js","skipped":false,"dir":"test"},{"name":"returns false when a component has a role that does not match the whitelist","suites":["victory-util/data","isDataComponent"],"updatePoint":{"line":614,"column":83,"index":14985},"line":614,"code":"    it(\"returns false when a component has a role that does not match the whitelist\", () => {\n      // eslint-disable-next-line react/no-multi-comp\n      class TestFooComponent extends React.Component {\n        static role = \"foo\";\n      }\n\n      expect(Data.isDataComponent( /*#__PURE__*/React.createElement(TestFooComponent, null))).toBe(false);\n    });","file":"jest/victory-core/victory-util/data.test.js","skipped":false,"dir":"test"},{"name":"returns true when a data component is wrapped in VictoryPortal","suites":["victory-util/data","isDataComponent"],"updatePoint":{"line":622,"column":70,"index":15328},"line":622,"code":"    it(\"returns true when a data component is wrapped in VictoryPortal\", () => {\n      expect(Data.isDataComponent( /*#__PURE__*/React.createElement(VictoryPortal, null, /*#__PURE__*/React.createElement(TestDataComponent, null)))).toBe(true);\n    });","file":"jest/victory-core/victory-util/data.test.js","skipped":false,"dir":"test"},{"name":"returns a function equivalent to getDomain when no props are given","suites":["victory-util/domain","createDomainFunction"],"updatePoint":{"line":5,"column":74,"index":239},"line":5,"code":"    it(\"returns a function equivalent to getDomain when no props are given\", () => {\n      const props = {\n        x: \"x\",\n        y: \"y\",\n        domain: {\n          y: [1, 2]\n        },\n        data: [{\n          x: 1,\n          y: 3\n        }, {\n          x: 3,\n          y: 5\n        }]\n      };\n      const domainGetter = Domain.createDomainFunction();\n      expect(domainGetter(props, \"x\")).toEqual(Domain.getDomain(props, \"x\"));\n    });","file":"jest/victory-core/victory-util/domain.test.js","skipped":false,"dir":"test"},{"name":"returns a function that uses a custom getDomainFromData function when given","suites":["victory-util/domain","createDomainFunction"],"updatePoint":{"line":23,"column":83,"index":692},"line":23,"code":"    it(\"returns a function that uses a custom getDomainFromData function when given\", () => {\n      const props = {\n        x: \"x\",\n        y: \"y\",\n        data: [{\n          x: 1,\n          y: 3\n        }, {\n          x: 3,\n          y: 5\n        }]\n      };\n\n      const getDomainFromData = () => [0, 10];\n\n      const domainGetter = Domain.createDomainFunction(getDomainFromData);\n      expect(domainGetter(props, \"x\")).toEqual([0, 10]);\n    });","file":"jest/victory-core/victory-util/domain.test.js","skipped":false,"dir":"test"},{"name":"returns a function that uses a custom formatDomain function when given","suites":["victory-util/domain","createDomainFunction"],"updatePoint":{"line":41,"column":78,"index":1136},"line":41,"code":"    it(\"returns a function that uses a custom formatDomain function when given\", () => {\n      const props = {\n        domain: [0, 1]\n      };\n\n      const formatDomain = () => [0, 10];\n\n      const domainGetter = Domain.createDomainFunction(null, formatDomain);\n      expect(domainGetter(props, \"x\")).toEqual([0, 10]);\n    });","file":"jest/victory-core/victory-util/domain.test.js","skipped":false,"dir":"test"},{"name":"returns the domain when no domain padding is specified","suites":["victory-util/domain","formatDomain"],"updatePoint":{"line":58,"column":62,"index":1574},"line":58,"code":"    it(\"returns the domain when no domain padding is specified\", () => {\n      const domain = [0, 1];\n      const paddedDomain = Domain.formatDomain(domain, baseProps, \"x\");\n      expect(paddedDomain).toEqual(domain);\n    });","file":"jest/victory-core/victory-util/domain.test.js","skipped":false,"dir":"test"},{"name":"pads the domain a particular number of pixels","suites":["victory-util/domain","formatDomain"],"updatePoint":{"line":63,"column":53,"index":1791},"line":63,"code":"    it(\"pads the domain a particular number of pixels\", () => {\n      const domain = [0, 100];\n      const padding = [5, 10, 20];\n      padding.forEach(pad => {\n        const domainPadding = {\n          x: pad\n        };\n        const props = { ...baseProps,\n          domainPadding\n        };\n        const paddedDomain = Domain.formatDomain(domain, props, \"x\");\n        const adjustedDomain = domain[1] + pad;\n        const adjustedPercent = adjustedDomain / (baseProps.width - baseProps.padding);\n        const totalPadding = adjustedPercent * pad;\n        expect(paddedDomain).toEqual([0, domain[1] + totalPadding]);\n      });\n    });","file":"jest/victory-core/victory-util/domain.test.js","skipped":false,"dir":"test"},{"name":"filters zero from the domain for log scales","suites":["victory-util/domain","formatDomain"],"updatePoint":{"line":80,"column":51,"index":2428},"line":80,"code":"    it(\"filters zero from the domain for log scales\", () => {\n      const verySmallNumber = 1 / Number.MAX_SAFE_INTEGER;\n      const props = {\n        scale: {\n          y: \"log\"\n        }\n      };\n      const formattedDomain = Domain.formatDomain([0, 1], props, \"y\");\n      expect(formattedDomain).toEqual([verySmallNumber, 1]);\n    });","file":"jest/victory-core/victory-util/domain.test.js","skipped":false,"dir":"test"},{"name":"gets the domain from props if they exist","suites":["victory-util/domain","getDomain"],"updatePoint":{"line":92,"column":48,"index":2801},"line":92,"code":"    it(\"gets the domain from props if they exist\", () => {\n      const props = {\n        domain: [1, 2]\n      };\n      const resultDomain = Domain.getDomain(props, \"x\");\n      expect(resultDomain).toEqual(props.domain);\n    });","file":"jest/victory-core/victory-util/domain.test.js","skipped":false,"dir":"test"},{"name":"gets the domain from data if props don't exist for a particular axis","suites":["victory-util/domain","getDomain"],"updatePoint":{"line":99,"column":76,"index":3057},"line":99,"code":"    it(\"gets the domain from data if props don't exist for a particular axis\", () => {\n      const props = {\n        x: \"x\",\n        y: \"y\",\n        domain: {\n          y: [1, 2]\n        },\n        data: [{\n          x: 1,\n          y: 3\n        }, {\n          x: 3,\n          y: 5\n        }]\n      };\n      const resultDomain = Domain.getDomain(props, \"x\");\n      expect(resultDomain).toEqual([1, 3]);\n    });","file":"jest/victory-core/victory-util/domain.test.js","skipped":false,"dir":"test"},{"name":"calculates a domain from categories for the independent axis","suites":["victory-util/domain","getDomainFromCategories"],"updatePoint":{"line":119,"column":68,"index":3512},"line":119,"code":"    it(\"calculates a domain from categories for the independent axis\", () => {\n      const props = {\n        categories: [1, 2, 3]\n      };\n      const domainResult = Domain.getDomainFromCategories(props, \"x\");\n      expect(domainResult).toEqual([1, 3]);\n    });","file":"jest/victory-core/victory-util/domain.test.js","skipped":false,"dir":"test"},{"name":"calculates a domain from categories for the dependent axis","suites":["victory-util/domain","getDomainFromCategories"],"updatePoint":{"line":126,"column":66,"index":3773},"line":126,"code":"    it(\"calculates a domain from categories for the dependent axis\", () => {\n      const props = {\n        categories: {\n          y: [1, 2, 3]\n        }\n      };\n      const domainResult = Domain.getDomainFromCategories(props, \"y\");\n      expect(domainResult).toEqual([1, 3]);\n    });","file":"jest/victory-core/victory-util/domain.test.js","skipped":false,"dir":"test"},{"name":"calculates a domain from string categories","suites":["victory-util/domain","getDomainFromCategories"],"updatePoint":{"line":135,"column":50,"index":4043},"line":135,"code":"    it(\"calculates a domain from string categories\", () => {\n      const props = {\n        categories: {\n          x: [\"cats\", \"kittens\"]\n        }\n      };\n      const domainResult = Domain.getDomainFromCategories(props, \"x\");\n      expect(domainResult).toEqual([1, 2]);\n    });","file":"jest/victory-core/victory-util/domain.test.js","skipped":false,"dir":"test"},{"name":"returns a domain from a dataset","suites":["victory-util/domain","getDomainFromData"],"updatePoint":{"line":146,"column":39,"index":4358},"line":146,"code":"    it(\"returns a domain from a dataset\", () => {\n      const dataset = [{\n        _x: 1,\n        _y: 3\n      }, {\n        _x: 3,\n        _y: 5\n      }];\n      const resultDomain = Domain.getDomainFromData({}, \"x\", dataset);\n      expect(resultDomain).toEqual([1, 3]);\n    });","file":"jest/victory-core/victory-util/domain.test.js","skipped":false,"dir":"test"},{"name":"gets the domain from a domain array","suites":["victory-util/domain","getDomainFromProps"],"updatePoint":{"line":159,"column":43,"index":4686},"line":159,"code":"    it(\"gets the domain from a domain array\", () => {\n      const props = {\n        domain: [1, 2]\n      };\n      const resultDomain = Domain.getDomainFromProps(props, \"x\");\n      expect(resultDomain).toEqual(props.domain);\n    });","file":"jest/victory-core/victory-util/domain.test.js","skipped":false,"dir":"test"},{"name":"gets the domain from a domain object","suites":["victory-util/domain","getDomainFromProps"],"updatePoint":{"line":166,"column":44,"index":4919},"line":166,"code":"    it(\"gets the domain from a domain object\", () => {\n      const props = {\n        domain: {\n          x: [1, 2]\n        }\n      };\n      const resultDomain = Domain.getDomainFromProps(props, \"x\");\n      expect(resultDomain).toEqual(props.domain.x);\n    });","file":"jest/victory-core/victory-util/domain.test.js","skipped":false,"dir":"test"},{"name":"returns undefined if the domain props is not given","suites":["victory-util/domain","getDomainFromProps"],"updatePoint":{"line":175,"column":58,"index":5193},"line":175,"code":"    it(\"returns undefined if the domain props is not given\", () => {\n      expect(Domain.getDomainFromProps({}, \"x\")).toBeUndefined();\n    });","file":"jest/victory-core/victory-util/domain.test.js","skipped":false,"dir":"test"},{"name":"returns undefined if the domain for a given axis is not defined","suites":["victory-util/domain","getDomainFromProps"],"updatePoint":{"line":178,"column":71,"index":5349},"line":178,"code":"    it(\"returns undefined if the domain for a given axis is not defined\", () => {\n      const props = {\n        domain: {\n          y: [1, 2]\n        }\n      };\n      const resultDomain = Domain.getDomainFromProps(props, \"x\");\n      expect(resultDomain).toBeUndefined();\n    });","file":"jest/victory-core/victory-util/domain.test.js","skipped":false,"dir":"test"},{"name":"returns a domain from minDomain and maxDomain if both are defined","suites":["victory-util/domain","getDomainFromProps"],"updatePoint":{"line":187,"column":73,"index":5630},"line":187,"code":"    it(\"returns a domain from minDomain and maxDomain if both are defined\", () => {\n      const props = {\n        minDomain: 1,\n        maxDomain: 10\n      };\n      const resultDomain = Domain.getDomainFromProps(props, \"x\");\n      expect(resultDomain).toEqual([1, 10]);\n    });","file":"jest/victory-core/victory-util/domain.test.js","skipped":false,"dir":"test"},{"name":"returns an adjusted domain if minDomain equals maxDomain","suites":["victory-util/domain","getDomainFromProps"],"updatePoint":{"line":195,"column":64,"index":5899},"line":195,"code":"    it(\"returns an adjusted domain if minDomain equals maxDomain\", () => {\n      const props = {\n        minDomain: 1,\n        maxDomain: 1\n      };\n      const verySmallNumber = Math.pow(10, -10);\n      const resultDomain = Domain.getDomainFromProps(props, \"x\");\n      expect(resultDomain).toEqual([1 - verySmallNumber, 1 + verySmallNumber]);\n    });","file":"jest/victory-core/victory-util/domain.test.js","skipped":false,"dir":"test"},{"name":"returns undefined if only minDomain is defined","suites":["victory-util/domain","getDomainFromProps"],"updatePoint":{"line":204,"column":54,"index":6241},"line":204,"code":"    it(\"returns undefined if only minDomain is defined\", () => {\n      const props = {\n        minDomain: 1\n      };\n      const resultDomain = Domain.getDomainFromProps(props, \"x\");\n      expect(resultDomain).toBeUndefined();\n    });","file":"jest/victory-core/victory-util/domain.test.js","skipped":false,"dir":"test"},{"name":"returns a min max array when min and max are given","suites":["victory-util/domain","getDomainFromMinMax"],"updatePoint":{"line":213,"column":58,"index":6528},"line":213,"code":"    it(\"returns a min max array when min and max are given\", () => {\n      const min = 1;\n      const max = 2;\n      const resultDomain = Domain.getDomainFromMinMax(min, max);\n      expect(resultDomain).toEqual([min, max]);\n    });","file":"jest/victory-core/victory-util/domain.test.js","skipped":false,"dir":"test"},{"name":"returns an adjusted domain if min equals max","suites":["victory-util/domain","getDomainFromMinMax"],"updatePoint":{"line":219,"column":52,"index":6754},"line":219,"code":"    it(\"returns an adjusted domain if min equals max\", () => {\n      const min = 1;\n      const max = 1;\n      const verySmallNumber = Math.pow(10, -10);\n      const resultDomain = Domain.getDomainFromMinMax(min, max);\n      expect(resultDomain).toEqual([1 - verySmallNumber, 1 + verySmallNumber]);\n    });","file":"jest/victory-core/victory-util/domain.test.js","skipped":false,"dir":"test"},{"name":"returns a positive domain if min and max are both zero","suites":["victory-util/domain","getDomainFromMinMax"],"updatePoint":{"line":226,"column":62,"index":7071},"line":226,"code":"    it(\"returns a positive domain if min and max are both zero\", () => {\n      const min = 0;\n      const max = 0;\n      const verySmallNumber = Math.pow(10, -10);\n      const resultDomain = Domain.getDomainFromMinMax(min, max);\n      expect(resultDomain).toEqual([0, 2 * verySmallNumber]);\n    });","file":"jest/victory-core/victory-util/domain.test.js","skipped":false,"dir":"test"},{"name":"returns an adjusted date domain if min equals max","suites":["victory-util/domain","getDomainFromMinMax"],"updatePoint":{"line":233,"column":57,"index":7365},"line":233,"code":"    it(\"returns an adjusted date domain if min equals max\", () => {\n      const min = new Date(1980, 1, 1);\n      const max = new Date(1980, 1, 1);\n      const resultDomain = Domain.getDomainFromMinMax(min, max);\n      expect(resultDomain).toEqual([new Date(+min - 1), new Date(+max + 1)]);\n    });","file":"jest/victory-core/victory-util/domain.test.js","skipped":false,"dir":"test"},{"name":"ensures that the domain includes zero for the dependent axis","suites":["victory-util/domain","getDomainWithZero"],"updatePoint":{"line":241,"column":68,"index":7721},"line":241,"code":"    it(\"ensures that the domain includes zero for the dependent axis\", () => {\n      const props = {\n        data: [{\n          x: 1,\n          y: 3\n        }, {\n          x: 3,\n          y: 5\n        }]\n      };\n      const resultDomain = Domain.getDomainWithZero(props, \"y\");\n      expect(resultDomain).toEqual([0, 5]);\n    });","file":"jest/victory-core/victory-util/domain.test.js","skipped":false,"dir":"test"},{"name":"allows minimum domain values less than zero","suites":["victory-util/domain","getDomainWithZero"],"updatePoint":{"line":254,"column":51,"index":8034},"line":254,"code":"    it(\"allows minimum domain values less than zero\", () => {\n      const props = {\n        data: [{\n          x: 1,\n          y: -3\n        }, {\n          x: 3,\n          y: 5\n        }]\n      };\n      const resultDomain = Domain.getDomainWithZero(props, \"y\");\n      expect(resultDomain).toEqual([-3, 5]);\n    });","file":"jest/victory-core/victory-util/domain.test.js","skipped":false,"dir":"test"},{"name":"allows explicit y0 values in props.data to set the minimum domain","suites":["victory-util/domain","getDomainWithZero"],"updatePoint":{"line":267,"column":73,"index":8371},"line":267,"code":"    it(\"allows explicit y0 values in props.data to set the minimum domain\", () => {\n      const props = {\n        data: [{\n          x: 1,\n          y: 3,\n          y0: 2\n        }, {\n          x: 3,\n          y: 5,\n          y0: 3\n        }]\n      };\n      const resultDomain = Domain.getDomainWithZero(props, \"y\");\n      expect(resultDomain).toEqual([2, 5]);\n    });","file":"jest/victory-core/victory-util/domain.test.js","skipped":false,"dir":"test"},{"name":"handles negative y0 values","suites":["victory-util/domain","getDomainWithZero"],"updatePoint":{"line":282,"column":34,"index":8701},"line":282,"code":"    it(\"handles negative y0 values\", () => {\n      const props = {\n        data: [{\n          x: 1,\n          y: -3,\n          y0: -7\n        }, {\n          x: 3,\n          y: -5,\n          y0: -7\n        }]\n      };\n      const resultDomain = Domain.getDomainWithZero(props, \"y\");\n      expect(resultDomain).toEqual([-7, -3]);\n    });","file":"jest/victory-core/victory-util/domain.test.js","skipped":false,"dir":"test"},{"name":"respects props.minDomain when present","suites":["victory-util/domain","getDomainWithZero"],"updatePoint":{"line":297,"column":45,"index":9048},"line":297,"code":"    it(\"respects props.minDomain when present\", () => {\n      const props = {\n        data: [{\n          x: 1,\n          y: 3,\n          y0: 2\n        }, {\n          x: 3,\n          y: 5,\n          y0: 2\n        }],\n        minDomain: {\n          y: 4\n        }\n      };\n      const resultDomain = Domain.getDomainWithZero(props, \"y\");\n      expect(resultDomain).toEqual([4, 5]);\n    });","file":"jest/victory-core/victory-util/domain.test.js","skipped":false,"dir":"test"},{"name":"does not force the independent domain to include zero","suites":["victory-util/domain","getDomainWithZero"],"updatePoint":{"line":315,"column":61,"index":9452},"line":315,"code":"    it(\"does not force the independent domain to include zero\", () => {\n      const props = {\n        data: [{\n          x: 1,\n          y: 3\n        }, {\n          x: 3,\n          y: 5\n        }]\n      };\n      const resultDomain = Domain.getDomainWithZero(props, \"x\");\n      expect(resultDomain).toEqual([1, 3]);\n    });","file":"jest/victory-core/victory-util/domain.test.js","skipped":false,"dir":"test"},{"name":"returns maxDomain from props as an object","suites":["victory-util/domain","getMaxFromProps"],"updatePoint":{"line":330,"column":49,"index":9807},"line":330,"code":"    it(\"returns maxDomain from props as an object\", () => {\n      const props = {\n        maxDomain: {\n          x: 3\n        }\n      };\n      const maxDomain = Domain.getMaxFromProps(props, \"x\");\n      expect(maxDomain).toEqual(props.maxDomain.x);\n    });","file":"jest/victory-core/victory-util/domain.test.js","skipped":false,"dir":"test"},{"name":"returns maxDomain from props as a number","suites":["victory-util/domain","getMaxFromProps"],"updatePoint":{"line":339,"column":48,"index":10063},"line":339,"code":"    it(\"returns maxDomain from props as a number\", () => {\n      const props = {\n        maxDomain: 3\n      };\n      const maxDomain = Domain.getMaxFromProps(props, \"x\");\n      expect(maxDomain).toEqual(props.maxDomain);\n    });","file":"jest/victory-core/victory-util/domain.test.js","skipped":false,"dir":"test"},{"name":"returns undefined when maxDomain is not defined for a given axis","suites":["victory-util/domain","getMaxFromProps"],"updatePoint":{"line":346,"column":72,"index":10316},"line":346,"code":"    it(\"returns undefined when maxDomain is not defined for a given axis\", () => {\n      const props = {\n        maxDomain: {\n          y: 3\n        }\n      };\n      const maxDomain = Domain.getMaxFromProps(props, \"x\");\n      expect(maxDomain).toBeUndefined();\n    });","file":"jest/victory-core/victory-util/domain.test.js","skipped":false,"dir":"test"},{"name":"returns minDomain from props as an object","suites":["victory-util/domain","getMinFromProps"],"updatePoint":{"line":357,"column":49,"index":10606},"line":357,"code":"    it(\"returns minDomain from props as an object\", () => {\n      const props = {\n        minDomain: {\n          x: 3\n        }\n      };\n      const minDomain = Domain.getMinFromProps(props, \"x\");\n      expect(minDomain).toEqual(props.minDomain.x);\n    });","file":"jest/victory-core/victory-util/domain.test.js","skipped":false,"dir":"test"},{"name":"returns minDomain from props as a number","suites":["victory-util/domain","getMinFromProps"],"updatePoint":{"line":366,"column":48,"index":10862},"line":366,"code":"    it(\"returns minDomain from props as a number\", () => {\n      const props = {\n        minDomain: 3\n      };\n      const minDomain = Domain.getMinFromProps(props, \"x\");\n      expect(minDomain).toEqual(props.minDomain);\n    });","file":"jest/victory-core/victory-util/domain.test.js","skipped":false,"dir":"test"},{"name":"returns undefined when minDomain is not defined for a given axis","suites":["victory-util/domain","getMinFromProps"],"updatePoint":{"line":373,"column":72,"index":11115},"line":373,"code":"    it(\"returns undefined when minDomain is not defined for a given axis\", () => {\n      const props = {\n        minDomain: {\n          y: 3\n        }\n      };\n      const minDomain = Domain.getMinFromProps(props, \"x\");\n      expect(minDomain).toBeUndefined();\n    });","file":"jest/victory-core/victory-util/domain.test.js","skipped":false,"dir":"test"},{"name":"pads the domain by a value determined by data spacing","suites":["victory-util/domain","getSymmetricDomain"],"updatePoint":{"line":384,"column":61,"index":11420},"line":384,"code":"    it(\"pads the domain by a value determined by data spacing\", () => {\n      const domain = [0, 10];\n      const data = [2, 4, 6, 8];\n      const resultDomain = Domain.getSymmetricDomain(domain, data);\n      expect(resultDomain).toEqual([0, 12]);\n    });","file":"jest/victory-core/victory-util/domain.test.js","skipped":false,"dir":"test"},{"name":"returns true when a component has a static role matching a whitelist","suites":["victory-util/domain","isDomainComponent"],"updatePoint":{"line":396,"column":76,"index":11828},"line":396,"code":"    it(\"returns true when a component has a static role matching a whitelist\", () => {\n      expect(Domain.isDomainComponent( /*#__PURE__*/React.createElement(TestDomainComponent, null))).toBe(true);\n    });","file":"jest/victory-core/victory-util/domain.test.js","skipped":false,"dir":"test"},{"name":"returns false when a component has a role that does not match the whitelist","suites":["victory-util/domain","isDomainComponent"],"updatePoint":{"line":399,"column":83,"index":12043},"line":399,"code":"    it(\"returns false when a component has a role that does not match the whitelist\", () => {\n      // eslint-disable-next-line react/no-multi-comp\n      class TestFooComponent extends React.Component {\n        static role = \"foo\";\n      }\n\n      expect(Domain.isDomainComponent( /*#__PURE__*/React.createElement(TestFooComponent, null))).toBe(false);\n    });","file":"jest/victory-core/victory-util/domain.test.js","skipped":false,"dir":"test"},{"name":"returns true when a domain component is wrapped in VictoryPortal","suites":["victory-util/domain","isDomainComponent"],"updatePoint":{"line":407,"column":72,"index":12392},"line":407,"code":"    it(\"returns true when a domain component is wrapped in VictoryPortal\", () => {\n      expect(Domain.isDomainComponent( /*#__PURE__*/React.createElement(VictoryPortal, null, /*#__PURE__*/React.createElement(TestDomainComponent, null)))).toBe(true);\n    });","file":"jest/victory-core/victory-util/domain.test.js","skipped":false,"dir":"test"},{"name":"returns a set of new event functions with partially applied arguments","suites":["victory-util/events","getPartialEvents"],"updatePoint":{"line":4,"column":77,"index":196},"line":4,"code":"    it(\"returns a set of new event functions with partially applied arguments\", () => {\n      const events = {\n        onClick: (evt, childProps, index) => {\n          return {\n            evt,\n            childProps,\n            index\n          };\n        }\n      };\n      const index = 0;\n      const childProps = {\n        style: {\n          fill: \"green\"\n        }\n      };\n      const result = Events.getPartialEvents(events, index, childProps);\n      expect(Object.keys(result)).toEqual(expect.arrayContaining([\"onClick\"]));\n      expect(Object.keys(result.onClick())).toEqual(expect.arrayContaining([\"evt\", \"childProps\", \"index\"]));\n      expect(result.onClick().index).toEqual(index);\n      expect(result.onClick().childProps).toEqual(childProps);\n    });","file":"jest/victory-core/victory-util/events.test.js","skipped":false,"dir":"test"},{"name":"returns new functions that call set state","suites":["victory-util/events","getEvents"],"updatePoint":{"line":62,"column":49,"index":1660},"line":62,"code":"    it(\"returns new functions that call set state\", () => {\n      const getScopedEvents = Events.getScopedEvents.bind(fake);\n      const getBoundEvents = Events.getEvents.bind(fake);\n      const index = 0;\n      const result = getBoundEvents(fake.props, \"data\", index, getScopedEvents);\n      expect(Object.keys(result)).toEqual(expect.arrayContaining([\"onClick\"]));\n      const partialEvents = Events.getPartialEvents(result, index, {});\n      expect(Object.keys(partialEvents)).toEqual(expect.arrayContaining([\"onClick\"]));\n      partialEvents.onClick();\n      expect(fake.setState).toReturnWith({\n        [index]: {\n          data: {\n            foo: \"foo\"\n          }\n        }\n      });\n    });","file":"jest/victory-core/victory-util/events.test.js","skipped":false,"dir":"test"},{"name":"removes omitted keys and preserves all others","suites":["victory-util/helpers","omit"],"updatePoint":{"line":9,"column":53,"index":223},"line":9,"code":"    it(\"removes omitted keys and preserves all others\", () => {\n      const newData = Helpers.omit(data, [\"x\"]);\n      expect(newData.x).toBeUndefined();\n      expect(newData.y).toEqual(2);\n      expect(newData.z).toEqual(1);\n    });","file":"jest/victory-core/victory-util/helpers.test.js","skipped":false,"dir":"test"},{"name":"creates a copy of the original object","suites":["victory-util/helpers","omit"],"updatePoint":{"line":15,"column":45,"index":449},"line":15,"code":"    it(\"creates a copy of the original object\", () => {\n      const newData = Helpers.omit(data, []);\n      newData.x = 10;\n      expect(data.x).toEqual(3);\n      expect(newData.x).toEqual(10);\n    });","file":"jest/victory-core/victory-util/helpers.test.js","skipped":false,"dir":"test"},{"name":"defaults to an empty object","suites":["victory-util/helpers","omit"],"updatePoint":{"line":21,"column":35,"index":641},"line":21,"code":"    it(\"defaults to an empty object\", () => {\n      const newData = Helpers.omit();\n      expect(newData).toEqual({});\n    });","file":"jest/victory-core/victory-util/helpers.test.js","skipped":false,"dir":"test"},{"name":"defaults to simple shallow copy","suites":["victory-util/helpers","omit"],"updatePoint":{"line":25,"column":39,"index":772},"line":25,"code":"    it(\"defaults to simple shallow copy\", () => {\n      const newData = Helpers.omit(data);\n      expect(newData).toEqual(data);\n    });","file":"jest/victory-core/victory-util/helpers.test.js","skipped":false,"dir":"test"},{"name":"defaults to an empty object","suites":["victory-util/helpers","modifyProps"],"updatePoint":{"line":31,"column":35,"index":945},"line":31,"code":"    it(\"defaults to an empty object\", () => {\n      expect(Helpers.modifyProps({})).toEqual({});\n    });","file":"jest/victory-core/victory-util/helpers.test.js","skipped":false,"dir":"test"},{"name":"removes the theme role's style","suites":["victory-util/helpers","modifyProps"],"updatePoint":{"line":34,"column":38,"index":1053},"line":34,"code":"    it(\"removes the theme role's style\", () => {\n      const role = \"legend\";\n      const props = {\n        theme: {\n          legend: {\n            style: {\n              color: \"blue\"\n            },\n            data: 42\n          }\n        }\n      };\n      const fallbackProps = {};\n      const modifiedProps = { ...props,\n        data: 42\n      };\n      expect(Helpers.modifyProps(props, fallbackProps, role)).toEqual(modifiedProps);\n    });","file":"jest/victory-core/victory-util/helpers.test.js","skipped":false,"dir":"test"},{"name":"uses fallbackProps","suites":["victory-util/helpers","modifyProps"],"updatePoint":{"line":52,"column":26,"index":1486},"line":52,"code":"    it(\"uses fallbackProps\", () => {\n      const props = {\n        x: 2,\n        y: 3\n      };\n      const fallbackProps = {\n        x: 12,\n        y: 13,\n        z: 14\n      };\n      const modifiedProps = {\n        x: 2,\n        y: 3,\n        z: 14\n      };\n      expect(Helpers.modifyProps(props, fallbackProps)).toEqual(modifiedProps);\n    });","file":"jest/victory-core/victory-util/helpers.test.js","skipped":false,"dir":"test"},{"name":"evaluates functional props","suites":["victory-util/helpers","evaluateProp"],"updatePoint":{"line":75,"column":34,"index":1931},"line":75,"code":"    it(\"evaluates functional props\", () => {\n      const testProp = datum => datum.y > 0 ? \"red\" : \"blue\";\n\n      expect(Helpers.evaluateProp(testProp, data)).toEqual(\"red\");\n    });","file":"jest/victory-core/victory-util/helpers.test.js","skipped":false,"dir":"test"},{"name":"doesn't alter non-functional props","suites":["victory-util/helpers","evaluateProp"],"updatePoint":{"line":80,"column":42,"index":2122},"line":80,"code":"    it(\"doesn't alter non-functional props\", () => {\n      const testProp = \"blue\";\n      expect(Helpers.evaluateProp(testProp, data)).toEqual(\"blue\");\n    });","file":"jest/victory-core/victory-util/helpers.test.js","skipped":false,"dir":"test"},{"name":"evaluates functional styles, without altering others","suites":["victory-util/helpers","evaluateStyle"],"updatePoint":{"line":90,"column":60,"index":2391},"line":90,"code":"    it(\"evaluates functional styles, without altering others\", () => {\n      const style = {\n        color: datum => datum.y > 0 ? \"red\" : \"blue\",\n        size: 5\n      };\n      expect(Helpers.evaluateStyle(style, data)).toEqual({\n        color: \"red\",\n        size: 5\n      });\n    });","file":"jest/victory-core/victory-util/helpers.test.js","skipped":false,"dir":"test"},{"name":"returns no styles if disableInlineStyles is true","suites":["victory-util/helpers","evaluateStyle"],"updatePoint":{"line":100,"column":56,"index":2674},"line":100,"code":"    it(\"returns no styles if disableInlineStyles is true\", () => {\n      const style = {\n        color: \"blue\"\n      };\n      const props = {\n        disableInlineStyles: true\n      };\n      expect(Helpers.evaluateStyle(style, props)).toEqual({});\n    });","file":"jest/victory-core/victory-util/helpers.test.js","skipped":false,"dir":"test"},{"name":"returns a range based on props and axis","suites":["victory-util/helpers","getRange"],"updatePoint":{"line":116,"column":47,"index":3039},"line":116,"code":"    it(\"returns a range based on props and axis\", () => {\n      const x = Helpers.getRange(props, \"x\");\n      expect(Array.isArray(x)).toBe(true);\n      expect(x).toHaveLength(2);\n      expect(x).toEqual([0, 100]);\n      const y = Helpers.getRange(props, \"y\");\n      expect(Array.isArray(y)).toBe(true);\n      expect(y).toHaveLength(2);\n      expect(y).toEqual([200, 0]);\n    });","file":"jest/victory-core/victory-util/helpers.test.js","skipped":false,"dir":"test"},{"name":"merges styles","suites":["victory-util/helpers","getStyles"],"updatePoint":{"line":141,"column":21,"index":3662},"line":141,"code":"    it(\"merges styles\", () => {\n      const style = {\n        data: {\n          fill: \"red\"\n        },\n        labels: {\n          fontSize: 12\n        }\n      };\n      const styles = Helpers.getStyles(style, defaultStyles);\n      expect(styles.parent).toEqual({\n        border: \"black\",\n        width: \"100%\",\n        height: \"100%\"\n      });\n      expect(styles.data).toEqual({\n        fill: \"red\",\n        stroke: \"black\"\n      });\n      expect(styles.labels).toEqual({\n        fontSize: 12,\n        fontFamily: \"Helvetica\"\n      });\n    });","file":"jest/victory-core/victory-util/helpers.test.js","skipped":false,"dir":"test"},{"name":"sets padding from a single number","suites":["victory-util/helpers","getPadding"],"updatePoint":{"line":167,"column":41,"index":4266},"line":167,"code":"    it(\"sets padding from a single number\", () => {\n      const props = {\n        padding: 40\n      };\n      expect(Helpers.getPadding(props)).toEqual({\n        top: 40,\n        bottom: 40,\n        left: 40,\n        right: 40\n      });\n    });","file":"jest/victory-core/victory-util/helpers.test.js","skipped":false,"dir":"test"},{"name":"sets padding from a complete object","suites":["victory-util/helpers","getPadding"],"updatePoint":{"line":178,"column":43,"index":4512},"line":178,"code":"    it(\"sets padding from a complete object\", () => {\n      const props = {\n        padding: {\n          top: 20,\n          bottom: 40,\n          left: 60,\n          right: 80\n        }\n      };\n      expect(Helpers.getPadding(props)).toEqual(props.padding);\n    });","file":"jest/victory-core/victory-util/helpers.test.js","skipped":false,"dir":"test"},{"name":"fills missing values with 0","suites":["victory-util/helpers","getPadding"],"updatePoint":{"line":189,"column":35,"index":4771},"line":189,"code":"    it(\"fills missing values with 0\", () => {\n      const props = {\n        padding: {\n          top: 40,\n          bottom: 40\n        }\n      };\n      expect(Helpers.getPadding(props)).toEqual({\n        top: 40,\n        bottom: 40,\n        left: 0,\n        right: 0\n      });\n    });","file":"jest/victory-core/victory-util/helpers.test.js","skipped":false,"dir":"test"},{"name":"creates a valid object accessor from a property key","suites":["victory-util/helpers","createAccessor"],"updatePoint":{"line":205,"column":59,"index":5123},"line":205,"code":"    it(\"creates a valid object accessor from a property key\", () => {\n      const accessor = Helpers.createAccessor(\"k\");\n      expect(accessor({\n        k: 42\n      })).toEqual(42);\n    });","file":"jest/victory-core/victory-util/helpers.test.js","skipped":false,"dir":"test"},{"name":"creates a valid array accessor from an index","suites":["victory-util/helpers","createAccessor"],"updatePoint":{"line":211,"column":52,"index":5307},"line":211,"code":"    it(\"creates a valid array accessor from an index\", () => {\n      const accessor = Helpers.createAccessor(2);\n      expect(accessor([3, 4, 5])).toEqual(5);\n    });","file":"jest/victory-core/victory-util/helpers.test.js","skipped":false,"dir":"test"},{"name":"creates a valid array accessor from a deeply nested path","suites":["victory-util/helpers","createAccessor"],"updatePoint":{"line":215,"column":64,"index":5486},"line":215,"code":"    it(\"creates a valid array accessor from a deeply nested path\", () => {\n      const accessor = Helpers.createAccessor(\"x.y[0].0.z\");\n      expect(accessor({\n        x: {\n          y: [[{\n            z: 1987\n          }]]\n        }\n      })).toEqual(1987);\n    });","file":"jest/victory-core/victory-util/helpers.test.js","skipped":false,"dir":"test"},{"name":"creates a value (passthrough) accessor from null/undefined","suites":["victory-util/helpers","createAccessor"],"updatePoint":{"line":225,"column":66,"index":5755},"line":225,"code":"    it(\"creates a value (passthrough) accessor from null/undefined\", () => {\n      const nullAccessor = Helpers.createAccessor(null);\n      const undefinedAccessor = Helpers.createAccessor(undefined);\n      expect(nullAccessor(\"ok\")).toEqual(\"ok\");\n      expect(undefinedAccessor(14)).toEqual(14);\n    });","file":"jest/victory-core/victory-util/helpers.test.js","skipped":false,"dir":"test"},{"name":"returns the correct positions given a set of props an and index","suites":["victory-util/label-helpers","getProps"],"updatePoint":{"line":31,"column":71,"index":686},"line":31,"code":"    it(\"returns the correct positions given a set of props an and index\", () => {\n      data.forEach((datum, index) => {\n        const labelProps = LabelHelpers.getProps(basicProps, index);\n        expect(labelProps.x).toEqual(datum.x);\n        expect(labelProps.y).toEqual(datum.y);\n      });\n    });","file":"jest/victory-core/victory-util/label-helpers.test.js","skipped":false,"dir":"test"},{"name":"returns the correct label text from a labels array","suites":["victory-util/label-helpers","getProps"],"updatePoint":{"line":38,"column":58,"index":975},"line":38,"code":"    it(\"returns the correct label text from a labels array\", () => {\n      const labels = [\"one\", \"two\"];\n      const props = assign({\n        labels\n      }, basicProps);\n      data.forEach((datum, index) => {\n        const labelProps = LabelHelpers.getProps(props, index);\n        expect(labelProps.text).toEqual(labels[index]);\n      });\n    });","file":"jest/victory-core/victory-util/label-helpers.test.js","skipped":false,"dir":"test"},{"name":"returns the correct label text from datum","suites":["victory-util/label-helpers","getProps"],"updatePoint":{"line":48,"column":49,"index":1315},"line":48,"code":"    it(\"returns the correct label text from datum\", () => {\n      const dataWithLabels = [{\n        x: 0,\n        y: 0,\n        label: \"one\"\n      }, {\n        x: 0.5,\n        y: 0.5,\n        label: \"two\"\n      }];\n      const props = assign({}, basicProps, {\n        data: dataWithLabels\n      });\n      data.forEach((datum, index) => {\n        const labelProps = LabelHelpers.getProps(props, index);\n        expect(labelProps.text).toEqual(dataWithLabels[index].label);\n      });\n    });","file":"jest/victory-core/victory-util/label-helpers.test.js","skipped":false,"dir":"test"},{"name":"returns the correct positions for polar labels","suites":["victory-util/label-helpers","getProps"],"updatePoint":{"line":66,"column":54,"index":1810},"line":66,"code":"    it(\"returns the correct positions for polar labels\", () => {\n      const polarScale = {\n        x: d3Scale.scaleLinear().range([0, Math.PI * 2]),\n        y: d3Scale.scaleLinear()\n      };\n      data.forEach((datum, index) => {\n        const props = assign({}, basicProps, {\n          scale: polarScale,\n          polar: true\n        });\n        const labelProps = LabelHelpers.getProps(props, index);\n        expect(labelProps.x).toEqual(datum.y * Math.cos(datum.x * Math.PI * 2)); // We need Math.abs here because 0 does not equal -0 :(\n\n        expect(Math.abs(labelProps.y)).toEqual(Math.abs(-datum.y * Math.sin(datum.x * Math.PI * 2)));\n      });\n    });","file":"jest/victory-core/victory-util/label-helpers.test.js","skipped":false,"dir":"test"},{"name":"returns zero when labelPlacement is vertical","suites":["victory-util/label-helpers","getPolarAngle"],"updatePoint":{"line":84,"column":52,"index":2513},"line":84,"code":"    it(\"returns zero when labelPlacement is vertical\", () => {\n      const angle = LabelHelpers.getPolarAngle({\n        labelPlacement: \"vertical\"\n      });\n      expect(angle).toEqual(0);\n    });","file":"jest/victory-core/victory-util/label-helpers.test.js","skipped":false,"dir":"test"},{"name":"returns angles corresponding to perpendicular labelPlacement","suites":["victory-util/label-helpers","getPolarAngle"],"updatePoint":{"line":90,"column":68,"index":2726},"line":90,"code":"    it(\"returns angles corresponding to perpendicular labelPlacement\", () => {\n      expect(LabelHelpers.getPolarAngle({\n        labelPlacement: \"perpendicular\"\n      }, 15)).toEqual(75);\n      expect(LabelHelpers.getPolarAngle({\n        labelPlacement: \"perpendicular\"\n      }, 45)).toEqual(45);\n      expect(LabelHelpers.getPolarAngle({\n        labelPlacement: \"perpendicular\"\n      }, 90)).toEqual(0);\n      expect(LabelHelpers.getPolarAngle({\n        labelPlacement: \"perpendicular\"\n      }, 135)).toEqual(-45);\n      expect(LabelHelpers.getPolarAngle({\n        labelPlacement: \"perpendicular\"\n      }, 180)).toEqual(90);\n      expect(LabelHelpers.getPolarAngle({\n        labelPlacement: \"perpendicular\"\n      }, 225)).toEqual(45);\n      expect(LabelHelpers.getPolarAngle({\n        labelPlacement: \"perpendicular\"\n      }, 270)).toEqual(0);\n      expect(LabelHelpers.getPolarAngle({\n        labelPlacement: \"perpendicular\"\n      }, 315)).toEqual(-45);\n    });","file":"jest/victory-core/victory-util/label-helpers.test.js","skipped":false,"dir":"test"},{"name":"returns angles corresponding to parallel labelPlacement","suites":["victory-util/label-helpers","getPolarAngle"],"updatePoint":{"line":116,"column":63,"index":3685},"line":116,"code":"    it(\"returns angles corresponding to parallel labelPlacement\", () => {\n      expect(LabelHelpers.getPolarAngle({\n        labelPlacement: \"parallel\"\n      }, 15)).toEqual(-15);\n      expect(LabelHelpers.getPolarAngle({\n        labelPlacement: \"parallel\"\n      }, 45)).toEqual(-45);\n      expect(LabelHelpers.getPolarAngle({\n        labelPlacement: \"parallel\"\n      }, 90)).toEqual(-90);\n      expect(LabelHelpers.getPolarAngle({\n        labelPlacement: \"parallel\"\n      }, 135)).toEqual(45);\n      expect(LabelHelpers.getPolarAngle({\n        labelPlacement: \"parallel\"\n      }, 180)).toEqual(0);\n      expect(LabelHelpers.getPolarAngle({\n        labelPlacement: \"parallel\"\n      }, 225)).toEqual(-45);\n      expect(LabelHelpers.getPolarAngle({\n        labelPlacement: \"parallel\"\n      }, 270)).toEqual(-90);\n      expect(LabelHelpers.getPolarAngle({\n        labelPlacement: \"parallel\"\n      }, 315)).toEqual(45);\n    });","file":"jest/victory-core/victory-util/label-helpers.test.js","skipped":false,"dir":"test"},{"name":"draws a path for a circle at the correct location","suites":["point-path-helpers","circle"],"updatePoint":{"line":7,"column":57,"index":238},"line":7,"code":"    it(\"draws a path for a circle at the correct location\", () => {\n      const pathResult = PathHelpers.circle(x, y, size);\n      expect(pathResult).toContain(`M ${x}, ${y}`);\n    });","file":"jest/victory-core/victory-util/point-path-helpers.test.ts","skipped":false,"dir":"test"},{"name":"draws a path for a square at the correct location","suites":["point-path-helpers","square"],"updatePoint":{"line":13,"column":57,"index":458},"line":13,"code":"    it(\"draws a path for a square at the correct location\", () => {\n      const pathResult = PathHelpers.square(x, y, size);\n      const baseSize = 0.87 * size;\n      expect(pathResult).toContain(`M ${x - baseSize}, ${y + baseSize}`);\n    });","file":"jest/victory-core/victory-util/point-path-helpers.test.ts","skipped":false,"dir":"test"},{"name":"draws a path for a diamond at the correct location","suites":["point-path-helpers","diamond"],"updatePoint":{"line":20,"column":58,"index":738},"line":20,"code":"    it(\"draws a path for a diamond at the correct location\", () => {\n      const pathResult = PathHelpers.diamond(0, 0, 1);\n      const baseSize = 0.87 * size;\n      const length = Math.sqrt(2 * (baseSize * baseSize));\n      expect(pathResult).toContain(`M ${Math.round(x)}, ${Math.round(y + length)}`);\n    });","file":"jest/victory-core/victory-util/point-path-helpers.test.ts","skipped":false,"dir":"test"},{"name":"draws a path for a triangleUp at the correct location","suites":["point-path-helpers","triangleUp"],"updatePoint":{"line":28,"column":61,"index":1092},"line":28,"code":"    it(\"draws a path for a triangleUp at the correct location\", () => {\n      const pathResult = PathHelpers.triangleUp(0, 0, 1);\n      expect(pathResult).toContain(`M ${x - size}, ${y + size}`);\n    });","file":"jest/victory-core/victory-util/point-path-helpers.test.ts","skipped":false,"dir":"test"},{"name":"draws a path for a triangleDown at the correct location","suites":["point-path-helpers","triangleDown"],"updatePoint":{"line":34,"column":63,"index":1339},"line":34,"code":"    it(\"draws a path for a triangleDown at the correct location\", () => {\n      const pathResult = PathHelpers.triangleDown(0, 0, 1);\n      expect(pathResult).toContain(`M ${x - size}, ${y - size}`);\n    });","file":"jest/victory-core/victory-util/point-path-helpers.test.ts","skipped":false,"dir":"test"},{"name":"draws a path for a plus at the correct location","suites":["point-path-helpers","plus"],"updatePoint":{"line":40,"column":55,"index":1572},"line":40,"code":"    it(\"draws a path for a plus at the correct location\", () => {\n      const pathResult = PathHelpers.plus(0, 0, 1);\n      const baseSize = 1.1 * size;\n      const distance = baseSize / 1.5;\n      expect(pathResult).toContain(`M ${x - distance / 2}, ${y + baseSize}`);\n    });","file":"jest/victory-core/victory-util/point-path-helpers.test.ts","skipped":false,"dir":"test"},{"name":"draws a path for a minus at the correct location","suites":["point-path-helpers","minus"],"updatePoint":{"line":48,"column":56,"index":1885},"line":48,"code":"    it(\"draws a path for a minus at the correct location\", () => {\n      const pathResult = PathHelpers.minus(0, 0, 1);\n      const baseSize = 1.1 * size;\n      const lineHeight = baseSize - baseSize * 0.3;\n      expect(pathResult).toContain(`M ${x - baseSize}, ${y + lineHeight / 2}`);\n    });","file":"jest/victory-core/victory-util/point-path-helpers.test.ts","skipped":false,"dir":"test"},{"name":"draws a path for a star at the correct location","suites":["point-path-helpers","star"],"updatePoint":{"line":56,"column":55,"index":2212},"line":56,"code":"    it(\"draws a path for a star at the correct location\", () => {\n      const pathResult = PathHelpers.star(0, 0, 1);\n      const angle = Math.PI / 5;\n      const baseSize = 1.35 * size;\n      expect(pathResult).toContain(`M ${baseSize * Math.sin(angle) + x}`);\n      expect(pathResult).toContain(`${baseSize * Math.cos(angle) + y}`);\n    });","file":"jest/victory-core/victory-util/point-path-helpers.test.ts","skipped":false,"dir":"test"},{"name":"Should warn about deprecation and validate OK","suites":["victory-util/prop-types","deprecated"],"updatePoint":{"line":36,"column":53,"index":1087},"line":36,"code":"    it(\"Should warn about deprecation and validate OK\", () => {\n      validate(\"value\");\n      shouldWarn('\"pName\" property of \"ComponentName\" has been deprecated Read more at link');\n      shouldNotError();\n    });","file":"jest/victory-core/victory-util/prop-types.test.js","skipped":false,"dir":"test"},{"name":"Should warn about deprecation and throw validation error when property\n       value is not OK","suites":["victory-util/prop-types","deprecated"],"updatePoint":{"line":42,"column":22,"index":1351},"line":41,"code":"    it(`Should warn about deprecation and throw validation error when property\n       value is not OK`, () => {\n      validate({});\n      shouldWarn('\"pName\" property of \"ComponentName\" has been deprecated Read more at link');\n      shouldError(\"Warning: Failed pName type: Invalid pName `pName` of type `object` supplied to \" + \"`ComponentName`, expected `string`.\");\n    });","file":"jest/victory-core/victory-util/prop-types.test.js","skipped":false,"dir":"test"},{"name":"returns an error if the first validator is false","suites":["victory-util/prop-types","allOfType"],"updatePoint":{"line":57,"column":56,"index":1961},"line":57,"code":"    it(\"returns an error if the first validator is false\", () => {\n      const result = validate(-1);\n      expect(result).toBeInstanceOf(Error);\n      expect(result.message).toContain(\"`testProp` in `TestComponent` must be a non-negative number.\");\n    });","file":"jest/victory-core/victory-util/prop-types.test.js","skipped":false,"dir":"test"},{"name":"returns an error if the second validator is false","suites":["victory-util/prop-types","allOfType"],"updatePoint":{"line":62,"column":57,"index":2220},"line":62,"code":"    it(\"returns an error if the second validator is false\", () => {\n      const result = validate(1.3);\n      expect(result).toBeInstanceOf(Error);\n      expect(result.message).toContain(\"`testProp` in `TestComponent` must be an integer.\");\n    });","file":"jest/victory-core/victory-util/prop-types.test.js","skipped":false,"dir":"test"},{"name":"does not return an error if both validators are true","suites":["victory-util/prop-types","allOfType"],"updatePoint":{"line":67,"column":60,"index":2472},"line":67,"code":"    it(\"does not return an error if both validators are true\", () => {\n      const result = validate(3);\n      expect(result).not.toBeInstanceOf(Error);\n    });","file":"jest/victory-core/victory-util/prop-types.test.js","skipped":false,"dir":"test"},{"name":"returns an error for non numeric values","suites":["victory-util/prop-types","nonNegative"],"updatePoint":{"line":79,"column":47,"index":2812},"line":79,"code":"    it(\"returns an error for non numeric values\", () => {\n      const result = validate(\"a\");\n      expect(result).toBeInstanceOf(Error);\n      expect(result.message).toContain(\"`testProp` in `TestComponent` must be a non-negative number.\");\n    });","file":"jest/victory-core/victory-util/prop-types.test.js","skipped":false,"dir":"test"},{"name":"returns an error for negative numeric values","suites":["victory-util/prop-types","nonNegative"],"updatePoint":{"line":84,"column":52,"index":3067},"line":84,"code":"    it(\"returns an error for negative numeric values\", () => {\n      const result = validate(-1);\n      expect(result).toBeInstanceOf(Error);\n      expect(result.message).toContain(\"`testProp` in `TestComponent` must be a non-negative number.\");\n    });","file":"jest/victory-core/victory-util/prop-types.test.js","skipped":false,"dir":"test"},{"name":"does not return an error for positive numeric values","suites":["victory-util/prop-types","nonNegative"],"updatePoint":{"line":89,"column":60,"index":3329},"line":89,"code":"    it(\"does not return an error for positive numeric values\", () => {\n      const result = validate(1);\n      expect(result).not.toBeInstanceOf(Error);\n    });","file":"jest/victory-core/victory-util/prop-types.test.js","skipped":false,"dir":"test"},{"name":"does not return an error for zero","suites":["victory-util/prop-types","nonNegative"],"updatePoint":{"line":93,"column":41,"index":3471},"line":93,"code":"    it(\"does not return an error for zero\", () => {\n      const result = validate(0);\n      expect(result).not.toBeInstanceOf(Error);\n    });","file":"jest/victory-core/victory-util/prop-types.test.js","skipped":false,"dir":"test"},{"name":"returns an error for non numeric values","suites":["victory-util/prop-types","integer"],"updatePoint":{"line":105,"column":47,"index":3803},"line":105,"code":"    it(\"returns an error for non numeric values\", () => {\n      const result = validate(\"a\");\n      expect(result).toBeInstanceOf(Error);\n      expect(result.message).toContain(\"`testProp` in `TestComponent` must be an integer.\");\n    });","file":"jest/victory-core/victory-util/prop-types.test.js","skipped":false,"dir":"test"},{"name":"returns an error for non-integer numeric values","suites":["victory-util/prop-types","integer"],"updatePoint":{"line":110,"column":55,"index":4050},"line":110,"code":"    it(\"returns an error for non-integer numeric values\", () => {\n      const result = validate(2.4);\n      expect(result).toBeInstanceOf(Error);\n      expect(result.message).toContain(\"`testProp` in `TestComponent` must be an integer.\");\n    });","file":"jest/victory-core/victory-util/prop-types.test.js","skipped":false,"dir":"test"},{"name":"does not return an error for integers","suites":["victory-util/prop-types","integer"],"updatePoint":{"line":115,"column":45,"index":4287},"line":115,"code":"    it(\"does not return an error for integers\", () => {\n      let result = validate(3);\n      expect(result).not.toBeInstanceOf(Error);\n      result = validate(-3);\n      expect(result).not.toBeInstanceOf(Error);\n      result = validate(0);\n      expect(result).not.toBeInstanceOf(Error);\n    });","file":"jest/victory-core/victory-util/prop-types.test.js","skipped":false,"dir":"test"},{"name":"returns an error for non numeric values","suites":["victory-util/prop-types","greaterThanZero"],"updatePoint":{"line":131,"column":47,"index":4786},"line":131,"code":"    it(\"returns an error for non numeric values\", () => {\n      const result = validate(\"a\");\n      expect(result).toBeInstanceOf(Error);\n      expect(result.message).toContain(\"`testProp` in `TestComponent` must be a number greater than zero.\");\n    });","file":"jest/victory-core/victory-util/prop-types.test.js","skipped":false,"dir":"test"},{"name":"returns an error for zero","suites":["victory-util/prop-types","greaterThanZero"],"updatePoint":{"line":136,"column":33,"index":5027},"line":136,"code":"    it(\"returns an error for zero\", () => {\n      const result = validate(0);\n      expect(result).toBeInstanceOf(Error);\n      expect(result.message).toContain(\"`testProp` in `TestComponent` must be a number greater than zero.\");\n    });","file":"jest/victory-core/victory-util/prop-types.test.js","skipped":false,"dir":"test"},{"name":"returns an error for negative numbers","suites":["victory-util/prop-types","greaterThanZero"],"updatePoint":{"line":141,"column":45,"index":5278},"line":141,"code":"    it(\"returns an error for negative numbers\", () => {\n      const result = validate(-3);\n      expect(result).toBeInstanceOf(Error);\n      expect(result.message).toContain(\"`testProp` in `TestComponent` must be a number greater than zero.\");\n    });","file":"jest/victory-core/victory-util/prop-types.test.js","skipped":false,"dir":"test"},{"name":"does not return an error for numbers greater than zero","suites":["victory-util/prop-types","greaterThanZero"],"updatePoint":{"line":146,"column":62,"index":5547},"line":146,"code":"    it(\"does not return an error for numbers greater than zero\", () => {\n      let result = validate(0.1);\n      expect(result).not.toBeInstanceOf(Error);\n      result = validate(5);\n      expect(result).not.toBeInstanceOf(Error);\n      result = validate(1);\n      expect(result).not.toBeInstanceOf(Error);\n    });","file":"jest/victory-core/victory-util/prop-types.test.js","skipped":false,"dir":"test"},{"name":"returns an error for non array values","suites":["victory-util/prop-types","domain"],"updatePoint":{"line":162,"column":45,"index":6027},"line":162,"code":"    it(\"returns an error for non array values\", () => {\n      const result = validate(\"a\");\n      expect(result).toBeInstanceOf(Error);\n      expect(result.message).toContain(\"`testProp` in `TestComponent` must be an array of two unique numeric values.\");\n    });","file":"jest/victory-core/victory-util/prop-types.test.js","skipped":false,"dir":"test"},{"name":"returns an error when the length of the array is not two","suites":["victory-util/prop-types","domain"],"updatePoint":{"line":167,"column":64,"index":6310},"line":167,"code":"    it(\"returns an error when the length of the array is not two\", () => {\n      const result = validate([1]);\n      expect(result).toBeInstanceOf(Error);\n      expect(result.message).toContain(\"`testProp` in `TestComponent` must be an array of two unique numeric values.\");\n    });","file":"jest/victory-core/victory-util/prop-types.test.js","skipped":false,"dir":"test"},{"name":"returns an error when the values of the array are equal","suites":["victory-util/prop-types","domain"],"updatePoint":{"line":172,"column":63,"index":6592},"line":172,"code":"    it(\"returns an error when the values of the array are equal\", () => {\n      const result = validate([1, 1]);\n      expect(result).toBeInstanceOf(Error);\n      expect(result.message).toContain(\"`testProp` in `TestComponent` must be an array of two unique numeric values.\");\n    });","file":"jest/victory-core/victory-util/prop-types.test.js","skipped":false,"dir":"test"},{"name":"does not return an error for two element ascending arrays","suites":["victory-util/prop-types","domain"],"updatePoint":{"line":177,"column":65,"index":6879},"line":177,"code":"    it(\"does not return an error for two element ascending arrays\", () => {\n      const result = validate([0, 1]);\n      expect(result).not.toBeInstanceOf(Error);\n    });","file":"jest/victory-core/victory-util/prop-types.test.js","skipped":false,"dir":"test"},{"name":"does not return an error for two element descending arrays","suites":["victory-util/prop-types","domain"],"updatePoint":{"line":181,"column":66,"index":7051},"line":181,"code":"    it(\"does not return an error for two element descending arrays\", () => {\n      const result = validate([1, 0]);\n      expect(result).not.toBeInstanceOf(Error);\n    });","file":"jest/victory-core/victory-util/prop-types.test.js","skipped":false,"dir":"test"},{"name":"does not return an error arrays of dates","suites":["victory-util/prop-types","domain"],"updatePoint":{"line":185,"column":48,"index":7205},"line":185,"code":"    it(\"does not return an error arrays of dates\", () => {\n      const result = validate([new Date(1980, 1, 1), new Date(1990, 1, 1)]);\n      expect(result).not.toBeInstanceOf(Error);\n    });","file":"jest/victory-core/victory-util/prop-types.test.js","skipped":false,"dir":"test"},{"name":"returns an error for non function values","suites":["victory-util/prop-types","scale"],"updatePoint":{"line":197,"column":48,"index":7577},"line":197,"code":"    it(\"returns an error for non function values\", () => {\n      const result = validate(\"a\");\n      expect(result).toBeInstanceOf(Error);\n      expect(result.message).toContain(\"`testProp` in `TestComponent` must be a d3 scale.\");\n    });","file":"jest/victory-core/victory-util/prop-types.test.js","skipped":false,"dir":"test"},{"name":"returns an error when the function does not have a domain, range, and copy methods","suites":["victory-util/prop-types","scale"],"updatePoint":{"line":202,"column":90,"index":7859},"line":202,"code":"    it(\"returns an error when the function does not have a domain, range, and copy methods\", () => {\n      const testFunc = () => {\n        \"oops\";\n      };\n\n      const result = validate(testFunc);\n      expect(result).toBeInstanceOf(Error);\n      expect(result.message).toContain(\"`testProp` in `TestComponent` must be a d3 scale.\");\n    });","file":"jest/victory-core/victory-util/prop-types.test.js","skipped":false,"dir":"test"},{"name":"does not return an error when the function is a d3 scale","suites":["victory-util/prop-types","scale"],"line":211,"code":"    it.skip(\"does not return an error when the function is a d3 scale\", () => {// const testFunc = d3.scale.linear; TODO: Mock this rather than depending on d3","file":"jest/victory-core/victory-util/prop-types.test.js","skipped":true,"dir":"test"},{"name":"returns an error for non array values","suites":["victory-util/prop-types","homogeneousArray"],"updatePoint":{"line":223,"column":45,"index":8628},"line":223,"code":"    it(\"returns an error for non array values\", () => {\n      const result = validate(\"a\");\n      expect(result).toBeInstanceOf(Error);\n      expect(result.message).toContain(\"`testProp` in `TestComponent` must be an array.\");\n    });","file":"jest/victory-core/victory-util/prop-types.test.js","skipped":false,"dir":"test"},{"name":"returns an error when the array has elements of different types","suites":["victory-util/prop-types","homogeneousArray"],"updatePoint":{"line":228,"column":71,"index":8889},"line":228,"code":"    it(\"returns an error when the array has elements of different types\", () => {\n      const result = validate([1, \"a\"]);\n      expect(result).toBeInstanceOf(Error);\n      expect(result.message).toEqual(\"Expected `testProp` in `TestComponent` to be a homogeneous array, but found \" + \"types `Number` and `String`.\");\n    });","file":"jest/victory-core/victory-util/prop-types.test.js","skipped":false,"dir":"test"},{"name":"does not return an error for empty arrays","suites":["victory-util/prop-types","homogeneousArray"],"updatePoint":{"line":233,"column":49,"index":9193},"line":233,"code":"    it(\"does not return an error for empty arrays\", () => {\n      const result = validate([]);\n      expect(result).not.toBeInstanceOf(Error);\n    });","file":"jest/victory-core/victory-util/prop-types.test.js","skipped":false,"dir":"test"},{"name":"does not return an error for arrays with one item","suites":["victory-util/prop-types","homogeneousArray"],"updatePoint":{"line":237,"column":57,"index":9352},"line":237,"code":"    it(\"does not return an error for arrays with one item\", () => {\n      const result = validate([\"a\"]);\n      expect(result).not.toBeInstanceOf(Error);\n    });","file":"jest/victory-core/victory-util/prop-types.test.js","skipped":false,"dir":"test"},{"name":"does not return an error for arrays where all elements are the same type","suites":["victory-util/prop-types","homogeneousArray"],"updatePoint":{"line":241,"column":80,"index":9537},"line":241,"code":"    it(\"does not return an error for arrays where all elements are the same type\", () => {\n      const result = validate([1, 0]);\n      expect(result).not.toBeInstanceOf(Error);\n    });","file":"jest/victory-core/victory-util/prop-types.test.js","skipped":false,"dir":"test"},{"name":"does not return an error when prop is undefined","suites":["victory-util/prop-types","matchDataLength"],"updatePoint":{"line":255,"column":55,"index":9959},"line":255,"code":"    it(\"does not return an error when prop is undefined\", () => {\n      expect(validate()).not.toBeInstanceOf(Error);\n    });","file":"jest/victory-core/victory-util/prop-types.test.js","skipped":false,"dir":"test"},{"name":"does not return an error when prop has same length as data","suites":["victory-util/prop-types","matchDataLength"],"updatePoint":{"line":258,"column":66,"index":10096},"line":258,"code":"    it(\"does not return an error when prop has same length as data\", () => {\n      expect(validate([{}, {}], [1, 2])).not.toBeInstanceOf(Error);\n    });","file":"jest/victory-core/victory-util/prop-types.test.js","skipped":false,"dir":"test"},{"name":"returns an error when prop doesn't have same length as data","suites":["victory-util/prop-types","matchDataLength"],"updatePoint":{"line":261,"column":67,"index":10250},"line":261,"code":"    it(\"returns an error when prop doesn't have same length as data\", () => {\n      const result = validate([{}], [1, 2]);\n      expect(result).toBeInstanceOf(Error);\n      expect(result).toHaveProperty(\"message\", \"Length of data and testProp arrays must match.\");\n    });","file":"jest/victory-core/victory-util/prop-types.test.js","skipped":false,"dir":"test"},{"name":"returns a scale from `getScaleFromProps` when string props are provided","suites":["victory-util/scale","getBaseScale"],"updatePoint":{"line":6,"column":79,"index":286},"line":6,"code":"    it(\"returns a scale from `getScaleFromProps` when string props are provided\", () => {\n      const props = {\n        scale: \"log\"\n      };\n      const baseScale = Scale.getBaseScale(props, \"x\");\n      expect(baseScale).toBeInstanceOf(Function);\n      expect(baseScale.base).toBeInstanceOf(Function); // This is a unique check for log scales\n    });","file":"jest/victory-core/victory-util/scale.test.js","skipped":false,"dir":"test"},{"name":"returns a scale from `getScaleFromProps` when a d3 scale is provided","suites":["victory-util/scale","getBaseScale"],"updatePoint":{"line":14,"column":76,"index":635},"line":14,"code":"    it(\"returns a scale from `getScaleFromProps` when a d3 scale is provided\", () => {\n      const props = {\n        scale: d3Scale.scaleLog()\n      };\n      const baseScale = Scale.getBaseScale(props, \"x\");\n      expect(baseScale).toBeInstanceOf(Function);\n      expect(baseScale.base).toBeInstanceOf(Function); // This is a unique check for log scales\n    });","file":"jest/victory-core/victory-util/scale.test.js","skipped":false,"dir":"test"},{"name":"returns a default scale when data is provided","suites":["victory-util/scale","getBaseScale"],"updatePoint":{"line":22,"column":53,"index":974},"line":22,"code":"    it(\"returns a default scale when data is provided\", () => {\n      const props = {\n        data: [{\n          x: 0,\n          y: 1\n        }]\n      };\n      const baseScale = Scale.getBaseScale(props, \"x\");\n      expect(baseScale).toBeInstanceOf(Function);\n      expect(baseScale.domain).toBeInstanceOf(Function);\n    });","file":"jest/victory-core/victory-util/scale.test.js","skipped":false,"dir":"test"},{"name":"returns a default scale when nothing is provided","suites":["victory-util/scale","getBaseScale"],"updatePoint":{"line":33,"column":56,"index":1302},"line":33,"code":"    it(\"returns a default scale when nothing is provided\", () => {\n      const baseScale = Scale.getBaseScale({}, \"x\");\n      expect(baseScale).toBeInstanceOf(Function);\n      expect(baseScale.domain).toBeInstanceOf(Function);\n    });","file":"jest/victory-core/victory-util/scale.test.js","skipped":false,"dir":"test"},{"name":"returns a scale when a single scale is provided in props","suites":["victory-util/scale","getScaleFromProps"],"updatePoint":{"line":40,"column":64,"index":1591},"line":40,"code":"    it(\"returns a scale when a single scale is provided in props\", () => {\n      const props = {\n        scale: \"log\"\n      };\n      const propsScale = Scale.getScaleFromProps(props, \"x\");\n      expect(propsScale).toBeInstanceOf(Function);\n      expect(propsScale.base).toBeInstanceOf(Function); // This is a unique check for log scales\n    });","file":"jest/victory-core/victory-util/scale.test.js","skipped":false,"dir":"test"},{"name":"returns a scale when a scale object contains a scale for an axis","suites":["victory-util/scale","getScaleFromProps"],"updatePoint":{"line":48,"column":72,"index":1944},"line":48,"code":"    it(\"returns a scale when a scale object contains a scale for an axis\", () => {\n      const props = {\n        scale: {\n          x: \"log\"\n        }\n      };\n      const propsScale = Scale.getScaleFromProps(props, \"x\");\n      expect(propsScale).toBeInstanceOf(Function);\n      expect(propsScale.base).toBeInstanceOf(Function); // This is a unique check for log scales\n    });","file":"jest/victory-core/victory-util/scale.test.js","skipped":false,"dir":"test"},{"name":"returns undefined when a scale object does not contain a scale for an axis","suites":["victory-util/scale","getScaleFromProps"],"updatePoint":{"line":58,"column":82,"index":2332},"line":58,"code":"    it(\"returns undefined when a scale object does not contain a scale for an axis\", () => {\n      const props = {\n        scale: {\n          y: \"log\"\n        }\n      };\n      const propsScale = Scale.getScaleFromProps(props, \"x\");\n      expect(propsScale).toBeUndefined();\n    });","file":"jest/victory-core/victory-util/scale.test.js","skipped":false,"dir":"test"},{"name":"returns undefined when an invalid scale is provided in props","suites":["victory-util/scale","getScaleFromProps"],"updatePoint":{"line":67,"column":68,"index":2600},"line":67,"code":"    it(\"returns undefined when an invalid scale is provided in props\", () => {\n      const props = {\n        scale: \"foo\"\n      };\n      const propsScale = Scale.getScaleFromProps(props, \"x\");\n      expect(propsScale).toBeUndefined();\n    });","file":"jest/victory-core/victory-util/scale.test.js","skipped":false,"dir":"test"},{"name":"returns undefined when no scale prop is provided","suites":["victory-util/scale","getScaleFromProps"],"updatePoint":{"line":74,"column":56,"index":2831},"line":74,"code":"    it(\"returns undefined when no scale prop is provided\", () => {\n      const propsScale = Scale.getScaleFromProps({}, \"x\");\n      expect(propsScale).toBeUndefined();\n    });","file":"jest/victory-core/victory-util/scale.test.js","skipped":false,"dir":"test"},{"name":"returns 'log' for log scales","suites":["victory-util/scale","getScaleType"],"updatePoint":{"line":80,"column":36,"index":3028},"line":80,"code":"    it(\"returns 'log' for log scales\", () => {\n      const props = {\n        scale: {\n          x: d3Scale.scaleLog()\n        }\n      };\n      const scaleType = Scale.getScaleType(props, \"x\");\n      expect(scaleType).toEqual(\"log\");\n    });","file":"jest/victory-core/victory-util/scale.test.js","skipped":false,"dir":"test"},{"name":"returns a string value given a string prop","suites":["victory-util/scale","getScaleType"],"updatePoint":{"line":89,"column":50,"index":3283},"line":89,"code":"    it(\"returns a string value given a string prop\", () => {\n      const props = {\n        scale: {\n          x: \"linear\"\n        }\n      };\n      const scaleType = Scale.getScaleType(props, \"x\");\n      expect(scaleType).toEqual(\"linear\");\n    });","file":"jest/victory-core/victory-util/scale.test.js","skipped":false,"dir":"test"},{"name":"uses data to distinguish between time and linear scales","suites":["victory-util/scale","getScaleType"],"updatePoint":{"line":98,"column":63,"index":3544},"line":98,"code":"    it(\"uses data to distinguish between time and linear scales\", () => {\n      const props = {\n        scale: {\n          x: d3Scale.scaleLinear()\n        }\n      };\n      const scaleType = Scale.getScaleType(props, \"x\");\n      expect(scaleType).toEqual(\"linear\");\n    });","file":"jest/victory-core/victory-util/scale.test.js","skipped":false,"dir":"test"},{"name":"returns 'linear' when no scale is set","suites":["victory-util/scale","getScaleType"],"updatePoint":{"line":107,"column":45,"index":3800},"line":107,"code":"    it(\"returns 'linear' when no scale is set\", () => {\n      const props = {};\n      const scaleType = Scale.getScaleType(props, \"x\");\n      expect(scaleType).toEqual(\"linear\");\n    });","file":"jest/victory-core/victory-util/scale.test.js","skipped":false,"dir":"test"},{"name":"returns 'time' when no scale is set, and data contains dates","suites":["victory-util/scale","getScaleType"],"updatePoint":{"line":112,"column":68,"index":4010},"line":112,"code":"    it(\"returns 'time' when no scale is set, and data contains dates\", () => {\n      const props = {\n        x: \"x\",\n        y: \"y\",\n        data: [{\n          x: new Date(\"2016-01-13\"),\n          y: 1\n        }]\n      };\n      const scaleType = Scale.getScaleType(props, \"x\");\n      expect(scaleType).toEqual(\"time\");\n    });","file":"jest/victory-core/victory-util/scale.test.js","skipped":false,"dir":"test"},{"name":"returns undefined on unknown function type","suites":["victory-util/scale","getType"],"updatePoint":{"line":126,"column":50,"index":4355},"line":126,"code":"    it(\"returns undefined on unknown function type\", () => {\n      const scaleType = Scale.getType(function () {});\n      expect(scaleType).toBeUndefined();\n    });","file":"jest/victory-core/victory-util/scale.test.js","skipped":false,"dir":"test"},{"name":"returns a string value given a string prop","suites":["victory-util/scale","getType"],"updatePoint":{"line":130,"column":50,"index":4520},"line":130,"code":"    it(\"returns a string value given a string prop\", () => {\n      const scaleType = Scale.getType(\"linear\");\n      expect(scaleType).toEqual(\"linear\");\n    });","file":"jest/victory-core/victory-util/scale.test.js","skipped":false,"dir":"test"},{"name":"returns 'log' for log scales","suites":["victory-util/scale","getType"],"updatePoint":{"line":134,"column":36,"index":4667},"line":134,"code":"    it(\"returns 'log' for log scales\", () => {\n      const scaleType = Scale.getType(d3Scale.scaleLog());\n      expect(scaleType).toEqual(\"log\");\n    });","file":"jest/victory-core/victory-util/scale.test.js","skipped":false,"dir":"test"},{"name":"matches 'quantile'","suites":["victory-util/scale","getType"],"updatePoint":{"line":138,"column":26,"index":4811},"line":138,"code":"    it(\"matches 'quantile'\", () => {\n      const scaleType = Scale.getType(d3Scale.scaleQuantile());\n      expect(scaleType).toEqual(\"quantile\");\n    });","file":"jest/victory-core/victory-util/scale.test.js","skipped":false,"dir":"test"},{"name":"returns undefined for scaleLinear","suites":["victory-util/scale","getType"],"updatePoint":{"line":142,"column":41,"index":4980},"line":142,"code":"    it(\"returns undefined for scaleLinear\", () => {\n      const scaleType = Scale.getType(d3Scale.scaleLinear());\n      expect(scaleType).toBeUndefined();\n    });","file":"jest/victory-core/victory-util/scale.test.js","skipped":false,"dir":"test"},{"name":"returns min / max bounds","suites":["helpers/selection","getBounds"],"updatePoint":{"line":5,"column":32,"index":197},"line":5,"code":"    it(\"returns min / max bounds\", () => {\n      const x1 = 10;\n      const x2 = 5;\n      const y1 = 0;\n      const y2 = 1;\n      const scale = {\n        x: d3Scale.scaleLinear(),\n        y: d3Scale.scaleLinear()\n      };\n      const props = {\n        x1,\n        x2,\n        y1,\n        y2,\n        scale\n      };\n      const bounds = Selection.getBounds(props);\n      expect(bounds).toEqual({\n        x: [x2, x1],\n        y: [y1, y2]\n      });\n    });","file":"jest/victory-core/victory-util/selection.test.js","skipped":false,"dir":"test"},{"name":"returns coordinates corresponding to domain min max","suites":["helpers/selection","getDomainCoordinates"],"updatePoint":{"line":29,"column":59,"index":727},"line":29,"code":"    it(\"returns coordinates corresponding to domain min max\", () => {\n      const scale = {\n        x: d3Scale.scaleLinear(),\n        y: d3Scale.scaleLinear()\n      };\n      const coords = Selection.getDomainCoordinates({\n        scale\n      });\n      expect(coords).toEqual({\n        x: [0, 1],\n        y: [0, 1]\n      });\n    });","file":"jest/victory-core/victory-util/selection.test.js","skipped":false,"dir":"test"},{"name":"returns coordinates corresponding to point x, y","suites":["helpers/selection","getDataCoordinates"],"updatePoint":{"line":44,"column":55,"index":1102},"line":44,"code":"    it(\"returns coordinates corresponding to point x, y\", () => {\n      const scale = {\n        x: d3Scale.scaleLinear(),\n        y: d3Scale.scaleLinear()\n      };\n      const coords = Selection.getDataCoordinates({}, scale, 1, 1);\n      expect(coords).toEqual({\n        x: 1,\n        y: 1\n      });\n    });","file":"jest/victory-core/victory-util/selection.test.js","skipped":false,"dir":"test"},{"name":"returns polar coordinates corresponding to point x, y","suites":["helpers/selection","getDataCoordinates"],"updatePoint":{"line":55,"column":61,"index":1416},"line":55,"code":"    it(\"returns polar coordinates corresponding to point x, y\", () => {\n      const scale = {\n        x: d3Scale.scaleLinear().range([0, Math.PI * 2]),\n        y: d3Scale.scaleLinear()\n      };\n      const x = Math.PI;\n      const y = 0;\n      const coords = Selection.getDataCoordinates({\n        polar: true\n      }, scale, x, y);\n      expect(coords).toEqual({\n        x: 0,\n        y: Math.PI\n      });\n    });","file":"jest/victory-core/victory-util/selection.test.js","skipped":false,"dir":"test"},{"name":"returns an empty string if no transform definitions are given","suites":["toTransformString"],"updatePoint":{"line":3,"column":67,"index":144},"line":3,"code":"  it(\"returns an empty string if no transform definitions are given\", () => {\n    expect(Style.toTransformString({})).toEqual(\"\");\n  });","file":"jest/victory-core/victory-util/style.test.js","skipped":false,"dir":"test"},{"name":"returns a string with two transform instructions when an object is given","suites":["toTransformString"],"updatePoint":{"line":6,"column":78,"index":292},"line":6,"code":"  it(\"returns a string with two transform instructions when an object is given\", () => {\n    expect(Style.toTransformString({\n      rotate: [45, 0, 1],\n      skewY: [65]\n    })).toEqual(\"rotate(45,0,1) skewY(65)\");\n  });","file":"jest/victory-core/victory-util/style.test.js","skipped":false,"dir":"test"},{"name":"returns a string with two transform instructions when two objects are given","suites":["toTransformString"],"updatePoint":{"line":12,"column":81,"index":516},"line":12,"code":"  it(\"returns a string with two transform instructions when two objects are given\", () => {\n    expect(Style.toTransformString({\n      rotate: [45, 0, 1]\n    }, {\n      skewY: [65]\n    })).toEqual(\"rotate(45,0,1) skewY(65)\");\n  });","file":"jest/victory-core/victory-util/style.test.js","skipped":false,"dir":"test"},{"name":"returns at least the subsequent transforms if the first is undefined","suites":["toTransformString"],"updatePoint":{"line":19,"column":74,"index":741},"line":19,"code":"  it(\"returns at least the subsequent transforms if the first is undefined\", () => {\n    expect(Style.toTransformString(undefined, {\n      skewY: [65]\n    })).toEqual(\"skewY(65)\");\n  });","file":"jest/victory-core/victory-util/style.test.js","skipped":false,"dir":"test"},{"name":"translate pixels as number of pixels","suites":["victory-util/textsize","convertLengthToPixels"],"updatePoint":{"line":5,"column":44,"index":198},"line":5,"code":"    it(\"translate pixels as number of pixels\", () => {\n      expect(TextSize.convertLengthToPixels(\"20px\")).toEqual(20);\n    });","file":"jest/victory-core/victory-util/textsize.test.js","skipped":false,"dir":"test"},{"name":"translate absolute measurement length units to particular number of pixels","suites":["victory-util/textsize","convertLengthToPixels"],"updatePoint":{"line":8,"column":82,"index":365},"line":8,"code":"    it(\"translate absolute measurement length units to particular number of pixels\", () => {\n      expect(TextSize.convertLengthToPixels(\"10pt\")).toEqual(13.3);\n    });","file":"jest/victory-core/victory-util/textsize.test.js","skipped":false,"dir":"test"},{"name":"translate relative measurement length units to particular number of pixels","suites":["victory-util/textsize","convertLengthToPixels"],"updatePoint":{"line":11,"column":82,"index":534},"line":11,"code":"    it(\"translate relative measurement length units to particular number of pixels\", () => {\n      expect(TextSize.convertLengthToPixels(\"1.5em\", 16)).toEqual(24);\n    });","file":"jest/victory-core/victory-util/textsize.test.js","skipped":false,"dir":"test"},{"name":"return zero width when no style","suites":["victory-util/textsize","approximateWidth"],"updatePoint":{"line":16,"column":39,"index":708},"line":16,"code":"    it(\"return zero width when no style\", () => {\n      expect(TextSize.approximateTextSize(testString).width).toEqual(0);\n    });","file":"jest/victory-core/victory-util/textsize.test.js","skipped":false,"dir":"test"},{"name":"return correct width with signed angle","suites":["victory-util/textsize","approximateWidth"],"updatePoint":{"line":19,"column":46,"index":846},"line":19,"code":"    it(\"return correct width with signed angle\", () => {\n      expect(TextSize.approximateTextSize(testString, {\n        angle: -45,\n        fontSize: 14\n      }).width.toFixed(2)).toEqual(\"31.71\");\n    });","file":"jest/victory-core/victory-util/textsize.test.js","skipped":false,"dir":"test"},{"name":"return correct width with pixel fontsize","suites":["victory-util/textsize","approximateWidth"],"updatePoint":{"line":25,"column":48,"index":1055},"line":25,"code":"    it(\"return correct width with pixel fontsize\", () => {\n      expect(TextSize.approximateTextSize(testString, {\n        fontSize: \"14px\"\n      }).width.toFixed(2)).toEqual(\"28.74\");\n    });","file":"jest/victory-core/victory-util/textsize.test.js","skipped":false,"dir":"test"},{"name":"return appropriate width with defined fontSize","suites":["victory-util/textsize","approximateWidth"],"updatePoint":{"line":30,"column":54,"index":1254},"line":30,"code":"    it(\"return appropriate width with defined fontSize\", () => {\n      expect(TextSize.approximateTextSize(testString, {\n        fontSize: 12\n      }).width.toFixed(2)).toEqual(\"24.64\");\n    });","file":"jest/victory-core/victory-util/textsize.test.js","skipped":false,"dir":"test"},{"name":"consider font","suites":["victory-util/textsize","approximateWidth"],"updatePoint":{"line":35,"column":21,"index":1416},"line":35,"code":"    it(\"consider font\", () => {\n      expect(TextSize.approximateTextSize(testString, {\n        fontSize: 16\n      }).width.toFixed(2)).toEqual(\"32.85\");\n    });","file":"jest/victory-core/victory-util/textsize.test.js","skipped":false,"dir":"test"},{"name":"consider letterSpacing","suites":["victory-util/textsize","approximateWidth"],"updatePoint":{"line":40,"column":30,"index":1587},"line":40,"code":"    it(\"consider letterSpacing\", () => {\n      expect(TextSize.approximateTextSize(testString, {\n        fontSize: 12,\n        letterSpacing: \"1px\"\n      }).width.toFixed(2)).toEqual(\"26.64\");\n    });","file":"jest/victory-core/victory-util/textsize.test.js","skipped":false,"dir":"test"},{"name":"consider angle","suites":["victory-util/textsize","approximateWidth"],"updatePoint":{"line":46,"column":22,"index":1780},"line":46,"code":"    it(\"consider angle\", () => {\n      expect(TextSize.approximateTextSize(testString, {\n        fontSize: 12,\n        angle: 30\n      }).width.toFixed(2)).toEqual(\"28.24\");\n    });","file":"jest/victory-core/victory-util/textsize.test.js","skipped":false,"dir":"test"},{"name":"not consider lineHeight without angle","suites":["victory-util/textsize","approximateWidth"],"updatePoint":{"line":52,"column":45,"index":1985},"line":52,"code":"    it(\"not consider lineHeight without angle\", () => {\n      expect(TextSize.approximateTextSize(testString, {\n        fontSize: 12,\n        lineHeight: 2\n      }).width.toFixed(2)).toEqual(\"24.64\");\n    });","file":"jest/victory-core/victory-util/textsize.test.js","skipped":false,"dir":"test"},{"name":"consider lineHeight with angle","suites":["victory-util/textsize","approximateWidth"],"updatePoint":{"line":58,"column":38,"index":2187},"line":58,"code":"    it(\"consider lineHeight with angle\", () => {\n      expect(TextSize.approximateTextSize(testString, {\n        fontSize: 12,\n        lineHeight: 2,\n        angle: 30\n      }).width.toFixed(2)).toEqual(\"35.14\");\n    });","file":"jest/victory-core/victory-util/textsize.test.js","skipped":false,"dir":"test"},{"name":"return width of widest string in text","suites":["victory-util/textsize","approximateWidth"],"updatePoint":{"line":65,"column":45,"index":2415},"line":65,"code":"    it(\"return width of widest string in text\", () => {\n      expect(TextSize.approximateTextSize(\"ABC\\nDEFGH\\nIJK\", {\n        fontSize: 12\n      }).width.toFixed(2)).toEqual(\"41.94\");\n    });","file":"jest/victory-core/victory-util/textsize.test.js","skipped":false,"dir":"test"},{"name":"returns width of widest string in array if array has an empty string","suites":["victory-util/textsize","approximateWidth"],"updatePoint":{"line":70,"column":76,"index":2639},"line":70,"code":"    it(\"returns width of widest string in array if array has an empty string\", () => {\n      expect(TextSize.approximateTextSize([\"06-14-20\", \"\"], {\n        fontSize: 12\n      }).width.toFixed(2)).toEqual(\"47.93\");\n    });","file":"jest/victory-core/victory-util/textsize.test.js","skipped":false,"dir":"test"},{"name":"return zero width when no style","suites":["victory-util/textsize","approximateHeight"],"updatePoint":{"line":77,"column":39,"index":2871},"line":77,"code":"    it(\"return zero width when no style\", () => {\n      expect(TextSize.approximateTextSize(testString).height).toEqual(0);\n    });","file":"jest/victory-core/victory-util/textsize.test.js","skipped":false,"dir":"test"},{"name":"return correct height with signed angle","suites":["victory-util/textsize","approximateHeight"],"updatePoint":{"line":80,"column":47,"index":3011},"line":80,"code":"    it(\"return correct height with signed angle\", () => {\n      expect(TextSize.approximateTextSize(testString, {\n        angle: -45,\n        fontSize: 14\n      }).height.toFixed(2)).toEqual(\"33.29\");\n    });","file":"jest/victory-core/victory-util/textsize.test.js","skipped":false,"dir":"test"},{"name":"return correct height with pixel fontsize","suites":["victory-util/textsize","approximateHeight"],"updatePoint":{"line":86,"column":49,"index":3222},"line":86,"code":"    it(\"return correct height with pixel fontsize\", () => {\n      expect(TextSize.approximateTextSize(testString, {\n        fontSize: \"14px\"\n      }).height.toFixed(2)).toEqual(\"16.90\");\n    });","file":"jest/victory-core/victory-util/textsize.test.js","skipped":false,"dir":"test"},{"name":"return appropriate height with expected precision","suites":["victory-util/textsize","approximateHeight"],"updatePoint":{"line":91,"column":57,"index":3425},"line":91,"code":"    it(\"return appropriate height with expected precision\", () => {\n      expect(TextSize.approximateTextSize(testString, {\n        fontSize: 12\n      }).height.toFixed(2)).toEqual(\"14.49\");\n    });","file":"jest/victory-core/victory-util/textsize.test.js","skipped":false,"dir":"test"},{"name":"consider font","suites":["victory-util/textsize","approximateHeight"],"updatePoint":{"line":96,"column":21,"index":3588},"line":96,"code":"    it(\"consider font\", () => {\n      expect(TextSize.approximateTextSize(testString, {\n        fontSize: 16\n      }).height.toFixed(2)).toEqual(\"19.32\");\n    });","file":"jest/victory-core/victory-util/textsize.test.js","skipped":false,"dir":"test"},{"name":"consider angle","suites":["victory-util/textsize","approximateHeight"],"updatePoint":{"line":101,"column":22,"index":3752},"line":101,"code":"    it(\"consider angle\", () => {\n      expect(TextSize.approximateTextSize(testString, {\n        fontSize: 12,\n        angle: 30\n      }).height.toFixed(2)).toEqual(\"25.48\");\n    });","file":"jest/victory-core/victory-util/textsize.test.js","skipped":false,"dir":"test"},{"name":"not consider letterSpacing without angle","suites":["victory-util/textsize","approximateHeight"],"updatePoint":{"line":107,"column":48,"index":3961},"line":107,"code":"    it(\"not consider letterSpacing without angle\", () => {\n      expect(TextSize.approximateTextSize(testString, {\n        fontSize: 12,\n        letterSpacing: \"1px\"\n      }).height.toFixed(2)).toEqual(\"14.49\");\n    });","file":"jest/victory-core/victory-util/textsize.test.js","skipped":false,"dir":"test"},{"name":"consider letterSpacing with angle","suites":["victory-util/textsize","approximateHeight"],"updatePoint":{"line":113,"column":41,"index":4174},"line":113,"code":"    it(\"consider letterSpacing with angle\", () => {\n      expect(TextSize.approximateTextSize(testString, {\n        fontSize: 12,\n        angle: 30,\n        letterSpacing: \"1px\"\n      }).height.toFixed(2)).toEqual(\"26.53\");\n    });","file":"jest/victory-core/victory-util/textsize.test.js","skipped":false,"dir":"test"},{"name":"consider lineHeight","suites":["victory-util/textsize","approximateHeight"],"updatePoint":{"line":120,"column":27,"index":4392},"line":120,"code":"    it(\"consider lineHeight\", () => {\n      expect(TextSize.approximateTextSize(testString, {\n        fontSize: 12,\n        lineHeight: 2\n      }).height.toFixed(2)).toEqual(\"28.98\");\n    });","file":"jest/victory-core/victory-util/textsize.test.js","skipped":false,"dir":"test"},{"name":"consider multiLines text","suites":["victory-util/textsize","approximateHeight"],"updatePoint":{"line":126,"column":32,"index":4589},"line":126,"code":"    it(\"consider multiLines text\", () => {\n      expect(TextSize.approximateTextSize(`ABC\\n${\"DBCDEFG\"}\\n123`, {\n        fontSize: 12\n      }).height.toFixed(2)).toEqual(\"43.47\");\n    });","file":"jest/victory-core/victory-util/textsize.test.js","skipped":false,"dir":"test"},{"name":"returns a 'falsey' transition object if children are not given","suites":["getInitialTransitionState"],"updatePoint":{"line":10,"column":68,"index":294},"line":10,"code":"  it(\"returns a 'falsey' transition object if children are not given\", () => {\n    const result = Transitions.getInitialTransitionState(null, null);\n    expect(result).toEqual({\n      childrenTransitions: [],\n      nodesWillExit: false,\n      nodesWillEnter: false,\n      nodesShouldEnter: false\n    });\n  });","file":"jest/victory-core/victory-util/transitions.test.js","skipped":false,"dir":"test"},{"name":"it returns childTransitions entering and exiting false for identical data","suites":["getInitialTransitionState"],"updatePoint":{"line":19,"column":79,"index":615},"line":19,"code":"  it(\"it returns childTransitions entering and exiting false for identical data\", () => {\n    const child = makeChild([{\n      x: 1,\n      y: 1\n    }, {\n      x: 2,\n      y: 3\n    }]);\n    const result = Transitions.getInitialTransitionState(child, child);\n    expect(result).toEqual({\n      childrenTransitions: [{\n        entering: false,\n        exiting: false\n      }],\n      nodesWillExit: false,\n      nodesWillEnter: false,\n      nodesShouldEnter: false\n    });\n  });","file":"jest/victory-core/victory-util/transitions.test.js","skipped":false,"dir":"test"},{"name":"it returns childTransitions with exiting data","suites":["getInitialTransitionState"],"updatePoint":{"line":38,"column":51,"index":1062},"line":38,"code":"  it(\"it returns childTransitions with exiting data\", () => {\n    const child1 = makeChild([{\n      x: 1,\n      y: 1\n    }, {\n      x: 2,\n      y: 3\n    }]);\n    const child2 = makeChild([{\n      x: 1,\n      y: 1\n    }]);\n    const result = Transitions.getInitialTransitionState(child1, child2);\n    expect(result).toEqual({\n      childrenTransitions: [{\n        entering: false,\n        exiting: {\n          1: true\n        }\n      }],\n      nodesWillExit: true,\n      nodesWillEnter: false,\n      nodesShouldEnter: false\n    });\n  });","file":"jest/victory-core/victory-util/transitions.test.js","skipped":false,"dir":"test"},{"name":"it returns childTransitions with entering data","suites":["getInitialTransitionState"],"updatePoint":{"line":63,"column":52,"index":1600},"line":63,"code":"  it(\"it returns childTransitions with entering data\", () => {\n    const child1 = makeChild([{\n      x: 1,\n      y: 1\n    }]);\n    const child2 = makeChild([{\n      x: 1,\n      y: 1\n    }, {\n      x: 2,\n      y: 3\n    }]);\n    const result = Transitions.getInitialTransitionState(child1, child2);\n    expect(result).toEqual({\n      childrenTransitions: [{\n        entering: {\n          1: true\n        },\n        exiting: false\n      }],\n      nodesWillExit: false,\n      nodesWillEnter: true,\n      nodesShouldEnter: false\n    });\n  });","file":"jest/victory-core/victory-util/transitions.test.js","skipped":false,"dir":"test"},{"name":"returns a function that describes data exiting","suites":["getTransitionPropsFactory"],"updatePoint":{"line":118,"column":52,"index":2667},"line":118,"code":"  it(\"returns a function that describes data exiting\", () => {\n    const exitingState = {\n      childrenTransitions: [{\n        entering: false,\n        exiting: {\n          1: true\n        }\n      }],\n      nodesWillExit: true,\n      nodesWillEnter: false,\n      nodesShouldEnter: false,\n      nodesShouldLoad: true,\n      nodesDoneLoad: true\n    };\n    const result = Transitions.getTransitionPropsFactory({}, exitingState, callback);\n    const child = makeChild([{\n      x: 1,\n      y: 1\n    }, {\n      x: 2,\n      y: 3\n    }]);\n    const calledResult = result(child);\n    expect(result).toBeInstanceOf(Function);\n    expect(Object.keys(calledResult)).toEqual(expect.arrayContaining([\"animate\", \"data\"]));\n    expect(calledResult.data).toEqual([{\n      x: 1,\n      y: 1\n    }, {\n      x: 2,\n      y: 0\n    }]);\n    expect(calledResult.animate.duration).toEqual(child.type.defaultTransitions.onExit.duration);\n  });","file":"jest/victory-core/victory-util/transitions.test.js","skipped":false,"dir":"test"},{"name":"returns a function that describes data entering","suites":["getTransitionPropsFactory"],"updatePoint":{"line":152,"column":53,"index":3586},"line":152,"code":"  it(\"returns a function that describes data entering\", () => {\n    const enteringState = {\n      childrenTransitions: [{\n        entering: {\n          1: true\n        },\n        exiting: false\n      }],\n      nodesWillExit: false,\n      nodesWillEnter: true,\n      nodesShouldEnter: false,\n      nodesShouldLoad: true,\n      nodesDoneLoad: true\n    };\n    const result = Transitions.getTransitionPropsFactory({}, enteringState, callback);\n    const child = makeChild([{\n      x: 1,\n      y: 1\n    }, {\n      x: 2,\n      y: 3\n    }]);\n    const calledResult = result(child);\n    expect(result).toBeInstanceOf(Function);\n    expect(calledResult).toBeInstanceOf(Object);\n    expect(calledResult).toBeInstanceOf(Object);\n    expect(Object.keys(calledResult)).toEqual(expect.arrayContaining([\"animate\", \"data\"]));\n    expect(calledResult.data).toEqual([{\n      x: 1,\n      y: 1\n    }, {\n      x: 2,\n      y: 0\n    }]);\n  });","file":"jest/victory-core/victory-util/transitions.test.js","skipped":false,"dir":"test"},{"name":"calculates a domain from props","suites":["helpers/wrapper","getDomain"],"updatePoint":{"line":21,"column":38,"index":706},"line":21,"code":"    it(\"calculates a domain from props\", () => {\n      const props = {\n        domain: {\n          x: [1, 2],\n          y: [2, 3]\n        }\n      };\n      const domainResultX = Wrapper.getDomain(props, \"x\", childComponents);\n      expect(domainResultX).toEqual([1, 2]);\n    });","file":"jest/victory-core/victory-util/wrapper.test.js","skipped":false,"dir":"test"},{"name":"calculates a domain from child components","suites":["helpers/wrapper","getDomain"],"updatePoint":{"line":31,"column":49,"index":995},"line":31,"code":"    it(\"calculates a domain from child components\", () => {\n      const props = {\n        children: childComponents\n      };\n      const domainResultX = Wrapper.getDomain(props, \"x\", childComponents);\n      expect(domainResultX).toEqual(victoryLine.props.domain);\n    });","file":"jest/victory-core/victory-util/wrapper.test.js","skipped":false,"dir":"test"},{"name":"returns an array of strings from a data prop","suites":["helpers/wrapper","getStringsFromData"],"updatePoint":{"line":40,"column":52,"index":1317},"line":40,"code":"    it(\"returns an array of strings from a data prop\", () => {\n      const props = {\n        data: [{\n          x: \"one\",\n          y: 1\n        }, {\n          x: \"red\",\n          y: 2\n        }, {\n          x: \"cat\",\n          y: 3\n        }]\n      };\n      const childComponents = [getVictoryLine(props)];\n      const dataStrings = Wrapper.getStringsFromData(childComponents).x;\n      expect(dataStrings).toEqual([\"one\", \"red\", \"cat\"]);\n    });","file":"jest/victory-core/victory-util/wrapper.test.js","skipped":false,"dir":"test"},{"name":"returns an array of strings from array-type data","suites":["helpers/wrapper","getStringsFromData"],"updatePoint":{"line":57,"column":56,"index":1768},"line":57,"code":"    it(\"returns an array of strings from array-type data\", () => {\n      const props = {\n        data: [[\"one\", 1], [\"red\", 2], [\"cat\", 3]],\n        x: 0,\n        y: 1\n      };\n      const childComponents = [getVictoryLine(props)];\n      const dataStrings = Wrapper.getStringsFromData(childComponents).x;\n      expect(dataStrings).toEqual([\"one\", \"red\", \"cat\"]);\n    });","file":"jest/victory-core/victory-util/wrapper.test.js","skipped":false,"dir":"test"},{"name":"only returns strings, if data is mixed","suites":["helpers/wrapper","getStringsFromData"],"updatePoint":{"line":67,"column":46,"index":2129},"line":67,"code":"    it(\"only returns strings, if data is mixed\", () => {\n      const props = {\n        data: [{\n          x: 1,\n          y: 1\n        }, {\n          x: \"three\",\n          y: 3\n        }]\n      };\n      const childComponents = [getVictoryLine(props)];\n      expect(Wrapper.getStringsFromData(childComponents).x).toEqual([\"three\"]);\n    });","file":"jest/victory-core/victory-util/wrapper.test.js","skipped":false,"dir":"test"},{"name":"returns an empty array when no strings are present","suites":["helpers/wrapper","getStringsFromData"],"updatePoint":{"line":80,"column":58,"index":2481},"line":80,"code":"    it(\"returns an empty array when no strings are present\", () => {\n      const props = {\n        data: [{\n          x: 1,\n          y: 1\n        }, {\n          x: 3,\n          y: 3\n        }]\n      };\n      const childComponents = [getVictoryLine(props)];\n      expect(Wrapper.getStringsFromData(childComponents).x).toEqual([]);\n    });","file":"jest/victory-core/victory-util/wrapper.test.js","skipped":false,"dir":"test"},{"name":"returns an empty array when no children are given","suites":["helpers/wrapper","getStringsFromData"],"updatePoint":{"line":93,"column":57,"index":2819},"line":93,"code":"    it(\"returns an empty array when no children are given\", () => {\n      expect(Wrapper.getStringsFromData([])).toEqual({\n        x: [],\n        y: []\n      });\n    });","file":"jest/victory-core/victory-util/wrapper.test.js","skipped":false,"dir":"test"},{"name":"should render eight lines","suites":["victory-primitives/error-bar"],"updatePoint":{"line":25,"column":31,"index":721},"line":25,"code":"  it(\"should render eight lines\", () => {\n    const {\n      container\n    } = render( /*#__PURE__*/React.createElement(ErrorBar, baseProps), {\n      wrapper: \"svg\"\n    });\n    const lines = container.querySelectorAll(\"line\");\n    const expectedCoordinates = [// Right Border (positiveErrorX, positiveErrorX, y - borderWidth, y + borderWidth)\n    {\n      x1: 1,\n      x2: 1,\n      y1: -15,\n      y2: 25\n    }, // Left Border(negativeErrorX, negativeErrorX, y - borderWidth, y + borderWidth)\n    {\n      x1: 3,\n      x2: 3,\n      y1: -15,\n      y2: 25\n    }, // Bottom Border(x - borderWidth, x + borderWidth, negativeErrorY, negativeErrorY)\n    {\n      x1: -16,\n      x2: 24,\n      y1: 0.2,\n      y2: 0.2\n    }, // Top Border(x - borderWidth, x + borderWidth, positiveErrorY, positiveErrorY)\n    {\n      x1: -16,\n      x2: 24,\n      y1: 2,\n      y2: 2\n    }, // Right Cross(x, positiveErrorX, y, y)\n    {\n      x1: 4,\n      x2: 1,\n      y1: 5,\n      y2: 5\n    }, // Left Cross(x, negativeErrorX, y, y)\n    {\n      x1: 4,\n      x2: 3,\n      y1: 5,\n      y2: 5\n    }, // Bottom Cross(x, x, y, negativeErrorY)\n    {\n      x1: 4,\n      x2: 4,\n      y1: 5,\n      y2: 0.2\n    }, // Bottom Cross(x, x, y, positiveErrorY)\n    {\n      x1: 4,\n      x2: 4,\n      y1: 5,\n      y2: 2\n    }];\n    expect(lines).toHaveLength(8);\n    lines.forEach((line, i) => {\n      compareLineCoordinates(line, expectedCoordinates[i]);\n    });\n  });","file":"jest/victory-errorbars/error-bar.test.js","skipped":false,"dir":"test"},{"name":"should render four lines when only x error type is supplied","suites":["victory-primitives/error-bar"],"updatePoint":{"line":86,"column":65,"index":2175},"line":86,"code":"  it(\"should render four lines when only x error type is supplied\", () => {\n    const xErrorProps = omit(baseProps, [\"errorY\"]);\n    const {\n      container\n    } = render( /*#__PURE__*/React.createElement(ErrorBar, xErrorProps), {\n      wrapper: \"svg\"\n    });\n    const lines = container.querySelectorAll(\"line\");\n    const expectedCoordinates = [// Right Border (positiveErrorX, positiveErrorX, y - borderWidth, y + borderWidth)\n    {\n      x1: 1,\n      x2: 1,\n      y1: -15,\n      y2: 25\n    }, // Left Border(negativeErrorX, negativeErrorX, y - borderWidth, y + borderWidth)\n    {\n      x1: 3,\n      x2: 3,\n      y1: -15,\n      y2: 25\n    }, // Right Cross(x, positiveErrorX, y, y)\n    {\n      x1: 4,\n      x2: 1,\n      y1: 5,\n      y2: 5\n    }, // Left Cross(x, negativeErrorX, y, y)\n    {\n      x1: 4,\n      x2: 3,\n      y1: 5,\n      y2: 5\n    }];\n    expect(lines.length).toEqual(4);\n    lines.forEach((line, i) => {\n      compareLineCoordinates(line, expectedCoordinates[i]);\n    });\n  });","file":"jest/victory-errorbars/error-bar.test.js","skipped":false,"dir":"test"},{"name":"should render four lines when only y error type is supplied","suites":["victory-primitives/error-bar"],"updatePoint":{"line":124,"column":65,"index":3173},"line":124,"code":"  it(\"should render four lines when only y error type is supplied\", () => {\n    const yErrorProps = omit(baseProps, [\"errorX\"]);\n    const {\n      container\n    } = render( /*#__PURE__*/React.createElement(ErrorBar, yErrorProps), {\n      wrapper: \"svg\"\n    });\n    const lines = container.querySelectorAll(\"line\");\n    const expectedCoordinates = [// Bottom Border(x - borderWidth, x + borderWidth, negativeErrorY, negativeErrorY)\n    {\n      x1: -16,\n      x2: 24,\n      y1: 0.2,\n      y2: 0.2\n    }, // Top Border(x - borderWidth, x + borderWidth, positiveErrorY, positiveErrorY)\n    {\n      x1: -16,\n      x2: 24,\n      y1: 2,\n      y2: 2\n    }, // Bottom Cross(x, x, y, negativeErrorY)\n    {\n      x1: 4,\n      x2: 4,\n      y1: 5,\n      y2: 0.2\n    }, // Bottom Cross(x, x, y, positiveErrorY)\n    {\n      x1: 4,\n      x2: 4,\n      y1: 5,\n      y2: 2\n    }];\n    expect(lines.length).toEqual(4);\n    lines.forEach((line, i) => {\n      compareLineCoordinates(line, expectedCoordinates[i]);\n    });\n  });","file":"jest/victory-errorbars/error-bar.test.js","skipped":false,"dir":"test"},{"name":"accepts user props","suites":["components/victory-errorbar","default component rendering"],"updatePoint":{"line":25,"column":26,"index":1195},"line":25,"code":"    it(\"accepts user props\", () => {\n      render( /*#__PURE__*/React.createElement(VictoryErrorBar, {\n        \"data-testid\": \"victory-errorbar\",\n        \"aria-label\": \"Chart\"\n      }));\n      expect(screen.getByTestId(\"victory-errorbar\")).toBeDefined();\n      expect(screen.getByLabelText(\"Chart\")).toBeDefined();\n    });","file":"jest/victory-errorbars/victory-errorbars.test.js","skipped":false,"dir":"test"},{"name":"renders an svg with the correct width and height","suites":["components/victory-errorbar","default component rendering"],"updatePoint":{"line":33,"column":56,"index":1548},"line":33,"code":"    it(\"renders an svg with the correct width and height\", () => {\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryErrorBar, null));\n      const svg = container.querySelector(\"svg\");\n      expect(svg.style.width).toEqual(\"100%\");\n      expect(svg.style.height).toEqual(\"100%\");\n    });","file":"jest/victory-errorbars/victory-errorbars.test.js","skipped":false,"dir":"test"},{"name":"renders an svg with the correct viewBox","suites":["components/victory-errorbar","default component rendering"],"updatePoint":{"line":41,"column":47,"index":1867},"line":41,"code":"    it(\"renders an svg with the correct viewBox\", () => {\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryErrorBar, null));\n      const svg = container.querySelector(\"svg\");\n      const viewBoxValue = `0 0 ${450} ${300}`;\n      expect(svg.getAttribute(\"viewBox\")).toEqual(viewBoxValue);\n    });","file":"jest/victory-errorbars/victory-errorbars.test.js","skipped":false,"dir":"test"},{"name":"renders 4 errors","suites":["components/victory-errorbar","default component rendering"],"updatePoint":{"line":49,"column":24,"index":2181},"line":49,"code":"    it(\"renders 4 errors\", () => {\n      render( /*#__PURE__*/React.createElement(VictoryErrorBar, defaultProps));\n      const errorbars = screen.getAllByTestId(\"error-bar\");\n      expect(errorbars.length).toEqual(4);\n    });","file":"jest/victory-errorbars/victory-errorbars.test.js","skipped":false,"dir":"test"},{"name":"does not render data with null x or y values","suites":["components/victory-errorbar","default component rendering"],"updatePoint":{"line":55,"column":50,"index":2439},"line":55,"code":"  it(\"does not render data with null x or y values\", () => {\n    const data = [{\n      x: 15,\n      y: 35,\n      errorX: 1,\n      errorY: 3\n    }, {\n      x: null,\n      y: 42,\n      errorX: 3,\n      errorY: 2\n    }, {\n      x: 25,\n      y: null,\n      errorX: 5,\n      errorY: 5\n    }];\n    render( /*#__PURE__*/React.createElement(VictoryErrorBar, _extends({\n      data: data\n    }, defaultProps)));\n    expect(screen.getAllByTestId(\"error-bar\")).toHaveLength(1);\n  });","file":"jest/victory-errorbars/victory-errorbars.test.js","skipped":false,"dir":"test"},{"name":"renders injected errors for {x, y}","suites":["components/victory-errorbar","symmetric error, rendering data "],"updatePoint":{"line":90,"column":44,"index":3265},"line":90,"code":"      it(\"renders injected errors for {x, y}\", () => {\n        const data = createData(range(10).map(i => ({\n          x: i,\n          y: i,\n          errorX: 0.1,\n          errorY: 0.2\n        })));\n        render( /*#__PURE__*/React.createElement(VictoryErrorBar, _extends({\n          data: data\n        }, defaultProps)));\n        const errors = screen.getAllByTestId(\"error-bar\");\n        expect(errors).toHaveLength(10);\n      });","file":"jest/victory-errorbars/victory-errorbars.test.js","skipped":false,"dir":"test"},{"name":"renders errors for {x, y}","suites":["components/victory-errorbar","symmetric error, rendering data "],"updatePoint":{"line":103,"column":35,"index":3692},"line":103,"code":"      it(\"renders errors for {x, y}\", () => {\n        const data = createData(range(10).map(i => ({\n          x: i,\n          y: i,\n          errorX: 0.1,\n          errorY: 0.2\n        })));\n        render( /*#__PURE__*/React.createElement(VictoryErrorBar, _extends({\n          data: data\n        }, defaultProps)));\n        const errors = screen.getAllByTestId(\"error-bar\");\n        expect(errors.length).toEqual(10);\n      });","file":"jest/victory-errorbars/victory-errorbars.test.js","skipped":false,"dir":"test"},{"name":"sorts data by sortKey getAttribute","suites":["components/victory-errorbar","symmetric error, rendering data "],"updatePoint":{"line":116,"column":44,"index":4130},"line":116,"code":"      it(\"sorts data by sortKey getAttribute\", () => {\n        const data = createData(range(5).map(i => ({\n          x: i,\n          y: i,\n          errorX: 0.1,\n          errorY: 0.2\n        })).reverse());\n        render( /*#__PURE__*/React.createElement(VictoryErrorBar, _extends({\n          data: data,\n          sortKey: \"x\"\n        }, defaultProps)));\n        const xValues = screen.getAllByTestId(\"error-bar\").map(node => parseInt(node.getAttribute(\"data-x\")));\n        expect(xValues).toEqual([0, 1, 2, 3, 4]);\n      });","file":"jest/victory-errorbars/victory-errorbars.test.js","skipped":false,"dir":"test"},{"name":"reversed sorted data with the sortOrder getAttribute","suites":["components/victory-errorbar","symmetric error, rendering data "],"updatePoint":{"line":130,"column":62,"index":4678},"line":130,"code":"      it(\"reversed sorted data with the sortOrder getAttribute\", () => {\n        const data = createData(range(5).map(i => ({\n          x: i,\n          y: i,\n          errorX: 0.1,\n          errorY: 0.2\n        })).reverse());\n        render( /*#__PURE__*/React.createElement(VictoryErrorBar, _extends({\n          data: data,\n          sortKey: \"x\",\n          sortOrder: \"descending\"\n        }, defaultProps)));\n        const yValues = screen.getAllByTestId(\"error-bar\").map(node => parseInt(node.getAttribute(\"data-y\")));\n        expect(yValues).toEqual([4, 3, 2, 1, 0]);\n      });","file":"jest/victory-errorbars/victory-errorbars.test.js","skipped":false,"dir":"test"},{"name":"renders errors with error bars, check total svg lines","suites":["components/victory-errorbar","symmetric error, rendering data "],"updatePoint":{"line":145,"column":63,"index":5262},"line":145,"code":"      it(\"renders errors with error bars, check total svg lines\", () => {\n        const svgDimensions = {\n          width: 350,\n          height: 200,\n          padding: 75\n        };\n        const {\n          container\n        } = render( /*#__PURE__*/React.createElement(VictoryErrorBar, _extends({\n          data: createData([{\n            x: 0,\n            y: 0,\n            errorX: 0.1,\n            errorY: 0.2\n          }, {\n            x: 2,\n            y: 3,\n            errorX: 0.1,\n            errorY: 0.2\n          }, {\n            x: 5,\n            y: 5,\n            errorX: 0.1,\n            errorY: 0.2\n          }])\n        }, svgDimensions)));\n        expect(container.querySelectorAll(\"line\")).toHaveLength(24);\n      });","file":"jest/victory-errorbars/victory-errorbars.test.js","skipped":false,"dir":"test"},{"name":"should check right border of error bars positions","suites":["components/victory-errorbar","symmetric error, rendering data "],"updatePoint":{"line":173,"column":59,"index":5996},"line":173,"code":"      it(\"should check right border of error bars positions\", () => {\n        const svgDimensions = {\n          width: 350,\n          height: 200,\n          padding: 75\n        };\n        const borderWidth = 10;\n        const data = [{\n          x: 0,\n          y: 0,\n          errorX: 0.1,\n          errorY: 0.2\n        }, {\n          x: 2,\n          y: 3,\n          errorX: 0.1,\n          errorY: 0.2\n        }, {\n          x: 5,\n          y: 5,\n          errorX: 0.1,\n          errorY: 0.2\n        }];\n        render( /*#__PURE__*/React.createElement(VictoryErrorBar, _extends({\n          data: createData(data),\n          borderWidth: borderWidth,\n          name: \"error\"\n        }, svgDimensions, defaultProps)));\n        const xScale = d3Scale.scaleLinear().domain([-0.1, 5.1]).range([svgDimensions.padding, svgDimensions.width - svgDimensions.padding]);\n        const yScale = d3Scale.scaleLinear().domain([-0.2, 5.2]).range([svgDimensions.height - svgDimensions.padding, svgDimensions.padding]);\n        const bars = screen.getAllByTestId(\"error-bar\");\n        bars.forEach((node, i) => {\n          const errorX = xScale(data[i].x + data[i].errorX);\n          const xScaleMax = xScale.range()[1];\n          const positiveErrorX = errorX >= xScaleMax ? xScaleMax : errorX;\n          const [x1, x2, y1, y2] = getCoordinatesForLineWithType(node, \"border-right\");\n          expect(x1).toEqual(positiveErrorX);\n          expect(x2).toEqual(positiveErrorX);\n          expect(y1).toEqual(yScale(data[i].y) - borderWidth);\n          expect(y2).toEqual(yScale(data[i].y) + borderWidth);\n        });\n      });","file":"jest/victory-errorbars/victory-errorbars.test.js","skipped":false,"dir":"test"},{"name":"should check left border of error bars positions","suites":["components/victory-errorbar","symmetric error, rendering data "],"updatePoint":{"line":215,"column":58,"index":7603},"line":215,"code":"      it(\"should check left border of error bars positions\", () => {\n        const svgDimensions = {\n          width: 350,\n          height: 200,\n          padding: 75\n        };\n        const borderWidth = 10;\n        const data = [{\n          x: 0,\n          y: 0,\n          errorX: 0.1,\n          errorY: 0.2\n        }, {\n          x: 2,\n          y: 3,\n          errorX: 0.1,\n          errorY: 0.2\n        }, {\n          x: 5,\n          y: 5,\n          errorX: 0.1,\n          errorY: 0.2\n        }];\n        render( /*#__PURE__*/React.createElement(VictoryErrorBar, _extends({\n          data: createData(data),\n          borderWidth: borderWidth\n        }, svgDimensions, defaultProps)));\n        const xScale = d3Scale.scaleLinear().domain([-0.1, 5.1]).range([svgDimensions.padding, svgDimensions.width - svgDimensions.padding]);\n        const yScale = d3Scale.scaleLinear().domain([-0.2, 5.2]).range([svgDimensions.height - svgDimensions.padding, svgDimensions.padding]);\n        const bars = screen.getAllByTestId(\"error-bar\");\n        bars.forEach((node, i) => {\n          const errorX = xScale(data[i].x - data[i].errorX);\n          const xScaleMin = xScale.range()[0];\n          const negativeErrorX = errorX <= xScaleMin ? xScaleMin : errorX;\n          const [x1, x2, y1, y2] = getCoordinatesForLineWithType(node, \"border-left\");\n          expect(x1).toEqual(negativeErrorX);\n          expect(x2).toEqual(negativeErrorX);\n          expect(y1).toEqual(yScale(data[i].y) - borderWidth);\n          expect(y2).toEqual(yScale(data[i].y) + borderWidth);\n        });\n      });","file":"jest/victory-errorbars/victory-errorbars.test.js","skipped":false,"dir":"test"},{"name":"should check bottom border of error bars positions","suites":["components/victory-errorbar","symmetric error, rendering data "],"updatePoint":{"line":256,"column":60,"index":9186},"line":256,"code":"      it(\"should check bottom border of error bars positions\", () => {\n        const svgDimensions = {\n          width: 350,\n          height: 200,\n          padding: 75\n        };\n        const borderWidth = 10;\n        const data = [{\n          x: 0,\n          y: 0,\n          errorX: 0.1,\n          errorY: 0.2\n        }, {\n          x: 2,\n          y: 3,\n          errorX: 0.1,\n          errorY: 0.2\n        }, {\n          x: 5,\n          y: 5,\n          errorX: 0.1,\n          errorY: 0.2\n        }];\n        render( /*#__PURE__*/React.createElement(VictoryErrorBar, _extends({\n          data: createData(data),\n          borderWidth: borderWidth\n        }, svgDimensions, defaultProps)));\n        const xScale = d3Scale.scaleLinear().domain([-0.1, 5.1]).range([svgDimensions.padding, svgDimensions.width - svgDimensions.padding]);\n        const yScale = d3Scale.scaleLinear().domain([-0.2, 5.2]).range([svgDimensions.height - svgDimensions.padding, svgDimensions.padding]);\n        const bars = screen.getAllByTestId(\"error-bar\");\n        bars.forEach((node, i) => {\n          const errorY = yScale(data[i].y + data[i].errorY);\n          const yScaleMin = yScale.range()[1];\n          const negativeErrorY = errorY <= yScaleMin ? yScaleMin : errorY;\n          const [x1, x2, y1, y2] = getCoordinatesForLineWithType(node, \"border-bottom\");\n          expect(x1).toEqual(xScale(data[i].x) - borderWidth);\n          expect(x2).toEqual(xScale(data[i].x) + borderWidth);\n          expect(y1).toEqual(negativeErrorY);\n          expect(y2).toEqual(negativeErrorY);\n        });\n      });","file":"jest/victory-errorbars/victory-errorbars.test.js","skipped":false,"dir":"test"},{"name":"should check top border of error bars positions","suites":["components/victory-errorbar","symmetric error, rendering data "],"updatePoint":{"line":297,"column":57,"index":10768},"line":297,"code":"      it(\"should check top border of error bars positions\", () => {\n        const svgDimensions = {\n          width: 350,\n          height: 200,\n          padding: 75\n        };\n        const borderWidth = 10;\n        const data = [{\n          x: 0,\n          y: 0,\n          errorX: 0.1,\n          errorY: 0.2\n        }, {\n          x: 2,\n          y: 3,\n          errorX: 0.1,\n          errorY: 0.2\n        }, {\n          x: 5,\n          y: 5,\n          errorX: 0.1,\n          errorY: 0.2\n        }];\n        render( /*#__PURE__*/React.createElement(VictoryErrorBar, _extends({\n          data: createData(data),\n          borderWidth: borderWidth\n        }, svgDimensions, defaultProps)));\n        const xScale = d3Scale.scaleLinear().domain([-0.1, 5.1]).range([svgDimensions.padding, svgDimensions.width - svgDimensions.padding]);\n        const yScale = d3Scale.scaleLinear().domain([-0.2, 5.2]).range([svgDimensions.height - svgDimensions.padding, svgDimensions.padding]);\n        const bars = screen.getAllByTestId(\"error-bar\");\n        expect(bars).toHaveLength(3);\n        bars.forEach((node, i) => {\n          const errorY = yScale(data[i].y - data[i].errorY);\n          const yScaleMax = yScale.range()[0];\n          const positiveErrorY = errorY >= yScaleMax ? yScaleMax : errorY;\n          const [x1, x2, y1, y2] = getCoordinatesForLineWithType(node, \"border-top\");\n          expect(x1).toEqual(xScale(data[i].x) - borderWidth);\n          expect(x2).toEqual(xScale(data[i].x) + borderWidth);\n          expect(y1).toEqual(positiveErrorY);\n          expect(y2).toEqual(positiveErrorY);\n        });\n      });","file":"jest/victory-errorbars/victory-errorbars.test.js","skipped":false,"dir":"test"},{"name":"should check top cross line of error bars positions","suites":["components/victory-errorbar","symmetric error, rendering data "],"updatePoint":{"line":339,"column":61,"index":12389},"line":339,"code":"      it(\"should check top cross line of error bars positions\", () => {\n        const svgDimensions = {\n          width: 350,\n          height: 200,\n          padding: 75\n        };\n        const data = [{\n          x: 0,\n          y: 0,\n          errorX: 0.1,\n          errorY: 0.2\n        }, {\n          x: 2,\n          y: 3,\n          errorX: 0.1,\n          errorY: 0.2\n        }, {\n          x: 5,\n          y: 5,\n          errorX: 0.1,\n          errorY: 0.2\n        }];\n        render( /*#__PURE__*/React.createElement(VictoryErrorBar, _extends({\n          data: createData(data)\n        }, svgDimensions, defaultProps)));\n        const xScale = d3Scale.scaleLinear().domain([-0.1, 5.1]).range([svgDimensions.padding, svgDimensions.width - svgDimensions.padding]);\n        const yScale = d3Scale.scaleLinear().domain([-0.2, 5.2]).range([svgDimensions.height - svgDimensions.padding, svgDimensions.padding]);\n        const bars = screen.getAllByTestId(\"error-bar\");\n        expect(bars).toHaveLength(3);\n        bars.forEach((node, i) => {\n          const errorY = yScale(data[i].y - data[i].errorY);\n          const yScaleMax = yScale.range()[0];\n          const positiveErrorY = errorY >= yScaleMax ? yScaleMax : errorY;\n          const [x1, x2, y1, y2] = getCoordinatesForLineWithType(node, \"cross-top\");\n          expect(x1).toEqual(xScale(data[i].x));\n          expect(x2).toEqual(xScale(data[i].x));\n          expect(y1).toEqual(yScale(data[i].y));\n          expect(y2).toEqual(positiveErrorY);\n        });\n      });","file":"jest/victory-errorbars/victory-errorbars.test.js","skipped":false,"dir":"test"},{"name":"should check bottom cross line of error bars positions","suites":["components/victory-errorbar","symmetric error, rendering data "],"updatePoint":{"line":379,"column":64,"index":13919},"line":379,"code":"      it(\"should check bottom cross line of error bars positions\", () => {\n        const svgDimensions = {\n          width: 350,\n          height: 200,\n          padding: 75\n        };\n        const data = [{\n          x: 0,\n          y: 0,\n          errorX: 0.1,\n          errorY: 0.2\n        }, {\n          x: 2,\n          y: 3,\n          errorX: 0.1,\n          errorY: 0.2\n        }, {\n          x: 5,\n          y: 5,\n          errorX: 0.1,\n          errorY: 0.2\n        }];\n        render( /*#__PURE__*/React.createElement(VictoryErrorBar, _extends({\n          data: createData(data)\n        }, svgDimensions, defaultProps)));\n        const xScale = d3Scale.scaleLinear().domain([-0.1, 5.1]).range([svgDimensions.padding, svgDimensions.width - svgDimensions.padding]);\n        const yScale = d3Scale.scaleLinear().domain([-0.2, 5.2]).range([svgDimensions.height - svgDimensions.padding, svgDimensions.padding]);\n        const bars = screen.getAllByTestId(\"error-bar\");\n        expect(bars).toHaveLength(3);\n        bars.forEach((node, i) => {\n          const errorY = yScale(data[i].y + data[i].errorY);\n          const yScaleMin = yScale.range()[1];\n          const negativeErrorY = errorY <= yScaleMin ? yScaleMin : errorY;\n          const [x1, x2, y1, y2] = getCoordinatesForLineWithType(node, \"cross-bottom\");\n          expect(x1).toEqual(xScale(data[i].x));\n          expect(x2).toEqual(xScale(data[i].x));\n          expect(y1).toEqual(yScale(data[i].y));\n          expect(y2).toEqual(negativeErrorY);\n        });\n      });","file":"jest/victory-errorbars/victory-errorbars.test.js","skipped":false,"dir":"test"},{"name":"should check left cross line of error bars positions","suites":["components/victory-errorbar","symmetric error, rendering data "],"updatePoint":{"line":419,"column":62,"index":15450},"line":419,"code":"      it(\"should check left cross line of error bars positions\", () => {\n        const svgDimensions = {\n          width: 350,\n          height: 200,\n          padding: 75\n        };\n        const data = [{\n          x: 0,\n          y: 0,\n          errorX: 0.1,\n          errorY: 0.2\n        }, {\n          x: 2,\n          y: 3,\n          errorX: 0.1,\n          errorY: 0.2\n        }, {\n          x: 5,\n          y: 5,\n          errorX: 0.1,\n          errorY: 0.2\n        }];\n        render( /*#__PURE__*/React.createElement(VictoryErrorBar, _extends({\n          data: createData(data)\n        }, svgDimensions, defaultProps)));\n        const xScale = d3Scale.scaleLinear().domain([-0.1, 5.1]).range([svgDimensions.padding, svgDimensions.width - svgDimensions.padding]);\n        const yScale = d3Scale.scaleLinear().domain([-0.2, 5.2]).range([svgDimensions.height - svgDimensions.padding, svgDimensions.padding]);\n        const bars = screen.getAllByTestId(\"error-bar\");\n        expect(bars).toHaveLength(3);\n        bars.forEach((node, i) => {\n          const errorX = xScale(data[i].x - data[i].errorX);\n          const xScaleMin = xScale.range()[0];\n          const negativeErrorX = errorX <= xScaleMin ? xScaleMin : errorX;\n          const [x1, x2, y1, y2] = getCoordinatesForLineWithType(node, \"cross-left\");\n          expect(x1).toEqual(xScale(data[i].x));\n          expect(x2).toEqual(negativeErrorX);\n          expect(y1).toEqual(yScale(data[i].y));\n          expect(y2).toEqual(yScale(data[i].y));\n        });\n      });","file":"jest/victory-errorbars/victory-errorbars.test.js","skipped":false,"dir":"test"},{"name":"should check right cross line of error bars positions","suites":["components/victory-errorbar","symmetric error, rendering data "],"updatePoint":{"line":459,"column":63,"index":16980},"line":459,"code":"      it(\"should check right cross line of error bars positions\", () => {\n        const svgDimensions = {\n          width: 350,\n          height: 200,\n          padding: 75\n        };\n        const data = [{\n          x: 0,\n          y: 0,\n          errorX: 0.1,\n          errorY: 0.2\n        }, {\n          x: 2,\n          y: 3,\n          errorX: 0.1,\n          errorY: 0.2\n        }, {\n          x: 5,\n          y: 5,\n          errorX: 0.1,\n          errorY: 0.2\n        }];\n        render( /*#__PURE__*/React.createElement(VictoryErrorBar, _extends({\n          data: createData(data)\n        }, svgDimensions, defaultProps)));\n        const xScale = d3Scale.scaleLinear().domain([-0.1, 5.1]).range([svgDimensions.padding, svgDimensions.width - svgDimensions.padding]);\n        const yScale = d3Scale.scaleLinear().domain([-0.2, 5.2]).range([svgDimensions.height - svgDimensions.padding, svgDimensions.padding]);\n        const bars = screen.getAllByTestId(\"error-bar\");\n        expect(bars).toHaveLength(3);\n        bars.forEach((node, i) => {\n          const errorX = xScale(data[i].errorX + data[i].x);\n          const xScaleMax = xScale.range()[1];\n          const positiveErrorX = errorX >= xScaleMax ? xScaleMax : errorX;\n          const [x1, x2, y1, y2] = getCoordinatesForLineWithType(node, \"cross-right\");\n          expect(x1).toEqual(xScale(data[i].x));\n          expect(x2).toEqual(positiveErrorX);\n          expect(y1).toEqual(yScale(data[i].y));\n          expect(y2).toEqual(yScale(data[i].y));\n        });\n      });","file":"jest/victory-errorbars/victory-errorbars.test.js","skipped":false,"dir":"test"},{"name":"renders injected errors for {x, y}","suites":["components/victory-errorbar","asymmetric error, rendering data "],"updatePoint":{"line":501,"column":44,"index":18570},"line":501,"code":"      it(\"renders injected errors for {x, y}\", () => {\n        const data = createData(range(10).map(i => ({\n          x: i,\n          y: i,\n          errorX: [0.1, 0.2],\n          errorY: [0.2, 0.5]\n        })));\n        render( /*#__PURE__*/React.createElement(VictoryErrorBar, _extends({\n          data: data\n        }, defaultProps)));\n        const errors = screen.getAllByTestId(\"error-bar\");\n        expect(errors).toHaveLength(10);\n      });","file":"jest/victory-errorbars/victory-errorbars.test.js","skipped":false,"dir":"test"},{"name":"renders errors for {x, y}","suites":["components/victory-errorbar","asymmetric error, rendering data "],"updatePoint":{"line":514,"column":35,"index":19011},"line":514,"code":"      it(\"renders errors for {x, y}\", () => {\n        const data = createData(range(10).map(i => ({\n          x: i,\n          y: i,\n          errorX: [0.1, 0.2],\n          errorY: [0.2, 1]\n        })));\n        render( /*#__PURE__*/React.createElement(VictoryErrorBar, _extends({\n          data: data\n        }, defaultProps)));\n        const errors = screen.getAllByTestId(\"error-bar\");\n        expect(errors).toHaveLength(10);\n      });","file":"jest/victory-errorbars/victory-errorbars.test.js","skipped":false,"dir":"test"},{"name":"renders errors with error bars, check total svg lines","suites":["components/victory-errorbar","asymmetric error, rendering data "],"updatePoint":{"line":527,"column":63,"index":19478},"line":527,"code":"      it(\"renders errors with error bars, check total svg lines\", () => {\n        const svgDimensions = {\n          width: 350,\n          height: 200,\n          padding: 75\n        };\n        const {\n          container\n        } = render( /*#__PURE__*/React.createElement(VictoryErrorBar, _extends({\n          data: createData([{\n            x: 0,\n            y: 0,\n            errorX: [0.1, 0.5],\n            errorY: [0.2, 0.3]\n          }, {\n            x: 2,\n            y: 3,\n            errorX: [0.1, 0.5],\n            errorY: [0.2, 0.4]\n          }, {\n            x: 5,\n            y: 5,\n            errorX: [0.1, 0.5],\n            errorY: [0.2, 0.1]\n          }])\n        }, svgDimensions)));\n        expect(container.querySelectorAll(\"line\")).toHaveLength(24);\n      });","file":"jest/victory-errorbars/victory-errorbars.test.js","skipped":false,"dir":"test"},{"name":"should check right border of error bars positions","suites":["components/victory-errorbar","asymmetric error, rendering data "],"updatePoint":{"line":555,"column":59,"index":20254},"line":555,"code":"      it(\"should check right border of error bars positions\", () => {\n        const svgDimensions = {\n          width: 350,\n          height: 200,\n          padding: 75\n        };\n        const borderWidth = 10;\n        const data = [{\n          x: 0,\n          y: 0,\n          errorX: [0.1, 0.3],\n          errorY: [0.2, 0.5]\n        }, {\n          x: 2,\n          y: 3,\n          errorX: [0.1, 0.2],\n          errorY: [0.2, 0.3]\n        }, {\n          x: 5,\n          y: 5,\n          errorX: [0.1, 0.6],\n          errorY: [0.2, 0.1]\n        }];\n        render( /*#__PURE__*/React.createElement(VictoryErrorBar, _extends({\n          data: createData(data),\n          borderWidth: borderWidth\n        }, svgDimensions, defaultProps)));\n        const xScale = d3Scale.scaleLinear().domain([-0.3, 5.1]).range([svgDimensions.padding, svgDimensions.width - svgDimensions.padding]);\n        const yScale = d3Scale.scaleLinear().domain([-0.5, 5.2]).range([svgDimensions.height - svgDimensions.padding, svgDimensions.padding]);\n        const bars = screen.getAllByTestId(\"error-bar\");\n        expect(bars).toHaveLength(3);\n        bars.forEach((node, i) => {\n          const errorX = xScale(data[i].x + data[i].errorX[0]);\n          const xScaleMax = xScale.range()[1];\n          const positiveErrorX = errorX >= xScaleMax ? xScaleMax : errorX;\n          const [x1, x2, y1, y2] = getCoordinatesForLineWithType(node, \"border-right\");\n          expect(x1).toEqual(positiveErrorX);\n          expect(x2).toEqual(positiveErrorX);\n          expect(y1).toEqual(yScale(data[i].y) - borderWidth);\n          expect(y2).toEqual(yScale(data[i].y) + borderWidth);\n        });\n      });","file":"jest/victory-errorbars/victory-errorbars.test.js","skipped":false,"dir":"test"},{"name":"should check left border of error bars positions","suites":["components/victory-errorbar","asymmetric error, rendering data "],"updatePoint":{"line":597,"column":58,"index":21919},"line":597,"code":"      it(\"should check left border of error bars positions\", () => {\n        const svgDimensions = {\n          width: 350,\n          height: 200,\n          padding: 75\n        };\n        const borderWidth = 10;\n        const data = [{\n          x: 0,\n          y: 0,\n          errorX: [0.1, 0.3],\n          errorY: [0.2, 0.5]\n        }, {\n          x: 2,\n          y: 3,\n          errorX: [0.1, 0.2],\n          errorY: [0.2, 0.3]\n        }, {\n          x: 5,\n          y: 5,\n          errorX: [0.1, 0.6],\n          errorY: [0.2, 0.1]\n        }];\n        render( /*#__PURE__*/React.createElement(VictoryErrorBar, _extends({\n          data: createData(data),\n          borderWidth: borderWidth\n        }, svgDimensions, defaultProps)));\n        const xScale = d3Scale.scaleLinear().domain([-0.3, 5.1]).range([svgDimensions.padding, svgDimensions.width - svgDimensions.padding]);\n        const yScale = d3Scale.scaleLinear().domain([-0.5, 5.2]).range([svgDimensions.height - svgDimensions.padding, svgDimensions.padding]);\n        const bars = screen.getAllByTestId(\"error-bar\");\n        expect(bars).toHaveLength(3);\n        bars.forEach((node, i) => {\n          const errorX = xScale(data[i].x - data[i].errorX[1]);\n          const xScaleMin = xScale.range()[0];\n          const negativeErrorX = errorX <= xScaleMin ? xScaleMin : errorX;\n          const [x1, x2, y1, y2] = getCoordinatesForLineWithType(node, \"border-left\");\n          expect(x1).toEqual(negativeErrorX);\n          expect(x2).toEqual(negativeErrorX);\n          expect(y1).toEqual(yScale(data[i].y) - borderWidth);\n          expect(y2).toEqual(yScale(data[i].y) + borderWidth);\n        });\n      });","file":"jest/victory-errorbars/victory-errorbars.test.js","skipped":false,"dir":"test"},{"name":"should check bottom border of error bars positions","suites":["components/victory-errorbar","asymmetric error, rendering data "],"updatePoint":{"line":639,"column":60,"index":23585},"line":639,"code":"      it(\"should check bottom border of error bars positions\", () => {\n        const svgDimensions = {\n          width: 350,\n          height: 200,\n          padding: 75\n        };\n        const borderWidth = 10;\n        const data = [{\n          x: 0,\n          y: 0,\n          errorX: [0.1, 0.3],\n          errorY: [0.2, 0.5]\n        }, {\n          x: 2,\n          y: 3,\n          errorX: [0.1, 0.2],\n          errorY: [0.2, 0.3]\n        }, {\n          x: 5,\n          y: 5,\n          errorX: [0.1, 0.6],\n          errorY: [0.2, 0.1]\n        }];\n        render( /*#__PURE__*/React.createElement(VictoryErrorBar, _extends({\n          data: createData(data),\n          borderWidth: borderWidth\n        }, svgDimensions, defaultProps)));\n        const xScale = d3Scale.scaleLinear().domain([-0.3, 5.1]).range([svgDimensions.padding, svgDimensions.width - svgDimensions.padding]);\n        const yScale = d3Scale.scaleLinear().domain([-0.5, 5.2]).range([svgDimensions.height - svgDimensions.padding, svgDimensions.padding]);\n        const bars = screen.getAllByTestId(\"error-bar\");\n        expect(bars).toHaveLength(3);\n        bars.forEach((node, i) => {\n          const errorY = yScale(data[i].y + data[i].errorY[0]);\n          const yScaleMin = yScale.range()[1];\n          const negativeErrorY = errorY <= yScaleMin ? yScaleMin : errorY;\n          const [x1, x2, y1, y2] = getCoordinatesForLineWithType(node, \"border-bottom\");\n          expect(x1).toEqual(xScale(data[i].x) - borderWidth);\n          expect(x2).toEqual(xScale(data[i].x) + borderWidth);\n          expect(y1).toEqual(negativeErrorY);\n          expect(y2).toEqual(negativeErrorY);\n        });\n      });","file":"jest/victory-errorbars/victory-errorbars.test.js","skipped":false,"dir":"test"},{"name":"should check top border of error bars positions","suites":["components/victory-errorbar","asymmetric error, rendering data "],"updatePoint":{"line":681,"column":57,"index":25250},"line":681,"code":"      it(\"should check top border of error bars positions\", () => {\n        const svgDimensions = {\n          width: 350,\n          height: 200,\n          padding: 75\n        };\n        const borderWidth = 10;\n        const data = [{\n          x: 0,\n          y: 0,\n          errorX: [0.1, 0.3],\n          errorY: [0.2, 0.5]\n        }, {\n          x: 2,\n          y: 3,\n          errorX: [0.1, 0.2],\n          errorY: [0.2, 0.3]\n        }, {\n          x: 5,\n          y: 5,\n          errorX: [0.1, 0.6],\n          errorY: [0.2, 0.1]\n        }];\n        render( /*#__PURE__*/React.createElement(VictoryErrorBar, _extends({\n          data: createData(data),\n          borderWidth: borderWidth\n        }, svgDimensions, defaultProps)));\n        const xScale = d3Scale.scaleLinear().domain([-0.3, 5.1]).range([svgDimensions.padding, svgDimensions.width - svgDimensions.padding]);\n        const yScale = d3Scale.scaleLinear().domain([-0.5, 5.2]).range([svgDimensions.height - svgDimensions.padding, svgDimensions.padding]);\n        const bars = screen.getAllByTestId(\"error-bar\");\n        expect(bars).toHaveLength(3);\n        bars.forEach((node, i) => {\n          const errorY = yScale(data[i].y - data[i].errorY[1]);\n          const yScaleMax = yScale.range()[0];\n          const positiveErrorY = errorY >= yScaleMax ? yScaleMax : errorY;\n          const [x1, x2, y1, y2] = getCoordinatesForLineWithType(node, \"border-top\");\n          expect(x1).toEqual(xScale(data[i].x) - borderWidth);\n          expect(x2).toEqual(xScale(data[i].x) + borderWidth);\n          expect(y1).toEqual(positiveErrorY);\n          expect(y2).toEqual(positiveErrorY);\n        });\n      });","file":"jest/victory-errorbars/victory-errorbars.test.js","skipped":false,"dir":"test"},{"name":"should check top cross line of error bars positions","suites":["components/victory-errorbar","asymmetric error, rendering data "],"updatePoint":{"line":723,"column":61,"index":26916},"line":723,"code":"      it(\"should check top cross line of error bars positions\", () => {\n        const svgDimensions = {\n          width: 350,\n          height: 200,\n          padding: 75\n        };\n        const data = [{\n          x: 0,\n          y: 0,\n          errorX: [0.1, 0.3],\n          errorY: [0.2, 0.5]\n        }, {\n          x: 2,\n          y: 3,\n          errorX: [0.1, 0.2],\n          errorY: [0.2, 0.3]\n        }, {\n          x: 5,\n          y: 5,\n          errorX: [0.1, 0.6],\n          errorY: [0.2, 0.1]\n        }];\n        render( /*#__PURE__*/React.createElement(VictoryErrorBar, _extends({\n          data: createData(data)\n        }, svgDimensions, defaultProps)));\n        const xScale = d3Scale.scaleLinear().domain([-0.3, 5.1]).range([svgDimensions.padding, svgDimensions.width - svgDimensions.padding]);\n        const yScale = d3Scale.scaleLinear().domain([-0.5, 5.2]).range([svgDimensions.height - svgDimensions.padding, svgDimensions.padding]);\n        const bars = screen.getAllByTestId(\"error-bar\");\n        expect(bars).toHaveLength(3);\n        bars.forEach((node, i) => {\n          const errorY = yScale(data[i].y - data[i].errorY[1]);\n          const yScaleMax = yScale.range()[0];\n          const positiveErrorY = errorY >= yScaleMax ? yScaleMax : errorY;\n          const [x1, x2, y1, y2] = getCoordinatesForLineWithType(node, \"cross-top\");\n          expect(x1).toEqual(xScale(data[i].x));\n          expect(x2).toEqual(xScale(data[i].x));\n          expect(y1).toEqual(yScale(data[i].y));\n          expect(y2).toEqual(positiveErrorY);\n        });\n      });","file":"jest/victory-errorbars/victory-errorbars.test.js","skipped":false,"dir":"test"},{"name":"should check bottom cross line of error bars positions","suites":["components/victory-errorbar","asymmetric error, rendering data "],"updatePoint":{"line":763,"column":64,"index":28491},"line":763,"code":"      it(\"should check bottom cross line of error bars positions\", () => {\n        const svgDimensions = {\n          width: 350,\n          height: 200,\n          padding: 75\n        };\n        const data = [{\n          x: 0,\n          y: 0,\n          errorX: [0.1, 0.3],\n          errorY: [0.2, 0.5]\n        }, {\n          x: 2,\n          y: 3,\n          errorX: [0.1, 0.2],\n          errorY: [0.2, 0.3]\n        }, {\n          x: 5,\n          y: 5,\n          errorX: [0.1, 0.6],\n          errorY: [0.2, 0.1]\n        }];\n        render( /*#__PURE__*/React.createElement(VictoryErrorBar, _extends({\n          data: createData(data)\n        }, svgDimensions, defaultProps)));\n        const xScale = d3Scale.scaleLinear().domain([-0.3, 5.1]).range([svgDimensions.padding, svgDimensions.width - svgDimensions.padding]);\n        const yScale = d3Scale.scaleLinear().domain([-0.5, 5.2]).range([svgDimensions.height - svgDimensions.padding, svgDimensions.padding]);\n        const bars = screen.getAllByTestId(\"error-bar\");\n        expect(bars).toHaveLength(3);\n        bars.forEach((node, i) => {\n          const errorY = yScale(data[i].y + data[i].errorY[0]);\n          const yScaleMin = yScale.range()[1];\n          const negativeErrorY = errorY <= yScaleMin ? yScaleMin : errorY;\n          const [x1, x2, y1, y2] = getCoordinatesForLineWithType(node, \"cross-bottom\");\n          expect(x1).toEqual(xScale(data[i].x));\n          expect(x2).toEqual(xScale(data[i].x));\n          expect(y1).toEqual(yScale(data[i].y));\n          expect(y2).toEqual(negativeErrorY);\n        });\n      });","file":"jest/victory-errorbars/victory-errorbars.test.js","skipped":false,"dir":"test"},{"name":"should check left cross line of error bars positions","suites":["components/victory-errorbar","asymmetric error, rendering data "],"updatePoint":{"line":803,"column":62,"index":30067},"line":803,"code":"      it(\"should check left cross line of error bars positions\", () => {\n        const svgDimensions = {\n          width: 350,\n          height: 200,\n          padding: 75\n        };\n        const data = [{\n          x: 0,\n          y: 0,\n          errorX: [0.1, 0.3],\n          errorY: [0.2, 0.5]\n        }, {\n          x: 2,\n          y: 3,\n          errorX: [0.1, 0.2],\n          errorY: [0.2, 0.3]\n        }, {\n          x: 5,\n          y: 5,\n          errorX: [0.1, 0.6],\n          errorY: [0.2, 0.1]\n        }];\n        render( /*#__PURE__*/React.createElement(VictoryErrorBar, _extends({\n          data: createData(data)\n        }, svgDimensions, defaultProps)));\n        const xScale = d3Scale.scaleLinear().domain([-0.3, 5.1]).range([svgDimensions.padding, svgDimensions.width - svgDimensions.padding]);\n        const yScale = d3Scale.scaleLinear().domain([-0.5, 5.2]).range([svgDimensions.height - svgDimensions.padding, svgDimensions.padding]);\n        const bars = screen.getAllByTestId(\"error-bar\");\n        expect(bars).toHaveLength(3);\n        bars.forEach((node, i) => {\n          const errorX = xScale(data[i].x - data[i].errorX[1]);\n          const xScaleMin = xScale.range()[0];\n          const negativeErrorX = errorX <= xScaleMin ? xScaleMin : errorX;\n          const [x1, x2, y1, y2] = getCoordinatesForLineWithType(node, \"cross-left\");\n          expect(x1).toEqual(xScale(data[i].x));\n          expect(x2).toEqual(negativeErrorX);\n          expect(y1).toEqual(yScale(data[i].y));\n          expect(y2).toEqual(yScale(data[i].y));\n        });\n      });","file":"jest/victory-errorbars/victory-errorbars.test.js","skipped":false,"dir":"test"},{"name":"should check right cross line of error bars positions","suites":["components/victory-errorbar","asymmetric error, rendering data "],"updatePoint":{"line":843,"column":63,"index":31642},"line":843,"code":"      it(\"should check right cross line of error bars positions\", () => {\n        const svgDimensions = {\n          width: 350,\n          height: 200,\n          padding: 75\n        };\n        const data = [{\n          x: 0,\n          y: 0,\n          errorX: [0.1, 0.3],\n          errorY: [0.2, 0.5]\n        }, {\n          x: 2,\n          y: 3,\n          errorX: [0.1, 0.2],\n          errorY: [0.2, 0.3]\n        }, {\n          x: 5,\n          y: 5,\n          errorX: [0.1, 0.6],\n          errorY: [0.2, 0.1]\n        }];\n        render( /*#__PURE__*/React.createElement(VictoryErrorBar, _extends({\n          data: createData(data)\n        }, svgDimensions, defaultProps)));\n        const xScale = d3Scale.scaleLinear().domain([-0.3, 5.1]).range([svgDimensions.padding, svgDimensions.width - svgDimensions.padding]);\n        const yScale = d3Scale.scaleLinear().domain([-0.5, 5.2]).range([svgDimensions.height - svgDimensions.padding, svgDimensions.padding]);\n        const bars = screen.getAllByTestId(\"error-bar\");\n        expect(bars).toHaveLength(3);\n        bars.forEach((node, i) => {\n          const errorX = xScale(data[i].x + data[i].errorX[0]);\n          const xScaleMax = xScale.range()[1];\n          const positiveErrorX = errorX >= xScaleMax ? xScaleMax : errorX;\n          const [x1, x2, y1, y2] = getCoordinatesForLineWithType(node, \"cross-right\");\n          expect(x1).toEqual(xScale(data[i].x));\n          expect(x2).toEqual(positiveErrorX);\n          expect(y1).toEqual(yScale(data[i].y));\n          expect(y2).toEqual(yScale(data[i].y));\n        });\n      });","file":"jest/victory-errorbars/victory-errorbars.test.js","skipped":false,"dir":"test"},{"name":"attaches an event to the parent svg","suites":["components/victory-errorbar","event handling"],"updatePoint":{"line":886,"column":43,"index":33249},"line":886,"code":"    it(\"attaches an event to the parent svg\", () => {\n      const clickHandler = jest.fn();\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryErrorBar, {\n        events: [{\n          target: \"parent\",\n          eventHandlers: {\n            onClick: clickHandler\n          }\n        }]\n      }));\n      const svg = container.querySelector(\"svg\");\n      fireEvent.click(svg);\n      expect(clickHandler).toBeCalled();\n    });","file":"jest/victory-errorbars/victory-errorbars.test.js","skipped":false,"dir":"test"},{"name":"attaches an event to data, click border lines","suites":["components/victory-errorbar","event handling"],"updatePoint":{"line":902,"column":53,"index":33722},"line":902,"code":"    it(\"attaches an event to data, click border lines\", () => {\n      const clickHandler = jest.fn();\n      render( /*#__PURE__*/React.createElement(VictoryErrorBar, _extends({\n        events: [{\n          target: \"data\",\n          eventHandlers: {\n            onClick: clickHandler\n          }\n        }]\n      }, defaultProps)));\n      const bars = screen.getAllByTestId(\"error-bar\");\n      bars.forEach(node => {\n        // click the border line\n        fireEvent.click(node.querySelectorAll(\"line\")[3]);\n        expect(clickHandler).toBeCalled();\n      });\n    });","file":"jest/victory-errorbars/victory-errorbars.test.js","skipped":false,"dir":"test"},{"name":"attaches an event to data, click cross lines","suites":["components/victory-errorbar","event handling"],"updatePoint":{"line":919,"column":52,"index":34290},"line":919,"code":"    it(\"attaches an event to data, click cross lines\", () => {\n      const clickHandler = jest.fn();\n      render( /*#__PURE__*/React.createElement(VictoryErrorBar, _extends({\n        events: [{\n          target: \"data\",\n          eventHandlers: {\n            onClick: clickHandler\n          }\n        }]\n      }, defaultProps)));\n      const bars = screen.getAllByTestId(\"error-bar\");\n      bars.forEach(node => {\n        // click the cross line\n        fireEvent.click(node.querySelectorAll(\"line\")[7]);\n        expect(clickHandler).toBeCalled();\n      });\n    });","file":"jest/victory-errorbars/victory-errorbars.test.js","skipped":false,"dir":"test"},{"name":"adds an aria label-label and tabIndex to Error Bar primitive","suites":["components/victory-errorbar","event handling","accessibility"],"updatePoint":{"line":937,"column":70,"index":34913},"line":937,"code":"      it(\"adds an aria label-label and tabIndex to Error Bar primitive\", () => {\n        const data = [{\n          x: 35,\n          y: 50,\n          error: 0.2\n        }, {\n          x: 10,\n          y: 43,\n          error: 0.15\n        }, {\n          x: 45,\n          y: 65,\n          error: 0.5\n        }];\n        const {\n          container\n        } = render( /*#__PURE__*/React.createElement(VictoryErrorBar, {\n          data: data,\n          dataComponent: /*#__PURE__*/React.createElement(ErrorBar, {\n            \"data-testid\": \"error-bar\",\n            ariaLabel: ({\n              datum\n            }) => `error bar chart, x ${datum.x}`,\n            tabIndex: ({\n              index\n            }) => index + 2\n          })\n        }));\n        expect(container.querySelectorAll(\"g\")).toHaveLength(4);\n        expect(screen.getAllByTestId(\"error-bar\")).toHaveLength(3);\n        screen.getAllByTestId(\"error-bar\").forEach((g, i) => {\n          expect(g.getAttribute(\"aria-label\")).toEqual(`error bar chart, x ${data[i].x}`);\n          expect(parseInt(g.getAttribute(\"tabindex\"), 10)).toEqual(i + 2);\n        });\n      });","file":"jest/victory-errorbars/victory-errorbars.test.js","skipped":false,"dir":"test"},{"name":"has a static role","suites":["components/victory-group"],"updatePoint":{"line":6,"column":23,"index":241},"line":6,"code":"  it(\"has a static role\", () => {\n    expect(VictoryGroup.role).toEqual(\"group\");\n  });","file":"jest/victory-group/victory-group.test.js","skipped":false,"dir":"test"},{"name":"renders an svg with the correct width and height","suites":["components/victory-group","default component rendering"],"updatePoint":{"line":10,"column":56,"index":412},"line":10,"code":"    it(\"renders an svg with the correct width and height\", () => {\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryGroup, null, /*#__PURE__*/React.createElement(VictoryBar, null), /*#__PURE__*/React.createElement(VictoryBar, null)));\n      const svg = container.querySelector(\"svg\");\n      expect(svg.style.width).toEqual(\"100%\");\n      expect(svg.style.height).toEqual(\"100%\");\n    });","file":"jest/victory-group/victory-group.test.js","skipped":false,"dir":"test"},{"name":"renders an svg with the correct viewBox","suites":["components/victory-group","default component rendering"],"updatePoint":{"line":18,"column":47,"index":832},"line":18,"code":"    it(\"renders an svg with the correct viewBox\", () => {\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryGroup, null, /*#__PURE__*/React.createElement(VictoryBar, null), /*#__PURE__*/React.createElement(VictoryBar, null)));\n      const svg = container.querySelector(\"svg\");\n      const viewBoxValue = `0 0 ${450} ${300}`;\n      expect(svg.getAttribute(\"viewBox\")).toEqual(viewBoxValue);\n    });","file":"jest/victory-group/victory-group.test.js","skipped":false,"dir":"test"},{"name":"accepts user props","suites":["components/victory-group","default component rendering"],"updatePoint":{"line":26,"column":26,"index":1249},"line":26,"code":"    it(\"accepts user props\", () => {\n      render( /*#__PURE__*/React.createElement(VictoryGroup, {\n        \"data-testid\": \"victory-group\",\n        \"aria-label\": \"Group\"\n      }, /*#__PURE__*/React.createElement(VictoryBar, null), /*#__PURE__*/React.createElement(VictoryBar, null)));\n      expect(screen.getByTestId(\"victory-group\")).toBeDefined();\n      expect(screen.getByLabelText(\"Group\")).toBeDefined();\n    });","file":"jest/victory-group/victory-group.test.js","skipped":false,"dir":"test"},{"name":"accepts user props","suites":["components/victory-histogram","default component rendering"],"updatePoint":{"line":14,"column":26,"index":534},"line":14,"code":"    it(\"accepts user props\", () => {\n      render( /*#__PURE__*/React.createElement(VictoryHistogram, {\n        \"data-testid\": \"victory-histogram\",\n        \"aria-label\": \"Chart\"\n      }));\n      const svgNode = screen.getByTestId(\"victory-histogram\");\n      expect(svgNode.getAttribute(\"aria-label\")).toEqual(\"Chart\");\n    });","file":"jest/victory-histogram/victory-histogram.test.js","skipped":false,"dir":"test"},{"name":"renders an svg with the correct width and height","suites":["components/victory-histogram","default component rendering"],"updatePoint":{"line":22,"column":56,"index":891},"line":22,"code":"    it(\"renders an svg with the correct width and height\", () => {\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryHistogram, null));\n      const svg = container.querySelector(\"svg\");\n      expect(svg.getAttribute(\"style\")).toContain(\"width: 100%; height: 100%\");\n    });","file":"jest/victory-histogram/victory-histogram.test.js","skipped":false,"dir":"test"},{"name":"renders an svg with the correct viewBox","suites":["components/victory-histogram","default component rendering"],"updatePoint":{"line":29,"column":47,"index":1196},"line":29,"code":"    it(\"renders an svg with the correct viewBox\", () => {\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryHistogram, null));\n      const svg = container.querySelector(\"svg\");\n      const viewBoxValue = `0 0 ${450} ${300}`;\n      expect(svg.getAttribute(\"viewBox\")).toEqual(viewBoxValue);\n    });","file":"jest/victory-histogram/victory-histogram.test.js","skipped":false,"dir":"test"},{"name":"renders 0 bars","suites":["components/victory-histogram","default component rendering"],"updatePoint":{"line":37,"column":22,"index":1509},"line":37,"code":"    it(\"renders 0 bars\", () => {\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryHistogram, null));\n      const bars = container.querySelectorAll(\"path\");\n      expect(bars).toHaveLength(0);\n    });","file":"jest/victory-histogram/victory-histogram.test.js","skipped":false,"dir":"test"},{"name":"renders 4 bars","suites":["components/victory-histogram","default component rendering"],"updatePoint":{"line":44,"column":22,"index":1750},"line":44,"code":"    it(\"renders 4 bars\", () => {\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryHistogram, {\n        bins: [0, 10, 40, 50, 100]\n      }));\n      const bars = container.querySelectorAll(\"path\");\n      expect(bars).toHaveLength(4);\n    });","file":"jest/victory-histogram/victory-histogram.test.js","skipped":false,"dir":"test"},{"name":"renders each bar as a rectangle","suites":["components/victory-histogram","default component rendering"],"updatePoint":{"line":53,"column":39,"index":2048},"line":53,"code":"    it(\"renders each bar as a rectangle\", () => {\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryHistogram, {\n        bins: [0, 10, 40, 50]\n      }));\n      const barCommandStrings = Array.from(container.querySelectorAll(\"path\")).map(bar => bar.getAttribute(\"d\"));\n      barCommandStrings.forEach(commandString => {\n        expect(isBar(commandString)).toBeTruthy();\n      });\n    });","file":"jest/victory-histogram/victory-histogram.test.js","skipped":false,"dir":"test"},{"name":"renders bars for {x} shaped data (default)","suites":["components/victory-histogram","rendering data"],"updatePoint":{"line":66,"column":50,"index":2530},"line":66,"code":"    it(\"renders bars for {x} shaped data (default)\", () => {\n      const data = range(5).map(i => ({\n        x: i\n      }));\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryHistogram, {\n        data: data\n      }));\n      const bars = container.querySelectorAll(\"path\");\n      expect(bars.length).toEqual(4);\n    });","file":"jest/victory-histogram/victory-histogram.test.js","skipped":false,"dir":"test"},{"name":"renders bars for deeply-nested data","suites":["components/victory-histogram","rendering data"],"updatePoint":{"line":78,"column":43,"index":2882},"line":78,"code":"    it(\"renders bars for deeply-nested data\", () => {\n      const data = range(5).map(i => ({\n        a: {\n          b: [{\n            x: i\n          }]\n        }\n      }));\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryHistogram, {\n        data: data,\n        x: \"a.b[0].x\"\n      }));\n      const bars = container.querySelectorAll(\"path\");\n      expect(bars.length).toEqual(4);\n    });","file":"jest/victory-histogram/victory-histogram.test.js","skipped":false,"dir":"test"},{"name":"renders 2 bars of equal height","suites":["components/victory-histogram","rendering data"],"updatePoint":{"line":95,"column":38,"index":3308},"line":95,"code":"    it(\"renders 2 bars of equal height\", () => {\n      const data = [{\n        x: 2\n      }, {\n        x: 3\n      }];\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryHistogram, {\n        data: data,\n        bins: [2, 2.5, 3]\n      }));\n      const bars = Array.from(container.querySelectorAll(\"path\"));\n      const [height1, height2] = bars.map(bar => getBarHeight(bar.getAttribute(\"d\")));\n      expect(bars).toHaveLength(2);\n      expect(height1).toEqual(height2);\n      expect(height1).toBeGreaterThan(0);\n    });","file":"jest/victory-histogram/victory-histogram.test.js","skipped":false,"dir":"test"},{"name":"renders bars values with null accessor","suites":["components/victory-histogram","rendering data"],"updatePoint":{"line":113,"column":46,"index":3874},"line":113,"code":"    it(\"renders bars values with null accessor\", () => {\n      const data = range(10);\n      render( /*#__PURE__*/React.createElement(VictoryHistogram, {\n        data: data,\n        x: null,\n        y: null,\n        dataComponent: /*#__PURE__*/React.createElement(DataComponent, null)\n      }));\n      const bars = screen.getAllByTestId(DATA_COMPONENT_ID);\n      expect(bars.length).toBeGreaterThan(0);\n    });","file":"jest/victory-histogram/victory-histogram.test.js","skipped":false,"dir":"test"},{"name":"renders bars with appropriate relative heights","suites":["components/victory-histogram","rendering data"],"updatePoint":{"line":124,"column":54,"index":4293},"line":124,"code":"    it(\"renders bars with appropriate relative heights\", () => {\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryHistogram, {\n        data: [{\n          x: 1\n        }, {\n          x: 2\n        }, {\n          x: 2\n        }, {\n          x: 3\n        }, {\n          x: 3\n        }, {\n          x: 3\n        }],\n        bins: [1, 2, 3, 4]\n      }));\n      const bars = Array.from(container.querySelectorAll(\"path\"));\n      const [height1, height2, height3] = bars.map(bar => getBarHeight(bar.getAttribute(\"d\")));\n      expect(height2 / 2).toBeCloseTo(height1);\n      expect(height3 * 2 / 3).toBeCloseTo(height2);\n    });","file":"jest/victory-histogram/victory-histogram.test.js","skipped":false,"dir":"test"},{"name":"attaches an event to the parent svg","suites":["components/victory-histogram","event handling"],"updatePoint":{"line":154,"column":43,"index":5085},"line":154,"code":"    it(\"attaches an event to the parent svg\", () => {\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryHistogram, {\n        events: [{\n          target: \"parent\",\n          eventHandlers: {\n            onClick: clickHandler\n          }\n        }]\n      }));\n      const svg = container.querySelector(\"svg\");\n      fireEvent.click(svg);\n      expect(clickHandler).toHaveBeenCalled(); // the first argument is the standard event object\n\n      const contextualArg = clickHandler.mock.calls[0][1];\n      expect(contextualArg.key).toEqual(\"histogram-parent-parent\");\n    });","file":"jest/victory-histogram/victory-histogram.test.js","skipped":false,"dir":"test"},{"name":"attaches an event to data","suites":["components/victory-histogram","event handling"],"updatePoint":{"line":172,"column":33,"index":5686},"line":172,"code":"    it(\"attaches an event to data\", () => {\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryHistogram, {\n        data: [{\n          x: 1\n        }, {\n          x: 1\n        }, {\n          x: 2\n        }],\n        bins: [1, 2, 3],\n        events: [{\n          target: \"data\",\n          eventHandlers: {\n            onClick: clickHandler\n          }\n        }]\n      }));\n      const data = container.querySelectorAll(\"path\");\n      expect(data).toHaveLength(2);\n      data.forEach((node, index) => {\n        clickHandler.mockReset();\n        fireEvent.click(node);\n        expect(clickHandler).toHaveBeenCalled();\n        const contextualObject = clickHandler.mock.calls[0][1];\n        expect(contextualObject.key).toEqual(`histogram-data-${index}`);\n      });\n    });","file":"jest/victory-histogram/victory-histogram.test.js","skipped":false,"dir":"test"},{"name":"attaches an event to a label","suites":["components/victory-histogram","event handling"],"updatePoint":{"line":201,"column":36,"index":6499},"line":201,"code":"    it(\"attaches an event to a label\", () => {\n      const data = [{\n        x: 0\n      }, {\n        x: 1\n      }, {\n        x: 2\n      }];\n      render( /*#__PURE__*/React.createElement(VictoryHistogram, {\n        data: data,\n        bins: [0, 1, 2, 3],\n        events: [{\n          target: \"labels\",\n          eventHandlers: {\n            onClick: clickHandler\n          }\n        }],\n        labels: ({\n          datum\n        }) => `Label: ${datum.x}`\n      }));\n      data.forEach(datum => {\n        clickHandler.mockReset();\n        const label = screen.getByText(`Label: ${datum.x + 0.5}`);\n        fireEvent.click(label);\n        expect(clickHandler).toHaveBeenCalled();\n      });\n    });","file":"jest/victory-histogram/victory-histogram.test.js","skipped":false,"dir":"test"},{"name":"adds an aria role to each bar in the series","suites":["components/victory-histogram","accessibility"],"updatePoint":{"line":231,"column":51,"index":7253},"line":231,"code":"    it(\"adds an aria role to each bar in the series\", () => {\n      const data = range(5).map(x => ({\n        x\n      }));\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryHistogram, {\n        data: data\n      }));\n      container.querySelectorAll(\"path\").forEach(bar => {\n        expect(bar.getAttribute(\"role\")).toEqual(\"presentation\");\n      });\n    });","file":"jest/victory-histogram/victory-histogram.test.js","skipped":false,"dir":"test"},{"name":"renders provided data correctly","suites":["components/victory-legend"],"updatePoint":{"line":22,"column":37,"index":547},"line":22,"code":"  it(\"renders provided data correctly\", () => {\n    const {\n      container\n    } = render( /*#__PURE__*/React.createElement(VictoryLegend, {\n      data: initialData\n    }));\n    const legendLabels = container.querySelectorAll(\"text\");\n    expect(legendLabels).toHaveLength(initialData.length);\n  });","file":"jest/victory-legend/victory-legend.test.js","skipped":false,"dir":"test"},{"name":"has expected horizontal label position","suites":["components/victory-legend"],"updatePoint":{"line":31,"column":44,"index":855},"line":31,"code":"  it(\"has expected horizontal label position\", () => {\n    const {\n      container\n    } = render( /*#__PURE__*/React.createElement(VictoryLegend, {\n      data: initialData,\n      orientation: \"horizontal\"\n    }));\n    const [label1, label2] = container.querySelectorAll(\"text\");\n    expect(label1.getAttribute(\"y\")).toEqual(label2.getAttribute(\"y\"));\n  });","file":"jest/victory-legend/victory-legend.test.js","skipped":false,"dir":"test"},{"name":"has expected vertical symbol position","suites":["components/victory-legend"],"updatePoint":{"line":41,"column":43,"index":1212},"line":41,"code":"  it(\"has expected vertical symbol position\", () => {\n    const {\n      container\n    } = render( /*#__PURE__*/React.createElement(VictoryLegend, {\n      data: initialData,\n      orientation: \"vertical\"\n    }));\n    const [label1, label2] = container.querySelectorAll(\"text\");\n    expect(label1.getAttribute(\"x\")).toEqual(label2.getAttribute(\"x\"));\n  });","file":"jest/victory-legend/victory-legend.test.js","skipped":false,"dir":"test"},{"name":"has expected symbols length","suites":["components/victory-legend","symbols"],"updatePoint":{"line":71,"column":35,"index":1921},"line":71,"code":"    it(\"has expected symbols length\", () => {\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryLegend, {\n        data: legendData\n      }));\n      const symbols = container.querySelectorAll(\"path\");\n      expect(symbols).toHaveLength(2);\n    });","file":"jest/victory-legend/victory-legend.test.js","skipped":false,"dir":"test"},{"name":"has expected symbol colors","suites":["components/victory-legend","symbols"],"updatePoint":{"line":80,"column":34,"index":2207},"line":80,"code":"    it(\"has expected symbol colors\", () => {\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryLegend, {\n        data: legendData\n      }));\n      const symbols = container.querySelectorAll(\"path\");\n      symbols.forEach((symbol, index) => {\n        const style = symbol.getAttribute(\"style\");\n        expect(style).toContain(legendData[index].symbol.fill);\n      });\n    });","file":"jest/victory-legend/victory-legend.test.js","skipped":false,"dir":"test"},{"name":"has expected symbol type","suites":["components/victory-legend","symbols"],"updatePoint":{"line":92,"column":32,"index":2621},"line":92,"code":"    it(\"has expected symbol type\", () => {\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryLegend, {\n        data: legendData\n      }));\n      const [circleSymbol, triangleSymbol] = Array.from(container.querySelectorAll(\"path\")).map(symbol => symbol.getAttribute(\"d\"));\n      expect(isCircle(circleSymbol)).toBeTruthy();\n      expect(isTriangle(triangleSymbol)).toBeTruthy();\n    });","file":"jest/victory-legend/victory-legend.test.js","skipped":false,"dir":"test"},{"name":"has expected symbol type","suites":["components/victory-legend","legend style prop"],"updatePoint":{"line":118,"column":32,"index":3331},"line":118,"code":"    it(\"has expected symbol type\", () => {\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryLegend, {\n        data: legendData,\n        style: styleObject\n      }));\n      container.querySelectorAll(\"path\").forEach(symbol => {\n        const svgPath = symbol.getAttribute(\"d\");\n        expect(isTriangle(svgPath)).toBeTruthy();\n      });\n    });","file":"jest/victory-legend/victory-legend.test.js","skipped":false,"dir":"test"},{"name":"has expected symbol colors","suites":["components/victory-legend","legend style prop"],"updatePoint":{"line":130,"column":34,"index":3719},"line":130,"code":"    it(\"has expected symbol colors\", () => {\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryLegend, {\n        data: legendData,\n        style: styleObject\n      }));\n      container.querySelectorAll(\"path\").forEach(item => {\n        expect(item.getAttribute(\"style\")).toContain(styleObject.data.fill);\n      });\n    });","file":"jest/victory-legend/victory-legend.test.js","skipped":false,"dir":"test"},{"name":"has expected label colors","suites":["components/victory-legend","legend style prop"],"updatePoint":{"line":141,"column":33,"index":4081},"line":141,"code":"    it(\"has expected label colors\", () => {\n      render( /*#__PURE__*/React.createElement(VictoryLegend, {\n        data: legendData,\n        style: styleObject\n      }));\n      legendData.forEach(({\n        name\n      }) => {\n        const label = screen.getByText(name);\n        expect(label.getAttribute(\"style\")).toContain(\"#252525\");\n      });\n    });","file":"jest/victory-legend/victory-legend.test.js","skipped":false,"dir":"test"},{"name":"aligns items in columns","suites":["components/victory-legend","itemsPerRow"],"updatePoint":{"line":175,"column":31,"index":4872},"line":175,"code":"    it(\"aligns items in columns\", () => {\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryLegend, {\n        data: legendData,\n        itemsPerRow: 3\n      }));\n      const labels = Array.from(container.querySelectorAll(\"text\"));\n      expect(labels).toHaveLength(6);\n      const [column1, column2] = splitArrayAtIndex(labels, 3); // items line up between columns\n\n      column1.forEach((item, index) => {\n        const correspondingColumnItemY = column2[index].getAttribute(\"y\");\n        expect(item.getAttribute(\"y\")).toEqual(correspondingColumnItemY);\n      });\n    });","file":"jest/victory-legend/victory-legend.test.js","skipped":false,"dir":"test"},{"name":"aligns items in rows","suites":["components/victory-legend","itemsPerRow"],"updatePoint":{"line":191,"column":28,"index":5483},"line":191,"code":"    it(\"aligns items in rows\", () => {\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryLegend, {\n        data: legendData,\n        itemsPerRow: 3,\n        orientation: \"horizontal\"\n      }));\n      const labels = Array.from(container.querySelectorAll(\"text\"));\n      expect(labels).toHaveLength(6);\n      const rows = splitArrayAtIndex(labels, 3); // each row is on the same y axis\n\n      rows.forEach(row => {\n        const rowYValue = row[0].getAttribute(\"y\");\n        const allInSameRow = row.every(item => item.getAttribute(\"y\") === rowYValue);\n        expect(allInSameRow).toBeTruthy();\n      });\n    });","file":"jest/victory-legend/victory-legend.test.js","skipped":false,"dir":"test"},{"name":"attaches safe user props to the container component","suites":["components/victory-line","default component rendering"],"updatePoint":{"line":10,"column":59,"index":502},"line":10,"code":"    it(\"attaches safe user props to the container component\", () => {\n      render( /*#__PURE__*/React.createElement(VictoryLine, {\n        \"data-testid\": \"victory-line\",\n        \"aria-label\": \"Chart\",\n        \"unsafe-prop\": \"test\"\n      }));\n      const container = screen.getByTestId(\"victory-line\");\n      expect(screen.getByLabelText(\"Chart\")).toBeDefined();\n      expect(container).not.toHaveAttribute(\"unsafe-prop\");\n      expect(container.nodeName).toEqual(\"svg\");\n    });","file":"jest/victory-line/victory-line.test.js","skipped":false,"dir":"test"},{"name":"attaches safe user props to the group component if the component is rendered inside a VictoryChart","suites":["components/victory-line","default component rendering"],"updatePoint":{"line":21,"column":106,"index":1029},"line":21,"code":"    it(\"attaches safe user props to the group component if the component is rendered inside a VictoryChart\", () => {\n      render( /*#__PURE__*/React.createElement(VictoryLine, {\n        \"data-testid\": \"victory-line\",\n        \"aria-label\": \"Chart\",\n        \"unsafe-prop\": \"test\"\n      }), {\n        wrapper: VictoryChart\n      });\n      const container = screen.getByTestId(\"victory-line\");\n      expect(screen.getByLabelText(\"Chart\")).toBeDefined();\n      expect(container).not.toHaveAttribute(\"unsafe-prop\");\n      expect(container.tagName).toEqual(\"g\");\n    });","file":"jest/victory-line/victory-line.test.js","skipped":false,"dir":"test"},{"name":"renders an svg with the correct viewBox","suites":["components/victory-line","default component rendering"],"updatePoint":{"line":34,"column":47,"index":1535},"line":34,"code":"    it(\"renders an svg with the correct viewBox\", () => {\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryLine, null));\n      const viewBoxValue = `0 0 ${450} ${300}`;\n      expect(container.querySelector(\"svg\").getAttribute(\"viewBox\")).toEqual(viewBoxValue);\n    });","file":"jest/victory-line/victory-line.test.js","skipped":false,"dir":"test"},{"name":"renders one dataComponent for the line","suites":["components/victory-line","rendering with data"],"updatePoint":{"line":43,"column":46,"index":1892},"line":43,"code":"    it(\"renders one dataComponent for the line\", () => {\n      const data = [{\n        x: 1,\n        y: 1\n      }, {\n        x: 2,\n        y: 4\n      }, {\n        x: 3,\n        y: 5\n      }, {\n        x: 4,\n        y: 2\n      }, {\n        x: 5,\n        y: 3\n      }, {\n        x: 6,\n        y: 4\n      }, {\n        x: 7,\n        y: 6\n      }];\n      render( /*#__PURE__*/React.createElement(VictoryLine, {\n        data: data,\n        dataComponent: /*#__PURE__*/React.createElement(Curve, {\n          \"data-testid\": \"line\"\n        })\n      }));\n      expect(screen.getByTestId(\"line\")).toBeDefined();\n    });","file":"jest/victory-line/victory-line.test.js","skipped":false,"dir":"test"},{"name":"renders the correct d3Shape path","suites":["components/victory-line","rendering with data"],"updatePoint":{"line":74,"column":40,"index":2495},"line":74,"code":"    it(\"renders the correct d3Shape path\", () => {\n      const props = {\n        interpolation: \"linear\",\n        scale: \"linear\",\n        padding: 50,\n        width: 400,\n        height: 300,\n        data: [{\n          x: 0,\n          y: 0\n        }, {\n          x: 1,\n          y: 1\n        }, {\n          x: 2,\n          y: 2\n        }]\n      };\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryLine, props));\n      expect(container.querySelector(\"path\").getAttribute(\"d\")).toEqual(calculateD3Path(props, \"line\", 0));\n    });","file":"jest/victory-line/victory-line.test.js","skipped":false,"dir":"test"},{"name":"renders the correct d3Shape path with custom interpolation string property","suites":["components/victory-line","rendering with data"],"updatePoint":{"line":97,"column":82,"index":3107},"line":97,"code":"    it(\"renders the correct d3Shape path with custom interpolation string property\", () => {\n      const props = {\n        interpolation: \"catmullRom\",\n        scale: \"linear\",\n        padding: 50,\n        width: 400,\n        height: 300,\n        data: [{\n          x: 0,\n          y: 0\n        }, {\n          x: 1,\n          y: 1\n        }, {\n          x: 2,\n          y: 2\n        }]\n      };\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryLine, props));\n      expect(container.querySelector(\"path\").getAttribute(\"d\")).toEqual(calculateD3Path(props, \"line\", 0));\n    });","file":"jest/victory-line/victory-line.test.js","skipped":false,"dir":"test"},{"name":"renders the correct d3Shape path with custom interpolation function","suites":["components/victory-line","rendering with data"],"updatePoint":{"line":120,"column":75,"index":3716},"line":120,"code":"    it(\"renders the correct d3Shape path with custom interpolation function\", () => {\n      const props = {\n        interpolation: curveCatmullRom,\n        scale: \"linear\",\n        padding: 50,\n        width: 400,\n        height: 300,\n        data: [{\n          x: 0,\n          y: 0\n        }, {\n          x: 1,\n          y: 1\n        }, {\n          x: 2,\n          y: 2\n        }]\n      };\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryLine, props));\n      expect(container.querySelector(\"path\").getAttribute(\"d\")).toEqual(calculateD3Path(props, \"line\", 0));\n    });","file":"jest/victory-line/victory-line.test.js","skipped":false,"dir":"test"},{"name":"renders array-type data","suites":["components/victory-line","rendering with accessors"],"updatePoint":{"line":145,"column":31,"index":4337},"line":145,"code":"    it(\"renders array-type data\", () => {\n      const data = [[1, 2], [3, 4]];\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryLine, {\n        data: data\n      }));\n      const lines = container.querySelectorAll(\"path\");\n      expect(lines).toHaveLength(1);\n    });","file":"jest/victory-line/victory-line.test.js","skipped":false,"dir":"test"},{"name":"renders data values with null accessor","suites":["components/victory-line","rendering with accessors"],"updatePoint":{"line":155,"column":46,"index":4660},"line":155,"code":"    it(\"renders data values with null accessor\", () => {\n      const data = [1, 2, 3, 4];\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryLine, {\n        data: data,\n        x: null,\n        y: null\n      }));\n      const lines = container.querySelectorAll(\"path\");\n      expect(lines).toHaveLength(1);\n    });","file":"jest/victory-line/victory-line.test.js","skipped":false,"dir":"test"},{"name":"renders deeply nested data","suites":["components/victory-line","rendering with accessors"],"updatePoint":{"line":167,"column":34,"index":5001},"line":167,"code":"    it(\"renders deeply nested data\", () => {\n      const data = [{\n        a: {\n          b: [{\n            x: 1,\n            y: 2\n          }]\n        }\n      }, {\n        a: {\n          b: [{\n            x: 3,\n            y: 4\n          }]\n        }\n      }];\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryLine, {\n        data: data,\n        x: \"a.b[0].x\",\n        y: \"a.b.0.y\"\n      }));\n      const lines = container.querySelectorAll(\"path\");\n      expect(lines).toHaveLength(1);\n    });","file":"jest/victory-line/victory-line.test.js","skipped":false,"dir":"test"},{"name":"renders data ordered by x-value, by default","suites":["components/victory-line","rendering with accessors"],"updatePoint":{"line":193,"column":51,"index":5554},"line":193,"code":"    it(\"renders data ordered by x-value, by default\", () => {\n      const data = [{\n        t: 0\n        /*x: 10, y: 1*/\n\n      }, {\n        t: 1\n        /*x:  9, y: 1*/\n\n      }];\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryLine, {\n        data: data,\n        x: ({\n          t\n        }) => 10 - t,\n        y: () => 1,\n        dataComponent: /*#__PURE__*/React.createElement(Curve, {\n          \"data-json\": props => JSON.stringify(props.data)\n        })\n      }));\n      const line = container.querySelector(\"path\");\n      const renderedData = JSON.parse(line.getAttribute(\"data-json\"));\n      expect(renderedData[0].t).toEqual(1);\n      expect(renderedData[1].t).toEqual(0);\n    });","file":"jest/victory-line/victory-line.test.js","skipped":false,"dir":"test"},{"name":"renders data ordered by value of sortKey, if given","suites":["components/victory-line","rendering with accessors"],"updatePoint":{"line":220,"column":58,"index":6293},"line":220,"code":"    it(\"renders data ordered by value of sortKey, if given\", () => {\n      const data = [{\n        t: 0\n        /*x: 10, y: 1*/\n\n      }, {\n        t: 1\n        /*x:  9, y: 1*/\n\n      }];\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryLine, {\n        data: data,\n        sortKey: \"t\",\n        x: ({\n          t\n        }) => 10 - t,\n        y: () => 1,\n        dataComponent: /*#__PURE__*/React.createElement(Curve, {\n          \"data-json\": props => JSON.stringify(props.data)\n        })\n      }));\n      const line = container.querySelector(\"path\");\n      const renderedData = JSON.parse(line.getAttribute(\"data-json\")).map(({\n        t\n      }) => t);\n      expect(renderedData).toEqual([0, 1]);\n    });","file":"jest/victory-line/victory-line.test.js","skipped":false,"dir":"test"},{"name":"attaches an event to the parent svg","suites":["components/victory-line","event handling"],"updatePoint":{"line":251,"column":43,"index":7070},"line":251,"code":"    it(\"attaches an event to the parent svg\", () => {\n      const clickHandler = jest.fn();\n      render( /*#__PURE__*/React.createElement(VictoryLine, {\n        \"data-testid\": \"container\",\n        events: [{\n          target: \"parent\",\n          eventHandlers: {\n            onClick: clickHandler\n          }\n        }]\n      }));\n      const svg = screen.getByTestId(\"container\");\n      fireEvent.click(svg);\n      expect(clickHandler).toHaveBeenCalled();\n    });","file":"jest/victory-line/victory-line.test.js","skipped":false,"dir":"test"},{"name":"attaches an event to data","suites":["components/victory-line","event handling"],"updatePoint":{"line":266,"column":33,"index":7526},"line":266,"code":"    it(\"attaches an event to data\", () => {\n      const clickHandler = jest.fn();\n      render( /*#__PURE__*/React.createElement(VictoryLine, {\n        dataComponent: /*#__PURE__*/React.createElement(Curve, {\n          \"data-testid\": \"line\"\n        }),\n        events: [{\n          target: \"data\",\n          eventHandlers: {\n            onClick: clickHandler\n          }\n        }]\n      }));\n      const line = screen.getByTestId(\"line\");\n      fireEvent.click(line);\n      expect(clickHandler).toHaveBeenCalled();\n    });","file":"jest/victory-line/victory-line.test.js","skipped":false,"dir":"test"},{"name":"attaches an event to a label","suites":["components/victory-line","event handling"],"updatePoint":{"line":283,"column":36,"index":8053},"line":283,"code":"    it(\"attaches an event to a label\", () => {\n      const clickHandler = jest.fn();\n      render( /*#__PURE__*/React.createElement(VictoryLine, {\n        data: [{\n          x: 1,\n          y: 1\n        }, {\n          x: 2,\n          y: 2\n        }],\n        labels: ({\n          datum\n        }) => datum.x,\n        events: [{\n          target: \"labels\",\n          eventHandlers: {\n            onClick: clickHandler\n          }\n        }]\n      }));\n      const label = screen.getByText(\"1\");\n      fireEvent.click(label);\n      expect(clickHandler).toHaveBeenCalled();\n    });","file":"jest/victory-line/victory-line.test.js","skipped":false,"dir":"test"},{"name":"adds an aria role to a line segment","suites":["components/victory-line","accessibility"],"updatePoint":{"line":309,"column":43,"index":8681},"line":309,"code":"    it(\"adds an aria role to a line segment\", () => {\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryLine, null));\n      expect(container.querySelector(\"path\").getAttribute(\"role\")).toEqual(\"presentation\");\n    });","file":"jest/victory-line/victory-line.test.js","skipped":false,"dir":"test"},{"name":"adds an aria role to each line segment","suites":["components/victory-line","accessibility"],"updatePoint":{"line":315,"column":46,"index":8942},"line":315,"code":"    it(\"adds an aria role to each line segment\", () => {\n      const data = [{\n        x: 1,\n        y: 1\n      }, {\n        x: 2,\n        y: 3\n      }, {\n        x: 3,\n        y: 5\n      }, {\n        x: 4,\n        y: 2\n      }, {\n        x: 5,\n        y: null\n      }, {\n        x: 6,\n        y: null\n      }, {\n        x: 7,\n        y: 6\n      }, {\n        x: 8,\n        y: 7\n      }, {\n        x: 9,\n        y: 8\n      }, {\n        x: 10,\n        y: 12\n      }];\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryLine, {\n        data: data\n      }));\n      container.querySelectorAll(\"path\").forEach(p => {\n        expect(p.getAttribute(\"role\")).toEqual(\"presentation\");\n      });\n    });","file":"jest/victory-line/victory-line.test.js","skipped":false,"dir":"test"},{"name":"adds aria-label and tabIndex to Curve primitive","suites":["components/victory-line","accessibility"],"updatePoint":{"line":356,"column":55,"index":9683},"line":356,"code":"    it(\"adds aria-label and tabIndex to Curve primitive\", () => {\n      const ariaTestData = range(4).map(x => ({\n        x,\n        y: random(1, 7)\n      }));\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryLine, {\n        data: ariaTestData,\n        dataComponent: /*#__PURE__*/React.createElement(Curve, {\n          ariaLabel: ({\n            data\n          }) => `data point ${data[2].x + 1}'s x value is ${data[2].x}`,\n          tabIndex: 3\n        })\n      }));\n      const path = container.querySelector(\"path\");\n      expect(path.getAttribute(\"aria-label\")).toEqual(`data point 3's x value is 2`);\n      expect(parseInt(path.getAttribute(\"tabindex\"))).toEqual(3);\n    });","file":"jest/victory-line/victory-line.test.js","skipped":false,"dir":"test"},{"name":"should work for ","suites":["Default render"],"updatePoint":{"line":76,"column":33,"index":1963},"line":76,"code":"    it(`should work for ${C.name}`, () => {\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(C.component));\n      expect(container).toBeDefined();\n    });","file":"jest/victory-native/components.test.js","skipped":false,"dir":"test"},{"name":"should return undefined if not called with any arguments","suites":["getStyle"],"updatePoint":{"line":3,"column":62,"index":140},"line":3,"code":"  it(\"should return undefined if not called with any arguments\", () => {\n    expect(NativeHelpers.getStyle()).toEqual(undefined);\n  });","file":"jest/victory-native/native-helpers.test.js","skipped":false,"dir":"test"},{"name":"removes all unsupported props and leaves others, including stroke props","suites":["getStyle"],"updatePoint":{"line":6,"column":77,"index":291},"line":6,"code":"  it(\"removes all unsupported props and leaves others, including stroke props\", () => {\n    expect(NativeHelpers.getStyle({\n      fill: \"black\",\n      stroke: \"grey\",\n      pointerEvents: \"auto\",\n      x: 0,\n      y: 0,\n      _x: 0,\n      _y: 0,\n      userSelect: \"none\",\n      strokeWidth: 1,\n      strokeOpacity: 1,\n      strokeDasharray: 1,\n      strokeDashoffset: 1,\n      strokeLinecap: 1,\n      strokeLinejoin: 1\n    })).toEqual({\n      fill: \"black\",\n      stroke: \"grey\",\n      strokeWidth: 1,\n      strokeOpacity: 1,\n      strokeDasharray: 1,\n      strokeDashoffset: 1,\n      strokeLinecap: 1,\n      strokeLinejoin: 1\n    });\n  });","file":"jest/victory-native/native-helpers.test.js","skipped":false,"dir":"test"},{"name":"removes all unsupported and stroke props when stroke is transparent","suites":["getStyle"],"updatePoint":{"line":33,"column":73,"index":928},"line":33,"code":"  it(\"removes all unsupported and stroke props when stroke is transparent\", () => {\n    expect(NativeHelpers.getStyle({\n      stroke: \"transparent\",\n      fill: \"black\",\n      pointerEvents: \"auto\",\n      x: 0,\n      y: 0,\n      _x: 0,\n      _y: 0,\n      userSelect: \"none\",\n      strokeWidth: 1,\n      strokeOpacity: 1,\n      strokeDasharray: 1,\n      strokeDashoffset: 1,\n      strokeLinecap: 1,\n      strokeLinejoin: 1\n    })).toEqual({\n      fill: \"black\"\n    });\n  });","file":"jest/victory-native/native-helpers.test.js","skipped":false,"dir":"test"},{"name":"removes all unsupported and stroke props when stroke is 'none'","suites":["getStyle"],"updatePoint":{"line":53,"column":68,"index":1397},"line":53,"code":"  it(\"removes all unsupported and stroke props when stroke is 'none'\", () => {\n    expect(NativeHelpers.getStyle({\n      stroke: \"none\",\n      fill: \"black\",\n      pointerEvents: \"auto\",\n      x: 0,\n      y: 0,\n      _x: 0,\n      _y: 0,\n      userSelect: \"none\",\n      strokeWidth: 1,\n      strokeOpacity: 1,\n      strokeDasharray: 1,\n      strokeDashoffset: 1,\n      strokeLinecap: 1,\n      strokeLinejoin: 1\n    })).toEqual({\n      fill: \"black\"\n    });\n  });","file":"jest/victory-native/native-helpers.test.js","skipped":false,"dir":"test"},{"name":"removes extra properties if given","suites":["getStyle"],"updatePoint":{"line":73,"column":39,"index":1830},"line":73,"code":"  it(\"removes extra properties if given\", () => {\n    expect(NativeHelpers.getStyle({\n      width: 100,\n      height: 100,\n      depth: 100\n    }, [\"width\", \"depth\"])).toEqual({\n      height: 100\n    });\n  });","file":"jest/victory-native/native-helpers.test.js","skipped":false,"dir":"test"},{"name":"accepts user props","suites":["components/victory-pie","default component rendering"],"updatePoint":{"line":33,"column":26,"index":923},"line":33,"code":"    it(\"accepts user props\", () => {\n      render( /*#__PURE__*/React.createElement(VictoryPie, {\n        \"data-testid\": \"victory-pie\",\n        \"aria-label\": \"Chart\"\n      }));\n      const svgNode = screen.getByTestId(\"victory-pie\");\n      expect(svgNode).toHaveAttribute(\"aria-label\", \"Chart\");\n    });","file":"jest/victory-pie/victory-pie.test.js","skipped":false,"dir":"test"},{"name":"renders an svg with the correct width and height","suites":["components/victory-pie","default component rendering"],"updatePoint":{"line":41,"column":56,"index":1257},"line":41,"code":"    it(\"renders an svg with the correct width and height\", () => {\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryPie, null));\n      const svg = container.querySelector(\"svg\");\n      expect(svg.getAttribute(\"style\")).toContain(\"width: 100%; height: 100%\");\n    });","file":"jest/victory-pie/victory-pie.test.js","skipped":false,"dir":"test"},{"name":"renders an svg with the correct viewBox","suites":["components/victory-pie","default component rendering"],"updatePoint":{"line":48,"column":47,"index":1556},"line":48,"code":"    it(\"renders an svg with the correct viewBox\", () => {\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryPie, null));\n      const svg = container.querySelector(\"svg\");\n      expect(svg.getAttribute(\"viewBox\")).toEqual(\"0 0 400 400\");\n    });","file":"jest/victory-pie/victory-pie.test.js","skipped":false,"dir":"test"},{"name":"renders 5 slices","suites":["components/victory-pie","default component rendering"],"updatePoint":{"line":55,"column":24,"index":1818},"line":55,"code":"    it(\"renders 5 slices\", () => {\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryPie, null));\n      const slices = container.querySelectorAll(\"path\");\n      expect(slices).toHaveLength(5);\n    });","file":"jest/victory-pie/victory-pie.test.js","skipped":false,"dir":"test"},{"name":"renders each slice as a circular sector","suites":["components/victory-pie","default component rendering"],"updatePoint":{"line":62,"column":47,"index":2082},"line":62,"code":"    it(\"renders each slice as a circular sector\", () => {\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryPie, null));\n      const slices = container.querySelectorAll(\"path\");\n      slices.forEach(slice => {\n        const sliceCommandString = slice.getAttribute(\"d\");\n        expect(isCircularSector(sliceCommandString)).toBeTruthy();\n      });\n    });","file":"jest/victory-pie/victory-pie.test.js","skipped":false,"dir":"test"},{"name":"renders 5 slice labels","suites":["components/victory-pie","default component rendering"],"updatePoint":{"line":72,"column":30,"index":2460},"line":72,"code":"    it(\"renders 5 slice labels\", () => {\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryPie, null));\n      const labels = container.querySelectorAll(\"text\");\n      expect(labels).toHaveLength(5);\n    });","file":"jest/victory-pie/victory-pie.test.js","skipped":false,"dir":"test"},{"name":"renders 0 slice labels for empty label array","suites":["components/victory-pie","default component rendering"],"updatePoint":{"line":79,"column":52,"index":2729},"line":79,"code":"    it(\"renders 0 slice labels for empty label array\", () => {\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryPie, {\n        labels: []\n      }));\n      const labels = container.querySelectorAll(\"text\");\n      expect(labels).toHaveLength(0);\n    });","file":"jest/victory-pie/victory-pie.test.js","skipped":false,"dir":"test"},{"name":"renders 0 slice labels for label function returning undefined","suites":["components/victory-pie","default component rendering"],"updatePoint":{"line":88,"column":69,"index":3039},"line":88,"code":"    it(\"renders 0 slice labels for label function returning undefined\", () => {\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryPie, {\n        labels: () => undefined\n      }));\n      const labels = container.querySelectorAll(\"text\");\n      expect(labels).toHaveLength(0);\n    });","file":"jest/victory-pie/victory-pie.test.js","skipped":false,"dir":"test"},{"name":"renders dataComponents for {x, y} shaped data (default)","suites":["components/victory-pie","rendering data"],"updatePoint":{"line":99,"column":63,"index":3399},"line":99,"code":"    it(\"renders dataComponents for {x, y} shaped data (default)\", () => {\n      const data = range(5).map(i => ({\n        x: i,\n        y: i\n      }));\n      render( /*#__PURE__*/React.createElement(VictoryPie, {\n        data: data,\n        dataComponent: /*#__PURE__*/React.createElement(PizzaSlice, null)\n      }));\n      const pizzaSlices = screen.getAllByText(pizzaSliceInnerText);\n      expect(pizzaSlices).toHaveLength(5);\n    });","file":"jest/victory-pie/victory-pie.test.js","skipped":false,"dir":"test"},{"name":"renders points for {x, y} shaped data (default)","suites":["components/victory-pie","rendering data"],"updatePoint":{"line":111,"column":55,"index":3828},"line":111,"code":"    it(\"renders points for {x, y} shaped data (default)\", () => {\n      const data = range(5).map(i => ({\n        x: i,\n        y: i\n      }));\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryPie, {\n        data: data\n      }));\n      const slices = container.querySelectorAll(\"path\");\n      expect(slices).toHaveLength(5);\n    });","file":"jest/victory-pie/victory-pie.test.js","skipped":false,"dir":"test"},{"name":"renders points for array-shaped data","suites":["components/victory-pie","rendering data"],"updatePoint":{"line":124,"column":44,"index":4191},"line":124,"code":"    it(\"renders points for array-shaped data\", () => {\n      const data = range(6).map(i => [i, i]);\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryPie, {\n        data: data,\n        x: 0,\n        y: 1\n      }));\n      const slices = container.querySelectorAll(\"path\");\n      expect(slices).toHaveLength(6);\n    });","file":"jest/victory-pie/victory-pie.test.js","skipped":false,"dir":"test"},{"name":"renders points for deeply-nested data","suites":["components/victory-pie","rendering data"],"updatePoint":{"line":136,"column":45,"index":4551},"line":136,"code":"    it(\"renders points for deeply-nested data\", () => {\n      const data = range(7).map(i => ({\n        a: {\n          b: [{\n            x: i,\n            y: i\n          }]\n        }\n      }));\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryPie, {\n        data: data,\n        x: \"a.b[0].x\",\n        y: \"a.b[0].y\"\n      }));\n      const slices = container.querySelectorAll(\"path\");\n      expect(slices).toHaveLength(7);\n    });","file":"jest/victory-pie/victory-pie.test.js","skipped":false,"dir":"test"},{"name":"renders data values with null accessor","suites":["components/victory-pie","rendering data"],"updatePoint":{"line":155,"column":46,"index":5022},"line":155,"code":"    it(\"renders data values with null accessor\", () => {\n      const data = range(8);\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryPie, {\n        data: data,\n        x: null,\n        y: null\n      }));\n      const slices = container.querySelectorAll(\"path\");\n      expect(slices).toHaveLength(8);\n    });","file":"jest/victory-pie/victory-pie.test.js","skipped":false,"dir":"test"},{"name":"renders data values in their given order","suites":["components/victory-pie","rendering data"],"updatePoint":{"line":167,"column":48,"index":5374},"line":167,"code":"    it(\"renders data values in their given order\", () => {\n      const data = range(9).map(i => ({\n        x: i,\n        y: i\n      }));\n      render( /*#__PURE__*/React.createElement(VictoryPie, {\n        data: data,\n        dataComponent: /*#__PURE__*/React.createElement(PizzaSlice, null)\n      }));\n      const xValues = Array.from(screen.getAllByText(pizzaSliceInnerText)).map(slice => {\n        return parseInt(slice.getAttribute(\"xvalue\"));\n      });\n      const xValuesFromGivenData = data.map(({\n        x\n      }) => x);\n      expect(xValues).toEqual(xValuesFromGivenData);\n    });","file":"jest/victory-pie/victory-pie.test.js","skipped":false,"dir":"test"},{"name":"renders data values sorted by sortKey prop","suites":["components/victory-pie","rendering data"],"updatePoint":{"line":184,"column":50,"index":5968},"line":184,"code":"    it(\"renders data values sorted by sortKey prop\", () => {\n      const data = range(9).map(i => ({\n        x: i,\n        y: i\n      })).reverse();\n      render( /*#__PURE__*/React.createElement(VictoryPie, {\n        data: data,\n        sortKey: \"x\",\n        dataComponent: /*#__PURE__*/React.createElement(PizzaSlice, null)\n      }));\n      const xValues = Array.from(screen.getAllByText(pizzaSliceInnerText)).map(slice => {\n        return parseInt(slice.getAttribute(\"xvalue\"));\n      });\n      const xValuesFromDataAscending = data.map(({\n        x\n      }) => x).sort((a, b) => a - b);\n      expect(xValues).toEqual(xValuesFromDataAscending);\n    });","file":"jest/victory-pie/victory-pie.test.js","skipped":false,"dir":"test"},{"name":"renders data values sorted by sortKey prop and sortOrder","suites":["components/victory-pie","rendering data"],"updatePoint":{"line":202,"column":64,"index":6638},"line":202,"code":"    it(\"renders data values sorted by sortKey prop and sortOrder\", () => {\n      const data = range(9).map(i => ({\n        x: i,\n        y: i\n      }));\n      render( /*#__PURE__*/React.createElement(VictoryPie, {\n        data: data,\n        sortKey: \"x\",\n        sortOrder: \"descending\",\n        dataComponent: /*#__PURE__*/React.createElement(PizzaSlice, null)\n      }));\n      const xValues = Array.from(screen.getAllByText(pizzaSliceInnerText)).map(slice => {\n        return parseInt(slice.getAttribute(\"xvalue\"));\n      });\n      const xValuesFromDataDescending = data.map(({\n        x\n      }) => x).sort((a, b) => b - a);\n      expect(xValues).toEqual(xValuesFromDataDescending);\n    });","file":"jest/victory-pie/victory-pie.test.js","skipped":false,"dir":"test"},{"name":"does not render data with null x or y values","suites":["components/victory-pie","rendering data"],"updatePoint":{"line":221,"column":52,"index":7321},"line":221,"code":"    it(\"does not render data with null x or y values\", () => {\n      const data = [{\n        x: 1,\n        y: 2\n      }, {\n        x: null,\n        y: 4\n      }, {\n        x: 5,\n        y: null\n      }];\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryPie, {\n        data: data\n      }));\n      const slices = container.querySelectorAll(\"path\");\n      expect(slices).toHaveLength(1);\n    });","file":"jest/victory-pie/victory-pie.test.js","skipped":false,"dir":"test"},{"name":"determines the counter clockwise angle relative to a cartesian Y axis of a vector extending from the origin to the _first drawn coordinate_ of the first slice ","suites":["components/victory-pie","the `startAngle` prop"],"updatePoint":{"line":242,"column":167,"index":7920},"line":242,"code":"    it(\"determines the counter clockwise angle relative to a cartesian Y axis of a vector extending from the origin to the _first drawn coordinate_ of the first slice \", () => {\n      [0, 90, 180, 270].map(angle => {\n        const {\n          container\n        } = render( /*#__PURE__*/React.createElement(VictoryPie, {\n          startAngle: angle\n        }));\n        const [firstSlice] = container.querySelectorAll(\"path\");\n        const sliceCommandString = firstSlice.getAttribute(\"d\");\n        const coordinates = getSliceArcStart(sliceCommandString);\n        const renderedAngle = getSvgCoordinatesAngleFromCartesianYAxis(coordinates); // There is a small degree of inprecision due to how D3 renders the paths\n\n        expect(renderedAngle).toBeCloseTo(angle);\n      });\n    });","file":"jest/victory-pie/victory-pie.test.js","skipped":false,"dir":"test"},{"name":"renders the slices as annular sections","suites":["components/victory-pie","the `innerRadius` prop"],"updatePoint":{"line":259,"column":46,"index":8635},"line":259,"code":"    it(\"renders the slices as annular sections\", () => {\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryPie, {\n        innerRadius: 70\n      }));\n      const slices = container.querySelectorAll(\"path\");\n      slices.forEach(slice => {\n        const commands = parseSvgPathCommands(slice.getAttribute(\"d\"));\n        const startOfInnerArc = {\n          x: commands[2].args[0],\n          y: commands[2].args[1]\n        };\n        const endOfInnerArc = {\n          x: commands[3].args[5],\n          y: commands[3].args[6]\n        };\n        expect(getDistanceFromOrigin(startOfInnerArc)).toBeCloseTo(getDistanceFromOrigin(endOfInnerArc));\n      });\n    });","file":"jest/victory-pie/victory-pie.test.js","skipped":false,"dir":"test"},{"name":"determines the distance in pixels between the origin & the inner edge of the sections","suites":["components/victory-pie","the `innerRadius` prop"],"updatePoint":{"line":279,"column":93,"index":9378},"line":279,"code":"    it(\"determines the distance in pixels between the origin & the inner edge of the sections\", () => {\n      const INNER_RADIUS = 70;\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryPie, {\n        innerRadius: INNER_RADIUS\n      }));\n      const slices = container.querySelectorAll(\"path\");\n      slices.forEach(slice => {\n        const commands = parseSvgPathCommands(slice.getAttribute(\"d\"));\n        const startOfInnerArc = {\n          x: commands[2].args[0],\n          y: commands[2].args[1]\n        };\n        const innerRadius = getDistanceFromOrigin(startOfInnerArc);\n        expect(innerRadius).toBeCloseTo(INNER_RADIUS);\n      });\n    });","file":"jest/victory-pie/victory-pie.test.js","skipped":false,"dir":"test"},{"name":"renders a portion of a chart from `startAngle` to `endAngle`","suites":["components/victory-pie","`startAngle` in conjunction with `endAngle`"],"updatePoint":{"line":299,"column":68,"index":10116},"line":299,"code":"    it(\"renders a portion of a chart from `startAngle` to `endAngle`\", () => {\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryPie, {\n        startAngle: -90,\n        endAngle: 90\n      }));\n      const slices = container.querySelectorAll(\"path\");\n      const firstSlice = slices[0];\n      const lastSlice = slices[slices.length - 1];\n      const arcStart = getSliceArcStart(firstSlice.getAttribute(\"d\"));\n      const arcEnd = getSliceArcEnd(lastSlice.getAttribute(\"d\"));\n      expect(getSvgCoordinatesAngleFromCartesianYAxis(arcStart)).toBeCloseTo(270);\n      expect(getSvgCoordinatesAngleFromCartesianYAxis(arcEnd)).toBeCloseTo(90);\n    });","file":"jest/victory-pie/victory-pie.test.js","skipped":false,"dir":"test"},{"name":"determines the width of the containing viewBox","suites":["components/victory-pie","the `width` prop"],"updatePoint":{"line":316,"column":54,"index":10832},"line":316,"code":"    it(\"determines the width of the containing viewBox\", () => {\n      const width = 200;\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryPie, {\n        width: width\n      }));\n      const svg = container.querySelector(\"svg\");\n      expect(svg.getAttribute(\"viewBox\")).toEqual(`0 0 ${width} 400`);\n    });","file":"jest/victory-pie/victory-pie.test.js","skipped":false,"dir":"test"},{"name":"determines the height of the containing viewBox","suites":["components/victory-pie","the `height` prop"],"updatePoint":{"line":328,"column":55,"index":11227},"line":328,"code":"    it(\"determines the height of the containing viewBox\", () => {\n      const height = 200;\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryPie, {\n        height: height\n      }));\n      const svg = container.querySelector(\"svg\");\n      expect(svg.getAttribute(\"viewBox\")).toEqual(`0 0 400 ${height}`);\n    });","file":"jest/victory-pie/victory-pie.test.js","skipped":false,"dir":"test"},{"name":"renders each slice with the next color in the array, reiterating through colors as necessary","suites":["components/victory-pie","the `colorScale` prop","if provided an array of CSS colors"],"updatePoint":{"line":341,"column":102,"index":11736},"line":341,"code":"      it(\"renders each slice with the next color in the array, reiterating through colors as necessary\", () => {\n        const data = range(5);\n        const colorScale = [\"#fffff\", \"#eeeee\", \"#ddddd\"];\n        const {\n          container\n        } = render( /*#__PURE__*/React.createElement(VictoryPie, {\n          data: data,\n          colorScale: colorScale\n        }));\n        const slices = container.querySelectorAll(\"path\");\n        expect(slices).toHaveLength(5);\n        slices.forEach((slice, index) => {\n          expect(slice.getAttribute(\"style\")).toContain(colorScale[index % colorScale.length]);\n        });\n      });","file":"jest/victory-pie/victory-pie.test.js","skipped":false,"dir":"test"},{"name":"renders the chart using the given color scale","suites":["components/victory-pie","the `colorScale` prop","if provided a string","and the string is a valid victory color scale"],"updatePoint":{"line":359,"column":57,"index":12450},"line":359,"code":"        it(\"renders the chart using the given color scale\", () => {\n          const VALID_VICTORY_COLOR_SCALE_NAMES = [\"grayscale\", \"qualitative\", \"heatmap\", \"warm\", \"cool\", \"red\", \"green\", \"blue\"];\n          VALID_VICTORY_COLOR_SCALE_NAMES.map(colorScaleName => {\n            const colorScale = Style.getColorScale(colorScaleName);\n            const data = range(colorScale.length + 1);\n            const {\n              container\n            } = render( /*#__PURE__*/React.createElement(VictoryPie, {\n              colorScale: colorScale,\n              data: data\n            }));\n            Array.from(container.querySelectorAll(\"path\")).map((slice, index) => {\n              const expectedColorScheme = colorScale[index % colorScale.length];\n              expect(slice.getAttribute(\"style\")).toContain(expectedColorScheme);\n            });\n          });\n        });","file":"jest/victory-pie/victory-pie.test.js","skipped":false,"dir":"test"},{"name":"attaches an event to the parent svg","suites":["components/victory-pie","event handling"],"updatePoint":{"line":384,"column":43,"index":13467},"line":384,"code":"    it(\"attaches an event to the parent svg\", () => {\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryPie, {\n        events: [{\n          target: \"parent\",\n          eventHandlers: {\n            onClick: clickHandler\n          }\n        }]\n      }));\n      const svg = container.querySelector(\"svg\");\n      fireEvent.click(svg);\n      expect(clickHandler).toBeCalled();\n      const contextualArg = clickHandler.mock.calls[0][1]; // the first argument is the standard event object\n\n      expect(contextualArg.key).toEqual(\"pie-parent-parent\");\n    });","file":"jest/victory-pie/victory-pie.test.js","skipped":false,"dir":"test"},{"name":"attaches an event to data","suites":["components/victory-pie","event handling"],"updatePoint":{"line":402,"column":33,"index":14050},"line":402,"code":"    it(\"attaches an event to data\", () => {\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryPie, {\n        events: [{\n          target: \"data\",\n          eventHandlers: {\n            onClick: clickHandler\n          }\n        }]\n      }));\n      const slices = container.querySelectorAll(\"path\");\n      slices.forEach((slice, index) => {\n        fireEvent.click(slice);\n        const contextualArg = clickHandler.mock.calls[index][1];\n        expect(contextualArg.key).toEqual(`pie-data-${index}`);\n      });\n    });","file":"jest/victory-pie/victory-pie.test.js","skipped":false,"dir":"test"},{"name":"attaches an event to label","suites":["components/victory-pie","event handling"],"updatePoint":{"line":420,"column":34,"index":14609},"line":420,"code":"    it(\"attaches an event to label\", () => {\n      render( /*#__PURE__*/React.createElement(VictoryPie, {\n        data: labeledData,\n        events: [{\n          target: \"labels\",\n          eventHandlers: {\n            onClick: clickHandler\n          }\n        }]\n      }));\n      labeledData.forEach((dataPoint, index) => {\n        const label = screen.getByText(dataPoint.x);\n        fireEvent.click(label);\n        const contextualArg = clickHandler.mock.calls[index][1];\n        expect(contextualArg.slice.data._y).toEqual(dataPoint.y);\n      });\n    });","file":"jest/victory-pie/victory-pie.test.js","skipped":false,"dir":"test"},{"name":"adds aria-label and tabIndex to Slice primitive","suites":["components/victory-pie","accessbility"],"updatePoint":{"line":439,"column":55,"index":15230},"line":439,"code":"    it(\"adds aria-label and tabIndex to Slice primitive\", () => {\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryPie, {\n        data: labeledData,\n        dataComponent: /*#__PURE__*/React.createElement(Slice, {\n          ariaLabel: ({\n            datum\n          }) => `${datum.x}`,\n          tabIndex: ({\n            index\n          }) => index + 5\n        })\n      }));\n      const slices = container.querySelectorAll(\"path\");\n      expect(slices).toHaveLength(labeledData.length);\n      slices.forEach((slice, index) => {\n        expect(slice.getAttribute(\"aria-label\")).toEqual(labeledData[index].x);\n        expect(slice.getAttribute(\"tabindex\")).toEqual(`${index + 5}`);\n      });\n    });","file":"jest/victory-pie/victory-pie.test.js","skipped":false,"dir":"test"},{"name":"returns a size attribute from data","suites":["victory-scatter/helper-methods","getSize"],"updatePoint":{"line":22,"column":42,"index":478},"line":22,"code":"    it(\"returns a size attribute from data\", () => {\n      const point = {\n        size: 3,\n        ...datum\n      };\n      const sizeResult = Helpers.getSize(point, {});\n      expect(Helpers.getBubbleSize).not.toHaveBeenCalled();\n      expect(sizeResult).toEqual(3);\n    });","file":"jest/victory-scatter/helper-methods.test.js","skipped":false,"dir":"test"},{"name":"returns 1 if the size attribute is less than one","suites":["victory-scatter/helper-methods","getSize"],"updatePoint":{"line":31,"column":56,"index":768},"line":31,"code":"    it(\"returns 1 if the size attribute is less than one\", () => {\n      const point = {\n        size: -2,\n        ...datum\n      };\n      const sizeResult = Helpers.getSize(point, {});\n      expect(Helpers.getBubbleSize).not.toHaveBeenCalled();\n      expect(sizeResult).toEqual(1);\n    });","file":"jest/victory-scatter/helper-methods.test.js","skipped":false,"dir":"test"},{"name":"returns size from props, if no size is set on data","suites":["victory-scatter/helper-methods","getSize"],"updatePoint":{"line":40,"column":58,"index":1061},"line":40,"code":"    it(\"returns size from props, if no size is set on data\", () => {\n      const sizeResult = Helpers.getSize(datum, {\n        data,\n        size: 2\n      });\n      expect(Helpers.getBubbleSize).not.toHaveBeenCalled();\n      expect(sizeResult).toEqual(2);\n    });","file":"jest/victory-scatter/helper-methods.test.js","skipped":false,"dir":"test"},{"name":"calculates a bubbleSize if a bubbleProperty is specified, and size is not set","suites":["victory-scatter/helper-methods","getSize"],"updatePoint":{"line":48,"column":85,"index":1352},"line":48,"code":"    it(\"calculates a bubbleSize if a bubbleProperty is specified, and size is not set\", () => {\n      const sizeResult = Helpers.getSize(datum, {\n        data,\n        z: \"t\"\n      });\n      expect(sizeResult).toEqual(5);\n    });","file":"jest/victory-scatter/helper-methods.test.js","skipped":false,"dir":"test"},{"name":"determines the size of a point","suites":["victory-scatter/helper-methods","getBubbleSize"],"updatePoint":{"line":57,"column":38,"index":1577},"line":57,"code":"    it(\"determines the size of a point\", () => {\n      const data = [{\n        x: 1,\n        y: 2,\n        z: 5\n      }, {\n        x: 2,\n        y: 3,\n        z: 1\n      }];\n      const props = {\n        data,\n        z: \"z\"\n      };\n      const sizeResult = Helpers.getBubbleSize(data[0], props);\n      expect(sizeResult).toEqual(5);\n    });","file":"jest/victory-scatter/helper-methods.test.js","skipped":false,"dir":"test"},{"name":"returns 'circle' for bubble plots","suites":["victory-scatter/helper-methods","getSymbol"],"updatePoint":{"line":82,"column":41,"index":2056},"line":82,"code":"    it(\"returns 'circle' for bubble plots\", () => {\n      const symbolResult = Helpers.getSymbol({}, { ...props,\n        bubbleProperty: \"z\"\n      });\n      expect(symbolResult).toEqual(\"circle\");\n    });","file":"jest/victory-scatter/helper-methods.test.js","skipped":false,"dir":"test"},{"name":"returns a symbol from data if one is given","suites":["victory-scatter/helper-methods","getSymbol"],"updatePoint":{"line":88,"column":50,"index":2270},"line":88,"code":"    it(\"returns a symbol from data if one is given\", () => {\n      const symbolResult = Helpers.getSymbol(data, props);\n      expect(symbolResult).toEqual(\"star\");\n    });","file":"jest/victory-scatter/helper-methods.test.js","skipped":false,"dir":"test"},{"name":"returns a symbol from props if no symbol is found on data","suites":["victory-scatter/helper-methods","getSymbol"],"updatePoint":{"line":92,"column":65,"index":2457},"line":92,"code":"    it(\"returns a symbol from props if no symbol is found on data\", () => {\n      const symbolResult = Helpers.getSymbol({}, props);\n      expect(symbolResult).toEqual(\"plus\");\n    });","file":"jest/victory-scatter/helper-methods.test.js","skipped":false,"dir":"test"},{"name":"accepts safe user props","suites":["components/victory-scatter","default component rendering"],"updatePoint":{"line":12,"column":31,"index":848},"line":12,"code":"    it(\"accepts safe user props\", () => {\n      render( /*#__PURE__*/React.createElement(VictoryScatter, {\n        \"data-testid\": \"victory-scatter\",\n        \"aria-label\": \"Chart\",\n        \"unsafe-prop\": \"test\"\n      }));\n      const container = screen.getByTestId(\"victory-scatter\");\n      expect(screen.getByLabelText(\"Chart\")).toBeDefined();\n      expect(container).not.toHaveAttribute(\"unsafe-prop\");\n      expect(container.nodeName).toBe(\"svg\");\n    });","file":"jest/victory-scatter/victory-scatter.test.js","skipped":false,"dir":"test"},{"name":"renders an svg with the correct width and height","suites":["components/victory-scatter","default component rendering"],"updatePoint":{"line":23,"column":56,"index":1331},"line":23,"code":"    it(\"renders an svg with the correct width and height\", () => {\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryScatter, null));\n      const svg = container.querySelector(\"svg\");\n      expect(svg.style.width).toEqual(\"100%\");\n      expect(svg.style.height).toEqual(\"100%\");\n    });","file":"jest/victory-scatter/victory-scatter.test.js","skipped":false,"dir":"test"},{"name":"renders an svg with the correct viewBox","suites":["components/victory-scatter","default component rendering"],"updatePoint":{"line":31,"column":47,"index":1649},"line":31,"code":"    it(\"renders an svg with the correct viewBox\", () => {\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryScatter, null));\n      const svg = container.querySelector(\"svg\");\n      const viewBoxValue = `0 0 ${450} ${300}`;\n      expect(svg).toHaveAttribute(\"viewBox\", viewBoxValue);\n    });","file":"jest/victory-scatter/victory-scatter.test.js","skipped":false,"dir":"test"},{"name":"renders 51 points","suites":["components/victory-scatter","default component rendering"],"updatePoint":{"line":39,"column":25,"index":1958},"line":39,"code":"    it(\"renders 51 points\", () => {\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryScatter, null));\n      const points = container.querySelectorAll(\"path\");\n      expect(points).toHaveLength(51);\n    });","file":"jest/victory-scatter/victory-scatter.test.js","skipped":false,"dir":"test"},{"name":"renders each point as a circle","suites":["components/victory-scatter","default component rendering"],"updatePoint":{"line":46,"column":38,"index":2218},"line":46,"code":"    it(\"renders each point as a circle\", () => {\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryScatter, null));\n      const points = container.querySelectorAll(\"path\");\n      expect(points).not.toHaveLength(0);\n      points.forEach(point => {\n        expect(isCircle(point.getAttribute(\"d\"))).toBeTruthy();\n      });\n    });","file":"jest/victory-scatter/victory-scatter.test.js","skipped":false,"dir":"test"},{"name":"renders injected points for {x, y} shaped data (default)","suites":["components/victory-scatter","rendering data"],"updatePoint":{"line":58,"column":64,"index":2656},"line":58,"code":"    it(\"renders injected points for {x, y} shaped data (default)\", () => {\n      const data = range(10).map(i => ({\n        x: i,\n        y: i\n      }));\n      render( /*#__PURE__*/React.createElement(VictoryScatter, {\n        data: data,\n        dataComponent: /*#__PURE__*/React.createElement(Point, {\n          \"data-testid\": \"point\"\n        })\n      }));\n      const points = screen.getAllByTestId(\"point\");\n      expect(points).toHaveLength(10);\n    });","file":"jest/victory-scatter/victory-scatter.test.js","skipped":false,"dir":"test"},{"name":"renders points for {x, y} shaped data (default)","suites":["components/victory-scatter","rendering data"],"updatePoint":{"line":72,"column":55,"index":3106},"line":72,"code":"    it(\"renders points for {x, y} shaped data (default)\", () => {\n      const data = range(10).map(i => ({\n        x: i,\n        y: i\n      }));\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryScatter, {\n        data: data\n      }));\n      const points = container.querySelectorAll(\"path\");\n      expect(points).toHaveLength(10);\n    });","file":"jest/victory-scatter/victory-scatter.test.js","skipped":false,"dir":"test"},{"name":"renders points for array-shaped data","suites":["components/victory-scatter","rendering data"],"updatePoint":{"line":85,"column":44,"index":3475},"line":85,"code":"    it(\"renders points for array-shaped data\", () => {\n      const data = range(4).map(i => [i, i]);\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryScatter, {\n        data: data,\n        x: 0,\n        y: 1\n      }));\n      const points = container.querySelectorAll(\"path\");\n      expect(points).toHaveLength(4);\n    });","file":"jest/victory-scatter/victory-scatter.test.js","skipped":false,"dir":"test"},{"name":"renders points for deeply-nested data","suites":["components/victory-scatter","rendering data"],"updatePoint":{"line":97,"column":45,"index":3839},"line":97,"code":"    it(\"renders points for deeply-nested data\", () => {\n      const data = range(4).map(i => ({\n        a: {\n          b: [{\n            x: i,\n            y: i\n          }]\n        }\n      }));\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryScatter, {\n        data: data,\n        x: \"a.b[0].x\",\n        y: \"a.b[0].y\"\n      }));\n      const points = container.querySelectorAll(\"path\");\n      expect(points).toHaveLength(4);\n    });","file":"jest/victory-scatter/victory-scatter.test.js","skipped":false,"dir":"test"},{"name":"renders data values with null accessor","suites":["components/victory-scatter","rendering data"],"updatePoint":{"line":116,"column":46,"index":4314},"line":116,"code":"    it(\"renders data values with null accessor\", () => {\n      const data = range(30);\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryScatter, {\n        data: data,\n        x: null,\n        y: null\n      }));\n      const points = container.querySelectorAll(\"path\");\n      expect(points).toHaveLength(30);\n    });","file":"jest/victory-scatter/victory-scatter.test.js","skipped":false,"dir":"test"},{"name":"renders points in the correct positions","suites":["components/victory-scatter","rendering data"],"updatePoint":{"line":128,"column":47,"index":4671},"line":128,"code":"    it(\"renders points in the correct positions\", () => {\n      const svgDimensions = {\n        width: 350,\n        height: 200,\n        padding: 75\n      };\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryScatter, _extends({\n        data: [{\n          x: 0,\n          y: 0\n        }, {\n          x: 2,\n          y: 3\n        }, {\n          x: 5,\n          y: 5\n        }]\n      }, svgDimensions)));\n      const domain = {\n        x: [0, 5],\n        y: [0, 5]\n      };\n      const points = container.querySelectorAll(\"path\");\n      const svgCoordinates = Array.from(points).map(getSvgPointCoordinates);\n      const coordinates = svgCoordinates.map(coord => {\n        return convertSvgCoordinatesToCartesian(coord, svgDimensions, domain);\n      });\n      expect(coordinates).toEqual([[0, 0], [2, 3], [5, 5]]);\n    });","file":"jest/victory-scatter/victory-scatter.test.js","skipped":false,"dir":"test"},{"name":"does not render data with null x or y values","suites":["components/victory-scatter","rendering data"],"updatePoint":{"line":159,"column":52,"index":5535},"line":159,"code":"    it(\"does not render data with null x or y values\", () => {\n      const data = [{\n        x: 1,\n        y: 2\n      }, {\n        x: null,\n        y: 4\n      }, {\n        x: 5,\n        y: null\n      }];\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryScatter, {\n        data: data\n      }));\n      expect(container.querySelectorAll(\"path\")).toHaveLength(1);\n    });","file":"jest/victory-scatter/victory-scatter.test.js","skipped":false,"dir":"test"},{"name":"attaches an event to the parent svg","suites":["components/victory-scatter","event handling"],"updatePoint":{"line":186,"column":43,"index":6125},"line":186,"code":"    it(\"attaches an event to the parent svg\", () => {\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryScatter, {\n        events: [{\n          target: \"parent\",\n          eventHandlers: {\n            onClick: clickHandler\n          }\n        }]\n      }));\n      const svg = container.querySelector(\"svg\");\n      fireEvent.click(svg);\n      expect(clickHandler).toBeCalled(); // the first argument is the standard evt object\n\n      expect(Object.keys(clickHandler.mock.calls[0][1])).toEqual(expect.arrayContaining([\"data\", \"scale\", \"width\", \"height\", \"style\"]));\n    });","file":"jest/victory-scatter/victory-scatter.test.js","skipped":false,"dir":"test"},{"name":"attaches an event to data","suites":["components/victory-scatter","event handling"],"updatePoint":{"line":203,"column":33,"index":6726},"line":203,"code":"    it(\"attaches an event to data\", () => {\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryScatter, {\n        events: [{\n          target: \"data\",\n          eventHandlers: {\n            onClick: clickHandler\n          }\n        }]\n      }));\n      const Data = container.querySelectorAll(\"path\");\n      expect(Data).not.toHaveLength(0);\n      Data.forEach((node, index) => {\n        fireEvent.click(node);\n        expect(clickHandler).toHaveBeenCalled();\n        expect(`${clickHandler.mock.calls[index][2]}`).toEqual(`${index}`);\n      });\n    });","file":"jest/victory-scatter/victory-scatter.test.js","skipped":false,"dir":"test"},{"name":"attaches an event to a label","suites":["components/victory-scatter","event handling"],"updatePoint":{"line":222,"column":36,"index":7321},"line":222,"code":"    it(\"attaches an event to a label\", () => {\n      const data = [{\n        eventKey: 0,\n        _x: 0,\n        _y: 0,\n        x: 0,\n        y: 0,\n        label: \"0\"\n      }, {\n        eventKey: 1,\n        _x: 1,\n        _y: 1,\n        x: 1,\n        y: 1,\n        label: \"1\"\n      }, {\n        eventKey: 2,\n        _x: 2,\n        _y: 2,\n        x: 2,\n        y: 2,\n        label: \"2\"\n      }];\n      render( /*#__PURE__*/React.createElement(VictoryScatter, {\n        data: data,\n        labelComponent: /*#__PURE__*/React.createElement(VictoryLabel, {\n          \"data-testid\": \"label\"\n        }),\n        events: [{\n          target: \"labels\",\n          eventHandlers: {\n            onClick: clickHandler\n          }\n        }]\n      }));\n      const Labels = screen.getAllByTestId(\"label\");\n      Labels.forEach((node, index) => {\n        fireEvent.click(node);\n        expect(clickHandler).toHaveBeenCalled(); // the first argument is the standard evt object\n\n        expect(clickHandler.mock.calls[index][1].datum).toEqual(data[index]);\n        expect(`${clickHandler.mock.calls[index][2]}`).toEqual(`${index}`);\n      });\n    });","file":"jest/victory-scatter/victory-scatter.test.js","skipped":false,"dir":"test"},{"name":"adds an aria role to each point in the series","suites":["components/victory-scatter","accessibility"],"updatePoint":{"line":268,"column":53,"index":8515},"line":268,"code":"    it(\"adds an aria role to each point in the series\", () => {\n      const data = range(5).map((y, x) => ({\n        x,\n        y\n      }));\n      render( /*#__PURE__*/React.createElement(VictoryScatter, {\n        data: data\n      }));\n      expect(screen.getAllByRole(\"presentation\")).toHaveLength(5);\n    });","file":"jest/victory-scatter/victory-scatter.test.js","skipped":false,"dir":"test"},{"name":"adds an aria-label and tabIndex to Point primitive","suites":["components/victory-scatter","accessibility"],"updatePoint":{"line":278,"column":58,"index":8831},"line":278,"code":"    it(\"adds an aria-label and tabIndex to Point primitive\", () => {\n      const data = range(2, 7).map(x => ({\n        x,\n        y: x + 2\n      }));\n      render( /*#__PURE__*/React.createElement(VictoryScatter, {\n        data: data,\n        dataComponent: /*#__PURE__*/React.createElement(Point, {\n          \"data-testid\": \"point\",\n          ariaLabel: ({\n            datum\n          }) => `scatter point x: ${datum.x}, y:${datum.y}`,\n          tabIndex: ({\n            index\n          }) => index + 10\n        })\n      }));\n      const points = screen.getAllByTestId(\"point\");\n      expect(points).toHaveLength(5);\n      points.forEach((p, i) => {\n        expect(p.getAttribute(\"aria-label\")).toEqual(`scatter point x: ${data[i].x}, y:${data[i].y}`);\n        expect(parseInt(p.getAttribute(\"tabindex\"), 10)).toEqual(i + 10);\n      });\n    });","file":"jest/victory-scatter/victory-scatter.test.js","skipped":false,"dir":"test"},{"name":"returns data from props","suites":["helpers/selection","getDatasets"],"updatePoint":{"line":12,"column":31,"index":396},"line":12,"code":"    it(\"returns data from props\", () => {\n      const data = [{\n        x: 1,\n        y: 3\n      }, {\n        x: 2,\n        y: 5\n      }];\n      const props = {\n        data\n      };\n      const dataset = SelectionHelpers.getDatasets(props);\n      expect(dataset).toEqual([{\n        data\n      }]);\n    });","file":"jest/victory-selection-container/selection-helpers.test.js","skipped":false,"dir":"test"},{"name":"returns data from children","suites":["helpers/selection","getDatasets"],"updatePoint":{"line":28,"column":34,"index":706},"line":28,"code":"    it(\"returns data from children\", () => {\n      const data = [{\n        eventKey: 0,\n        x: 1,\n        y: 3\n      }, {\n        eventKey: 1,\n        x: 2,\n        y: 5\n      }];\n      const expectedReturn = [{\n        eventKey: 0,\n        x: 1,\n        _x: 1,\n        y: 3,\n        _y: 3\n      }, {\n        eventKey: 1,\n        x: 2,\n        _x: 2,\n        y: 5,\n        _y: 5\n      }];\n      const name = \"points\";\n      const children = [/*#__PURE__*/React.createElement(VictoryBar, {\n        name,\n        data\n      })];\n      const props = {\n        children\n      };\n      const dataset = SelectionHelpers.getDatasets(props);\n      expect(dataset).toEqual([{\n        childName: name,\n        data: expectedReturn\n      }]);\n    });","file":"jest/victory-selection-container/selection-helpers.test.js","skipped":false,"dir":"test"},{"name":"returns null when no datasets are within bounds","suites":["helpers/selection","filterDatasets"],"updatePoint":{"line":67,"column":55,"index":1514},"line":67,"code":"    it(\"returns null when no datasets are within bounds\", () => {\n      const datasets = [{\n        childName: \"a\",\n        data: [{\n          eventKey: 0,\n          _x: 1,\n          _y: 3\n        }, {\n          eventKey: 1,\n          _x: 2,\n          _y: 5\n        }]\n      }];\n      const props = {\n        scale,\n        x1: 0,\n        y1: 0,\n        x2: 0.5,\n        y2: 0.5\n      };\n      const bounds = {\n        x: [0, 1],\n        y: [10, 15]\n      };\n      const filteredData = SelectionHelpers.filterDatasets(props, datasets, bounds);\n      expect(filteredData).toBeNull();\n    });","file":"jest/victory-selection-container/selection-helpers.test.js","skipped":false,"dir":"test"},{"name":"returns data points within bounds","suites":["helpers/selection","filterDatasets"],"updatePoint":{"line":94,"column":41,"index":2091},"line":94,"code":"    it(\"returns data points within bounds\", () => {\n      const data = [{\n        eventKey: 0,\n        _x: 0,\n        _y: 0\n      }, {\n        eventKey: 1,\n        _x: 2,\n        _y: 5\n      }];\n      const childName = \"a\";\n      const datasets = [{\n        childName,\n        data\n      }];\n      const bounds = {\n        x: [0, 1],\n        y: [0, 10]\n      };\n      const props = {\n        scale,\n        x1: 0,\n        y1: 0,\n        x2: 0.5,\n        y2: 0.5\n      };\n      const filteredData = SelectionHelpers.filterDatasets(props, datasets, bounds);\n      const expected = {\n        eventKey: [0],\n        data: [data[0]]\n      };\n      expect(filteredData).toEqual([assign({\n        childName\n      }, expected)]);\n    });","file":"jest/victory-selection-container/selection-helpers.test.js","skipped":false,"dir":"test"},{"name":"renders an svg with the correct width and height","suites":["components/victory-stack","default component rendering"],"updatePoint":{"line":13,"column":56,"index":467},"line":13,"code":"    it(\"renders an svg with the correct width and height\", () => {\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryStack, null, /*#__PURE__*/React.createElement(VictoryBar, null), /*#__PURE__*/React.createElement(VictoryBar, null)));\n      const svg = container.querySelector(\"svg\");\n      expect(svg.style.width).toEqual(\"100%\");\n      expect(svg.style.height).toEqual(\"100%\");\n    });","file":"jest/victory-stack/victory-stack.test.js","skipped":false,"dir":"test"},{"name":"renders an svg with the correct viewBox","suites":["components/victory-stack","default component rendering"],"updatePoint":{"line":21,"column":47,"index":887},"line":21,"code":"    it(\"renders an svg with the correct viewBox\", () => {\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryStack, null, /*#__PURE__*/React.createElement(VictoryBar, null), /*#__PURE__*/React.createElement(VictoryBar, null)));\n      const svg = container.querySelector(\"svg\");\n      const viewBoxValue = `0 0 ${450} ${300}`;\n      expect(svg.getAttribute(\"viewBox\")).toEqual(viewBoxValue);\n    });","file":"jest/victory-stack/victory-stack.test.js","skipped":false,"dir":"test"},{"name":"accepts user props","suites":["components/victory-stack","default component rendering"],"updatePoint":{"line":29,"column":26,"index":1304},"line":29,"code":"    it(\"accepts user props\", () => {\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryStack, {\n        \"data-testid\": \"victory-stack\",\n        \"aria-label\": \"Stack\"\n      }, /*#__PURE__*/React.createElement(VictoryBar, null), /*#__PURE__*/React.createElement(VictoryBar, null)));\n      const svgNode = container.querySelector(\"svg\");\n      expect(svgNode.getAttribute(\"data-testid\")).toEqual(\"victory-stack\");\n      expect(svgNode.getAttribute(\"aria-label\")).toEqual(\"Stack\");\n    });","file":"jest/victory-stack/victory-stack.test.js","skipped":false,"dir":"test"},{"name":"should warn when histogram children are mixed with non-histogram children","suites":["components/victory-stack","warnings"],"updatePoint":{"line":48,"column":81,"index":2075},"line":48,"code":"    it(\"should warn when histogram children are mixed with non-histogram children\", () => {\n      render( /*#__PURE__*/React.createElement(VictoryStack, null, /*#__PURE__*/React.createElement(VictoryHistogram, null), /*#__PURE__*/React.createElement(VictoryBar, null)));\n      expect(console.warn).toHaveBeenCalledWith(\"VictoryHistogram only supports being stacked with other VictoryHistogram components. Check to make sure that you are only passing VictoryHistogram components to VictoryStack\");\n    });","file":"jest/victory-stack/victory-stack.test.js","skipped":false,"dir":"test"},{"name":"should not warn when only histogram children are passed","suites":["components/victory-stack","warnings"],"updatePoint":{"line":52,"column":63,"index":2562},"line":52,"code":"    it(\"should not warn when only histogram children are passed\", () => {\n      render( /*#__PURE__*/React.createElement(VictoryStack, null, /*#__PURE__*/React.createElement(VictoryHistogram, null), /*#__PURE__*/React.createElement(VictoryHistogram, null)));\n      expect(console.warn).not.toHaveBeenCalled();\n    });","file":"jest/victory-stack/victory-stack.test.js","skipped":false,"dir":"test"},{"name":"renders a flyout path","suites":["victory-primitives/flyout","rendering"],"updatePoint":{"line":18,"column":29,"index":466},"line":18,"code":"    it(\"renders a flyout path\", () => {\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(Flyout, baseProps), {\n        wrapper: \"svg\"\n      });\n      const path = container.querySelector(\"path\"); // Make sure the path is rendered:\n\n      expect(path).toMatchInlineSnapshot(`\n        <path\n          d=\"M -5, -25\n            L 5, -25\n            L 5, -25\n            L 20, -25\n            A 5 5 0 0 1 25, -20\n            L 25, 20\n            A 5 5 0 0 1 20, 25\n            L -20, 25\n            A 5 5 0 0 1 -25, 20\n            L -25, -20\n            A 5 5 0 0 1 -20, -25\n            z\"\n          role=\"presentation\"\n          shape-rendering=\"auto\"\n        />\n      `);\n    });","file":"jest/victory-tooltip/flyout.test.js","skipped":false,"dir":"test"},{"name":"renders nothing when not active","suites":["components/victory-tooltip"],"updatePoint":{"line":31,"column":37,"index":1119},"line":31,"code":"  it(\"renders nothing when not active\", () => {\n    render( /*#__PURE__*/React.createElement(VictoryTooltip, _extends({}, baseProps, {\n      active: false\n    })), {\n      wrapper: VictoryContainer\n    });\n    const output = screen.queryByTestId(labelId);\n    expect(output).not.toBeInTheDocument();\n  });","file":"jest/victory-tooltip/victory-tooltip.test.js","skipped":false,"dir":"test"},{"name":"renders the expected text","suites":["components/victory-tooltip"],"updatePoint":{"line":40,"column":31,"index":1419},"line":40,"code":"  it(\"renders the expected text\", () => {\n    render( /*#__PURE__*/React.createElement(VictoryTooltip, baseProps), {\n      wrapper: VictoryContainer\n    });\n    const output = screen.getByTestId(labelId);\n    expect(output).toBeInTheDocument();\n    expect(output).toBeVisible();\n    expect(output).toHaveTextContent(baseProps.text);\n  });","file":"jest/victory-tooltip/victory-tooltip.test.js","skipped":false,"dir":"test"},{"name":"renders a flyout and a label","suites":["components/victory-tooltip"],"updatePoint":{"line":49,"column":34,"index":1761},"line":49,"code":"  it(\"renders a flyout and a label\", () => {\n    render( /*#__PURE__*/React.createElement(VictoryTooltip, baseProps), {\n      wrapper: VictoryContainer\n    });\n    const label = screen.getByTestId(labelId);\n    const flyout = screen.getByTestId(flyoutId);\n    expect(label).toBeInTheDocument();\n    expect(flyout).toBeInTheDocument();\n  });","file":"jest/victory-tooltip/victory-tooltip.test.js","skipped":false,"dir":"test"},{"name":"attaches an to the flyout object","suites":["components/victory-tooltip","event handling"],"updatePoint":{"line":59,"column":40,"index":2145},"line":59,"code":"    it(\"attaches an to the flyout object\", () => {\n      const clickHandler = jest.fn();\n      render( /*#__PURE__*/React.createElement(VictoryTooltip, _extends({}, baseProps, {\n        events: {\n          onClick: clickHandler\n        }\n      })), {\n        wrapper: VictoryContainer\n      });\n      fireEvent.click(screen.getByTestId(flyoutId));\n      expect(clickHandler).toBeCalled();\n    });","file":"jest/victory-tooltip/victory-tooltip.test.js","skipped":false,"dir":"test"},{"name":"accepts user props","suites":["components/victory-voronoi","default component rendering"],"updatePoint":{"line":13,"column":26,"index":441},"line":13,"code":"    it(\"accepts user props\", () => {\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryVoronoi, {\n        \"data-testid\": \"victory-voronoi\",\n        \"aria-label\": \"Chart\"\n      }));\n      const svgNode = container.querySelector(\"svg\");\n      expect(svgNode).toHaveAttribute(\"data-testid\", \"victory-voronoi\");\n      expect(svgNode).toHaveAttribute(\"aria-label\", \"Chart\");\n    });","file":"jest/victory-voronoi/victory-voronoi.test.js","skipped":false,"dir":"test"},{"name":"renders an svg with the correct width and height","suites":["components/victory-voronoi","default component rendering"],"updatePoint":{"line":24,"column":56,"index":889},"line":24,"code":"    it(\"renders an svg with the correct width and height\", () => {\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryVoronoi, null));\n      const svg = container.querySelector(\"svg\");\n      expect(svg.style.width).toEqual(\"100%\");\n      expect(svg.style.height).toEqual(\"100%\");\n    });","file":"jest/victory-voronoi/victory-voronoi.test.js","skipped":false,"dir":"test"},{"name":"renders an svg with the correct viewbox","suites":["components/victory-voronoi","default component rendering"],"updatePoint":{"line":32,"column":47,"index":1207},"line":32,"code":"    it(\"renders an svg with the correct viewbox\", () => {\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryVoronoi, null));\n      const svg = container.querySelector(\"svg\");\n      const viewBoxValue = `0 0 ${450} ${300}`;\n      expect(svg).toHaveAttribute(\"viewBox\", viewBoxValue);\n    });","file":"jest/victory-voronoi/victory-voronoi.test.js","skipped":false,"dir":"test"},{"name":"renders the correct d3 path","suites":["components/victory-voronoi","component rendering with data"],"updatePoint":{"line":42,"column":35,"index":1584},"line":42,"code":"    it(\"renders the correct d3 path\", () => {\n      const props = {\n        width: 400,\n        height: 300,\n        padding: 50,\n        domain: {\n          x: [0, 5],\n          y: [0, 5]\n        },\n        data: [{\n          x: 0,\n          y: 0\n        }, {\n          x: 2,\n          y: 3\n        }, {\n          x: 4,\n          y: 1\n        }]\n      };\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryVoronoi, props));\n      expect(container.querySelector(\"path\")).toHaveAttribute(\"d\", calculateD3Path(props, \"voronoi\", 0));\n    });","file":"jest/victory-voronoi/victory-voronoi.test.js","skipped":false,"dir":"test"},{"name":"sorts data by sortKey prop","suites":["components/victory-voronoi","component rendering with data"],"updatePoint":{"line":67,"column":34,"index":2161},"line":67,"code":"    it(\"sorts data by sortKey prop\", () => {\n      const data = range(5).map(i => ({\n        x: i,\n        y: i\n      })).reverse();\n      render( /*#__PURE__*/React.createElement(VictoryVoronoi, {\n        data: data,\n        sortKey: \"x\",\n        dataComponent: /*#__PURE__*/React.createElement(Voronoi, {\n          \"data-testid\": \"voronoi-1\",\n          \"data-props-json\": JSON.stringify\n        })\n      }));\n      const renderedDataProps = screen.getAllByTestId(\"voronoi-1\").map(node => JSON.parse(node.getAttribute(\"data-props-json\")));\n      expect(renderedDataProps.map(props => props.datum._x)).toEqual([0, 1, 2, 3, 4]);\n    });","file":"jest/victory-voronoi/victory-voronoi.test.js","skipped":false,"dir":"test"},{"name":"reverses sorted data with the sortOrder prop","suites":["components/victory-voronoi","component rendering with data"],"updatePoint":{"line":83,"column":52,"index":2815},"line":83,"code":"    it(\"reverses sorted data with the sortOrder prop\", () => {\n      const data = range(5).map(i => ({\n        x: i,\n        y: i\n      })).reverse();\n      render( /*#__PURE__*/React.createElement(VictoryVoronoi, {\n        data: data,\n        sortKey: \"x\",\n        sortOrder: \"descending\",\n        dataComponent: /*#__PURE__*/React.createElement(Voronoi, {\n          \"data-testid\": \"voronoi-1\",\n          \"data-props-json\": JSON.stringify\n        })\n      }));\n      const renderedDataProps = screen.getAllByTestId(\"voronoi-1\").map(node => JSON.parse(node.getAttribute(\"data-props-json\")));\n      expect(renderedDataProps.map(props => props.datum._x)).toEqual([4, 3, 2, 1, 0]);\n    });","file":"jest/victory-voronoi/victory-voronoi.test.js","skipped":false,"dir":"test"},{"name":"does not render data with null x or y values","suites":["components/victory-voronoi","component rendering with data"],"updatePoint":{"line":100,"column":52,"index":3502},"line":100,"code":"    it(\"does not render data with null x or y values\", () => {\n      const data = [{\n        x: 1,\n        y: 2\n      }, {\n        x: null,\n        y: 4\n      }, {\n        x: 5,\n        y: null\n      }, {\n        x: 1,\n        y: 2\n      }];\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryVoronoi, {\n        data: data\n      }));\n      const paths = container.querySelectorAll(\"path\");\n      expect(paths).toHaveLength(2);\n    });","file":"jest/victory-voronoi/victory-voronoi.test.js","skipped":false,"dir":"test"},{"name":"attaches an event to the parent svg","suites":["components/victory-voronoi","event handling"],"updatePoint":{"line":124,"column":43,"index":4010},"line":124,"code":"    it(\"attaches an event to the parent svg\", () => {\n      const clickHandler = jest.fn();\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryVoronoi, {\n        events: [{\n          target: \"parent\",\n          eventHandlers: {\n            onClick: clickHandler\n          }\n        }]\n      }));\n      const svg = container.querySelector(\"svg\");\n      fireEvent.click(svg);\n      expect(clickHandler).toBeCalled(); // the first argument is the standard evt object\n\n      expect(Object.keys(clickHandler.mock.calls[0][1])).toEqual(expect.arrayContaining([\"data\", \"scale\", \"width\", \"height\", \"style\"]));\n    });","file":"jest/victory-voronoi/victory-voronoi.test.js","skipped":false,"dir":"test"},{"name":"attaches an event to data","suites":["components/victory-voronoi","event handling"],"updatePoint":{"line":142,"column":33,"index":4649},"line":142,"code":"    it(\"attaches an event to data\", () => {\n      const clickHandler = jest.fn();\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryVoronoi, {\n        events: [{\n          target: \"data\",\n          eventHandlers: {\n            onClick: clickHandler\n          }\n        }]\n      }));\n      const data = container.querySelectorAll(\"path\");\n      expect(data).toHaveLength(51);\n      data.forEach((node, index) => {\n        clickHandler.mockClear();\n        fireEvent.click(node);\n        expect(clickHandler).toBeCalled(); // the first argument is the standard evt object\n\n        const [, evProps, evIndex] = clickHandler.mock.calls[0];\n        expect(evProps).toMatchObject({\n          id: `voronoi-data-${index}`\n        });\n        expect(evIndex).toEqual(`${index}`);\n      });\n    });","file":"jest/victory-voronoi/victory-voronoi.test.js","skipped":false,"dir":"test"},{"name":"attaches an event to a label","suites":["components/victory-voronoi","event handling"],"updatePoint":{"line":168,"column":36,"index":5481},"line":168,"code":"    it(\"attaches an event to a label\", () => {\n      const clickHandler = jest.fn();\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryVoronoi, {\n        label: \"okay\",\n        events: [{\n          target: \"labels\",\n          eventHandlers: {\n            onClick: clickHandler\n          }\n        }]\n      }));\n      const labels = container.querySelectorAll(\"text\"); // TODO: figure out why there's no labels rendering?\n\n      expect(labels).toHaveLength(0);\n      labels.forEach((node, index) => {\n        clickHandler.mockClear();\n        fireEvent.click(node);\n        expect(clickHandler).toBeCalled(); // the first argument is the standard evt object\n\n        const [, evProps, evIndex] = clickHandler.mock.calls[0];\n        expect(evProps).toMatchObject({\n          text: \"okay\"\n        });\n        expect(evIndex).toEqual(`${index}`);\n      });\n    });","file":"jest/victory-voronoi/victory-voronoi.test.js","skipped":false,"dir":"test"},{"name":"adds an aria role to the path area","suites":["components/victory-voronoi","accessibility"],"updatePoint":{"line":198,"column":42,"index":6430},"line":198,"code":"    it(\"adds an aria role to the path area\", () => {\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryVoronoi, null));\n      const paths = container.querySelectorAll(\"path\");\n      expect(paths).toHaveLength(51);\n      paths.forEach(p => {\n        expect(p).toHaveAttribute(\"role\", \"presentation\");\n      });\n    });","file":"jest/victory-voronoi/victory-voronoi.test.js","skipped":false,"dir":"test"},{"name":"adds an aria-label and tabindex to Voronoi primitive","suites":["components/victory-voronoi","accessibility"],"updatePoint":{"line":208,"column":60,"index":6806},"line":208,"code":"    it(\"adds an aria-label and tabindex to Voronoi primitive\", () => {\n      const data = range(3, 6).map(x => ({\n        x,\n        y: random(5)\n      }));\n      const {\n        container\n      } = render( /*#__PURE__*/React.createElement(VictoryVoronoi, {\n        data: data,\n        dataComponent: /*#__PURE__*/React.createElement(Voronoi, {\n          ariaLabel: ({\n            datum\n          }) => `${datum.x}`,\n          tabIndex: ({\n            index\n          }) => index + 6\n        })\n      }));\n      const paths = container.querySelectorAll(\"path\");\n      expect(paths).toHaveLength(3);\n      paths.forEach((p, i) => {\n        expect(p).toHaveAttribute(\"aria-label\", `${data[i].x}`);\n        expect(p).toHaveAttribute(\"tabindex\", `${i + 6}`);\n      });\n    });","file":"jest/victory-voronoi/victory-voronoi.test.js","skipped":false,"dir":"test"},{"name":"exports VictoryAnimation","suites":["victory","exports victory components"],"updatePoint":{"line":4,"column":32,"index":146},"line":4,"code":"    it(\"exports VictoryAnimation\", () => {\n      expect(Victory.VictoryAnimation).toBeDefined();\n    });","file":"jest/victory/victory.test.js","skipped":false,"dir":"test"},{"name":"exports VictoryArea","suites":["victory","exports victory components"],"updatePoint":{"line":7,"column":27,"index":246},"line":7,"code":"    it(\"exports VictoryArea\", () => {\n      expect(Victory.VictoryArea).toBeDefined();\n    });","file":"jest/victory/victory.test.js","skipped":false,"dir":"test"},{"name":"exports VictoryAxis","suites":["victory","exports victory components"],"updatePoint":{"line":10,"column":27,"index":341},"line":10,"code":"    it(\"exports VictoryAxis\", () => {\n      expect(Victory.VictoryAxis).toBeDefined();\n    });","file":"jest/victory/victory.test.js","skipped":false,"dir":"test"},{"name":"exports VictoryBar","suites":["victory","exports victory components"],"updatePoint":{"line":13,"column":26,"index":435},"line":13,"code":"    it(\"exports VictoryBar\", () => {\n      expect(Victory.VictoryBar).toBeDefined();\n    });","file":"jest/victory/victory.test.js","skipped":false,"dir":"test"},{"name":"exports VictoryBoxPlot","suites":["victory","exports victory components"],"updatePoint":{"line":16,"column":30,"index":532},"line":16,"code":"    it(\"exports VictoryBoxPlot\", () => {\n      expect(Victory.VictoryBoxPlot).toBeDefined();\n    });","file":"jest/victory/victory.test.js","skipped":false,"dir":"test"},{"name":"exports VictoryBrushContainer","suites":["victory","exports victory components"],"updatePoint":{"line":19,"column":37,"index":640},"line":19,"code":"    it(\"exports VictoryBrushContainer\", () => {\n      expect(Victory.VictoryBrushContainer).toBeDefined();\n    });","file":"jest/victory/victory.test.js","skipped":false,"dir":"test"},{"name":"exports VictoryBrushLine","suites":["victory","exports victory components"],"updatePoint":{"line":22,"column":32,"index":750},"line":22,"code":"    it(\"exports VictoryBrushLine\", () => {\n      expect(Victory.VictoryBrushLine).toBeDefined();\n    });","file":"jest/victory/victory.test.js","skipped":false,"dir":"test"},{"name":"exports VictoryCandlestick","suites":["victory","exports victory components"],"updatePoint":{"line":25,"column":34,"index":857},"line":25,"code":"    it(\"exports VictoryCandlestick\", () => {\n      expect(Victory.VictoryCandlestick).toBeDefined();\n    });","file":"jest/victory/victory.test.js","skipped":false,"dir":"test"},{"name":"exports VictoryChart","suites":["victory","exports victory components"],"updatePoint":{"line":28,"column":28,"index":960},"line":28,"code":"    it(\"exports VictoryChart\", () => {\n      expect(Victory.VictoryChart).toBeDefined();\n    });","file":"jest/victory/victory.test.js","skipped":false,"dir":"test"},{"name":"exports VictoryClipContainer","suites":["victory","exports victory components"],"updatePoint":{"line":31,"column":36,"index":1065},"line":31,"code":"    it(\"exports VictoryClipContainer\", () => {\n      expect(Victory.VictoryClipContainer).toBeDefined();\n    });","file":"jest/victory/victory.test.js","skipped":false,"dir":"test"},{"name":"exports VictoryContainer","suites":["victory","exports victory components"],"updatePoint":{"line":34,"column":32,"index":1174},"line":34,"code":"    it(\"exports VictoryContainer\", () => {\n      expect(Victory.VictoryContainer).toBeDefined();\n    });","file":"jest/victory/victory.test.js","skipped":false,"dir":"test"},{"name":"exports VictoryCursorContainer","suites":["victory","exports victory components"],"updatePoint":{"line":37,"column":38,"index":1285},"line":37,"code":"    it(\"exports VictoryCursorContainer\", () => {\n      expect(Victory.VictoryCursorContainer).toBeDefined();\n    });","file":"jest/victory/victory.test.js","skipped":false,"dir":"test"},{"name":"exports VictoryErrorBar","suites":["victory","exports victory components"],"updatePoint":{"line":40,"column":31,"index":1395},"line":40,"code":"    it(\"exports VictoryErrorBar\", () => {\n      expect(Victory.VictoryErrorBar).toBeDefined();\n    });","file":"jest/victory/victory.test.js","skipped":false,"dir":"test"},{"name":"exports VictoryGroup","suites":["victory","exports victory components"],"updatePoint":{"line":43,"column":28,"index":1495},"line":43,"code":"    it(\"exports VictoryGroup\", () => {\n      expect(Victory.VictoryGroup).toBeDefined();\n    });","file":"jest/victory/victory.test.js","skipped":false,"dir":"test"},{"name":"exports VictoryLabel","suites":["victory","exports victory components"],"updatePoint":{"line":46,"column":28,"index":1592},"line":46,"code":"    it(\"exports VictoryLabel\", () => {\n      expect(Victory.VictoryLabel).toBeDefined();\n    });","file":"jest/victory/victory.test.js","skipped":false,"dir":"test"},{"name":"exports VictoryLegend","suites":["victory","exports victory components"],"updatePoint":{"line":49,"column":29,"index":1690},"line":49,"code":"    it(\"exports VictoryLegend\", () => {\n      expect(Victory.VictoryLegend).toBeDefined();\n    });","file":"jest/victory/victory.test.js","skipped":false,"dir":"test"},{"name":"exports VictoryLine","suites":["victory","exports victory components"],"updatePoint":{"line":52,"column":27,"index":1787},"line":52,"code":"    it(\"exports VictoryLine\", () => {\n      expect(Victory.VictoryLine).toBeDefined();\n    });","file":"jest/victory/victory.test.js","skipped":false,"dir":"test"},{"name":"exports VictoryPie","suites":["victory","exports victory components"],"updatePoint":{"line":55,"column":26,"index":1881},"line":55,"code":"    it(\"exports VictoryPie\", () => {\n      expect(Victory.VictoryPie).toBeDefined();\n    });","file":"jest/victory/victory.test.js","skipped":false,"dir":"test"},{"name":"exports VictoryPolarAxis","suites":["victory","exports victory components"],"updatePoint":{"line":58,"column":32,"index":1980},"line":58,"code":"    it(\"exports VictoryPolarAxis\", () => {\n      expect(Victory.VictoryPolarAxis).toBeDefined();\n    });","file":"jest/victory/victory.test.js","skipped":false,"dir":"test"},{"name":"exports VictoryPortal","suites":["victory","exports victory components"],"updatePoint":{"line":61,"column":29,"index":2082},"line":61,"code":"    it(\"exports VictoryPortal\", () => {\n      expect(Victory.VictoryPortal).toBeDefined();\n    });","file":"jest/victory/victory.test.js","skipped":false,"dir":"test"},{"name":"exports VictoryScatter","suites":["victory","exports victory components"],"updatePoint":{"line":64,"column":30,"index":2182},"line":64,"code":"    it(\"exports VictoryScatter\", () => {\n      expect(Victory.VictoryScatter).toBeDefined();\n    });","file":"jest/victory/victory.test.js","skipped":false,"dir":"test"},{"name":"exports VictorySelectionContainer","suites":["victory","exports victory components"],"updatePoint":{"line":67,"column":41,"index":2294},"line":67,"code":"    it(\"exports VictorySelectionContainer\", () => {\n      expect(Victory.VictorySelectionContainer).toBeDefined();\n    });","file":"jest/victory/victory.test.js","skipped":false,"dir":"test"},{"name":"exports VictorySharedEvents","suites":["victory","exports victory components"],"updatePoint":{"line":70,"column":35,"index":2411},"line":70,"code":"    it(\"exports VictorySharedEvents\", () => {\n      expect(Victory.VictorySharedEvents).toBeDefined();\n    });","file":"jest/victory/victory.test.js","skipped":false,"dir":"test"},{"name":"exports VictoryStack","suites":["victory","exports victory components"],"updatePoint":{"line":73,"column":28,"index":2515},"line":73,"code":"    it(\"exports VictoryStack\", () => {\n      expect(Victory.VictoryStack).toBeDefined();\n    });","file":"jest/victory/victory.test.js","skipped":false,"dir":"test"},{"name":"exports VictoryTheme","suites":["victory","exports victory components"],"updatePoint":{"line":76,"column":28,"index":2612},"line":76,"code":"    it(\"exports VictoryTheme\", () => {\n      expect(Victory.VictoryTheme).toBeDefined();\n    });","file":"jest/victory/victory.test.js","skipped":false,"dir":"test"},{"name":"exports VictoryTransition","suites":["victory","exports victory components"],"updatePoint":{"line":79,"column":33,"index":2714},"line":79,"code":"    it(\"exports VictoryTransition\", () => {\n      expect(Victory.VictoryTransition).toBeDefined();\n    });","file":"jest/victory/victory.test.js","skipped":false,"dir":"test"},{"name":"exports VictoryTooltip","suites":["victory","exports victory components"],"updatePoint":{"line":82,"column":30,"index":2818},"line":82,"code":"    it(\"exports VictoryTooltip\", () => {\n      expect(Victory.VictoryTooltip).toBeDefined();\n    });","file":"jest/victory/victory.test.js","skipped":false,"dir":"test"},{"name":"exports VictoryVoronoi","suites":["victory","exports victory components"],"updatePoint":{"line":85,"column":30,"index":2919},"line":85,"code":"    it(\"exports VictoryVoronoi\", () => {\n      expect(Victory.VictoryVoronoi).toBeDefined();\n    });","file":"jest/victory/victory.test.js","skipped":false,"dir":"test"},{"name":"exports VictoryVoronoiContainer","suites":["victory","exports victory components"],"updatePoint":{"line":88,"column":39,"index":3029},"line":88,"code":"    it(\"exports VictoryVoronoiContainer\", () => {\n      expect(Victory.VictoryVoronoiContainer).toBeDefined();\n    });","file":"jest/victory/victory.test.js","skipped":false,"dir":"test"},{"name":"exports VictoryZoomContainer","suites":["victory","exports victory components"],"updatePoint":{"line":91,"column":36,"index":3145},"line":91,"code":"    it(\"exports VictoryZoomContainer\", () => {\n      expect(Victory.VictoryZoomContainer).toBeDefined();\n    });","file":"jest/victory/victory.test.js","skipped":false,"dir":"test"},{"name":"exports Area","suites":["victory","exports primitive components"],"updatePoint":{"line":97,"column":20,"index":3341},"line":97,"code":"    it(\"exports Area\", () => {\n      expect(Victory.Area).toBeDefined();\n    });","file":"jest/victory/victory.test.js","skipped":false,"dir":"test"},{"name":"exports Bar","suites":["victory","exports primitive components"],"updatePoint":{"line":100,"column":19,"index":3421},"line":100,"code":"    it(\"exports Bar\", () => {\n      expect(Victory.Bar).toBeDefined();\n    });","file":"jest/victory/victory.test.js","skipped":false,"dir":"test"},{"name":"exports Border","suites":["victory","exports primitive components"],"updatePoint":{"line":103,"column":22,"index":3503},"line":103,"code":"    it(\"exports Border\", () => {\n      expect(Victory.Border).toBeDefined();\n    });","file":"jest/victory/victory.test.js","skipped":false,"dir":"test"},{"name":"exports Candle","suites":["victory","exports primitive components"],"updatePoint":{"line":106,"column":22,"index":3588},"line":106,"code":"    it(\"exports Candle\", () => {\n      expect(Victory.Candle).toBeDefined();\n    });","file":"jest/victory/victory.test.js","skipped":false,"dir":"test"},{"name":"exports Circle","suites":["victory","exports primitive components"],"updatePoint":{"line":109,"column":22,"index":3673},"line":109,"code":"    it(\"exports Circle\", () => {\n      expect(Victory.Circle).toBeDefined();\n    });","file":"jest/victory/victory.test.js","skipped":false,"dir":"test"},{"name":"exports ClipPath","suites":["victory","exports primitive components"],"updatePoint":{"line":112,"column":24,"index":3760},"line":112,"code":"    it(\"exports ClipPath\", () => {\n      expect(Victory.ClipPath).toBeDefined();\n    });","file":"jest/victory/victory.test.js","skipped":false,"dir":"test"},{"name":"exports Curve","suites":["victory","exports primitive components"],"updatePoint":{"line":115,"column":21,"index":3846},"line":115,"code":"    it(\"exports Curve\", () => {\n      expect(Victory.Curve).toBeDefined();\n    });","file":"jest/victory/victory.test.js","skipped":false,"dir":"test"},{"name":"exports ErrorBar","suites":["victory","exports primitive components"],"updatePoint":{"line":118,"column":24,"index":3932},"line":118,"code":"    it(\"exports ErrorBar\", () => {\n      expect(Victory.ErrorBar).toBeDefined();\n    });","file":"jest/victory/victory.test.js","skipped":false,"dir":"test"},{"name":"exports Flyout","suites":["victory","exports primitive components"],"updatePoint":{"line":121,"column":22,"index":4019},"line":121,"code":"    it(\"exports Flyout\", () => {\n      expect(Victory.Flyout).toBeDefined();\n    });","file":"jest/victory/victory.test.js","skipped":false,"dir":"test"},{"name":"exports LineSegment","suites":["victory","exports primitive components"],"updatePoint":{"line":124,"column":27,"index":4109},"line":124,"code":"    it(\"exports LineSegment\", () => {\n      expect(Victory.LineSegment).toBeDefined();\n    });","file":"jest/victory/victory.test.js","skipped":false,"dir":"test"},{"name":"exports Line","suites":["victory","exports primitive components"],"updatePoint":{"line":127,"column":20,"index":4197},"line":127,"code":"    it(\"exports Line\", () => {\n      expect(Victory.Line).toBeDefined();\n    });","file":"jest/victory/victory.test.js","skipped":false,"dir":"test"},{"name":"exports Path","suites":["victory","exports primitive components"],"updatePoint":{"line":130,"column":20,"index":4278},"line":130,"code":"    it(\"exports Path\", () => {\n      expect(Victory.Path).toBeDefined();\n    });","file":"jest/victory/victory.test.js","skipped":false,"dir":"test"},{"name":"exports Point","suites":["victory","exports primitive components"],"updatePoint":{"line":133,"column":21,"index":4360},"line":133,"code":"    it(\"exports Point\", () => {\n      expect(Victory.Point).toBeDefined();\n    });","file":"jest/victory/victory.test.js","skipped":false,"dir":"test"},{"name":"exports Rect","suites":["victory","exports primitive components"],"updatePoint":{"line":136,"column":20,"index":4442},"line":136,"code":"    it(\"exports Rect\", () => {\n      expect(Victory.Rect).toBeDefined();\n    });","file":"jest/victory/victory.test.js","skipped":false,"dir":"test"},{"name":"exports Slice","suites":["victory","exports primitive components"],"updatePoint":{"line":139,"column":21,"index":4524},"line":139,"code":"    it(\"exports Slice\", () => {\n      expect(Victory.Slice).toBeDefined();\n    });","file":"jest/victory/victory.test.js","skipped":false,"dir":"test"},{"name":"exports Text","suites":["victory","exports primitive components"],"updatePoint":{"line":142,"column":20,"index":4606},"line":142,"code":"    it(\"exports Text\", () => {\n      expect(Victory.Text).toBeDefined();\n    });","file":"jest/victory/victory.test.js","skipped":false,"dir":"test"},{"name":"exports TSpan","suites":["victory","exports primitive components"],"updatePoint":{"line":145,"column":21,"index":4688},"line":145,"code":"    it(\"exports TSpan\", () => {\n      expect(Victory.TSpan).toBeDefined();\n    });","file":"jest/victory/victory.test.js","skipped":false,"dir":"test"},{"name":"exports Voronoi","suites":["victory","exports primitive components"],"updatePoint":{"line":148,"column":23,"index":4773},"line":148,"code":"    it(\"exports Voronoi\", () => {\n      expect(Victory.Voronoi).toBeDefined();\n    });","file":"jest/victory/victory.test.js","skipped":false,"dir":"test"},{"name":"exports Whisker","suites":["victory","exports primitive components"],"updatePoint":{"line":151,"column":23,"index":4860},"line":151,"code":"    it(\"exports Whisker\", () => {\n      expect(Victory.Whisker).toBeDefined();\n    });","file":"jest/victory/victory.test.js","skipped":false,"dir":"test"},{"name":"exports addEvents","suites":["victory","exports helper components"],"updatePoint":{"line":156,"column":25,"index":5003},"line":156,"code":"    it(\"exports addEvents\", () => {\n      expect(Victory.addEvents).toBeDefined();\n    });","file":"jest/victory/victory.test.js","skipped":false,"dir":"test"},{"name":"exports Axis","suites":["victory","exports helper components"],"updatePoint":{"line":159,"column":20,"index":5089},"line":159,"code":"    it(\"exports Axis\", () => {\n      expect(Victory.Axis).toBeDefined();\n    });","file":"jest/victory/victory.test.js","skipped":false,"dir":"test"},{"name":"exports brushContainerMixin","suites":["victory","exports helper components"],"updatePoint":{"line":162,"column":35,"index":5185},"line":162,"code":"    it(\"exports brushContainerMixin\", () => {\n      expect(Victory.brushContainerMixin).toBeDefined();\n    });","file":"jest/victory/victory.test.js","skipped":false,"dir":"test"},{"name":"exports BrushHelpers","suites":["victory","exports helper components"],"updatePoint":{"line":165,"column":28,"index":5289},"line":165,"code":"    it(\"exports BrushHelpers\", () => {\n      expect(Victory.BrushHelpers).toBeDefined();\n    });","file":"jest/victory/victory.test.js","skipped":false,"dir":"test"},{"name":"exports Collection","suites":["victory","exports helper components"],"updatePoint":{"line":168,"column":26,"index":5384},"line":168,"code":"    it(\"exports Collection\", () => {\n      expect(Victory.Collection).toBeDefined();\n    });","file":"jest/victory/victory.test.js","skipped":false,"dir":"test"},{"name":"exports combineContainerMixins","suites":["victory","exports helper components"],"updatePoint":{"line":171,"column":38,"index":5489},"line":171,"code":"    it(\"exports combineContainerMixins\", () => {\n      expect(Victory.combineContainerMixins).toBeDefined();\n    });","file":"jest/victory/victory.test.js","skipped":false,"dir":"test"},{"name":"exports createContainer","suites":["victory","exports helper components"],"updatePoint":{"line":174,"column":31,"index":5599},"line":174,"code":"    it(\"exports createContainer\", () => {\n      expect(Victory.createContainer).toBeDefined();\n    });","file":"jest/victory/victory.test.js","skipped":false,"dir":"test"},{"name":"exports cursorContainerMixin","suites":["victory","exports helper components"],"updatePoint":{"line":177,"column":36,"index":5707},"line":177,"code":"    it(\"exports cursorContainerMixin\", () => {\n      expect(Victory.cursorContainerMixin).toBeDefined();\n    });","file":"jest/victory/victory.test.js","skipped":false,"dir":"test"},{"name":"exports CursorHelpers","suites":["victory","exports helper components"],"updatePoint":{"line":180,"column":29,"index":5813},"line":180,"code":"    it(\"exports CursorHelpers\", () => {\n      expect(Victory.CursorHelpers).toBeDefined();\n    });","file":"jest/victory/victory.test.js","skipped":false,"dir":"test"},{"name":"exports Data","suites":["victory","exports helper components"],"updatePoint":{"line":183,"column":20,"index":5903},"line":183,"code":"    it(\"exports Data\", () => {\n      expect(Victory.Data).toBeDefined();\n    });","file":"jest/victory/victory.test.js","skipped":false,"dir":"test"},{"name":"exports DefaultTransitions","suites":["victory","exports helper components"],"updatePoint":{"line":186,"column":34,"index":5998},"line":186,"code":"    it(\"exports DefaultTransitions\", () => {\n      expect(Victory.DefaultTransitions).toBeDefined();\n    });","file":"jest/victory/victory.test.js","skipped":false,"dir":"test"},{"name":"exports Domain","suites":["victory","exports helper components"],"updatePoint":{"line":189,"column":22,"index":6095},"line":189,"code":"    it(\"exports Domain\", () => {\n      expect(Victory.Domain).toBeDefined();\n    });","file":"jest/victory/victory.test.js","skipped":false,"dir":"test"},{"name":"exports Events","suites":["victory","exports helper components"],"updatePoint":{"line":192,"column":22,"index":6180},"line":192,"code":"    it(\"exports Events\", () => {\n      expect(Victory.Events).toBeDefined();\n    });","file":"jest/victory/victory.test.js","skipped":false,"dir":"test"},{"name":"exports Helpers","suites":["victory","exports helper components"],"updatePoint":{"line":195,"column":23,"index":6266},"line":195,"code":"    it(\"exports Helpers\", () => {\n      expect(Victory.Helpers).toBeDefined();\n    });","file":"jest/victory/victory.test.js","skipped":false,"dir":"test"},{"name":"exports LabelHelpers","suites":["victory","exports helper components"],"updatePoint":{"line":198,"column":28,"index":6358},"line":198,"code":"    it(\"exports LabelHelpers\", () => {\n      expect(Victory.LabelHelpers).toBeDefined();\n    });","file":"jest/victory/victory.test.js","skipped":false,"dir":"test"},{"name":"exports Log","suites":["victory","exports helper components"],"updatePoint":{"line":201,"column":19,"index":6446},"line":201,"code":"    it(\"exports Log\", () => {\n      expect(Victory.Log).toBeDefined();\n    });","file":"jest/victory/victory.test.js","skipped":false,"dir":"test"},{"name":"exports makeCreateContainerFunction","suites":["victory","exports helper components"],"updatePoint":{"line":204,"column":43,"index":6549},"line":204,"code":"    it(\"exports makeCreateContainerFunction\", () => {\n      expect(Victory.makeCreateContainerFunction).toBeDefined();\n    });","file":"jest/victory/victory.test.js","skipped":false,"dir":"test"},{"name":"exports Portal","suites":["victory","exports helper components"],"updatePoint":{"line":207,"column":22,"index":6655},"line":207,"code":"    it(\"exports Portal\", () => {\n      expect(Victory.Portal).toBeDefined();\n    });","file":"jest/victory/victory.test.js","skipped":false,"dir":"test"},{"name":"exports PropTypes","suites":["victory","exports helper components"],"updatePoint":{"line":210,"column":25,"index":6743},"line":210,"code":"    it(\"exports PropTypes\", () => {\n      expect(Victory.PropTypes).toBeDefined();\n    });","file":"jest/victory/victory.test.js","skipped":false,"dir":"test"},{"name":"exports RawZoomHelpers","suites":["victory","exports helper components"],"updatePoint":{"line":213,"column":30,"index":6839},"line":213,"code":"    it(\"exports RawZoomHelpers\", () => {\n      expect(Victory.RawZoomHelpers).toBeDefined();\n    });","file":"jest/victory/victory.test.js","skipped":false,"dir":"test"},{"name":"exports Scale","suites":["victory","exports helper components"],"updatePoint":{"line":216,"column":21,"index":6931},"line":216,"code":"    it(\"exports Scale\", () => {\n      expect(Victory.Scale).toBeDefined();\n    });","file":"jest/victory/victory.test.js","skipped":false,"dir":"test"},{"name":"exports Selection","suites":["victory","exports helper components"],"updatePoint":{"line":219,"column":25,"index":7018},"line":219,"code":"    it(\"exports Selection\", () => {\n      expect(Victory.Selection).toBeDefined();\n    });","file":"jest/victory/victory.test.js","skipped":false,"dir":"test"},{"name":"exports selectionContainerMixin","suites":["victory","exports helper components"],"updatePoint":{"line":222,"column":39,"index":7123},"line":222,"code":"    it(\"exports selectionContainerMixin\", () => {\n      expect(Victory.selectionContainerMixin).toBeDefined();\n    });","file":"jest/victory/victory.test.js","skipped":false,"dir":"test"},{"name":"exports SelectionHelpers","suites":["victory","exports helper components"],"updatePoint":{"line":225,"column":32,"index":7235},"line":225,"code":"    it(\"exports SelectionHelpers\", () => {\n      expect(Victory.SelectionHelpers).toBeDefined();\n    });","file":"jest/victory/victory.test.js","skipped":false,"dir":"test"},{"name":"exports Style","suites":["victory","exports helper components"],"updatePoint":{"line":228,"column":21,"index":7329},"line":228,"code":"    it(\"exports Style\", () => {\n      expect(Victory.Style).toBeDefined();\n    });","file":"jest/victory/victory.test.js","skipped":false,"dir":"test"},{"name":"exports TextSize","suites":["victory","exports helper components"],"updatePoint":{"line":231,"column":24,"index":7415},"line":231,"code":"    it(\"exports TextSize\", () => {\n      expect(Victory.TextSize).toBeDefined();\n    });","file":"jest/victory/victory.test.js","skipped":false,"dir":"test"},{"name":"exports Transitions","suites":["victory","exports helper components"],"updatePoint":{"line":234,"column":27,"index":7507},"line":234,"code":"    it(\"exports Transitions\", () => {\n      expect(Victory.Transitions).toBeDefined();\n    });","file":"jest/victory/victory.test.js","skipped":false,"dir":"test"},{"name":"exports voronoiContainerMixin","suites":["victory","exports helper components"],"updatePoint":{"line":237,"column":37,"index":7612},"line":237,"code":"    it(\"exports voronoiContainerMixin\", () => {\n      expect(Victory.voronoiContainerMixin).toBeDefined();\n    });","file":"jest/victory/victory.test.js","skipped":false,"dir":"test"},{"name":"exports VoronoiHelpers","suites":["victory","exports helper components"],"updatePoint":{"line":240,"column":30,"index":7720},"line":240,"code":"    it(\"exports VoronoiHelpers\", () => {\n      expect(Victory.VoronoiHelpers).toBeDefined();\n    });","file":"jest/victory/victory.test.js","skipped":false,"dir":"test"},{"name":"exports Wrapper","suites":["victory","exports helper components"],"updatePoint":{"line":243,"column":23,"index":7814},"line":243,"code":"    it(\"exports Wrapper\", () => {\n      expect(Victory.Wrapper).toBeDefined();\n    });","file":"jest/victory/victory.test.js","skipped":false,"dir":"test"},{"name":"exports zoomContainerMixin","suites":["victory","exports helper components"],"updatePoint":{"line":246,"column":34,"index":7912},"line":246,"code":"    it(\"exports zoomContainerMixin\", () => {\n      expect(Victory.zoomContainerMixin).toBeDefined();\n    });","file":"jest/victory/victory.test.js","skipped":false,"dir":"test"},{"name":"exports ZoomHelpers","suites":["victory","exports helper components"],"updatePoint":{"line":249,"column":27,"index":8014},"line":249,"code":"    it(\"exports ZoomHelpers\", () => {\n      expect(Victory.ZoomHelpers).toBeDefined();\n    });","file":"jest/victory/victory.test.js","skipped":false,"dir":"test"},{"name":"exports VictoryAnimation","suites":["victory","exports victory components"],"updatePoint":{"line":9,"column":32,"index":211},"line":9,"code":"    it(\"exports VictoryAnimation\", () => {\n      expect(Victory.VictoryAnimation).toBeDefined();\n    });","file":"node/victory.test.js","skipped":false,"dir":"test"},{"name":"exports VictoryArea","suites":["victory","exports victory components"],"updatePoint":{"line":12,"column":27,"index":311},"line":12,"code":"    it(\"exports VictoryArea\", () => {\n      expect(Victory.VictoryArea).toBeDefined();\n    });","file":"node/victory.test.js","skipped":false,"dir":"test"},{"name":"exports VictoryAxis","suites":["victory","exports victory components"],"updatePoint":{"line":15,"column":27,"index":406},"line":15,"code":"    it(\"exports VictoryAxis\", () => {\n      expect(Victory.VictoryAxis).toBeDefined();\n    });","file":"node/victory.test.js","skipped":false,"dir":"test"},{"name":"exports VictoryBar","suites":["victory","exports victory components"],"updatePoint":{"line":18,"column":26,"index":500},"line":18,"code":"    it(\"exports VictoryBar\", () => {\n      expect(Victory.VictoryBar).toBeDefined();\n    });","file":"node/victory.test.js","skipped":false,"dir":"test"},{"name":"exports VictoryBoxPlot","suites":["victory","exports victory components"],"updatePoint":{"line":21,"column":30,"index":597},"line":21,"code":"    it(\"exports VictoryBoxPlot\", () => {\n      expect(Victory.VictoryBoxPlot).toBeDefined();\n    });","file":"node/victory.test.js","skipped":false,"dir":"test"},{"name":"exports VictoryBrushContainer","suites":["victory","exports victory components"],"updatePoint":{"line":24,"column":37,"index":705},"line":24,"code":"    it(\"exports VictoryBrushContainer\", () => {\n      expect(Victory.VictoryBrushContainer).toBeDefined();\n    });","file":"node/victory.test.js","skipped":false,"dir":"test"},{"name":"exports VictoryBrushLine","suites":["victory","exports victory components"],"updatePoint":{"line":27,"column":32,"index":815},"line":27,"code":"    it(\"exports VictoryBrushLine\", () => {\n      expect(Victory.VictoryBrushLine).toBeDefined();\n    });","file":"node/victory.test.js","skipped":false,"dir":"test"},{"name":"exports VictoryCandlestick","suites":["victory","exports victory components"],"updatePoint":{"line":30,"column":34,"index":922},"line":30,"code":"    it(\"exports VictoryCandlestick\", () => {\n      expect(Victory.VictoryCandlestick).toBeDefined();\n    });","file":"node/victory.test.js","skipped":false,"dir":"test"},{"name":"exports VictoryChart","suites":["victory","exports victory components"],"updatePoint":{"line":33,"column":28,"index":1025},"line":33,"code":"    it(\"exports VictoryChart\", () => {\n      expect(Victory.VictoryChart).toBeDefined();\n    });","file":"node/victory.test.js","skipped":false,"dir":"test"},{"name":"exports VictoryClipContainer","suites":["victory","exports victory components"],"updatePoint":{"line":36,"column":36,"index":1130},"line":36,"code":"    it(\"exports VictoryClipContainer\", () => {\n      expect(Victory.VictoryClipContainer).toBeDefined();\n    });","file":"node/victory.test.js","skipped":false,"dir":"test"},{"name":"exports VictoryContainer","suites":["victory","exports victory components"],"updatePoint":{"line":39,"column":32,"index":1239},"line":39,"code":"    it(\"exports VictoryContainer\", () => {\n      expect(Victory.VictoryContainer).toBeDefined();\n    });","file":"node/victory.test.js","skipped":false,"dir":"test"},{"name":"exports VictoryCursorContainer","suites":["victory","exports victory components"],"updatePoint":{"line":42,"column":38,"index":1350},"line":42,"code":"    it(\"exports VictoryCursorContainer\", () => {\n      expect(Victory.VictoryCursorContainer).toBeDefined();\n    });","file":"node/victory.test.js","skipped":false,"dir":"test"},{"name":"exports VictoryErrorBar","suites":["victory","exports victory components"],"updatePoint":{"line":45,"column":31,"index":1460},"line":45,"code":"    it(\"exports VictoryErrorBar\", () => {\n      expect(Victory.VictoryErrorBar).toBeDefined();\n    });","file":"node/victory.test.js","skipped":false,"dir":"test"},{"name":"exports VictoryGroup","suites":["victory","exports victory components"],"updatePoint":{"line":48,"column":28,"index":1560},"line":48,"code":"    it(\"exports VictoryGroup\", () => {\n      expect(Victory.VictoryGroup).toBeDefined();\n    });","file":"node/victory.test.js","skipped":false,"dir":"test"},{"name":"exports VictoryLabel","suites":["victory","exports victory components"],"updatePoint":{"line":51,"column":28,"index":1657},"line":51,"code":"    it(\"exports VictoryLabel\", () => {\n      expect(Victory.VictoryLabel).toBeDefined();\n    });","file":"node/victory.test.js","skipped":false,"dir":"test"},{"name":"exports VictoryLegend","suites":["victory","exports victory components"],"updatePoint":{"line":54,"column":29,"index":1755},"line":54,"code":"    it(\"exports VictoryLegend\", () => {\n      expect(Victory.VictoryLegend).toBeDefined();\n    });","file":"node/victory.test.js","skipped":false,"dir":"test"},{"name":"exports VictoryLine","suites":["victory","exports victory components"],"updatePoint":{"line":57,"column":27,"index":1852},"line":57,"code":"    it(\"exports VictoryLine\", () => {\n      expect(Victory.VictoryLine).toBeDefined();\n    });","file":"node/victory.test.js","skipped":false,"dir":"test"},{"name":"exports VictoryPie","suites":["victory","exports victory components"],"updatePoint":{"line":60,"column":26,"index":1946},"line":60,"code":"    it(\"exports VictoryPie\", () => {\n      expect(Victory.VictoryPie).toBeDefined();\n    });","file":"node/victory.test.js","skipped":false,"dir":"test"},{"name":"exports VictoryPolarAxis","suites":["victory","exports victory components"],"updatePoint":{"line":63,"column":32,"index":2045},"line":63,"code":"    it(\"exports VictoryPolarAxis\", () => {\n      expect(Victory.VictoryPolarAxis).toBeDefined();\n    });","file":"node/victory.test.js","skipped":false,"dir":"test"},{"name":"exports VictoryPortal","suites":["victory","exports victory components"],"updatePoint":{"line":66,"column":29,"index":2147},"line":66,"code":"    it(\"exports VictoryPortal\", () => {\n      expect(Victory.VictoryPortal).toBeDefined();\n    });","file":"node/victory.test.js","skipped":false,"dir":"test"},{"name":"exports VictoryScatter","suites":["victory","exports victory components"],"updatePoint":{"line":69,"column":30,"index":2247},"line":69,"code":"    it(\"exports VictoryScatter\", () => {\n      expect(Victory.VictoryScatter).toBeDefined();\n    });","file":"node/victory.test.js","skipped":false,"dir":"test"},{"name":"exports VictorySelectionContainer","suites":["victory","exports victory components"],"updatePoint":{"line":72,"column":41,"index":2359},"line":72,"code":"    it(\"exports VictorySelectionContainer\", () => {\n      expect(Victory.VictorySelectionContainer).toBeDefined();\n    });","file":"node/victory.test.js","skipped":false,"dir":"test"},{"name":"exports VictorySharedEvents","suites":["victory","exports victory components"],"updatePoint":{"line":75,"column":35,"index":2476},"line":75,"code":"    it(\"exports VictorySharedEvents\", () => {\n      expect(Victory.VictorySharedEvents).toBeDefined();\n    });","file":"node/victory.test.js","skipped":false,"dir":"test"},{"name":"exports VictoryStack","suites":["victory","exports victory components"],"updatePoint":{"line":78,"column":28,"index":2580},"line":78,"code":"    it(\"exports VictoryStack\", () => {\n      expect(Victory.VictoryStack).toBeDefined();\n    });","file":"node/victory.test.js","skipped":false,"dir":"test"},{"name":"exports VictoryTheme","suites":["victory","exports victory components"],"updatePoint":{"line":81,"column":28,"index":2677},"line":81,"code":"    it(\"exports VictoryTheme\", () => {\n      expect(Victory.VictoryTheme).toBeDefined();\n    });","file":"node/victory.test.js","skipped":false,"dir":"test"},{"name":"exports VictoryTransition","suites":["victory","exports victory components"],"updatePoint":{"line":84,"column":33,"index":2779},"line":84,"code":"    it(\"exports VictoryTransition\", () => {\n      expect(Victory.VictoryTransition).toBeDefined();\n    });","file":"node/victory.test.js","skipped":false,"dir":"test"},{"name":"exports VictoryTooltip","suites":["victory","exports victory components"],"updatePoint":{"line":87,"column":30,"index":2883},"line":87,"code":"    it(\"exports VictoryTooltip\", () => {\n      expect(Victory.VictoryTooltip).toBeDefined();\n    });","file":"node/victory.test.js","skipped":false,"dir":"test"},{"name":"exports VictoryVoronoi","suites":["victory","exports victory components"],"updatePoint":{"line":90,"column":30,"index":2984},"line":90,"code":"    it(\"exports VictoryVoronoi\", () => {\n      expect(Victory.VictoryVoronoi).toBeDefined();\n    });","file":"node/victory.test.js","skipped":false,"dir":"test"},{"name":"exports VictoryVoronoiContainer","suites":["victory","exports victory components"],"updatePoint":{"line":93,"column":39,"index":3094},"line":93,"code":"    it(\"exports VictoryVoronoiContainer\", () => {\n      expect(Victory.VictoryVoronoiContainer).toBeDefined();\n    });","file":"node/victory.test.js","skipped":false,"dir":"test"},{"name":"exports VictoryZoomContainer","suites":["victory","exports victory components"],"updatePoint":{"line":96,"column":36,"index":3210},"line":96,"code":"    it(\"exports VictoryZoomContainer\", () => {\n      expect(Victory.VictoryZoomContainer).toBeDefined();\n    });","file":"node/victory.test.js","skipped":false,"dir":"test"},{"name":"exports Area","suites":["victory","exports primitive components"],"updatePoint":{"line":102,"column":20,"index":3406},"line":102,"code":"    it(\"exports Area\", () => {\n      expect(Victory.Area).toBeDefined();\n    });","file":"node/victory.test.js","skipped":false,"dir":"test"},{"name":"exports Bar","suites":["victory","exports primitive components"],"updatePoint":{"line":105,"column":19,"index":3486},"line":105,"code":"    it(\"exports Bar\", () => {\n      expect(Victory.Bar).toBeDefined();\n    });","file":"node/victory.test.js","skipped":false,"dir":"test"},{"name":"exports Border","suites":["victory","exports primitive components"],"updatePoint":{"line":108,"column":22,"index":3568},"line":108,"code":"    it(\"exports Border\", () => {\n      expect(Victory.Border).toBeDefined();\n    });","file":"node/victory.test.js","skipped":false,"dir":"test"},{"name":"exports Candle","suites":["victory","exports primitive components"],"updatePoint":{"line":111,"column":22,"index":3653},"line":111,"code":"    it(\"exports Candle\", () => {\n      expect(Victory.Candle).toBeDefined();\n    });","file":"node/victory.test.js","skipped":false,"dir":"test"},{"name":"exports Circle","suites":["victory","exports primitive components"],"updatePoint":{"line":114,"column":22,"index":3738},"line":114,"code":"    it(\"exports Circle\", () => {\n      expect(Victory.Circle).toBeDefined();\n    });","file":"node/victory.test.js","skipped":false,"dir":"test"},{"name":"exports ClipPath","suites":["victory","exports primitive components"],"updatePoint":{"line":117,"column":24,"index":3825},"line":117,"code":"    it(\"exports ClipPath\", () => {\n      expect(Victory.ClipPath).toBeDefined();\n    });","file":"node/victory.test.js","skipped":false,"dir":"test"},{"name":"exports Curve","suites":["victory","exports primitive components"],"updatePoint":{"line":120,"column":21,"index":3911},"line":120,"code":"    it(\"exports Curve\", () => {\n      expect(Victory.Curve).toBeDefined();\n    });","file":"node/victory.test.js","skipped":false,"dir":"test"},{"name":"exports ErrorBar","suites":["victory","exports primitive components"],"updatePoint":{"line":123,"column":24,"index":3997},"line":123,"code":"    it(\"exports ErrorBar\", () => {\n      expect(Victory.ErrorBar).toBeDefined();\n    });","file":"node/victory.test.js","skipped":false,"dir":"test"},{"name":"exports Flyout","suites":["victory","exports primitive components"],"updatePoint":{"line":126,"column":22,"index":4084},"line":126,"code":"    it(\"exports Flyout\", () => {\n      expect(Victory.Flyout).toBeDefined();\n    });","file":"node/victory.test.js","skipped":false,"dir":"test"},{"name":"exports LineSegment","suites":["victory","exports primitive components"],"updatePoint":{"line":129,"column":27,"index":4174},"line":129,"code":"    it(\"exports LineSegment\", () => {\n      expect(Victory.LineSegment).toBeDefined();\n    });","file":"node/victory.test.js","skipped":false,"dir":"test"},{"name":"exports Line","suites":["victory","exports primitive components"],"updatePoint":{"line":132,"column":20,"index":4262},"line":132,"code":"    it(\"exports Line\", () => {\n      expect(Victory.Line).toBeDefined();\n    });","file":"node/victory.test.js","skipped":false,"dir":"test"},{"name":"exports Path","suites":["victory","exports primitive components"],"updatePoint":{"line":135,"column":20,"index":4343},"line":135,"code":"    it(\"exports Path\", () => {\n      expect(Victory.Path).toBeDefined();\n    });","file":"node/victory.test.js","skipped":false,"dir":"test"},{"name":"exports Point","suites":["victory","exports primitive components"],"updatePoint":{"line":138,"column":21,"index":4425},"line":138,"code":"    it(\"exports Point\", () => {\n      expect(Victory.Point).toBeDefined();\n    });","file":"node/victory.test.js","skipped":false,"dir":"test"},{"name":"exports Rect","suites":["victory","exports primitive components"],"updatePoint":{"line":141,"column":20,"index":4507},"line":141,"code":"    it(\"exports Rect\", () => {\n      expect(Victory.Rect).toBeDefined();\n    });","file":"node/victory.test.js","skipped":false,"dir":"test"},{"name":"exports Slice","suites":["victory","exports primitive components"],"updatePoint":{"line":144,"column":21,"index":4589},"line":144,"code":"    it(\"exports Slice\", () => {\n      expect(Victory.Slice).toBeDefined();\n    });","file":"node/victory.test.js","skipped":false,"dir":"test"},{"name":"exports Text","suites":["victory","exports primitive components"],"updatePoint":{"line":147,"column":20,"index":4671},"line":147,"code":"    it(\"exports Text\", () => {\n      expect(Victory.Text).toBeDefined();\n    });","file":"node/victory.test.js","skipped":false,"dir":"test"},{"name":"exports TSpan","suites":["victory","exports primitive components"],"updatePoint":{"line":150,"column":21,"index":4753},"line":150,"code":"    it(\"exports TSpan\", () => {\n      expect(Victory.TSpan).toBeDefined();\n    });","file":"node/victory.test.js","skipped":false,"dir":"test"},{"name":"exports Voronoi","suites":["victory","exports primitive components"],"updatePoint":{"line":153,"column":23,"index":4838},"line":153,"code":"    it(\"exports Voronoi\", () => {\n      expect(Victory.Voronoi).toBeDefined();\n    });","file":"node/victory.test.js","skipped":false,"dir":"test"},{"name":"exports Whisker","suites":["victory","exports primitive components"],"updatePoint":{"line":156,"column":23,"index":4925},"line":156,"code":"    it(\"exports Whisker\", () => {\n      expect(Victory.Whisker).toBeDefined();\n    });","file":"node/victory.test.js","skipped":false,"dir":"test"},{"name":"exports addEvents","suites":["victory","exports helper components"],"updatePoint":{"line":162,"column":25,"index":5110},"line":162,"code":"    it(\"exports addEvents\", () => {\n      expect(Victory.addEvents).toBeDefined();\n    });","file":"node/victory.test.js","skipped":false,"dir":"test"},{"name":"exports Axis","suites":["victory","exports helper components"],"updatePoint":{"line":165,"column":20,"index":5196},"line":165,"code":"    it(\"exports Axis\", () => {\n      expect(Victory.Axis).toBeDefined();\n    });","file":"node/victory.test.js","skipped":false,"dir":"test"},{"name":"exports brushContainerMixin","suites":["victory","exports helper components"],"updatePoint":{"line":168,"column":35,"index":5292},"line":168,"code":"    it(\"exports brushContainerMixin\", () => {\n      expect(Victory.brushContainerMixin).toBeDefined();\n    });","file":"node/victory.test.js","skipped":false,"dir":"test"},{"name":"exports BrushHelpers","suites":["victory","exports helper components"],"updatePoint":{"line":171,"column":28,"index":5396},"line":171,"code":"    it(\"exports BrushHelpers\", () => {\n      expect(Victory.BrushHelpers).toBeDefined();\n    });","file":"node/victory.test.js","skipped":false,"dir":"test"},{"name":"exports Collection","suites":["victory","exports helper components"],"updatePoint":{"line":174,"column":26,"index":5491},"line":174,"code":"    it(\"exports Collection\", () => {\n      expect(Victory.Collection).toBeDefined();\n    });","file":"node/victory.test.js","skipped":false,"dir":"test"},{"name":"exports combineContainerMixins","suites":["victory","exports helper components"],"updatePoint":{"line":177,"column":38,"index":5596},"line":177,"code":"    it(\"exports combineContainerMixins\", () => {\n      expect(Victory.combineContainerMixins).toBeDefined();\n    });","file":"node/victory.test.js","skipped":false,"dir":"test"},{"name":"exports createContainer","suites":["victory","exports helper components"],"updatePoint":{"line":180,"column":31,"index":5706},"line":180,"code":"    it(\"exports createContainer\", () => {\n      expect(Victory.createContainer).toBeDefined();\n    });","file":"node/victory.test.js","skipped":false,"dir":"test"},{"name":"exports cursorContainerMixin","suites":["victory","exports helper components"],"updatePoint":{"line":183,"column":36,"index":5814},"line":183,"code":"    it(\"exports cursorContainerMixin\", () => {\n      expect(Victory.cursorContainerMixin).toBeDefined();\n    });","file":"node/victory.test.js","skipped":false,"dir":"test"},{"name":"exports CursorHelpers","suites":["victory","exports helper components"],"updatePoint":{"line":186,"column":29,"index":5920},"line":186,"code":"    it(\"exports CursorHelpers\", () => {\n      expect(Victory.CursorHelpers).toBeDefined();\n    });","file":"node/victory.test.js","skipped":false,"dir":"test"},{"name":"exports Data","suites":["victory","exports helper components"],"updatePoint":{"line":189,"column":20,"index":6010},"line":189,"code":"    it(\"exports Data\", () => {\n      expect(Victory.Data).toBeDefined();\n    });","file":"node/victory.test.js","skipped":false,"dir":"test"},{"name":"exports DefaultTransitions","suites":["victory","exports helper components"],"updatePoint":{"line":192,"column":34,"index":6105},"line":192,"code":"    it(\"exports DefaultTransitions\", () => {\n      expect(Victory.DefaultTransitions).toBeDefined();\n    });","file":"node/victory.test.js","skipped":false,"dir":"test"},{"name":"exports Domain","suites":["victory","exports helper components"],"updatePoint":{"line":195,"column":22,"index":6202},"line":195,"code":"    it(\"exports Domain\", () => {\n      expect(Victory.Domain).toBeDefined();\n    });","file":"node/victory.test.js","skipped":false,"dir":"test"},{"name":"exports Events","suites":["victory","exports helper components"],"updatePoint":{"line":198,"column":22,"index":6287},"line":198,"code":"    it(\"exports Events\", () => {\n      expect(Victory.Events).toBeDefined();\n    });","file":"node/victory.test.js","skipped":false,"dir":"test"},{"name":"exports Helpers","suites":["victory","exports helper components"],"updatePoint":{"line":201,"column":23,"index":6373},"line":201,"code":"    it(\"exports Helpers\", () => {\n      expect(Victory.Helpers).toBeDefined();\n    });","file":"node/victory.test.js","skipped":false,"dir":"test"},{"name":"exports LabelHelpers","suites":["victory","exports helper components"],"updatePoint":{"line":204,"column":28,"index":6465},"line":204,"code":"    it(\"exports LabelHelpers\", () => {\n      expect(Victory.LabelHelpers).toBeDefined();\n    });","file":"node/victory.test.js","skipped":false,"dir":"test"},{"name":"exports Log","suites":["victory","exports helper components"],"updatePoint":{"line":207,"column":19,"index":6553},"line":207,"code":"    it(\"exports Log\", () => {\n      expect(Victory.Log).toBeDefined();\n    });","file":"node/victory.test.js","skipped":false,"dir":"test"},{"name":"exports makeCreateContainerFunction","suites":["victory","exports helper components"],"updatePoint":{"line":210,"column":43,"index":6656},"line":210,"code":"    it(\"exports makeCreateContainerFunction\", () => {\n      expect(Victory.makeCreateContainerFunction).toBeDefined();\n    });","file":"node/victory.test.js","skipped":false,"dir":"test"},{"name":"exports Portal","suites":["victory","exports helper components"],"updatePoint":{"line":213,"column":22,"index":6762},"line":213,"code":"    it(\"exports Portal\", () => {\n      expect(Victory.Portal).toBeDefined();\n    });","file":"node/victory.test.js","skipped":false,"dir":"test"},{"name":"exports PropTypes","suites":["victory","exports helper components"],"updatePoint":{"line":216,"column":25,"index":6850},"line":216,"code":"    it(\"exports PropTypes\", () => {\n      expect(Victory.PropTypes).toBeDefined();\n    });","file":"node/victory.test.js","skipped":false,"dir":"test"},{"name":"exports RawZoomHelpers","suites":["victory","exports helper components"],"updatePoint":{"line":219,"column":30,"index":6946},"line":219,"code":"    it(\"exports RawZoomHelpers\", () => {\n      expect(Victory.RawZoomHelpers).toBeDefined();\n    });","file":"node/victory.test.js","skipped":false,"dir":"test"},{"name":"exports Scale","suites":["victory","exports helper components"],"updatePoint":{"line":222,"column":21,"index":7038},"line":222,"code":"    it(\"exports Scale\", () => {\n      expect(Victory.Scale).toBeDefined();\n    });","file":"node/victory.test.js","skipped":false,"dir":"test"},{"name":"exports Selection","suites":["victory","exports helper components"],"updatePoint":{"line":225,"column":25,"index":7125},"line":225,"code":"    it(\"exports Selection\", () => {\n      expect(Victory.Selection).toBeDefined();\n    });","file":"node/victory.test.js","skipped":false,"dir":"test"},{"name":"exports selectionContainerMixin","suites":["victory","exports helper components"],"updatePoint":{"line":228,"column":39,"index":7230},"line":228,"code":"    it(\"exports selectionContainerMixin\", () => {\n      expect(Victory.selectionContainerMixin).toBeDefined();\n    });","file":"node/victory.test.js","skipped":false,"dir":"test"},{"name":"exports SelectionHelpers","suites":["victory","exports helper components"],"updatePoint":{"line":231,"column":32,"index":7342},"line":231,"code":"    it(\"exports SelectionHelpers\", () => {\n      expect(Victory.SelectionHelpers).toBeDefined();\n    });","file":"node/victory.test.js","skipped":false,"dir":"test"},{"name":"exports Style","suites":["victory","exports helper components"],"updatePoint":{"line":234,"column":21,"index":7436},"line":234,"code":"    it(\"exports Style\", () => {\n      expect(Victory.Style).toBeDefined();\n    });","file":"node/victory.test.js","skipped":false,"dir":"test"},{"name":"exports TextSize","suites":["victory","exports helper components"],"updatePoint":{"line":237,"column":24,"index":7522},"line":237,"code":"    it(\"exports TextSize\", () => {\n      expect(Victory.TextSize).toBeDefined();\n    });","file":"node/victory.test.js","skipped":false,"dir":"test"},{"name":"exports Transitions","suites":["victory","exports helper components"],"updatePoint":{"line":240,"column":27,"index":7614},"line":240,"code":"    it(\"exports Transitions\", () => {\n      expect(Victory.Transitions).toBeDefined();\n    });","file":"node/victory.test.js","skipped":false,"dir":"test"},{"name":"exports voronoiContainerMixin","suites":["victory","exports helper components"],"updatePoint":{"line":243,"column":37,"index":7719},"line":243,"code":"    it(\"exports voronoiContainerMixin\", () => {\n      expect(Victory.voronoiContainerMixin).toBeDefined();\n    });","file":"node/victory.test.js","skipped":false,"dir":"test"},{"name":"exports VoronoiHelpers","suites":["victory","exports helper components"],"updatePoint":{"line":246,"column":30,"index":7827},"line":246,"code":"    it(\"exports VoronoiHelpers\", () => {\n      expect(Victory.VoronoiHelpers).toBeDefined();\n    });","file":"node/victory.test.js","skipped":false,"dir":"test"},{"name":"exports Wrapper","suites":["victory","exports helper components"],"updatePoint":{"line":249,"column":23,"index":7921},"line":249,"code":"    it(\"exports Wrapper\", () => {\n      expect(Victory.Wrapper).toBeDefined();\n    });","file":"node/victory.test.js","skipped":false,"dir":"test"},{"name":"exports zoomContainerMixin","suites":["victory","exports helper components"],"updatePoint":{"line":252,"column":34,"index":8019},"line":252,"code":"    it(\"exports zoomContainerMixin\", () => {\n      expect(Victory.zoomContainerMixin).toBeDefined();\n    });","file":"node/victory.test.js","skipped":false,"dir":"test"},{"name":"exports ZoomHelpers","suites":["victory","exports helper components"],"updatePoint":{"line":255,"column":27,"index":8121},"line":255,"code":"    it(\"exports ZoomHelpers\", () => {\n      expect(Victory.ZoomHelpers).toBeDefined();\n    });","file":"node/victory.test.js","skipped":false,"dir":"test"}]}