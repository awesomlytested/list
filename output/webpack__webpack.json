{"repo":"webpack/webpack","url":"https://github.com/webpack/webpack","branch":"main","configs":[{"package":"webpack","lang":"js","dir":"test","framework":"jest","pattern":"**/*[._-]{test,spec,unittest,unit}.{ts,js}"}],"tests":[{"name":"Should construct message with caller info","suites":["WebpackError"],"updatePoint":{"line":16,"column":47,"index":352},"line":16,"code":"  it(\"Should construct message with caller info\", () => {\n    const fooClassError = new Foo().abstractMethod();\n    const childClassError = new Child().abstractMethod();\n    expect(fooClassError.message).toBe(expectedMessage.replace(\"$1\", \"Foo.abstractMethod\"));\n    expect(childClassError.message).toBe(expectedMessage.replace(\"$1\", \"Child.abstractMethod\"));\n  });","file":"AbstractMethodError.unittest.js","skipped":false,"dir":"test"},{"name":"groupBy should partition into two arrays","suites":["ArrayHelpers"],"updatePoint":{"line":6,"column":46,"index":154},"line":6,"code":"  it(\"groupBy should partition into two arrays\", () => {\n    expect(ArrayHelpers.groupBy([1, 2, 3, 4, 5, 6], x => x % 2 === 0)).toStrictEqual([[2, 4, 6], [1, 3, 5]]);\n  });","file":"ArrayHelpers.unittest.js","skipped":false,"dir":"test"},{"name":"groupBy works with empty array","suites":["ArrayHelpers"],"updatePoint":{"line":9,"column":36,"index":317},"line":9,"code":"  it(\"groupBy works with empty array\", () => {\n    expect(ArrayHelpers.groupBy([], x => x % 2 === 0)).toStrictEqual([[], []]);\n  });","file":"ArrayHelpers.unittest.js","skipped":false,"dir":"test"},{"name":"should cache assets","suites":[],"updatePoint":{"line":11,"column":23,"index":250},"line":11,"code":"it(\"should cache assets\", done => {\n  const entry1File = path.join(pluginDir, \"entry1.js\");\n  const entry2File = path.join(pluginDir, \"entry2.js\");\n  const outputFile = path.join(outputDir, \"entry1.js\");\n\n  try {\n    fs.mkdirSync(path.join(pluginDir), {\n      recursive: true\n    });\n  } catch (e) {// empty\n  }\n\n  const compiler = webpack({\n    mode: \"development\",\n    entry: {\n      entry1: entry1File,\n      entry2: entry2File\n    },\n    output: {\n      path: outputDir\n    },\n    plugins: [new webpack.BannerPlugin(\"banner is a string\")]\n  });\n  fs.writeFileSync(entry1File, \"1\", \"utf-8\");\n  fs.writeFileSync(entry2File, \"1\", \"utf-8\");\n  compiler.run(err => {\n    if (err) return done(err);\n    const footerFileResults = fs.readFileSync(outputFile, \"utf8\").split(\"\\n\");\n    expect(footerFileResults[0]).toBe(\"/*! banner is a string */\");\n    fs.writeFileSync(entry2File, \"2\", \"utf-8\");\n    compiler.run((err, stats) => {\n      const {\n        assets\n      } = stats.toJson();\n      expect(assets.find(as => as.name === \"entry1.js\").emitted).toBe(false);\n      expect(assets.find(as => as.name === \"entry2.js\").emitted).toBe(true);\n      done(err);\n    });\n  });\n});","file":"BannerPlugin.test.js","skipped":false,"dir":"test"},{"name":"can place banner as footer","suites":[],"updatePoint":{"line":51,"column":30,"index":1428},"line":51,"code":"it(\"can place banner as footer\", done => {\n  const footerFile = path.join(pluginDir, \"footerFile.js\");\n  const outputFile = path.join(outputDir, \"footerFile.js\");\n\n  try {\n    fs.mkdirSync(path.join(pluginDir), {\n      recursive: true\n    });\n  } catch (e) {// empty\n  }\n\n  const compiler = webpack({\n    mode: \"development\",\n    entry: {\n      footerFile: footerFile\n    },\n    output: {\n      path: outputDir\n    },\n    plugins: [new webpack.BannerPlugin({\n      banner: \"banner is a string\",\n      footer: true\n    })]\n  });\n  fs.writeFileSync(footerFile, \"footer\", \"utf-8\");\n  compiler.run(err => {\n    if (err) return done(err);\n    const footerFileResults = fs.readFileSync(outputFile, \"utf8\").split(\"\\n\");\n    expect(footerFileResults.pop()).toBe(\"/*! banner is a string */\");\n    done();\n  });\n});","file":"BannerPlugin.test.js","skipped":false,"dir":"test"},{"name":"should serialize  x  () correctly","suites":["BinaryMiddleware"],"updatePoint":{"line":52,"column":71,"index":2740},"line":52,"code":"          it(`should serialize ${c} x ${key} (${data.length}) correctly`, () => {\n            // process.stderr.write(\n            // \t`${c} x ${key.slice(0, 20)} (${data.length})\\n`\n            // );\n            const realData = cont(data, data.length * c);\n            const serialized = mw.serialize(realData, {});\n            const newData = mw.deserialize(serialized, {});\n            expect(newData.map(resolveLazy)).toEqual(realData.map(resolveLazy));\n          });","file":"BinaryMiddleware.unittest.js","skipped":false,"dir":"test"},{"name":"watch tests excluded","suites":["ChangesAndRemovals"],"line":70,"code":"    it.skip(\"watch tests excluded\", () => {});","file":"ChangesAndRemovals.test.js","skipped":true,"dir":"test"},{"name":"should not track modified/removed files during initial watchRun","suites":["ChangesAndRemovals"],"updatePoint":{"line":85,"column":69,"index":2176},"line":85,"code":"  it(\"should not track modified/removed files during initial watchRun\", done => {\n    const compiler = createSingleCompiler();\n    let watcher;\n    const watchRunFinished = new Promise(resolve => {\n      compiler.hooks.watchRun.tap(\"ChangesAndRemovalsTest\", compiler => {\n        expect(getChanges(compiler)).toEqual({\n          removed: undefined,\n          modified: undefined\n        });\n        resolve();\n      });\n    });\n    watcher = compiler.watch({\n      aggregateTimeout: 200\n    }, err => {\n      if (err) done(err);\n    });\n    watchRunFinished.then(() => {\n      watcher.close(done);\n    });\n  });","file":"ChangesAndRemovals.test.js","skipped":false,"dir":"test"},{"name":"should track modified files when they've been modified","suites":["ChangesAndRemovals"],"updatePoint":{"line":106,"column":60,"index":2779},"line":106,"code":"  it(\"should track modified files when they've been modified\", done => {\n    const compiler = createSingleCompiler();\n    let watcher;\n    compiler.hooks.watchRun.tap(\"ChangesAndRemovalsTest\", compiler => {\n      if (!watcher) return;\n      if (!compiler.modifiedFiles) return;\n      expect(getChanges(compiler)).toEqual({\n        modified: [tempFilePath],\n        removed: []\n      });\n      watcher.close(done);\n      watcher = null;\n    });\n    watcher = compiler.watch({\n      aggregateTimeout: 200\n    }, err => {\n      if (err) done(err);\n    });\n    onceDone(compiler, () => {\n      fs.appendFileSync(tempFilePath, \"\\nlet x = 'file modified';\");\n    });\n  });","file":"ChangesAndRemovals.test.js","skipped":false,"dir":"test"},{"name":"should track removed file when removing file","suites":["ChangesAndRemovals"],"updatePoint":{"line":128,"column":50,"index":3436},"line":128,"code":"  it(\"should track removed file when removing file\", done => {\n    const compiler = createSingleCompiler();\n    let watcher;\n    compiler.hooks.watchRun.tap(\"ChangesAndRemovalsTest\", compiler => {\n      if (!watcher) return;\n      if (!compiler.modifiedFiles) return;\n      expect(getChanges(compiler)).toEqual({\n        removed: [tempFilePath],\n        modified: []\n      });\n      watcher.close(done);\n      watcher = null;\n    });\n    watcher = compiler.watch({\n      aggregateTimeout: 200\n    }, err => {\n      if (err) done(err);\n    });\n    onceDone(compiler, () => {\n      fs.unlinkSync(tempFilePath);\n    });\n  });","file":"ChangesAndRemovals.test.js","skipped":false,"dir":"test"},{"name":"should have debugId more than 999","suites":["Chunk"],"updatePoint":{"line":10,"column":39,"index":241},"line":10,"code":"  it(\"should have debugId more than 999\", () => {\n    expect(ChunkInstance.debugId).toBeGreaterThan(999);\n  });","file":"Chunk.unittest.js","skipped":false,"dir":"test"},{"name":"should not be the initial instance","suites":["Chunk"],"updatePoint":{"line":13,"column":40,"index":354},"line":13,"code":"  it(\"should not be the initial instance\", () => {\n    expect(ChunkInstance.canBeInitial()).toBe(false);\n  });","file":"Chunk.unittest.js","skipped":false,"dir":"test"},{"name":"returns false","suites":["Chunk","hasRuntime"],"updatePoint":{"line":17,"column":21,"index":479},"line":17,"code":"    it(\"returns false\", () => {\n      expect(ChunkInstance.hasRuntime()).toBe(false);\n    });","file":"Chunk.unittest.js","skipped":false,"dir":"test"},{"name":"should merge  correctly","suites":["cleverMerge"],"updatePoint":{"line":638,"column":37,"index":11834},"line":638,"code":"    it(`should merge ${key} correctly`, () => {\n      let merged = cleverMerge(testCase[0], testCase[1]);\n      let merged1 = cachedCleverMerge(testCase[0], testCase[1]);\n      let merged2 = cachedCleverMerge(testCase[0], testCase[1]);\n      expect(merged2).toBe(merged1);\n      merged = resolveByProperty(merged, \"byArguments\", 1, 2, 3, 4, 5);\n      merged1 = resolveByProperty(merged1, \"byArguments\", 1, 2, 3, 4, 5);\n      merged2 = resolveByProperty(merged2, \"byArguments\", 1, 2, 3, 4, 5);\n      expect(merged).toEqual(testCase[2]);\n      expect(merged1).toEqual(testCase[2]);\n      expect(merged2).toEqual(testCase[2]);\n    });","file":"cleverMerge.unittest.js","skipped":false,"dir":"test"},{"name":"should allow to remove operations","suites":["cleverMerge"],"updatePoint":{"line":652,"column":39,"index":12473},"line":652,"code":"  it(\"should allow to remove operations\", () => {\n    expect(removeOperations({\n      a: 1,\n      b: DELETE,\n      c: [\"...\"],\n      d: [1, \"...\", 2],\n      e: [1, 2, 3],\n      f: {\n        a: 1,\n        b: DELETE,\n        c: [\"...\"],\n        d: [1, \"...\", 2],\n        e: [1, 2, 3],\n        f: {\n          a: 1,\n          b: DELETE,\n          c: [\"...\"],\n          d: [1, \"...\", 2],\n          e: [1, 2, 3]\n        }\n      }\n    })).toEqual({\n      a: 1,\n      c: [],\n      d: [1, 2],\n      e: [1, 2, 3],\n      f: {\n        a: 1,\n        c: [],\n        d: [1, 2],\n        e: [1, 2, 3],\n        f: {\n          a: 1,\n          c: [],\n          d: [1, 2],\n          e: [1, 2, 3]\n        }\n      }\n    });\n  });","file":"cleverMerge.unittest.js","skipped":false,"dir":"test"},{"name":"returns -1 when the first location line number comes before the second location line number","suites":["compareLocations","object location comparison","location line number"],"updatePoint":{"line":35,"column":101,"index":743},"line":35,"code":"      it(\"returns -1 when the first location line number comes before the second location line number\", () => {\n        expect(compareLocations(a, b)).toBe(-1);\n      });","file":"compareLocations.unittest.js","skipped":false,"dir":"test"},{"name":"returns 1 when the first location line number comes after the second location line number","suites":["compareLocations","object location comparison","location line number"],"updatePoint":{"line":38,"column":99,"index":912},"line":38,"code":"      it(\"returns 1 when the first location line number comes after the second location line number\", () => {\n        expect(compareLocations(b, a)).toBe(1);\n      });","file":"compareLocations.unittest.js","skipped":false,"dir":"test"},{"name":"returns -1 when the first location column number comes before the second location column number","suites":["compareLocations","object location comparison","location column number"],"updatePoint":{"line":51,"column":105,"index":1300},"line":51,"code":"      it(\"returns -1 when the first location column number comes before the second location column number\", () => {\n        expect(compareLocations(a, b)).toBe(-1);\n      });","file":"compareLocations.unittest.js","skipped":false,"dir":"test"},{"name":"returns 1 when the first location column number comes after the second location column number","suites":["compareLocations","object location comparison","location column number"],"updatePoint":{"line":54,"column":103,"index":1473},"line":54,"code":"      it(\"returns 1 when the first location column number comes after the second location column number\", () => {\n        expect(compareLocations(b, a)).toBe(1);\n      });","file":"compareLocations.unittest.js","skipped":false,"dir":"test"},{"name":"returns -1 when the first location index number comes before the second location index number","suites":["compareLocations","object location comparison","location index number"],"updatePoint":{"line":63,"column":103,"index":1822},"line":63,"code":"      it(\"returns -1 when the first location index number comes before the second location index number\", () => {\n        expect(compareLocations(a, b)).toBe(-1);\n      });","file":"compareLocations.unittest.js","skipped":false,"dir":"test"},{"name":"returns 1 when the first location index number comes after the second location index number","suites":["compareLocations","object location comparison","location index number"],"updatePoint":{"line":66,"column":101,"index":1993},"line":66,"code":"      it(\"returns 1 when the first location index number comes after the second location index number\", () => {\n        expect(compareLocations(b, a)).toBe(1);\n      });","file":"compareLocations.unittest.js","skipped":false,"dir":"test"},{"name":"returns 0","suites":["compareLocations","object location comparison","same location"],"updatePoint":{"line":75,"column":19,"index":2222},"line":75,"code":"      it(\"returns 0\", () => {\n        expect(compareLocations(a, b)).toBe(0);\n      });","file":"compareLocations.unittest.js","skipped":false,"dir":"test"},{"name":"returns 1 when the first parameter is an object and the second parameter is not","suites":["compareLocations","unknown location type comparison"],"updatePoint":{"line":81,"column":87,"index":2447},"line":81,"code":"    it(\"returns 1 when the first parameter is an object and the second parameter is not\", () => {\n      expect(compareLocations(createLocation(), 123)).toBe(1);\n      expect(compareLocations(createLocation(), \"alpha\")).toBe(1);\n    });","file":"compareLocations.unittest.js","skipped":false,"dir":"test"},{"name":"returns -1 when the first parameter is not an object and the second parameter is","suites":["compareLocations","unknown location type comparison"],"updatePoint":{"line":85,"column":88,"index":2684},"line":85,"code":"    it(\"returns -1 when the first parameter is not an object and the second parameter is\", () => {\n      expect(compareLocations(123, createLocation())).toBe(-1);\n      expect(compareLocations(\"alpha\", createLocation())).toBe(-1);\n    });","file":"compareLocations.unittest.js","skipped":false,"dir":"test"},{"name":"returns 0 when both the first parameter and the second parameter are not objects","suites":["compareLocations","unknown location type comparison"],"updatePoint":{"line":89,"column":88,"index":2923},"line":89,"code":"    it(\"returns 0 when both the first parameter and the second parameter are not objects\", () => {\n      expect(compareLocations(123, 456)).toBe(0);\n    });","file":"compareLocations.unittest.js","skipped":false,"dir":"test"},{"name":"should compile ","suites":["itemsToRegexp"],"updatePoint":{"line":9,"column":30,"index":203},"line":9,"code":"    it(`should compile ${name}`, () => {\n      const items = typeof input === \"string\" ? input.split(\",\") : input;\n      const regexp = itemsToRegexp(items);\n      const r = new RegExp(`^${regexp}$`);\n\n      for (const item of items) {\n        expect(item).toMatch(r);\n      }\n\n      fn(expect(regexp));\n    });","file":"compileBooleanMatcher.unittest.js","skipped":false,"dir":"test"},{"name":"should cache single file (with manual 1s wait) ","suites":["Compiler (caching)"],"updatePoint":{"line":121,"column":53,"index":3274},"line":121,"code":"  it(\"should cache single file (with manual 1s wait) \", done => {\n    const options = {};\n    const tempFixture = createTempFixture();\n    const helper = compile(tempFixture.cFilepath, options, (stats, files) => {\n      // Not cached the first time\n      expect(stats.assets[0].name).toBe(\"bundle.js\");\n      expect(stats.assets[0].emitted).toBe(true);\n      helper.runAgain((stats, files, iteration) => {\n        // Cached the second run\n        expect(stats.assets[0].name).toBe(\"bundle.js\");\n        expect(stats.assets[0].emitted).toBe(false);\n        const aContent = fs.readFileSync(tempFixture.aFilepath).toString().replace(\"This is a\", \"This is a MODIFIED\");\n        setTimeout(() => {\n          fs.writeFileSync(tempFixture.aFilepath, aContent);\n          helper.runAgain((stats, files, iteration) => {\n            // Cached the third run\n            expect(stats.assets[0].name).toBe(\"bundle.js\");\n            expect(stats.assets[0].emitted).toBe(true);\n            done();\n          });\n        }, 1100);\n      });\n    });\n  });","file":"Compiler-caching.test.js","skipped":false,"dir":"test"},{"name":"should cache single file (even with no timeout) ","suites":["Compiler (caching)"],"updatePoint":{"line":145,"column":54,"index":4315},"line":145,"code":"  it(\"should cache single file (even with no timeout) \", done => {\n    const options = {};\n    const tempFixture = createTempFixture();\n    const helper = compile(tempFixture.cFilepath, options, (stats, files) => {\n      // Not cached the first time\n      expect(stats.assets[0].name).toBe(\"bundle.js\");\n      expect(stats.assets[0].emitted).toBe(true);\n      helper.runAgain((stats, files, iteration) => {\n        // Cached the second run\n        expect(stats.assets[0].name).toBe(\"bundle.js\");\n        expect(stats.assets[0].emitted).toBe(false);\n        expect(files[\"/bundle.js\"]).toMatch(\"This is a\");\n        const aContent = fs.readFileSync(tempFixture.aFilepath).toString().replace(\"This is a\", \"This is a MODIFIED\");\n        fs.writeFileSync(tempFixture.aFilepath, aContent);\n        helper.runAgain((stats, files, iteration) => {\n          // Cached the third run\n          expect(stats.assets[0].name).toBe(\"bundle.js\");\n          expect(stats.assets[0].emitted).toBe(true);\n          expect(files[\"/bundle.js\"]).toMatch(\"This is a MODIFIED\");\n          done();\n        });\n      });\n    });\n  });","file":"Compiler-caching.test.js","skipped":false,"dir":"test"},{"name":"should only build when modified (with manual 2s wait)","suites":["Compiler (caching)"],"updatePoint":{"line":169,"column":59,"index":5429},"line":169,"code":"  it(\"should only build when modified (with manual 2s wait)\", done => {\n    const options = {};\n    const tempFixture = createTempFixture();\n    const helper = compile(tempFixture.cFilepath, options, (stats, files) => {\n      // Built the first time\n      expect(stats.modules[0].name).toMatch(\"c.js\");\n      expect(stats.modules[0].built).toBe(true);\n      expect(stats.modules[1].name).toMatch(\"a.js\");\n      expect(stats.modules[1].built).toBe(true);\n      setTimeout(() => {\n        helper.runAgain((stats, files, iteration) => {\n          // Not built when cached the second run\n          expect(stats.modules[0].name).toMatch(\"c.js\"); // expect(stats.modules[0].built).toBe(false);\n\n          expect(stats.modules[1].name).toMatch(\"a.js\"); // expect(stats.modules[1].built).toBe(false);\n\n          const aContent = fs.readFileSync(tempFixture.aFilepath).toString().replace(\"This is a\", \"This is a MODIFIED\");\n          setTimeout(() => {\n            fs.writeFileSync(tempFixture.aFilepath, aContent);\n            helper.runAgain((stats, files, iteration) => {\n              // And only a.js built after it was modified\n              expect(stats.modules[0].name).toMatch(\"c.js\");\n              expect(stats.modules[0].built).toBe(false);\n              expect(stats.modules[1].name).toMatch(\"a.js\");\n              expect(stats.modules[1].built).toBe(true);\n              done();\n            });\n          }, 2100);\n        });\n      }, 4100);\n    });\n  });","file":"Compiler-caching.test.js","skipped":false,"dir":"test"},{"name":"should build when modified (even with no timeout)","suites":["Compiler (caching)"],"updatePoint":{"line":201,"column":55,"index":6887},"line":201,"code":"  it(\"should build when modified (even with no timeout)\", done => {\n    const options = {};\n    const tempFixture = createTempFixture();\n    const helper = compile(tempFixture.cFilepath, options, (stats, files) => {\n      // Built the first time\n      expect(stats.modules[0].name).toMatch(\"c.js\");\n      expect(stats.modules[0].built).toBe(true);\n      expect(stats.modules[1].name).toMatch(\"a.js\");\n      expect(stats.modules[1].built).toBe(true);\n      helper.runAgain((stats, files, iteration) => {\n        // Not built when cached the second run\n        expect(stats.modules[0].name).toMatch(\"c.js\"); // expect(stats.modules[0].built).toBe(false);\n\n        expect(stats.modules[1].name).toMatch(\"a.js\"); // expect(stats.modules[1].built).toBe(false);\n\n        const aContent = fs.readFileSync(tempFixture.aFilepath).toString().replace(\"This is a\", \"This is a MODIFIED\");\n        fs.writeFileSync(tempFixture.aFilepath, aContent);\n        helper.runAgain((stats, files, iteration) => {\n          // And only a.js built after it was modified\n          expect(stats.modules[0].name).toMatch(\"c.js\"); // expect(stats.modules[0].built).toBe(false);\n\n          expect(stats.modules[1].name).toMatch(\"a.js\");\n          expect(stats.modules[1].built).toBe(true);\n          done();\n        });\n      });\n    });\n  });","file":"Compiler-caching.test.js","skipped":false,"dir":"test"},{"name":"should compile a single file to deep output","suites":["Compiler"],"updatePoint":{"line":95,"column":49,"index":2372},"line":95,"code":"  it(\"should compile a single file to deep output\", done => {\n    compile(\"./c\", {\n      output: {\n        path: \"/what\",\n        filename: \"the/hell.js\"\n      }\n    }, (stats, files) => {\n      expect(stats.logs.mkdir).toEqual([\"/what\", \"/what/the\"]);\n      done();\n    });\n  });","file":"Compiler.test.js","skipped":false,"dir":"test"},{"name":"should compile a single file","suites":["Compiler"],"updatePoint":{"line":106,"column":34,"index":2638},"line":106,"code":"  it(\"should compile a single file\", done => {\n    compile(\"./c\", {}, (stats, files) => {\n      expect(Object.keys(files)).toEqual([\"/main.js\"]);\n      const bundle = files[\"/main.js\"];\n      expect(bundle).toMatch(\"function __webpack_require__(\");\n      expect(bundle).toMatch(/__webpack_require__\\(\\/\\*! \\.\\/a \\*\\/ \\w+\\);/);\n      expect(bundle).toMatch(\"./c.js\");\n      expect(bundle).toMatch(\"./a.js\");\n      expect(bundle).toMatch(\"This is a\");\n      expect(bundle).toMatch(\"This is c\");\n      expect(bundle).not.toMatch(\"2: function(\");\n      expect(bundle).not.toMatch(\"window\");\n      expect(bundle).not.toMatch(\"jsonp\");\n      expect(bundle).not.toMatch(\"fixtures\");\n      done();\n    });\n  });","file":"Compiler.test.js","skipped":false,"dir":"test"},{"name":"should compile a complex file","suites":["Compiler"],"updatePoint":{"line":123,"column":35,"index":3343},"line":123,"code":"  it(\"should compile a complex file\", done => {\n    compile(\"./main1\", {}, (stats, files) => {\n      expect(Object.keys(files)).toEqual([\"/main.js\"]);\n      const bundle = files[\"/main.js\"];\n      expect(bundle).toMatch(\"function __webpack_require__(\");\n      expect(bundle).toMatch(\"__webpack_require__(/*! ./a */\");\n      expect(bundle).toMatch(\"./main1.js\");\n      expect(bundle).toMatch(\"./a.js\");\n      expect(bundle).toMatch(\"./b.js\");\n      expect(bundle).toMatch(\"./node_modules/m1/a.js\");\n      expect(bundle).toMatch(\"This is a\");\n      expect(bundle).toMatch(\"This is b\");\n      expect(bundle).toMatch(\"This is m1/a\");\n      expect(bundle).not.toMatch(\"4: function(\");\n      expect(bundle).not.toMatch(\"window\");\n      expect(bundle).not.toMatch(\"jsonp\");\n      expect(bundle).not.toMatch(\"fixtures\");\n      done();\n    });\n  });","file":"Compiler.test.js","skipped":false,"dir":"test"},{"name":"should compile a file with transitive dependencies","suites":["Compiler"],"updatePoint":{"line":143,"column":56,"index":4205},"line":143,"code":"  it(\"should compile a file with transitive dependencies\", done => {\n    compile(\"./abc\", {}, (stats, files) => {\n      expect(Object.keys(files)).toEqual([\"/main.js\"]);\n      const bundle = files[\"/main.js\"];\n      expect(bundle).toMatch(\"function __webpack_require__(\");\n      expect(bundle).toMatch(\"__webpack_require__(/*! ./a */\");\n      expect(bundle).toMatch(\"__webpack_require__(/*! ./b */\");\n      expect(bundle).toMatch(\"__webpack_require__(/*! ./c */\");\n      expect(bundle).toMatch(\"./abc.js\");\n      expect(bundle).toMatch(\"./a.js\");\n      expect(bundle).toMatch(\"./b.js\");\n      expect(bundle).toMatch(\"./c.js\");\n      expect(bundle).toMatch(\"This is a\");\n      expect(bundle).toMatch(\"This is b\");\n      expect(bundle).toMatch(\"This is c\");\n      expect(bundle).not.toMatch(\"4: function(\");\n      expect(bundle).not.toMatch(\"window\");\n      expect(bundle).not.toMatch(\"jsonp\");\n      expect(bundle).not.toMatch(\"fixtures\");\n      done();\n    });\n  });","file":"Compiler.test.js","skipped":false,"dir":"test"},{"name":"should compile a file with multiple chunks","suites":["Compiler"],"updatePoint":{"line":165,"column":48,"index":5164},"line":165,"code":"  it(\"should compile a file with multiple chunks\", done => {\n    compile(\"./chunks\", {}, (stats, files) => {\n      expect(stats.chunks).toHaveLength(2);\n      expect(Object.keys(files)).toEqual([\"/main.js\", \"/394.js\"]);\n      const bundle = files[\"/main.js\"];\n      const chunk = files[\"/394.js\"];\n      expect(bundle).toMatch(\"function __webpack_require__(\");\n      expect(bundle).toMatch(\"__webpack_require__(/*! ./b */\");\n      expect(chunk).not.toMatch(\"__webpack_require__(/* ./b */\");\n      expect(bundle).toMatch(\"./chunks.js\");\n      expect(chunk).toMatch(\"./a.js\");\n      expect(chunk).toMatch(\"./b.js\");\n      expect(chunk).toMatch(\"This is a\");\n      expect(bundle).not.toMatch(\"This is a\");\n      expect(chunk).toMatch(\"This is b\");\n      expect(bundle).not.toMatch(\"This is b\");\n      expect(bundle).not.toMatch(\"4: function(\");\n      expect(bundle).not.toMatch(\"fixtures\");\n      expect(chunk).not.toMatch(\"fixtures\");\n      expect(bundle).toMatch(\"webpackChunk\");\n      expect(chunk).toMatch('self[\"webpackChunk\"] || []).push');\n      done();\n    });\n  }); // cspell:word asmjs","file":"Compiler.test.js","skipped":false,"dir":"test"},{"name":"should not evaluate constants in asm.js","suites":["Compiler"],"updatePoint":{"line":190,"column":45,"index":6255},"line":190,"code":"  it(\"should not evaluate constants in asm.js\", done => {\n    compile(\"./asmjs\", {}, (stats, files) => {\n      expect(Object.keys(files)).toEqual([\"/main.js\"]);\n      const bundle = files[\"/main.js\"];\n      expect(bundle).toMatch('\"use asm\";');\n      expect(bundle).toMatch(\"101\");\n      expect(bundle).toMatch(\"102\");\n      expect(bundle).toMatch(\"103\");\n      expect(bundle).toMatch(\"104\");\n      expect(bundle).toMatch(\"105\");\n      expect(bundle).not.toMatch(\"106\");\n      expect(bundle).not.toMatch(\"107\");\n      expect(bundle).not.toMatch(\"108\");\n      expect(bundle).toMatch(\"109\");\n      expect(bundle).toMatch(\"110\");\n      done();\n    });\n  });","file":"Compiler.test.js","skipped":false,"dir":"test"},{"name":"invokes purge() if inputFileSystem.purge","suites":["Compiler","methods","purgeInputFileSystem"],"updatePoint":{"line":231,"column":50,"index":7435},"line":231,"code":"      it(\"invokes purge() if inputFileSystem.purge\", done => {\n        const mockPurge = jest.fn();\n        compiler.inputFileSystem = {\n          purge: mockPurge\n        };\n        compiler.purgeInputFileSystem();\n        expect(mockPurge.mock.calls.length).toBe(1);\n        done();\n      });","file":"Compiler.test.js","skipped":false,"dir":"test"},{"name":"does NOT invoke purge() if !inputFileSystem.purge","suites":["Compiler","methods","purgeInputFileSystem"],"updatePoint":{"line":240,"column":59,"index":7739},"line":240,"code":"      it(\"does NOT invoke purge() if !inputFileSystem.purge\", done => {\n        const mockPurge = jest.fn();\n        compiler.inputFileSystem = null;\n        compiler.purgeInputFileSystem();\n        expect(mockPurge.mock.calls.length).toBe(0);\n        done();\n      });","file":"Compiler.test.js","skipped":false,"dir":"test"},{"name":"returns booleanized this.parentCompilation","suites":["Compiler","methods","isChild"],"updatePoint":{"line":249,"column":52,"index":8042},"line":249,"code":"      it(\"returns booleanized this.parentCompilation\", done => {\n        compiler.parentCompilation = \"stringyStringString\";\n        const response1 = compiler.isChild();\n        expect(response1).toBe(true);\n        compiler.parentCompilation = 123456789;\n        const response2 = compiler.isChild();\n        expect(response2).toBe(true);\n        compiler.parentCompilation = {\n          what: \"I belong to an object\"\n        };\n        const response3 = compiler.isChild();\n        expect(response3).toBe(true);\n        compiler.parentCompilation = [\"Array\", 123, true, null, [], () => {}];\n        const response4 = compiler.isChild();\n        expect(response4).toBe(true);\n        compiler.parentCompilation = false;\n        const response5 = compiler.isChild();\n        expect(response5).toBe(false);\n        compiler.parentCompilation = 0;\n        const response6 = compiler.isChild();\n        expect(response6).toBe(false);\n        compiler.parentCompilation = null;\n        const response7 = compiler.isChild();\n        expect(response7).toBe(false);\n        compiler.parentCompilation = \"\";\n        const response8 = compiler.isChild();\n        expect(response8).toBe(false);\n        compiler.parentCompilation = NaN;\n        const response9 = compiler.isChild();\n        expect(response9).toBe(false);\n        done();\n      });","file":"Compiler.test.js","skipped":false,"dir":"test"},{"name":"should not emit on errors","suites":["Compiler","methods","isChild"],"updatePoint":{"line":283,"column":31,"index":9374},"line":283,"code":"  it(\"should not emit on errors\", done => {\n    const webpack = require(\"..\");\n\n    compiler = webpack({\n      context: __dirname,\n      mode: \"production\",\n      entry: \"./missing\",\n      output: {\n        path: \"/directory\",\n        filename: \"bundle.js\"\n      }\n    });\n    compiler.outputFileSystem = createFsFromVolume(new Volume());\n    compiler.run((err, stats) => {\n      if (err) return done(err);\n      if (compiler.outputFileSystem.existsSync(\"/bundle.js\")) return done(new Error(\"Bundle should not be created on error\"));\n      done();\n    });\n  });","file":"Compiler.test.js","skipped":false,"dir":"test"},{"name":"should bubble up errors when wrapped in a promise and bail is true","suites":["Compiler","methods","isChild"],"updatePoint":{"line":302,"column":72,"index":9977},"line":302,"code":"  it(\"should bubble up errors when wrapped in a promise and bail is true\", async () => {\n    try {\n      const createCompiler = options => {\n        return new Promise((resolve, reject) => {\n          const webpack = require(\"..\");\n\n          const c = webpack(options);\n          c.run((err, stats) => {\n            if (err) {\n              reject(err);\n            }\n\n            if (stats !== undefined && \"errors\" in stats) {\n              reject(err);\n            } else {\n              resolve(stats);\n            }\n          });\n          return c;\n        });\n      };\n\n      compiler = await createCompiler({\n        context: __dirname,\n        mode: \"production\",\n        entry: \"./missing-file\",\n        output: {\n          path: \"/directory\",\n          filename: \"bundle.js\"\n        },\n        bail: true\n      });\n    } catch (err) {\n      expect(err.toString()).toMatch(\"ModuleNotFoundError: Module not found: Error: Can't resolve './missing-file'\");\n    }\n  });","file":"Compiler.test.js","skipped":false,"dir":"test"},{"name":"should not emit compilation errors in async (watch)","suites":["Compiler","methods","isChild"],"updatePoint":{"line":338,"column":57,"index":10939},"line":338,"code":"  it(\"should not emit compilation errors in async (watch)\", async () => {\n    const createStats = options => {\n      return new Promise((resolve, reject) => {\n        const webpack = require(\"..\");\n\n        const c = webpack(options);\n        c.outputFileSystem = createFsFromVolume(new Volume());\n        const watching = c.watch({}, (err, stats) => {\n          watching.close(() => {\n            if (err) return reject(err);\n            resolve(stats);\n          });\n        });\n      });\n    };\n\n    const stats = await createStats({\n      context: __dirname,\n      mode: \"production\",\n      entry: \"./missing-file\",\n      output: {\n        path: \"/directory\",\n        filename: \"bundle.js\"\n      }\n    });\n    expect(stats).toBeInstanceOf(Stats);\n  });","file":"Compiler.test.js","skipped":false,"dir":"test"},{"name":"should not emit on errors (watch)","suites":["Compiler","methods","isChild"],"updatePoint":{"line":365,"column":39,"index":11678},"line":365,"code":"  it(\"should not emit on errors (watch)\", done => {\n    const webpack = require(\"..\");\n\n    compiler = webpack({\n      context: __dirname,\n      mode: \"production\",\n      entry: \"./missing\",\n      output: {\n        path: \"/directory\",\n        filename: \"bundle.js\"\n      }\n    });\n    compiler.outputFileSystem = createFsFromVolume(new Volume());\n    const watching = compiler.watch({}, (err, stats) => {\n      watching.close();\n      if (err) return done(err);\n      if (compiler.outputFileSystem.existsSync(\"/bundle.js\")) return done(new Error(\"Bundle should not be created on error\"));\n      done();\n    });\n  });","file":"Compiler.test.js","skipped":false,"dir":"test"},{"name":"should not be running twice at a time (run)","suites":["Compiler","methods","isChild"],"updatePoint":{"line":385,"column":49,"index":12305},"line":385,"code":"  it(\"should not be running twice at a time (run)\", done => {\n    const webpack = require(\"..\");\n\n    compiler = webpack({\n      context: __dirname,\n      mode: \"production\",\n      entry: \"./c\",\n      output: {\n        path: \"/directory\",\n        filename: \"bundle.js\"\n      }\n    });\n    compiler.outputFileSystem = createFsFromVolume(new Volume());\n    compiler.run((err, stats) => {\n      if (err) return done(err);\n    });\n    compiler.run((err, stats) => {\n      if (err) return done();\n    });\n  });","file":"Compiler.test.js","skipped":false,"dir":"test"},{"name":"should not be running twice at a time (watch)","suites":["Compiler","methods","isChild"],"updatePoint":{"line":405,"column":51,"index":12813},"line":405,"code":"  it(\"should not be running twice at a time (watch)\", done => {\n    const webpack = require(\"..\");\n\n    compiler = webpack({\n      context: __dirname,\n      mode: \"production\",\n      entry: \"./c\",\n      output: {\n        path: \"/directory\",\n        filename: \"bundle.js\"\n      }\n    });\n    compiler.outputFileSystem = createFsFromVolume(new Volume());\n    compiler.watch({}, (err, stats) => {\n      if (err) return done(err);\n    });\n    compiler.watch({}, (err, stats) => {\n      if (err) return done();\n    });\n  });","file":"Compiler.test.js","skipped":false,"dir":"test"},{"name":"should not be running twice at a time (run - watch)","suites":["Compiler","methods","isChild"],"updatePoint":{"line":425,"column":57,"index":13339},"line":425,"code":"  it(\"should not be running twice at a time (run - watch)\", done => {\n    const webpack = require(\"..\");\n\n    compiler = webpack({\n      context: __dirname,\n      mode: \"production\",\n      entry: \"./c\",\n      output: {\n        path: \"/directory\",\n        filename: \"bundle.js\"\n      }\n    });\n    compiler.outputFileSystem = createFsFromVolume(new Volume());\n    compiler.run((err, stats) => {\n      if (err) return done(err);\n    });\n    compiler.watch({}, (err, stats) => {\n      if (err) return done();\n    });\n  });","file":"Compiler.test.js","skipped":false,"dir":"test"},{"name":"should not be running twice at a time (watch - run)","suites":["Compiler","methods","isChild"],"updatePoint":{"line":445,"column":57,"index":13859},"line":445,"code":"  it(\"should not be running twice at a time (watch - run)\", done => {\n    const webpack = require(\"..\");\n\n    compiler = webpack({\n      context: __dirname,\n      mode: \"production\",\n      entry: \"./c\",\n      output: {\n        path: \"/directory\",\n        filename: \"bundle.js\"\n      }\n    });\n    compiler.outputFileSystem = createFsFromVolume(new Volume());\n    compiler.watch({}, (err, stats) => {\n      if (err) return done(err);\n    });\n    compiler.run((err, stats) => {\n      if (err) return done();\n    });\n  });","file":"Compiler.test.js","skipped":false,"dir":"test"},{"name":"should not be running twice at a time (instance cb)","suites":["Compiler","methods","isChild"],"updatePoint":{"line":465,"column":57,"index":14379},"line":465,"code":"  it(\"should not be running twice at a time (instance cb)\", done => {\n    const webpack = require(\"..\");\n\n    compiler = webpack({\n      context: __dirname,\n      mode: \"production\",\n      entry: \"./c\",\n      output: {\n        path: \"/directory\",\n        filename: \"bundle.js\"\n      }\n    }, () => {});\n    compiler.outputFileSystem = createFsFromVolume(new Volume());\n    compiler.run((err, stats) => {\n      if (err) return done();\n    });\n  });","file":"Compiler.test.js","skipped":false,"dir":"test"},{"name":"should run again correctly after first compilation","suites":["Compiler","methods","isChild"],"updatePoint":{"line":482,"column":56,"index":14826},"line":482,"code":"  it(\"should run again correctly after first compilation\", done => {\n    const webpack = require(\"..\");\n\n    compiler = webpack({\n      context: __dirname,\n      mode: \"production\",\n      entry: \"./c\",\n      output: {\n        path: \"/directory\",\n        filename: \"bundle.js\"\n      }\n    });\n    compiler.outputFileSystem = createFsFromVolume(new Volume());\n    compiler.run((err, stats1) => {\n      if (err) return done(err);\n      compiler.run((err, stats2) => {\n        if (err) return done(err);\n        expect(stats1.toString({\n          all: true\n        })).toBeTypeOf(\"string\");\n        done();\n      });\n    });\n  });","file":"Compiler.test.js","skipped":false,"dir":"test"},{"name":"should watch again correctly after first compilation","suites":["Compiler","methods","isChild"],"updatePoint":{"line":506,"column":58,"index":15455},"line":506,"code":"  it(\"should watch again correctly after first compilation\", done => {\n    const webpack = require(\"..\");\n\n    compiler = webpack({\n      context: __dirname,\n      mode: \"production\",\n      entry: \"./c\",\n      output: {\n        path: \"/directory\",\n        filename: \"bundle.js\"\n      }\n    });\n    compiler.outputFileSystem = createFsFromVolume(new Volume());\n    compiler.run((err, stats) => {\n      if (err) return done(err);\n      const watching = compiler.watch({}, (err, stats) => {\n        if (err) return done(err);\n        watching.close(done);\n      });\n    });\n  });","file":"Compiler.test.js","skipped":false,"dir":"test"},{"name":"should run again correctly after first closed watch","suites":["Compiler","methods","isChild"],"updatePoint":{"line":527,"column":57,"index":16031},"line":527,"code":"  it(\"should run again correctly after first closed watch\", done => {\n    const webpack = require(\"..\");\n\n    compiler = webpack({\n      context: __dirname,\n      mode: \"production\",\n      entry: \"./c\",\n      output: {\n        path: \"/directory\",\n        filename: \"bundle.js\"\n      }\n    });\n    compiler.outputFileSystem = createFsFromVolume(new Volume());\n    const watching = compiler.watch({}, (err, stats) => {\n      if (err) return done(err);\n    });\n    watching.close(() => {\n      compiler.run((err, stats) => {\n        if (err) return done(err);\n        done();\n      });\n    });\n  });","file":"Compiler.test.js","skipped":false,"dir":"test"},{"name":"should set compiler.watching correctly","suites":["Compiler","methods","isChild"],"updatePoint":{"line":550,"column":44,"index":16615},"line":550,"code":"  it(\"should set compiler.watching correctly\", function (done) {\n    const webpack = require(\"..\");\n\n    compiler = webpack({\n      context: __dirname,\n      mode: \"production\",\n      entry: \"./c\",\n      output: {\n        path: \"/directory\",\n        filename: \"bundle.js\"\n      }\n    });\n    compiler.outputFileSystem = createFsFromVolume(new Volume());\n    const watching = compiler.watch({}, (err, stats) => {\n      if (err) return done(err);\n      watching.close(done);\n    });\n    expect(compiler.watching).toBe(watching);\n  });","file":"Compiler.test.js","skipped":false,"dir":"test"},{"name":"should watch again correctly after first closed watch","suites":["Compiler","methods","isChild"],"updatePoint":{"line":569,"column":59,"index":17163},"line":569,"code":"  it(\"should watch again correctly after first closed watch\", done => {\n    const webpack = require(\"..\");\n\n    compiler = webpack({\n      context: __dirname,\n      mode: \"production\",\n      entry: \"./c\",\n      output: {\n        path: \"/directory\",\n        filename: \"bundle.js\"\n      }\n    });\n    compiler.outputFileSystem = createFsFromVolume(new Volume());\n    const watching = compiler.watch({}, (err, stats) => {\n      if (err) return done(err);\n    });\n    watching.close(() => {\n      compiler.watch({}, (err, stats) => {\n        if (err) return done(err);\n        done();\n      });\n    });\n  });","file":"Compiler.test.js","skipped":false,"dir":"test"},{"name":"should run again correctly inside afterDone hook","suites":["Compiler","methods","isChild"],"updatePoint":{"line":592,"column":54,"index":17763},"line":592,"code":"  it(\"should run again correctly inside afterDone hook\", done => {\n    const webpack = require(\"..\");\n\n    compiler = webpack({\n      context: __dirname,\n      mode: \"production\",\n      entry: \"./c\",\n      output: {\n        path: \"/directory\",\n        filename: \"bundle.js\"\n      }\n    });\n    compiler.outputFileSystem = createFsFromVolume(new Volume());\n    let once = true;\n    compiler.hooks.afterDone.tap(\"RunAgainTest\", () => {\n      if (!once) return;\n      once = false;\n      compiler.run((err, stats) => {\n        if (err) return done(err);\n        done();\n      });\n    });\n    compiler.run((err, stats) => {\n      if (err) return done(err);\n    });\n  });","file":"Compiler.test.js","skipped":false,"dir":"test"},{"name":"should call afterDone hook after other callbacks (run)","suites":["Compiler","methods","isChild"],"updatePoint":{"line":618,"column":60,"index":18436},"line":618,"code":"  it(\"should call afterDone hook after other callbacks (run)\", done => {\n    const webpack = require(\"..\");\n\n    compiler = webpack({\n      context: __dirname,\n      mode: \"production\",\n      entry: \"./c\",\n      output: {\n        path: \"/directory\",\n        filename: \"bundle.js\"\n      }\n    });\n    compiler.outputFileSystem = createFsFromVolume(new Volume());\n    const runCb = jest.fn();\n    const doneHookCb = jest.fn();\n    compiler.hooks.done.tap(\"afterDoneRunTest\", doneHookCb);\n    compiler.hooks.afterDone.tap(\"afterDoneRunTest\", () => {\n      expect(runCb).toHaveBeenCalled();\n      expect(doneHookCb).toHaveBeenCalled();\n      done();\n    });\n    compiler.run((err, stats) => {\n      if (err) return done(err);\n      runCb();\n    });\n  });","file":"Compiler.test.js","skipped":false,"dir":"test"},{"name":"should call afterDone hook after other callbacks (instance cb)","suites":["Compiler","methods","isChild"],"updatePoint":{"line":644,"column":68,"index":19195},"line":644,"code":"  it(\"should call afterDone hook after other callbacks (instance cb)\", done => {\n    const instanceCb = jest.fn();\n\n    const webpack = require(\"..\");\n\n    compiler = webpack({\n      context: __dirname,\n      mode: \"production\",\n      entry: \"./c\",\n      output: {\n        path: \"/directory\",\n        filename: \"bundle.js\"\n      }\n    }, (err, stats) => {\n      if (err) return done(err);\n      instanceCb();\n    });\n    compiler.outputFileSystem = createFsFromVolume(new Volume());\n    const doneHookCb = jest.fn();\n    compiler.hooks.done.tap(\"afterDoneRunTest\", doneHookCb);\n    compiler.hooks.afterDone.tap(\"afterDoneRunTest\", () => {\n      expect(instanceCb).toHaveBeenCalled();\n      expect(doneHookCb).toHaveBeenCalled();\n      done();\n    });\n  });","file":"Compiler.test.js","skipped":false,"dir":"test"},{"name":"should call afterDone hook after other callbacks (watch)","suites":["Compiler","methods","isChild"],"updatePoint":{"line":670,"column":62,"index":19946},"line":670,"code":"  it(\"should call afterDone hook after other callbacks (watch)\", done => {\n    const webpack = require(\"..\");\n\n    compiler = webpack({\n      context: __dirname,\n      mode: \"production\",\n      entry: \"./c\",\n      output: {\n        path: \"/directory\",\n        filename: \"bundle.js\"\n      }\n    });\n    compiler.outputFileSystem = createFsFromVolume(new Volume());\n    const invalidHookCb = jest.fn();\n    const doneHookCb = jest.fn();\n    const watchCb = jest.fn();\n    const invalidateCb = jest.fn();\n    compiler.hooks.invalid.tap(\"afterDoneWatchTest\", invalidHookCb);\n    compiler.hooks.done.tap(\"afterDoneWatchTest\", doneHookCb);\n    compiler.hooks.afterDone.tap(\"afterDoneWatchTest\", () => {\n      expect(invalidHookCb).toHaveBeenCalled();\n      expect(doneHookCb).toHaveBeenCalled();\n      expect(watchCb).toHaveBeenCalled();\n      expect(invalidateCb).toHaveBeenCalled();\n      watching.close(done);\n    });\n    const watching = compiler.watch({}, (err, stats) => {\n      if (err) return done(err);\n      watchCb();\n    });\n    process.nextTick(() => {\n      watching.invalidate(invalidateCb);\n    });\n  });","file":"Compiler.test.js","skipped":false,"dir":"test"},{"name":"should call afterDone hook after other callbacks (watch close)","suites":["Compiler","methods","isChild"],"updatePoint":{"line":704,"column":68,"index":21067},"line":704,"code":"  it(\"should call afterDone hook after other callbacks (watch close)\", done => {\n    const webpack = require(\"..\");\n\n    compiler = webpack({\n      context: __dirname,\n      mode: \"production\",\n      entry: \"./c\",\n      output: {\n        path: \"/directory\",\n        filename: \"bundle.js\"\n      }\n    });\n    compiler.outputFileSystem = createFsFromVolume(new Volume());\n    const invalidHookCb = jest.fn();\n    const watchCloseCb = jest.fn();\n    const watchCloseHookCb = jest.fn();\n    const invalidateCb = jest.fn();\n    compiler.hooks.invalid.tap(\"afterDoneWatchTest\", invalidHookCb);\n    compiler.hooks.watchClose.tap(\"afterDoneWatchTest\", watchCloseHookCb);\n    compiler.hooks.afterDone.tap(\"afterDoneWatchTest\", () => {\n      expect(invalidHookCb).toHaveBeenCalled();\n      expect(watchCloseCb).toHaveBeenCalled();\n      expect(watchCloseHookCb).toHaveBeenCalled();\n      expect(invalidateCb).toHaveBeenCalled();\n      done();\n    });\n    const watch = compiler.watch({}, (err, stats) => {\n      if (err) return done(err);\n      watch.close(watchCloseCb);\n    });\n    process.nextTick(() => {\n      watch.invalidate(invalidateCb);\n    });\n  });","file":"Compiler.test.js","skipped":false,"dir":"test"},{"name":"should flag watchMode as true in watch","suites":["Compiler","methods","isChild"],"updatePoint":{"line":738,"column":44,"index":22194},"line":738,"code":"  it(\"should flag watchMode as true in watch\", done => {\n    const webpack = require(\"..\");\n\n    compiler = webpack({\n      context: __dirname,\n      mode: \"production\",\n      entry: \"./c\",\n      output: {\n        path: \"/directory\",\n        filename: \"bundle.js\"\n      }\n    });\n    compiler.outputFileSystem = createFsFromVolume(new Volume());\n    const watch = compiler.watch({}, err => {\n      if (err) return done(err);\n      expect(compiler.watchMode).toBeTruthy();\n      watch.close(() => {\n        expect(compiler.watchMode).toBeFalsy();\n        done();\n      });\n    });\n  });","file":"Compiler.test.js","skipped":false,"dir":"test"},{"name":"should use cache on second run call","suites":["Compiler","methods","isChild"],"updatePoint":{"line":760,"column":41,"index":22777},"line":760,"code":"  it(\"should use cache on second run call\", done => {\n    const webpack = require(\"..\");\n\n    compiler = webpack({\n      context: __dirname,\n      mode: \"development\",\n      devtool: false,\n      entry: \"./fixtures/count-loader!./fixtures/count-loader\",\n      output: {\n        path: \"/directory\"\n      }\n    });\n    compiler.outputFileSystem = createFsFromVolume(new Volume());\n    compiler.run(() => {\n      compiler.run(() => {\n        const result = compiler.outputFileSystem.readFileSync(\"/directory/main.js\", \"utf-8\");\n        expect(result).toContain(\"module.exports = 0;\");\n        done();\n      });\n    });\n  });","file":"Compiler.test.js","skipped":false,"dir":"test"},{"name":"should call the failed-hook on error","suites":["Compiler","methods","isChild"],"updatePoint":{"line":781,"column":42,"index":23400},"line":781,"code":"  it(\"should call the failed-hook on error\", done => {\n    const failedSpy = jest.fn();\n\n    const webpack = require(\"..\");\n\n    compiler = webpack({\n      bail: true,\n      context: __dirname,\n      mode: \"production\",\n      entry: \"./missing\",\n      output: {\n        path: \"/directory\",\n        filename: \"bundle.js\"\n      }\n    });\n    compiler.hooks.failed.tap(\"CompilerTest\", failedSpy);\n    compiler.outputFileSystem = createFsFromVolume(new Volume());\n    compiler.run((err, stats) => {\n      expect(err).toBeTruthy();\n      expect(failedSpy).toHaveBeenCalledTimes(1);\n      expect(failedSpy).toHaveBeenCalledWith(err);\n      done();\n    });\n  });","file":"Compiler.test.js","skipped":false,"dir":"test"},{"name":"should deprecate when watch option is used without callback","suites":["Compiler","methods","isChild"],"updatePoint":{"line":805,"column":65,"index":24079},"line":805,"code":"  it(\"should deprecate when watch option is used without callback\", () => {\n    const tracker = deprecationTracking.start();\n\n    const webpack = require(\"..\");\n\n    compiler = webpack({\n      watch: true\n    });\n    const deprecations = tracker();\n    expect(deprecations).toEqual([expect.objectContaining({\n      code: \"DEP_WEBPACK_WATCH_WITHOUT_CALLBACK\"\n    })]);\n  });","file":"Compiler.test.js","skipped":false,"dir":"test"},{"name":"should log to the console (verbose)","suites":["Compiler","infrastructure logging"],"updatePoint":{"line":848,"column":43,"index":25383},"line":848,"code":"    it(\"should log to the console (verbose)\", done => {\n      const webpack = require(\"..\");\n\n      compiler = webpack({\n        context: path.join(__dirname, \"fixtures\"),\n        entry: \"./a\",\n        output: {\n          path: \"/directory\",\n          filename: \"bundle.js\"\n        },\n        infrastructureLogging: {\n          level: \"verbose\"\n        },\n        plugins: [new MyPlugin()]\n      });\n      compiler.outputFileSystem = createFsFromVolume(new Volume());\n      compiler.run((err, stats) => {\n        expect(capture.toString().replace(/[\\d.]+ ms/, \"X ms\")).toMatchInlineSnapshot(`\n\"<-> [MyPlugin] Group\n  <e> [MyPlugin] Error\n  <w> [MyPlugin] Warning\n  <i> [MyPlugin] Info\n      [MyPlugin] Log\n  <-> [MyPlugin] Collapsed group\n        [MyPlugin] Log inside collapsed group\n<t> [MyPlugin] Time: X ms\n\"\n`);\n        done();\n      });\n    });","file":"Compiler.test.js","skipped":false,"dir":"test"},{"name":"should log to the console (debug mode)","suites":["Compiler","infrastructure logging"],"updatePoint":{"line":879,"column":46,"index":26237},"line":879,"code":"    it(\"should log to the console (debug mode)\", done => {\n      const webpack = require(\"..\");\n\n      compiler = webpack({\n        context: path.join(__dirname, \"fixtures\"),\n        entry: \"./a\",\n        output: {\n          path: \"/directory\",\n          filename: \"bundle.js\"\n        },\n        infrastructureLogging: {\n          level: \"error\",\n          debug: /MyPlugin/\n        },\n        plugins: [new MyPlugin()]\n      });\n      compiler.outputFileSystem = createFsFromVolume(new Volume());\n      compiler.run((err, stats) => {\n        expect(capture.toString().replace(/[\\d.]+ ms/, \"X ms\")).toMatchInlineSnapshot(`\n\"<-> [MyPlugin] Group\n  <e> [MyPlugin] Error\n  <w> [MyPlugin] Warning\n  <i> [MyPlugin] Info\n      [MyPlugin] Log\n      [MyPlugin] Debug\n  <-> [MyPlugin] Collapsed group\n        [MyPlugin] Log inside collapsed group\n<t> [MyPlugin] Time: X ms\n\"\n`);\n        done();\n      });\n    });","file":"Compiler.test.js","skipped":false,"dir":"test"},{"name":"should log to the console (none)","suites":["Compiler","infrastructure logging"],"updatePoint":{"line":912,"column":40,"index":27135},"line":912,"code":"    it(\"should log to the console (none)\", done => {\n      const webpack = require(\"..\");\n\n      compiler = webpack({\n        context: path.join(__dirname, \"fixtures\"),\n        entry: \"./a\",\n        output: {\n          path: \"/directory\",\n          filename: \"bundle.js\"\n        },\n        infrastructureLogging: {\n          level: \"none\"\n        },\n        plugins: [new MyPlugin()]\n      });\n      compiler.outputFileSystem = createFsFromVolume(new Volume());\n      compiler.run((err, stats) => {\n        expect(capture.toString()).toMatchInlineSnapshot(`\"\"`);\n        done();\n      });\n    });","file":"Compiler.test.js","skipped":false,"dir":"test"},{"name":"should log to the console with colors (verbose)","suites":["Compiler","infrastructure logging"],"updatePoint":{"line":933,"column":55,"index":27747},"line":933,"code":"    it(\"should log to the console with colors (verbose)\", done => {\n      const webpack = require(\"..\");\n\n      compiler = webpack({\n        context: path.join(__dirname, \"fixtures\"),\n        entry: \"./a\",\n        output: {\n          path: \"/directory\",\n          filename: \"bundle.js\"\n        },\n        infrastructureLogging: {\n          level: \"verbose\",\n          colors: true\n        },\n        plugins: [new MyPlugin()]\n      });\n      compiler.outputFileSystem = createFsFromVolume(new Volume());\n      compiler.run((err, stats) => {\n        expect(escapeAnsi(capture.toStringRaw()).replace(/[\\d.]+ ms/, \"X ms\")).toMatchInlineSnapshot(`\n\"<-> <CLR=36,BOLD>[MyPlugin] Group</CLR>\n  <e> <CLR=31,BOLD>[MyPlugin] Error</CLR>\n  <w> <CLR=33,BOLD>[MyPlugin] Warning</CLR>\n  <i> <CLR=32,BOLD>[MyPlugin] Info</CLR>\n      <CLR=BOLD>[MyPlugin] Log<CLR=22>\n  <-> <CLR=36,BOLD>[MyPlugin] Collapsed group</CLR>\n        <CLR=BOLD>[MyPlugin] Log inside collapsed group<CLR=22>\n<t> <CLR=35,BOLD>[MyPlugin] Time: X ms</CLR>\n\"\n`);\n        done();\n      });\n    });","file":"Compiler.test.js","skipped":false,"dir":"test"},{"name":"should log to the console with colors (debug mode)","suites":["Compiler","infrastructure logging"],"updatePoint":{"line":965,"column":58,"index":28802},"line":965,"code":"    it(\"should log to the console with colors (debug mode)\", done => {\n      const webpack = require(\"..\");\n\n      compiler = webpack({\n        context: path.join(__dirname, \"fixtures\"),\n        entry: \"./a\",\n        output: {\n          path: \"/directory\",\n          filename: \"bundle.js\"\n        },\n        infrastructureLogging: {\n          level: \"error\",\n          debug: /MyPlugin/,\n          colors: true\n        },\n        plugins: [new MyPlugin()]\n      });\n      compiler.outputFileSystem = createFsFromVolume(new Volume());\n      compiler.run((err, stats) => {\n        expect(escapeAnsi(capture.toStringRaw()).replace(/[\\d.]+ ms/, \"X ms\")).toMatchInlineSnapshot(`\n\"<-> <CLR=36,BOLD>[MyPlugin] Group</CLR>\n  <e> <CLR=31,BOLD>[MyPlugin] Error</CLR>\n  <w> <CLR=33,BOLD>[MyPlugin] Warning</CLR>\n  <i> <CLR=32,BOLD>[MyPlugin] Info</CLR>\n      <CLR=BOLD>[MyPlugin] Log<CLR=22>\n      [MyPlugin] Debug\n  <-> <CLR=36,BOLD>[MyPlugin] Collapsed group</CLR>\n        <CLR=BOLD>[MyPlugin] Log inside collapsed group<CLR=22>\n<t> <CLR=35,BOLD>[MyPlugin] Time: X ms</CLR>\n\"\n`);\n        done();\n      });\n    });","file":"Compiler.test.js","skipped":false,"dir":"test"},{"name":"returns an safe identifier for this module","suites":["contextModule","#identifier"],"updatePoint":{"line":12,"column":50,"index":284},"line":12,"code":"    it(\"returns an safe identifier for this module\", () => {\n      contextModule = new ContextModule(() => {}, {\n        type: \"javascript/auto\",\n        request,\n        resource: \"a\",\n        mode: \"lazy\",\n        regExp: /a|b/\n      });\n      expect(contextModule.identifier()).toEqual(expect.stringContaining(\"/a%7Cb/\"));\n    });","file":"ContextModule.unittest.js","skipped":false,"dir":"test"},{"name":"should not report an error when ENOENT errors happen","suites":["ContextModuleFactory","resolveDependencies"],"updatePoint":{"line":17,"column":60,"index":440},"line":17,"code":"    it(\"should not report an error when ENOENT errors happen\", done => {\n      memfs.readdir = (dir, callback) => {\n        setTimeout(() => callback(null, [\"/file\"]));\n      };\n\n      memfs.stat = (file, callback) => {\n        let err = new Error(\"fake ENOENT error\");\n        err.code = \"ENOENT\";\n        setTimeout(() => callback(err, null));\n      };\n\n      factory.resolveDependencies(memfs, {\n        resource: \"/\",\n        recursive: true,\n        regExp: /.*/\n      }, (err, res) => {\n        expect(err).toBeFalsy();\n        expect(Array.isArray(res)).toBe(true);\n        expect(res.length).toBe(0);\n        done();\n      });\n    });","file":"ContextModuleFactory.unittest.js","skipped":false,"dir":"test"},{"name":"should report an error when non-ENOENT errors happen","suites":["ContextModuleFactory","resolveDependencies"],"updatePoint":{"line":39,"column":60,"index":1083},"line":39,"code":"    it(\"should report an error when non-ENOENT errors happen\", done => {\n      memfs.readdir = (dir, callback) => {\n        setTimeout(() => callback(null, [\"/file\"]));\n      };\n\n      memfs.stat = (file, callback) => {\n        let err = new Error(\"fake EACCES error\");\n        err.code = \"EACCES\";\n        setTimeout(() => callback(err, null));\n      };\n\n      factory.resolveDependencies(memfs, {\n        resource: \"/\",\n        recursive: true,\n        regExp: /.*/\n      }, (err, res) => {\n        expect(err).toBeInstanceOf(Error);\n        expect(res).toBeFalsy();\n        done();\n      });\n    });","file":"ContextModuleFactory.unittest.js","skipped":false,"dir":"test"},{"name":"should return callback with [] if circular symlinks exist","suites":["ContextModuleFactory","resolveDependencies"],"updatePoint":{"line":60,"column":65,"index":1691},"line":60,"code":"    it(\"should return callback with [] if circular symlinks exist\", done => {\n      let statDirStatus = 0;\n\n      memfs.readdir = (dir, callback) => {\n        statDirStatus++;\n        setTimeout(() => callback(null, [\"/A\"]));\n      };\n\n      memfs.stat = (file, callback) => {\n        const resolvedValue = {\n          isDirectory: () => statDirStatus === 1,\n          isFile: () => statDirStatus !== 1\n        };\n        setTimeout(() => callback(null, resolvedValue));\n      };\n\n      memfs.realpath = (dir, callback) => {\n        const realPath = dir.split(\"/\");\n        setTimeout(() => callback(null, realPath[realPath.length - 1]));\n      };\n\n      factory.resolveDependencies(memfs, {\n        resource: \"/A\",\n        recursive: true,\n        regExp: /.*/\n      }, (err, res) => {\n        expect(res).toStrictEqual([]);\n        done();\n      });\n    });","file":"ContextModuleFactory.unittest.js","skipped":false,"dir":"test"},{"name":"should not return callback with [] if there are no circular symlinks","suites":["ContextModuleFactory","resolveDependencies"],"updatePoint":{"line":90,"column":76,"index":2562},"line":90,"code":"    it(\"should not return callback with [] if there are no circular symlinks\", done => {\n      let statDirStatus = 0;\n\n      memfs.readdir = (dir, callback) => {\n        statDirStatus++;\n        setTimeout(() => callback(null, [\"/B\"]));\n      };\n\n      memfs.stat = (file, callback) => {\n        const resolvedValue = {\n          isDirectory: () => statDirStatus === 1,\n          isFile: () => statDirStatus !== 1\n        };\n        setTimeout(() => callback(null, resolvedValue));\n      };\n\n      memfs.realpath = (dir, callback) => {\n        const realPath = dir.split(\"/\");\n        setTimeout(() => callback(null, realPath[realPath.length - 1]));\n      };\n\n      factory.resolveDependencies(memfs, {\n        resource: \"/A\",\n        recursive: true,\n        regExp: /.*/\n      }, (err, res) => {\n        expect(res).not.toStrictEqual([]);\n        expect(Array.isArray(res)).toBe(true);\n        expect(res.length).toBe(1);\n        done();\n      });\n    });","file":"ContextModuleFactory.unittest.js","skipped":false,"dir":"test"},{"name":"should resolve correctly several resources","suites":["ContextModuleFactory","resolveDependencies"],"updatePoint":{"line":122,"column":50,"index":3494},"line":122,"code":"    it(\"should resolve correctly several resources\", done => {\n      memfs.readdir = (dir, callback) => {\n        if (dir === \"/a\") setTimeout(() => callback(null, [\"/B\"]));\n        if (dir === \"/b\") setTimeout(() => callback(null, [\"/A\"]));\n        if (dir === \"/a/B\") setTimeout(() => callback(null, [\"a\"]));\n        if (dir === \"/b/A\") setTimeout(() => callback(null, [\"b\"]));\n      };\n\n      memfs.stat = (file, callback) => {\n        const resolvedValue = {\n          isDirectory: () => file !== \"/a/B/a\" && file !== \"/b/A/b\",\n          isFile: () => file === \"/a/B/a\" || file === \"/b/A/b\"\n        };\n        setTimeout(() => callback(null, resolvedValue));\n      };\n\n      memfs.realpath = undefined;\n      factory.resolveDependencies(memfs, {\n        resource: [\"/a\", \"/b\"],\n        resourceFragment: \"#hash\",\n        resourceQuery: \"?query\",\n        recursive: true,\n        regExp: /.*/\n      }, (err, res) => {\n        expect(res).not.toStrictEqual([]);\n        expect(Array.isArray(res)).toBe(true);\n        expect(res.map(r => r.request)).toEqual([\"./B/a?query#hash\", \"./A/b?query#hash\"]);\n        expect(res.map(r => r.getContext())).toEqual([\"/a\", \"/b\"]);\n        expect(res.map(r => r.userRequest)).toEqual([\"./B/a\", \"./A/b\"]);\n        done();\n      });\n    });","file":"ContextModuleFactory.unittest.js","skipped":false,"dir":"test"},{"name":"should have the correct base config","suites":["snapshots"],"updatePoint":{"line":80,"column":41,"index":1832},"line":80,"code":"  it(\"should have the correct base config\", () => {\n    expect(baseConfig).toMatchInlineSnapshot(`\n\t\tObject {\n\t\t  \"amd\": undefined,\n\t\t  \"bail\": undefined,\n\t\t  \"cache\": false,\n\t\t  \"context\": \"<cwd>\",\n\t\t  \"dependencies\": undefined,\n\t\t  \"devServer\": undefined,\n\t\t  \"devtool\": false,\n\t\t  \"entry\": Object {\n\t\t    \"main\": Object {\n\t\t      \"import\": Array [\n\t\t        \"./src\",\n\t\t      ],\n\t\t    },\n\t\t  },\n\t\t  \"experiments\": Object {\n\t\t    \"asyncWebAssembly\": false,\n\t\t    \"backCompat\": true,\n\t\t    \"buildHttp\": undefined,\n\t\t    \"cacheUnaffected\": false,\n\t\t    \"css\": undefined,\n\t\t    \"futureDefaults\": false,\n\t\t    \"layers\": false,\n\t\t    \"lazyCompilation\": undefined,\n\t\t    \"outputModule\": false,\n\t\t    \"syncWebAssembly\": false,\n\t\t    \"topLevelAwait\": false,\n\t\t  },\n\t\t  \"externals\": undefined,\n\t\t  \"externalsPresets\": Object {\n\t\t    \"electron\": false,\n\t\t    \"electronMain\": false,\n\t\t    \"electronPreload\": false,\n\t\t    \"electronRenderer\": false,\n\t\t    \"node\": false,\n\t\t    \"nwjs\": false,\n\t\t    \"web\": true,\n\t\t  },\n\t\t  \"externalsType\": \"var\",\n\t\t  \"ignoreWarnings\": undefined,\n\t\t  \"infrastructureLogging\": Object {},\n\t\t  \"loader\": Object {\n\t\t    \"target\": \"web\",\n\t\t  },\n\t\t  \"mode\": \"none\",\n\t\t  \"module\": Object {\n\t\t    \"defaultRules\": Array [\n\t\t      Object {\n\t\t        \"mimetype\": \"application/node\",\n\t\t        \"type\": \"javascript/auto\",\n\t\t      },\n\t\t      Object {\n\t\t        \"test\": /\\\\\\\\\\\\.json\\\\$/i,\n\t\t        \"type\": \"json\",\n\t\t      },\n\t\t      Object {\n\t\t        \"mimetype\": \"application/json\",\n\t\t        \"type\": \"json\",\n\t\t      },\n\t\t      Object {\n\t\t        \"resolve\": Object {\n\t\t          \"byDependency\": Object {\n\t\t            \"esm\": Object {\n\t\t              \"fullySpecified\": true,\n\t\t            },\n\t\t          },\n\t\t        },\n\t\t        \"test\": /\\\\\\\\\\\\.mjs\\\\$/i,\n\t\t        \"type\": \"javascript/esm\",\n\t\t      },\n\t\t      Object {\n\t\t        \"descriptionData\": Object {\n\t\t          \"type\": \"module\",\n\t\t        },\n\t\t        \"resolve\": Object {\n\t\t          \"byDependency\": Object {\n\t\t            \"esm\": Object {\n\t\t              \"fullySpecified\": true,\n\t\t            },\n\t\t          },\n\t\t        },\n\t\t        \"test\": /\\\\\\\\\\\\.js\\\\$/i,\n\t\t        \"type\": \"javascript/esm\",\n\t\t      },\n\t\t      Object {\n\t\t        \"test\": /\\\\\\\\\\\\.cjs\\\\$/i,\n\t\t        \"type\": \"javascript/dynamic\",\n\t\t      },\n\t\t      Object {\n\t\t        \"descriptionData\": Object {\n\t\t          \"type\": \"commonjs\",\n\t\t        },\n\t\t        \"test\": /\\\\\\\\\\\\.js\\\\$/i,\n\t\t        \"type\": \"javascript/dynamic\",\n\t\t      },\n\t\t      Object {\n\t\t        \"mimetype\": Object {\n\t\t          \"or\": Array [\n\t\t            \"text/javascript\",\n\t\t            \"application/javascript\",\n\t\t          ],\n\t\t        },\n\t\t        \"resolve\": Object {\n\t\t          \"byDependency\": Object {\n\t\t            \"esm\": Object {\n\t\t              \"fullySpecified\": true,\n\t\t            },\n\t\t          },\n\t\t        },\n\t\t        \"type\": \"javascript/esm\",\n\t\t      },\n\t\t      Object {\n\t\t        \"dependency\": \"url\",\n\t\t        \"oneOf\": Array [\n\t\t          Object {\n\t\t            \"scheme\": /\\\\^data\\\\$/,\n\t\t            \"type\": \"asset/inline\",\n\t\t          },\n\t\t          Object {\n\t\t            \"type\": \"asset/resource\",\n\t\t          },\n\t\t        ],\n\t\t      },\n\t\t      Object {\n\t\t        \"assert\": Object {\n\t\t          \"type\": \"json\",\n\t\t        },\n\t\t        \"type\": \"json\",\n\t\t      },\n\t\t    ],\n\t\t    \"generator\": Object {},\n\t\t    \"noParse\": undefined,\n\t\t    \"parser\": Object {\n\t\t      \"asset\": Object {\n\t\t        \"dataUrlCondition\": Object {\n\t\t          \"maxSize\": 8096,\n\t\t        },\n\t\t      },\n\t\t      \"javascript\": Object {\n\t\t        \"createRequire\": false,\n\t\t        \"dynamicImportMode\": \"lazy\",\n\t\t        \"dynamicImportPrefetch\": false,\n\t\t        \"dynamicImportPreload\": false,\n\t\t        \"exprContextCritical\": true,\n\t\t        \"exprContextRecursive\": true,\n\t\t        \"exprContextRegExp\": false,\n\t\t        \"exprContextRequest\": \".\",\n\t\t        \"importMeta\": true,\n\t\t        \"strictExportPresence\": undefined,\n\t\t        \"strictThisContextOnImports\": false,\n\t\t        \"unknownContextCritical\": true,\n\t\t        \"unknownContextRecursive\": true,\n\t\t        \"unknownContextRegExp\": false,\n\t\t        \"unknownContextRequest\": \".\",\n\t\t        \"wrappedContextCritical\": false,\n\t\t        \"wrappedContextRecursive\": true,\n\t\t        \"wrappedContextRegExp\": /\\\\.\\\\*/,\n\t\t      },\n\t\t    },\n\t\t    \"rules\": Array [],\n\t\t    \"unsafeCache\": false,\n\t\t  },\n\t\t  \"name\": undefined,\n\t\t  \"node\": Object {\n\t\t    \"__dirname\": \"mock\",\n\t\t    \"__filename\": \"mock\",\n\t\t    \"global\": true,\n\t\t  },\n\t\t  \"optimization\": Object {\n\t\t    \"checkWasmTypes\": false,\n\t\t    \"chunkIds\": \"natural\",\n\t\t    \"concatenateModules\": false,\n\t\t    \"emitOnErrors\": true,\n\t\t    \"flagIncludedChunks\": false,\n\t\t    \"innerGraph\": false,\n\t\t    \"mangleExports\": false,\n\t\t    \"mangleWasmImports\": false,\n\t\t    \"mergeDuplicateChunks\": true,\n\t\t    \"minimize\": false,\n\t\t    \"minimizer\": Array [\n\t\t      Object {\n\t\t        \"apply\": [Function],\n\t\t      },\n\t\t    ],\n\t\t    \"moduleIds\": \"natural\",\n\t\t    \"nodeEnv\": false,\n\t\t    \"portableRecords\": false,\n\t\t    \"providedExports\": true,\n\t\t    \"realContentHash\": false,\n\t\t    \"removeAvailableModules\": false,\n\t\t    \"removeEmptyChunks\": true,\n\t\t    \"runtimeChunk\": false,\n\t\t    \"sideEffects\": \"flag\",\n\t\t    \"splitChunks\": Object {\n\t\t      \"automaticNameDelimiter\": \"-\",\n\t\t      \"cacheGroups\": Object {\n\t\t        \"default\": Object {\n\t\t          \"idHint\": \"\",\n\t\t          \"minChunks\": 2,\n\t\t          \"priority\": -20,\n\t\t          \"reuseExistingChunk\": true,\n\t\t        },\n\t\t        \"defaultVendors\": Object {\n\t\t          \"idHint\": \"vendors\",\n\t\t          \"priority\": -10,\n\t\t          \"reuseExistingChunk\": true,\n\t\t          \"test\": /\\\\[\\\\\\\\\\\\\\\\/\\\\]node_modules\\\\[\\\\\\\\\\\\\\\\/\\\\]/i,\n\t\t        },\n\t\t      },\n\t\t      \"chunks\": \"async\",\n\t\t      \"defaultSizeTypes\": Array [\n\t\t        \"javascript\",\n\t\t        \"unknown\",\n\t\t      ],\n\t\t      \"enforceSizeThreshold\": 30000,\n\t\t      \"hidePathInfo\": false,\n\t\t      \"maxAsyncRequests\": Infinity,\n\t\t      \"maxInitialRequests\": Infinity,\n\t\t      \"minChunks\": 1,\n\t\t      \"minRemainingSize\": undefined,\n\t\t      \"minSize\": 10000,\n\t\t      \"usedExports\": false,\n\t\t    },\n\t\t    \"usedExports\": false,\n\t\t  },\n\t\t  \"output\": Object {\n\t\t    \"assetModuleFilename\": \"[hash][ext][query]\",\n\t\t    \"asyncChunks\": true,\n\t\t    \"charset\": true,\n\t\t    \"chunkFilename\": \"[name].js\",\n\t\t    \"chunkFormat\": \"array-push\",\n\t\t    \"chunkLoadTimeout\": 120000,\n\t\t    \"chunkLoading\": \"jsonp\",\n\t\t    \"chunkLoadingGlobal\": \"webpackChunkwebpack\",\n\t\t    \"clean\": undefined,\n\t\t    \"compareBeforeEmit\": true,\n\t\t    \"crossOriginLoading\": false,\n\t\t    \"cssChunkFilename\": \"[name].css\",\n\t\t    \"cssFilename\": \"[name].css\",\n\t\t    \"devtoolFallbackModuleFilenameTemplate\": undefined,\n\t\t    \"devtoolModuleFilenameTemplate\": undefined,\n\t\t    \"devtoolNamespace\": \"webpack\",\n\t\t    \"enabledChunkLoadingTypes\": Array [\n\t\t      \"jsonp\",\n\t\t      \"import-scripts\",\n\t\t    ],\n\t\t    \"enabledLibraryTypes\": Array [],\n\t\t    \"enabledWasmLoadingTypes\": Array [\n\t\t      \"fetch\",\n\t\t    ],\n\t\t    \"environment\": Object {\n\t\t      \"arrowFunction\": true,\n\t\t      \"bigIntLiteral\": undefined,\n\t\t      \"const\": true,\n\t\t      \"destructuring\": true,\n\t\t      \"dynamicImport\": undefined,\n\t\t      \"forOf\": true,\n\t\t      \"module\": undefined,\n\t\t    },\n\t\t    \"filename\": \"[name].js\",\n\t\t    \"globalObject\": \"self\",\n\t\t    \"hashDigest\": \"hex\",\n\t\t    \"hashDigestLength\": 20,\n\t\t    \"hashFunction\": \"md4\",\n\t\t    \"hashSalt\": undefined,\n\t\t    \"hotUpdateChunkFilename\": \"[id].[fullhash].hot-update.js\",\n\t\t    \"hotUpdateGlobal\": \"webpackHotUpdatewebpack\",\n\t\t    \"hotUpdateMainFilename\": \"[runtime].[fullhash].hot-update.json\",\n\t\t    \"iife\": true,\n\t\t    \"importFunctionName\": \"import\",\n\t\t    \"importMetaName\": \"import.meta\",\n\t\t    \"library\": undefined,\n\t\t    \"module\": false,\n\t\t    \"path\": \"<cwd>/dist\",\n\t\t    \"pathinfo\": false,\n\t\t    \"publicPath\": \"auto\",\n\t\t    \"scriptType\": false,\n\t\t    \"sourceMapFilename\": \"[file].map[query]\",\n\t\t    \"sourcePrefix\": undefined,\n\t\t    \"strictModuleExceptionHandling\": false,\n\t\t    \"trustedTypes\": undefined,\n\t\t    \"uniqueName\": \"webpack\",\n\t\t    \"wasmLoading\": \"fetch\",\n\t\t    \"webassemblyModuleFilename\": \"[hash].module.wasm\",\n\t\t    \"workerChunkLoading\": \"import-scripts\",\n\t\t    \"workerWasmLoading\": \"fetch\",\n\t\t  },\n\t\t  \"parallelism\": 100,\n\t\t  \"performance\": false,\n\t\t  \"plugins\": Array [],\n\t\t  \"profile\": false,\n\t\t  \"recordsInputPath\": false,\n\t\t  \"recordsOutputPath\": false,\n\t\t  \"resolve\": Object {\n\t\t    \"aliasFields\": Array [],\n\t\t    \"byDependency\": Object {\n\t\t      \"amd\": Object {\n\t\t        \"aliasFields\": Array [\n\t\t          \"browser\",\n\t\t        ],\n\t\t        \"conditionNames\": Array [\n\t\t          \"require\",\n\t\t          \"module\",\n\t\t          \"...\",\n\t\t        ],\n\t\t        \"extensions\": Array [\n\t\t          \".js\",\n\t\t          \".json\",\n\t\t          \".wasm\",\n\t\t        ],\n\t\t        \"mainFields\": Array [\n\t\t          \"browser\",\n\t\t          \"module\",\n\t\t          \"...\",\n\t\t        ],\n\t\t      },\n\t\t      \"commonjs\": Object {\n\t\t        \"aliasFields\": Array [\n\t\t          \"browser\",\n\t\t        ],\n\t\t        \"conditionNames\": Array [\n\t\t          \"require\",\n\t\t          \"module\",\n\t\t          \"...\",\n\t\t        ],\n\t\t        \"extensions\": Array [\n\t\t          \".js\",\n\t\t          \".json\",\n\t\t          \".wasm\",\n\t\t        ],\n\t\t        \"mainFields\": Array [\n\t\t          \"browser\",\n\t\t          \"module\",\n\t\t          \"...\",\n\t\t        ],\n\t\t      },\n\t\t      \"esm\": Object {\n\t\t        \"aliasFields\": Array [\n\t\t          \"browser\",\n\t\t        ],\n\t\t        \"conditionNames\": Array [\n\t\t          \"import\",\n\t\t          \"module\",\n\t\t          \"...\",\n\t\t        ],\n\t\t        \"extensions\": Array [\n\t\t          \".js\",\n\t\t          \".json\",\n\t\t          \".wasm\",\n\t\t        ],\n\t\t        \"mainFields\": Array [\n\t\t          \"browser\",\n\t\t          \"module\",\n\t\t          \"...\",\n\t\t        ],\n\t\t      },\n\t\t      \"loader\": Object {\n\t\t        \"aliasFields\": Array [\n\t\t          \"browser\",\n\t\t        ],\n\t\t        \"conditionNames\": Array [\n\t\t          \"require\",\n\t\t          \"module\",\n\t\t          \"...\",\n\t\t        ],\n\t\t        \"extensions\": Array [\n\t\t          \".js\",\n\t\t          \".json\",\n\t\t          \".wasm\",\n\t\t        ],\n\t\t        \"mainFields\": Array [\n\t\t          \"browser\",\n\t\t          \"module\",\n\t\t          \"...\",\n\t\t        ],\n\t\t      },\n\t\t      \"loaderImport\": Object {\n\t\t        \"aliasFields\": Array [\n\t\t          \"browser\",\n\t\t        ],\n\t\t        \"conditionNames\": Array [\n\t\t          \"import\",\n\t\t          \"module\",\n\t\t          \"...\",\n\t\t        ],\n\t\t        \"extensions\": Array [\n\t\t          \".js\",\n\t\t          \".json\",\n\t\t          \".wasm\",\n\t\t        ],\n\t\t        \"mainFields\": Array [\n\t\t          \"browser\",\n\t\t          \"module\",\n\t\t          \"...\",\n\t\t        ],\n\t\t      },\n\t\t      \"undefined\": Object {\n\t\t        \"aliasFields\": Array [\n\t\t          \"browser\",\n\t\t        ],\n\t\t        \"conditionNames\": Array [\n\t\t          \"require\",\n\t\t          \"module\",\n\t\t          \"...\",\n\t\t        ],\n\t\t        \"extensions\": Array [\n\t\t          \".js\",\n\t\t          \".json\",\n\t\t          \".wasm\",\n\t\t        ],\n\t\t        \"mainFields\": Array [\n\t\t          \"browser\",\n\t\t          \"module\",\n\t\t          \"...\",\n\t\t        ],\n\t\t      },\n\t\t      \"unknown\": Object {\n\t\t        \"aliasFields\": Array [\n\t\t          \"browser\",\n\t\t        ],\n\t\t        \"conditionNames\": Array [\n\t\t          \"require\",\n\t\t          \"module\",\n\t\t          \"...\",\n\t\t        ],\n\t\t        \"extensions\": Array [\n\t\t          \".js\",\n\t\t          \".json\",\n\t\t          \".wasm\",\n\t\t        ],\n\t\t        \"mainFields\": Array [\n\t\t          \"browser\",\n\t\t          \"module\",\n\t\t          \"...\",\n\t\t        ],\n\t\t      },\n\t\t      \"url\": Object {\n\t\t        \"preferRelative\": true,\n\t\t      },\n\t\t      \"wasm\": Object {\n\t\t        \"aliasFields\": Array [\n\t\t          \"browser\",\n\t\t        ],\n\t\t        \"conditionNames\": Array [\n\t\t          \"import\",\n\t\t          \"module\",\n\t\t          \"...\",\n\t\t        ],\n\t\t        \"extensions\": Array [\n\t\t          \".js\",\n\t\t          \".json\",\n\t\t          \".wasm\",\n\t\t        ],\n\t\t        \"mainFields\": Array [\n\t\t          \"browser\",\n\t\t          \"module\",\n\t\t          \"...\",\n\t\t        ],\n\t\t      },\n\t\t      \"worker\": Object {\n\t\t        \"aliasFields\": Array [\n\t\t          \"browser\",\n\t\t        ],\n\t\t        \"conditionNames\": Array [\n\t\t          \"import\",\n\t\t          \"module\",\n\t\t          \"...\",\n\t\t        ],\n\t\t        \"extensions\": Array [\n\t\t          \".js\",\n\t\t          \".json\",\n\t\t          \".wasm\",\n\t\t        ],\n\t\t        \"mainFields\": Array [\n\t\t          \"browser\",\n\t\t          \"module\",\n\t\t          \"...\",\n\t\t        ],\n\t\t        \"preferRelative\": true,\n\t\t      },\n\t\t    },\n\t\t    \"cache\": false,\n\t\t    \"conditionNames\": Array [\n\t\t      \"webpack\",\n\t\t      \"production\",\n\t\t      \"browser\",\n\t\t    ],\n\t\t    \"exportsFields\": Array [\n\t\t      \"exports\",\n\t\t    ],\n\t\t    \"extensions\": Array [],\n\t\t    \"mainFields\": Array [\n\t\t      \"main\",\n\t\t    ],\n\t\t    \"mainFiles\": Array [\n\t\t      \"index\",\n\t\t    ],\n\t\t    \"modules\": Array [\n\t\t      \"node_modules\",\n\t\t    ],\n\t\t    \"roots\": Array [\n\t\t      \"<cwd>\",\n\t\t    ],\n\t\t  },\n\t\t  \"resolveLoader\": Object {\n\t\t    \"cache\": false,\n\t\t    \"conditionNames\": Array [\n\t\t      \"loader\",\n\t\t      \"require\",\n\t\t      \"node\",\n\t\t    ],\n\t\t    \"exportsFields\": Array [\n\t\t      \"exports\",\n\t\t    ],\n\t\t    \"extensions\": Array [\n\t\t      \".js\",\n\t\t    ],\n\t\t    \"mainFields\": Array [\n\t\t      \"loader\",\n\t\t      \"main\",\n\t\t    ],\n\t\t    \"mainFiles\": Array [\n\t\t      \"index\",\n\t\t    ],\n\t\t  },\n\t\t  \"snapshot\": Object {\n\t\t    \"buildDependencies\": Object {\n\t\t      \"hash\": true,\n\t\t      \"timestamp\": true,\n\t\t    },\n\t\t    \"immutablePaths\": Array [],\n\t\t    \"managedPaths\": Array [\n\t\t      \"<cwd>/node_modules/\",\n\t\t    ],\n\t\t    \"module\": Object {\n\t\t      \"timestamp\": true,\n\t\t    },\n\t\t    \"resolve\": Object {\n\t\t      \"timestamp\": true,\n\t\t    },\n\t\t    \"resolveBuildDependencies\": Object {\n\t\t      \"hash\": true,\n\t\t      \"timestamp\": true,\n\t\t    },\n\t\t  },\n\t\t  \"stats\": Object {},\n\t\t  \"target\": \"web\",\n\t\t  \"watch\": false,\n\t\t  \"watchOptions\": Object {},\n\t\t}\n\t`);\n  });","file":"Defaults.unittest.js","skipped":false,"dir":"test"},{"name":"should generate the correct defaults from ","suites":["snapshots"],"updatePoint":{"line":636,"column":57,"index":15715},"line":636,"code":"    it(`should generate the correct defaults from ${name}`, () => {\n      if (!(\"mode\" in options)) options.mode = \"none\";\n\n      try {\n        if (before) before();\n        const result = getDefaultConfig(options);\n        const diff = stripAnsi(jestDiff(baseConfig, result, {\n          expand: false,\n          contextLines: 0\n        }));\n        fn(expect(new Diff(diff)), expect(result));\n      } finally {\n        if (after) after();\n      }\n    });","file":"Defaults.unittest.js","skipped":false,"dir":"test"},{"name":"empty config","suites":["snapshots"],"updatePoint":{"line":653,"column":20,"index":16140},"line":653,"code":"  test(\"empty config\", {}, e => e.toMatchInlineSnapshot(`Compared values have no visual difference.`));","file":"Defaults.unittest.js","skipped":false,"dir":"test"},{"name":"none mode","suites":["snapshots"],"updatePoint":{"line":654,"column":17,"index":16241},"line":654,"code":"  test(\"none mode\", {\n    mode: \"none\"\n  }, e => e.toMatchInlineSnapshot(`Compared values have no visual difference.`));","file":"Defaults.unittest.js","skipped":false,"dir":"test"},{"name":"no mode provided","suites":["snapshots"],"updatePoint":{"line":657,"column":24,"index":16369},"line":657,"code":"  test(\"no mode provided\", {\n    mode: undefined\n  }, e => e.toMatchInlineSnapshot(`\n\t\t- Expected\n\t\t+ Received\n\n\t\t@@ ... @@\n\t\t-   \"mode\": \"none\",\n\t\t+   \"mode\": undefined,\n\t\t@@ ... @@\n\t\t-     \"checkWasmTypes\": false,\n\t\t-     \"chunkIds\": \"natural\",\n\t\t-     \"concatenateModules\": false,\n\t\t-     \"emitOnErrors\": true,\n\t\t-     \"flagIncludedChunks\": false,\n\t\t-     \"innerGraph\": false,\n\t\t-     \"mangleExports\": false,\n\t\t+     \"checkWasmTypes\": true,\n\t\t+     \"chunkIds\": \"deterministic\",\n\t\t+     \"concatenateModules\": true,\n\t\t+     \"emitOnErrors\": false,\n\t\t+     \"flagIncludedChunks\": true,\n\t\t+     \"innerGraph\": true,\n\t\t+     \"mangleExports\": true,\n\t\t@@ ... @@\n\t\t-     \"minimize\": false,\n\t\t+     \"minimize\": true,\n\t\t@@ ... @@\n\t\t-     \"moduleIds\": \"natural\",\n\t\t-     \"nodeEnv\": false,\n\t\t+     \"moduleIds\": \"deterministic\",\n\t\t+     \"nodeEnv\": \"production\",\n\t\t@@ ... @@\n\t\t-     \"realContentHash\": false,\n\t\t+     \"realContentHash\": true,\n\t\t@@ ... @@\n\t\t-     \"sideEffects\": \"flag\",\n\t\t+     \"sideEffects\": true,\n\t\t@@ ... @@\n\t\t-       \"enforceSizeThreshold\": 30000,\n\t\t-       \"hidePathInfo\": false,\n\t\t-       \"maxAsyncRequests\": Infinity,\n\t\t-       \"maxInitialRequests\": Infinity,\n\t\t+       \"enforceSizeThreshold\": 50000,\n\t\t+       \"hidePathInfo\": true,\n\t\t+       \"maxAsyncRequests\": 30,\n\t\t+       \"maxInitialRequests\": 30,\n\t\t@@ ... @@\n\t\t-       \"minSize\": 10000,\n\t\t-       \"usedExports\": false,\n\t\t+       \"minSize\": 20000,\n\t\t+       \"usedExports\": true,\n\t\t@@ ... @@\n\t\t-     \"usedExports\": false,\n\t\t+     \"usedExports\": true,\n\t\t@@ ... @@\n\t\t-   \"performance\": false,\n\t\t+   \"performance\": Object {\n\t\t+     \"hints\": \"warning\",\n\t\t+     \"maxAssetSize\": 250000,\n\t\t+     \"maxEntrypointSize\": 250000,\n\t\t+   },\n\t\t@@ ... @@\n\t\t+       \"hash\": true,\n\t\t@@ ... @@\n\t\t+       \"hash\": true,\n\t`));","file":"Defaults.unittest.js","skipped":false,"dir":"test"},{"name":"production","suites":["snapshots"],"updatePoint":{"line":724,"column":18,"index":18130},"line":724,"code":"  test(\"production\", {\n    mode: \"production\"\n  }, e => e.toMatchInlineSnapshot(`\n\t\t- Expected\n\t\t+ Received\n\n\t\t@@ ... @@\n\t\t-   \"mode\": \"none\",\n\t\t+   \"mode\": \"production\",\n\t\t@@ ... @@\n\t\t-     \"checkWasmTypes\": false,\n\t\t-     \"chunkIds\": \"natural\",\n\t\t-     \"concatenateModules\": false,\n\t\t-     \"emitOnErrors\": true,\n\t\t-     \"flagIncludedChunks\": false,\n\t\t-     \"innerGraph\": false,\n\t\t-     \"mangleExports\": false,\n\t\t+     \"checkWasmTypes\": true,\n\t\t+     \"chunkIds\": \"deterministic\",\n\t\t+     \"concatenateModules\": true,\n\t\t+     \"emitOnErrors\": false,\n\t\t+     \"flagIncludedChunks\": true,\n\t\t+     \"innerGraph\": true,\n\t\t+     \"mangleExports\": true,\n\t\t@@ ... @@\n\t\t-     \"minimize\": false,\n\t\t+     \"minimize\": true,\n\t\t@@ ... @@\n\t\t-     \"moduleIds\": \"natural\",\n\t\t-     \"nodeEnv\": false,\n\t\t+     \"moduleIds\": \"deterministic\",\n\t\t+     \"nodeEnv\": \"production\",\n\t\t@@ ... @@\n\t\t-     \"realContentHash\": false,\n\t\t+     \"realContentHash\": true,\n\t\t@@ ... @@\n\t\t-     \"sideEffects\": \"flag\",\n\t\t+     \"sideEffects\": true,\n\t\t@@ ... @@\n\t\t-       \"enforceSizeThreshold\": 30000,\n\t\t-       \"hidePathInfo\": false,\n\t\t-       \"maxAsyncRequests\": Infinity,\n\t\t-       \"maxInitialRequests\": Infinity,\n\t\t+       \"enforceSizeThreshold\": 50000,\n\t\t+       \"hidePathInfo\": true,\n\t\t+       \"maxAsyncRequests\": 30,\n\t\t+       \"maxInitialRequests\": 30,\n\t\t@@ ... @@\n\t\t-       \"minSize\": 10000,\n\t\t-       \"usedExports\": false,\n\t\t+       \"minSize\": 20000,\n\t\t+       \"usedExports\": true,\n\t\t@@ ... @@\n\t\t-     \"usedExports\": false,\n\t\t+     \"usedExports\": true,\n\t\t@@ ... @@\n\t\t-   \"performance\": false,\n\t\t+   \"performance\": Object {\n\t\t+     \"hints\": \"warning\",\n\t\t+     \"maxAssetSize\": 250000,\n\t\t+     \"maxEntrypointSize\": 250000,\n\t\t+   },\n\t\t@@ ... @@\n\t\t+       \"hash\": true,\n\t\t@@ ... @@\n\t\t+       \"hash\": true,\n\t`));","file":"Defaults.unittest.js","skipped":false,"dir":"test"},{"name":"development","suites":["snapshots"],"updatePoint":{"line":791,"column":19,"index":19898},"line":791,"code":"  test(\"development\", {\n    mode: \"development\"\n  }, e => e.toMatchInlineSnapshot(`\n\t\t- Expected\n\t\t+ Received\n\n\t\t@@ ... @@\n\t\t-   \"cache\": false,\n\t\t+   \"cache\": Object {\n\t\t+     \"cacheUnaffected\": false,\n\t\t+     \"maxGenerations\": Infinity,\n\t\t+     \"type\": \"memory\",\n\t\t+   },\n\t\t@@ ... @@\n\t\t-   \"devtool\": false,\n\t\t+   \"devtool\": \"eval\",\n\t\t@@ ... @@\n\t\t-   \"mode\": \"none\",\n\t\t+   \"mode\": \"development\",\n\t\t@@ ... @@\n\t\t-     \"unsafeCache\": false,\n\t\t+     \"unsafeCache\": [Function anonymous],\n\t\t@@ ... @@\n\t\t-     \"chunkIds\": \"natural\",\n\t\t+     \"chunkIds\": \"named\",\n\t\t@@ ... @@\n\t\t-     \"moduleIds\": \"natural\",\n\t\t-     \"nodeEnv\": false,\n\t\t+     \"moduleIds\": \"named\",\n\t\t+     \"nodeEnv\": \"development\",\n\t\t@@ ... @@\n\t\t-       \"minRemainingSize\": undefined,\n\t\t+       \"minRemainingSize\": 0,\n\t\t@@ ... @@\n\t\t-     \"pathinfo\": false,\n\t\t+     \"pathinfo\": true,\n\t\t@@ ... @@\n\t\t-     \"cache\": false,\n\t\t+     \"cache\": true,\n\t\t@@ ... @@\n\t\t-       \"production\",\n\t\t+       \"development\",\n\t\t@@ ... @@\n\t\t-     \"cache\": false,\n\t\t+     \"cache\": true,\n\t`));","file":"Defaults.unittest.js","skipped":false,"dir":"test"},{"name":"sync wasm","suites":["snapshots"],"updatePoint":{"line":837,"column":17,"index":20923},"line":837,"code":"  test(\"sync wasm\", {\n    experiments: {\n      syncWebAssembly: true\n    }\n  }, e => e.toMatchInlineSnapshot(`\n\t\t- Expected\n\t\t+ Received\n\n\t\t@@ ... @@\n\t\t-     \"syncWebAssembly\": false,\n\t\t+     \"syncWebAssembly\": true,\n\t\t@@ ... @@\n\t\t+       },\n\t\t+       Object {\n\t\t+         \"rules\": Array [\n\t\t+           Object {\n\t\t+             \"descriptionData\": Object {\n\t\t+               \"type\": \"module\",\n\t\t+             },\n\t\t+             \"resolve\": Object {\n\t\t+               \"fullySpecified\": true,\n\t\t+             },\n\t\t+           },\n\t\t+         ],\n\t\t+         \"test\": /\\\\.wasm$/i,\n\t\t+         \"type\": \"webassembly/sync\",\n\t\t+       },\n\t\t+       Object {\n\t\t+         \"mimetype\": \"application/wasm\",\n\t\t+         \"rules\": Array [\n\t\t+           Object {\n\t\t+             \"descriptionData\": Object {\n\t\t+               \"type\": \"module\",\n\t\t+             },\n\t\t+             \"resolve\": Object {\n\t\t+               \"fullySpecified\": true,\n\t\t+             },\n\t\t+           },\n\t\t+         ],\n\t\t+         \"type\": \"webassembly/sync\",\n\t`));","file":"Defaults.unittest.js","skipped":false,"dir":"test"},{"name":"output module","suites":["snapshots"],"updatePoint":{"line":878,"column":21,"index":21943},"line":878,"code":"  test(\"output module\", {\n    experiments: {\n      outputModule: true\n    }\n  }, e => e.toMatchInlineSnapshot(`\n\t\t- Expected\n\t\t+ Received\n\n\t\t@@ ... @@\n\t\t-     \"outputModule\": false,\n\t\t+     \"outputModule\": true,\n\t\t@@ ... @@\n\t\t-   \"externalsType\": \"var\",\n\t\t+   \"externalsType\": \"module\",\n\t\t@@ ... @@\n\t\t-     \"chunkFilename\": \"[name].js\",\n\t\t+     \"chunkFilename\": \"[name].mjs\",\n\t\t@@ ... @@\n\t\t-       \"dynamicImport\": undefined,\n\t\t+       \"dynamicImport\": true,\n\t\t@@ ... @@\n\t\t-       \"module\": undefined,\n\t\t+       \"module\": true,\n\t\t@@ ... @@\n\t\t-     \"filename\": \"[name].js\",\n\t\t+     \"filename\": \"[name].mjs\",\n\t\t@@ ... @@\n\t\t-     \"hotUpdateChunkFilename\": \"[id].[fullhash].hot-update.js\",\n\t\t+     \"hotUpdateChunkFilename\": \"[id].[fullhash].hot-update.mjs\",\n\t\t@@ ... @@\n\t\t-     \"iife\": true,\n\t\t+     \"iife\": false,\n\t\t@@ ... @@\n\t\t-     \"module\": false,\n\t\t+     \"module\": true,\n\t\t@@ ... @@\n\t\t-     \"scriptType\": false,\n\t\t+     \"scriptType\": \"module\",\n\t`));","file":"Defaults.unittest.js","skipped":false,"dir":"test"},{"name":"async wasm","suites":["snapshots"],"updatePoint":{"line":917,"column":18,"index":22891},"line":917,"code":"  test(\"async wasm\", {\n    experiments: {\n      asyncWebAssembly: true\n    }\n  }, e => e.toMatchInlineSnapshot(`\n\t\t- Expected\n\t\t+ Received\n\n\t\t@@ ... @@\n\t\t-     \"asyncWebAssembly\": false,\n\t\t+     \"asyncWebAssembly\": true,\n\t\t@@ ... @@\n\t\t+       },\n\t\t+       Object {\n\t\t+         \"rules\": Array [\n\t\t+           Object {\n\t\t+             \"descriptionData\": Object {\n\t\t+               \"type\": \"module\",\n\t\t+             },\n\t\t+             \"resolve\": Object {\n\t\t+               \"fullySpecified\": true,\n\t\t+             },\n\t\t+           },\n\t\t+         ],\n\t\t+         \"test\": /\\\\.wasm$/i,\n\t\t+         \"type\": \"webassembly/async\",\n\t\t+       },\n\t\t+       Object {\n\t\t+         \"mimetype\": \"application/wasm\",\n\t\t+         \"rules\": Array [\n\t\t+           Object {\n\t\t+             \"descriptionData\": Object {\n\t\t+               \"type\": \"module\",\n\t\t+             },\n\t\t+             \"resolve\": Object {\n\t\t+               \"fullySpecified\": true,\n\t\t+             },\n\t\t+           },\n\t\t+         ],\n\t\t+         \"type\": \"webassembly/async\",\n\t`));","file":"Defaults.unittest.js","skipped":false,"dir":"test"},{"name":"both wasm","suites":["snapshots"],"updatePoint":{"line":958,"column":17,"index":23912},"line":958,"code":"  test(\"both wasm\", {\n    experiments: {\n      syncWebAssembly: true,\n      asyncWebAssembly: true\n    }\n  }, e => e.toMatchInlineSnapshot(`\n\t\t\t- Expected\n\t\t\t+ Received\n\n\t\t\t@@ ... @@\n\t\t\t-     \"asyncWebAssembly\": false,\n\t\t\t+     \"asyncWebAssembly\": true,\n\t\t\t@@ ... @@\n\t\t\t-     \"syncWebAssembly\": false,\n\t\t\t+     \"syncWebAssembly\": true,\n\t\t\t@@ ... @@\n\t\t\t+       },\n\t\t\t+       Object {\n\t\t\t+         \"rules\": Array [\n\t\t\t+           Object {\n\t\t\t+             \"descriptionData\": Object {\n\t\t\t+               \"type\": \"module\",\n\t\t\t+             },\n\t\t\t+             \"resolve\": Object {\n\t\t\t+               \"fullySpecified\": true,\n\t\t\t+             },\n\t\t\t+           },\n\t\t\t+         ],\n\t\t\t+         \"test\": /\\\\.wasm$/i,\n\t\t\t+         \"type\": \"webassembly/async\",\n\t\t\t+       },\n\t\t\t+       Object {\n\t\t\t+         \"mimetype\": \"application/wasm\",\n\t\t\t+         \"rules\": Array [\n\t\t\t+           Object {\n\t\t\t+             \"descriptionData\": Object {\n\t\t\t+               \"type\": \"module\",\n\t\t\t+             },\n\t\t\t+             \"resolve\": Object {\n\t\t\t+               \"fullySpecified\": true,\n\t\t\t+             },\n\t\t\t+           },\n\t\t\t+         ],\n\t\t\t+         \"type\": \"webassembly/async\",\n\t\t`));","file":"Defaults.unittest.js","skipped":false,"dir":"test"},{"name":"const filename","suites":["snapshots"],"updatePoint":{"line":1003,"column":22,"index":25084},"line":1003,"code":"  test(\"const filename\", {\n    output: {\n      filename: \"bundle.js\"\n    }\n  }, e => e.toMatchInlineSnapshot(`\n\t\t- Expected\n\t\t+ Received\n\n\t\t@@ ... @@\n\t\t-     \"chunkFilename\": \"[name].js\",\n\t\t+     \"chunkFilename\": \"[id].bundle.js\",\n\t\t@@ ... @@\n\t\t-     \"cssChunkFilename\": \"[name].css\",\n\t\t-     \"cssFilename\": \"[name].css\",\n\t\t+     \"cssChunkFilename\": \"[id].bundle.css\",\n\t\t+     \"cssFilename\": \"bundle.css\",\n\t\t@@ ... @@\n\t\t-     \"filename\": \"[name].js\",\n\t\t+     \"filename\": \"bundle.js\",\n\t`));","file":"Defaults.unittest.js","skipped":false,"dir":"test"},{"name":"function filename","suites":["snapshots"],"updatePoint":{"line":1023,"column":25,"index":25577},"line":1023,"code":"  test(\"function filename\", {\n    output: {\n      filename: () => \"bundle.js\"\n    }\n  }, e => e.toMatchInlineSnapshot(`\n\t\t- Expected\n\t\t+ Received\n\n\t\t@@ ... @@\n\t\t-     \"chunkFilename\": \"[name].js\",\n\t\t+     \"chunkFilename\": \"[id].js\",\n\t\t@@ ... @@\n\t\t-     \"cssChunkFilename\": \"[name].css\",\n\t\t-     \"cssFilename\": \"[name].css\",\n\t\t+     \"cssChunkFilename\": \"[id].css\",\n\t\t+     \"cssFilename\": \"[id].css\",\n\t\t@@ ... @@\n\t\t-     \"filename\": \"[name].js\",\n\t\t+     \"filename\": [Function filename],\n\t`));","file":"Defaults.unittest.js","skipped":false,"dir":"test"},{"name":"library","suites":["snapshots"],"updatePoint":{"line":1043,"column":15,"index":26058},"line":1043,"code":"  test(\"library\", {\n    output: {\n      library: [\"myLib\", \"awesome\"]\n    }\n  }, e => e.toMatchInlineSnapshot(`\n\t\t- Expected\n\t\t+ Received\n\n\t\t@@ ... @@\n\t\t-     \"chunkLoadingGlobal\": \"webpackChunkwebpack\",\n\t\t+     \"chunkLoadingGlobal\": \"webpackChunkmyLib_awesome\",\n\t\t@@ ... @@\n\t\t-     \"devtoolNamespace\": \"webpack\",\n\t\t+     \"devtoolNamespace\": \"myLib.awesome\",\n\t\t@@ ... @@\n\t\t-     \"enabledLibraryTypes\": Array [],\n\t\t+     \"enabledLibraryTypes\": Array [\n\t\t+       \"var\",\n\t\t+     ],\n\t\t@@ ... @@\n\t\t-     \"hotUpdateGlobal\": \"webpackHotUpdatewebpack\",\n\t\t+     \"hotUpdateGlobal\": \"webpackHotUpdatemyLib_awesome\",\n\t\t@@ ... @@\n\t\t-     \"library\": undefined,\n\t\t+     \"library\": Object {\n\t\t+       \"auxiliaryComment\": undefined,\n\t\t+       \"export\": undefined,\n\t\t+       \"name\": Array [\n\t\t+         \"myLib\",\n\t\t+         \"awesome\",\n\t\t+       ],\n\t\t+       \"type\": \"var\",\n\t\t+       \"umdNamedDefine\": undefined,\n\t\t+     },\n\t\t@@ ... @@\n\t\t-     \"uniqueName\": \"webpack\",\n\t\t+     \"uniqueName\": \"myLib.awesome\",\n\t`));","file":"Defaults.unittest.js","skipped":false,"dir":"test"},{"name":"library contains [name] placeholder","suites":["snapshots"],"updatePoint":{"line":1081,"column":43,"index":27081},"line":1081,"code":"  test(\"library contains [name] placeholder\", {\n    output: {\n      library: [\"myLib\", \"[name]\"]\n    }\n  }, e => e.toMatchInlineSnapshot(`\n\t\t\t- Expected\n\t\t\t+ Received\n\n\t\t\t@@ ... @@\n\t\t\t-     \"chunkLoadingGlobal\": \"webpackChunkwebpack\",\n\t\t\t+     \"chunkLoadingGlobal\": \"webpackChunkmyLib\",\n\t\t\t@@ ... @@\n\t\t\t-     \"devtoolNamespace\": \"webpack\",\n\t\t\t+     \"devtoolNamespace\": \"myLib\",\n\t\t\t@@ ... @@\n\t\t\t-     \"enabledLibraryTypes\": Array [],\n\t\t\t+     \"enabledLibraryTypes\": Array [\n\t\t\t+       \"var\",\n\t\t\t+     ],\n\t\t\t@@ ... @@\n\t\t\t-     \"hotUpdateGlobal\": \"webpackHotUpdatewebpack\",\n\t\t\t+     \"hotUpdateGlobal\": \"webpackHotUpdatemyLib\",\n\t\t\t@@ ... @@\n\t\t\t-     \"library\": undefined,\n\t\t\t+     \"library\": Object {\n\t\t\t+       \"auxiliaryComment\": undefined,\n\t\t\t+       \"export\": undefined,\n\t\t\t+       \"name\": Array [\n\t\t\t+         \"myLib\",\n\t\t\t+         \"[name]\",\n\t\t\t+       ],\n\t\t\t+       \"type\": \"var\",\n\t\t\t+       \"umdNamedDefine\": undefined,\n\t\t\t+     },\n\t\t\t@@ ... @@\n\t\t\t-     \"uniqueName\": \"webpack\",\n\t\t\t+     \"uniqueName\": \"myLib\",\n\t\t`));","file":"Defaults.unittest.js","skipped":false,"dir":"test"},{"name":"library.name contains [name] placeholder","suites":["snapshots"],"updatePoint":{"line":1119,"column":48,"index":28107},"line":1119,"code":"  test(\"library.name contains [name] placeholder\", {\n    output: {\n      library: {\n        name: [\"my[name]Lib\", \"[name]\", \"lib\"],\n        type: \"var\"\n      }\n    }\n  }, e => e.toMatchInlineSnapshot(`\n\t\t\t- Expected\n\t\t\t+ Received\n\n\t\t\t@@ ... @@\n\t\t\t-     \"chunkLoadingGlobal\": \"webpackChunkwebpack\",\n\t\t\t+     \"chunkLoadingGlobal\": \"webpackChunkmyLib_lib\",\n\t\t\t@@ ... @@\n\t\t\t-     \"devtoolNamespace\": \"webpack\",\n\t\t\t+     \"devtoolNamespace\": \"myLib.lib\",\n\t\t\t@@ ... @@\n\t\t\t-     \"enabledLibraryTypes\": Array [],\n\t\t\t+     \"enabledLibraryTypes\": Array [\n\t\t\t+       \"var\",\n\t\t\t+     ],\n\t\t\t@@ ... @@\n\t\t\t-     \"hotUpdateGlobal\": \"webpackHotUpdatewebpack\",\n\t\t\t+     \"hotUpdateGlobal\": \"webpackHotUpdatemyLib_lib\",\n\t\t\t@@ ... @@\n\t\t\t-     \"library\": undefined,\n\t\t\t+     \"library\": Object {\n\t\t\t+       \"auxiliaryComment\": undefined,\n\t\t\t+       \"export\": undefined,\n\t\t\t+       \"name\": Array [\n\t\t\t+         \"my[name]Lib\",\n\t\t\t+         \"[name]\",\n\t\t\t+         \"lib\",\n\t\t\t+       ],\n\t\t\t+       \"type\": \"var\",\n\t\t\t+       \"umdNamedDefine\": undefined,\n\t\t\t+     },\n\t\t\t@@ ... @@\n\t\t\t-     \"uniqueName\": \"webpack\",\n\t\t\t+     \"uniqueName\": \"myLib.lib\",\n\t\t`));","file":"Defaults.unittest.js","skipped":false,"dir":"test"},{"name":"library.name.root contains [name] placeholder","suites":["snapshots"],"updatePoint":{"line":1161,"column":53,"index":29238},"line":1161,"code":"  test(\"library.name.root contains [name] placeholder\", {\n    output: {\n      library: {\n        name: {\n          root: [\"[name]\", \"myLib\"]\n        },\n        type: \"var\"\n      }\n    }\n  }, e => e.toMatchInlineSnapshot(`\n\t\t\t- Expected\n\t\t\t+ Received\n\n\t\t\t@@ ... @@\n\t\t\t-     \"chunkLoadingGlobal\": \"webpackChunkwebpack\",\n\t\t\t+     \"chunkLoadingGlobal\": \"webpackChunkmyLib\",\n\t\t\t@@ ... @@\n\t\t\t-     \"devtoolNamespace\": \"webpack\",\n\t\t\t+     \"devtoolNamespace\": \"myLib\",\n\t\t\t@@ ... @@\n\t\t\t-     \"enabledLibraryTypes\": Array [],\n\t\t\t+     \"enabledLibraryTypes\": Array [\n\t\t\t+       \"var\",\n\t\t\t+     ],\n\t\t\t@@ ... @@\n\t\t\t-     \"hotUpdateGlobal\": \"webpackHotUpdatewebpack\",\n\t\t\t+     \"hotUpdateGlobal\": \"webpackHotUpdatemyLib\",\n\t\t\t@@ ... @@\n\t\t\t-     \"library\": undefined,\n\t\t\t+     \"library\": Object {\n\t\t\t+       \"auxiliaryComment\": undefined,\n\t\t\t+       \"export\": undefined,\n\t\t\t+       \"name\": Object {\n\t\t\t+         \"root\": Array [\n\t\t\t+           \"[name]\",\n\t\t\t+           \"myLib\",\n\t\t\t+         ],\n\t\t\t+       },\n\t\t\t+       \"type\": \"var\",\n\t\t\t+       \"umdNamedDefine\": undefined,\n\t\t\t+     },\n\t\t\t@@ ... @@\n\t\t\t-     \"uniqueName\": \"webpack\",\n\t\t\t+     \"uniqueName\": \"myLib\",\n\t\t`));","file":"Defaults.unittest.js","skipped":false,"dir":"test"},{"name":"library.name.root contains escaped placeholder","suites":["snapshots"],"updatePoint":{"line":1206,"column":54,"index":30393},"line":1206,"code":"  test(\"library.name.root contains escaped placeholder\", {\n    output: {\n      library: {\n        name: {\n          root: [\"[\\\\name\\\\]\", \"my[\\\\name\\\\]Lib[name]\", \"[\\\\name\\\\]\"]\n        },\n        type: \"var\"\n      }\n    }\n  }, e => e.toMatchInlineSnapshot(`\n\t\t\t- Expected\n\t\t\t+ Received\n\n\t\t\t@@ ... @@\n\t\t\t-     \"chunkLoadingGlobal\": \"webpackChunkwebpack\",\n\t\t\t+     \"chunkLoadingGlobal\": \"webpackChunk_name_my_name_Lib_name_\",\n\t\t\t@@ ... @@\n\t\t\t-     \"devtoolNamespace\": \"webpack\",\n\t\t\t+     \"devtoolNamespace\": \"[name].my[name]Lib.[name]\",\n\t\t\t@@ ... @@\n\t\t\t-     \"enabledLibraryTypes\": Array [],\n\t\t\t+     \"enabledLibraryTypes\": Array [\n\t\t\t+       \"var\",\n\t\t\t+     ],\n\t\t\t@@ ... @@\n\t\t\t-     \"hotUpdateGlobal\": \"webpackHotUpdatewebpack\",\n\t\t\t+     \"hotUpdateGlobal\": \"webpackHotUpdate_name_my_name_Lib_name_\",\n\t\t\t@@ ... @@\n\t\t\t-     \"library\": undefined,\n\t\t\t+     \"library\": Object {\n\t\t\t+       \"auxiliaryComment\": undefined,\n\t\t\t+       \"export\": undefined,\n\t\t\t+       \"name\": Object {\n\t\t\t+         \"root\": Array [\n\t\t\t+           \"[\\\\\\\\name\\\\\\\\]\",\n\t\t\t+           \"my[\\\\\\\\name\\\\\\\\]Lib[name]\",\n\t\t\t+           \"[\\\\\\\\name\\\\\\\\]\",\n\t\t\t+         ],\n\t\t\t+       },\n\t\t\t+       \"type\": \"var\",\n\t\t\t+       \"umdNamedDefine\": undefined,\n\t\t\t+     },\n\t\t\t@@ ... @@\n\t\t\t-     \"uniqueName\": \"webpack\",\n\t\t\t+     \"uniqueName\": \"[name].my[name]Lib.[name]\",\n\t\t`));","file":"Defaults.unittest.js","skipped":false,"dir":"test"},{"name":"target node","suites":["snapshots"],"updatePoint":{"line":1252,"column":19,"index":31684},"line":1252,"code":"  test(\"target node\", {\n    target: \"node\"\n  }, e => e.toMatchInlineSnapshot(`\n\t\t- Expected\n\t\t+ Received\n\n\t\t@@ ... @@\n\t\t-     \"node\": false,\n\t\t+     \"node\": true,\n\t\t@@ ... @@\n\t\t-     \"web\": true,\n\t\t+     \"web\": false,\n\t\t@@ ... @@\n\t\t-     \"target\": \"web\",\n\t\t+     \"target\": \"node\",\n\t\t@@ ... @@\n\t\t-         \"createRequire\": false,\n\t\t+         \"createRequire\": true,\n\t\t@@ ... @@\n\t\t-     \"__dirname\": \"mock\",\n\t\t-     \"__filename\": \"mock\",\n\t\t-     \"global\": true,\n\t\t+     \"__dirname\": \"eval-only\",\n\t\t+     \"__filename\": \"eval-only\",\n\t\t+     \"global\": false,\n\t\t@@ ... @@\n\t\t-     \"chunkFormat\": \"array-push\",\n\t\t+     \"chunkFormat\": \"commonjs\",\n\t\t@@ ... @@\n\t\t-     \"chunkLoading\": \"jsonp\",\n\t\t+     \"chunkLoading\": \"require\",\n\t\t@@ ... @@\n\t\t-       \"jsonp\",\n\t\t-       \"import-scripts\",\n\t\t+       \"require\",\n\t\t@@ ... @@\n\t\t-       \"fetch\",\n\t\t+       \"async-node\",\n\t\t@@ ... @@\n\t\t-     \"globalObject\": \"self\",\n\t\t+     \"globalObject\": \"global\",\n\t\t@@ ... @@\n\t\t-     \"publicPath\": \"auto\",\n\t\t+     \"publicPath\": \"\",\n\t\t@@ ... @@\n\t\t-     \"wasmLoading\": \"fetch\",\n\t\t+     \"wasmLoading\": \"async-node\",\n\t\t@@ ... @@\n\t\t-     \"workerChunkLoading\": \"import-scripts\",\n\t\t-     \"workerWasmLoading\": \"fetch\",\n\t\t+     \"workerChunkLoading\": \"require\",\n\t\t+     \"workerWasmLoading\": \"async-node\",\n\t\t@@ ... @@\n\t\t-         \"aliasFields\": Array [\n\t\t-           \"browser\",\n\t\t-         ],\n\t\t+         \"aliasFields\": Array [],\n\t\t@@ ... @@\n\t\t-           \"browser\",\n\t\t@@ ... @@\n\t\t-         \"aliasFields\": Array [\n\t\t-           \"browser\",\n\t\t-         ],\n\t\t+         \"aliasFields\": Array [],\n\t\t@@ ... @@\n\t\t-           \"browser\",\n\t\t@@ ... @@\n\t\t-         \"aliasFields\": Array [\n\t\t-           \"browser\",\n\t\t-         ],\n\t\t+         \"aliasFields\": Array [],\n\t\t@@ ... @@\n\t\t-           \"browser\",\n\t\t@@ ... @@\n\t\t-         \"aliasFields\": Array [\n\t\t-           \"browser\",\n\t\t-         ],\n\t\t+         \"aliasFields\": Array [],\n\t\t@@ ... @@\n\t\t-           \"browser\",\n\t\t@@ ... @@\n\t\t-         \"aliasFields\": Array [\n\t\t-           \"browser\",\n\t\t-         ],\n\t\t+         \"aliasFields\": Array [],\n\t\t@@ ... @@\n\t\t-           \"browser\",\n\t\t@@ ... @@\n\t\t-         \"aliasFields\": Array [\n\t\t-           \"browser\",\n\t\t-         ],\n\t\t+         \"aliasFields\": Array [],\n\t\t@@ ... @@\n\t\t-           \"browser\",\n\t\t@@ ... @@\n\t\t-         \"aliasFields\": Array [\n\t\t-           \"browser\",\n\t\t-         ],\n\t\t+         \"aliasFields\": Array [],\n\t\t@@ ... @@\n\t\t-           \"browser\",\n\t\t@@ ... @@\n\t\t-         \"aliasFields\": Array [\n\t\t-           \"browser\",\n\t\t-         ],\n\t\t+         \"aliasFields\": Array [],\n\t\t@@ ... @@\n\t\t-           \"browser\",\n\t\t@@ ... @@\n\t\t-         \"aliasFields\": Array [\n\t\t-           \"browser\",\n\t\t-         ],\n\t\t+         \"aliasFields\": Array [],\n\t\t@@ ... @@\n\t\t-           \"browser\",\n\t\t@@ ... @@\n\t\t-       \"browser\",\n\t\t+       \"node\",\n\t\t@@ ... @@\n\t\t-   \"target\": \"web\",\n\t\t+   \"target\": \"node\",\n\t`));","file":"Defaults.unittest.js","skipped":false,"dir":"test"},{"name":"target webworker","suites":["snapshots"],"updatePoint":{"line":1374,"column":24,"index":34515},"line":1374,"code":"  test(\"target webworker\", {\n    target: \"webworker\"\n  }, e => e.toMatchInlineSnapshot(`\n\t\t- Expected\n\t\t+ Received\n\n\t\t@@ ... @@\n\t\t-     \"chunkLoading\": \"jsonp\",\n\t\t+     \"chunkLoading\": \"import-scripts\",\n\t\t@@ ... @@\n\t\t-       \"jsonp\",\n\t\t@@ ... @@\n\t\t+       \"worker\",\n\t\t@@ ... @@\n\t\t-   \"target\": \"web\",\n\t\t+   \"target\": \"webworker\",\n\t`));","file":"Defaults.unittest.js","skipped":false,"dir":"test"},{"name":"target electron-main","suites":["snapshots"],"updatePoint":{"line":1391,"column":28,"index":34855},"line":1391,"code":"  test(\"target electron-main\", {\n    target: \"electron-main\"\n  }, e => e.toMatchInlineSnapshot(`\n\t\t- Expected\n\t\t+ Received\n\n\t\t@@ ... @@\n\t\t-     \"electron\": false,\n\t\t-     \"electronMain\": false,\n\t\t+     \"electron\": true,\n\t\t+     \"electronMain\": true,\n\t\t@@ ... @@\n\t\t-     \"node\": false,\n\t\t+     \"node\": true,\n\t\t@@ ... @@\n\t\t-     \"web\": true,\n\t\t+     \"web\": false,\n\t\t@@ ... @@\n\t\t-     \"target\": \"web\",\n\t\t+     \"target\": \"electron-main\",\n\t\t@@ ... @@\n\t\t-         \"createRequire\": false,\n\t\t+         \"createRequire\": true,\n\t\t@@ ... @@\n\t\t-     \"__dirname\": \"mock\",\n\t\t-     \"__filename\": \"mock\",\n\t\t-     \"global\": true,\n\t\t+     \"__dirname\": \"eval-only\",\n\t\t+     \"__filename\": \"eval-only\",\n\t\t+     \"global\": false,\n\t\t@@ ... @@\n\t\t-     \"chunkFormat\": \"array-push\",\n\t\t+     \"chunkFormat\": \"commonjs\",\n\t\t@@ ... @@\n\t\t-     \"chunkLoading\": \"jsonp\",\n\t\t+     \"chunkLoading\": \"require\",\n\t\t@@ ... @@\n\t\t-       \"jsonp\",\n\t\t-       \"import-scripts\",\n\t\t+       \"require\",\n\t\t@@ ... @@\n\t\t-       \"fetch\",\n\t\t+       \"async-node\",\n\t\t@@ ... @@\n\t\t-     \"globalObject\": \"self\",\n\t\t+     \"globalObject\": \"global\",\n\t\t@@ ... @@\n\t\t-     \"publicPath\": \"auto\",\n\t\t+     \"publicPath\": \"\",\n\t\t@@ ... @@\n\t\t-     \"wasmLoading\": \"fetch\",\n\t\t+     \"wasmLoading\": \"async-node\",\n\t\t@@ ... @@\n\t\t-     \"workerChunkLoading\": \"import-scripts\",\n\t\t-     \"workerWasmLoading\": \"fetch\",\n\t\t+     \"workerChunkLoading\": \"require\",\n\t\t+     \"workerWasmLoading\": \"async-node\",\n\t\t@@ ... @@\n\t\t-         \"aliasFields\": Array [\n\t\t-           \"browser\",\n\t\t-         ],\n\t\t+         \"aliasFields\": Array [],\n\t\t@@ ... @@\n\t\t-           \"browser\",\n\t\t@@ ... @@\n\t\t-         \"aliasFields\": Array [\n\t\t-           \"browser\",\n\t\t-         ],\n\t\t+         \"aliasFields\": Array [],\n\t\t@@ ... @@\n\t\t-           \"browser\",\n\t\t@@ ... @@\n\t\t-         \"aliasFields\": Array [\n\t\t-           \"browser\",\n\t\t-         ],\n\t\t+         \"aliasFields\": Array [],\n\t\t@@ ... @@\n\t\t-           \"browser\",\n\t\t@@ ... @@\n\t\t-         \"aliasFields\": Array [\n\t\t-           \"browser\",\n\t\t-         ],\n\t\t+         \"aliasFields\": Array [],\n\t\t@@ ... @@\n\t\t-           \"browser\",\n\t\t@@ ... @@\n\t\t-         \"aliasFields\": Array [\n\t\t-           \"browser\",\n\t\t-         ],\n\t\t+         \"aliasFields\": Array [],\n\t\t@@ ... @@\n\t\t-           \"browser\",\n\t\t@@ ... @@\n\t\t-         \"aliasFields\": Array [\n\t\t-           \"browser\",\n\t\t-         ],\n\t\t+         \"aliasFields\": Array [],\n\t\t@@ ... @@\n\t\t-           \"browser\",\n\t\t@@ ... @@\n\t\t-         \"aliasFields\": Array [\n\t\t-           \"browser\",\n\t\t-         ],\n\t\t+         \"aliasFields\": Array [],\n\t\t@@ ... @@\n\t\t-           \"browser\",\n\t\t@@ ... @@\n\t\t-         \"aliasFields\": Array [\n\t\t-           \"browser\",\n\t\t-         ],\n\t\t+         \"aliasFields\": Array [],\n\t\t@@ ... @@\n\t\t-           \"browser\",\n\t\t@@ ... @@\n\t\t-         \"aliasFields\": Array [\n\t\t-           \"browser\",\n\t\t-         ],\n\t\t+         \"aliasFields\": Array [],\n\t\t@@ ... @@\n\t\t-           \"browser\",\n\t\t@@ ... @@\n\t\t-       \"browser\",\n\t\t+       \"node\",\n\t\t+       \"electron\",\n\t\t@@ ... @@\n\t\t-   \"target\": \"web\",\n\t\t+   \"target\": \"electron-main\",\n\t`));","file":"Defaults.unittest.js","skipped":false,"dir":"test"},{"name":"target electron-main","suites":["snapshots"],"updatePoint":{"line":1519,"column":28,"index":37865},"line":1519,"code":"  test(\"target electron-main\", {\n    target: \"electron-preload\"\n  }, e => e.toMatchInlineSnapshot(`\n\t\t- Expected\n\t\t+ Received\n\n\t\t@@ ... @@\n\t\t-     \"electron\": false,\n\t\t+     \"electron\": true,\n\t\t@@ ... @@\n\t\t-     \"electronPreload\": false,\n\t\t+     \"electronPreload\": true,\n\t\t@@ ... @@\n\t\t-     \"node\": false,\n\t\t+     \"node\": true,\n\t\t@@ ... @@\n\t\t-     \"target\": \"web\",\n\t\t+     \"target\": \"electron-preload\",\n\t\t@@ ... @@\n\t\t-         \"createRequire\": false,\n\t\t+         \"createRequire\": true,\n\t\t@@ ... @@\n\t\t-     \"__dirname\": \"mock\",\n\t\t-     \"__filename\": \"mock\",\n\t\t-     \"global\": true,\n\t\t+     \"__dirname\": \"eval-only\",\n\t\t+     \"__filename\": \"eval-only\",\n\t\t+     \"global\": false,\n\t\t@@ ... @@\n\t\t-     \"chunkFormat\": \"array-push\",\n\t\t+     \"chunkFormat\": \"commonjs\",\n\t\t@@ ... @@\n\t\t-     \"chunkLoading\": \"jsonp\",\n\t\t+     \"chunkLoading\": \"require\",\n\t\t@@ ... @@\n\t\t-       \"jsonp\",\n\t\t-       \"import-scripts\",\n\t\t+       \"require\",\n\t\t@@ ... @@\n\t\t-       \"fetch\",\n\t\t+       \"async-node\",\n\t\t@@ ... @@\n\t\t-     \"globalObject\": \"self\",\n\t\t+     \"globalObject\": \"global\",\n\t\t@@ ... @@\n\t\t-     \"publicPath\": \"auto\",\n\t\t+     \"publicPath\": \"\",\n\t\t@@ ... @@\n\t\t-     \"wasmLoading\": \"fetch\",\n\t\t+     \"wasmLoading\": \"async-node\",\n\t\t@@ ... @@\n\t\t-     \"workerChunkLoading\": \"import-scripts\",\n\t\t-     \"workerWasmLoading\": \"fetch\",\n\t\t+     \"workerChunkLoading\": \"require\",\n\t\t+     \"workerWasmLoading\": \"async-node\",\n\t\t@@ ... @@\n\t\t-         \"aliasFields\": Array [\n\t\t-           \"browser\",\n\t\t-         ],\n\t\t+         \"aliasFields\": Array [],\n\t\t@@ ... @@\n\t\t-           \"browser\",\n\t\t@@ ... @@\n\t\t-         \"aliasFields\": Array [\n\t\t-           \"browser\",\n\t\t-         ],\n\t\t+         \"aliasFields\": Array [],\n\t\t@@ ... @@\n\t\t-           \"browser\",\n\t\t@@ ... @@\n\t\t-         \"aliasFields\": Array [\n\t\t-           \"browser\",\n\t\t-         ],\n\t\t+         \"aliasFields\": Array [],\n\t\t@@ ... @@\n\t\t-           \"browser\",\n\t\t@@ ... @@\n\t\t-         \"aliasFields\": Array [\n\t\t-           \"browser\",\n\t\t-         ],\n\t\t+         \"aliasFields\": Array [],\n\t\t@@ ... @@\n\t\t-           \"browser\",\n\t\t@@ ... @@\n\t\t-         \"aliasFields\": Array [\n\t\t-           \"browser\",\n\t\t-         ],\n\t\t+         \"aliasFields\": Array [],\n\t\t@@ ... @@\n\t\t-           \"browser\",\n\t\t@@ ... @@\n\t\t-         \"aliasFields\": Array [\n\t\t-           \"browser\",\n\t\t-         ],\n\t\t+         \"aliasFields\": Array [],\n\t\t@@ ... @@\n\t\t-           \"browser\",\n\t\t@@ ... @@\n\t\t-         \"aliasFields\": Array [\n\t\t-           \"browser\",\n\t\t-         ],\n\t\t+         \"aliasFields\": Array [],\n\t\t@@ ... @@\n\t\t-           \"browser\",\n\t\t@@ ... @@\n\t\t-         \"aliasFields\": Array [\n\t\t-           \"browser\",\n\t\t-         ],\n\t\t+         \"aliasFields\": Array [],\n\t\t@@ ... @@\n\t\t-           \"browser\",\n\t\t@@ ... @@\n\t\t-         \"aliasFields\": Array [\n\t\t-           \"browser\",\n\t\t-         ],\n\t\t+         \"aliasFields\": Array [],\n\t\t@@ ... @@\n\t\t-           \"browser\",\n\t\t@@ ... @@\n\t\t+       \"node\",\n\t\t@@ ... @@\n\t\t+       \"electron\",\n\t\t@@ ... @@\n\t\t-   \"target\": \"web\",\n\t\t+   \"target\": \"electron-preload\",\n\t`));","file":"Defaults.unittest.js","skipped":false,"dir":"test"},{"name":"records","suites":["snapshots"],"updatePoint":{"line":1645,"column":15,"index":40825},"line":1645,"code":"  test(\"records\", {\n    recordsPath: \"some-path\"\n  }, e => e.toMatchInlineSnapshot(`\n\t\t- Expected\n\t\t+ Received\n\n\t\t@@ ... @@\n\t\t-     \"portableRecords\": false,\n\t\t+     \"portableRecords\": true,\n\t\t@@ ... @@\n\t\t-   \"recordsInputPath\": false,\n\t\t-   \"recordsOutputPath\": false,\n\t\t+   \"recordsInputPath\": \"some-path\",\n\t\t+   \"recordsOutputPath\": \"some-path\",\n\t`));","file":"Defaults.unittest.js","skipped":false,"dir":"test"},{"name":"ecmaVersion","suites":["snapshots"],"updatePoint":{"line":1660,"column":19,"index":41184},"line":1660,"code":"  test(\"ecmaVersion\", {\n    output: {\n      ecmaVersion: 2020\n    }\n  }, e => e.toMatchInlineSnapshot(`Compared values have no visual difference.`));","file":"Defaults.unittest.js","skipped":false,"dir":"test"},{"name":"single runtimeChunk","suites":["snapshots"],"updatePoint":{"line":1665,"column":27,"index":41342},"line":1665,"code":"  test(\"single runtimeChunk\", {\n    optimization: {\n      runtimeChunk: \"single\"\n    }\n  }, e => e.toMatchInlineSnapshot(`\n\t\t- Expected\n\t\t+ Received\n\n\t\t@@ ... @@\n\t\t-     \"runtimeChunk\": false,\n\t\t+     \"runtimeChunk\": Object {\n\t\t+       \"name\": [Function name],\n\t\t+     },\n\t`));","file":"Defaults.unittest.js","skipped":false,"dir":"test"},{"name":"single runtimeChunk","suites":["snapshots"],"updatePoint":{"line":1679,"column":27,"index":41620},"line":1679,"code":"  test(\"single runtimeChunk\", {\n    optimization: {\n      runtimeChunk: \"multiple\"\n    }\n  }, e => e.toMatchInlineSnapshot(`\n\t\t\t- Expected\n\t\t\t+ Received\n\n\t\t\t@@ ... @@\n\t\t\t-     \"runtimeChunk\": false,\n\t\t\t+     \"runtimeChunk\": Object {\n\t\t\t+       \"name\": [Function name],\n\t\t\t+     },\n\t\t`));","file":"Defaults.unittest.js","skipped":false,"dir":"test"},{"name":"single runtimeChunk","suites":["snapshots"],"updatePoint":{"line":1693,"column":27,"index":41908},"line":1693,"code":"  test(\"single runtimeChunk\", {\n    optimization: {\n      runtimeChunk: true\n    }\n  }, e => e.toMatchInlineSnapshot(`\n\t\t- Expected\n\t\t+ Received\n\n\t\t@@ ... @@\n\t\t-     \"runtimeChunk\": false,\n\t\t+     \"runtimeChunk\": Object {\n\t\t+       \"name\": [Function name],\n\t\t+     },\n\t`));","file":"Defaults.unittest.js","skipped":false,"dir":"test"},{"name":"cache true","suites":["snapshots"],"updatePoint":{"line":1707,"column":18,"index":42173},"line":1707,"code":"  test(\"cache true\", {\n    cache: true\n  }, e => e.toMatchInlineSnapshot(`\n\t\t- Expected\n\t\t+ Received\n\n\t\t@@ ... @@\n\t\t-   \"cache\": false,\n\t\t+   \"cache\": Object {\n\t\t+     \"cacheUnaffected\": false,\n\t\t+     \"maxGenerations\": Infinity,\n\t\t+     \"type\": \"memory\",\n\t\t+   },\n\t\t@@ ... @@\n\t\t-     \"unsafeCache\": false,\n\t\t+     \"unsafeCache\": [Function anonymous],\n\t\t@@ ... @@\n\t\t-     \"cache\": false,\n\t\t+     \"cache\": true,\n\t\t@@ ... @@\n\t\t-     \"cache\": false,\n\t\t+     \"cache\": true,\n\t`));","file":"Defaults.unittest.js","skipped":false,"dir":"test"},{"name":"cache filesystem","suites":["snapshots"],"updatePoint":{"line":1730,"column":24,"index":42655},"line":1730,"code":"  test(\"cache filesystem\", {\n    cache: {\n      type: \"filesystem\"\n    }\n  }, e => e.toMatchInlineSnapshot(`\n\t\t- Expected\n\t\t+ Received\n\n\t\t@@ ... @@\n\t\t-   \"cache\": false,\n\t\t+   \"cache\": Object {\n\t\t+     \"allowCollectingMemory\": false,\n\t\t+     \"buildDependencies\": Object {\n\t\t+       \"defaultWebpack\": Array [\n\t\t+         \"<cwd>/lib/\",\n\t\t+       ],\n\t\t+     },\n\t\t+     \"cacheDirectory\": \"<cwd>/node_modules/.cache/webpack\",\n\t\t+     \"cacheLocation\": \"<cwd>/node_modules/.cache/webpack/default-none\",\n\t\t+     \"compression\": false,\n\t\t+     \"hashAlgorithm\": \"md4\",\n\t\t+     \"idleTimeout\": 60000,\n\t\t+     \"idleTimeoutAfterLargeChanges\": 1000,\n\t\t+     \"idleTimeoutForInitialStore\": 5000,\n\t\t+     \"maxAge\": 5184000000,\n\t\t+     \"maxMemoryGenerations\": Infinity,\n\t\t+     \"memoryCacheUnaffected\": false,\n\t\t+     \"name\": \"default-none\",\n\t\t+     \"profile\": false,\n\t\t+     \"store\": \"pack\",\n\t\t+     \"type\": \"filesystem\",\n\t\t+     \"version\": \"\",\n\t\t+   },\n\t\t@@ ... @@\n\t\t-     \"unsafeCache\": false,\n\t\t+     \"unsafeCache\": [Function anonymous],\n\t\t@@ ... @@\n\t\t-     \"cache\": false,\n\t\t+     \"cache\": true,\n\t\t@@ ... @@\n\t\t-     \"cache\": false,\n\t\t+     \"cache\": true,\n\t`));","file":"Defaults.unittest.js","skipped":false,"dir":"test"},{"name":"cache filesystem development","suites":["snapshots"],"updatePoint":{"line":1773,"column":36,"index":43813},"line":1773,"code":"  test(\"cache filesystem development\", {\n    mode: \"development\",\n    cache: {\n      type: \"filesystem\"\n    }\n  }, e => e.toMatchInlineSnapshot(`\n\t\t\t- Expected\n\t\t\t+ Received\n\n\t\t\t@@ ... @@\n\t\t\t-   \"cache\": false,\n\t\t\t+   \"cache\": Object {\n\t\t\t+     \"allowCollectingMemory\": true,\n\t\t\t+     \"buildDependencies\": Object {\n\t\t\t+       \"defaultWebpack\": Array [\n\t\t\t+         \"<cwd>/lib/\",\n\t\t\t+       ],\n\t\t\t+     },\n\t\t\t+     \"cacheDirectory\": \"<cwd>/node_modules/.cache/webpack\",\n\t\t\t+     \"cacheLocation\": \"<cwd>/node_modules/.cache/webpack/default-development\",\n\t\t\t+     \"compression\": false,\n\t\t\t+     \"hashAlgorithm\": \"md4\",\n\t\t\t+     \"idleTimeout\": 60000,\n\t\t\t+     \"idleTimeoutAfterLargeChanges\": 1000,\n\t\t\t+     \"idleTimeoutForInitialStore\": 5000,\n\t\t\t+     \"maxAge\": 5184000000,\n\t\t\t+     \"maxMemoryGenerations\": 5,\n\t\t\t+     \"memoryCacheUnaffected\": false,\n\t\t\t+     \"name\": \"default-development\",\n\t\t\t+     \"profile\": false,\n\t\t\t+     \"store\": \"pack\",\n\t\t\t+     \"type\": \"filesystem\",\n\t\t\t+     \"version\": \"\",\n\t\t\t+   },\n\t\t\t@@ ... @@\n\t\t\t-   \"devtool\": false,\n\t\t\t+   \"devtool\": \"eval\",\n\t\t\t@@ ... @@\n\t\t\t-   \"mode\": \"none\",\n\t\t\t+   \"mode\": \"development\",\n\t\t\t@@ ... @@\n\t\t\t-     \"unsafeCache\": false,\n\t\t\t+     \"unsafeCache\": [Function anonymous],\n\t\t\t@@ ... @@\n\t\t\t-     \"chunkIds\": \"natural\",\n\t\t\t+     \"chunkIds\": \"named\",\n\t\t\t@@ ... @@\n\t\t\t-     \"moduleIds\": \"natural\",\n\t\t\t-     \"nodeEnv\": false,\n\t\t\t+     \"moduleIds\": \"named\",\n\t\t\t+     \"nodeEnv\": \"development\",\n\t\t\t@@ ... @@\n\t\t\t-       \"minRemainingSize\": undefined,\n\t\t\t+       \"minRemainingSize\": 0,\n\t\t\t@@ ... @@\n\t\t\t-     \"pathinfo\": false,\n\t\t\t+     \"pathinfo\": true,\n\t\t\t@@ ... @@\n\t\t\t-     \"cache\": false,\n\t\t\t+     \"cache\": true,\n\t\t\t@@ ... @@\n\t\t\t-       \"production\",\n\t\t\t+       \"development\",\n\t\t\t@@ ... @@\n\t\t\t-     \"cache\": false,\n\t\t\t+     \"cache\": true,\n\t\t`));","file":"Defaults.unittest.js","skipped":false,"dir":"test"},{"name":"disable","suites":["snapshots"],"updatePoint":{"line":1840,"column":15,"index":45583},"line":1840,"code":"  test(\"disable\", {\n    cache: false,\n    node: false,\n    amd: false,\n    optimization: {\n      splitChunks: false\n    }\n  }, e => e.toMatchInlineSnapshot(`\n\t\t\t- Expected\n\t\t\t+ Received\n\n\t\t\t@@ ... @@\n\t\t\t-   \"amd\": undefined,\n\t\t\t+   \"amd\": false,\n\t\t\t@@ ... @@\n\t\t\t-   \"node\": Object {\n\t\t\t-     \"__dirname\": \"mock\",\n\t\t\t-     \"__filename\": \"mock\",\n\t\t\t-     \"global\": true,\n\t\t\t-   },\n\t\t\t+   \"node\": false,\n\t\t\t@@ ... @@\n\t\t\t-     \"splitChunks\": Object {\n\t\t\t-       \"automaticNameDelimiter\": \"-\",\n\t\t\t-       \"cacheGroups\": Object {\n\t\t\t-         \"default\": Object {\n\t\t\t-           \"idHint\": \"\",\n\t\t\t-           \"minChunks\": 2,\n\t\t\t-           \"priority\": -20,\n\t\t\t-           \"reuseExistingChunk\": true,\n\t\t\t-         },\n\t\t\t-         \"defaultVendors\": Object {\n\t\t\t-           \"idHint\": \"vendors\",\n\t\t\t-           \"priority\": -10,\n\t\t\t-           \"reuseExistingChunk\": true,\n\t\t\t-           \"test\": /[\\\\\\\\/]node_modules[\\\\\\\\/]/i,\n\t\t\t-         },\n\t\t\t-       },\n\t\t\t-       \"chunks\": \"async\",\n\t\t\t-       \"defaultSizeTypes\": Array [\n\t\t\t-         \"javascript\",\n\t\t\t-         \"unknown\",\n\t\t\t-       ],\n\t\t\t-       \"enforceSizeThreshold\": 30000,\n\t\t\t-       \"hidePathInfo\": false,\n\t\t\t-       \"maxAsyncRequests\": Infinity,\n\t\t\t-       \"maxInitialRequests\": Infinity,\n\t\t\t-       \"minChunks\": 1,\n\t\t\t-       \"minRemainingSize\": undefined,\n\t\t\t-       \"minSize\": 10000,\n\t\t\t-       \"usedExports\": false,\n\t\t\t-     },\n\t\t\t+     \"splitChunks\": false,\n\t\t`));","file":"Defaults.unittest.js","skipped":false,"dir":"test"},{"name":"uniqueName","suites":["snapshots"],"updatePoint":{"line":1894,"column":18,"index":47004},"line":1894,"code":"  test(\"uniqueName\", {\n    output: {\n      uniqueName: \"@@@Hello World!\",\n      trustedTypes: true\n    }\n  }, e => e.toMatchInlineSnapshot(`\n\t\t\t- Expected\n\t\t\t+ Received\n\n\t\t\t@@ ... @@\n\t\t\t-     \"chunkLoadingGlobal\": \"webpackChunkwebpack\",\n\t\t\t+     \"chunkLoadingGlobal\": \"webpackChunk_Hello_World_\",\n\t\t\t@@ ... @@\n\t\t\t-     \"devtoolNamespace\": \"webpack\",\n\t\t\t+     \"devtoolNamespace\": \"@@@Hello World!\",\n\t\t\t@@ ... @@\n\t\t\t-     \"hotUpdateGlobal\": \"webpackHotUpdatewebpack\",\n\t\t\t+     \"hotUpdateGlobal\": \"webpackHotUpdate_Hello_World_\",\n\t\t\t@@ ... @@\n\t\t\t-     \"trustedTypes\": undefined,\n\t\t\t-     \"uniqueName\": \"webpack\",\n\t\t\t+     \"trustedTypes\": Object {\n\t\t\t+       \"policyName\": \"@@@Hello_World_\",\n\t\t\t+     },\n\t\t\t+     \"uniqueName\": \"@@@Hello World!\",\n\t\t`));","file":"Defaults.unittest.js","skipped":false,"dir":"test"},{"name":"stats true","suites":["snapshots"],"updatePoint":{"line":1920,"column":18,"index":47753},"line":1920,"code":"  test(\"stats true\", {\n    stats: true\n  }, e => e.toMatchInlineSnapshot(`\n\t\t- Expected\n\t\t+ Received\n\n\t\t@@ ... @@\n\t\t-   \"stats\": Object {},\n\t\t+   \"stats\": Object {\n\t\t+     \"preset\": \"normal\",\n\t\t+   },\n\t\t`));","file":"Defaults.unittest.js","skipped":false,"dir":"test"},{"name":"stats false","suites":["snapshots"],"updatePoint":{"line":1932,"column":19,"index":47962},"line":1932,"code":"  test(\"stats false\", {\n    stats: false\n  }, e => e.toMatchInlineSnapshot(`\n\t\t- Expected\n\t\t+ Received\n\n\t\t@@ ... @@\n\t\t-   \"stats\": Object {},\n\t\t+   \"stats\": Object {\n\t\t+     \"preset\": \"none\",\n\t\t+   },\n\t\t`));","file":"Defaults.unittest.js","skipped":false,"dir":"test"},{"name":"stats string","suites":["snapshots"],"updatePoint":{"line":1944,"column":20,"index":48171},"line":1944,"code":"  test(\"stats string\", {\n    stats: \"minimal\"\n  }, e => e.toMatchInlineSnapshot(`\n\t\t- Expected\n\t\t+ Received\n\n\t\t@@ ... @@\n\t\t-   \"stats\": Object {},\n\t\t+   \"stats\": Object {\n\t\t+     \"preset\": \"minimal\",\n\t\t+   },\n\t\t`));","file":"Defaults.unittest.js","skipped":false,"dir":"test"},{"name":"browserslist","suites":["snapshots"],"updatePoint":{"line":1956,"column":20,"index":48387},"line":1956,"code":"  test(\"browserslist\", {\n    context: path.resolve(__dirname, \"fixtures/browserslist\")\n  }, e => e.toMatchInlineSnapshot(`\n\t\t\t- Expected\n\t\t\t+ Received\n\n\t\t\t@@ ... @@\n\t\t\t-   \"context\": \"<cwd>\",\n\t\t\t+   \"context\": \"<cwd>/test/fixtures/browserslist\",\n\t\t\t@@ ... @@\n\t\t\t-     \"chunkLoadingGlobal\": \"webpackChunkwebpack\",\n\t\t\t+     \"chunkLoadingGlobal\": \"webpackChunkbrowserslist_test\",\n\t\t\t@@ ... @@\n\t\t\t-     \"devtoolNamespace\": \"webpack\",\n\t\t\t+     \"devtoolNamespace\": \"browserslist-test\",\n\t\t\t@@ ... @@\n\t\t\t-       \"arrowFunction\": true,\n\t\t\t-       \"bigIntLiteral\": undefined,\n\t\t\t-       \"const\": true,\n\t\t\t-       \"destructuring\": true,\n\t\t\t-       \"dynamicImport\": undefined,\n\t\t\t-       \"forOf\": true,\n\t\t\t-       \"module\": undefined,\n\t\t\t+       \"arrowFunction\": false,\n\t\t\t+       \"bigIntLiteral\": false,\n\t\t\t+       \"const\": false,\n\t\t\t+       \"destructuring\": false,\n\t\t\t+       \"dynamicImport\": false,\n\t\t\t+       \"forOf\": false,\n\t\t\t+       \"module\": false,\n\t\t\t@@ ... @@\n\t\t\t-     \"hotUpdateGlobal\": \"webpackHotUpdatewebpack\",\n\t\t\t+     \"hotUpdateGlobal\": \"webpackHotUpdatebrowserslist_test\",\n\t\t\t@@ ... @@\n\t\t\t-     \"uniqueName\": \"webpack\",\n\t\t\t+     \"uniqueName\": \"browserslist-test\",\n\t\t\t@@ ... @@\n\t\t\t-       \"<cwd>\",\n\t\t\t+       \"<cwd>/test/fixtures/browserslist\",\n\t\t\t@@ ... @@\n\t\t\t-   \"target\": \"web\",\n\t\t\t+   \"target\": \"browserslist\",\n\t\t`));","file":"Defaults.unittest.js","skipped":false,"dir":"test"},{"name":"non-root directory","suites":["snapshots"],"updatePoint":{"line":1999,"column":26,"index":49719},"line":1999,"code":"  test(\"non-root directory\", {\n    cache: {\n      type: \"filesystem\"\n    }\n  }, e => e.toMatchInlineSnapshot(`\n\t\t\t- Expected\n\t\t\t+ Received\n\n\t\t\t@@ ... @@\n\t\t\t-   \"cache\": false,\n\t\t\t-   \"context\": \"<cwd>\",\n\t\t\t+   \"cache\": Object {\n\t\t\t+     \"allowCollectingMemory\": false,\n\t\t\t+     \"buildDependencies\": Object {\n\t\t\t+       \"defaultWebpack\": Array [\n\t\t\t+         \"<cwd>/lib/\",\n\t\t\t+       ],\n\t\t\t+     },\n\t\t\t+     \"cacheDirectory\": \"<cwd>/node_modules/.cache/webpack\",\n\t\t\t+     \"cacheLocation\": \"<cwd>/node_modules/.cache/webpack/default-none\",\n\t\t\t+     \"compression\": false,\n\t\t\t+     \"hashAlgorithm\": \"md4\",\n\t\t\t+     \"idleTimeout\": 60000,\n\t\t\t+     \"idleTimeoutAfterLargeChanges\": 1000,\n\t\t\t+     \"idleTimeoutForInitialStore\": 5000,\n\t\t\t+     \"maxAge\": 5184000000,\n\t\t\t+     \"maxMemoryGenerations\": Infinity,\n\t\t\t+     \"memoryCacheUnaffected\": false,\n\t\t\t+     \"name\": \"default-none\",\n\t\t\t+     \"profile\": false,\n\t\t\t+     \"store\": \"pack\",\n\t\t\t+     \"type\": \"filesystem\",\n\t\t\t+     \"version\": \"\",\n\t\t\t+   },\n\t\t\t+   \"context\": \"<cwd>/test/fixtures\",\n\t\t\t@@ ... @@\n\t\t\t-     \"unsafeCache\": false,\n\t\t\t+     \"unsafeCache\": [Function anonymous],\n\t\t\t@@ ... @@\n\t\t\t-     \"chunkLoadingGlobal\": \"webpackChunkwebpack\",\n\t\t\t+     \"chunkLoadingGlobal\": \"webpackChunk\",\n\t\t\t@@ ... @@\n\t\t\t-     \"devtoolNamespace\": \"webpack\",\n\t\t\t+     \"devtoolNamespace\": \"\",\n\t\t\t@@ ... @@\n\t\t\t-     \"hotUpdateGlobal\": \"webpackHotUpdatewebpack\",\n\t\t\t+     \"hotUpdateGlobal\": \"webpackHotUpdate\",\n\t\t\t@@ ... @@\n\t\t\t-     \"path\": \"<cwd>/dist\",\n\t\t\t+     \"path\": \"<cwd>/test/fixtures/dist\",\n\t\t\t@@ ... @@\n\t\t\t-     \"uniqueName\": \"webpack\",\n\t\t\t+     \"uniqueName\": \"\",\n\t\t\t@@ ... @@\n\t\t\t-     \"cache\": false,\n\t\t\t+     \"cache\": true,\n\t\t\t@@ ... @@\n\t\t\t-       \"<cwd>\",\n\t\t\t+       \"<cwd>/test/fixtures\",\n\t\t\t@@ ... @@\n\t\t\t-     \"cache\": false,\n\t\t\t+     \"cache\": true,\n\t\t`), () => {\n    process.chdir(path.resolve(__dirname, \"fixtures\"));\n  }, () => {\n    process.chdir(cwd);\n  });","file":"Defaults.unittest.js","skipped":false,"dir":"test"},{"name":"array defaults","suites":["snapshots"],"updatePoint":{"line":2066,"column":22,"index":51620},"line":2066,"code":"  test(\"array defaults\", {\n    output: {\n      enabledChunkLoadingTypes: [\"require\", \"...\"],\n      enabledWasmLoadingTypes: [\"...\", \"async-node\"]\n    }\n  }, e => e.toMatchInlineSnapshot(`\n\t\t\t- Expected\n\t\t\t+ Received\n\n\t\t\t@@ ... @@\n\t\t\t+       \"require\",\n\t\t\t@@ ... @@\n\t\t\t+       \"async-node\",\n\t\t`));","file":"Defaults.unittest.js","skipped":false,"dir":"test"},{"name":"experiments.futureDefaults","suites":["snapshots"],"updatePoint":{"line":2080,"column":34,"index":51929},"line":2080,"code":"  test(\"experiments.futureDefaults\", {\n    experiments: {\n      futureDefaults: true\n    }\n  }, e => e.toMatchInlineSnapshot(`\n\t\t\t- Expected\n\t\t\t+ Received\n\n\t\t\t@@ ... @@\n\t\t\t-     \"asyncWebAssembly\": false,\n\t\t\t-     \"backCompat\": true,\n\t\t\t+     \"asyncWebAssembly\": true,\n\t\t\t+     \"backCompat\": false,\n\t\t\t@@ ... @@\n\t\t\t-     \"cacheUnaffected\": false,\n\t\t\t-     \"css\": undefined,\n\t\t\t-     \"futureDefaults\": false,\n\t\t\t+     \"cacheUnaffected\": true,\n\t\t\t+     \"css\": Object {\n\t\t\t+       \"exportsOnly\": false,\n\t\t\t+     },\n\t\t\t+     \"futureDefaults\": true,\n\t\t\t@@ ... @@\n\t\t\t-     \"topLevelAwait\": false,\n\t\t\t+     \"topLevelAwait\": true,\n\t\t\t@@ ... @@\n\t\t\t+       },\n\t\t\t+       Object {\n\t\t\t+         \"rules\": Array [\n\t\t\t+           Object {\n\t\t\t+             \"descriptionData\": Object {\n\t\t\t+               \"type\": \"module\",\n\t\t\t+             },\n\t\t\t+             \"resolve\": Object {\n\t\t\t+               \"fullySpecified\": true,\n\t\t\t+             },\n\t\t\t+           },\n\t\t\t+         ],\n\t\t\t+         \"test\": /\\\\.wasm$/i,\n\t\t\t+         \"type\": \"webassembly/async\",\n\t\t\t+       },\n\t\t\t+       Object {\n\t\t\t+         \"mimetype\": \"application/wasm\",\n\t\t\t+         \"rules\": Array [\n\t\t\t+           Object {\n\t\t\t+             \"descriptionData\": Object {\n\t\t\t+               \"type\": \"module\",\n\t\t\t+             },\n\t\t\t+             \"resolve\": Object {\n\t\t\t+               \"fullySpecified\": true,\n\t\t\t+             },\n\t\t\t+           },\n\t\t\t+         ],\n\t\t\t+         \"type\": \"webassembly/async\",\n\t\t\t+       },\n\t\t\t+       Object {\n\t\t\t+         \"oneOf\": Array [\n\t\t\t+           Object {\n\t\t\t+             \"resolve\": Object {\n\t\t\t+               \"fullySpecified\": true,\n\t\t\t+             },\n\t\t\t+             \"test\": /\\\\.module\\\\.css$/i,\n\t\t\t+             \"type\": \"css/module\",\n\t\t\t+           },\n\t\t\t+           Object {\n\t\t\t+             \"resolve\": Object {\n\t\t\t+               \"fullySpecified\": true,\n\t\t\t+               \"preferRelative\": true,\n\t\t\t+             },\n\t\t\t+             \"type\": \"css\",\n\t\t\t+           },\n\t\t\t+         ],\n\t\t\t+         \"test\": /\\\\.css$/i,\n\t\t\t+       },\n\t\t\t+       Object {\n\t\t\t+         \"mimetype\": \"text/css+module\",\n\t\t\t+         \"resolve\": Object {\n\t\t\t+           \"fullySpecified\": true,\n\t\t\t+         },\n\t\t\t+         \"type\": \"css/module\",\n\t\t\t+       },\n\t\t\t+       Object {\n\t\t\t+         \"mimetype\": \"text/css\",\n\t\t\t+         \"resolve\": Object {\n\t\t\t+           \"fullySpecified\": true,\n\t\t\t+           \"preferRelative\": true,\n\t\t\t+         },\n\t\t\t+         \"type\": \"css\",\n\t\t\t@@ ... @@\n\t\t\t+         \"exportsPresence\": \"error\",\n\t\t\t@@ ... @@\n\t\t\t-     \"__dirname\": \"mock\",\n\t\t\t-     \"__filename\": \"mock\",\n\t\t\t-     \"global\": true,\n\t\t\t+     \"__dirname\": \"warn-mock\",\n\t\t\t+     \"__filename\": \"warn-mock\",\n\t\t\t+     \"global\": \"warn\",\n\t\t\t@@ ... @@\n\t\t\t+         \"css\",\n\t\t\t@@ ... @@\n\t\t\t-     \"hashDigestLength\": 20,\n\t\t\t-     \"hashFunction\": \"md4\",\n\t\t\t+     \"hashDigestLength\": 16,\n\t\t\t+     \"hashFunction\": \"xxhash64\",\n\t\t\t@@ ... @@\n\t\t\t-       \"<cwd>/node_modules/\",\n\t\t\t+       /^(.+?[\\\\\\\\/]node_modules[\\\\\\\\/])/,\n\t\t`));","file":"Defaults.unittest.js","skipped":false,"dir":"test"},{"name":"should result in the same target options for same target","suites":["snapshots"],"updatePoint":{"line":2189,"column":60,"index":54923},"line":2189,"code":"it(\"should result in the same target options for same target\", () => {\n  const inlineTarget = getDefaultConfig({\n    target: \"node12.17\"\n  });\n  const browserslistTarget = getDefaultConfig({\n    target: \"browserslist: node 12.17\"\n  });\n  const diff = stripAnsi(jestDiff(inlineTarget, browserslistTarget, {\n    expand: false,\n    contextLines: 0\n  }));\n  expect(inlineTarget.output.environment.module).toBe(true);\n  expect(inlineTarget.output.environment.dynamicImport).toBe(true);\n  expect(new Diff(diff)).toMatchInlineSnapshot(`\n\t\t- Expected\n\t\t+ Received\n\n\t\t@@ ... @@\n\t\t-   \"target\": \"node12.17\",\n\t\t+   \"target\": \"browserslist: node 12.17\",\n\t`);\n});","file":"Defaults.unittest.js","skipped":false,"dir":"test"},{"name":"should split large chunks with different size types","suites":["deterministicGrouping"],"updatePoint":{"line":17,"column":57,"index":518},"line":17,"code":"  it(\"should split large chunks with different size types\", () => {\n    expect(group([{\n      a: 3,\n      b: 3\n    }, {\n      b: 1\n    }, {\n      a: 3\n    }], {\n      a: 3,\n      b: 3\n    }, {\n      a: 5,\n      b: 5\n    })).toMatchInlineSnapshot(`\n\t\tArray [\n\t\t  Object {\n\t\t    \"items\": Array [\n\t\t      0,\n\t\t      1,\n\t\t    ],\n\t\t    \"size\": Object {\n\t\t      \"a\": 3,\n\t\t      \"b\": 4,\n\t\t    },\n\t\t  },\n\t\t  Object {\n\t\t    \"items\": Array [\n\t\t      2,\n\t\t    ],\n\t\t    \"size\": Object {\n\t\t      \"a\": 3,\n\t\t    },\n\t\t  },\n\t\t]\n\t`);\n  });","file":"deterministicGrouping.unittest.js","skipped":false,"dir":"test"},{"name":"should separate items with different size types when unsplittable","suites":["deterministicGrouping"],"updatePoint":{"line":54,"column":71,"index":1054},"line":54,"code":"  it(\"should separate items with different size types when unsplittable\", () => {\n    expect(group([{\n      a: 1\n    }, {\n      b: 1\n    }, {\n      a: 1\n    }, {\n      a: 1\n    }, {\n      b: 1\n    }, {\n      a: 1\n    }, {\n      a: 1\n    }, {\n      b: 1\n    }, {\n      a: 1\n    }, {\n      a: 1\n    }], {\n      a: 3,\n      b: 3\n    }, {\n      a: 5,\n      b: 5\n    })).toMatchInlineSnapshot(`\n\t\tArray [\n\t\t  Object {\n\t\t    \"items\": Array [\n\t\t      0,\n\t\t      2,\n\t\t      3,\n\t\t    ],\n\t\t    \"size\": Object {\n\t\t      \"a\": 3,\n\t\t    },\n\t\t  },\n\t\t  Object {\n\t\t    \"items\": Array [\n\t\t      1,\n\t\t      4,\n\t\t      7,\n\t\t    ],\n\t\t    \"size\": Object {\n\t\t      \"b\": 3,\n\t\t    },\n\t\t  },\n\t\t  Object {\n\t\t    \"items\": Array [\n\t\t      5,\n\t\t      6,\n\t\t      8,\n\t\t      9,\n\t\t    ],\n\t\t    \"size\": Object {\n\t\t      \"a\": 4,\n\t\t    },\n\t\t  },\n\t\t]\n\t`);\n  });","file":"deterministicGrouping.unittest.js","skipped":false,"dir":"test"},{"name":"should handle entangled size types (case 1)","suites":["deterministicGrouping"],"updatePoint":{"line":117,"column":49,"index":1857},"line":117,"code":"  it(\"should handle entangled size types (case 1)\", () => {\n    expect(group([{\n      c: 2,\n      b: 2\n    }, {\n      a: 2,\n      c: 2\n    }, {\n      a: 2,\n      b: 2\n    }], {\n      a: 3,\n      b: 3,\n      c: 3\n    }, {\n      a: 3,\n      b: 3,\n      c: 3\n    })).toMatchInlineSnapshot(`\n\t\tArray [\n\t\t  Object {\n\t\t    \"items\": Array [\n\t\t      0,\n\t\t      1,\n\t\t      2,\n\t\t    ],\n\t\t    \"size\": Object {\n\t\t      \"a\": 4,\n\t\t      \"b\": 4,\n\t\t      \"c\": 4,\n\t\t    },\n\t\t  },\n\t\t]\n\t`);\n  });","file":"deterministicGrouping.unittest.js","skipped":false,"dir":"test"},{"name":"should handle entangled size types (case 2)","suites":["deterministicGrouping"],"updatePoint":{"line":152,"column":49,"index":2335},"line":152,"code":"  it(\"should handle entangled size types (case 2)\", () => {\n    expect(group([{\n      c: 2,\n      b: 2\n    }, {\n      a: 2,\n      c: 2\n    }, {\n      a: 2,\n      b: 2\n    }], {\n      a: 3,\n      b: 3\n    }, {\n      c: 3\n    })).toMatchInlineSnapshot(`\n\t\tArray [\n\t\t  Object {\n\t\t    \"items\": Array [\n\t\t      0,\n\t\t      2,\n\t\t    ],\n\t\t    \"size\": Object {\n\t\t      \"a\": 2,\n\t\t      \"b\": 4,\n\t\t      \"c\": 2,\n\t\t    },\n\t\t  },\n\t\t  Object {\n\t\t    \"items\": Array [\n\t\t      1,\n\t\t    ],\n\t\t    \"size\": Object {\n\t\t      \"a\": 2,\n\t\t      \"c\": 2,\n\t\t    },\n\t\t  },\n\t\t]\n\t`);\n  });","file":"deterministicGrouping.unittest.js","skipped":false,"dir":"test"},{"name":"should emit warning for missingFile","suites":[],"updatePoint":{"line":150,"column":39,"index":3084},"line":150,"code":"it(\"should emit warning for missingFile\", async () => {\n  await expect(compile({\n    entry: \"./missingFile\"\n  })).resolves.toMatchInlineSnapshot(`\n\t\t\t\t\tObject {\n\t\t\t\t\t  \"errors\": Array [\n\t\t\t\t\t    Object {\n\t\t\t\t\t      \"loc\": \"4:0-20\",\n\t\t\t\t\t      \"message\": \"Module not found: Error: Can't resolve './missing' in '<cwd>/test/fixtures/errors'\",\n\t\t\t\t\t      \"moduleId\": 0,\n\t\t\t\t\t      \"moduleIdentifier\": \"<cwd>/test/fixtures/errors/missingFile.js\",\n\t\t\t\t\t      \"moduleName\": \"./missingFile.js\",\n\t\t\t\t\t      \"moduleTrace\": Array [],\n\t\t\t\t\t      \"stack\": \"ModuleNotFoundError: Module not found: Error: Can't resolve './missing' in '<cwd>/test/fixtures/errors'\",\n\t\t\t\t\t    },\n\t\t\t\t\t    Object {\n\t\t\t\t\t      \"loc\": \"12:9-34\",\n\t\t\t\t\t      \"message\": \"Module not found: Error: Can't resolve './dir/missing2' in '<cwd>/test/fixtures/errors'\",\n\t\t\t\t\t      \"moduleId\": 0,\n\t\t\t\t\t      \"moduleIdentifier\": \"<cwd>/test/fixtures/errors/missingFile.js\",\n\t\t\t\t\t      \"moduleName\": \"./missingFile.js\",\n\t\t\t\t\t      \"moduleTrace\": Array [],\n\t\t\t\t\t      \"stack\": \"ModuleNotFoundError: Module not found: Error: Can't resolve './dir/missing2' in '<cwd>/test/fixtures/errors'\",\n\t\t\t\t\t    },\n\t\t\t\t\t  ],\n\t\t\t\t\t  \"warnings\": Array [],\n\t\t\t\t\t}\n\t\t\t\t`);\n}, 20000);","file":"Errors.test.js","skipped":false,"dir":"test"},{"name":"should emit warning for require.extensions","suites":[],"updatePoint":{"line":179,"column":46,"index":4305},"line":179,"code":"it(\"should emit warning for require.extensions\", async () => {\n  await expect(compile({\n    entry: \"./require.extensions\"\n  })).resolves.toMatchInlineSnapshot(`\n\t\t\t\t\tObject {\n\t\t\t\t\t  \"errors\": Array [],\n\t\t\t\t\t  \"warnings\": Array [\n\t\t\t\t\t    Object {\n\t\t\t\t\t      \"loc\": \"1:0-18\",\n\t\t\t\t\t      \"message\": \"require.extensions is not supported by webpack. Use a loader instead.\",\n\t\t\t\t\t      \"moduleId\": 0,\n\t\t\t\t\t      \"moduleIdentifier\": \"<cwd>/test/fixtures/errors/require.extensions.js\",\n\t\t\t\t\t      \"moduleName\": \"./require.extensions.js\",\n\t\t\t\t\t      \"moduleTrace\": Array [],\n\t\t\t\t\t      \"stack\": \"UnsupportedFeatureWarning: require.extensions is not supported by webpack. Use a loader instead.\",\n\t\t\t\t\t    },\n\t\t\t\t\t  ],\n\t\t\t\t\t}\n\t\t\t\t`);\n});","file":"Errors.test.js","skipped":false,"dir":"test"},{"name":"should emit warning for require.main.require","suites":[],"updatePoint":{"line":199,"column":48,"index":5035},"line":199,"code":"it(\"should emit warning for require.main.require\", async () => {\n  await expect(compile({\n    entry: \"./require.main.require\"\n  })).resolves.toMatchInlineSnapshot(`\n\t\t\t\t\tObject {\n\t\t\t\t\t  \"errors\": Array [],\n\t\t\t\t\t  \"warnings\": Array [\n\t\t\t\t\t    Object {\n\t\t\t\t\t      \"loc\": \"1:0-30\",\n\t\t\t\t\t      \"message\": \"require.main.require is not supported by webpack.\",\n\t\t\t\t\t      \"moduleId\": 0,\n\t\t\t\t\t      \"moduleIdentifier\": \"<cwd>/test/fixtures/errors/require.main.require.js\",\n\t\t\t\t\t      \"moduleName\": \"./require.main.require.js\",\n\t\t\t\t\t      \"moduleTrace\": Array [],\n\t\t\t\t\t      \"stack\": \"UnsupportedFeatureWarning: require.main.require is not supported by webpack.\",\n\t\t\t\t\t    },\n\t\t\t\t\t  ],\n\t\t\t\t\t}\n\t\t\t\t`);\n});","file":"Errors.test.js","skipped":false,"dir":"test"},{"name":"should emit warning for module.parent.require","suites":[],"updatePoint":{"line":219,"column":49,"index":5732},"line":219,"code":"it(\"should emit warning for module.parent.require\", async () => {\n  await expect(compile({\n    entry: \"./module.parent.require\"\n  })).resolves.toMatchInlineSnapshot(`\n\t\t\t\t\tObject {\n\t\t\t\t\t  \"errors\": Array [],\n\t\t\t\t\t  \"warnings\": Array [\n\t\t\t\t\t    Object {\n\t\t\t\t\t      \"loc\": \"1:0-31\",\n\t\t\t\t\t      \"message\": \"module.parent.require is not supported by webpack.\",\n\t\t\t\t\t      \"moduleId\": 0,\n\t\t\t\t\t      \"moduleIdentifier\": \"<cwd>/test/fixtures/errors/module.parent.require.js\",\n\t\t\t\t\t      \"moduleName\": \"./module.parent.require.js\",\n\t\t\t\t\t      \"moduleTrace\": Array [],\n\t\t\t\t\t      \"stack\": \"UnsupportedFeatureWarning: module.parent.require is not supported by webpack.\",\n\t\t\t\t\t    },\n\t\t\t\t\t  ],\n\t\t\t\t\t}\n\t\t\t\t`);\n});","file":"Errors.test.js","skipped":false,"dir":"test"},{"name":"should emit warning for case-preserved disk","suites":[],"updatePoint":{"line":242,"column":49,"index":6579},"line":242,"code":"  it(\"should emit warning for case-preserved disk\", async () => {\n    const result = await compile({\n      mode: \"development\",\n      entry: \"./case-sensitive\"\n    });\n    expect(result).toMatchInlineSnapshot(`\n\t\tObject {\n\t\t  \"errors\": Array [],\n\t\t  \"warnings\": Array [\n\t\t    Object {\n\t\t      \"message\": \"There are multiple modules with names that only differ in casing.\\\\nThis can lead to unexpected behavior when compiling on a filesystem with other case-semantic.\\\\nUse equal casing. Compare these module identifiers:\\\\n* <cwd>/test/fixtures/errors/FILE.js\\\\n    Used by 1 module(s), i. e.\\\\n    <cwd>/test/fixtures/errors/case-sensitive.js\\\\n* <cwd>/test/fixtures/errors/file.js\\\\n    Used by 1 module(s), i. e.\\\\n    <cwd>/test/fixtures/errors/case-sensitive.js\",\n\t\t      \"moduleId\": \"./FILE.js\",\n\t\t      \"moduleIdentifier\": \"<cwd>/test/fixtures/errors/FILE.js\",\n\t\t      \"moduleName\": \"./FILE.js\",\n\t\t      \"moduleTrace\": Array [\n\t\t        Object {\n\t\t          \"dependencies\": Array [\n\t\t            Object {\n\t\t              \"loc\": \"2:0-17\",\n\t\t            },\n\t\t          ],\n\t\t          \"moduleId\": \"./FILE.js\",\n\t\t          \"moduleIdentifier\": \"<cwd>/test/fixtures/errors/FILE.js\",\n\t\t          \"moduleName\": \"./FILE.js\",\n\t\t          \"originId\": \"./case-sensitive.js\",\n\t\t          \"originIdentifier\": \"<cwd>/test/fixtures/errors/case-sensitive.js\",\n\t\t          \"originName\": \"./case-sensitive.js\",\n\t\t        },\n\t\t      ],\n\t\t      \"stack\": \"CaseSensitiveModulesWarning: There are multiple modules with names that only differ in casing.\\\\nThis can lead to unexpected behavior when compiling on a filesystem with other case-semantic.\\\\nUse equal casing. Compare these module identifiers:\\\\n* <cwd>/test/fixtures/errors/FILE.js\\\\n    Used by 1 module(s), i. e.\\\\n    <cwd>/test/fixtures/errors/case-sensitive.js\\\\n* <cwd>/test/fixtures/errors/file.js\\\\n    Used by 1 module(s), i. e.\\\\n    <cwd>/test/fixtures/errors/case-sensitive.js\",\n\t\t    },\n\t\t  ],\n\t\t}\n\t`);\n  });","file":"Errors.test.js","skipped":false,"dir":"test"},{"name":"should emit error for case-sensitive","suites":[],"updatePoint":{"line":278,"column":42,"index":8546},"line":278,"code":"  it(\"should emit error for case-sensitive\", async () => {\n    const result = await compile({\n      mode: \"development\",\n      entry: \"./case-sensitive\"\n    });\n    expect(result).toMatchInlineSnapshot(`\n\t\tObject {\n\t\t  \"errors\": Array [\n\t\t    Object {\n\t\t      \"loc\": \"2:0-17\",\n\t\t      \"message\": \"Module not found: Error: Can't resolve './FILE' in '<cwd>/test/fixtures/errors'\",\n\t\t      \"moduleId\": \"./case-sensitive.js\",\n\t\t      \"moduleIdentifier\": \"<cwd>/test/fixtures/errors/case-sensitive.js\",\n\t\t      \"moduleName\": \"./case-sensitive.js\",\n\t\t      \"moduleTrace\": Array [],\n\t\t      \"stack\": \"ModuleNotFoundError: Module not found: Error: Can't resolve './FILE' in '<cwd>/test/fixtures/errors'\",\n\t\t    },\n\t\t  ],\n\t\t  \"warnings\": Array [],\n\t\t}\n\t`);\n  });","file":"Errors.test.js","skipped":false,"dir":"test"},{"name":"should emit warning for undef mode","suites":[],"updatePoint":{"line":302,"column":38,"index":9299},"line":302,"code":"it(\"should emit warning for undef mode\", async () => {\n  await expect(compile({\n    mode: undefined,\n    entry: \"./entry-point\"\n  })).resolves.toMatchInlineSnapshot(`\n\t\t\t\t\tObject {\n\t\t\t\t\t  \"errors\": Array [],\n\t\t\t\t\t  \"warnings\": Array [\n\t\t\t\t\t    Object {\n\t\t\t\t\t      \"message\": \"configuration\\\\nThe 'mode' option has not been set, webpack will fallback to 'production' for this value.\\\\nSet 'mode' option to 'development' or 'production' to enable defaults for each environment.\\\\nYou can also set it to 'none' to disable any default behavior. Learn more: https://webpack.js.org/configuration/mode/\",\n\t\t\t\t\t      \"stack\": \"NoModeWarning: configuration\\\\nThe 'mode' option has not been set, webpack will fallback to 'production' for this value.\\\\nSet 'mode' option to 'development' or 'production' to enable defaults for each environment.\\\\nYou can also set it to 'none' to disable any default behavior. Learn more: https://webpack.js.org/configuration/mode/\",\n\t\t\t\t\t    },\n\t\t\t\t\t  ],\n\t\t\t\t\t}\n\t\t\t\t`);\n});","file":"Errors.test.js","skipped":false,"dir":"test"},{"name":"should emit no errors or warnings for no-errors-deprecate","suites":[],"updatePoint":{"line":318,"column":61,"index":10319},"line":318,"code":"it(\"should emit no errors or warnings for no-errors-deprecate\", async () => {\n  await expect(compile({\n    mode: \"production\",\n    entry: \"./no-errors-deprecate\"\n  })).resolves.toMatchInlineSnapshot(`\n\t\t\t\t\tObject {\n\t\t\t\t\t  \"errors\": Array [],\n\t\t\t\t\t  \"warnings\": Array [],\n\t\t\t\t\t}\n\t\t\t\t`);\n});","file":"Errors.test.js","skipped":false,"dir":"test"},{"name":"should emit errors for missingFile for production","suites":[],"updatePoint":{"line":329,"column":53,"index":10601},"line":329,"code":"it(\"should emit errors for missingFile for production\", async () => {\n  await expect(compile({\n    mode: \"production\",\n    entry: \"./missingFile\"\n  })).resolves.toMatchInlineSnapshot(`\n\t\t\t\t\tObject {\n\t\t\t\t\t  \"errors\": Array [\n\t\t\t\t\t    Object {\n\t\t\t\t\t      \"loc\": \"4:0-20\",\n\t\t\t\t\t      \"message\": \"Module not found: Error: Can't resolve './missing' in '<cwd>/test/fixtures/errors'\",\n\t\t\t\t\t      \"moduleId\": 814,\n\t\t\t\t\t      \"moduleIdentifier\": \"<cwd>/test/fixtures/errors/missingFile.js\",\n\t\t\t\t\t      \"moduleName\": \"./missingFile.js\",\n\t\t\t\t\t      \"moduleTrace\": Array [],\n\t\t\t\t\t      \"stack\": \"ModuleNotFoundError: Module not found: Error: Can't resolve './missing' in '<cwd>/test/fixtures/errors'\",\n\t\t\t\t\t    },\n\t\t\t\t\t    Object {\n\t\t\t\t\t      \"loc\": \"12:9-34\",\n\t\t\t\t\t      \"message\": \"Module not found: Error: Can't resolve './dir/missing2' in '<cwd>/test/fixtures/errors'\",\n\t\t\t\t\t      \"moduleId\": 814,\n\t\t\t\t\t      \"moduleIdentifier\": \"<cwd>/test/fixtures/errors/missingFile.js\",\n\t\t\t\t\t      \"moduleName\": \"./missingFile.js\",\n\t\t\t\t\t      \"moduleTrace\": Array [],\n\t\t\t\t\t      \"stack\": \"ModuleNotFoundError: Module not found: Error: Can't resolve './dir/missing2' in '<cwd>/test/fixtures/errors'\",\n\t\t\t\t\t    },\n\t\t\t\t\t  ],\n\t\t\t\t\t  \"warnings\": Array [],\n\t\t\t\t\t}\n\t\t\t\t`);\n});","file":"Errors.test.js","skipped":false,"dir":"test"},{"name":"should emit module build errors","suites":[],"updatePoint":{"line":359,"column":35,"index":11832},"line":359,"code":"it(\"should emit module build errors\", async () => {\n  await expect(compile({\n    entry: \"./has-syntax-error\"\n  })).resolves.toMatchInlineSnapshot(`\n\t\t\t\t\tObject {\n\t\t\t\t\t  \"errors\": Array [\n\t\t\t\t\t    Object {\n\t\t\t\t\t      \"loc\": \"2:12\",\n\t\t\t\t\t      \"message\": \"Module parse failed: Unexpected token (2:12)\\\\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\\\\n| window.foo = {\\\\n>   bar: true,;\\\\n| };\\\\n| \",\n\t\t\t\t\t      \"moduleId\": 0,\n\t\t\t\t\t      \"moduleIdentifier\": \"<cwd>/test/fixtures/errors/has-syntax-error.js\",\n\t\t\t\t\t      \"moduleName\": \"./has-syntax-error.js\",\n\t\t\t\t\t      \"moduleTrace\": Array [],\n\t\t\t\t\t      \"stack\": \"ModuleParseError: Module parse failed: Unexpected token (2:12)\\\\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\\\\n| window.foo = {\\\\n>   bar: true,;\\\\n| };\\\\n| \",\n\t\t\t\t\t    },\n\t\t\t\t\t  ],\n\t\t\t\t\t  \"warnings\": Array [],\n\t\t\t\t\t}\n\t\t\t\t`);\n});","file":"Errors.test.js","skipped":false,"dir":"test"},{"name":"should bao; thrown sync error from plugin","suites":[],"updatePoint":{"line":379,"column":45,"index":12920},"line":379,"code":"it(\"should bao; thrown sync error from plugin\", async () => {\n  await expect(compile({\n    entry: \"./no-errors-deprecate\",\n    plugins: [require(\"./fixtures/errors/throw-error-plugin\")]\n  })).rejects.toMatchInlineSnapshot(`\n\t\t\t\t\tObject {\n\t\t\t\t\t  \"message\": \"foo\",\n\t\t\t\t\t  \"stack\": \"Error: foo\",\n\t\t\t\t\t}\n\t\t\t\t`);\n});","file":"Errors.test.js","skipped":false,"dir":"test"},{"name":"should emit error thrown at module level","suites":["loaders"],"updatePoint":{"line":391,"column":46,"index":13261},"line":391,"code":"  it(\"should emit error thrown at module level\", async () => {\n    await expect(compile({\n      entry: \"./module-level-throw-error-loader!./no-errors-deprecate\"\n    })).resolves.toMatchInlineSnapshot(`\n\t\t\t\t\tObject {\n\t\t\t\t\t  \"errors\": Array [\n\t\t\t\t\t    Object {\n\t\t\t\t\t      \"message\": \"Module build failed (from ./module-level-throw-error-loader.js):\\\\nError: this is a thrown error from module level\",\n\t\t\t\t\t      \"moduleId\": 0,\n\t\t\t\t\t      \"moduleIdentifier\": \"<cwd>/test/fixtures/errors/module-level-throw-error-loader.js!<cwd>/test/fixtures/errors/no-errors-deprecate.js\",\n\t\t\t\t\t      \"moduleName\": \"./module-level-throw-error-loader.js!./no-errors-deprecate.js\",\n\t\t\t\t\t      \"moduleTrace\": Array [],\n\t\t\t\t\t      \"stack\": \"ModuleBuildError: Module build failed (from ./module-level-throw-error-loader.js):\\\\nError: this is a thrown error from module level\",\n\t\t\t\t\t    },\n\t\t\t\t\t  ],\n\t\t\t\t\t  \"warnings\": Array [],\n\t\t\t\t\t}\n\t\t\t\t`);\n  });","file":"Errors.test.js","skipped":false,"dir":"test"},{"name":"should emit errors & warnings for emit-error-loader","suites":["loaders"],"updatePoint":{"line":410,"column":57,"index":14197},"line":410,"code":"  it(\"should emit errors & warnings for emit-error-loader\", async () => {\n    await expect(compile({\n      entry: \"./entry-point-error-loader-required.js\"\n    })).resolves.toMatchInlineSnapshot(`\n\t\t\t\t\tObject {\n\t\t\t\t\t  \"errors\": Array [\n\t\t\t\t\t    Object {\n\t\t\t\t\t      \"message\": \"Module Error (from ./emit-error-loader.js):\\\\nthis is an error\",\n\t\t\t\t\t      \"moduleId\": 1,\n\t\t\t\t\t      \"moduleIdentifier\": \"<cwd>/test/fixtures/errors/emit-error-loader.js!<cwd>/test/fixtures/errors/file.js\",\n\t\t\t\t\t      \"moduleName\": \"./emit-error-loader.js!./file.js\",\n\t\t\t\t\t      \"moduleTrace\": Array [\n\t\t\t\t\t        Object {\n\t\t\t\t\t          \"dependencies\": Array [\n\t\t\t\t\t            Object {\n\t\t\t\t\t              \"loc\": \"1:0-40\",\n\t\t\t\t\t            },\n\t\t\t\t\t          ],\n\t\t\t\t\t          \"moduleId\": 1,\n\t\t\t\t\t          \"moduleIdentifier\": \"<cwd>/test/fixtures/errors/emit-error-loader.js!<cwd>/test/fixtures/errors/file.js\",\n\t\t\t\t\t          \"moduleName\": \"./emit-error-loader.js!./file.js\",\n\t\t\t\t\t          \"originId\": 0,\n\t\t\t\t\t          \"originIdentifier\": \"<cwd>/test/fixtures/errors/entry-point-error-loader-required.js\",\n\t\t\t\t\t          \"originName\": \"./entry-point-error-loader-required.js\",\n\t\t\t\t\t        },\n\t\t\t\t\t      ],\n\t\t\t\t\t      \"stack\": \"ModuleError: Module Error (from ./emit-error-loader.js):\\\\nthis is an error\",\n\t\t\t\t\t    },\n\t\t\t\t\t  ],\n\t\t\t\t\t  \"warnings\": Array [\n\t\t\t\t\t    Object {\n\t\t\t\t\t      \"message\": \"Module Warning (from ./emit-error-loader.js):\\\\nthis is a warning\",\n\t\t\t\t\t      \"moduleId\": 1,\n\t\t\t\t\t      \"moduleIdentifier\": \"<cwd>/test/fixtures/errors/emit-error-loader.js!<cwd>/test/fixtures/errors/file.js\",\n\t\t\t\t\t      \"moduleName\": \"./emit-error-loader.js!./file.js\",\n\t\t\t\t\t      \"moduleTrace\": Array [\n\t\t\t\t\t        Object {\n\t\t\t\t\t          \"dependencies\": Array [\n\t\t\t\t\t            Object {\n\t\t\t\t\t              \"loc\": \"1:0-40\",\n\t\t\t\t\t            },\n\t\t\t\t\t          ],\n\t\t\t\t\t          \"moduleId\": 1,\n\t\t\t\t\t          \"moduleIdentifier\": \"<cwd>/test/fixtures/errors/emit-error-loader.js!<cwd>/test/fixtures/errors/file.js\",\n\t\t\t\t\t          \"moduleName\": \"./emit-error-loader.js!./file.js\",\n\t\t\t\t\t          \"originId\": 0,\n\t\t\t\t\t          \"originIdentifier\": \"<cwd>/test/fixtures/errors/entry-point-error-loader-required.js\",\n\t\t\t\t\t          \"originName\": \"./entry-point-error-loader-required.js\",\n\t\t\t\t\t        },\n\t\t\t\t\t      ],\n\t\t\t\t\t      \"stack\": \"ModuleWarning: Module Warning (from ./emit-error-loader.js):\\\\nthis is a warning\",\n\t\t\t\t\t    },\n\t\t\t\t\t  ],\n\t\t\t\t\t}\n\t\t\t\t`);\n  });","file":"Errors.test.js","skipped":false,"dir":"test"},{"name":"should emit error & warning for emit-error-loader","suites":["loaders"],"updatePoint":{"line":466,"column":55,"index":16636},"line":466,"code":"  it(\"should emit error & warning for emit-error-loader\", async () => {\n    await expect(compile({\n      entry: \"./emit-error-loader!./entry-point.js\"\n    })).resolves.toMatchInlineSnapshot(`\n\t\t\t\t\tObject {\n\t\t\t\t\t  \"errors\": Array [\n\t\t\t\t\t    Object {\n\t\t\t\t\t      \"message\": \"Module Error (from ./emit-error-loader.js):\\\\nthis is an error\",\n\t\t\t\t\t      \"moduleId\": 0,\n\t\t\t\t\t      \"moduleIdentifier\": \"<cwd>/test/fixtures/errors/emit-error-loader.js!<cwd>/test/fixtures/errors/entry-point.js\",\n\t\t\t\t\t      \"moduleName\": \"./emit-error-loader.js!./entry-point.js\",\n\t\t\t\t\t      \"moduleTrace\": Array [],\n\t\t\t\t\t      \"stack\": \"ModuleError: Module Error (from ./emit-error-loader.js):\\\\nthis is an error\",\n\t\t\t\t\t    },\n\t\t\t\t\t  ],\n\t\t\t\t\t  \"warnings\": Array [\n\t\t\t\t\t    Object {\n\t\t\t\t\t      \"message\": \"Module Warning (from ./emit-error-loader.js):\\\\nthis is a warning\",\n\t\t\t\t\t      \"moduleId\": 0,\n\t\t\t\t\t      \"moduleIdentifier\": \"<cwd>/test/fixtures/errors/emit-error-loader.js!<cwd>/test/fixtures/errors/entry-point.js\",\n\t\t\t\t\t      \"moduleName\": \"./emit-error-loader.js!./entry-point.js\",\n\t\t\t\t\t      \"moduleTrace\": Array [],\n\t\t\t\t\t      \"stack\": \"ModuleWarning: Module Warning (from ./emit-error-loader.js):\\\\nthis is a warning\",\n\t\t\t\t\t    },\n\t\t\t\t\t  ],\n\t\t\t\t\t}\n\t\t\t\t`);\n  });","file":"Errors.test.js","skipped":false,"dir":"test"},{"name":"should emit error for json-loader when not json","suites":["loaders"],"updatePoint":{"line":494,"column":53,"index":17883},"line":494,"code":"  it(\"should emit error for json-loader when not json\", async () => {\n    await expect(compile({\n      entry: \"json-loader!./not-a-json.js\"\n    })).resolves.toMatchInlineSnapshot(`\n\t\t\t\t\tObject {\n\t\t\t\t\t  \"errors\": Array [\n\t\t\t\t\t    Object {\n\t\t\t\t\t      \"message\": \"Module build failed (from ../../../node_modules/json-loader/index.js):\\\\nSyntaxError: Unexpected end of JSON input\",\n\t\t\t\t\t      \"moduleId\": 0,\n\t\t\t\t\t      \"moduleIdentifier\": \"<cwd>/node_modules/json-loader/index.js!<cwd>/test/fixtures/errors/not-a-json.js\",\n\t\t\t\t\t      \"moduleName\": \"../../../node_modules/json-loader/index.js!./not-a-json.js\",\n\t\t\t\t\t      \"moduleTrace\": Array [],\n\t\t\t\t\t      \"stack\": \"ModuleBuildError: Module build failed (from ../../../node_modules/json-loader/index.js):\\\\nSyntaxError: Unexpected end of JSON input\",\n\t\t\t\t\t    },\n\t\t\t\t\t  ],\n\t\t\t\t\t  \"warnings\": Array [],\n\t\t\t\t\t}\n\t\t\t\t`);\n  });","file":"Errors.test.js","skipped":false,"dir":"test"},{"name":"should emit error for async-error-loader","suites":["loaders"],"updatePoint":{"line":513,"column":46,"index":18746},"line":513,"code":"  it(\"should emit error for async-error-loader\", async () => {\n    await expect(compile({\n      entry: \"./async-error-loader!./entry-point.js\"\n    })).resolves.toMatchInlineSnapshot(`\n\t\t\t\t\tObject {\n\t\t\t\t\t  \"errors\": Array [\n\t\t\t\t\t    Object {\n\t\t\t\t\t      \"message\": \"Module build failed (from ./async-error-loader.js):\\\\nError: this is a callback error\",\n\t\t\t\t\t      \"moduleId\": 0,\n\t\t\t\t\t      \"moduleIdentifier\": \"<cwd>/test/fixtures/errors/async-error-loader.js!<cwd>/test/fixtures/errors/entry-point.js\",\n\t\t\t\t\t      \"moduleName\": \"./async-error-loader.js!./entry-point.js\",\n\t\t\t\t\t      \"moduleTrace\": Array [],\n\t\t\t\t\t      \"stack\": \"ModuleBuildError: Module build failed (from ./async-error-loader.js):\\\\nError: this is a callback error\",\n\t\t\t\t\t    },\n\t\t\t\t\t  ],\n\t\t\t\t\t  \"warnings\": Array [],\n\t\t\t\t\t}\n\t\t\t\t`);\n  });","file":"Errors.test.js","skipped":false,"dir":"test"},{"name":"should emit error thrown from raw loader","suites":["loaders"],"updatePoint":{"line":532,"column":46,"index":19553},"line":532,"code":"  it(\"should emit error thrown from raw loader\", async () => {\n    await expect(compile({\n      entry: \"./throw-error-loader!./entry-point.js\"\n    })).resolves.toMatchInlineSnapshot(`\n\t\t\t\t\tObject {\n\t\t\t\t\t  \"errors\": Array [\n\t\t\t\t\t    Object {\n\t\t\t\t\t      \"message\": \"Module build failed (from ./throw-error-loader.js):\\\\nError: this is a thrown error\",\n\t\t\t\t\t      \"moduleId\": 0,\n\t\t\t\t\t      \"moduleIdentifier\": \"<cwd>/test/fixtures/errors/throw-error-loader.js!<cwd>/test/fixtures/errors/entry-point.js\",\n\t\t\t\t\t      \"moduleName\": \"./throw-error-loader.js!./entry-point.js\",\n\t\t\t\t\t      \"moduleTrace\": Array [],\n\t\t\t\t\t      \"stack\": \"ModuleBuildError: Module build failed (from ./throw-error-loader.js):\\\\nError: this is a thrown error\",\n\t\t\t\t\t    },\n\t\t\t\t\t  ],\n\t\t\t\t\t  \"warnings\": Array [],\n\t\t\t\t\t}\n\t\t\t\t`);\n  });","file":"Errors.test.js","skipped":false,"dir":"test"},{"name":"should emit error thrown from pitch loader","suites":["loaders"],"updatePoint":{"line":551,"column":48,"index":20358},"line":551,"code":"  it(\"should emit error thrown from pitch loader\", async () => {\n    await expect(compile({\n      entry: \"./throw-error-loader!./entry-point.js\"\n    })).resolves.toMatchInlineSnapshot(`\n\t\t\t\t\tObject {\n\t\t\t\t\t  \"errors\": Array [\n\t\t\t\t\t    Object {\n\t\t\t\t\t      \"message\": \"Module build failed (from ./throw-error-loader.js):\\\\nError: this is a thrown error\",\n\t\t\t\t\t      \"moduleId\": 0,\n\t\t\t\t\t      \"moduleIdentifier\": \"<cwd>/test/fixtures/errors/throw-error-loader.js!<cwd>/test/fixtures/errors/entry-point.js\",\n\t\t\t\t\t      \"moduleName\": \"./throw-error-loader.js!./entry-point.js\",\n\t\t\t\t\t      \"moduleTrace\": Array [],\n\t\t\t\t\t      \"stack\": \"ModuleBuildError: Module build failed (from ./throw-error-loader.js):\\\\nError: this is a thrown error\",\n\t\t\t\t\t    },\n\t\t\t\t\t  ],\n\t\t\t\t\t  \"warnings\": Array [],\n\t\t\t\t\t}\n\t\t\t\t`);\n  });","file":"Errors.test.js","skipped":false,"dir":"test"},{"name":"should emit error thrown from yaw loader","suites":["loaders"],"updatePoint":{"line":570,"column":46,"index":21161},"line":570,"code":"  it(\"should emit error thrown from yaw loader\", async () => {\n    await expect(compile({\n      entry: \"./throw-error-loader!./entry-point.js\"\n    })).resolves.toMatchInlineSnapshot(`\n\t\t\t\t\tObject {\n\t\t\t\t\t  \"errors\": Array [\n\t\t\t\t\t    Object {\n\t\t\t\t\t      \"message\": \"Module build failed (from ./throw-error-loader.js):\\\\nError: this is a thrown error\",\n\t\t\t\t\t      \"moduleId\": 0,\n\t\t\t\t\t      \"moduleIdentifier\": \"<cwd>/test/fixtures/errors/throw-error-loader.js!<cwd>/test/fixtures/errors/entry-point.js\",\n\t\t\t\t\t      \"moduleName\": \"./throw-error-loader.js!./entry-point.js\",\n\t\t\t\t\t      \"moduleTrace\": Array [],\n\t\t\t\t\t      \"stack\": \"ModuleBuildError: Module build failed (from ./throw-error-loader.js):\\\\nError: this is a thrown error\",\n\t\t\t\t\t    },\n\t\t\t\t\t  ],\n\t\t\t\t\t  \"warnings\": Array [],\n\t\t\t\t\t}\n\t\t\t\t`);\n  });","file":"Errors.test.js","skipped":false,"dir":"test"},{"name":"should emit errors & warnings for irregular-error-loader","suites":["loaders"],"updatePoint":{"line":589,"column":62,"index":21980},"line":589,"code":"  it(\"should emit errors & warnings for irregular-error-loader\", async () => {\n    await expect(compile({\n      entry: \"./irregular-error-loader!./entry-point.js\"\n    })).resolves.toMatchInlineSnapshot(`\n\t\t\t\t\tObject {\n\t\t\t\t\t  \"errors\": Array [\n\t\t\t\t\t    Object {\n\t\t\t\t\t      \"message\": \"Module Error (from ./irregular-error-loader.js):\\\\n(Emitted value instead of an instance of Error) null\",\n\t\t\t\t\t      \"moduleId\": 0,\n\t\t\t\t\t      \"moduleIdentifier\": \"<cwd>/test/fixtures/errors/irregular-error-loader.js!<cwd>/test/fixtures/errors/entry-point.js\",\n\t\t\t\t\t      \"moduleName\": \"./irregular-error-loader.js!./entry-point.js\",\n\t\t\t\t\t      \"moduleTrace\": Array [],\n\t\t\t\t\t      \"stack\": \"ModuleError: Module Error (from ./irregular-error-loader.js):\\\\n(Emitted value instead of an instance of Error) null\",\n\t\t\t\t\t    },\n\t\t\t\t\t    Object {\n\t\t\t\t\t      \"message\": \"Module Error (from ./irregular-error-loader.js):\\\\nError\",\n\t\t\t\t\t      \"moduleId\": 0,\n\t\t\t\t\t      \"moduleIdentifier\": \"<cwd>/test/fixtures/errors/irregular-error-loader.js!<cwd>/test/fixtures/errors/entry-point.js\",\n\t\t\t\t\t      \"moduleName\": \"./irregular-error-loader.js!./entry-point.js\",\n\t\t\t\t\t      \"moduleTrace\": Array [],\n\t\t\t\t\t      \"stack\": \"ModuleError: Module Error (from ./irregular-error-loader.js):\\\\nError\",\n\t\t\t\t\t    },\n\t\t\t\t\t    Object {\n\t\t\t\t\t      \"message\": \"Module build failed (from ./irregular-error-loader.js):\\\\nNonErrorEmittedError: (Emitted value instead of an instance of Error) a string error\",\n\t\t\t\t\t      \"moduleId\": 0,\n\t\t\t\t\t      \"moduleIdentifier\": \"<cwd>/test/fixtures/errors/irregular-error-loader.js!<cwd>/test/fixtures/errors/entry-point.js\",\n\t\t\t\t\t      \"moduleName\": \"./irregular-error-loader.js!./entry-point.js\",\n\t\t\t\t\t      \"moduleTrace\": Array [],\n\t\t\t\t\t      \"stack\": \"ModuleBuildError: Module build failed (from ./irregular-error-loader.js):\\\\nNonErrorEmittedError: (Emitted value instead of an instance of Error) a string error\",\n\t\t\t\t\t    },\n\t\t\t\t\t  ],\n\t\t\t\t\t  \"warnings\": Array [\n\t\t\t\t\t    Object {\n\t\t\t\t\t      \"message\": \"Module Warning (from ./irregular-error-loader.js):\\\\n(Emitted value instead of an instance of Error) null\",\n\t\t\t\t\t      \"moduleId\": 0,\n\t\t\t\t\t      \"moduleIdentifier\": \"<cwd>/test/fixtures/errors/irregular-error-loader.js!<cwd>/test/fixtures/errors/entry-point.js\",\n\t\t\t\t\t      \"moduleName\": \"./irregular-error-loader.js!./entry-point.js\",\n\t\t\t\t\t      \"moduleTrace\": Array [],\n\t\t\t\t\t      \"stack\": \"ModuleWarning: Module Warning (from ./irregular-error-loader.js):\\\\n(Emitted value instead of an instance of Error) null\",\n\t\t\t\t\t    },\n\t\t\t\t\t    Object {\n\t\t\t\t\t      \"message\": \"Module Warning (from ./irregular-error-loader.js):\\\\nError\",\n\t\t\t\t\t      \"moduleId\": 0,\n\t\t\t\t\t      \"moduleIdentifier\": \"<cwd>/test/fixtures/errors/irregular-error-loader.js!<cwd>/test/fixtures/errors/entry-point.js\",\n\t\t\t\t\t      \"moduleName\": \"./irregular-error-loader.js!./entry-point.js\",\n\t\t\t\t\t      \"moduleTrace\": Array [],\n\t\t\t\t\t      \"stack\": \"ModuleWarning: Module Warning (from ./irregular-error-loader.js):\\\\nError\",\n\t\t\t\t\t    },\n\t\t\t\t\t  ],\n\t\t\t\t\t}\n\t\t\t\t`);\n  });","file":"Errors.test.js","skipped":false,"dir":"test"},{"name":"should emit error for no-return-loader","suites":["loaders"],"updatePoint":{"line":641,"column":44,"index":24995},"line":641,"code":"  it(\"should emit error for no-return-loader\", async () => {\n    await expect(compile({\n      entry: \"./no-return-loader!./entry-point.js\"\n    })).resolves.toMatchInlineSnapshot(`\n\t\t\t\t\tObject {\n\t\t\t\t\t  \"errors\": Array [\n\t\t\t\t\t    Object {\n\t\t\t\t\t      \"message\": \"Module build failed: Error: Final loader (./no-return-loader.js) didn't return a Buffer or String\",\n\t\t\t\t\t      \"moduleId\": 0,\n\t\t\t\t\t      \"moduleIdentifier\": \"<cwd>/test/fixtures/errors/no-return-loader.js!<cwd>/test/fixtures/errors/entry-point.js\",\n\t\t\t\t\t      \"moduleName\": \"./no-return-loader.js!./entry-point.js\",\n\t\t\t\t\t      \"moduleTrace\": Array [],\n\t\t\t\t\t      \"stack\": \"ModuleBuildError: Module build failed: Error: Final loader (./no-return-loader.js) didn't return a Buffer or String\",\n\t\t\t\t\t    },\n\t\t\t\t\t  ],\n\t\t\t\t\t  \"warnings\": Array [],\n\t\t\t\t\t}\n\t\t\t\t`);\n  }); // cspell:ignore doesnt","file":"Errors.test.js","skipped":false,"dir":"test"},{"name":"should emit error for doesnt-exist-loader","suites":["loaders"],"updatePoint":{"line":661,"column":47,"index":25846},"line":661,"code":"  it(\"should emit error for doesnt-exist-loader\", async () => {\n    await expect(compile({\n      entry: \"./doesnt-exist-loader!./entry-point.js\"\n    })).resolves.toMatchInlineSnapshot(`\n\t\t\t\t\tObject {\n\t\t\t\t\t  \"errors\": Array [\n\t\t\t\t\t    Object {\n\t\t\t\t\t      \"loc\": \"main\",\n\t\t\t\t\t      \"message\": \"Module not found: Error: Can't resolve './doesnt-exist-loader' in '<cwd>/test/fixtures/errors'\",\n\t\t\t\t\t      \"stack\": \"ModuleNotFoundError: Module not found: Error: Can't resolve './doesnt-exist-loader' in '<cwd>/test/fixtures/errors'\",\n\t\t\t\t\t    },\n\t\t\t\t\t  ],\n\t\t\t\t\t  \"warnings\": Array [],\n\t\t\t\t\t}\n\t\t\t\t`);\n  });","file":"Errors.test.js","skipped":false,"dir":"test"},{"name":"should emit error for return-undefined-loader","suites":["loaders"],"updatePoint":{"line":677,"column":51,"index":26450},"line":677,"code":"  it(\"should emit error for return-undefined-loader\", async () => {\n    await expect(compile({\n      entry: \"./return-undefined-loader!./entry-point.js\"\n    })).resolves.toMatchInlineSnapshot(`\n\t\t\t\t\tObject {\n\t\t\t\t\t  \"errors\": Array [\n\t\t\t\t\t    Object {\n\t\t\t\t\t      \"message\": \"Module build failed: Error: Final loader (./return-undefined-loader.js) didn't return a Buffer or String\",\n\t\t\t\t\t      \"moduleId\": 0,\n\t\t\t\t\t      \"moduleIdentifier\": \"<cwd>/test/fixtures/errors/return-undefined-loader.js!<cwd>/test/fixtures/errors/entry-point.js\",\n\t\t\t\t\t      \"moduleName\": \"./return-undefined-loader.js!./entry-point.js\",\n\t\t\t\t\t      \"moduleTrace\": Array [],\n\t\t\t\t\t      \"stack\": \"ModuleBuildError: Module build failed: Error: Final loader (./return-undefined-loader.js) didn't return a Buffer or String\",\n\t\t\t\t\t    },\n\t\t\t\t\t  ],\n\t\t\t\t\t  \"warnings\": Array [],\n\t\t\t\t\t}\n\t\t\t\t`);\n  });","file":"Errors.test.js","skipped":false,"dir":"test"},{"name":"should emit error for module-exports-object-loader","suites":["loaders"],"updatePoint":{"line":696,"column":56,"index":27320},"line":696,"code":"  it(\"should emit error for module-exports-object-loader\", async () => {\n    await expect(compile({\n      entry: \"./module-exports-object-loader!./entry-point.js\"\n    })).resolves.toMatchInlineSnapshot(`\n\t\t\t\t\tObject {\n\t\t\t\t\t  \"errors\": Array [\n\t\t\t\t\t    Object {\n\t\t\t\t\t      \"message\": \"Module build failed (from ./module-exports-object-loader.js):\\\\nLoaderRunnerError: Module '<cwd>/test/fixtures/errors/module-exports-object-loader.js' is not a loader (must have normal or pitch function)\",\n\t\t\t\t\t      \"moduleId\": 0,\n\t\t\t\t\t      \"moduleIdentifier\": \"<cwd>/test/fixtures/errors/module-exports-object-loader.js!<cwd>/test/fixtures/errors/entry-point.js\",\n\t\t\t\t\t      \"moduleName\": \"./module-exports-object-loader.js!./entry-point.js\",\n\t\t\t\t\t      \"moduleTrace\": Array [],\n\t\t\t\t\t      \"stack\": \"ModuleBuildError: Module build failed (from ./module-exports-object-loader.js):\\\\nLoaderRunnerError: Module '<cwd>/test/fixtures/errors/module-exports-object-loader.js' is not a loader (must have normal or pitch function)\",\n\t\t\t\t\t    },\n\t\t\t\t\t  ],\n\t\t\t\t\t  \"warnings\": Array [],\n\t\t\t\t\t}\n\t\t\t\t`);\n  });","file":"Errors.test.js","skipped":false,"dir":"test"},{"name":"should emit error for module-exports-string-loader","suites":["loaders"],"updatePoint":{"line":715,"column":56,"index":28403},"line":715,"code":"  it(\"should emit error for module-exports-string-loader\", async () => {\n    await expect(compile({\n      entry: \"./module-exports-string-loader!./entry-point.js\"\n    })).resolves.toMatchInlineSnapshot(`\n\t\t\t\t\tObject {\n\t\t\t\t\t  \"errors\": Array [\n\t\t\t\t\t    Object {\n\t\t\t\t\t      \"message\": \"Module build failed (from ./module-exports-string-loader.js):\\\\nLoaderRunnerError: Module '<cwd>/test/fixtures/errors/module-exports-string-loader.js' is not a loader (export function or es6 module)\",\n\t\t\t\t\t      \"moduleId\": 0,\n\t\t\t\t\t      \"moduleIdentifier\": \"<cwd>/test/fixtures/errors/module-exports-string-loader.js!<cwd>/test/fixtures/errors/entry-point.js\",\n\t\t\t\t\t      \"moduleName\": \"./module-exports-string-loader.js!./entry-point.js\",\n\t\t\t\t\t      \"moduleTrace\": Array [],\n\t\t\t\t\t      \"stack\": \"ModuleBuildError: Module build failed (from ./module-exports-string-loader.js):\\\\nLoaderRunnerError: Module '<cwd>/test/fixtures/errors/module-exports-string-loader.js' is not a loader (export function or es6 module)\",\n\t\t\t\t\t    },\n\t\t\t\t\t  ],\n\t\t\t\t\t  \"warnings\": Array [],\n\t\t\t\t\t}\n\t\t\t\t`);\n  });","file":"Errors.test.js","skipped":false,"dir":"test"},{"name":"should show loader used if it is present when module parsing fails","suites":["loaders"],"updatePoint":{"line":736,"column":72,"index":29673},"line":736,"code":"  it(\"should show loader used if it is present when module parsing fails\", async () => {\n    await expect(compile({\n      mode: \"development\",\n      entry: \"./abc.html\",\n      module: {\n        rules: [{\n          test: /\\.html$/,\n          use: [{\n            loader: identityLoader\n          }]\n        }]\n      }\n    })).resolves.toMatchInlineSnapshot(`\n\t\t\t\t\tObject {\n\t\t\t\t\t  \"errors\": Array [\n\t\t\t\t\t    Object {\n\t\t\t\t\t      \"loc\": \"1:0\",\n\t\t\t\t\t      \"message\": \"Module parse failed: Unexpected token (1:0)\\\\nFile was processed with these loaders:\\\\n * ./identity-loader.js\\\\nYou may need an additional loader to handle the result of these loaders.\\\\n> <!DOCTYPE html>\\\\n| <html>\\\\n| \t<body>\",\n\t\t\t\t\t      \"moduleId\": \"./abc.html\",\n\t\t\t\t\t      \"moduleIdentifier\": \"<cwd>/test/fixtures/errors/identity-loader.js!<cwd>/test/fixtures/errors/abc.html\",\n\t\t\t\t\t      \"moduleName\": \"./abc.html\",\n\t\t\t\t\t      \"moduleTrace\": Array [],\n\t\t\t\t\t      \"stack\": \"ModuleParseError: Module parse failed: Unexpected token (1:0)\\\\nFile was processed with these loaders:\\\\n * ./identity-loader.js\\\\nYou may need an additional loader to handle the result of these loaders.\\\\n> <!DOCTYPE html>\\\\n| <html>\\\\n| \t<body>\",\n\t\t\t\t\t    },\n\t\t\t\t\t  ],\n\t\t\t\t\t  \"warnings\": Array [],\n\t\t\t\t\t}\n\t\t\t\t`);\n  });","file":"Errors.test.js","skipped":false,"dir":"test"},{"name":"should show all loaders used if they are in config when module parsing fails","suites":["loaders"],"updatePoint":{"line":765,"column":82,"index":30946},"line":765,"code":"  it(\"should show all loaders used if they are in config when module parsing fails\", async () => {\n    await expect(compile({\n      mode: \"development\",\n      entry: \"./abc.html\",\n      module: {\n        rules: [{\n          test: /\\.html$/,\n          use: [{\n            loader: identityLoader\n          }, {\n            loader: addCommentLoader\n          }]\n        }]\n      }\n    })).resolves.toMatchInlineSnapshot(`\n\t\t\t\t\tObject {\n\t\t\t\t\t  \"errors\": Array [\n\t\t\t\t\t    Object {\n\t\t\t\t\t      \"loc\": \"1:0\",\n\t\t\t\t\t      \"message\": \"Module parse failed: Unexpected token (1:0)\\\\nFile was processed with these loaders:\\\\n * ./identity-loader.js\\\\n * ./add-comment-loader.js\\\\nYou may need an additional loader to handle the result of these loaders.\\\\n> <!DOCTYPE html>\\\\n| <html>\\\\n| \t<body>\",\n\t\t\t\t\t      \"moduleId\": \"./abc.html\",\n\t\t\t\t\t      \"moduleIdentifier\": \"<cwd>/test/fixtures/errors/identity-loader.js!<cwd>/test/fixtures/errors/add-comment-loader.js!<cwd>/test/fixtures/errors/abc.html\",\n\t\t\t\t\t      \"moduleName\": \"./abc.html\",\n\t\t\t\t\t      \"moduleTrace\": Array [],\n\t\t\t\t\t      \"stack\": \"ModuleParseError: Module parse failed: Unexpected token (1:0)\\\\nFile was processed with these loaders:\\\\n * ./identity-loader.js\\\\n * ./add-comment-loader.js\\\\nYou may need an additional loader to handle the result of these loaders.\\\\n> <!DOCTYPE html>\\\\n| <html>\\\\n| \t<body>\",\n\t\t\t\t\t    },\n\t\t\t\t\t  ],\n\t\t\t\t\t  \"warnings\": Array [],\n\t\t\t\t\t}\n\t\t\t\t`);\n  });","file":"Errors.test.js","skipped":false,"dir":"test"},{"name":"should show all loaders used if use is a string","suites":["loaders"],"updatePoint":{"line":796,"column":53,"index":32349},"line":796,"code":"  it(\"should show all loaders used if use is a string\", async () => {\n    await expect(compile({\n      mode: \"development\",\n      entry: \"./abc.html\",\n      module: {\n        rules: [{\n          test: /\\.html$/,\n          use: identityLoader\n        }, {\n          test: /\\.html$/,\n          use: addCommentLoader\n        }]\n      }\n    })).resolves.toMatchInlineSnapshot(`\n\t\t\t\t\tObject {\n\t\t\t\t\t  \"errors\": Array [\n\t\t\t\t\t    Object {\n\t\t\t\t\t      \"loc\": \"1:0\",\n\t\t\t\t\t      \"message\": \"Module parse failed: Unexpected token (1:0)\\\\nFile was processed with these loaders:\\\\n * ./identity-loader.js\\\\n * ./add-comment-loader.js\\\\nYou may need an additional loader to handle the result of these loaders.\\\\n> <!DOCTYPE html>\\\\n| <html>\\\\n| \t<body>\",\n\t\t\t\t\t      \"moduleId\": \"./abc.html\",\n\t\t\t\t\t      \"moduleIdentifier\": \"<cwd>/test/fixtures/errors/identity-loader.js!<cwd>/test/fixtures/errors/add-comment-loader.js!<cwd>/test/fixtures/errors/abc.html\",\n\t\t\t\t\t      \"moduleName\": \"./abc.html\",\n\t\t\t\t\t      \"moduleTrace\": Array [],\n\t\t\t\t\t      \"stack\": \"ModuleParseError: Module parse failed: Unexpected token (1:0)\\\\nFile was processed with these loaders:\\\\n * ./identity-loader.js\\\\n * ./add-comment-loader.js\\\\nYou may need an additional loader to handle the result of these loaders.\\\\n> <!DOCTYPE html>\\\\n| <html>\\\\n| \t<body>\",\n\t\t\t\t\t    },\n\t\t\t\t\t  ],\n\t\t\t\t\t  \"warnings\": Array [],\n\t\t\t\t\t}\n\t\t\t\t`);\n  });","file":"Errors.test.js","skipped":false,"dir":"test"},{"name":"should show 'no loaders are configured to process this file' if loaders are not included in config when module parsing fails","suites":["loaders"],"updatePoint":{"line":826,"column":130,"index":33813},"line":826,"code":"  it(\"should show 'no loaders are configured to process this file' if loaders are not included in config when module parsing fails\", async () => {\n    await expect(compile({\n      mode: \"development\",\n      entry: \"./abc.html\",\n      module: {}\n    })).resolves.toMatchInlineSnapshot(`\n\t\t\t\t\tObject {\n\t\t\t\t\t  \"errors\": Array [\n\t\t\t\t\t    Object {\n\t\t\t\t\t      \"loc\": \"1:0\",\n\t\t\t\t\t      \"message\": \"Module parse failed: Unexpected token (1:0)\\\\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\\\\n> <!DOCTYPE html>\\\\n| <html>\\\\n| \t<body>\",\n\t\t\t\t\t      \"moduleId\": \"./abc.html\",\n\t\t\t\t\t      \"moduleIdentifier\": \"<cwd>/test/fixtures/errors/abc.html\",\n\t\t\t\t\t      \"moduleName\": \"./abc.html\",\n\t\t\t\t\t      \"moduleTrace\": Array [],\n\t\t\t\t\t      \"stack\": \"ModuleParseError: Module parse failed: Unexpected token (1:0)\\\\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\\\\n> <!DOCTYPE html>\\\\n| <html>\\\\n| \t<body>\",\n\t\t\t\t\t    },\n\t\t\t\t\t  ],\n\t\t\t\t\t  \"warnings\": Array [],\n\t\t\t\t\t}\n\t\t\t\t`);\n  });","file":"Errors.test.js","skipped":false,"dir":"test"},{"name":"should show 'source code omitted for this binary file' when module parsing fails for binary files","suites":["loaders"],"updatePoint":{"line":848,"column":103,"index":34978},"line":848,"code":"  it(\"should show 'source code omitted for this binary file' when module parsing fails for binary files\", async () => {\n    const folder = path.join(__dirname, \"/fixtures\");\n    await expect(compile({\n      mode: \"development\",\n      entry: path.resolve(folder, \"./font.ttf\"),\n      module: {}\n    })).resolves.toMatchInlineSnapshot(`\n\t\t\t\t\tObject {\n\t\t\t\t\t  \"errors\": Array [\n\t\t\t\t\t    Object {\n\t\t\t\t\t      \"loc\": \"1:0\",\n\t\t\t\t\t      \"message\": \"Module parse failed: Unexpected character '\u0000' (1:0)\\\\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\\\\n(Source code omitted for this binary file)\",\n\t\t\t\t\t      \"moduleId\": \"../font.ttf\",\n\t\t\t\t\t      \"moduleIdentifier\": \"<cwd>/test/fixtures/font.ttf\",\n\t\t\t\t\t      \"moduleName\": \"../font.ttf\",\n\t\t\t\t\t      \"moduleTrace\": Array [],\n\t\t\t\t\t      \"stack\": \"ModuleParseError: Module parse failed: Unexpected character '\u0000' (1:0)\\\\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\\\\n(Source code omitted for this binary file)\",\n\t\t\t\t\t    },\n\t\t\t\t\t  ],\n\t\t\t\t\t  \"warnings\": Array [],\n\t\t\t\t\t}\n\t\t\t\t`);\n  });","file":"Errors.test.js","skipped":false,"dir":"test"},{"name":"should throw error for invalid library name","suites":["loaders"],"updatePoint":{"line":871,"column":49,"index":36180},"line":871,"code":"  it(\"should throw error for invalid library name\", async () => {\n    await expect(compile({\n      output: {\n        libraryTarget: \"var\"\n      }\n    })).rejects.toMatchInlineSnapshot(`\n\t\t\t\t\tObject {\n\t\t\t\t\t  \"message\": \"Library name must be a string or string array. Common configuration options that specific library names are 'output.library[.name]', 'entry.xyz.library[.name]', 'ModuleFederationPlugin.name' and 'ModuleFederationPlugin.library[.name]'.\",\n\t\t\t\t\t  \"stack\": \"Error: Library name must be a string or string array. Common configuration options that specific library names are 'output.library[.name]', 'entry.xyz.library[.name]', 'ModuleFederationPlugin.name' and 'ModuleFederationPlugin.library[.name]'.\",\n\t\t\t\t\t}\n\t\t\t\t`);\n  });","file":"Errors.test.js","skipped":false,"dir":"test"},{"name":"filtered","suites":["Examples"],"updatePoint":{"line":19,"column":52,"index":546},"line":19,"code":"      describe.skip(relativePath, () => it(\"filtered\"));","file":"Examples.test.js","skipped":false,"dir":"test"},{"name":"should return jQuery","suites":["extractUrlAndGlobal"],"updatePoint":{"line":6,"column":26,"index":155},"line":6,"code":"  it(\"should return jQuery\", () => {\n    const result = extractUrlAndGlobal(\"jQuery@https://code.jquery.com/jquery-3.5.1.min.js\");\n    expect(result).toEqual([\"https://code.jquery.com/jquery-3.5.1.min.js\", \"jQuery\"]);\n  });","file":"extractUrlAndGlobal.unittest.js","skipped":false,"dir":"test"},{"name":"should return _","suites":["extractUrlAndGlobal"],"updatePoint":{"line":10,"column":21,"index":374},"line":10,"code":"  it(\"should return _\", () => {\n    const result = extractUrlAndGlobal(\"_@https://cdn.jsdelivr.net/npm/lodash@4.17.19/lodash.min.js\");\n    expect(result).toEqual([\"https://cdn.jsdelivr.net/npm/lodash@4.17.19/lodash.min.js\", \"_\"]);\n  });","file":"extractUrlAndGlobal.unittest.js","skipped":false,"dir":"test"},{"name":"should throw error if starts with @","suites":["extractUrlAndGlobal"],"updatePoint":{"line":14,"column":41,"index":631},"line":14,"code":"  it(\"should throw error if starts with @\", () => {\n    expect(() => extractUrlAndGlobal(\"@something\")).toThrow();\n  });","file":"extractUrlAndGlobal.unittest.js","skipped":false,"dir":"test"},{"name":"should throw error if ends with @","suites":["extractUrlAndGlobal"],"updatePoint":{"line":17,"column":39,"index":750},"line":17,"code":"  it(\"should throw error if ends with @\", () => {\n    expect(() => extractUrlAndGlobal(\"something@\")).toThrow();\n  });","file":"extractUrlAndGlobal.unittest.js","skipped":false,"dir":"test"},{"name":"should throw error if do not have @","suites":["extractUrlAndGlobal"],"updatePoint":{"line":20,"column":41,"index":871},"line":20,"code":"  it(\"should throw error if do not have @\", () => {\n    expect(() => extractUrlAndGlobal(\"something\")).toThrow();\n  });","file":"extractUrlAndGlobal.unittest.js","skipped":false,"dir":"test"},{"name":"should always accept an empty snapshot","suites":["FileSystemInfo"," mode"],"updatePoint":{"line":187,"column":48,"index":7673},"line":187,"code":"      it(\"should always accept an empty snapshot\", done => {\n        const fs = createFs();\n        const fsInfo = createFsInfo(fs);\n        fsInfo.createSnapshot(Date.now() + 10000, [], [], [], options, (err, snapshot) => {\n          if (err) return done(err);\n          const fs = createFs();\n          expectSnapshotState(fs, snapshot, true, done);\n        });\n      });","file":"FileSystemInfo.unittest.js","skipped":false,"dir":"test"},{"name":"should accept a snapshot when fs is unchanged","suites":["FileSystemInfo"," mode"],"updatePoint":{"line":196,"column":55,"index":8054},"line":196,"code":"      it(\"should accept a snapshot when fs is unchanged\", done => {\n        const fs = createFs();\n        createSnapshot(fs, options, (err, snapshot, snapshot2) => {\n          if (err) return done(err);\n          expectSnapshotsState(fs, snapshot, snapshot2, true, done);\n        });\n      });","file":"FileSystemInfo.unittest.js","skipped":false,"dir":"test"},{"name":"should invalidate the snapshot when  is changed","suites":["FileSystemInfo"," mode"],"updatePoint":{"line":206,"column":72,"index":9159},"line":206,"code":"        it(`should invalidate the snapshot when ${fileChange} is changed`, done => {\n          const fs = createFs();\n          createSnapshot(fs, options, (err, snapshot, snapshot2) => {\n            if (err) return done(err);\n            updateFile(fs, fileChange);\n            expectSnapshotsState(fs, snapshot, snapshot2, false, done);\n          });\n        });","file":"FileSystemInfo.unittest.js","skipped":false,"dir":"test"},{"name":"should not invalidate the snapshot when  is changed","suites":["FileSystemInfo"," mode"],"updatePoint":{"line":217,"column":76,"index":9887},"line":217,"code":"        it(`should not invalidate the snapshot when ${fileChange} is changed`, done => {\n          const fs = createFs();\n          createSnapshot(fs, options, (err, snapshot, snapshot2) => {\n            if (err) return done(err);\n            updateFile(fs, fileChange);\n            expectSnapshotsState(fs, snapshot, snapshot2, true, done);\n          });\n        });","file":"FileSystemInfo.unittest.js","skipped":false,"dir":"test"},{"name":"should invalidate the snapshot when  is created","suites":["FileSystemInfo"," mode"],"updatePoint":{"line":228,"column":69,"index":10397},"line":228,"code":"        it(`should invalidate the snapshot when ${newFile} is created`, done => {\n          const fs = createFs();\n          createSnapshot(fs, options, (err, snapshot, snapshot2) => {\n            if (err) return done(err);\n            fs.writeFileSync(newFile, \"New file\");\n            expectSnapshotsState(fs, snapshot, snapshot2, false, done);\n          });\n        });","file":"FileSystemInfo.unittest.js","skipped":false,"dir":"test"},{"name":"should not invalidate the snapshot when  is created","suites":["FileSystemInfo"," mode"],"updatePoint":{"line":239,"column":73,"index":10946},"line":239,"code":"        it(`should not invalidate the snapshot when ${newFile} is created`, done => {\n          const fs = createFs();\n          createSnapshot(fs, options, (err, snapshot, snapshot2) => {\n            if (err) return done(err);\n            fs.writeFileSync(newFile, \"New file\");\n            expectSnapshotsState(fs, snapshot, snapshot2, true, done);\n          });\n        });","file":"FileSystemInfo.unittest.js","skipped":false,"dir":"test"},{"name":"should not invalidate snapshot when only timestamps have changed","suites":["FileSystemInfo"," mode"],"updatePoint":{"line":250,"column":76,"index":11368},"line":250,"code":"        it(\"should not invalidate snapshot when only timestamps have changed\", done => {\n          const fs = createFs();\n          createSnapshot(fs, options, (err, snapshot, snapshot2) => {\n            if (err) return done(err);\n            const fs = createFs();\n            expectSnapshotsState(fs, snapshot, snapshot2, true, done);\n          });\n        });","file":"FileSystemInfo.unittest.js","skipped":false,"dir":"test"},{"name":"should format location correctly for ","suites":["formatLocation"],"updatePoint":{"line":69,"column":61,"index":1103},"line":69,"code":"    it(`should format location correctly for ${testCase.name}`, () => {\n      expect(formatLocation(testCase.loc)).toEqual(testCase.result);\n    });","file":"formatLocation.unittest.js","skipped":false,"dir":"test"},{"name":"should not have circular hashes but equal if unmodified","suites":["HotModuleReplacementPlugin"],"updatePoint":{"line":11,"column":61,"index":249},"line":11,"code":"  it(\"should not have circular hashes but equal if unmodified\", done => {\n    const entryFile = path.join(__dirname, \"js\", \"HotModuleReplacementPlugin\", \"entry.js\");\n    const statsFile1 = path.join(__dirname, \"js\", \"HotModuleReplacementPlugin\", \"HotModuleReplacementPlugin.test.stats1.txt\");\n    const statsFile2 = path.join(__dirname, \"js\", \"HotModuleReplacementPlugin\", \"HotModuleReplacementPlugin.test.stats2.txt\");\n    const recordsFile = path.join(__dirname, \"js\", \"HotModuleReplacementPlugin\", \"records.json\");\n\n    try {\n      fs.mkdirSync(path.join(__dirname, \"js\", \"HotModuleReplacementPlugin\"), {\n        recursive: true\n      });\n    } catch (e) {// empty\n    }\n\n    try {\n      fs.unlinkSync(recordsFile);\n    } catch (e) {// empty\n    }\n\n    const compiler = webpack({\n      cache: false,\n      entry: entryFile,\n      recordsPath: recordsFile,\n      output: {\n        path: path.join(__dirname, \"js\", \"HotModuleReplacementPlugin\")\n      },\n      plugins: [new webpack.HotModuleReplacementPlugin()],\n      optimization: {\n        moduleIds: \"size\",\n        chunkIds: \"size\"\n      }\n    });\n    fs.writeFileSync(entryFile, \"1\", \"utf-8\");\n    compiler.run((err, stats) => {\n      if (err) throw err;\n      const oldHash1 = stats.toJson().hash;\n      fs.writeFileSync(statsFile1, stats.toString());\n      compiler.run((err, stats) => {\n        if (err) throw err;\n        const lastHash1 = stats.toJson().hash;\n        fs.writeFileSync(statsFile2, stats.toString());\n        expect(lastHash1).toBe(oldHash1); // hash shouldn't change when bundle stay equal\n\n        fs.writeFileSync(entryFile, \"2\", \"utf-8\");\n        compiler.run((err, stats) => {\n          if (err) throw err;\n          const lastHash2 = stats.toJson().hash;\n          fs.writeFileSync(statsFile1, stats.toString());\n          expect(lastHash2).not.toBe(lastHash1); // hash should change when bundle changes\n\n          fs.writeFileSync(entryFile, \"1\", \"utf-8\");\n          compiler.run((err, stats) => {\n            if (err) throw err;\n            const currentHash1 = stats.toJson().hash;\n            fs.writeFileSync(statsFile2, stats.toString());\n            expect(currentHash1).not.toBe(lastHash1); // hash shouldn't change to the first hash if bundle changed back to first bundle\n\n            fs.writeFileSync(entryFile, \"2\", \"utf-8\");\n            compiler.run((err, stats) => {\n              if (err) throw err;\n              const currentHash2 = stats.toJson().hash;\n              fs.writeFileSync(statsFile1, stats.toString());\n              compiler.run((err, stats) => {\n                if (err) throw err;\n                expect(stats.toJson().hash).toBe(currentHash2);\n                expect(currentHash2).not.toBe(lastHash2);\n                expect(currentHash1).not.toBe(currentHash2);\n                expect(lastHash1).not.toBe(lastHash2);\n                done();\n              });\n            });\n          });\n        });\n      });\n    });\n  }, 120000);","file":"HotModuleReplacementPlugin.test.js","skipped":false,"dir":"test"},{"name":"output.clean=true should keep 1 last update","suites":["HotModuleReplacementPlugin"],"updatePoint":{"line":86,"column":49,"index":3187},"line":86,"code":"  it(\"output.clean=true should keep 1 last update\", done => {\n    const outputPath = path.join(__dirname, \"js\", \"HotModuleReplacementPlugin\");\n    const entryFile = path.join(outputPath, \"entry.js\");\n    const recordsFile = path.join(outputPath, \"records.json\");\n    let step = 0;\n    let firstUpdate;\n\n    try {\n      fs.mkdirSync(outputPath, {\n        recursive: true\n      });\n    } catch (e) {// empty\n    }\n\n    fs.writeFileSync(entryFile, `${++step}`, \"utf-8\");\n    const updates = new Set();\n\n    const hasFile = file => {\n      try {\n        fs.statSync(path.join(outputPath, file));\n        return true;\n      } catch (err) {\n        return false;\n      }\n    };\n\n    const compiler = webpack({\n      mode: \"development\",\n      cache: false,\n      entry: {\n        0: entryFile\n      },\n      recordsPath: recordsFile,\n      output: {\n        path: outputPath,\n        clean: true\n      },\n      plugins: [new webpack.HotModuleReplacementPlugin()]\n    });\n\n    const callback = (err, stats) => {\n      if (err) return done(err);\n      const jsonStats = stats.toJson();\n      const hash = jsonStats.hash;\n      const hmrUpdateMainFileName = `0.${hash}.hot-update.json`;\n\n      switch (step) {\n        case 1:\n          expect(updates.size).toBe(0);\n          firstUpdate = hmrUpdateMainFileName;\n          break;\n\n        case 2:\n          expect(updates.size).toBe(1);\n          expect(updates.has(firstUpdate)).toBe(true);\n          expect(hasFile(firstUpdate)).toBe(true);\n          break;\n\n        case 3:\n          expect(updates.size).toBe(2);\n\n          for (const file of updates) {\n            expect(hasFile(file)).toBe(true);\n          }\n\n          return setTimeout(() => {\n            fs.writeFileSync(entryFile, `${++step}`, \"utf-8\");\n            compiler.run(err => {\n              if (err) return done(err);\n\n              for (const file of updates) {\n                expect(hasFile(file)).toBe(false);\n              }\n\n              done();\n            });\n          }, 10100);\n      }\n\n      updates.add(hmrUpdateMainFileName);\n      fs.writeFileSync(entryFile, `${++step}`, \"utf-8\");\n      compiler.run(callback);\n    };\n\n    compiler.run(callback);\n  }, 20000);","file":"HotModuleReplacementPlugin.test.js","skipped":false,"dir":"test"},{"name":"should correct working when entry is Object and key is a number","suites":["HotModuleReplacementPlugin"],"updatePoint":{"line":172,"column":69,"index":5398},"line":172,"code":"  it(\"should correct working when entry is Object and key is a number\", done => {\n    const outputPath = path.join(__dirname, \"js\", \"HotModuleReplacementPlugin\");\n    const entryFile = path.join(outputPath, \"entry.js\");\n    const statsFile3 = path.join(outputPath, \"HotModuleReplacementPlugin.test.stats3.txt\");\n    const statsFile4 = path.join(outputPath, \"HotModuleReplacementPlugin.test.stats4.txt\");\n    const recordsFile = path.join(outputPath, \"records.json\");\n\n    try {\n      fs.mkdirSync(outputPath, {\n        recursive: true\n      });\n    } catch (e) {// empty\n    }\n\n    try {\n      fs.unlinkSync(recordsFile);\n    } catch (e) {// empty\n    }\n\n    const compiler = webpack({\n      mode: \"development\",\n      cache: false,\n      entry: {\n        0: entryFile\n      },\n      recordsPath: recordsFile,\n      output: {\n        path: outputPath\n      },\n      plugins: [new webpack.HotModuleReplacementPlugin()],\n      optimization: {\n        chunkIds: \"named\"\n      }\n    });\n    fs.writeFileSync(entryFile, \"1\", \"utf-8\");\n    compiler.run((err, stats) => {\n      if (err) throw err;\n      const jsonStats = stats.toJson();\n      const hash = jsonStats.hash;\n      const chunkName = Object.keys(jsonStats.assetsByChunkName)[0];\n      fs.writeFileSync(statsFile3, stats.toString());\n      compiler.run((err, stats) => {\n        if (err) throw err;\n        fs.writeFileSync(statsFile4, stats.toString());\n        fs.writeFileSync(entryFile, \"2\", \"utf-8\");\n        compiler.run((err, stats) => {\n          if (err) throw err;\n          fs.writeFileSync(statsFile3, stats.toString());\n          const result = JSON.parse(fs.readFileSync(path.join(outputPath, `0.${hash}.hot-update.json`), \"utf-8\"))[\"c\"];\n          expect(result).toEqual([chunkName]);\n          done();\n        });\n      });\n    });\n  });","file":"HotModuleReplacementPlugin.test.js","skipped":false,"dir":"test"},{"name":"should handle entryFile that contains path variable","suites":["HotModuleReplacementPlugin"],"updatePoint":{"line":227,"column":57,"index":7195},"line":227,"code":"  it(\"should handle entryFile that contains path variable\", done => {\n    const entryFile = path.join(__dirname, \"js\", \"HotModuleReplacementPlugin\", \"[name]\", \"entry.js\");\n    const statsFile3 = path.join(__dirname, \"js\", \"HotModuleReplacementPlugin\", \"HotModuleReplacementPlugin.test.stats3.txt\");\n    const statsFile4 = path.join(__dirname, \"js\", \"HotModuleReplacementPlugin\", \"HotModuleReplacementPlugin.test.stats4.txt\");\n    const recordsFile = path.join(__dirname, \"js\", \"HotModuleReplacementPlugin\", \"records.json\");\n\n    try {\n      fs.mkdirSync(path.join(__dirname, \"js\", \"HotModuleReplacementPlugin\", \"[name]\"), {\n        recursive: true\n      });\n    } catch (e) {// empty\n    }\n\n    try {\n      fs.unlinkSync(recordsFile);\n    } catch (e) {// empty\n    }\n\n    const compiler = webpack({\n      mode: \"development\",\n      cache: false,\n      entry: {\n        \"[name]/entry.js\": entryFile\n      },\n      recordsPath: recordsFile,\n      output: {\n        filename: \"[name]\",\n        chunkFilename: \"[name].js\",\n        path: path.join(__dirname, \"js\", \"HotModuleReplacementPlugin\"),\n        hotUpdateChunkFilename: \"static/webpack/[id].[hash].hot-update.js\",\n        hotUpdateMainFilename: \"static/webpack/[hash].hot-update.json\"\n      },\n      plugins: [new webpack.HotModuleReplacementPlugin()],\n      optimization: {\n        chunkIds: \"named\"\n      }\n    });\n    fs.writeFileSync(entryFile, \"1\", \"utf-8\");\n    compiler.run((err, stats) => {\n      if (err) return done(err);\n      fs.writeFileSync(statsFile3, stats.toString());\n      compiler.run((err, stats) => {\n        if (err) return done(err);\n        fs.writeFileSync(statsFile4, stats.toString());\n        fs.writeFileSync(entryFile, \"2\", \"utf-8\");\n        compiler.run((err, stats) => {\n          if (err) return done(err);\n          fs.writeFileSync(statsFile3, stats.toString());\n          let foundUpdates = false;\n          Object.keys(stats.compilation.assets).forEach(key => {\n            foundUpdates = foundUpdates || !!key.match(/static\\/webpack\\/\\[name\\]\\/entry\\.js\\..*?\\.hot-update\\.js/);\n          });\n          expect(foundUpdates).toBe(true);\n          done();\n        });\n      });\n    });\n  });","file":"HotModuleReplacementPlugin.test.js","skipped":false,"dir":"test"},{"name":"computes the correct relative results for the path construct","suites":["util/identifier","makePathsRelative","given a context and a pathConstruct"],"updatePoint":{"line":8,"column":70,"index":281},"line":8,"code":"      it(\"computes the correct relative results for the path construct\", () => {\n        [[\"/some/dir/\", \"/some/dir/to/somewhere|some/other/dir!../more/dir\", \"./to/somewhere|some/other/dir!../more/dir\"], [\"/dir/\", \"/dir/to/somewhere|some/other/dir!../more/dir\", \"./to/somewhere|some/other/dir!../more/dir\"], [\"/\", \"/dir/to/somewhere|some/other/dir!../more/dir\", \"./dir/to/somewhere|some/other/dir!../more/dir\"], [\"c:\\\\some\\\\dir\\\\\", \"c:\\\\some\\\\dir\\\\to\\\\somewhere|some/other/dir!../more/dir\", \"./to/somewhere|some/other/dir!../more/dir\"], [\"c:\\\\some\\\\dir\\\\\", \"C:\\\\some\\\\dir\\\\to\\\\somewhere|some/other/dir!../more/dir\", \"./to/somewhere|some/other/dir!../more/dir\"], [\"C:\\\\some\\\\dir\", \"C:\\\\some\\\\dir\\\\to\\\\somewhere|some/other/dir!../more/dir\", \"./to/somewhere|some/other/dir!../more/dir\"], [\"C:\\\\\\\\some\\\\dir\", \"c:\\\\some\\\\\\\\dir\\\\to\\\\\\\\somewhere|some/other/dir!../more/dir\", \"./to/somewhere|some/other/dir!../more/dir\"], [\"/dir\", \"/dir/to/somewhere??ref-123\", \"./to/somewhere??ref-123\"]].forEach(([context, pathConstruct, expected]) => {\n          expect(identifierUtil.makePathsRelative(context, pathConstruct)).toBe(expected);\n        });\n      });","file":"identifier.unittest.js","skipped":false,"dir":"test"},{"name":"should handle  correctly","suites":["util/identifier","getUndoPath"],"updatePoint":{"line":19,"column":98,"index":2064},"line":19,"code":"      it(`should handle ${filename} correctly${enforceRelative ? \" (enforced relative path)\" : \"\"}`, () => {\n        for (const outputPath of [\"/a/b/c/d\", \"C:\\\\a\\\\b\\\\c\\\\d\", \"/a/b/c/d/\", \"C:\\\\a\\\\b\\\\c\\\\d\\\\\"]) {\n          expect(identifierUtil.getUndoPath(filename, outputPath, enforceRelative)).toBe(expected);\n        }\n      });","file":"identifier.unittest.js","skipped":false,"dir":"test"},{"name":"should parse comments","suites":["JavascriptParser"],"updatePoint":{"line":247,"column":27,"index":7085},"line":247,"code":"  it(\"should parse comments\", () => {\n    const source = \"//comment1\\n/*comment2*/\";\n    const state = [{\n      type: \"Line\",\n      value: \"comment1\"\n    }, {\n      type: \"Block\",\n      value: \"comment2\"\n    }];\n    const testParser = new JavascriptParser({});\n    testParser.hooks.program.tap(\"JavascriptParserTest\", (ast, comments) => {\n      if (!testParser.state.comments) testParser.state.comments = comments;\n      return true;\n    });\n    const actual = testParser.parse(source, {});\n    expect(typeof actual).toBe(\"object\");\n    expect(typeof actual.comments).toBe(\"object\");\n    actual.comments.forEach((element, index) => {\n      expect(typeof element.type).toBe(\"string\");\n      expect(typeof element.value).toBe(\"string\");\n      expect(element.type).toBe(state[index].type);\n      expect(element.value).toBe(state[index].value);\n    });\n  });","file":"JavascriptParser.unittest.js","skipped":false,"dir":"test"},{"name":"should collect definitions from identifiers introduced in object patterns","suites":["JavascriptParser","object rest/spread support","should accept"],"updatePoint":{"line":517,"column":81,"index":20087},"line":517,"code":"    it(\"should collect definitions from identifiers introduced in object patterns\", () => {\n      let definitions;\n      const parser = new JavascriptParser();\n      parser.hooks.statement.tap(\"JavascriptParserTest\", expr => {\n        definitions = parser.scope.definitions;\n        return true;\n      });\n      parser.parse(\"const { a, ...rest } = { a: 1, b: 2 };\", {});\n      expect(definitions.has(\"a\")).toBe(true);\n      expect(definitions.has(\"rest\")).toBe(true);\n    });","file":"JavascriptParser.unittest.js","skipped":false,"dir":"test"},{"name":"BasicEvaluatedExpression.isValidRegExpFlags()","suites":["JavascriptParser","BasicEvaluatedExpression"],"updatePoint":{"line":552,"column":79,"index":21381},"line":552,"code":"      it(`BasicEvaluatedExpression.isValidRegExpFlags(${JSON.stringify(suite)})`, () => {\n        expect(BasicEvaluatedExpression.isValidRegExpFlags(suite)).toBe(expected);\n      });","file":"JavascriptParser.unittest.js","skipped":false,"dir":"test"},{"name":"addAll","suites":["LazySet"],"updatePoint":{"line":4,"column":12,"index":90},"line":4,"code":"  it(\"addAll\", () => {\n    const a = new Set([\"a\"]);\n    const sut = new LazySet(a);\n    const empty = new LazySet([]);\n    expect(sut.size).toBe(1);\n    sut.addAll(empty);\n    expect(sut._toDeepMerge).toStrictEqual([]);\n    expect(sut.size).toBe(1);\n    const b = new Set([\"b\"]);\n    sut.addAll(b);\n    expect(sut._toMerge).toContain(b);\n    expect(sut.size).toBe(2);\n    const c = new LazySet([\"c\"]);\n    sut.addAll(c);\n    expect(sut._toDeepMerge).toContain(c);\n    expect(sut.size).toBe(3);\n    expect(sut._toDeepMerge).toStrictEqual([]);\n  });","file":"LazySet.unittest.js","skipped":false,"dir":"test"},{"name":"returns a module var without special characters","suites":["LocalModulesHelpers","addLocalModule"],"updatePoint":{"line":10,"column":55,"index":248},"line":10,"code":"    it(\"returns a module var without special characters\", () => {\n      const state = {\n        localModules: [\"first\", \"second\"]\n      };\n      const localModule = addLocalModule(state, \"local_module_sample\");\n      expect(localModule).toBeInstanceOf(Object);\n      expect(localModule).toMatchObject({\n        name: \"local_module_sample\",\n        idx: 2,\n        used: false\n      });\n      expect(state.localModules.length).toBe(3);\n    });","file":"LocalModulesHelpers.unittest.js","skipped":false,"dir":"test"},{"name":"returns `null` if names information doesn't match","suites":["LocalModulesHelpers","getLocalModule"],"updatePoint":{"line":25,"column":57,"index":736},"line":25,"code":"    it(\"returns `null` if names information doesn't match\", () => {\n      const state = {\n        module: \"module_sample\",\n        localModules: [{\n          name: \"first\"\n        }, {\n          name: \"second\"\n        }]\n      };\n      expect(getLocalModule(state, \"local_module_sample\")).toBe(null);\n    });","file":"LocalModulesHelpers.unittest.js","skipped":false,"dir":"test"},{"name":"returns local module information","suites":["LocalModulesHelpers","getLocalModule"],"updatePoint":{"line":36,"column":40,"index":1028},"line":36,"code":"    it(\"returns local module information\", () => {\n      const state = {\n        module: \"module_sample\",\n        localModules: [{\n          name: \"first\"\n        }, {\n          name: \"second\"\n        }]\n      };\n      expect(getLocalModule(state, \"first\")).toEqual({\n        name: \"first\"\n      });\n    });","file":"LocalModulesHelpers.unittest.js","skipped":false,"dir":"test"},{"name":"is an error","suites":["ModuleDependencyError","when new error created"],"updatePoint":{"line":17,"column":19,"index":450},"line":17,"code":"    it(\"is an error\", () => {\n      expect(env.moduleDependencyError).toBeInstanceOf(Error);\n    });","file":"ModuleDependencyError.unittest.js","skipped":false,"dir":"test"},{"name":"has a name property","suites":["ModuleDependencyError","when new error created"],"updatePoint":{"line":20,"column":27,"index":559},"line":20,"code":"    it(\"has a name property\", () => {\n      expect(env.moduleDependencyError.name).toBe(\"ModuleDependencyError\");\n    });","file":"ModuleDependencyError.unittest.js","skipped":false,"dir":"test"},{"name":"has a message property","suites":["ModuleDependencyError","when new error created"],"updatePoint":{"line":23,"column":30,"index":684},"line":23,"code":"    it(\"has a message property\", () => {\n      expect(env.moduleDependencyError.message).toBe(\"Error Message\");\n    });","file":"ModuleDependencyError.unittest.js","skipped":false,"dir":"test"},{"name":"has a loc property","suites":["ModuleDependencyError","when new error created"],"updatePoint":{"line":26,"column":26,"index":800},"line":26,"code":"    it(\"has a loc property\", () => {\n      expect(env.moduleDependencyError.loc).toBe(\"Location\");\n    });","file":"ModuleDependencyError.unittest.js","skipped":false,"dir":"test"},{"name":"has a details property","suites":["ModuleDependencyError","when new error created"],"updatePoint":{"line":29,"column":30,"index":911},"line":29,"code":"    it(\"has a details property\", () => {\n      expect(env.moduleDependencyError.details).toMatch(path.join(\"test\", \"ModuleDependencyError.unittest.js:\"));\n    });","file":"ModuleDependencyError.unittest.js","skipped":false,"dir":"test"},{"name":"has an module property","suites":["ModuleDependencyError","when new error created"],"updatePoint":{"line":32,"column":30,"index":1074},"line":32,"code":"    it(\"has an module property\", () => {\n      expect(env.moduleDependencyError.module).toBe(\"myModule\");\n    });","file":"ModuleDependencyError.unittest.js","skipped":false,"dir":"test"},{"name":"has an error property","suites":["ModuleDependencyError","when new error created"],"updatePoint":{"line":35,"column":29,"index":1187},"line":35,"code":"    it(\"has an error property\", () => {\n      expect(env.moduleDependencyError.error).toBe(env.error);\n    });","file":"ModuleDependencyError.unittest.js","skipped":false,"dir":"test"},{"name":"should trigger 'run' for each child compiler","suites":["MultiCompiler"],"updatePoint":{"line":34,"column":50,"index":726},"line":34,"code":"  it(\"should trigger 'run' for each child compiler\", done => {\n    const compiler = createMultiCompiler();\n    let called = 0;\n    compiler.hooks.run.tap(\"MultiCompiler test\", () => called++);\n    compiler.run(err => {\n      if (err) {\n        throw err;\n      }\n\n      expect(called).toBe(2);\n      compiler.close(done);\n    });\n  });","file":"MultiCompiler.test.js","skipped":false,"dir":"test"},{"name":"should trigger 'watchRun' for each child compiler","suites":["MultiCompiler"],"updatePoint":{"line":47,"column":55,"index":1067},"line":47,"code":"  it(\"should trigger 'watchRun' for each child compiler\", done => {\n    const compiler = createMultiCompiler();\n    let called = 0;\n    compiler.hooks.watchRun.tap(\"MultiCompiler test\", () => called++);\n    compiler.watch(1000, err => {\n      if (err) {\n        throw err;\n      }\n\n      expect(called).toBe(2);\n      compiler.close(done);\n    });\n  });","file":"MultiCompiler.test.js","skipped":false,"dir":"test"},{"name":"should not be running twice at a time (run)","suites":["MultiCompiler"],"updatePoint":{"line":60,"column":49,"index":1415},"line":60,"code":"  it(\"should not be running twice at a time (run)\", done => {\n    const compiler = createMultiCompiler();\n    compiler.run((err, stats) => {\n      if (err) return done(err);\n    });\n    compiler.run((err, stats) => {\n      if (err) {\n        compiler.close(done);\n      }\n    });\n  });","file":"MultiCompiler.test.js","skipped":false,"dir":"test"},{"name":"should not be running twice at a time (watch)","suites":["MultiCompiler"],"updatePoint":{"line":71,"column":51,"index":1703},"line":71,"code":"  it(\"should not be running twice at a time (watch)\", done => {\n    const compiler = createMultiCompiler();\n    compiler.watch({}, (err, stats) => {\n      if (err) return done(err);\n    });\n    compiler.watch({}, (err, stats) => {\n      if (err) {\n        compiler.close(done);\n      }\n    });\n  });","file":"MultiCompiler.test.js","skipped":false,"dir":"test"},{"name":"should not be running twice at a time (run - watch)","suites":["MultiCompiler"],"updatePoint":{"line":82,"column":57,"index":2009},"line":82,"code":"  it(\"should not be running twice at a time (run - watch)\", done => {\n    const compiler = createMultiCompiler();\n    compiler.run((err, stats) => {\n      if (err) return done(err);\n    });\n    compiler.watch({}, (err, stats) => {\n      if (err) {\n        compiler.close(done);\n      }\n    });\n  });","file":"MultiCompiler.test.js","skipped":false,"dir":"test"},{"name":"should not be running twice at a time (watch - run)","suites":["MultiCompiler"],"updatePoint":{"line":93,"column":57,"index":2309},"line":93,"code":"  it(\"should not be running twice at a time (watch - run)\", done => {\n    const compiler = createMultiCompiler();\n    compiler.watch({}, (err, stats) => {\n      if (err) return done(err);\n    });\n    compiler.run((err, stats) => {\n      if (err) {\n        compiler.close(done);\n      }\n    });\n  });","file":"MultiCompiler.test.js","skipped":false,"dir":"test"},{"name":"should not be running twice at a time (instance cb)","suites":["MultiCompiler"],"updatePoint":{"line":104,"column":57,"index":2609},"line":104,"code":"  it(\"should not be running twice at a time (instance cb)\", done => {\n    const compiler = webpack({\n      context: __dirname,\n      mode: \"production\",\n      entry: \"./c\",\n      output: {\n        path: \"/\",\n        filename: \"bundle.js\"\n      }\n    }, () => {});\n    compiler.outputFileSystem = createFsFromVolume(new Volume());\n    compiler.run((err, stats) => {\n      if (err) {\n        compiler.close(done);\n      }\n    });\n  });","file":"MultiCompiler.test.js","skipped":false,"dir":"test"},{"name":"should run again correctly after first compilation","suites":["MultiCompiler"],"updatePoint":{"line":121,"column":56,"index":3042},"line":121,"code":"  it(\"should run again correctly after first compilation\", done => {\n    const compiler = createMultiCompiler();\n    compiler.run((err, stats) => {\n      if (err) return done(err);\n      compiler.run((err, stats) => {\n        if (err) return done(err);\n        compiler.close(done);\n      });\n    });\n  });","file":"MultiCompiler.test.js","skipped":false,"dir":"test"},{"name":"should watch again correctly after first compilation","suites":["MultiCompiler"],"updatePoint":{"line":131,"column":58,"index":3351},"line":131,"code":"  it(\"should watch again correctly after first compilation\", done => {\n    const compiler = createMultiCompiler();\n    compiler.run((err, stats) => {\n      if (err) return done(err);\n      compiler.watch({}, (err, stats) => {\n        if (err) return done(err);\n        compiler.close(done);\n      });\n    });\n  });","file":"MultiCompiler.test.js","skipped":false,"dir":"test"},{"name":"should run again correctly after first closed watch","suites":["MultiCompiler"],"updatePoint":{"line":141,"column":57,"index":3665},"line":141,"code":"  it(\"should run again correctly after first closed watch\", done => {\n    const compiler = createMultiCompiler();\n    const watching = compiler.watch({}, (err, stats) => {\n      if (err) return done(err);\n    });\n    watching.close(() => {\n      compiler.run((err, stats) => {\n        if (err) return done(err);\n        compiler.close(done);\n      });\n    });\n  });","file":"MultiCompiler.test.js","skipped":false,"dir":"test"},{"name":"should watch again correctly after first closed watch","suites":["MultiCompiler"],"updatePoint":{"line":153,"column":59,"index":4033},"line":153,"code":"  it(\"should watch again correctly after first closed watch\", done => {\n    const compiler = createMultiCompiler();\n    const watching = compiler.watch({}, (err, stats) => {\n      if (err) return done(err);\n    });\n    watching.close(() => {\n      compiler.watch({}, (err, stats) => {\n        if (err) return done(err);\n        compiler.close(done);\n      });\n    });\n  });","file":"MultiCompiler.test.js","skipped":false,"dir":"test"},{"name":"should respect parallelism and dependencies for running","suites":["MultiCompiler"],"updatePoint":{"line":165,"column":61,"index":4409},"line":165,"code":"  it(\"should respect parallelism and dependencies for running\", done => {\n    const compiler = createMultiCompiler({\n      parallelism: 1,\n      2: {\n        name: \"c\",\n        context: path.join(__dirname, \"fixtures\"),\n        entry: \"./a.js\",\n        dependencies: [\"d\", \"e\"]\n      },\n      3: {\n        name: \"d\",\n        context: path.join(__dirname, \"fixtures\"),\n        entry: \"./a.js\"\n      },\n      4: {\n        name: \"e\",\n        context: path.join(__dirname, \"fixtures\"),\n        entry: \"./a.js\"\n      }\n    });\n    const events = [];\n    compiler.compilers.forEach(c => {\n      c.hooks.run.tap(\"test\", () => {\n        events.push(`${c.name} run`);\n      });\n      c.hooks.done.tap(\"test\", () => {\n        events.push(`${c.name} done`);\n      });\n    });\n    compiler.run((err, stats) => {\n      expect(events.join(\" \")).toBe(\"a run a done b run b done d run d done e run e done c run c done\");\n      compiler.close(done);\n    });\n  });","file":"MultiCompiler.test.js","skipped":false,"dir":"test"},{"name":"should respect parallelism and dependencies for watching","suites":["MultiCompiler"],"updatePoint":{"line":199,"column":62,"index":5357},"line":199,"code":"  it(\"should respect parallelism and dependencies for watching\", done => {\n    const compiler = webpack(Object.assign([{\n      name: \"a\",\n      mode: \"development\",\n      context: path.join(__dirname, \"fixtures\"),\n      entry: \"./a.js\",\n      dependencies: [\"b\", \"c\"]\n    }, {\n      name: \"b\",\n      mode: \"development\",\n      context: path.join(__dirname, \"fixtures\"),\n      entry: \"./b.js\"\n    }, {\n      name: \"c\",\n      mode: \"development\",\n      context: path.join(__dirname, \"fixtures\"),\n      entry: \"./a.js\"\n    }], {\n      parallelism: 1\n    }));\n    compiler.outputFileSystem = createFsFromVolume(new Volume());\n    const watchCallbacks = [];\n    const watchCallbacksUndelayed = [];\n    compiler.watchFileSystem = {\n      watch(files, directories, missing, startTime, options, callback, callbackUndelayed) {\n        watchCallbacks.push(callback);\n        watchCallbacksUndelayed.push(callbackUndelayed);\n      }\n\n    };\n    const events = [];\n    compiler.compilers.forEach(c => {\n      c.hooks.invalid.tap(\"test\", () => {\n        events.push(`${c.name} invalid`);\n      });\n      c.hooks.watchRun.tap(\"test\", () => {\n        events.push(`${c.name} run`);\n      });\n      c.hooks.done.tap(\"test\", () => {\n        events.push(`${c.name} done`);\n      });\n    });\n    let update = 0;\n    compiler.watch({}, (err, stats) => {\n      if (err) return done(err);\n\n      const info = () => stats.toString({\n        preset: \"summary\",\n        version: false\n      });\n\n      switch (update++) {\n        case 0:\n          expect(info()).toMatchInlineSnapshot(`\n\t\t\t\t\t\t\t\"a:\n\t\t\t\t\t\t\t  a compiled successfully\n\n\t\t\t\t\t\t\tb:\n\t\t\t\t\t\t\t  b compiled successfully\n\n\t\t\t\t\t\t\tc:\n\t\t\t\t\t\t\t  c compiled successfully\"\n\t\t\t\t\t`);\n          expect(compiler.compilers[0].modifiedFiles).toBe(undefined);\n          expect(compiler.compilers[0].removedFiles).toBe(undefined);\n          expect(events).toMatchInlineSnapshot(`\n\t\t\t\tArray [\n\t\t\t\t  \"b run\",\n\t\t\t\t  \"b done\",\n\t\t\t\t  \"c run\",\n\t\t\t\t  \"c done\",\n\t\t\t\t  \"a run\",\n\t\t\t\t  \"a done\",\n\t\t\t\t]\n\t\t\t`);\n          events.length = 0; // wait until watching begins\n\n          setTimeout(() => {\n            watchCallbacksUndelayed[0]();\n            watchCallbacks[0](null, new Map(), new Map(), new Set(), new Set());\n          }, 100);\n          break;\n\n        case 1:\n          expect(info()).toMatchInlineSnapshot(`\n\t\t\t\t\"a:\n\t\t\t\t  a compiled successfully\n\n\t\t\t\tb:\n\t\t\t\t  b compiled successfully\"\n\t\t\t`);\n          expect(compiler.compilers[1].modifiedFiles).toEqual(new Set());\n          expect(compiler.compilers[1].removedFiles).toEqual(new Set());\n          expect(events).toMatchInlineSnapshot(`\n\t\t\t\tArray [\n\t\t\t\t  \"b invalid\",\n\t\t\t\t  \"b run\",\n\t\t\t\t  \"b done\",\n\t\t\t\t  \"a invalid\",\n\t\t\t\t  \"a run\",\n\t\t\t\t  \"a done\",\n\t\t\t\t]\n\t\t\t`);\n          watchCallbacksUndelayed[2]();\n          watchCallbacks[2](null, new Map(), new Map(), new Set(), new Set());\n          break;\n\n        case 2:\n          expect(info()).toMatchInlineSnapshot(`\n\t\t\t\t\"a:\n\t\t\t\t  a compiled successfully\"\n\t\t\t`);\n          expect(events).toMatchInlineSnapshot(`\n\t\t\t\tArray [\n\t\t\t\t  \"b invalid\",\n\t\t\t\t  \"b run\",\n\t\t\t\t  \"b done\",\n\t\t\t\t  \"a invalid\",\n\t\t\t\t  \"a run\",\n\t\t\t\t  \"a done\",\n\t\t\t\t  \"a invalid\",\n\t\t\t\t  \"a run\",\n\t\t\t\t  \"a done\",\n\t\t\t\t]\n\t\t\t`);\n          events.length = 0;\n          watchCallbacksUndelayed[0]();\n          watchCallbacksUndelayed[1]();\n          watchCallbacks[0](null, new Map(), new Map(), new Set(), new Set());\n          watchCallbacks[1](null, new Map(), new Map(), new Set(), new Set());\n          break;\n\n        case 3:\n          expect(info()).toMatchInlineSnapshot(`\n\t\t\t\t\"a:\n\t\t\t\t  a compiled successfully\n\n\t\t\t\tb:\n\t\t\t\t  b compiled successfully\n\n\t\t\t\tc:\n\t\t\t\t  c compiled successfully\"\n\t\t\t`);\n          expect(events).toMatchInlineSnapshot(`\n\t\t\t\tArray [\n\t\t\t\t  \"b invalid\",\n\t\t\t\t  \"c invalid\",\n\t\t\t\t  \"b run\",\n\t\t\t\t  \"b done\",\n\t\t\t\t  \"c run\",\n\t\t\t\t  \"c done\",\n\t\t\t\t  \"a invalid\",\n\t\t\t\t  \"a run\",\n\t\t\t\t  \"a done\",\n\t\t\t\t]\n\t\t\t`);\n          events.length = 0;\n          compiler.close(done);\n          break;\n\n        default:\n          done(new Error(\"unexpected\"));\n      }\n    });\n  });","file":"MultiCompiler.test.js","skipped":false,"dir":"test"},{"name":"should respect parallelism when using invalidate","suites":["MultiCompiler"],"updatePoint":{"line":364,"column":54,"index":9406},"line":364,"code":"  it(\"should respect parallelism when using invalidate\", done => {\n    const configs = [{\n      name: \"a\",\n      mode: \"development\",\n      entry: {\n        a: \"./a.js\"\n      },\n      context: path.join(__dirname, \"fixtures\")\n    }, {\n      name: \"b\",\n      mode: \"development\",\n      entry: {\n        b: \"./b.js\"\n      },\n      context: path.join(__dirname, \"fixtures\")\n    }];\n    configs.parallelism = 1;\n    const compiler = webpack(configs);\n    const events = [];\n    compiler.compilers.forEach(c => {\n      c.hooks.invalid.tap(\"test\", () => {\n        events.push(`${c.name} invalid`);\n      });\n      c.hooks.watchRun.tap(\"test\", () => {\n        events.push(`${c.name} run`);\n      });\n      c.hooks.done.tap(\"test\", () => {\n        events.push(`${c.name} done`);\n      });\n    });\n    compiler.watchFileSystem = {\n      watch() {}\n\n    };\n    compiler.outputFileSystem = createFsFromVolume(new Volume());\n    let state = 0;\n    const watching = compiler.watch({}, error => {\n      if (error) {\n        done(error);\n        return;\n      }\n\n      if (state !== 0) return;\n      state++;\n      expect(events).toMatchInlineSnapshot(`\n\t\t\tArray [\n\t\t\t  \"a run\",\n\t\t\t  \"a done\",\n\t\t\t  \"b run\",\n\t\t\t  \"b done\",\n\t\t\t]\n\t\t`);\n      events.length = 0;\n      watching.invalidate(err => {\n        try {\n          if (err) return done(err);\n          expect(events).toMatchInlineSnapshot(`\n\t\t\t\tArray [\n\t\t\t\t  \"a invalid\",\n\t\t\t\t  \"b invalid\",\n\t\t\t\t  \"a run\",\n\t\t\t\t  \"a done\",\n\t\t\t\t  \"b run\",\n\t\t\t\t  \"b done\",\n\t\t\t\t]\n\t\t\t`);\n          events.length = 0;\n          expect(state).toBe(1);\n          setTimeout(() => {\n            compiler.close(done);\n          }, 1000);\n        } catch (e) {\n          console.error(e);\n          done(e);\n        }\n      });\n    });\n  }, 2000);","file":"MultiCompiler.test.js","skipped":false,"dir":"test"},{"name":"should respect dependencies when using invalidate","suites":["MultiCompiler"],"updatePoint":{"line":442,"column":55,"index":11165},"line":442,"code":"  it(\"should respect dependencies when using invalidate\", done => {\n    const compiler = webpack([{\n      name: \"a\",\n      mode: \"development\",\n      entry: {\n        a: \"./a.js\"\n      },\n      context: path.join(__dirname, \"fixtures\"),\n      dependencies: [\"b\"]\n    }, {\n      name: \"b\",\n      mode: \"development\",\n      entry: {\n        b: \"./b.js\"\n      },\n      context: path.join(__dirname, \"fixtures\")\n    }]);\n    const events = [];\n    compiler.compilers.forEach(c => {\n      c.hooks.invalid.tap(\"test\", () => {\n        events.push(`${c.name} invalid`);\n      });\n      c.hooks.watchRun.tap(\"test\", () => {\n        events.push(`${c.name} run`);\n      });\n      c.hooks.done.tap(\"test\", () => {\n        events.push(`${c.name} done`);\n      });\n    });\n    compiler.watchFileSystem = {\n      watch() {}\n\n    };\n    compiler.outputFileSystem = createFsFromVolume(new Volume());\n    let state = 0;\n    const watching = compiler.watch({}, error => {\n      if (error) {\n        done(error);\n        return;\n      }\n\n      if (state !== 0) return;\n      state++;\n      expect(events).toMatchInlineSnapshot(`\n\t\t\tArray [\n\t\t\t  \"b run\",\n\t\t\t  \"b done\",\n\t\t\t  \"a run\",\n\t\t\t  \"a done\",\n\t\t\t]\n\t\t`);\n      events.length = 0;\n      watching.invalidate(err => {\n        try {\n          if (err) return done(err);\n          expect(events).toMatchInlineSnapshot(`\n\t\t\t\tArray [\n\t\t\t\t  \"a invalid\",\n\t\t\t\t  \"b invalid\",\n\t\t\t\t  \"b run\",\n\t\t\t\t  \"b done\",\n\t\t\t\t  \"a run\",\n\t\t\t\t  \"a done\",\n\t\t\t\t]\n\t\t\t`);\n          events.length = 0;\n          expect(state).toBe(1);\n          setTimeout(() => {\n            compiler.close(done);\n          }, 1000);\n        } catch (e) {\n          console.error(e);\n          done(e);\n        }\n      });\n    });\n  }, 2000);","file":"MultiCompiler.test.js","skipped":false,"dir":"test"},{"name":"shouldn't hang when invalidating watchers","suites":["MultiCompiler"],"updatePoint":{"line":519,"column":47,"index":12885},"line":519,"code":"  it(\"shouldn't hang when invalidating watchers\", done => {\n    const entriesA = {\n      a: \"./a.js\"\n    };\n    const entriesB = {\n      b: \"./b.js\"\n    };\n    const compiler = webpack([{\n      name: \"a\",\n      mode: \"development\",\n      entry: () => entriesA,\n      context: path.join(__dirname, \"fixtures\")\n    }, {\n      name: \"b\",\n      mode: \"development\",\n      entry: () => entriesB,\n      context: path.join(__dirname, \"fixtures\")\n    }]);\n    compiler.watchFileSystem = {\n      watch() {}\n\n    };\n    compiler.outputFileSystem = createFsFromVolume(new Volume());\n    const watching = compiler.watch({}, error => {\n      if (error) {\n        done(error);\n        return;\n      }\n\n      entriesA.b = \"./b.js\";\n      entriesB.a = \"./a.js\";\n      watching.invalidate(err => {\n        if (err) return done(err);\n        compiler.close(done);\n      });\n    });\n  }, 2000);","file":"MultiCompiler.test.js","skipped":false,"dir":"test"},{"name":"shouldn't hang when invalidating during build","suites":["MultiCompiler"],"updatePoint":{"line":556,"column":51,"index":13765},"line":556,"code":"  it(\"shouldn't hang when invalidating during build\", done => {\n    const compiler = webpack(Object.assign([{\n      name: \"a\",\n      mode: \"development\",\n      context: path.join(__dirname, \"fixtures\"),\n      entry: \"./a.js\"\n    }, {\n      name: \"b\",\n      mode: \"development\",\n      context: path.join(__dirname, \"fixtures\"),\n      entry: \"./b.js\",\n      dependencies: [\"a\"]\n    }]));\n    compiler.outputFileSystem = createFsFromVolume(new Volume());\n    const watchCallbacks = [];\n    const watchCallbacksUndelayed = [];\n    let firstRun = true;\n    compiler.watchFileSystem = {\n      watch(files, directories, missing, startTime, options, callback, callbackUndelayed) {\n        watchCallbacks.push(callback);\n        watchCallbacksUndelayed.push(callbackUndelayed);\n\n        if (firstRun && files.has(path.join(__dirname, \"fixtures\", \"a.js\"))) {\n          process.nextTick(() => {\n            callback(null, new Map(), new Map(), new Set(), new Set());\n          });\n          firstRun = false;\n        }\n      }\n\n    };\n    compiler.watch({}, (err, stats) => {\n      if (err) return done(err);\n      compiler.close(done);\n    });\n  });","file":"MultiCompiler.test.js","skipped":false,"dir":"test"},{"name":"Throws when getting items from an empty Cache","suites":["MultiItemCache"],"updatePoint":{"line":11,"column":51,"index":222},"line":11,"code":"  it(\"Throws when getting items from an empty Cache\", () => {\n    const multiItemCache = new MultiItemCache(generateItemCaches(0));\n    expect(() => multiItemCache.get(_ => _())).toThrowError();\n  });","file":"MultiItemCache.unittest.js","skipped":false,"dir":"test"},{"name":"Returns the single ItemCacheFacade when passed an array of length 1","suites":["MultiItemCache"],"updatePoint":{"line":15,"column":73,"index":445},"line":15,"code":"  it(\"Returns the single ItemCacheFacade when passed an array of length 1\", () => {\n    const itemCaches = generateItemCaches(1);\n    const multiItemCache = new MultiItemCache(itemCaches);\n    expect(multiItemCache).toBe(itemCaches[0]);\n  });","file":"MultiItemCache.unittest.js","skipped":false,"dir":"test"},{"name":"Retrieves items from the underlying Cache when get is called","suites":["MultiItemCache"],"updatePoint":{"line":20,"column":66,"index":681},"line":20,"code":"  it(\"Retrieves items from the underlying Cache when get is called\", () => {\n    const itemCaches = generateItemCaches(10);\n    const multiItemCache = new MultiItemCache(itemCaches);\n\n    const callback = (err, res) => {\n      expect(err).toBeNull();\n      expect(res).toBeInstanceOf(Object);\n    };\n\n    for (let i = 0; i < 10; ++i) {\n      multiItemCache.get(callback);\n    }\n  });","file":"MultiItemCache.unittest.js","skipped":false,"dir":"test"},{"name":"Can get() a large number of items without exhausting the stack","suites":["MultiItemCache"],"updatePoint":{"line":33,"column":68,"index":1067},"line":33,"code":"  it(\"Can get() a large number of items without exhausting the stack\", () => {\n    const itemCaches = generateItemCaches(10000, () => undefined);\n    const multiItemCache = new MultiItemCache(itemCaches);\n    let callbacks = 0;\n\n    const callback = (err, res) => {\n      expect(err).toBeNull();\n      expect(res).toBeUndefined();\n      ++callbacks;\n    };\n\n    multiItemCache.get(callback);\n    expect(callbacks).toEqual(1);\n  });","file":"MultiItemCache.unittest.js","skipped":false,"dir":"test"},{"name":"should create JSON of children stats","suites":["MultiStats"],"updatePoint":{"line":11,"column":42,"index":189},"line":11,"code":"  it(\"should create JSON of children stats\", done => {\n    const webpack = require(\"..\");\n\n    const compiler = webpack([{\n      context: __dirname,\n      entry: \"./fixtures/a\"\n    }, {\n      context: __dirname,\n      entry: \"./fixtures/b\"\n    }]);\n    compiler.outputFileSystem = createFsFromVolume(new Volume());\n    compiler.run((err, stats) => {\n      if (err) return done(err);\n\n      try {\n        const statsObject = stats.toJson();\n        expect(statsObject).toEqual(expect.objectContaining({\n          children: expect.any(Array)\n        }));\n        expect(statsObject.children).toHaveLength(2);\n        done();\n      } catch (e) {\n        done(e);\n      }\n    });\n  });","file":"MultiStats.test.js","skipped":false,"dir":"test"},{"name":"invalidates each watching","suites":["MultiWatching","invalidate"],"updatePoint":{"line":38,"column":33,"index":798},"line":38,"code":"    it(\"invalidates each watching\", () => {\n      expect(watchings[0].invalidate.mock.calls.length).toBe(1);\n      expect(watchings[1].invalidate.mock.calls.length).toBe(1);\n    });","file":"MultiWatching.unittest.js","skipped":false,"dir":"test"},{"name":"suspends each watching","suites":["MultiWatching","suspend"],"updatePoint":{"line":44,"column":30,"index":1013},"line":44,"code":"    it(\"suspends each watching\", () => {\n      myMultiWatching.suspend();\n      expect(watchings[0].suspend.mock.calls.length).toBe(1);\n      expect(watchings[1].suspend.mock.calls.length).toBe(1);\n    });","file":"MultiWatching.unittest.js","skipped":false,"dir":"test"},{"name":"resume each watching","suites":["MultiWatching","suspend"],"updatePoint":{"line":49,"column":28,"index":1217},"line":49,"code":"    it(\"resume each watching\", () => {\n      myMultiWatching.resume();\n      expect(watchings[0].resume.mock.calls.length).toBe(1);\n      expect(watchings[1].resume.mock.calls.length).toBe(1);\n    });","file":"MultiWatching.unittest.js","skipped":false,"dir":"test"},{"name":"closes each watching","suites":["MultiWatching","close"],"updatePoint":{"line":66,"column":28,"index":1671},"line":66,"code":"    it(\"closes each watching\", () => {\n      expect(watchings[0].close.mock.calls.length).toBe(1);\n      expect(watchings[1].close.mock.calls.length).toBe(1);\n    });","file":"MultiWatching.unittest.js","skipped":false,"dir":"test"},{"name":"calls callback after each watching has closed","suites":["MultiWatching","close"],"updatePoint":{"line":70,"column":53,"index":1863},"line":70,"code":"    it(\"calls callback after each watching has closed\", () => {\n      callClosedFinishedCallback(watchings[0]);\n      callClosedFinishedCallback(watchings[1]);\n      expect(callback.mock.calls.length).toBe(1);\n    });","file":"MultiWatching.unittest.js","skipped":false,"dir":"test"},{"name":"should compile and run a simple module","suites":["NodeTemplatePlugin"],"updatePoint":{"line":10,"column":44,"index":219},"line":10,"code":"  it(\"should compile and run a simple module\", done => {\n    const webpack = require(\"..\");\n\n    webpack({\n      mode: \"production\",\n      context: path.join(__dirname, \"fixtures\", \"nodetest\"),\n      target: \"node\",\n      output: {\n        path: path.join(__dirname, \"js\", \"NodeTemplatePlugin\"),\n        filename: \"result.js\",\n        chunkFilename: \"[fullhash].result.[id].js\",\n        library: \"abc\",\n        libraryTarget: \"commonjs\"\n      },\n      entry: \"./entry\"\n    }, (err, stats) => {\n      if (err) return err;\n      expect(stats.hasErrors()).toBe(false);\n      expect(stats.hasWarnings()).toBe(false); // eslint-disable-next-line node/no-missing-require\n\n      const result = require(\"./js/NodeTemplatePlugin/result\").abc;\n\n      expect(result.nextTick).toBe(process.nextTick);\n      expect(result.fs).toBe(require(\"fs\"));\n      result.loadChunk(456, chunk => {\n        expect(chunk).toBe(123);\n        result.loadChunk(567, chunk => {\n          expect(chunk).toEqual({\n            a: 1\n          });\n          done();\n        });\n      });\n    });\n  });","file":"NodeTemplatePlugin.test.js","skipped":false,"dir":"test"},{"name":"should compile and run a simple module in single mode","suites":["NodeTemplatePlugin"],"updatePoint":{"line":45,"column":59,"index":1300},"line":45,"code":"  it(\"should compile and run a simple module in single mode\", done => {\n    const webpack = require(\"..\");\n\n    webpack({\n      mode: \"production\",\n      context: path.join(__dirname, \"fixtures\", \"nodetest\"),\n      target: \"node\",\n      output: {\n        path: path.join(__dirname, \"js\", \"NodeTemplatePluginSingle\"),\n        filename: \"result2.js\",\n        chunkFilename: \"[fullhash].result2.[id].js\",\n        library: \"def\",\n        libraryTarget: \"umd\",\n        auxiliaryComment: \"test\"\n      },\n      entry: \"./entry\",\n      plugins: [new webpack.optimize.LimitChunkCountPlugin({\n        maxChunks: 1\n      })]\n    }, (err, stats) => {\n      if (err) return err;\n      expect(stats.hasErrors()).toBe(false); // eslint-disable-next-line node/no-missing-require\n\n      const result = require(\"./js/NodeTemplatePluginSingle/result2\");\n\n      expect(result.nextTick).toBe(process.nextTick);\n      expect(result.fs).toBe(require(\"fs\"));\n      const sameTick = true;\n      result.loadChunk(456, chunk => {\n        expect(chunk).toBe(123);\n        expect(sameTick).toBe(true);\n        result.loadChunk(567, chunk => {\n          expect(chunk).toEqual({\n            a: 1\n          });\n          done();\n        });\n      });\n    });\n  });","file":"NodeTemplatePlugin.test.js","skipped":false,"dir":"test"},{"name":"hashLength=0","suites":[],"updatePoint":{"line":5,"column":16,"index":103},"line":5,"code":"it(\"hashLength=0\", () => {\n  expect(nonNumericOnlyHash(\"111\", 0)).toBe(\"\");\n});","file":"nonNumericOnlyHash.unittest.js","skipped":false,"dir":"test"},{"name":"abc","suites":[],"updatePoint":{"line":8,"column":7,"index":174},"line":8,"code":"it(\"abc\", () => {\n  expect(nonNumericOnlyHash(\"abc\", 10)).toBe(\"abc\");\n});","file":"nonNumericOnlyHash.unittest.js","skipped":false,"dir":"test"},{"name":"abc1","suites":[],"updatePoint":{"line":11,"column":8,"index":250},"line":11,"code":"it(\"abc1\", () => {\n  expect(nonNumericOnlyHash(\"abc1\", 3)).toBe(\"abc\");\n});","file":"nonNumericOnlyHash.unittest.js","skipped":false,"dir":"test"},{"name":"ab11","suites":[],"updatePoint":{"line":14,"column":8,"index":326},"line":14,"code":"it(\"ab11\", () => {\n  expect(nonNumericOnlyHash(\"ab11\", 3)).toBe(\"ab1\");\n});","file":"nonNumericOnlyHash.unittest.js","skipped":false,"dir":"test"},{"name":"0111","suites":[],"updatePoint":{"line":17,"column":8,"index":402},"line":17,"code":"it(\"0111\", () => {\n  expect(nonNumericOnlyHash(\"0111\", 3)).toBe(\"a11\");\n});","file":"nonNumericOnlyHash.unittest.js","skipped":false,"dir":"test"},{"name":"911a","suites":[],"updatePoint":{"line":20,"column":8,"index":478},"line":20,"code":"it(\"911a\", () => {\n  expect(nonNumericOnlyHash(\"911a\", 3)).toBe(\"d11\");\n});","file":"nonNumericOnlyHash.unittest.js","skipped":false,"dir":"test"},{"name":"511a","suites":[],"updatePoint":{"line":23,"column":8,"index":554},"line":23,"code":"it(\"511a\", () => {\n  expect(nonNumericOnlyHash(\"511a\", 3)).toBe(\"f11\");\n});","file":"nonNumericOnlyHash.unittest.js","skipped":false,"dir":"test"},{"name":"returns an identifier for this module","suites":["NormalModule","#identifier"],"updatePoint":{"line":46,"column":45,"index":1042},"line":46,"code":"    it(\"returns an identifier for this module\", () => {\n      expect(normalModule.identifier()).toBe(request);\n    });","file":"NormalModule.unittest.js","skipped":false,"dir":"test"},{"name":"returns an identifier from toString","suites":["NormalModule","#identifier"],"updatePoint":{"line":49,"column":43,"index":1159},"line":49,"code":"    it(\"returns an identifier from toString\", () => {\n      normalModule.debugId = 1000;\n      expect(normalModule.toString()).toBe(\"Module[1000: /some/request]\");\n    });","file":"NormalModule.unittest.js","skipped":false,"dir":"test"},{"name":"calls the given requestShortener with the user request","suites":["NormalModule","#readableIdentifier"],"updatePoint":{"line":55,"column":62,"index":1398},"line":55,"code":"    it(\"calls the given requestShortener with the user request\", () => {\n      const spy = jest.fn();\n      normalModule.readableIdentifier({\n        shorten: spy\n      });\n      expect(spy.mock.calls.length).toBe(1);\n      expect(spy.mock.calls[0][0]).toBe(userRequest);\n    });","file":"NormalModule.unittest.js","skipped":false,"dir":"test"},{"name":"contextifies the userRequest of the module","suites":["NormalModule","#libIdent"],"updatePoint":{"line":65,"column":50,"index":1704},"line":65,"code":"    it(\"contextifies the userRequest of the module\", () => {\n      expect(normalModule.libIdent({\n        context: \"/some/context\"\n      })).toBe(\"../userRequest\");\n    });","file":"NormalModule.unittest.js","skipped":false,"dir":"test"},{"name":"contextifies every path in the userRequest","suites":["NormalModule","#libIdent","given a userRequest containing loaders"],"updatePoint":{"line":83,"column":52,"index":2277},"line":83,"code":"      it(\"contextifies every path in the userRequest\", () => {\n        expect(normalModule.libIdent({\n          context: \"/some/context\"\n        })).toBe(\"../userRequest!../other/userRequest!../thing/is/off/here\");\n      });","file":"NormalModule.unittest.js","skipped":false,"dir":"test"},{"name":"ignores paths in query parameters","suites":["NormalModule","#libIdent","given a userRequest containing query parameters"],"updatePoint":{"line":90,"column":43,"index":2573},"line":90,"code":"      it(\"ignores paths in query parameters\", () => {\n        // cspell:word testpath\n        userRequest = \"F:\\\\some\\\\context\\\\loader?query=foo\\\\bar&otherPath=testpath/other\";\n        normalModule = new NormalModule({\n          type: \"javascript/auto\",\n          request,\n          userRequest,\n          rawRequest,\n          loaders,\n          resource,\n          parser\n        });\n        expect(normalModule.libIdent({\n          context: \"F:\\\\some\\\\context\"\n        })).toBe(\"./loader?query=foo\\\\bar&otherPath=testpath/other\");\n      });","file":"NormalModule.unittest.js","skipped":false,"dir":"test"},{"name":"return the resource","suites":["NormalModule","#nameForCondition"],"updatePoint":{"line":109,"column":27,"index":3155},"line":109,"code":"    it(\"return the resource\", () => {\n      expect(normalModule.nameForCondition()).toBe(resource);\n    });","file":"NormalModule.unittest.js","skipped":false,"dir":"test"},{"name":"return only the part before the ?-sign","suites":["NormalModule","#nameForCondition","given a resource containing a ?-sign"],"updatePoint":{"line":126,"column":48,"index":3682},"line":126,"code":"      it(\"return only the part before the ?-sign\", () => {\n        expect(normalModule.nameForCondition()).toBe(baseResource);\n      });","file":"NormalModule.unittest.js","skipped":false,"dir":"test"},{"name":"returns a RawSource","suites":["NormalModule","#createSourceForAsset","given no sourcemap"],"updatePoint":{"line":141,"column":29,"index":4076},"line":141,"code":"      it(\"returns a RawSource\", () => {\n        expect(normalModule.createSourceForAsset(\"/\", name, content)).toBeInstanceOf(RawSource);\n      });","file":"NormalModule.unittest.js","skipped":false,"dir":"test"},{"name":"returns a OriginalSource","suites":["NormalModule","#createSourceForAsset","given a string as the sourcemap"],"updatePoint":{"line":146,"column":34,"index":4292},"line":146,"code":"      it(\"returns a OriginalSource\", () => {\n        expect(normalModule.createSourceForAsset(\"/\", name, content, sourceMap)).toBeInstanceOf(OriginalSource);\n      });","file":"NormalModule.unittest.js","skipped":false,"dir":"test"},{"name":"returns a SourceMapSource","suites":["NormalModule","#createSourceForAsset","given a some other kind of sourcemap (source maps disabled)"],"updatePoint":{"line":156,"column":35,"index":4668},"line":156,"code":"      it(\"returns a SourceMapSource\", () => {\n        expect(normalModule.createSourceForAsset(\"/\", name, content, sourceMap)).toBeInstanceOf(RawSource);\n      });","file":"NormalModule.unittest.js","skipped":false,"dir":"test"},{"name":"returns a SourceMapSource","suites":["NormalModule","#createSourceForAsset","given a some other kind of sourcemap (simple source maps enabled)"],"updatePoint":{"line":164,"column":35,"index":4995},"line":164,"code":"      it(\"returns a SourceMapSource\", () => {\n        expect(normalModule.createSourceForAsset(\"/\", name, content, sourceMap)).toBeInstanceOf(RawSource);\n      });","file":"NormalModule.unittest.js","skipped":false,"dir":"test"},{"name":"returns a SourceMapSource","suites":["NormalModule","#createSourceForAsset","given a some other kind of sourcemap (source maps enabled)"],"updatePoint":{"line":174,"column":35,"index":5358},"line":174,"code":"      it(\"returns a SourceMapSource\", () => {\n        expect(normalModule.createSourceForAsset(\"/\", name, content, sourceMap)).toBeInstanceOf(SourceMapSource);\n      });","file":"NormalModule.unittest.js","skipped":false,"dir":"test"},{"name":"returns an original Source","suites":["NormalModule","#originalSource"],"updatePoint":{"line":184,"column":34,"index":5710},"line":184,"code":"    it(\"returns an original Source\", () => {\n      expect(normalModule.originalSource()).toBe(normalModule._source);\n    });","file":"NormalModule.unittest.js","skipped":false,"dir":"test"},{"name":"returns true","suites":["NormalModule","#applyNoParseRule","given a string as rule","and the content starting with the string specified in rule"],"updatePoint":{"line":199,"column":24,"index":6179},"line":199,"code":"        it(\"returns true\", () => {\n          expect(normalModule.shouldPreventParsing(rule, content)).toBe(true);\n        });","file":"NormalModule.unittest.js","skipped":false,"dir":"test"},{"name":"returns false","suites":["NormalModule","#applyNoParseRule","given a string as rule","and the content does not start with the string specified in rule"],"updatePoint":{"line":207,"column":25,"index":6482},"line":207,"code":"        it(\"returns false\", () => {\n          expect(normalModule.shouldPreventParsing(rule, content)).toBe(false);\n        });","file":"NormalModule.unittest.js","skipped":false,"dir":"test"},{"name":"returns true","suites":["NormalModule","#applyNoParseRule","given a regex as rule","and the content matches the rule"],"updatePoint":{"line":220,"column":24,"index":6877},"line":220,"code":"        it(\"returns true\", () => {\n          expect(normalModule.shouldPreventParsing(rule, content)).toBe(true);\n        });","file":"NormalModule.unittest.js","skipped":false,"dir":"test"},{"name":"returns false","suites":["NormalModule","#applyNoParseRule","given a regex as rule","and the content does not match the rule"],"updatePoint":{"line":228,"column":25,"index":7155},"line":228,"code":"        it(\"returns false\", () => {\n          expect(normalModule.shouldPreventParsing(rule, content)).toBe(false);\n        });","file":"NormalModule.unittest.js","skipped":false,"dir":"test"},{"name":"returns false","suites":["NormalModule","#shouldPreventParsing","given no noParseRule"],"updatePoint":{"line":241,"column":23,"index":7552},"line":241,"code":"      it(\"returns false\", () => {\n        expect(normalModule.shouldPreventParsing()).toBe(false);\n        expect(applyNoParseRuleSpy.mock.calls.length).toBe(0);\n      });","file":"NormalModule.unittest.js","skipped":false,"dir":"test"},{"name":"calls and returns whatever applyNoParseRule returns","suites":["NormalModule","#shouldPreventParsing","given a noParseRule","that is a string"],"updatePoint":{"line":253,"column":63,"index":8012},"line":253,"code":"        it(\"calls and returns whatever applyNoParseRule returns\", () => {\n          expect(normalModule.shouldPreventParsing(\"some rule\")).toBe(returnValOfSpy);\n          expect(applyNoParseRuleSpy.mock.calls.length).toBe(1);\n        });","file":"NormalModule.unittest.js","skipped":false,"dir":"test"},{"name":"calls and returns whatever applyNoParseRule returns","suites":["NormalModule","#shouldPreventParsing","given a noParseRule","that is a regex"],"updatePoint":{"line":259,"column":63,"index":8302},"line":259,"code":"        it(\"calls and returns whatever applyNoParseRule returns\", () => {\n          expect(normalModule.shouldPreventParsing(\"some rule\")).toBe(returnValOfSpy);\n          expect(applyNoParseRuleSpy.mock.calls.length).toBe(1);\n        });","file":"NormalModule.unittest.js","skipped":false,"dir":"test"},{"name":"returns false","suites":["NormalModule","#shouldPreventParsing","given a noParseRule","that is an array","of strings and or regexps","and none of them match"],"updatePoint":{"line":275,"column":29,"index":8953},"line":275,"code":"            it(\"returns false\", () => {\n              expect(normalModule.shouldPreventParsing(someRules)).toBe(returnValOfSpy);\n              expect(applyNoParseRuleSpy.mock.calls.length).toBe(3);\n            });","file":"NormalModule.unittest.js","skipped":false,"dir":"test"},{"name":"returns true","suites":["NormalModule","#shouldPreventParsing","given a noParseRule","that is an array","of strings and or regexps","and the first of them matches"],"updatePoint":{"line":285,"column":28,"index":9391},"line":285,"code":"            it(\"returns true\", () => {\n              expect(normalModule.shouldPreventParsing(someRules)).toBe(returnValOfSpy);\n              expect(applyNoParseRuleSpy.mock.calls.length).toBe(1);\n            });","file":"NormalModule.unittest.js","skipped":false,"dir":"test"},{"name":"returns true","suites":["NormalModule","#shouldPreventParsing","given a noParseRule","that is an array","of strings and or regexps","and the last of them matches"],"updatePoint":{"line":297,"column":28,"index":9942},"line":297,"code":"            it(\"returns true\", () => {\n              expect(normalModule.shouldPreventParsing(someRules)).toBe(returnValOfSpy);\n              expect(applyNoParseRuleSpy.mock.calls.length).toBe(3);\n            });","file":"NormalModule.unittest.js","skipped":false,"dir":"test"},{"name":"is a function","suites":["NullDependency"],"updatePoint":{"line":8,"column":19,"index":182},"line":8,"code":"  it(\"is a function\", () => {\n    expect(NullDependency).toBeTypeOf(\"function\");\n  });","file":"NullDependency.unittest.js","skipped":false,"dir":"test"},{"name":"has a null type","suites":["NullDependency","when created"],"updatePoint":{"line":13,"column":23,"index":373},"line":13,"code":"    it(\"has a null type\", () => {\n      expect(env.nullDependency.type).toBe(\"null\");\n    });","file":"NullDependency.unittest.js","skipped":false,"dir":"test"},{"name":"has update hash function","suites":["NullDependency","when created"],"updatePoint":{"line":16,"column":32,"index":476},"line":16,"code":"    it(\"has update hash function\", () => {\n      expect(env.nullDependency.updateHash).toBeTypeOf(\"function\");\n    });","file":"NullDependency.unittest.js","skipped":false,"dir":"test"},{"name":"does not update hash","suites":["NullDependency","when created"],"updatePoint":{"line":19,"column":28,"index":591},"line":19,"code":"    it(\"does not update hash\", () => {\n      const hash = {\n        update: jest.fn()\n      };\n      env.nullDependency.updateHash(hash);\n      expect(hash.update).not.toHaveBeenCalled();\n    });","file":"NullDependency.unittest.js","skipped":false,"dir":"test"},{"name":"is a function","suites":["NullDependency","Template"],"updatePoint":{"line":28,"column":21,"index":817},"line":28,"code":"    it(\"is a function\", () => {\n      expect(NullDependency.Template).toBeTypeOf(\"function\");\n    });","file":"NullDependency.unittest.js","skipped":false,"dir":"test"},{"name":"has apply function","suites":["NullDependency","Template","when created"],"updatePoint":{"line":35,"column":28,"index":1066},"line":35,"code":"      it(\"has apply function\", () => {\n        expect(env.nullDependencyTemplate.apply).toBeTypeOf(\"function\");\n      });","file":"NullDependency.unittest.js","skipped":false,"dir":"test"},{"name":"should eventually fill nearly the complete range up to n","suites":["numberHash"],"updatePoint":{"line":9,"column":64,"index":257},"line":9,"code":"    it(\"should eventually fill nearly the complete range up to n\", () => {\n      const set = new Set();\n\n      for (let i = 0; i < n * 200; i++) {\n        set.add(numberHash(numberToIdentifier(i), n));\n        if (set.size >= n - 1) break;\n      }\n\n      expect(set.size).toBeGreaterThanOrEqual(n - 1);\n    });","file":"numberHash.unittest.js","skipped":false,"dir":"test"},{"name":"should convert a plain object into a Map successfully","suites":["objectToMap"],"updatePoint":{"line":6,"column":59,"index":162},"line":6,"code":"  it(\"should convert a plain object into a Map successfully\", () => {\n    const map = objectToMap({\n      foo: \"bar\",\n      bar: \"baz\"\n    });\n    expect(map.get(\"foo\")).toBe(\"bar\");\n    expect(map.get(\"bar\")).toBe(\"baz\");\n  });","file":"objectToMap.unittest.js","skipped":false,"dir":"test"},{"name":"should compile fine (warmup)","suites":["Persistent Caching"],"updatePoint":{"line":103,"column":34,"index":2608},"line":103,"code":"  it(\"should compile fine (warmup)\", async () => {\n    const data = {\n      \"index.js\": `import file from \"./file.js\";\nexport default 40 + file;\n`,\n      \"file.js\": \"export default 2;\"\n    };\n    await updateSrc(data);\n    await compile();\n    expect(execute()).toBe(42);\n  }, 100000);","file":"PersistentCaching.test.js","skipped":false,"dir":"test"},{"name":"should merge multiple small files","suites":["Persistent Caching"],"updatePoint":{"line":114,"column":39,"index":2899},"line":114,"code":"  it(\"should merge multiple small files\", async () => {\n    const files = Array.from({\n      length: 30\n    }).map((_, i) => `file${i}.js`);\n    const data = {\n      \"index.js\": `\n\n${files.map((f, i) => `import f${i} from \"./${f}\";`).join(\"\\n\")}\n\nexport default ${files.map((_, i) => `f${i}`).join(\" + \")};\n`\n    };\n\n    for (const file of files) {\n      data[file] = `export default 1;`;\n    }\n\n    await updateSrc(data);\n    await compile({\n      cache: {\n        compression: false\n      }\n    });\n    expect(execute()).toBe(30);\n\n    for (let i = 0; i < 30; i++) {\n      updateSrc({\n        [files[i]]: `export default 2;`\n      });\n      await compile({\n        cache: {\n          compression: false\n        }\n      });\n      expect(execute()).toBe(31 + i);\n    }\n\n    const cacheFiles = await readdir(cachePath);\n    expect(cacheFiles.length).toBeLessThan(20);\n    expect(cacheFiles.length).toBeGreaterThan(10);\n  }, 120000);","file":"PersistentCaching.test.js","skipped":false,"dir":"test"},{"name":"should optimize unused content","suites":["Persistent Caching"],"updatePoint":{"line":155,"column":36,"index":3828},"line":155,"code":"  it(\"should optimize unused content\", async () => {\n    const data = {\n      \"a.js\": 'import \"react-dom\";',\n      \"b.js\": 'import \"acorn\";',\n      \"c.js\": 'import \"core-js\";',\n      \"d.js\": 'import \"date-fns\";',\n      \"e.js\": 'import \"lodash\";'\n    };\n    await updateSrc(data);\n\n    const c = items => {\n      const entry = {};\n\n      for (const item of items.split(\"\")) entry[item] = `./src/${item}.js`;\n\n      return compile({\n        entry,\n        cache: {\n          compression: false\n        }\n      });\n    };\n\n    await c(\"abcde\");\n    await c(\"abc\");\n    await c(\"cde\");\n    await c(\"acd\");\n    await c(\"bce\");\n    await c(\"abcde\");\n    const cacheFiles = await readdir(cachePath);\n    expect(cacheFiles.length).toBeGreaterThan(4);\n  }, 120000);","file":"PersistentCaching.test.js","skipped":false,"dir":"test"},{"name":"should allow persistent caching of container related objects","suites":["Persistent Caching"],"updatePoint":{"line":187,"column":66,"index":4615},"line":187,"code":"  it(\"should allow persistent caching of container related objects\", async () => {\n    const data = {\n      \"index.js\": \"export default import('container/src/exposed').then(m => m.default);\",\n      \"exposed.js\": \"import lib from 'lib'; export default 21 + lib;\",\n      \"lib.js\": \"export default 20\",\n      \"lib2.js\": \"export default 21\"\n    };\n    await updateSrc(data);\n\n    const webpack = require(\"../\");\n\n    const configAdditions = {\n      plugins: [new webpack.container.ModuleFederationPlugin({\n        name: \"container\",\n        library: {\n          type: \"commonjs-module\"\n        },\n        exposes: [\"./src/exposed\"],\n        remotes: {\n          container: [\"./no-container\", \"./container\"]\n        },\n        shared: {\n          lib: {\n            import: \"./src/lib\",\n            shareKey: \"lib\",\n            version: \"1.2.0\",\n            requiredVersion: \"^1.0.0\"\n          },\n          \"./src/lib2\": {\n            shareKey: \"lib\",\n            version: \"1.2.3\"\n          }\n        }\n      })]\n    };\n    await compile(configAdditions);\n    await expect(execute()).resolves.toBe(42);\n    await updateSrc({\n      \"exposed.js\": \"module.exports = { ok: true };\"\n    });\n    await compile(configAdditions);\n    await expect(execute()).resolves.toEqual({\n      ok: true\n    });\n  }, 120000);","file":"PersistentCaching.test.js","skipped":false,"dir":"test"},{"name":"should handle output path with folder creation","suites":["Profiling Plugin"],"updatePoint":{"line":13,"column":52,"index":278},"line":13,"code":"  it(\"should handle output path with folder creation\", done => {\n    const webpack = require(\"../\");\n\n    const outputPath = path.join(__dirname, \"js/profilingPath\");\n    const finalPath = path.join(outputPath, \"events.json\");\n    let counter = 0;\n    rimraf(outputPath, () => {\n      const startTime = process.hrtime();\n      const compiler = webpack({\n        context: __dirname,\n        entry: \"./fixtures/a.js\",\n        output: {\n          path: path.join(__dirname, \"js/profilingOut\")\n        },\n        plugins: [new webpack.debug.ProfilingPlugin({\n          outputPath: finalPath\n        }), {\n          apply(compiler) {\n            const hook = compiler.hooks.make;\n            [{\n              stage: 0,\n              order: 1\n            }, {\n              stage: 1,\n              order: 2\n            }, {\n              stage: -1,\n              order: 0\n            }].forEach(({\n              stage,\n              order\n            }) => {\n              hook.tap({\n                name: \"RespectStageCheckerPlugin\",\n                stage\n              }, () => {\n                expect(counter++).toBe(order);\n              });\n            });\n          }\n\n        }],\n        experiments: {\n          backCompat: false\n        }\n      });\n      compiler.run(err => {\n        if (err) return done(err);\n        const testDuration = process.hrtime(startTime);\n        if (!fs.existsSync(outputPath)) return done(new Error(\"Folder should be created.\"));\n\n        const data = require(finalPath);\n\n        const maxTs = data.reduce((max, entry) => Math.max(max, entry.ts), 0);\n        const minTs = data[0].ts;\n        const duration = maxTs - minTs;\n        expect(duration).toBeLessThan(testDuration[0] * 1000000 + testDuration[1] / 1000);\n        const cpuProfile = data.find(entry => entry.name === \"CpuProfile\");\n        expect(cpuProfile).toBeTypeOf(\"object\");\n        const profile = cpuProfile.args.data.cpuProfile;\n        expect(profile.startTime).toBeGreaterThanOrEqual(minTs);\n        expect(profile.endTime).toBeLessThanOrEqual(maxTs);\n        done();\n      });\n    });\n  });","file":"ProfilingPlugin.test.js","skipped":false,"dir":"test"},{"name":"should persist the passed output path","suites":["Profiling Plugin"],"updatePoint":{"line":8,"column":43,"index":193},"line":8,"code":"  it(\"should persist the passed output path\", () => {\n    const outputPath = path.join(__dirname, \"invest_in_doge_coin\");\n    const plugin = new ProfilingPlugin({\n      outputPath: outputPath\n    });\n    expect(plugin.outputPath).toBe(outputPath);\n  });","file":"ProfilingPlugin.unittest.js","skipped":false,"dir":"test"},{"name":"should handle no options","suites":["Profiling Plugin"],"updatePoint":{"line":15,"column":30,"index":434},"line":15,"code":"  it(\"should handle no options\", () => {\n    const plugin = new ProfilingPlugin();\n    expect(plugin.outputPath).toBe(\"events.json\");\n  });","file":"ProfilingPlugin.unittest.js","skipped":false,"dir":"test"},{"name":"should handle when unable to require the inspector","suites":["Profiling Plugin"],"updatePoint":{"line":19,"column":56,"index":600},"line":19,"code":"  it(\"should handle when unable to require the inspector\", () => {\n    const profiler = new ProfilingPlugin.Profiler();\n    return profiler.startProfiling();\n  });","file":"ProfilingPlugin.unittest.js","skipped":false,"dir":"test"},{"name":"should handle when unable to start a profiling session","suites":["Profiling Plugin"],"updatePoint":{"line":23,"column":60,"index":768},"line":23,"code":"  it(\"should handle when unable to start a profiling session\", () => {\n    const profiler = new ProfilingPlugin.Profiler({\n      Session() {\n        throw new Error(\"Sean Larkin was here.\");\n      }\n\n    });\n    return profiler.startProfiling();\n  });","file":"ProfilingPlugin.unittest.js","skipped":false,"dir":"test"},{"name":"handles sending a profiling message when no session","suites":["Profiling Plugin"],"updatePoint":{"line":32,"column":57,"index":1017},"line":32,"code":"  it(\"handles sending a profiling message when no session\", () => {\n    const profiler = new ProfilingPlugin.Profiler();\n    return profiler.sendCommand(\"randy\", \"is awesome\");\n  });","file":"ProfilingPlugin.unittest.js","skipped":false,"dir":"test"},{"name":"handles destroying when no session","suites":["Profiling Plugin"],"updatePoint":{"line":36,"column":40,"index":1183},"line":36,"code":"  it(\"handles destroying when no session\", () => {\n    const profiler = new ProfilingPlugin.Profiler();\n    return profiler.destroy();\n  });","file":"ProfilingPlugin.unittest.js","skipped":false,"dir":"test"},{"name":"should not contain NaN as a percentage when it is applied to Compiler","suites":["ProgressPlugin"],"updatePoint":{"line":94,"column":75,"index":2416},"line":94,"code":"  it(\"should not contain NaN as a percentage when it is applied to Compiler\", nanTest(createSimpleCompiler));","file":"ProgressPlugin.test.js","skipped":false,"dir":"test"},{"name":"should not contain NaN as a percentage when it is applied to MultiCompiler","suites":["ProgressPlugin"],"updatePoint":{"line":95,"column":80,"index":2531},"line":95,"code":"  it(\"should not contain NaN as a percentage when it is applied to MultiCompiler\", nanTest(createMultiCompiler));","file":"ProgressPlugin.test.js","skipped":false,"dir":"test"},{"name":"should not contain NaN as a percentage when it is applied to MultiCompiler (parallelism: 1)","suites":["ProgressPlugin"],"updatePoint":{"line":96,"column":97,"index":2662},"line":96,"code":"  it(\"should not contain NaN as a percentage when it is applied to MultiCompiler (parallelism: 1)\", nanTest(() => createMultiCompiler(undefined, {\n    parallelism: 1\n  })));","file":"ProgressPlugin.test.js","skipped":false,"dir":"test"},{"name":"should start print only on call run/watch","suites":["ProgressPlugin"],"updatePoint":{"line":99,"column":47,"index":2786},"line":99,"code":"  it(\"should start print only on call run/watch\", done => {\n    const compiler = createSimpleCompiler();\n    const logs = getLogs(stderr.toString());\n    expect(logs.join(\"\")).toHaveLength(0);\n    compiler.close(done);\n  });","file":"ProgressPlugin.test.js","skipped":false,"dir":"test"},{"name":"should print profile information","suites":["ProgressPlugin"],"updatePoint":{"line":105,"column":38,"index":3002},"line":105,"code":"  it(\"should print profile information\", () => {\n    const compiler = createSimpleCompiler({\n      profile: true\n    });\n    return RunCompilerAsync(compiler).then(() => {\n      const logs = getLogs(stderr.toString());\n      expect(logs).toContainEqual(expect.stringMatching(/\\[webpack\\.Progress\\] {2}| {2}| \\d+ ms module ids > DeterministicModuleIdsPlugin\\n$/));\n      expect(logs).toContainEqual(expect.stringMatching(/\\[webpack\\.Progress\\] {2}| \\d+ ms building > \\.\\.\\. entries \\.\\.\\. dependencies \\.\\.\\. modules\\n$/));\n      expect(logs).toContainEqual(expect.stringMatching(/\\[webpack\\.Progress\\] \\d+ ms building\\n$/));\n      expect(logs).toContainEqual(expect.stringMatching(/\\[webpack\\.Progress\\] {2}| \\d+ ms sealing > module ids\\n$/));\n      expect(logs).toContainEqual(expect.stringMatching(/\\[webpack\\.Progress\\] \\d+ ms sealing\\n$/));\n    });\n  });","file":"ProgressPlugin.test.js","skipped":false,"dir":"test"},{"name":"should have monotonic increasing progress","suites":["ProgressPlugin"],"updatePoint":{"line":142,"column":47,"index":4477},"line":142,"code":"  it(\"should have monotonic increasing progress\", monotonicTest(createSimpleCompiler));","file":"ProgressPlugin.test.js","skipped":false,"dir":"test"},{"name":"should have monotonic increasing progress (multi compiler)","suites":["ProgressPlugin"],"updatePoint":{"line":143,"column":64,"index":4582},"line":143,"code":"  it(\"should have monotonic increasing progress (multi compiler)\", monotonicTest(createMultiCompiler));","file":"ProgressPlugin.test.js","skipped":false,"dir":"test"},{"name":"should have monotonic increasing progress (multi compiler, parallelism)","suites":["ProgressPlugin"],"updatePoint":{"line":144,"column":77,"index":4699},"line":144,"code":"  it(\"should have monotonic increasing progress (multi compiler, parallelism)\", monotonicTest(o => createMultiCompiler(o, {\n    parallelism: 1\n  })));","file":"ProgressPlugin.test.js","skipped":false,"dir":"test"},{"name":"should not print lines longer than stderr.columns","suites":["ProgressPlugin"],"updatePoint":{"line":147,"column":55,"index":4828},"line":147,"code":"  it(\"should not print lines longer than stderr.columns\", () => {\n    const compiler = createSimpleCompiler();\n    process.stderr.columns = 36;\n    return RunCompilerAsync(compiler).then(() => {\n      const logs = getLogs(stderr.toString());\n      expect(logs.length).toBeGreaterThan(20);\n      logs.forEach(log => expect(log.length).toBeLessThanOrEqual(35)); // cspell:ignore mization nsPlugin\n\n      expect(logs).toContain(\"75% sealing ...mization ...nsPlugin\", \"trims each detail string equally\");\n      expect(logs).toContain(\"92% sealing asset processing\");\n      expect(logs).toContain(\"100%\");\n    });\n  });","file":"ProgressPlugin.test.js","skipped":false,"dir":"test"},{"name":"should handle when stderr.columns is undefined","suites":["ProgressPlugin"],"updatePoint":{"line":160,"column":52,"index":5440},"line":160,"code":"  it(\"should handle when stderr.columns is undefined\", () => {\n    const compiler = createSimpleCompiler();\n    process.stderr.columns = undefined;\n    return RunCompilerAsync(compiler).then(() => {\n      const logs = getLogs(stderr.toString());\n      expect(logs.length).toBeGreaterThan(20);\n      expect(_.maxBy(logs, \"length\").length).toBeGreaterThan(50);\n    });\n  });","file":"ProgressPlugin.test.js","skipped":false,"dir":"test"},{"name":"should contain the new compiler hooks","suites":["ProgressPlugin"],"updatePoint":{"line":169,"column":43,"index":5804},"line":169,"code":"  it(\"should contain the new compiler hooks\", () => {\n    const compiler = createSimpleCompiler();\n    process.stderr.columns = undefined;\n    return RunCompilerAsync(compiler).then(() => {\n      const logs = getLogs(stderr.toString());\n      expect(logs).toContain(\"4% setup normal module factory\");\n      expect(logs).toContain(\"5% setup context module factory\");\n    });\n  });","file":"ProgressPlugin.test.js","skipped":false,"dir":"test"},{"name":"should display all type of percentage when it is applied to SingleCompiler","suites":["ProgressPlugin"],"updatePoint":{"line":178,"column":80,"index":6221},"line":178,"code":"  it(\"should display all type of percentage when it is applied to SingleCompiler\", () => {\n    const compiler = createSimpleCompiler({\n      entries: true,\n      modules: true,\n      dependencies: true,\n      activeModules: true\n    });\n    return RunCompilerAsync(compiler).then(() => {\n      const logs = stderr.toString();\n      expect(logs).toEqual(expect.stringMatching(/\\d+\\/\\d+ entries/));\n      expect(logs).toEqual(expect.stringMatching(/\\d+\\/\\d+ dependencies/));\n      expect(logs).toEqual(expect.stringMatching(/\\d+\\/\\d+ modules/));\n      expect(logs).toEqual(expect.stringMatching(/\\d+ active/));\n    });\n  });","file":"ProgressPlugin.test.js","skipped":false,"dir":"test"},{"name":"should get the custom handler text from the log","suites":["ProgressPlugin"],"updatePoint":{"line":193,"column":53,"index":6817},"line":193,"code":"  it(\"should get the custom handler text from the log\", () => {\n    const compiler = createSimpleCompilerWithCustomHandler();\n    return RunCompilerAsync(compiler).then(() => {\n      const logs = stderr.toString();\n      expect(logs).toEqual(expect.stringMatching(/\\d+\\/\\d+ [custom test logger]/));\n      expect(logs).toEqual(expect.stringMatching(/\\d+ active/));\n      expect(logs).toEqual(expect.stringMatching(/\\d+\\/\\d+ modules/));\n    });\n  });","file":"ProgressPlugin.test.js","skipped":false,"dir":"test"},{"name":"returns value for identifierStr attribute","suites":["RawModule","identifier"],"updatePoint":{"line":15,"column":49,"index":498},"line":15,"code":"    it(\"returns value for identifierStr attribute\", () => {\n      expect(myRawModule.identifier()).toBe(\"identifierStr attribute\");\n    });","file":"RawModule.unittest.js","skipped":false,"dir":"test"},{"name":"returns value for sourceStr attribute\"s length property","suites":["RawModule","size"],"updatePoint":{"line":20,"column":63,"index":685},"line":20,"code":"    it('returns value for sourceStr attribute\"s length property', () => {\n      const sourceStrLength = myRawModule.sourceStr.length;\n      expect(myRawModule.size()).toBe(sourceStrLength);\n    });","file":"RawModule.unittest.js","skipped":false,"dir":"test"},{"name":"should create RequestShortener and shorten with ./ file in directory","suites":["RequestShortener"],"updatePoint":{"line":6,"column":74,"index":189},"line":6,"code":"  it(\"should create RequestShortener and shorten with ./ file in directory\", () => {\n    const shortener = new RequestShortener(\"/foo/bar\");\n    expect(shortener.shorten(\"/foo/bar/some.js\")).toEqual(\"./some.js\");\n  });","file":"RequestShortener.unittest.js","skipped":false,"dir":"test"},{"name":"should create RequestShortener and shorten with ../ file in parent directory","suites":["RequestShortener"],"updatePoint":{"line":10,"column":82,"index":416},"line":10,"code":"  it(\"should create RequestShortener and shorten with ../ file in parent directory\", () => {\n    const shortener = new RequestShortener(\"/foo/bar\");\n    expect(shortener.shorten(\"/foo/baz/some.js\")).toEqual(\"../baz/some.js\");\n  });","file":"RequestShortener.unittest.js","skipped":false,"dir":"test"},{"name":"should create RequestShortener and not shorten parent directory neighbor","suites":["RequestShortener"],"updatePoint":{"line":14,"column":78,"index":644},"line":14,"code":"  it(\"should create RequestShortener and not shorten parent directory neighbor\", () => {\n    const shortener = new RequestShortener(\"/foo/bar\");\n    expect(shortener.shorten(\"/foo_baz/bar/some.js\")).toEqual(\"../../foo_baz/bar/some.js\");\n  });","file":"RequestShortener.unittest.js","skipped":false,"dir":"test"},{"name":"no args","suites":["RuntimeTemplate.concatenation"],"updatePoint":{"line":8,"column":13,"index":201},"line":8,"code":"  it(\"no args\", () => {\n    const runtimeTemplate = new RuntimeTemplate(undefined, {\n      environment: {\n        templateLiteral: false\n      }\n    }, new RequestShortener(__dirname));\n    expect(runtimeTemplate.concatenation()).toBe('\"\"');\n  });","file":"RuntimeTemplate.unittest.js","skipped":false,"dir":"test"},{"name":"1 arg","suites":["RuntimeTemplate.concatenation"],"updatePoint":{"line":16,"column":11,"index":447},"line":16,"code":"  it(\"1 arg\", () => {\n    const runtimeTemplate = new RuntimeTemplate(undefined, {\n      environment: {\n        templateLiteral: false\n      }\n    }, new RequestShortener(__dirname));\n    expect(runtimeTemplate.concatenation({\n      expr: 1\n    })).toBe('\"\" + 1');\n    expect(runtimeTemplate.concatenation(\"str\")).toBe('\"str\"');\n  });","file":"RuntimeTemplate.unittest.js","skipped":false,"dir":"test"},{"name":"es5","suites":["RuntimeTemplate.concatenation"],"updatePoint":{"line":27,"column":9,"index":780},"line":27,"code":"  it(\"es5\", () => {\n    const runtimeTemplate = new RuntimeTemplate(undefined, {\n      environment: {\n        templateLiteral: false\n      }\n    }, new RequestShortener(__dirname));\n    expect(runtimeTemplate.concatenation({\n      expr: \"__webpack__.p\"\n    }, \"str/a\")).toBe('__webpack__.p + \"str/a\"');\n    expect(runtimeTemplate.concatenation({\n      expr: \"__webpack__.p\"\n    }, {\n      expr: \"str.a\"\n    }, \"str\")).toBe('\"\" + __webpack__.p + str.a + \"str\"');\n    expect(runtimeTemplate.concatenation(\"a\", \"b\", {\n      expr: 1\n    })).toBe('\"a\" + \"b\" + 1');\n    expect(runtimeTemplate.concatenation(\"a\", {\n      expr: 1\n    }, \"b\")).toBe('\"a\" + 1 + \"b\"');\n  });","file":"RuntimeTemplate.unittest.js","skipped":false,"dir":"test"},{"name":"should prefer shorten variant #1","suites":["RuntimeTemplate.concatenation","es6"],"updatePoint":{"line":54,"column":40,"index":1662},"line":54,"code":"    it(\"should prefer shorten variant #1\", () => {\n      expect(runtimeTemplate.concatenation({\n        expr: 1\n      }, \"a\", {\n        expr: 2\n      })).toBe('1 + \"a\" + 2');\n    });","file":"RuntimeTemplate.unittest.js","skipped":false,"dir":"test"},{"name":"should prefer shorten variant #2","suites":["RuntimeTemplate.concatenation","es6"],"updatePoint":{"line":61,"column":40,"index":1845},"line":61,"code":"    it(\"should prefer shorten variant #2\", () => {\n      expect(runtimeTemplate.concatenation({\n        expr: 1\n      }, \"a\", {\n        expr: 2\n      }, \"b\")).toBe('1 + \"a\" + 2 + \"b\"');\n    });","file":"RuntimeTemplate.unittest.js","skipped":false,"dir":"test"},{"name":"should prefer shorten variant #3","suites":["RuntimeTemplate.concatenation","es6"],"updatePoint":{"line":68,"column":40,"index":2039},"line":68,"code":"    it(\"should prefer shorten variant #3\", () => {\n      /* eslint-disable no-template-curly-in-string */\n      expect(runtimeTemplate.concatenation(\"a\", {\n        expr: 1\n      }, \"b\")).toBe(\"`a${1}b`\");\n      /* eslint-enable */\n    });","file":"RuntimeTemplate.unittest.js","skipped":false,"dir":"test"},{"name":"should parseVersion correctly ()","suites":["SemVer"],"updatePoint":{"line":26,"column":47,"index":825},"line":26,"code":"    it(`should parseVersion correctly (${name})`, () => {\n      expect(fn(\"1\")).toEqual([1]);\n      expect(fn(\"1.2.3\")).toEqual([1, 2, 3]);\n      expect(fn(\"1.2.3.4.999\")).toEqual([1, 2, 3, 4, 999]); // eslint-disable-next-line no-sparse-arrays\n\n      expect(fn(\"1.2.3-beta\")).toEqual([1, 2, 3,, \"beta\"]); // eslint-disable-next-line no-sparse-arrays\n\n      expect(fn(\"1.2.3-beta.1.2\")).toEqual([1, 2, 3,, \"beta\", 1, 2]); // eslint-disable-next-line no-sparse-arrays\n\n      expect(fn(\"1.2.3-alpha.beta-42\")).toEqual([1, 2, 3,, \"alpha\", \"beta-42\"]); // eslint-disable-next-line no-sparse-arrays\n\n      expect(fn(\"1.2.3-beta.1.alpha.0+5343\")).toEqual([1, 2, 3,, \"beta\", 1, \"alpha\", 0, [], 5343]);\n      expect(fn(\"1.2.3+5343.beta+1\")).toEqual([1, 2, 3, [], 5343, \"beta+1\"]);\n      expect(fn(\"1.2.3+5343.beta+1\")).toEqual([1, 2, 3, [], 5343, \"beta+1\"]);\n    });","file":"SemVer.unittest.js","skipped":false,"dir":"test"},{"name":" ()","suites":["SemVer","versionLt"],"updatePoint":{"line":52,"column":26,"index":2897},"line":52,"code":"        it(`${c} (${name})`, () => {\n          expect(fn(a, a)).toBe(false);\n          expect(fn(b, b)).toBe(false);\n          expect(fn(a, b)).toBe(true);\n          expect(fn(b, a)).toBe(false);\n        });","file":"SemVer.unittest.js","skipped":false,"dir":"test"},{"name":"should be equal ","suites":["SemVer","parseRange"],"updatePoint":{"line":77,"column":60,"index":3799},"line":77,"code":"        for (const c of cases[key]) it(`should be equal ${c}`, () => {\n          expect(parseRange(c)).toEqual(parseRange(key));\n        });","file":"SemVer.unittest.js","skipped":false,"dir":"test"},{"name":"should  stringify to  ()","suites":["SemVer","rangeToString"],"updatePoint":{"line":116,"column":60,"index":5107},"line":116,"code":"        it(`should ${key} stringify to ${expected} (${name})`, () => {\n          expect(fn(parseRange(key))).toEqual(expected);\n        });","file":"SemVer.unittest.js","skipped":false,"dir":"test"},{"name":"should be able to parse ","suites":["SemVer","satisfies"],"updatePoint":{"line":155,"column":44,"index":9116},"line":155,"code":"        it(`should be able to parse ${range}`, () => {\n          parseRange(range);\n        });","file":"SemVer.unittest.js","skipped":false,"dir":"test"},{"name":"should not be satisfied by  ()","suites":["SemVer","satisfies"],"updatePoint":{"line":162,"column":71,"index":9439},"line":162,"code":"              it(`should not be satisfied by ${item.slice(1)} (${name})`, () => {\n                expect(fn(parseRange(range), item.slice(1))).toBe(false);\n              });","file":"SemVer.unittest.js","skipped":false,"dir":"test"},{"name":"should be satisfied by  ()","suites":["SemVer","satisfies"],"updatePoint":{"line":166,"column":58,"index":9621},"line":166,"code":"              it(`should be satisfied by ${item} (${name})`, () => {\n                expect(fn(parseRange(range), item)).toBe(true);\n              });","file":"SemVer.unittest.js","skipped":false,"dir":"test"},{"name":"should assume true","suites":["SideEffectsFlagPlugin"],"updatePoint":{"line":6,"column":24,"index":163},"line":6,"code":"  it(\"should assume true\", () => {\n    expect(SideEffectsFlagPlugin.moduleHasSideEffects(\"./foo/bar.js\", undefined, new Map())).toBe(true);\n  });","file":"SideEffectsFlagPlugin.unittest.js","skipped":false,"dir":"test"},{"name":"should understand boolean values","suites":["SideEffectsFlagPlugin"],"updatePoint":{"line":9,"column":38,"index":323},"line":9,"code":"  it(\"should understand boolean values\", () => {\n    expect(SideEffectsFlagPlugin.moduleHasSideEffects(\"./foo/bar.js\", true, new Map())).toBe(true);\n    expect(SideEffectsFlagPlugin.moduleHasSideEffects(\"./foo/bar.js\", false, new Map())).toBe(false);\n  });","file":"SideEffectsFlagPlugin.unittest.js","skipped":false,"dir":"test"},{"name":"should understand a glob","suites":["SideEffectsFlagPlugin"],"updatePoint":{"line":13,"column":30,"index":572},"line":13,"code":"  it(\"should understand a glob\", () => {\n    expect(SideEffectsFlagPlugin.moduleHasSideEffects(\"./src/x/y/z.js\", \"./src/**/*.js\", new Map())).toBe(true);\n    expect(SideEffectsFlagPlugin.moduleHasSideEffects(\"./x.js\", \"./src/**/*.js\", new Map())).toBe(false);\n    expect(SideEffectsFlagPlugin.moduleHasSideEffects(\"./src/x/y/z.js\", \"./**/src/x/y/z.js\", new Map())).toBe(true);\n    expect(SideEffectsFlagPlugin.moduleHasSideEffects(\"./src/x/y/z.js\", \"**.js\", new Map())).toBe(true);\n    expect(SideEffectsFlagPlugin.moduleHasSideEffects(\"./src/x/y/z.js\", \"./src/**/z.js\", new Map())).toBe(true);\n    expect(SideEffectsFlagPlugin.moduleHasSideEffects(\"./src/x/y/z.js\", \"./**/x/**/z.js\", new Map())).toBe(true);\n    expect(SideEffectsFlagPlugin.moduleHasSideEffects(\"./src/x/y/z.js\", \"./**/src/**\", new Map())).toBe(true);\n    expect(SideEffectsFlagPlugin.moduleHasSideEffects(\"./src/x/y/z.js\", \"./**/src/*\", new Map())).toBe(false);\n    expect(SideEffectsFlagPlugin.moduleHasSideEffects(\"./src/x/y/z.js\", \"*.js\", new Map())).toBe(true);\n    expect(SideEffectsFlagPlugin.moduleHasSideEffects(\"./src/x/y/z.js\", \"x/**/z.js\", new Map())).toBe(false);\n    expect(SideEffectsFlagPlugin.moduleHasSideEffects(\"./src/x/y/z.js\", \"src/**/z.js\", new Map())).toBe(true);\n    expect(SideEffectsFlagPlugin.moduleHasSideEffects(\"./src/x/y/z.js\", \"src/**/{x,y,z}.js\", new Map())).toBe(true);\n    expect(SideEffectsFlagPlugin.moduleHasSideEffects(\"./src/x/y/z.js\", \"src/**/[x-z].js\", new Map())).toBe(true);\n  });","file":"SideEffectsFlagPlugin.unittest.js","skipped":false,"dir":"test"},{"name":"should understand arrays","suites":["SideEffectsFlagPlugin"],"updatePoint":{"line":28,"column":30,"index":2066},"line":28,"code":"  it(\"should understand arrays\", () => {\n    const array = [\"./src/**/*.js\", \"./dirty.js\"];\n    expect(SideEffectsFlagPlugin.moduleHasSideEffects(\"./src/x/y/z.js\", array, new Map())).toBe(true);\n    expect(SideEffectsFlagPlugin.moduleHasSideEffects(\"./dirty.js\", array, new Map())).toBe(true);\n    expect(SideEffectsFlagPlugin.moduleHasSideEffects(\"./clean.js\", array, new Map())).toBe(false);\n  });","file":"SideEffectsFlagPlugin.unittest.js","skipped":false,"dir":"test"},{"name":"should handle zero size","suites":["SizeFormatHelpers","formatSize"],"updatePoint":{"line":9,"column":31,"index":181},"line":9,"code":"    it(\"should handle zero size\", () => {\n      expect(formatSize(0)).toBe(\"0 bytes\");\n    });","file":"SizeFormatHelpers.unittest.js","skipped":false,"dir":"test"},{"name":"should handle bytes","suites":["SizeFormatHelpers","formatSize"],"updatePoint":{"line":12,"column":27,"index":272},"line":12,"code":"    it(\"should handle bytes\", () => {\n      expect(formatSize(1000)).toBe(\"1000 bytes\");\n    });","file":"SizeFormatHelpers.unittest.js","skipped":false,"dir":"test"},{"name":"should handle integer kibibytes","suites":["SizeFormatHelpers","formatSize"],"updatePoint":{"line":15,"column":39,"index":381},"line":15,"code":"    it(\"should handle integer kibibytes\", () => {\n      expect(formatSize(2048)).toBe(\"2 KiB\");\n    });","file":"SizeFormatHelpers.unittest.js","skipped":false,"dir":"test"},{"name":"should handle float kibibytes","suites":["SizeFormatHelpers","formatSize"],"updatePoint":{"line":18,"column":37,"index":483},"line":18,"code":"    it(\"should handle float kibibytes\", () => {\n      expect(formatSize(2560)).toBe(\"2.5 KiB\");\n    });","file":"SizeFormatHelpers.unittest.js","skipped":false,"dir":"test"},{"name":"should handle integer mebibytes","suites":["SizeFormatHelpers","formatSize"],"updatePoint":{"line":21,"column":39,"index":589},"line":21,"code":"    it(\"should handle integer mebibytes\", () => {\n      expect(formatSize(10 * 1024 * 1024)).toBe(\"10 MiB\");\n    });","file":"SizeFormatHelpers.unittest.js","skipped":false,"dir":"test"},{"name":"should handle float mebibytes","suites":["SizeFormatHelpers","formatSize"],"updatePoint":{"line":24,"column":37,"index":704},"line":24,"code":"    it(\"should handle float mebibytes\", () => {\n      expect(formatSize(12.5 * 1024 * 1024)).toBe(\"12.5 MiB\");\n    });","file":"SizeFormatHelpers.unittest.js","skipped":false,"dir":"test"},{"name":"should handle integer gibibytes","suites":["SizeFormatHelpers","formatSize"],"updatePoint":{"line":27,"column":39,"index":825},"line":27,"code":"    it(\"should handle integer gibibytes\", () => {\n      expect(formatSize(3 * 1024 * 1024 * 1024)).toBe(\"3 GiB\");\n    });","file":"SizeFormatHelpers.unittest.js","skipped":false,"dir":"test"},{"name":"should handle float gibibytes","suites":["SizeFormatHelpers","formatSize"],"updatePoint":{"line":30,"column":37,"index":945},"line":30,"code":"    it(\"should handle float gibibytes\", () => {\n      expect(formatSize(1.2 * 1024 * 1024 * 1024)).toBe(\"1.2 GiB\");\n    });","file":"SizeFormatHelpers.unittest.js","skipped":false,"dir":"test"},{"name":"should handle undefined/NaN","suites":["SizeFormatHelpers","formatSize"],"updatePoint":{"line":33,"column":35,"index":1067},"line":33,"code":"    it(\"should handle undefined/NaN\", () => {\n      expect(formatSize(undefined)).toBe(\"unknown size\");\n      expect(formatSize(NaN)).toBe(\"unknown size\");\n    });","file":"SizeFormatHelpers.unittest.js","skipped":false,"dir":"test"},{"name":"should group correctly","suites":["util/smartGrouping"],"updatePoint":{"line":6,"column":28,"index":144},"line":6,"code":"  it(\"should group correctly\", () => {\n    const groupConfigs = [{\n      getKeys(item) {\n        return item.match(/\\d+/g);\n      },\n\n      createGroup(key, items) {\n        return {\n          name: `has number ${key}`,\n          items\n        };\n      }\n\n    }, {\n      getKeys(item) {\n        return item.match(/\\w+/g);\n      },\n\n      createGroup(key, items) {\n        return {\n          name: `has word ${key}`,\n          items\n        };\n      }\n\n    }];\n    expect(smartGrouping([\"hello world a\", \"hello world b 2\", \"hello world c\", \"hello world d\", \"hello test\", \"hello more test\", \"more test\", \"more tests\", \"1 2 3\", \"2 3 4\", \"3 4 5\"], groupConfigs)).toMatchInlineSnapshot(`\n\t\tArray [\n\t\t  Object {\n\t\t    \"items\": Array [\n\t\t      Object {\n\t\t        \"items\": Array [\n\t\t          \"hello world a\",\n\t\t          \"hello world b 2\",\n\t\t          \"hello world c\",\n\t\t          \"hello world d\",\n\t\t        ],\n\t\t        \"name\": \"has word world\",\n\t\t      },\n\t\t      Object {\n\t\t        \"items\": Array [\n\t\t          \"hello test\",\n\t\t          \"hello more test\",\n\t\t        ],\n\t\t        \"name\": \"has word test\",\n\t\t      },\n\t\t    ],\n\t\t    \"name\": \"has word hello\",\n\t\t  },\n\t\t  Object {\n\t\t    \"items\": Array [\n\t\t      \"1 2 3\",\n\t\t      \"2 3 4\",\n\t\t      \"3 4 5\",\n\t\t    ],\n\t\t    \"name\": \"has number 3\",\n\t\t  },\n\t\t  \"more test\",\n\t\t  \"more tests\",\n\t\t]\n\t`);\n  });","file":"smartGrouping.unittest.js","skipped":false,"dir":"test"},{"name":"Can be constructed like a normal Set","suites":["util/SortableSet"],"updatePoint":{"line":6,"column":42,"index":152},"line":6,"code":"  it(\"Can be constructed like a normal Set\", () => {\n    const sortableSet = new SortableSet([1, 1, 1, 1, 1, 4, 5, 2], () => {});\n    expect(Array.from(sortableSet)).toEqual([1, 4, 5, 2]);\n  });","file":"SortableSet.unittest.js","skipped":false,"dir":"test"},{"name":"Can sort its content","suites":["util/SortableSet"],"updatePoint":{"line":10,"column":26,"index":331},"line":10,"code":"  it(\"Can sort its content\", () => {\n    const sortableSet = new SortableSet([1, 1, 1, 6, 6, 1, 1, 4, 5, 2, 3, 8, 5, 7, 9, 0, 3, 1], (a, b) => a - b);\n    sortableSet.sort();\n    expect(Array.from(sortableSet)).toEqual([0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  });","file":"SortableSet.unittest.js","skipped":false,"dir":"test"},{"name":"Can sort by a specified function","suites":["util/SortableSet"],"updatePoint":{"line":15,"column":38,"index":601},"line":15,"code":"  it(\"Can sort by a specified function\", () => {\n    const sortableSet = new SortableSet([1, 1, 1, 6, 6, 1, 1, 4, 5, 2, 3, 8, 5, 7, 9, 0, 3, 1], (a, b) => a - b);\n    sortableSet.sortWith((a, b) => b - a);\n    expect(Array.from(sortableSet)).toEqual([9, 8, 7, 6, 5, 4, 3, 2, 1, 0]);\n  });","file":"SortableSet.unittest.js","skipped":false,"dir":"test"},{"name":"should print env string in stats","suites":["Stats"],"updatePoint":{"line":27,"column":38,"index":532},"line":27,"code":"  it(\"should print env string in stats\", async () => {\n    const stats = await compile({\n      context: __dirname,\n      entry: \"./fixtures/a\"\n    });\n    expect(stats.toString({\n      all: false,\n      env: true,\n      _env: \"production\"\n    })).toBe('Environment (--env): \"production\"');\n    expect(stats.toString({\n      all: false,\n      env: true,\n      _env: {\n        prod: [\"foo\", \"bar\"],\n        baz: true\n      }\n    })).toBe(\"Environment (--env): {\\n\" + '  \"prod\": [\\n' + '    \"foo\",\\n' + '    \"bar\"\\n' + \"  ],\\n\" + '  \"baz\": true\\n' + \"}\");\n  });","file":"Stats.test.js","skipped":false,"dir":"test"},{"name":"should omit all properties with all false","suites":["Stats"],"updatePoint":{"line":46,"column":47,"index":1100},"line":46,"code":"  it(\"should omit all properties with all false\", async () => {\n    const stats = await compile({\n      context: __dirname,\n      entry: \"./fixtures/a\"\n    });\n    expect(stats.toJson({\n      all: false\n    })).toEqual({});\n  });","file":"Stats.test.js","skipped":false,"dir":"test"},{"name":"should be empty when there is no additional chunks","suites":["Stats","chunkGroups"],"updatePoint":{"line":56,"column":58,"index":1375},"line":56,"code":"    it(\"should be empty when there is no additional chunks\", async () => {\n      const stats = await compile({\n        context: __dirname,\n        entry: {\n          entryA: \"./fixtures/a\",\n          entryB: \"./fixtures/b\"\n        }\n      });\n      expect(stats.toJson({\n        all: false,\n        errorsCount: true,\n        chunkGroups: true\n      })).toMatchInlineSnapshot(`\n\t\t\tObject {\n\t\t\t  \"errorsCount\": 0,\n\t\t\t  \"namedChunkGroups\": Object {\n\t\t\t    \"entryA\": Object {\n\t\t\t      \"assets\": Array [\n\t\t\t        Object {\n\t\t\t          \"name\": \"entryA.js\",\n\t\t\t          \"size\": 196,\n\t\t\t        },\n\t\t\t      ],\n\t\t\t      \"assetsSize\": 196,\n\t\t\t      \"auxiliaryAssets\": undefined,\n\t\t\t      \"auxiliaryAssetsSize\": 0,\n\t\t\t      \"childAssets\": undefined,\n\t\t\t      \"children\": undefined,\n\t\t\t      \"chunks\": undefined,\n\t\t\t      \"filteredAssets\": 0,\n\t\t\t      \"filteredAuxiliaryAssets\": 0,\n\t\t\t      \"name\": \"entryA\",\n\t\t\t    },\n\t\t\t    \"entryB\": Object {\n\t\t\t      \"assets\": Array [\n\t\t\t        Object {\n\t\t\t          \"name\": \"entryB.js\",\n\t\t\t          \"size\": 196,\n\t\t\t        },\n\t\t\t      ],\n\t\t\t      \"assetsSize\": 196,\n\t\t\t      \"auxiliaryAssets\": undefined,\n\t\t\t      \"auxiliaryAssetsSize\": 0,\n\t\t\t      \"childAssets\": undefined,\n\t\t\t      \"children\": undefined,\n\t\t\t      \"chunks\": undefined,\n\t\t\t      \"filteredAssets\": 0,\n\t\t\t      \"filteredAuxiliaryAssets\": 0,\n\t\t\t      \"name\": \"entryB\",\n\t\t\t    },\n\t\t\t  },\n\t\t\t}\n\t\t`);\n    });","file":"Stats.test.js","skipped":false,"dir":"test"},{"name":"should contain additional chunks","suites":["Stats","chunkGroups"],"updatePoint":{"line":110,"column":40,"index":2759},"line":110,"code":"    it(\"should contain additional chunks\", async () => {\n      const stats = await compile({\n        context: __dirname,\n        entry: {\n          entryA: \"./fixtures/a\",\n          entryB: \"./fixtures/chunk-b\"\n        }\n      });\n      expect(stats.toJson({\n        all: false,\n        errorsCount: true,\n        chunkGroups: true\n      })).toMatchInlineSnapshot(`\n\t\t\tObject {\n\t\t\t  \"errorsCount\": 0,\n\t\t\t  \"namedChunkGroups\": Object {\n\t\t\t    \"chunkB\": Object {\n\t\t\t      \"assets\": Array [\n\t\t\t        Object {\n\t\t\t          \"name\": \"chunkB.js\",\n\t\t\t          \"size\": 107,\n\t\t\t        },\n\t\t\t      ],\n\t\t\t      \"assetsSize\": 107,\n\t\t\t      \"auxiliaryAssets\": undefined,\n\t\t\t      \"auxiliaryAssetsSize\": 0,\n\t\t\t      \"childAssets\": undefined,\n\t\t\t      \"children\": undefined,\n\t\t\t      \"chunks\": undefined,\n\t\t\t      \"filteredAssets\": 0,\n\t\t\t      \"filteredAuxiliaryAssets\": 0,\n\t\t\t      \"name\": \"chunkB\",\n\t\t\t    },\n\t\t\t    \"entryA\": Object {\n\t\t\t      \"assets\": Array [\n\t\t\t        Object {\n\t\t\t          \"name\": \"entryA.js\",\n\t\t\t          \"size\": 196,\n\t\t\t        },\n\t\t\t      ],\n\t\t\t      \"assetsSize\": 196,\n\t\t\t      \"auxiliaryAssets\": undefined,\n\t\t\t      \"auxiliaryAssetsSize\": 0,\n\t\t\t      \"childAssets\": undefined,\n\t\t\t      \"children\": undefined,\n\t\t\t      \"chunks\": undefined,\n\t\t\t      \"filteredAssets\": 0,\n\t\t\t      \"filteredAuxiliaryAssets\": 0,\n\t\t\t      \"name\": \"entryA\",\n\t\t\t    },\n\t\t\t    \"entryB\": Object {\n\t\t\t      \"assets\": Array [\n\t\t\t        Object {\n\t\t\t          \"name\": \"entryB.js\",\n\t\t\t          \"size\": 2961,\n\t\t\t        },\n\t\t\t      ],\n\t\t\t      \"assetsSize\": 2961,\n\t\t\t      \"auxiliaryAssets\": undefined,\n\t\t\t      \"auxiliaryAssetsSize\": 0,\n\t\t\t      \"childAssets\": undefined,\n\t\t\t      \"children\": undefined,\n\t\t\t      \"chunks\": undefined,\n\t\t\t      \"filteredAssets\": 0,\n\t\t\t      \"filteredAuxiliaryAssets\": 0,\n\t\t\t      \"name\": \"entryB\",\n\t\t\t    },\n\t\t\t  },\n\t\t\t}\n\t\t`);\n    });","file":"Stats.test.js","skipped":false,"dir":"test"},{"name":"should contain assets","suites":["Stats","chunkGroups"],"updatePoint":{"line":181,"column":29,"index":4604},"line":181,"code":"    it(\"should contain assets\", async () => {\n      const stats = await compile({\n        context: __dirname,\n        entry: {\n          entryA: \"./fixtures/a\",\n          entryB: \"./fixtures/chunk-b\"\n        }\n      });\n      expect(stats.toJson({\n        all: false,\n        errorsCount: true,\n        assets: true\n      })).toMatchInlineSnapshot(`\n\t\t\tObject {\n\t\t\t  \"assets\": Array [\n\t\t\t    Object {\n\t\t\t      \"auxiliaryChunkIdHints\": Array [],\n\t\t\t      \"auxiliaryChunkNames\": Array [],\n\t\t\t      \"cached\": false,\n\t\t\t      \"chunkIdHints\": Array [],\n\t\t\t      \"chunkNames\": Array [\n\t\t\t        \"entryB\",\n\t\t\t      ],\n\t\t\t      \"comparedForEmit\": false,\n\t\t\t      \"emitted\": true,\n\t\t\t      \"filteredRelated\": undefined,\n\t\t\t      \"info\": Object {\n\t\t\t        \"javascriptModule\": false,\n\t\t\t        \"minimized\": true,\n\t\t\t        \"size\": 2961,\n\t\t\t      },\n\t\t\t      \"name\": \"entryB.js\",\n\t\t\t      \"size\": 2961,\n\t\t\t      \"type\": \"asset\",\n\t\t\t    },\n\t\t\t    Object {\n\t\t\t      \"auxiliaryChunkIdHints\": Array [],\n\t\t\t      \"auxiliaryChunkNames\": Array [],\n\t\t\t      \"cached\": false,\n\t\t\t      \"chunkIdHints\": Array [],\n\t\t\t      \"chunkNames\": Array [\n\t\t\t        \"entryA\",\n\t\t\t      ],\n\t\t\t      \"comparedForEmit\": false,\n\t\t\t      \"emitted\": true,\n\t\t\t      \"filteredRelated\": undefined,\n\t\t\t      \"info\": Object {\n\t\t\t        \"javascriptModule\": false,\n\t\t\t        \"minimized\": true,\n\t\t\t        \"size\": 196,\n\t\t\t      },\n\t\t\t      \"name\": \"entryA.js\",\n\t\t\t      \"size\": 196,\n\t\t\t      \"type\": \"asset\",\n\t\t\t    },\n\t\t\t    Object {\n\t\t\t      \"auxiliaryChunkIdHints\": Array [],\n\t\t\t      \"auxiliaryChunkNames\": Array [],\n\t\t\t      \"cached\": false,\n\t\t\t      \"chunkIdHints\": Array [],\n\t\t\t      \"chunkNames\": Array [\n\t\t\t        \"chunkB\",\n\t\t\t      ],\n\t\t\t      \"comparedForEmit\": false,\n\t\t\t      \"emitted\": true,\n\t\t\t      \"filteredRelated\": undefined,\n\t\t\t      \"info\": Object {\n\t\t\t        \"javascriptModule\": false,\n\t\t\t        \"minimized\": true,\n\t\t\t        \"size\": 107,\n\t\t\t      },\n\t\t\t      \"name\": \"chunkB.js\",\n\t\t\t      \"size\": 107,\n\t\t\t      \"type\": \"asset\",\n\t\t\t    },\n\t\t\t  ],\n\t\t\t  \"assetsByChunkName\": Object {\n\t\t\t    \"chunkB\": Array [\n\t\t\t      \"chunkB.js\",\n\t\t\t    ],\n\t\t\t    \"entryA\": Array [\n\t\t\t      \"entryA.js\",\n\t\t\t    ],\n\t\t\t    \"entryB\": Array [\n\t\t\t      \"entryB.js\",\n\t\t\t    ],\n\t\t\t  },\n\t\t\t  \"errorsCount\": 0,\n\t\t\t  \"filteredAssets\": undefined,\n\t\t\t}\n\t\t`);\n    });","file":"Stats.test.js","skipped":false,"dir":"test"},{"name":"","suites":["browserslist target"],"updatePoint":{"line":28,"column":31,"index":1194},"line":28,"code":"    it(`${JSON.stringify(test)}`, () => {\n      expect(resolve(test)).toMatchSnapshot();\n    });","file":"target-browserslist.unittest.js","skipped":false,"dir":"test"},{"name":"should generate valid identifiers","suites":["Template"],"updatePoint":{"line":6,"column":39,"index":130},"line":6,"code":"  it(\"should generate valid identifiers\", () => {\n    expect(Template.toIdentifier(\"0abc-def9\")).toBe(\"_0abc_def9\");\n  });","file":"Template.unittest.js","skipped":false,"dir":"test"},{"name":"should generate valid number identifiers","suites":["Template"],"updatePoint":{"line":9,"column":46,"index":260},"line":9,"code":"  it(\"should generate valid number identifiers\", () => {\n    const items = [];\n    let item;\n\n    for (let i = 0; i < 80; i += 1) {\n      item = Template.numberToIdentifier(i);\n      expect(item).not.toBe(\"\");\n      expect(items).not.toContain(item);\n      items.push(item);\n    }\n  }); // cspell:ignore sdfas sadfome","file":"Template.unittest.js","skipped":false,"dir":"test"},{"name":"should generate sanitized path identifiers","suites":["Template"],"updatePoint":{"line":21,"column":48,"index":581},"line":21,"code":"  it(\"should generate sanitized path identifiers\", () => {\n    expect(Template.toPath(\"path/to-sdfas/sadfome$$.js\")).toBe(\"path-to-sdfas-sadfome$$-js\");\n  });","file":"Template.unittest.js","skipped":false,"dir":"test"},{"name":"should handle ","suites":["getScheme"],"updatePoint":{"line":61,"column":34,"index":1226},"line":61,"code":"    it(`should handle ${specifier}`, () => {\n      expect(getScheme(specifier)).toBe(expected);\n    });","file":"URLAbsoluteSpecifier.unittest.js","skipped":false,"dir":"test"},{"name":"should handle ","suites":["getProtocol"],"updatePoint":{"line":71,"column":34,"index":1434},"line":71,"code":"    it(`should handle ${specifier}`, () => {\n      expect(getProtocol(specifier)).toBe(expected ? expected + \":\" : undefined);\n    });","file":"URLAbsoluteSpecifier.unittest.js","skipped":false,"dir":"test"},{"name":"should ","suites":["walkCssTokens"],"updatePoint":{"line":5,"column":22,"index":157},"line":5,"code":"    it(`should ${name}`, () => {\n      const results = [];\n      walkCssTokens(content, {\n        isSelector: () => true,\n        url: (input, s, e, cs, ce) => {\n          results.push([\"url\", input.slice(s, e), input.slice(cs, ce)]);\n          return e;\n        },\n        leftCurlyBracket: (input, s, e) => {\n          results.push([\"leftCurlyBracket\", input.slice(s, e)]);\n          return e;\n        },\n        rightCurlyBracket: (input, s, e) => {\n          results.push([\"rightCurlyBracket\", input.slice(s, e)]);\n          return e;\n        },\n        leftParenthesis: (input, s, e) => {\n          results.push([\"leftParenthesis\", input.slice(s, e)]);\n          return e;\n        },\n        rightParenthesis: (input, s, e) => {\n          results.push([\"rightParenthesis\", input.slice(s, e)]);\n          return e;\n        },\n        semicolon: (input, s, e) => {\n          results.push([\"semicolon\", input.slice(s, e)]);\n          return e;\n        },\n        comma: (input, s, e) => {\n          results.push([\"comma\", input.slice(s, e)]);\n          return e;\n        },\n        pseudoClass: (input, s, e) => {\n          results.push([\"pseudoClass\", input.slice(s, e)]);\n          return e;\n        },\n        pseudoFunction: (input, s, e) => {\n          results.push([\"pseudoFunction\", input.slice(s, e)]);\n          return e;\n        },\n        atKeyword: (input, s, e) => {\n          results.push([\"atKeyword\", input.slice(s, e)]);\n          return e;\n        },\n        class: (input, s, e) => {\n          results.push([\"class\", input.slice(s, e)]);\n          return e;\n        },\n        identifier: (input, s, e) => {\n          results.push([\"identifier\", input.slice(s, e)]);\n          return e;\n        },\n        id: (input, s, e) => {\n          results.push([\"id\", input.slice(s, e)]);\n          return e;\n        }\n      });\n      fn(expect(results));\n    });","file":"walkCssTokens.unittest.js","skipped":false,"dir":"test"},{"name":"parse urls","suites":["walkCssTokens"],"updatePoint":{"line":66,"column":18,"index":2035},"line":66,"code":"  test(\"parse urls\", `body {\n\tbackground: url(\n\t\thttps://example\\\\2f4a8f.com\\\n/image.png\n\t)\n}\n--element\\\\ name.class\\\\ name#_id {\n\tbackground: url(  \"https://example.com/some url \\\\\"with\\\\\" 'spaces'.png\"   )  url('https://example.com/\\\\'\"quotes\"\\\\'.png');\n}`, e => e.toMatchInlineSnapshot(`\n\t\t\tArray [\n\t\t\t  Array [\n\t\t\t    \"identifier\",\n\t\t\t    \"body\",\n\t\t\t  ],\n\t\t\t  Array [\n\t\t\t    \"leftCurlyBracket\",\n\t\t\t    \"{\",\n\t\t\t  ],\n\t\t\t  Array [\n\t\t\t    \"identifier\",\n\t\t\t    \"background\",\n\t\t\t  ],\n\t\t\t  Array [\n\t\t\t    \"url\",\n\t\t\t    \"url(\n\t\t\t\t\thttps://example\\\\\\\\2f4a8f.com/image.png\n\t\t\t\t)\",\n\t\t\t    \"https://example\\\\\\\\2f4a8f.com/image.png\",\n\t\t\t  ],\n\t\t\t  Array [\n\t\t\t    \"rightCurlyBracket\",\n\t\t\t    \"}\",\n\t\t\t  ],\n\t\t\t  Array [\n\t\t\t    \"identifier\",\n\t\t\t    \"--element\\\\\\\\ name\",\n\t\t\t  ],\n\t\t\t  Array [\n\t\t\t    \"class\",\n\t\t\t    \".class\\\\\\\\ name\",\n\t\t\t  ],\n\t\t\t  Array [\n\t\t\t    \"id\",\n\t\t\t    \"#_id\",\n\t\t\t  ],\n\t\t\t  Array [\n\t\t\t    \"leftCurlyBracket\",\n\t\t\t    \"{\",\n\t\t\t  ],\n\t\t\t  Array [\n\t\t\t    \"identifier\",\n\t\t\t    \"background\",\n\t\t\t  ],\n\t\t\t  Array [\n\t\t\t    \"url\",\n\t\t\t    \"url(  \\\\\"https://example.com/some url \\\\\\\\\\\\\"with\\\\\\\\\\\\\" 'spaces'.png\\\\\"   )\",\n\t\t\t    \"https://example.com/some url \\\\\\\\\\\\\"with\\\\\\\\\\\\\" 'spaces'.png\",\n\t\t\t  ],\n\t\t\t  Array [\n\t\t\t    \"url\",\n\t\t\t    \"url('https://example.com/\\\\\\\\'\\\\\"quotes\\\\\"\\\\\\\\'.png')\",\n\t\t\t    \"https://example.com/\\\\\\\\'\\\\\"quotes\\\\\"\\\\\\\\'.png\",\n\t\t\t  ],\n\t\t\t  Array [\n\t\t\t    \"semicolon\",\n\t\t\t    \";\",\n\t\t\t  ],\n\t\t\t  Array [\n\t\t\t    \"rightCurlyBracket\",\n\t\t\t    \"}\",\n\t\t\t  ],\n\t\t\t]\n\t\t`));","file":"walkCssTokens.unittest.js","skipped":false,"dir":"test"},{"name":"parse pseudo functions","suites":["walkCssTokens"],"updatePoint":{"line":139,"column":30,"index":3522},"line":139,"code":"  test(\"parse pseudo functions\", `:local(.class#id, .class:not(*:hover)) { color: red; }\n:import(something from \":somewhere\") {}`, e => e.toMatchInlineSnapshot(`\n\t\t\tArray [\n\t\t\t  Array [\n\t\t\t    \"pseudoFunction\",\n\t\t\t    \":local(\",\n\t\t\t  ],\n\t\t\t  Array [\n\t\t\t    \"class\",\n\t\t\t    \".class\",\n\t\t\t  ],\n\t\t\t  Array [\n\t\t\t    \"id\",\n\t\t\t    \"#id\",\n\t\t\t  ],\n\t\t\t  Array [\n\t\t\t    \"comma\",\n\t\t\t    \",\",\n\t\t\t  ],\n\t\t\t  Array [\n\t\t\t    \"class\",\n\t\t\t    \".class\",\n\t\t\t  ],\n\t\t\t  Array [\n\t\t\t    \"pseudoFunction\",\n\t\t\t    \":not(\",\n\t\t\t  ],\n\t\t\t  Array [\n\t\t\t    \"pseudoClass\",\n\t\t\t    \":hover\",\n\t\t\t  ],\n\t\t\t  Array [\n\t\t\t    \"rightParenthesis\",\n\t\t\t    \")\",\n\t\t\t  ],\n\t\t\t  Array [\n\t\t\t    \"rightParenthesis\",\n\t\t\t    \")\",\n\t\t\t  ],\n\t\t\t  Array [\n\t\t\t    \"leftCurlyBracket\",\n\t\t\t    \"{\",\n\t\t\t  ],\n\t\t\t  Array [\n\t\t\t    \"identifier\",\n\t\t\t    \"color\",\n\t\t\t  ],\n\t\t\t  Array [\n\t\t\t    \"identifier\",\n\t\t\t    \"red\",\n\t\t\t  ],\n\t\t\t  Array [\n\t\t\t    \"semicolon\",\n\t\t\t    \";\",\n\t\t\t  ],\n\t\t\t  Array [\n\t\t\t    \"rightCurlyBracket\",\n\t\t\t    \"}\",\n\t\t\t  ],\n\t\t\t  Array [\n\t\t\t    \"pseudoFunction\",\n\t\t\t    \":import(\",\n\t\t\t  ],\n\t\t\t  Array [\n\t\t\t    \"identifier\",\n\t\t\t    \"something\",\n\t\t\t  ],\n\t\t\t  Array [\n\t\t\t    \"identifier\",\n\t\t\t    \"from\",\n\t\t\t  ],\n\t\t\t  Array [\n\t\t\t    \"rightParenthesis\",\n\t\t\t    \")\",\n\t\t\t  ],\n\t\t\t  Array [\n\t\t\t    \"leftCurlyBracket\",\n\t\t\t    \"{\",\n\t\t\t  ],\n\t\t\t  Array [\n\t\t\t    \"rightCurlyBracket\",\n\t\t\t    \"}\",\n\t\t\t  ],\n\t\t\t]\n\t\t`));","file":"walkCssTokens.unittest.js","skipped":false,"dir":"test"},{"name":"parse at rules","suites":["walkCssTokens"],"updatePoint":{"line":224,"column":22,"index":4863},"line":224,"code":"  test(\"parse at rules\", `@media (max-size: 100px) {\n\t@import \"external.css\";\n\tbody { color: red; }\n}`, e => e.toMatchInlineSnapshot(`\n\t\t\tArray [\n\t\t\t  Array [\n\t\t\t    \"atKeyword\",\n\t\t\t    \"@media\",\n\t\t\t  ],\n\t\t\t  Array [\n\t\t\t    \"leftParenthesis\",\n\t\t\t    \"(\",\n\t\t\t  ],\n\t\t\t  Array [\n\t\t\t    \"identifier\",\n\t\t\t    \"max-size\",\n\t\t\t  ],\n\t\t\t  Array [\n\t\t\t    \"rightParenthesis\",\n\t\t\t    \")\",\n\t\t\t  ],\n\t\t\t  Array [\n\t\t\t    \"leftCurlyBracket\",\n\t\t\t    \"{\",\n\t\t\t  ],\n\t\t\t  Array [\n\t\t\t    \"atKeyword\",\n\t\t\t    \"@import\",\n\t\t\t  ],\n\t\t\t  Array [\n\t\t\t    \"semicolon\",\n\t\t\t    \";\",\n\t\t\t  ],\n\t\t\t  Array [\n\t\t\t    \"identifier\",\n\t\t\t    \"body\",\n\t\t\t  ],\n\t\t\t  Array [\n\t\t\t    \"leftCurlyBracket\",\n\t\t\t    \"{\",\n\t\t\t  ],\n\t\t\t  Array [\n\t\t\t    \"identifier\",\n\t\t\t    \"color\",\n\t\t\t  ],\n\t\t\t  Array [\n\t\t\t    \"identifier\",\n\t\t\t    \"red\",\n\t\t\t  ],\n\t\t\t  Array [\n\t\t\t    \"semicolon\",\n\t\t\t    \";\",\n\t\t\t  ],\n\t\t\t  Array [\n\t\t\t    \"rightCurlyBracket\",\n\t\t\t    \"}\",\n\t\t\t  ],\n\t\t\t  Array [\n\t\t\t    \"rightCurlyBracket\",\n\t\t\t    \"}\",\n\t\t\t  ],\n\t\t\t]\n\t\t`));","file":"walkCssTokens.unittest.js","skipped":false,"dir":"test"},{"name":"empty hash","suites":[],"updatePoint":{"line":84,"column":20,"index":2500},"line":84,"code":"    test(\"empty hash\", []);","file":"WasmHashes.unittest.js","skipped":false,"dir":"test"},{"name":"single update  bytes","suites":[],"updatePoint":{"line":87,"column":39,"index":2580},"line":87,"code":"      test(`single update ${size} bytes`, [size]);","file":"WasmHashes.unittest.js","skipped":false,"dir":"test"},{"name":"two updates  +  bytes","suites":[],"updatePoint":{"line":92,"column":51,"index":2718},"line":92,"code":"        test(`two updates ${size1} + ${size2} bytes`, [size1, size2]);","file":"WasmHashes.unittest.js","skipped":false,"dir":"test"},{"name":"many updates 1","suites":[],"updatePoint":{"line":96,"column":24,"index":2777},"line":96,"code":"    test(`many updates 1`, sizes);","file":"WasmHashes.unittest.js","skipped":false,"dir":"test"},{"name":"many updates 2","suites":[],"updatePoint":{"line":97,"column":24,"index":2812},"line":97,"code":"    test(`many updates 2`, sizes.slice().reverse());","file":"WasmHashes.unittest.js","skipped":false,"dir":"test"},{"name":"many updates 3","suites":[],"updatePoint":{"line":98,"column":24,"index":2865},"line":98,"code":"    test(`many updates 3`, sizes.concat(sizes.slice().reverse()));","file":"WasmHashes.unittest.js","skipped":false,"dir":"test"},{"name":"many updates 4","suites":[],"updatePoint":{"line":99,"column":24,"index":2932},"line":99,"code":"    test(`many updates 4`, sizes.slice().reverse().concat(sizes));","file":"WasmHashes.unittest.js","skipped":false,"dir":"test"},{"name":"should only compile a single time","suites":["Watch"],"updatePoint":{"line":16,"column":39,"index":270},"line":16,"code":"  it(\"should only compile a single time\", done => {\n    let counterBeforeCompile = 0;\n    let counterDone = 0;\n    let counterHandler = 0;\n    const compiler = webpack({\n      context: path.resolve(__dirname, \"fixtures/watch\"),\n      watch: true,\n      mode: \"development\",\n      snapshot: {\n        managedPaths: [/^(.+?[\\\\/]node_modules[\\\\/])/]\n      },\n      experiments: {\n        futureDefaults: true\n      },\n      module: {\n        // unsafeCache: false,\n        rules: [{\n          test: /\\.js$/,\n          use: \"some-loader\"\n        }]\n      },\n      plugins: [c => {\n        c.hooks.beforeCompile.tap(\"test\", () => {\n          counterBeforeCompile++;\n        });\n        c.hooks.done.tap(\"test\", () => {\n          counterDone++;\n        });\n      }]\n    }, (err, stats) => {\n      if (err) return done(err);\n      if (stats.hasErrors()) return done(new Error(stats.toString()));\n      counterHandler++;\n    });\n    compiler.outputFileSystem = createFsFromVolume(new Volume());\n    setTimeout(() => {\n      expect(counterBeforeCompile).toBe(1);\n      expect(counterDone).toBe(1);\n      expect(counterHandler).toBe(1);\n      compiler.close(done);\n    }, 5000);\n  });","file":"Watch.test.js","skipped":false,"dir":"test"},{"name":"each callback should be called","suites":["WatchClose","multiple calls watcher"],"updatePoint":{"line":46,"column":38,"index":1035},"line":46,"code":"    it(\"each callback should be called\", async () => {\n      let num = 0;\n      await Promise.all([close(watcher, () => num += 1), close(watcher, () => num += 10)]);\n      await Promise.all([close(watcher, () => num += 100), close(watcher, () => num += 1000)]);\n      expect(num).toBe(1111);\n    });","file":"WatchClose.test.js","skipped":false,"dir":"test"},{"name":"long running tests excluded","suites":["WatchDetection"],"line":16,"code":"    it.skip(\"long running tests excluded\", () => {});","file":"WatchDetection.test.js","skipped":true,"dir":"test"},{"name":"should build the bundle correctly","suites":["WatchDetection","time between changes ms"],"updatePoint":{"line":68,"column":43,"index":1817},"line":68,"code":"      it(\"should build the bundle correctly\", done => {\n        const compiler = webpack({\n          mode: \"development\",\n          entry: loaderPath + \"!\" + filePath,\n          output: {\n            path: \"/directory\",\n            filename: \"bundle.js\"\n          }\n        });\n        const memfs = compiler.outputFileSystem = createFsFromVolume(new Volume());\n        let onChange;\n        compiler.hooks.done.tap(\"WatchDetectionTest\", () => {\n          if (onChange) onChange();\n        });\n        let watcher;\n        step1();\n\n        function step1() {\n          onChange = () => {\n            if (memfs.readFileSync(\"/directory/bundle.js\") && memfs.readFileSync(\"/directory/bundle.js\").toString().indexOf(\"original\") >= 0) step2();\n          };\n\n          watcher = compiler.watch({\n            aggregateTimeout: 50\n          }, () => {});\n        }\n\n        function step2() {\n          onChange = () => {\n            expect(compiler.modifiedFiles).not.toBe(undefined);\n            expect(compiler.removedFiles).not.toBe(undefined);\n          };\n\n          fs.writeFile(filePath, \"require('./file2'); again\", \"utf-8\", handleError);\n          setTimeout(step3, changeTimeout);\n        }\n\n        function step3() {\n          if (invalidate) watcher.invalidate();\n          fs.writeFile(file2Path, \"wrong\", \"utf-8\", handleError);\n          setTimeout(step4, changeTimeout);\n        }\n\n        function step4() {\n          onChange = () => {\n            expect(compiler.modifiedFiles).not.toBe(undefined);\n            expect(compiler.removedFiles).not.toBe(undefined);\n            if (memfs.readFileSync(\"/directory/bundle.js\").toString().indexOf(\"correct\") >= 0) step5();\n          };\n\n          fs.writeFile(file2Path, \"correct\", \"utf-8\", handleError);\n        }\n\n        function step5() {\n          onChange = null;\n          watcher.close(() => {\n            setTimeout(done, 500);\n          });\n        }\n\n        function handleError(err) {\n          if (err) done(err);\n        }\n      });","file":"WatchDetection.test.js","skipped":false,"dir":"test"},{"name":"long running tests excluded","suites":["WatcherEvents"],"line":34,"code":"    it.skip(\"long running tests excluded\", () => {});","file":"WatcherEvents.test.js","skipped":true,"dir":"test"},{"name":"should emit 'watch-close' when using single-compiler mode and the compiler is not running","suites":["WatcherEvents"],"updatePoint":{"line":39,"column":95,"index":842},"line":39,"code":"  it(\"should emit 'watch-close' when using single-compiler mode and the compiler is not running\", done => {\n    let called = false;\n    const compiler = createSingleCompiler();\n    const watcher = compiler.watch({}, (err, stats) => {\n      expect(called).toBe(true);\n      done(err);\n    });\n    compiler.hooks.watchClose.tap(\"WatcherEventsTest\", () => {\n      called = true;\n    });\n    compiler.hooks.done.tap(\"WatcherEventsTest\", () => {\n      watcher.close();\n    });\n  });","file":"WatcherEvents.test.js","skipped":false,"dir":"test"},{"name":"should emit 'watch-close' when using multi-compiler mode and the compiler is not running","suites":["WatcherEvents"],"updatePoint":{"line":53,"column":94,"index":1319},"line":53,"code":"  it(\"should emit 'watch-close' when using multi-compiler mode and the compiler is not running\", done => {\n    let called = false;\n    const compiler = createMultiCompiler();\n    const watcher = compiler.watch({}, (err, stats) => {\n      expect(called).toBe(true);\n      done(err);\n    });\n    compiler.hooks.watchClose.tap(\"WatcherEventsTest\", () => {\n      called = true;\n    });\n    compiler.hooks.done.tap(\"WatcherEventsTest\", () => {\n      watcher.close();\n    });\n  });","file":"WatcherEvents.test.js","skipped":false,"dir":"test"},{"name":"long running tests excluded","suites":["WatchSuspend"],"line":11,"code":"    it.skip(\"long running tests excluded\", () => {});","file":"WatchSuspend.test.js","skipped":true,"dir":"test"},{"name":"should compile successfully","suites":["WatchSuspend","suspend and resume watcher"],"updatePoint":{"line":70,"column":35,"index":1789},"line":70,"code":"    it(\"should compile successfully\", done => {\n      onChange = () => {\n        expect(fs.readFileSync(outputFile, \"utf-8\")).toContain(\"'foo'\");\n        onChange = null;\n        done();\n      };\n    });","file":"WatchSuspend.test.js","skipped":false,"dir":"test"},{"name":"should suspend compilation","suites":["WatchSuspend","suspend and resume watcher"],"updatePoint":{"line":77,"column":34,"index":1992},"line":77,"code":"    it(\"should suspend compilation\", done => {\n      onChange = jest.fn();\n      watching.suspend();\n      fs.writeFileSync(filePath, \"'bar'\", \"utf-8\");\n      setTimeout(() => {\n        expect(onChange.mock.calls.length).toBe(0);\n        onChange = null;\n        done();\n      }, 1000);\n    });","file":"WatchSuspend.test.js","skipped":false,"dir":"test"},{"name":"should resume compilation","suites":["WatchSuspend","suspend and resume watcher"],"updatePoint":{"line":87,"column":33,"index":2286},"line":87,"code":"    it(\"should resume compilation\", done => {\n      onChange = () => {\n        expect(fs.readFileSync(outputFile, \"utf-8\")).toContain(\"'bar'\");\n        onChange = null;\n        done();\n      };\n\n      watching.resume();\n    });","file":"WatchSuspend.test.js","skipped":false,"dir":"test"},{"name":"should not ignore changes during resumed compilation (changeBefore: , delay: ms)","suites":["WatchSuspend","suspend and resume watcher"],"updatePoint":{"line":99,"column":113,"index":2723},"line":99,"code":"      it(`should not ignore changes during resumed compilation (changeBefore: ${changeBefore}, delay: ${delay}ms)`, async () => {\n        // aggregateTimeout must be long enough for this test\n        //  So set-up new watcher and wait when initial compilation is done\n        await new Promise(resolve => {\n          watching.close(() => {\n            watching = compiler.watch({\n              aggregateTimeout: 1000\n            }, () => {\n              resolve();\n            });\n          });\n        });\n        return new Promise(resolve => {\n          if (changeBefore) fs.writeFileSync(filePath, \"'bar'\", \"utf-8\");\n          setTimeout(() => {\n            watching.suspend();\n            fs.writeFileSync(filePath, \"'baz'\", \"utf-8\");\n            onChange = \"throw\";\n            setTimeout(() => {\n              onChange = () => {\n                expect(fs.readFileSync(outputFile, \"utf-8\")).toContain(\"'baz'\");\n                expect(compiler.modifiedFiles && Array.from(compiler.modifiedFiles).sort()).toEqual([filePath]);\n                expect(compiler.removedFiles && Array.from(compiler.removedFiles)).toEqual([]);\n                onChange = null;\n                resolve();\n              };\n\n              watching.resume();\n            }, delay);\n          }, 200);\n        });\n      });","file":"WatchSuspend.test.js","skipped":false,"dir":"test"},{"name":"should not drop changes when suspended","suites":["WatchSuspend","suspend and resume watcher"],"updatePoint":{"line":133,"column":46,"index":3964},"line":133,"code":"    it(\"should not drop changes when suspended\", done => {\n      const aggregateTimeout = 50; // Trigger initial compilation with file2.js (assuming correct)\n\n      fs.writeFileSync(filePath, 'require(\"./file2.js\"); require(\"./file3.js\")', \"utf-8\");\n\n      onChange = () => {\n        // Initial compilation is done, start the test\n        watching.suspend(); // Trigger the first change (works as expected):\n\n        fs.writeFileSync(file2Path, \"'foo'\", \"utf-8\"); // Trigger the second change _after_ aggregation timeout of the first\n\n        setTimeout(() => {\n          fs.writeFileSync(file3Path, \"'bar'\", \"utf-8\"); // Wait when the file3 edit is settled and re-compile\n\n          setTimeout(() => {\n            watching.resume();\n\n            onChange = () => {\n              onChange = null;\n              expect(fs.readFileSync(outputFile, \"utf-8\")).toContain(\"'bar'\");\n              done();\n            };\n          }, 200);\n        }, aggregateTimeout + 50);\n      };\n    });","file":"WatchSuspend.test.js","skipped":false,"dir":"test"},{"name":"Should provide inspect method for use by for util.inspect","suites":["WebpackError"],"updatePoint":{"line":17,"column":63,"index":427},"line":17,"code":"  it(\"Should provide inspect method for use by for util.inspect\", () => {\n    const error = new CustomError(\"Message\");\n    expect(error.toString()).toContain(\"CustomError: CustomMessage\");\n    expect(error.stack).toContain(__filename);\n  });","file":"WebpackError.unittest.js","skipped":false,"dir":"test"}]}