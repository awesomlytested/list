{"repo":"nuxt/nuxt.js","url":"https://github.com/nuxt/nuxt.js","branch":"dev","configs":[{"package":"example-jest-puppeteer","lang":"js","dir":"examples/jest-puppeteer/test","framework":"jest","pattern":"**/*[._-]{test,spec,unittest,unit}.{ts,js}"},{"package":"example-with-ava","lang":"js","dir":"examples/with-ava/test","framework":"jest","pattern":"**/*[._-]{test,spec,unittest,unit}.{ts,js}"},{"package":"example-with-feathers","lang":"js","dir":"examples/with-feathers/test","framework":"mocha","pattern":"**/*[._-]{test,spec,unittest,unit}.{ts,js}"},{"package":"example-with-tape","lang":"js","dir":"examples/with-tape/test","framework":"jest","pattern":"**/*[._-]{test,spec,unittest,unit}.{ts,js}"},{"package":"nuxt","lang":"js","dir":"test","framework":"jest","pattern":"**/*[._-]{test,spec,unittest,unit}.{ts,js}"},{"package":"@nuxt/builder","lang":"js","dir":"packages/builder/test","framework":"jest","pattern":"**/*[._-]{test,spec,unittest,unit}.{ts,js}"},{"package":"@nuxt/cli","lang":"js","dir":"packages/cli/test","framework":"jest","pattern":"**/*[._-]{test,spec,unittest,unit}.{ts,js}"},{"package":"@nuxt/config","lang":"js","dir":"packages/config/test","framework":"jest","pattern":"**/*[._-]{test,spec,unittest,unit}.{ts,js}"},{"package":"@nuxt/core","lang":"js","dir":"packages/core/test","framework":"jest","pattern":"**/*[._-]{test,spec,unittest,unit}.{ts,js}"},{"package":"@nuxt/generator","lang":"js","dir":"packages/generator/test","framework":"jest","pattern":"**/*[._-]{test,spec,unittest,unit}.{ts,js}"},{"package":"@nuxt/server","lang":"js","dir":"packages/server/test","framework":"jest","pattern":"**/*[._-]{test,spec,unittest,unit}.{ts,js}"},{"package":"@nuxt/types","lang":"ts","dir":"packages/types/test","framework":"jest","pattern":"**/*.{js,ts}"},{"package":"@nuxt/utils","lang":"js","dir":"packages/utils/test","framework":"jest","pattern":"**/*[._-]{test,spec,unittest,unit}.{ts,js}"},{"package":"@nuxt/vue-app","lang":"js","dir":"packages/vue-app/test","framework":"jest","pattern":"**/*[._-]{test,spec,unittest,unit}.{ts,js}"},{"package":"@nuxt/webpack","lang":"js","dir":"packages/webpack/test","framework":"jest","pattern":"**/*[._-]{test,spec,unittest,unit}.{ts,js}"}],"tests":[{"name":"default client bundle size","suites":[],"updatePoint":{"line":23,"column":34,"index":915},"line":23,"code":"    it('default client bundle size', async () => {\n      const clientStats = await analyzeSizes('**/*.js', join(rootDir, outputDir, 'public'));\n      expect.soft(roundToKilobytes(clientStats.totalBytes)).toMatchInlineSnapshot('\"97.1k\"');\n      expect(clientStats.files.map(f => f.replace(/\\..*\\.js/, '.js'))).toMatchInlineSnapshot(`\n        [\n          \"_nuxt/entry.js\",\n        ]\n      `);\n    });","file":"bundle.test.ts","skipped":false,"dir":"test"},{"name":"default server bundle size","suites":[],"updatePoint":{"line":33,"column":32,"index":1316},"line":33,"code":"  it('default server bundle size', async () => {\n    const serverDir = join(rootDir, '.output/server');\n    const serverStats = await analyzeSizes(['**/*.mjs', '!node_modules'], serverDir);\n    expect.soft(roundToKilobytes(serverStats.totalBytes)).toMatchInlineSnapshot('\"64.0k\"');\n    const modules = await analyzeSizes('node_modules/**/*', serverDir);\n    expect.soft(roundToKilobytes(modules.totalBytes)).toMatchInlineSnapshot('\"2329k\"');\n    const packages = modules.files.filter(m => m.endsWith('package.json')).map(m => m.replace('/package.json', '').replace('node_modules/', '')).sort();\n    expect(packages).toMatchInlineSnapshot(`\n      [\n        \"@babel/parser\",\n        \"@unhead/dom\",\n        \"@unhead/shared\",\n        \"@unhead/ssr\",\n        \"@vue/compiler-core\",\n        \"@vue/compiler-dom\",\n        \"@vue/compiler-ssr\",\n        \"@vue/reactivity\",\n        \"@vue/runtime-core\",\n        \"@vue/runtime-dom\",\n        \"@vue/server-renderer\",\n        \"@vue/shared\",\n        \"cookie-es\",\n        \"debug\",\n        \"defu\",\n        \"destr\",\n        \"devalue\",\n        \"estree-walker\",\n        \"h3\",\n        \"has-flag\",\n        \"hookable\",\n        \"http-graceful-shutdown\",\n        \"iron-webcrypto\",\n        \"klona\",\n        \"ms\",\n        \"node-fetch-native\",\n        \"ofetch\",\n        \"ohash\",\n        \"pathe\",\n        \"radix3\",\n        \"scule\",\n        \"source-map-js\",\n        \"supports-color\",\n        \"ufo\",\n        \"uncrypto\",\n        \"unctx\",\n        \"unenv\",\n        \"unhead\",\n        \"unstorage\",\n        \"vue\",\n        \"vue-bundle-renderer\",\n      ]\n    `);\n  });","file":"bundle.test.ts","skipped":false,"dir":"test"},{"name":"default server bundle size (inlined vue modules)","suites":[],"updatePoint":{"line":86,"column":54,"index":2913},"line":86,"code":"  it('default server bundle size (inlined vue modules)', async () => {\n    const serverDir = join(rootDir, '.output-inline/server');\n    const serverStats = await analyzeSizes(['**/*.mjs', '!node_modules'], serverDir);\n    expect.soft(roundToKilobytes(serverStats.totalBytes)).toMatchInlineSnapshot('\"370k\"');\n    const modules = await analyzeSizes('node_modules/**/*', serverDir);\n    expect.soft(roundToKilobytes(modules.totalBytes)).toMatchInlineSnapshot('\"590k\"');\n    const packages = modules.files.filter(m => m.endsWith('package.json')).map(m => m.replace('/package.json', '').replace('node_modules/', '')).sort();\n    expect(packages).toMatchInlineSnapshot(`\n      [\n        \"@unhead/dom\",\n        \"@unhead/shared\",\n        \"@unhead/ssr\",\n        \"cookie-es\",\n        \"debug\",\n        \"defu\",\n        \"destr\",\n        \"devalue\",\n        \"h3\",\n        \"has-flag\",\n        \"hookable\",\n        \"http-graceful-shutdown\",\n        \"iron-webcrypto\",\n        \"klona\",\n        \"ms\",\n        \"node-fetch-native\",\n        \"ofetch\",\n        \"ohash\",\n        \"pathe\",\n        \"radix3\",\n        \"scule\",\n        \"supports-color\",\n        \"ufo\",\n        \"uncrypto\",\n        \"unctx\",\n        \"unenv\",\n        \"unhead\",\n        \"unstorage\",\n      ]\n    `);\n  });","file":"bundle.test.ts","skipped":false,"dir":"test"},{"name":"expect render page without any error or logs","suites":["test basic config"],"updatePoint":{"line":18,"column":50,"index":668},"line":18,"code":"  it('expect render page without any error or logs', async () => {\n    await expectNoClientErrors('/');\n  });","file":"runtime-compiler.test.ts","skipped":false,"dir":"test"},{"name":"test HelloWorld.vue","suites":["test basic config"],"updatePoint":{"line":21,"column":25,"index":753},"line":21,"code":"  it('test HelloWorld.vue', async () => {\n    const html = await $fetch('/');\n    const {\n      page\n    } = await renderPage('/');\n    expect(html).toContain('<div id=\"hello-world\">hello, Helloworld.vue here ! </div>');\n    expect(await page.locator('body').innerHTML()).toContain('<div id=\"hello-world\">hello, Helloworld.vue here ! </div>');\n  });","file":"runtime-compiler.test.ts","skipped":false,"dir":"test"},{"name":"test Name.ts","suites":["test basic config"],"updatePoint":{"line":29,"column":18,"index":1096},"line":29,"code":"  it('test Name.ts', async () => {\n    const html = await $fetch('/');\n    const {\n      page\n    } = await renderPage('/');\n    expect(html).toContain('<div id=\"name\">I am the Name.ts component</div>');\n    expect(await page.locator('body').innerHTML()).toContain('<div id=\"name\">I am the Name.ts component</div>');\n  });","file":"runtime-compiler.test.ts","skipped":false,"dir":"test"},{"name":"test ShowTemplate.ts","suites":["test basic config"],"updatePoint":{"line":37,"column":26,"index":1427},"line":37,"code":"  it('test ShowTemplate.ts', async () => {\n    const html = await $fetch('/');\n    const {\n      page\n    } = await renderPage('/');\n    expect(html).toContain('<div id=\"show-template\">Hello my name is : John, i am defined by ShowTemplate.vue and my template is retrieved from the API</div>');\n    expect(await page.locator('body').innerHTML()).toContain('<div id=\"show-template\">Hello my name is : John, i am defined by ShowTemplate.vue and my template is retrieved from the API</div>');\n  });","file":"runtime-compiler.test.ts","skipped":false,"dir":"test"},{"name":"test Interactive component.ts","suites":["test basic config"],"updatePoint":{"line":45,"column":35,"index":1931},"line":45,"code":"  it('test Interactive component.ts', async () => {\n    const html = await $fetch('/');\n    const {\n      page\n    } = await renderPage('/');\n    expect(html).toContain('I am defined by Interactive in the setup of App.vue. My full component definition is retrieved from the api');\n    expect(await page.locator('#interactive').innerHTML()).toContain('I am defined by Interactive in the setup of App.vue. My full component definition is retrieved from the api');\n    const button = page.locator('#inc-interactive-count');\n    await button.click();\n    const count = page.locator('#interactive-count');\n    expect(await count.innerHTML()).toBe('1');\n  });","file":"runtime-compiler.test.ts","skipped":false,"dir":"test"}]}