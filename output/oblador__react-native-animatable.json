{"repo":"oblador/react-native-animatable","url":"https://github.com/oblador/react-native-animatable","branch":"master","configs":[{"package":"AnimatableExplorer","lang":"js","dir":"Examples/AnimatableExplorer/__tests__","framework":"jest","pattern":"**/*[._-]{test,spec,unittest,unit}.{ts,js}"},{"package":"MakeItRain","lang":"js","dir":"Examples/MakeItRain/__tests__","framework":"jest","pattern":"**/*[._-]{test,spec,unittest,unit}.{ts,js}"},{"package":"react-native-animatable","lang":"js","dir":"__tests__","framework":"jest","pattern":"**/*.{js,ts}"}],"tests":[{"name":"renders correctly","suites":[],"updatePoint":{"line":11,"column":21,"index":223},"line":11,"code":"it('renders correctly', () => {\n  renderer.create( /*#__PURE__*/React.createElement(App, null));\n});","file":"App-test.js","skipped":false,"dir":"Examples/AnimatableExplorer/__tests__"},{"name":"renders correctly","suites":[],"updatePoint":{"line":11,"column":21,"index":223},"line":11,"code":"it('renders correctly', () => {\n  renderer.create( /*#__PURE__*/React.createElement(App, null));\n});","file":"App-test.js","skipped":false,"dir":"Examples/MakeItRain/__tests__"},{"name":"should support from and to keys","suites":["createAnimation"],"updatePoint":{"line":5,"column":37,"index":147},"line":5,"code":"  it('should support from and to keys', () => {\n    expect(createAnimation({\n      from: {\n        opacity: 0\n      },\n      to: {\n        opacity: 1\n      }\n    })).toEqual({\n      opacity: {\n        inputRange: [0, 1],\n        outputRange: [0, 1]\n      }\n    });\n  });","file":"createAnimation.js","skipped":false,"dir":"__tests__"},{"name":"should support fraction keyframes","suites":["createAnimation"],"updatePoint":{"line":20,"column":39,"index":420},"line":20,"code":"  it('should support fraction keyframes', () => {\n    expect(createAnimation({\n      0: {\n        opacity: 0\n      },\n      1: {\n        opacity: 1\n      }\n    })).toEqual({\n      opacity: {\n        inputRange: [0, 1],\n        outputRange: [0, 1]\n      }\n    });\n  });","file":"createAnimation.js","skipped":false,"dir":"__tests__"},{"name":"should throw if only one keyframe is defined","suites":["createAnimation"],"updatePoint":{"line":35,"column":50,"index":700},"line":35,"code":"  it('should throw if only one keyframe is defined', () => {\n    expect(() => createAnimation({\n      from: {\n        opacity: 1\n      }\n    })).toThrow('Animation definitions must have at least two values.');\n  });","file":"createAnimation.js","skipped":false,"dir":"__tests__"},{"name":"should throw if one keyframe is invalid","suites":["createAnimation"],"updatePoint":{"line":42,"column":45,"index":911},"line":42,"code":"  it('should throw if one keyframe is invalid', () => {\n    expect(() => createAnimation({\n      unparsed: 0.1,\n      to: {\n        opacity: 1\n      }\n    })).toThrow('Animation definitions must have at least two values.');\n  });","file":"createAnimation.js","skipped":false,"dir":"__tests__"},{"name":"should support and flatten transform values","suites":["createAnimation"],"updatePoint":{"line":50,"column":49,"index":1145},"line":50,"code":"  it('should support and flatten transform values', () => {\n    expect(createAnimation({\n      from: {\n        transform: [{\n          translateY: 0\n        }]\n      },\n      to: {\n        transform: [{\n          translateY: 10\n        }]\n      }\n    })).toEqual({\n      translateY: {\n        inputRange: [0, 1],\n        outputRange: [0, 10]\n      }\n    });\n  });","file":"createAnimation.js","skipped":false,"dir":"__tests__"},{"name":"should support and multiple properties with different keyframes","suites":["createAnimation"],"updatePoint":{"line":69,"column":69,"index":1529},"line":69,"code":"  it('should support and multiple properties with different keyframes', () => {\n    expect(createAnimation({\n      0: {\n        transform: [{\n          scale: 0\n        }],\n        opacity: 0\n      },\n      0.8: {\n        transform: [{\n          scale: 1\n        }]\n      },\n      1: {\n        opacity: 1\n      }\n    })).toEqual({\n      scale: {\n        inputRange: [0, 0.8],\n        outputRange: [0, 1]\n      },\n      opacity: {\n        inputRange: [0, 1],\n        outputRange: [0, 1]\n      }\n    });\n  });","file":"createAnimation.js","skipped":false,"dir":"__tests__"},{"name":"should return value from cache","suites":["createAnimation"],"updatePoint":{"line":96,"column":36,"index":2004},"line":96,"code":"  it('should return value from cache', () => {\n    const definition = {\n      from: {\n        opacity: 0\n      },\n      to: {\n        opacity: 1\n      }\n    };\n    const firstAnimation = createAnimation(definition);\n    const secondAnimation = createAnimation(definition);\n    expect(secondAnimation).toBe(firstAnimation);\n  });","file":"createAnimation.js","skipped":false,"dir":"__tests__"},{"name":"should return 0deg for skew and rotate keys","suites":["getDefaultStyleValue"],"updatePoint":{"line":5,"column":49,"index":174},"line":5,"code":"  it('should return 0deg for skew and rotate keys', () => {\n    expect(getDefaultStyleValue('skewX')).toEqual('0deg');\n    expect(getDefaultStyleValue('skewY')).toEqual('0deg');\n    expect(getDefaultStyleValue('rotateX')).toEqual('0deg');\n    expect(getDefaultStyleValue('rotateY')).toEqual('0deg');\n  });","file":"getDefaultStyleValue.js","skipped":false,"dir":"__tests__"},{"name":"should fallback to general margins","suites":["getDefaultStyleValue"],"updatePoint":{"line":11,"column":40,"index":471},"line":11,"code":"  it('should fallback to general margins', () => {\n    expect(getDefaultStyleValue('marginTop', {\n      margin: 10\n    })).toEqual(10);\n    expect(getDefaultStyleValue('marginTop', {\n      marginVertical: 10\n    })).toEqual(10);\n    expect(getDefaultStyleValue('marginLeft', {\n      margin: 10\n    })).toEqual(10);\n    expect(getDefaultStyleValue('marginLeft', {\n      marginVertical: 10\n    })).toEqual(0);\n    expect(getDefaultStyleValue('marginHorizontal', {\n      margin: 10\n    })).toEqual(10);\n  });","file":"getDefaultStyleValue.js","skipped":false,"dir":"__tests__"},{"name":"should fallback to general paddings","suites":["getDefaultStyleValue"],"updatePoint":{"line":28,"column":41,"index":978},"line":28,"code":"  it('should fallback to general paddings', () => {\n    expect(getDefaultStyleValue('paddingTop', {\n      padding: 10\n    })).toEqual(10);\n    expect(getDefaultStyleValue('paddingTop', {\n      paddingVertical: 10\n    })).toEqual(10);\n    expect(getDefaultStyleValue('paddingLeft', {\n      padding: 10\n    })).toEqual(10);\n    expect(getDefaultStyleValue('paddingLeft', {\n      paddingVertical: 10\n    })).toEqual(0);\n    expect(getDefaultStyleValue('paddingHorizontal', {\n      padding: 10\n    })).toEqual(10);\n  });","file":"getDefaultStyleValue.js","skipped":false,"dir":"__tests__"}]}