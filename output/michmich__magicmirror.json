{"repo":"MichMich/MagicMirror","url":"https://github.com/MichMich/MagicMirror","branch":"master","configs":[{"package":"magicmirror","lang":"js","dir":"tests","framework":"jest","pattern":"**/*[._-]{test,spec,unittest,unit}.{ts,js}"}],"tests":[{"name":"get request from http://localhost:8080 should return 200","suites":["App environment"],"updatePoint":{"line":10,"column":62,"index":347},"line":10,"code":"  it(\"get request from http://localhost:8080 should return 200\", async () => {\n    const res = await helpers.fetch(\"http://localhost:8080\");\n    expect(res.status).toBe(200);\n  });","file":"e2e/env_spec.js","skipped":false,"dir":"tests"},{"name":"get request from http://localhost:8080/nothing should return 404","suites":["App environment"],"updatePoint":{"line":14,"column":70,"index":536},"line":14,"code":"  it(\"get request from http://localhost:8080/nothing should return 404\", async () => {\n    const res = await helpers.fetch(\"http://localhost:8080/nothing\");\n    expect(res.status).toBe(404);\n  });","file":"e2e/env_spec.js","skipped":false,"dir":"tests"},{"name":"should show the title MagicMirror²","suites":["App environment"],"updatePoint":{"line":18,"column":40,"index":703},"line":18,"code":"  it(\"should show the title MagicMirror²\", async () => {\n    const elem = await helpers.waitForElement(\"title\");\n    expect(elem).not.toBe(null);\n    expect(elem.textContent).toBe(\"MagicMirror²\");\n  });","file":"e2e/env_spec.js","skipped":false,"dir":"tests"},{"name":"should return 200 HTTP code for file '%s'","suites":["All font files from roboto.css should be downloadable"],"line":20,"code":"  test.each(fontFiles)(\"should return 200 HTTP code for file '%s'\", async fontFile => {\n    const fontUrl = `http://localhost:8080/fonts/${fontFile}`;\n    const res = await helpers.fetch(fontUrl);\n    expect(res.status).toBe(200);\n  });","file":"e2e/fonts_spec.js","skipped":false,"dir":"tests"},{"name":"should return 403","suites":["ipWhitelist directive configuration","Set ipWhitelist without access"],"updatePoint":{"line":10,"column":25,"index":368},"line":10,"code":"    it(\"should return 403\", async () => {\n      const res = await helpers.fetch(\"http://localhost:8080\");\n      expect(res.status).toBe(403);\n    });","file":"e2e/ipWhitelist_spec.js","skipped":false,"dir":"tests"},{"name":"should return 200","suites":["ipWhitelist directive configuration","Set ipWhitelist []"],"updatePoint":{"line":22,"column":25,"index":751},"line":22,"code":"    it(\"should return 200\", async () => {\n      const res = await helpers.fetch(\"http://localhost:8080\");\n      expect(res.status).toBe(200);\n    });","file":"e2e/ipWhitelist_spec.js","skipped":false,"dir":"tests"},{"name":"should show the test header","suites":["Display of modules"],"updatePoint":{"line":10,"column":33,"index":329},"line":10,"code":"  it(\"should show the test header\", async () => {\n    const elem = await helpers.waitForElement(\"#module_0_helloworld .module-header\");\n    expect(elem).not.toBe(null);\n    // textContent gibt hier lowercase zurück, das uppercase wird durch css realisiert, was daher nicht in textContent landet\n    expect(elem.textContent).toBe(\"test_header\");\n  });","file":"e2e/modules_display_spec.js","skipped":false,"dir":"tests"},{"name":"should show no header if no header text is specified","suites":["Display of modules"],"updatePoint":{"line":16,"column":58,"index":705},"line":16,"code":"  it(\"should show no header if no header text is specified\", async () => {\n    const elem = await helpers.waitForElement(\"#module_1_helloworld .module-header\");\n    expect(elem).not.toBe(null);\n    expect(elem.textContent).toBe(\"undefined\");\n  });","file":"e2e/modules_display_spec.js","skipped":false,"dir":"tests"},{"name":"Show the message MagicMirror² title","suites":["Check configuration without modules"],"updatePoint":{"line":10,"column":41,"index":354},"line":10,"code":"  it(\"Show the message MagicMirror² title\", async () => {\n    const elem = await helpers.waitForElement(\"#module_1_helloworld .module-content\");\n    expect(elem).not.toBe(null);\n    expect(elem.textContent).toContain(\"MagicMirror²\");\n  });","file":"e2e/modules_empty_spec.js","skipped":false,"dir":"tests"},{"name":"Show the url of michael's website","suites":["Check configuration without modules"],"updatePoint":{"line":15,"column":39,"index":592},"line":15,"code":"  it(\"Show the url of michael's website\", async () => {\n    const elem = await helpers.waitForElement(\"#module_5_helloworld .module-content\");\n    expect(elem).not.toBe(null);\n    expect(elem.textContent).toContain(\"www.michaelteeuw.nl\");\n  });","file":"e2e/modules_empty_spec.js","skipped":false,"dir":"tests"},{"name":"should show text in ","suites":["Position of modules"],"updatePoint":{"line":13,"column":39,"index":647},"line":13,"code":"    it(`should show text in ${position}`, async () => {\n      const elem = await helpers.waitForElement(`.${className}`);\n      expect(elem).not.toBe(null);\n      expect(elem.textContent).toContain(`Text in ${position}`);\n    });","file":"e2e/modules_position_spec.js","skipped":false,"dir":"tests"},{"name":"should show the welcome message","suites":["Alert module"],"updatePoint":{"line":10,"column":37,"index":334},"line":10,"code":"  it(\"should show the welcome message\", async () => {\n    const elem = await helpers.waitForElement(\".ns-box .ns-box-inner .light.bright.small\");\n    expect(elem).not.toBe(null);\n    expect(elem.textContent).toContain(\"Welcome, start was successful!\");\n  });","file":"e2e/modules/alert_spec.js","skipped":false,"dir":"tests"},{"name":"should show the default maximumEntries of 10","suites":["Calendar module","Default configuration"],"updatePoint":{"line":31,"column":52,"index":1104},"line":31,"code":"    it(\"should show the default maximumEntries of 10\", async () => {\n      await testElementLength(\".calendar .event\", 10);\n    });","file":"e2e/modules/calendar_spec.js","skipped":false,"dir":"tests"},{"name":"should show the default calendar symbol in each event","suites":["Calendar module","Default configuration"],"updatePoint":{"line":34,"column":61,"index":1245},"line":34,"code":"    it(\"should show the default calendar symbol in each event\", async () => {\n      await testElementLength(\".calendar .event .fa-calendar-alt\", 0, \"not\");\n    });","file":"e2e/modules/calendar_spec.js","skipped":false,"dir":"tests"},{"name":"should show the custom maximumEntries of 5","suites":["Calendar module","Custom configuration"],"updatePoint":{"line":43,"column":50,"index":1600},"line":43,"code":"    it(\"should show the custom maximumEntries of 5\", async () => {\n      await testElementLength(\".calendar .event\", 5);\n    });","file":"e2e/modules/calendar_spec.js","skipped":false,"dir":"tests"},{"name":"should show the custom calendar symbol in four events","suites":["Calendar module","Custom configuration"],"updatePoint":{"line":46,"column":61,"index":1740},"line":46,"code":"    it(\"should show the custom calendar symbol in four events\", async () => {\n      await testElementLength(\".calendar .event .fa-birthday-cake\", 4);\n    });","file":"e2e/modules/calendar_spec.js","skipped":false,"dir":"tests"},{"name":"should show a customEvent calendar symbol in one event","suites":["Calendar module","Custom configuration"],"updatePoint":{"line":49,"column":62,"index":1899},"line":49,"code":"    it(\"should show a customEvent calendar symbol in one event\", async () => {\n      await testElementLength(\".calendar .event .fa-dice\", 1);\n    });","file":"e2e/modules/calendar_spec.js","skipped":false,"dir":"tests"},{"name":"should show two custom icons for repeating events","suites":["Calendar module","Custom configuration"],"updatePoint":{"line":52,"column":57,"index":2044},"line":52,"code":"    it(\"should show two custom icons for repeating events\", async () => {\n      await testElementLength(\".calendar .event .fa-undo\", 2);\n    });","file":"e2e/modules/calendar_spec.js","skipped":false,"dir":"tests"},{"name":"should show two custom icons for day events","suites":["Calendar module","Custom configuration"],"updatePoint":{"line":55,"column":51,"index":2183},"line":55,"code":"    it(\"should show two custom icons for day events\", async () => {\n      await testElementLength(\".calendar .event .fa-calendar-day\", 2);\n    });","file":"e2e/modules/calendar_spec.js","skipped":false,"dir":"tests"},{"name":"should show the recurring birthday event 6 times","suites":["Calendar module","Recurring event"],"updatePoint":{"line":64,"column":56,"index":2535},"line":64,"code":"    it(\"should show the recurring birthday event 6 times\", async () => {\n      await testElementLength(\".calendar .event\", 6);\n    });","file":"e2e/modules/calendar_spec.js","skipped":false,"dir":"tests"},{"name":"should contain text \"Mar 25th\" in timezone UTC ","suites":["Calendar module","Recurring event per timezone"],"updatePoint":{"line":78,"column":62,"index":3051},"line":78,"code":"      it(`should contain text \"Mar 25th\" in timezone UTC ${-i}`, async () => {\n        await testTextContain(\".calendar\", \"Mar 25th\");\n      });","file":"e2e/modules/calendar_spec.js","skipped":false,"dir":"tests"},{"name":"should return TestEvents","suites":["Calendar module","Changed port"],"updatePoint":{"line":92,"column":32,"index":3480},"line":92,"code":"    it(\"should return TestEvents\", async () => {\n      await testElementLength(\".calendar .event\", 0, \"not\");\n    });","file":"e2e/modules/calendar_spec.js","skipped":false,"dir":"tests"},{"name":"should return TestEvents","suites":["Calendar module","Basic auth"],"updatePoint":{"line":101,"column":32,"index":3794},"line":101,"code":"    it(\"should return TestEvents\", async () => {\n      await testElementLength(\".calendar .event\", 0, \"not\");\n    });","file":"e2e/modules/calendar_spec.js","skipped":false,"dir":"tests"},{"name":"should return TestEvents","suites":["Calendar module","Basic auth by default"],"updatePoint":{"line":110,"column":32,"index":4121},"line":110,"code":"    it(\"should return TestEvents\", async () => {\n      await testElementLength(\".calendar .event\", 0, \"not\");\n    });","file":"e2e/modules/calendar_spec.js","skipped":false,"dir":"tests"},{"name":"should return TestEvents","suites":["Calendar module","Basic auth backward compatibility configuration: DEPRECATED"],"updatePoint":{"line":119,"column":32,"index":4488},"line":119,"code":"    it(\"should return TestEvents\", async () => {\n      await testElementLength(\".calendar .event\", 0, \"not\");\n    });","file":"e2e/modules/calendar_spec.js","skipped":false,"dir":"tests"},{"name":"should show Unauthorized error","suites":["Calendar module","Fail Basic auth"],"updatePoint":{"line":132,"column":38,"index":4926},"line":132,"code":"    it(\"should show Unauthorized error\", async () => {\n      await testTextContain(\".calendar\", \"Error in the calendar module. Authorization failed\");\n    });","file":"e2e/modules/calendar_spec.js","skipped":false,"dir":"tests"},{"name":"shows date with correct format","suites":["Clock set to spanish language module","with default 24hr clock config"],"updatePoint":{"line":11,"column":38,"index":426},"line":11,"code":"    it(\"shows date with correct format\", async () => {\n      const dateRegex = /^(?:lunes|martes|miércoles|jueves|viernes|sábado|domingo), \\d{1,2} de (?:enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre) de \\d{4}$/;\n      await helpers.testMatch(\".clock .date\", dateRegex);\n    });","file":"e2e/modules/clock_es_spec.js","skipped":false,"dir":"tests"},{"name":"shows time in 24hr format","suites":["Clock set to spanish language module","with default 24hr clock config"],"updatePoint":{"line":15,"column":33,"index":742},"line":15,"code":"    it(\"shows time in 24hr format\", async () => {\n      const timeRegex = /^(?:2[0-3]|[01]\\d):[0-5]\\d[0-5]\\d$/;\n      await helpers.testMatch(\".clock .time\", timeRegex);\n    });","file":"e2e/modules/clock_es_spec.js","skipped":false,"dir":"tests"},{"name":"shows date with correct format","suites":["Clock set to spanish language module","with default 12hr clock config"],"updatePoint":{"line":25,"column":38,"index":1141},"line":25,"code":"    it(\"shows date with correct format\", async () => {\n      const dateRegex = /^(?:lunes|martes|miércoles|jueves|viernes|sábado|domingo), \\d{1,2} de (?:enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre) de \\d{4}$/;\n      await helpers.testMatch(\".clock .date\", dateRegex);\n    });","file":"e2e/modules/clock_es_spec.js","skipped":false,"dir":"tests"},{"name":"shows time in 12hr format","suites":["Clock set to spanish language module","with default 12hr clock config"],"updatePoint":{"line":29,"column":33,"index":1457},"line":29,"code":"    it(\"shows time in 12hr format\", async () => {\n      const timeRegex = /^(?:1[0-2]|[1-9]):[0-5]\\d[0-5]\\d[ap]m$/;\n      await helpers.testMatch(\".clock .time\", timeRegex);\n    });","file":"e2e/modules/clock_es_spec.js","skipped":false,"dir":"tests"},{"name":"shows 12hr time with upper case AM/PM","suites":["Clock set to spanish language module","with showPeriodUpper config enabled"],"updatePoint":{"line":39,"column":45,"index":1883},"line":39,"code":"    it(\"shows 12hr time with upper case AM/PM\", async () => {\n      const timeRegex = /^(?:1[0-2]|[1-9]):[0-5]\\d[0-5]\\d[AP]M$/;\n      await helpers.testMatch(\".clock .time\", timeRegex);\n    });","file":"e2e/modules/clock_es_spec.js","skipped":false,"dir":"tests"},{"name":"shows week with correct format","suites":["Clock set to spanish language module","with showWeek config enabled"],"updatePoint":{"line":49,"column":38,"index":2288},"line":49,"code":"    it(\"shows week with correct format\", async () => {\n      const weekRegex = /^Semana [0-9]{1,2}$/;\n      await helpers.testMatch(\".clock .week\", weekRegex);\n    });","file":"e2e/modules/clock_es_spec.js","skipped":false,"dir":"tests"},{"name":"should show the date in the correct format","suites":["Clock module","with default 24hr clock config"],"updatePoint":{"line":12,"column":50,"index":445},"line":12,"code":"    it(\"should show the date in the correct format\", async () => {\n      const dateRegex = /^(?:Monday|Tuesday|Wednesday|Thursday|Friday|Saturday|Sunday), (?:January|February|March|April|May|June|July|August|September|October|November|December) \\d{1,2}, \\d{4}$/;\n      await helpers.testMatch(\".clock .date\", dateRegex);\n    });","file":"e2e/modules/clock_spec.js","skipped":false,"dir":"tests"},{"name":"should show the time in 24hr format","suites":["Clock module","with default 24hr clock config"],"updatePoint":{"line":16,"column":43,"index":767},"line":16,"code":"    it(\"should show the time in 24hr format\", async () => {\n      const timeRegex = /^(?:2[0-3]|[01]\\d):[0-5]\\d[0-5]\\d$/;\n      await helpers.testMatch(\".clock .time\", timeRegex);\n    });","file":"e2e/modules/clock_spec.js","skipped":false,"dir":"tests"},{"name":"should show the date in the correct format","suites":["Clock module","with default 12hr clock config"],"updatePoint":{"line":26,"column":50,"index":1175},"line":26,"code":"    it(\"should show the date in the correct format\", async () => {\n      const dateRegex = /^(?:Monday|Tuesday|Wednesday|Thursday|Friday|Saturday|Sunday), (?:January|February|March|April|May|June|July|August|September|October|November|December) \\d{1,2}, \\d{4}$/;\n      await helpers.testMatch(\".clock .date\", dateRegex);\n    });","file":"e2e/modules/clock_spec.js","skipped":false,"dir":"tests"},{"name":"should show the time in 12hr format","suites":["Clock module","with default 12hr clock config"],"updatePoint":{"line":30,"column":43,"index":1497},"line":30,"code":"    it(\"should show the time in 12hr format\", async () => {\n      const timeRegex = /^(?:1[0-2]|[1-9]):[0-5]\\d[0-5]\\d[ap]m$/;\n      await helpers.testMatch(\".clock .time\", timeRegex);\n    });","file":"e2e/modules/clock_spec.js","skipped":false,"dir":"tests"},{"name":"should show 12hr time with upper case AM/PM","suites":["Clock module","with showPeriodUpper config enabled"],"updatePoint":{"line":40,"column":51,"index":1926},"line":40,"code":"    it(\"should show 12hr time with upper case AM/PM\", async () => {\n      const timeRegex = /^(?:1[0-2]|[1-9]):[0-5]\\d[0-5]\\d[AP]M$/;\n      await helpers.testMatch(\".clock .time\", timeRegex);\n    });","file":"e2e/modules/clock_spec.js","skipped":false,"dir":"tests"},{"name":"should show 12hr time without seconds am/pm","suites":["Clock module","with displaySeconds config disabled"],"updatePoint":{"line":50,"column":51,"index":2360},"line":50,"code":"    it(\"should show 12hr time without seconds am/pm\", async () => {\n      const timeRegex = /^(?:1[0-2]|[1-9]):[0-5]\\d[ap]m$/;\n      await helpers.testMatch(\".clock .time\", timeRegex);\n    });","file":"e2e/modules/clock_spec.js","skipped":false,"dir":"tests"},{"name":"should not show the time when digital clock is shown","suites":["Clock module","with showTime config disabled"],"updatePoint":{"line":60,"column":60,"index":2778},"line":60,"code":"    it(\"should not show the time when digital clock is shown\", async () => {\n      const elem = await document.querySelector(\".clock .digital .time\");\n      expect(elem).toBe(null);\n    });","file":"e2e/modules/clock_spec.js","skipped":false,"dir":"tests"},{"name":"should show the week in the correct format","suites":["Clock module","with showWeek config enabled"],"updatePoint":{"line":70,"column":50,"index":3173},"line":70,"code":"    it(\"should show the week in the correct format\", async () => {\n      const weekRegex = /^Week [0-9]{1,2}$/;\n      await helpers.testMatch(\".clock .week\", weekRegex);\n    });","file":"e2e/modules/clock_spec.js","skipped":false,"dir":"tests"},{"name":"should show the week with the correct number of week of year","suites":["Clock module","with showWeek config enabled"],"updatePoint":{"line":74,"column":68,"index":3369},"line":74,"code":"    it(\"should show the week with the correct number of week of year\", async () => {\n      const currentWeekNumber = moment().week();\n      const weekToShow = `Week ${currentWeekNumber}`;\n      const elem = await helpers.waitForElement(\".clock .week\");\n      expect(elem).not.toBe(null);\n      expect(elem.textContent).toBe(weekToShow);\n    });","file":"e2e/modules/clock_spec.js","skipped":false,"dir":"tests"},{"name":"should show the analog clock face","suites":["Clock module","with analog clock face enabled"],"updatePoint":{"line":87,"column":41,"index":3902},"line":87,"code":"    it(\"should show the analog clock face\", async () => {\n      const elem = helpers.waitForElement(\".clock-circle\");\n      expect(elem).not.toBe(null);\n    });","file":"e2e/modules/clock_spec.js","skipped":false,"dir":"tests"},{"name":"Show anytime because if configure empty parts of day compliments and set anytime compliments","suites":["Compliments module","Feature anytime in compliments module","Set anytime and empty compliments for morning, evening and afternoon "],"updatePoint":{"line":24,"column":102,"index":1011},"line":24,"code":"      it(\"Show anytime because if configure empty parts of day compliments and set anytime compliments\", async () => {\n        await doTest([\"Anytime here\"]);\n      });","file":"e2e/modules/compliments_spec.js","skipped":false,"dir":"tests"},{"name":"Show anytime compliments","suites":["Compliments module","Feature anytime in compliments module","Only anytime present in configuration compliments"],"updatePoint":{"line":33,"column":34,"index":1376},"line":33,"code":"      it(\"Show anytime compliments\", async () => {\n        await doTest([\"Anytime here\"]);\n      });","file":"e2e/modules/compliments_spec.js","skipped":false,"dir":"tests"},{"name":"should show compliments from a remote file","suites":["Compliments module","remoteFile option"],"updatePoint":{"line":43,"column":50,"index":1715},"line":43,"code":"    it(\"should show compliments from a remote file\", async () => {\n      await doTest([\"Remote compliment file works!\"]);\n    });","file":"e2e/modules/compliments_spec.js","skipped":false,"dir":"tests"},{"name":"Test message helloworld module","suites":["Test helloworld module","helloworld set config text"],"updatePoint":{"line":11,"column":38,"index":410},"line":11,"code":"    it(\"Test message helloworld module\", async () => {\n      const elem = await helpers.waitForElement(\".helloworld\");\n      expect(elem).not.toBe(null);\n      expect(elem.textContent).toContain(\"Test HelloWorld Module\");\n    });","file":"e2e/modules/helloworld_spec.js","skipped":false,"dir":"tests"},{"name":"Test message helloworld module","suites":["Test helloworld module","helloworld default config text"],"updatePoint":{"line":22,"column":38,"index":866},"line":22,"code":"    it(\"Test message helloworld module\", async () => {\n      const elem = await helpers.waitForElement(\".helloworld\");\n      expect(elem).not.toBe(null);\n      expect(elem.textContent).toContain(\"Hello World!\");\n    });","file":"e2e/modules/helloworld_spec.js","skipped":false,"dir":"tests"},{"name":"should show the newsfeed title","suites":["Newsfeed module","Default configuration"],"updatePoint":{"line":11,"column":38,"index":393},"line":11,"code":"    it(\"should show the newsfeed title\", async () => {\n      const elem = await helpers.waitForElement(\".newsfeed .newsfeed-source\");\n      expect(elem).not.toBe(null);\n      expect(elem.textContent).toContain(\"Rodrigo Ramirez Blog\");\n    });","file":"e2e/modules/newsfeed_spec.js","skipped":false,"dir":"tests"},{"name":"should show the newsfeed article","suites":["Newsfeed module","Default configuration"],"updatePoint":{"line":16,"column":40,"index":638},"line":16,"code":"    it(\"should show the newsfeed article\", async () => {\n      const elem = await helpers.waitForElement(\".newsfeed .newsfeed-title\");\n      expect(elem).not.toBe(null);\n      expect(elem.textContent).toContain(\"QPanel\");\n    });","file":"e2e/modules/newsfeed_spec.js","skipped":false,"dir":"tests"},{"name":"should NOT show the newsfeed description","suites":["Newsfeed module","Default configuration"],"updatePoint":{"line":21,"column":48,"index":876},"line":21,"code":"    it(\"should NOT show the newsfeed description\", async () => {\n      await helpers.waitForElement(\".newsfeed\");\n      const element = document.querySelector(\".newsfeed .newsfeed-desc\");\n      expect(element).toBe(null);\n    });","file":"e2e/modules/newsfeed_spec.js","skipped":false,"dir":"tests"},{"name":"should not show articles with prohibited words","suites":["Newsfeed module","Custom configuration"],"updatePoint":{"line":32,"column":54,"index":1324},"line":32,"code":"    it(\"should not show articles with prohibited words\", async () => {\n      const elem = await helpers.waitForElement(\".newsfeed .newsfeed-title\");\n      expect(elem).not.toBe(null);\n      expect(elem.textContent).toContain(\"Problema VirtualBox\");\n    });","file":"e2e/modules/newsfeed_spec.js","skipped":false,"dir":"tests"},{"name":"should show the newsfeed description","suites":["Newsfeed module","Custom configuration"],"updatePoint":{"line":37,"column":44,"index":1571},"line":37,"code":"    it(\"should show the newsfeed description\", async () => {\n      const elem = await helpers.waitForElement(\".newsfeed .newsfeed-desc\");\n      expect(elem).not.toBe(null);\n      expect(elem.textContent.length).not.toBe(0);\n    });","file":"e2e/modules/newsfeed_spec.js","skipped":false,"dir":"tests"},{"name":"should show malformed url warning","suites":["Newsfeed module","Invalid configuration"],"updatePoint":{"line":48,"column":41,"index":2010},"line":48,"code":"    it(\"should show malformed url warning\", async () => {\n      const elem = await helpers.waitForElement(\".newsfeed .small\", \"No news at the moment.\");\n      expect(elem).not.toBe(null);\n      expect(elem.textContent).toContain(\"Error in the Newsfeed module. Malformed url.\");\n    });","file":"e2e/modules/newsfeed_spec.js","skipped":false,"dir":"tests"},{"name":"should show empty items info message","suites":["Newsfeed module","Ignore items"],"updatePoint":{"line":59,"column":44,"index":2499},"line":59,"code":"    it(\"should show empty items info message\", async () => {\n      const elem = await helpers.waitForElement(\".newsfeed .small\");\n      expect(elem).not.toBe(null);\n      expect(elem.textContent).toContain(\"No news at the moment.\");\n    });","file":"e2e/modules/newsfeed_spec.js","skipped":false,"dir":"tests"},{"name":"should render wind speed and wind direction","suites":["Weather module","Current weather","Default configuration"],"updatePoint":{"line":12,"column":53,"index":493},"line":12,"code":"      it(\"should render wind speed and wind direction\", async () => {\n        await weatherFunc.getText(\".weather .normal.medium span:nth-child(2)\", \"12 WSW\");\n      });","file":"e2e/modules/weather_current_spec.js","skipped":false,"dir":"tests"},{"name":"should render temperature with icon","suites":["Weather module","Current weather","Default configuration"],"updatePoint":{"line":15,"column":45,"index":655},"line":15,"code":"      it(\"should render temperature with icon\", async () => {\n        await weatherFunc.getText(\".weather .large.light span.bright\", \"1.5°\");\n      });","file":"e2e/modules/weather_current_spec.js","skipped":false,"dir":"tests"},{"name":"should render feels like temperature","suites":["Weather module","Current weather","Default configuration"],"updatePoint":{"line":18,"column":46,"index":808},"line":18,"code":"      it(\"should render feels like temperature\", async () => {\n        await weatherFunc.getText(\".weather .normal.medium.feelslike span.dimmed\", \"Feels like -5.6°\");\n      });","file":"e2e/modules/weather_current_spec.js","skipped":false,"dir":"tests"},{"name":"should render a compliment based on the current weather","suites":["Weather module","Compliments Integration"],"updatePoint":{"line":27,"column":63,"index":1199},"line":27,"code":"    it(\"should render a compliment based on the current weather\", async () => {\n      await weatherFunc.getText(\".compliments .module-content span\", \"snow\");\n    });","file":"e2e/modules/weather_current_spec.js","skipped":false,"dir":"tests"},{"name":"should render windUnits in beaufort","suites":["Weather module","Configuration Options"],"updatePoint":{"line":35,"column":43,"index":1528},"line":35,"code":"    it(\"should render windUnits in beaufort\", async () => {\n      await weatherFunc.getText(\".weather .normal.medium span:nth-child(2)\", \"6\");\n    });","file":"e2e/modules/weather_current_spec.js","skipped":false,"dir":"tests"},{"name":"should render windDirection with an arrow","suites":["Weather module","Configuration Options"],"updatePoint":{"line":38,"column":49,"index":1685},"line":38,"code":"    it(\"should render windDirection with an arrow\", async () => {\n      const elem = await helpers.waitForElement(\".weather .normal.medium sup i.fa-long-arrow-alt-down\");\n      expect(elem).not.toBe(null);\n      expect(elem.outerHTML).toContain(\"transform:rotate(250deg);\");\n    });","file":"e2e/modules/weather_current_spec.js","skipped":false,"dir":"tests"},{"name":"should render humidity","suites":["Weather module","Configuration Options"],"updatePoint":{"line":43,"column":30,"index":1949},"line":43,"code":"    it(\"should render humidity\", async () => {\n      await weatherFunc.getText(\".weather .normal.medium span:nth-child(3)\", \"93.7\");\n    });","file":"e2e/modules/weather_current_spec.js","skipped":false,"dir":"tests"},{"name":"should render degreeLabel for temp","suites":["Weather module","Configuration Options"],"updatePoint":{"line":46,"column":42,"index":2102},"line":46,"code":"    it(\"should render degreeLabel for temp\", async () => {\n      await weatherFunc.getText(\".weather .large.light span.bright\", \"1°C\");\n    });","file":"e2e/modules/weather_current_spec.js","skipped":false,"dir":"tests"},{"name":"should render degreeLabel for feels like","suites":["Weather module","Configuration Options"],"updatePoint":{"line":49,"column":48,"index":2252},"line":49,"code":"    it(\"should render degreeLabel for feels like\", async () => {\n      await weatherFunc.getText(\".weather .normal.medium.feelslike span.dimmed\", \"Feels like -6°C\");\n    });","file":"e2e/modules/weather_current_spec.js","skipped":false,"dir":"tests"},{"name":"should render wind in imperial units","suites":["Weather module","Current weather with imperial units"],"updatePoint":{"line":57,"column":44,"index":2617},"line":57,"code":"    it(\"should render wind in imperial units\", async () => {\n      await weatherFunc.getText(\".weather .normal.medium span:nth-child(2)\", \"26 WSW\");\n    });","file":"e2e/modules/weather_current_spec.js","skipped":false,"dir":"tests"},{"name":"should render temperatures in fahrenheit","suites":["Weather module","Current weather with imperial units"],"updatePoint":{"line":60,"column":48,"index":2778},"line":60,"code":"    it(\"should render temperatures in fahrenheit\", async () => {\n      await weatherFunc.getText(\".weather .large.light span.bright\", \"34,7°\");\n    });","file":"e2e/modules/weather_current_spec.js","skipped":false,"dir":"tests"},{"name":"should render 'feels like' in fahrenheit","suites":["Weather module","Current weather with imperial units"],"updatePoint":{"line":63,"column":48,"index":2930},"line":63,"code":"    it(\"should render 'feels like' in fahrenheit\", async () => {\n      await weatherFunc.getText(\".weather .normal.medium.feelslike span.dimmed\", \"Feels like 21,9°\");\n    });","file":"e2e/modules/weather_current_spec.js","skipped":false,"dir":"tests"},{"name":"should render day ","suites":["Weather module: Weather Forecast","Default configuration"],"updatePoint":{"line":13,"column":34,"index":557},"line":13,"code":"      it(`should render day ${day}`, async () => {\n        await weatherFunc.getText(`.weather table.small tr:nth-child(${index + 1}) td:nth-child(1)`, day);\n      });","file":"e2e/modules/weather_forecast_spec.js","skipped":false,"dir":"tests"},{"name":"should render icon ","suites":["Weather module: Weather Forecast","Default configuration"],"updatePoint":{"line":19,"column":36,"index":865},"line":19,"code":"      it(`should render icon ${icon}`, async () => {\n        const elem = await helpers.waitForElement(`.weather table.small tr:nth-child(${index + 1}) td:nth-child(2) span.wi-${icon}`);\n        expect(elem).not.toBe(null);\n      });","file":"e2e/modules/weather_forecast_spec.js","skipped":false,"dir":"tests"},{"name":"should render max temperature ","suites":["Weather module: Weather Forecast","Default configuration"],"updatePoint":{"line":26,"column":47,"index":1238},"line":26,"code":"      it(`should render max temperature ${temp}`, async () => {\n        await weatherFunc.getText(`.weather table.small tr:nth-child(${index + 1}) td:nth-child(3)`, temp);\n      });","file":"e2e/modules/weather_forecast_spec.js","skipped":false,"dir":"tests"},{"name":"should render min temperature ","suites":["Weather module: Weather Forecast","Default configuration"],"updatePoint":{"line":32,"column":47,"index":1548},"line":32,"code":"      it(`should render min temperature ${temp}`, async () => {\n        await weatherFunc.getText(`.weather table.small tr:nth-child(${index + 1}) td:nth-child(4)`, temp);\n      });","file":"e2e/modules/weather_forecast_spec.js","skipped":false,"dir":"tests"},{"name":"should render fading of rows with opacity=","suites":["Weather module: Weather Forecast","Default configuration"],"updatePoint":{"line":38,"column":62,"index":1884},"line":38,"code":"      it(`should render fading of rows with opacity=${opacity}`, async () => {\n        const elem = await helpers.waitForElement(`.weather table.small tr:nth-child(${index + 1})`);\n        expect(elem).not.toBe(null);\n        expect(elem.outerHTML).toContain(`<tr style=\"opacity: ${opacity};\">`);\n      });","file":"e2e/modules/weather_forecast_spec.js","skipped":false,"dir":"tests"},{"name":"should render day ","suites":["Weather module: Weather Forecast","Absolute configuration"],"updatePoint":{"line":51,"column":34,"index":2458},"line":51,"code":"      it(`should render day ${day}`, async () => {\n        await weatherFunc.getText(`.weather table.small tr:nth-child(${index + 1}) td:nth-child(1)`, day);\n      });","file":"e2e/modules/weather_forecast_spec.js","skipped":false,"dir":"tests"},{"name":"should render custom table class","suites":["Weather module: Weather Forecast","Configuration Options"],"updatePoint":{"line":60,"column":40,"index":2822},"line":60,"code":"    it(\"should render custom table class\", async () => {\n      const elem = await helpers.waitForElement(\".weather table.myTableClass\");\n      expect(elem).not.toBe(null);\n    });","file":"e2e/modules/weather_forecast_spec.js","skipped":false,"dir":"tests"},{"name":"should render colored rows","suites":["Weather module: Weather Forecast","Configuration Options"],"updatePoint":{"line":64,"column":34,"index":2996},"line":64,"code":"    it(\"should render colored rows\", async () => {\n      const table = await helpers.waitForElement(\".weather table.myTableClass\");\n      expect(table).not.toBe(null);\n      expect(table.rows).not.toBe(null);\n      expect(table.rows.length).toBe(5);\n    });","file":"e2e/modules/weather_forecast_spec.js","skipped":false,"dir":"tests"},{"name":"should render precipitation amount ","suites":["Weather module: Weather Forecast","Configuration Options"],"updatePoint":{"line":73,"column":63,"index":3430},"line":73,"code":"        it(`should render precipitation amount ${precipitation}`, async () => {\n          await weatherFunc.getText(`.weather table tr:nth-child(${index + 1}) td.precipitation-amount`, precipitation);\n        });","file":"e2e/modules/weather_forecast_spec.js","skipped":false,"dir":"tests"},{"name":"should render custom decimalSymbol = '_' for temp ","suites":["Weather module: Weather Forecast","Forecast weather with imperial units","Temperature units"],"updatePoint":{"line":86,"column":69,"index":4036},"line":86,"code":"        it(`should render custom decimalSymbol = '_' for temp ${temp}`, async () => {\n          await weatherFunc.getText(`.weather table.small tr:nth-child(${index + 1}) td:nth-child(3)`, temp);\n        });","file":"e2e/modules/weather_forecast_spec.js","skipped":false,"dir":"tests"},{"name":"should render precipitation amount ","suites":["Weather module: Weather Forecast","Forecast weather with imperial units","Precipitation units"],"updatePoint":{"line":95,"column":65,"index":4453},"line":95,"code":"          it(`should render precipitation amount ${precipitation}`, async () => {\n            await weatherFunc.getText(`.weather table.small tr:nth-child(${index + 1}) td.precipitation-amount`, precipitation);\n          });","file":"e2e/modules/weather_forecast_spec.js","skipped":false,"dir":"tests"},{"name":"should render forecast for hour ","suites":["Weather module: Weather Hourly Forecast","Default configuration"],"updatePoint":{"line":13,"column":49,"index":601},"line":13,"code":"      it(`should render forecast for hour ${hour}`, async () => {\n        await weatherFunc.getText(`.weather table.small tr:nth-child(${index + 1}) td.day`, hour);\n      });","file":"e2e/modules/weather_hourly_spec.js","skipped":false,"dir":"tests"},{"name":"should render forecast for hour ","suites":["Weather module: Weather Hourly Forecast","Hourly weather options","Hourly increments of 2"],"updatePoint":{"line":25,"column":51,"index":1151},"line":25,"code":"        it(`should render forecast for hour ${hour}`, async () => {\n          await weatherFunc.getText(`.weather table.small tr:nth-child(${index + 1}) td.day`, hour);\n        });","file":"e2e/modules/weather_hourly_spec.js","skipped":false,"dir":"tests"},{"name":"should render precipitation amount ","suites":["Weather module: Weather Hourly Forecast","Show precipitations","Shows precipitation amount"],"updatePoint":{"line":39,"column":58,"index":1754},"line":39,"code":"          it(`should render precipitation amount ${amount}`, async () => {\n            await weatherFunc.getText(`.weather table.small tr:nth-child(${index + 1}) td.precipitation-amount`, amount);\n          });","file":"e2e/modules/weather_hourly_spec.js","skipped":false,"dir":"tests"},{"name":"should render probability ","suites":["Weather module: Weather Hourly Forecast","Show precipitations","Shows precipitation probability"],"updatePoint":{"line":49,"column":46,"index":2190},"line":49,"code":"          it(`should render probability ${pop}`, async () => {\n            await weatherFunc.getText(`.weather table.small tr:nth-child(${index + 1}) td.precipitation-prob`, pop);\n          });","file":"e2e/modules/weather_hourly_spec.js","skipped":false,"dir":"tests"},{"name":"should return 200","suites":["port directive configuration","Set port 8090"],"updatePoint":{"line":10,"column":25,"index":340},"line":10,"code":"    it(\"should return 200\", async () => {\n      const res = await helpers.fetch(\"http://localhost:8090\");\n      expect(res.status).toBe(200);\n    });","file":"e2e/port_spec.js","skipped":false,"dir":"tests"},{"name":"should return 200","suites":["port directive configuration","Set port 8100 on environment variable MM_PORT"],"updatePoint":{"line":22,"column":25,"index":770},"line":22,"code":"    it(\"should return 200\", async () => {\n      const res = await helpers.fetch(\"http://localhost:8100\");\n      expect(res.status).toBe(200);\n    });","file":"e2e/port_spec.js","skipped":false,"dir":"tests"},{"name":"should return 200","suites":["templated config with port variable"],"updatePoint":{"line":9,"column":23,"index":301},"line":9,"code":"  it(\"should return 200\", async () => {\n    const res = await helpers.fetch(\"http://localhost:8090\");\n    expect(res.status).toBe(200);\n  });","file":"e2e/template_spec.js","skipped":false,"dir":"tests"},{"name":"should have a translation file in the specified path","suites":["Translations"],"updatePoint":{"line":25,"column":58,"index":737},"line":25,"code":"  it(\"should have a translation file in the specified path\", () => {\n    for (let language in translations) {\n      const file = fs.statSync(translations[language]);\n      expect(file.isFile()).toBe(true);\n    }\n  });","file":"e2e/translations_spec.js","skipped":false,"dir":"tests"},{"name":"should load translation file","suites":["Translations","loadTranslations"],"updatePoint":{"line":41,"column":36,"index":1395},"line":41,"code":"    it(\"should load translation file\", done => {\n      dom.window.onload = async () => {\n        const {\n          Translator,\n          Module,\n          config\n        } = dom.window;\n        config.language = \"en\";\n        Translator.load = sinon.stub().callsFake((_m, _f, _fb) => null);\n        Module.register(\"name\", {\n          getTranslations: () => translations\n        });\n        const MMM = Module.create(\"name\");\n        await MMM.loadTranslations();\n        expect(Translator.load.args.length).toBe(1);\n        expect(Translator.load.calledWith(MMM, \"translations/en.json\", false)).toBe(true);\n        done();\n      };\n    });","file":"e2e/translations_spec.js","skipped":false,"dir":"tests"},{"name":"should load translation + fallback file","suites":["Translations","loadTranslations"],"updatePoint":{"line":60,"column":47,"index":2047},"line":60,"code":"    it(\"should load translation + fallback file\", done => {\n      dom.window.onload = async () => {\n        const {\n          Translator,\n          Module\n        } = dom.window;\n        Translator.load = sinon.stub().callsFake((_m, _f, _fb) => null);\n        Module.register(\"name\", {\n          getTranslations: () => translations\n        });\n        const MMM = Module.create(\"name\");\n        await MMM.loadTranslations();\n        expect(Translator.load.args.length).toBe(2);\n        expect(Translator.load.calledWith(MMM, \"translations/de.json\", false)).toBe(true);\n        expect(Translator.load.calledWith(MMM, \"translations/en.json\", true)).toBe(true);\n        done();\n      };\n    });","file":"e2e/translations_spec.js","skipped":false,"dir":"tests"},{"name":"should load translation fallback file","suites":["Translations","loadTranslations"],"updatePoint":{"line":78,"column":45,"index":2737},"line":78,"code":"    it(\"should load translation fallback file\", done => {\n      dom.window.onload = async () => {\n        const {\n          Translator,\n          Module,\n          config\n        } = dom.window;\n        config.language = \"--\";\n        Translator.load = sinon.stub().callsFake((_m, _f, _fb) => null);\n        Module.register(\"name\", {\n          getTranslations: () => translations\n        });\n        const MMM = Module.create(\"name\");\n        await MMM.loadTranslations();\n        expect(Translator.load.args.length).toBe(1);\n        expect(Translator.load.calledWith(MMM, \"translations/en.json\", true)).toBe(true);\n        done();\n      };\n    });","file":"e2e/translations_spec.js","skipped":false,"dir":"tests"},{"name":"should load no file","suites":["Translations","loadTranslations"],"updatePoint":{"line":97,"column":27,"index":3368},"line":97,"code":"    it(\"should load no file\", done => {\n      dom.window.onload = async () => {\n        const {\n          Translator,\n          Module\n        } = dom.window;\n        Translator.load = sinon.stub();\n        Module.register(\"name\", {});\n        const MMM = Module.create(\"name\");\n        await MMM.loadTranslations();\n        expect(Translator.load.callCount).toBe(0);\n        done();\n      };\n    });","file":"e2e/translations_spec.js","skipped":false,"dir":"tests"},{"name":"should parse ","suites":["Translations","Parsing language files through the Translator class"],"updatePoint":{"line":120,"column":34,"index":4016},"line":120,"code":"      it(`should parse ${language}`, done => {\n        const dom = new JSDOM(`<script>var translations = ${JSON.stringify(translations)}; var Log = {log: () => {}};</script>\\\n\t\t\t\t\t<script src=\"file://${path.join(__dirname, \"..\", \"..\", \"js\", \"translator.js\")}\">`, {\n          runScripts: \"dangerously\",\n          resources: \"usable\"\n        });\n        dom.window.onload = async () => {\n          const {\n            Translator\n          } = dom.window;\n          await Translator.load(mmm, translations[language], false);\n          expect(typeof Translator.translations[mmm.name]).toBe(\"object\");\n          expect(Object.keys(Translator.translations[mmm.name]).length).toBeGreaterThanOrEqual(1);\n          done();\n        };\n      });","file":"e2e/translations_spec.js","skipped":false,"dir":"tests"},{"name":" keys should be in base","suites":["Translations","Same keys","Translation keys of "],"updatePoint":{"line":183,"column":46,"index":6413},"line":183,"code":"        it(`${language} keys should be in base`, () => {\n          keys.forEach(key => {\n            expect(base.indexOf(key)).toBeGreaterThanOrEqual(0);\n          });\n        });","file":"e2e/translations_spec.js","skipped":false,"dir":"tests"},{"name":" should contain all base keys","suites":["Translations","Same keys","Translation keys of "],"updatePoint":{"line":188,"column":52,"index":6599},"line":188,"code":"        it(`${language} should contain all base keys`, () => {\n          // TODO: when all translations are fixed, use\n          // expect(keys).toEqual(base);\n          // instead of the try-catch-block\n\n          try {\n            expect(keys).toEqual(base);\n          } catch (e) {\n            if (e.message.match(/expect.*toEqual/)) {\n              const diff = base.filter(key => !keys.includes(key));\n              missing.push(`Missing Translations for language ${language}: ${diff}`);\n            } else {\n              throw e;\n            }\n          }\n        });","file":"e2e/translations_spec.js","skipped":false,"dir":"tests"},{"name":"should return 200 HTTP code for vendor \"\"","suites":["Vendors","Get list vendors"],"updatePoint":{"line":12,"column":60,"index":456},"line":12,"code":"      it(`should return 200 HTTP code for vendor \"${vendor}\"`, async () => {\n        const urlVendor = `http://localhost:8080/vendor/${vendors[vendor]}`;\n        const res = await helpers.fetch(urlVendor);\n        expect(res.status).toBe(200);\n      });","file":"e2e/vendor_spec.js","skipped":false,"dir":"tests"},{"name":"should return 404 HTTP code for vendor https://localhost/\"\"","suites":["Vendors","Get list vendors"],"updatePoint":{"line":19,"column":78,"index":781},"line":19,"code":"      it(`should return 404 HTTP code for vendor https://localhost/\"${vendor}\"`, async () => {\n        const urlVendor = `http://localhost:8080/${vendors[vendor]}`;\n        const res = await helpers.fetch(urlVendor);\n        expect(res.status).toBe(404);\n      });","file":"e2e/vendor_spec.js","skipped":false,"dir":"tests"},{"name":"should open browserwindow","suites":["Electron app environment"],"updatePoint":{"line":10,"column":31,"index":336},"line":10,"code":"  it(\"should open browserwindow\", async () => {\n    const module = await helpers.getElement(\"#module_0_helloworld\");\n    expect(await module.textContent()).toContain(\"Test Display Header\");\n    expect(global.electronApp.windows().length).toBe(1);\n  });","file":"electron/env_spec.js","skipped":false,"dir":"tests"},{"name":"should open browserwindow and dev console","suites":["Development console tests"],"updatePoint":{"line":23,"column":47,"index":862},"line":23,"code":"  it(\"should open browserwindow and dev console\", async () => {\n    while (global.electronApp.windows().length < 2) await events.once(global.electronApp, \"window\");\n    const pageArray = await global.electronApp.windows();\n    expect(pageArray.length).toBe(2);\n    for (const page of pageArray) {\n      expect([\"MagicMirror²\", \"DevTools\"]).toContain(await page.title());\n    }\n  });","file":"electron/env_spec.js","skipped":false,"dir":"tests"},{"name":"has css class dayBeforeYesterday","suites":["Calendar module","Test css classes"],"updatePoint":{"line":16,"column":40,"index":517},"line":16,"code":"    it(\"has css class dayBeforeYesterday\", async () => {\n      await helpers.startApplication(\"tests/configs/modules/calendar/custom.js\", \"03 Jan 2030 12:30:00 GMT\");\n      await doTest(\".dayBeforeYesterday\");\n    });","file":"electron/modules/calendar_spec.js","skipped":false,"dir":"tests"},{"name":"has css class yesterday","suites":["Calendar module","Test css classes"],"updatePoint":{"line":20,"column":31,"index":726},"line":20,"code":"    it(\"has css class yesterday\", async () => {\n      await helpers.startApplication(\"tests/configs/modules/calendar/custom.js\", \"02 Jan 2030 12:30:00 GMT\");\n      await doTest(\".yesterday\");\n    });","file":"electron/modules/calendar_spec.js","skipped":false,"dir":"tests"},{"name":"has css class today","suites":["Calendar module","Test css classes"],"updatePoint":{"line":24,"column":27,"index":922},"line":24,"code":"    it(\"has css class today\", async () => {\n      await helpers.startApplication(\"tests/configs/modules/calendar/custom.js\", \"01 Jan 2030 12:30:00 GMT\");\n      await doTest(\".today\");\n    });","file":"electron/modules/calendar_spec.js","skipped":false,"dir":"tests"},{"name":"has css class tomorrow","suites":["Calendar module","Test css classes"],"updatePoint":{"line":28,"column":30,"index":1117},"line":28,"code":"    it(\"has css class tomorrow\", async () => {\n      await helpers.startApplication(\"tests/configs/modules/calendar/custom.js\", \"31 Dec 2029 12:30:00 GMT\");\n      await doTest(\".tomorrow\");\n    });","file":"electron/modules/calendar_spec.js","skipped":false,"dir":"tests"},{"name":"has css class dayAfterTomorrow","suites":["Calendar module","Test css classes"],"updatePoint":{"line":32,"column":38,"index":1323},"line":32,"code":"    it(\"has css class dayAfterTomorrow\", async () => {\n      await helpers.startApplication(\"tests/configs/modules/calendar/custom.js\", \"30 Dec 2029 12:30:00 GMT\");\n      await doTest(\".dayAfterTomorrow\");\n    });","file":"electron/modules/calendar_spec.js","skipped":false,"dir":"tests"},{"name":"Morning compliments for that part of day","suites":["Compliments module","parts of days"],"updatePoint":{"line":18,"column":48,"index":625},"line":18,"code":"    it(\"Morning compliments for that part of day\", async () => {\n      await helpers.startApplication(\"tests/configs/modules/compliments/compliments_parts_day.js\", \"01 Oct 2022 10:00:00 GMT\");\n      await doTest([\"Hi\", \"Good Morning\", \"Morning test\"]);\n    });","file":"electron/modules/compliments_spec.js","skipped":false,"dir":"tests"},{"name":"Afternoon show Compliments for that part of day","suites":["Compliments module","parts of days"],"updatePoint":{"line":22,"column":55,"index":893},"line":22,"code":"    it(\"Afternoon show Compliments for that part of day\", async () => {\n      await helpers.startApplication(\"tests/configs/modules/compliments/compliments_parts_day.js\", \"01 Oct 2022 15:00:00 GMT\");\n      await doTest([\"Hello\", \"Good Afternoon\", \"Afternoon test\"]);\n    });","file":"electron/modules/compliments_spec.js","skipped":false,"dir":"tests"},{"name":"Evening show Compliments for that part of day","suites":["Compliments module","parts of days"],"updatePoint":{"line":26,"column":53,"index":1166},"line":26,"code":"    it(\"Evening show Compliments for that part of day\", async () => {\n      await helpers.startApplication(\"tests/configs/modules/compliments/compliments_parts_day.js\", \"01 Oct 2022 20:00:00 GMT\");\n      await doTest([\"Hello There\", \"Good Evening\", \"Evening test\"]);\n    });","file":"electron/modules/compliments_spec.js","skipped":false,"dir":"tests"},{"name":"Show happy new year compliment on new years day","suites":["Compliments module","Feature date in compliments module","Set date and empty compliments for anytime, morning, evening and afternoon"],"updatePoint":{"line":33,"column":57,"index":1607},"line":33,"code":"      it(\"Show happy new year compliment on new years day\", async () => {\n        await helpers.startApplication(\"tests/configs/modules/compliments/compliments_date.js\", \"01 Jan 2022 10:00:00 GMT\");\n        await doTest([\"Happy new year!\"]);\n      });","file":"electron/modules/compliments_spec.js","skipped":false,"dir":"tests"},{"name":"should render sunrise","suites":["Weather module","Current weather with sunrise"],"updatePoint":{"line":11,"column":29,"index":455},"line":11,"code":"    it(\"should render sunrise\", async () => {\n      await weatherHelper.getText(\".weather .normal.medium span:nth-child(4)\", \"7:00 am\");\n    });","file":"electron/modules/weather_spec.js","skipped":false,"dir":"tests"},{"name":"should render sunset","suites":["Weather module","Current weather with sunset"],"updatePoint":{"line":19,"column":28,"index":814},"line":19,"code":"    it(\"should render sunset\", async () => {\n      await weatherHelper.getText(\".weather .normal.medium span:nth-child(4)\", \"3:45 pm\");\n    });","file":"electron/modules/weather_spec.js","skipped":false,"dir":"tests"},{"name":"should clone object","suites":["File js/class","Test function cloneObject"],"updatePoint":{"line":23,"column":27,"index":620},"line":23,"code":"    it(\"should clone object\", () => {\n      const expected = {\n        name: \"Rodrigo\",\n        web: \"https://rodrigoramirez.com\",\n        project: \"MagicMirror\"\n      };\n      const obj = clone(expected);\n      expect(obj).toEqual(expected);\n      expect(expected === obj).toBe(false);\n    });","file":"unit/classes/class_spec.js","skipped":false,"dir":"tests"},{"name":"should clone array","suites":["File js/class","Test function cloneObject"],"updatePoint":{"line":33,"column":26,"index":914},"line":33,"code":"    it(\"should clone array\", () => {\n      const expected = [1, null, undefined, \"TEST\"];\n      const obj = clone(expected);\n      expect(obj).toEqual(expected);\n      expect(expected === obj).toBe(false);\n    });","file":"unit/classes/class_spec.js","skipped":false,"dir":"tests"},{"name":"should clone number","suites":["File js/class","Test function cloneObject"],"updatePoint":{"line":39,"column":27,"index":1129},"line":39,"code":"    it(\"should clone number\", () => {\n      let expected = 1;\n      let obj = clone(expected);\n      expect(obj).toBe(expected);\n      expected = 1.23;\n      obj = clone(expected);\n      expect(obj).toBe(expected);\n    });","file":"unit/classes/class_spec.js","skipped":false,"dir":"tests"},{"name":"should clone string","suites":["File js/class","Test function cloneObject"],"updatePoint":{"line":47,"column":27,"index":1352},"line":47,"code":"    it(\"should clone string\", () => {\n      const expected = \"Perfect stranger\";\n      const obj = clone(expected);\n      expect(obj).toBe(expected);\n    });","file":"unit/classes/class_spec.js","skipped":false,"dir":"tests"},{"name":"should clone undefined","suites":["File js/class","Test function cloneObject"],"updatePoint":{"line":52,"column":30,"index":1513},"line":52,"code":"    it(\"should clone undefined\", () => {\n      const expected = undefined;\n      const obj = clone(expected);\n      expect(obj).toBe(expected);\n    });","file":"unit/classes/class_spec.js","skipped":false,"dir":"tests"},{"name":"should clone null","suites":["File js/class","Test function cloneObject"],"updatePoint":{"line":57,"column":25,"index":1660},"line":57,"code":"    it(\"should clone null\", () => {\n      const expected = null;\n      const obj = clone(expected);\n      expect(obj).toBe(expected);\n    });","file":"unit/classes/class_spec.js","skipped":false,"dir":"tests"},{"name":"should clone nested object","suites":["File js/class","Test function cloneObject"],"updatePoint":{"line":62,"column":34,"index":1811},"line":62,"code":"    it(\"should clone nested object\", () => {\n      const expected = {\n        name: \"fewieden\",\n        link: \"https://github.com/fewieden\",\n        versions: [\"2.0\", \"2.1\", \"2.2\"],\n        answerForAllQuestions: 42,\n        properties: {\n          items: [{\n            foo: \"bar\"\n          }, {\n            lorem: \"ipsum\"\n          }],\n          invalid: undefined,\n          nothing: null\n        }\n      };\n      const obj = clone(expected);\n      expect(obj).toEqual(expected);\n      expect(expected === obj).toBe(false);\n      expect(expected.versions === obj.versions).toBe(false);\n      expect(expected.properties === obj.properties).toBe(false);\n      expect(expected.properties.items === obj.properties.items).toBe(false);\n      expect(expected.properties.items[0] === obj.properties.items[0]).toBe(false);\n      expect(expected.properties.items[1] === obj.properties.items[1]).toBe(false);\n    });","file":"unit/classes/class_spec.js","skipped":false,"dir":"tests"},{"name":"should clone object and log lockStrings","suites":["File js/class","Test function cloneObject","Test lockstring code"],"updatePoint":{"line":98,"column":49,"index":3022},"line":98,"code":"      it(\"should clone object and log lockStrings\", () => {\n        const expected = {\n          name: \"Module\",\n          lockStrings: \"stringLock\"\n        };\n        const obj = clone(expected);\n        expect(obj).toEqual(expected);\n        expect(expected === obj).toBe(false);\n      });","file":"unit/classes/class_spec.js","skipped":false,"dir":"tests"},{"name":"should be an object","suites":["Deprecated"],"updatePoint":{"line":3,"column":25,"index":111},"line":3,"code":"  it(\"should be an object\", () => {\n    expect(typeof deprecated).toBe(\"object\");\n  });","file":"unit/classes/deprecated_spec.js","skipped":false,"dir":"tests"},{"name":"should contain configs array with deprecated options as strings","suites":["Deprecated"],"updatePoint":{"line":6,"column":69,"index":243},"line":6,"code":"  it(\"should contain configs array with deprecated options as strings\", () => {\n    expect(Array.isArray([\"deprecated.configs\"])).toBe(true);\n    for (let option of deprecated.configs) {\n      expect(typeof option).toBe(\"string\");\n    }\n    expect(deprecated.configs).toEqual(expect.arrayContaining([\"kioskmode\"]));\n  });","file":"unit/classes/deprecated_spec.js","skipped":false,"dir":"tests"},{"name":"should return custom module translation","suites":["Translator","translate"],"updatePoint":{"line":70,"column":47,"index":1908},"line":70,"code":"    it(\"should return custom module translation\", done => {\n      const dom = new JSDOM(`<script src=\"file://${path.join(__dirname, \"..\", \"..\", \"..\", \"js\", \"translator.js\")}\">`, {\n        runScripts: \"dangerously\",\n        resources: \"usable\"\n      });\n      dom.window.onload = () => {\n        const {\n          Translator\n        } = dom.window;\n        setTranslations(Translator);\n        let translation = Translator.translate({\n          name: \"MMM-Module\"\n        }, \"Hello\");\n        expect(translation).toBe(\"Hallo\");\n        translation = Translator.translate({\n          name: \"MMM-Module\"\n        }, \"Hello {username}\", {\n          username: \"fewieden\"\n        });\n        expect(translation).toBe(\"Hallo fewieden\");\n        done();\n      };\n    });","file":"unit/classes/translator_spec.js","skipped":false,"dir":"tests"},{"name":"should return core translation","suites":["Translator","translate"],"updatePoint":{"line":93,"column":38,"index":2661},"line":93,"code":"    it(\"should return core translation\", done => {\n      const dom = new JSDOM(`<script src=\"file://${path.join(__dirname, \"..\", \"..\", \"..\", \"js\", \"translator.js\")}\">`, {\n        runScripts: \"dangerously\",\n        resources: \"usable\"\n      });\n      dom.window.onload = () => {\n        const {\n          Translator\n        } = dom.window;\n        setTranslations(Translator);\n        let translation = Translator.translate({\n          name: \"MMM-Module\"\n        }, \"FOO\");\n        expect(translation).toBe(\"Foo\");\n        translation = Translator.translate({\n          name: \"MMM-Module\"\n        }, \"BAR {something}\", {\n          something: \"Lorem Ipsum\"\n        });\n        expect(translation).toBe(\"Bar Lorem Ipsum\");\n        done();\n      };\n    });","file":"unit/classes/translator_spec.js","skipped":false,"dir":"tests"},{"name":"should return custom module translation fallback","suites":["Translator","translate"],"updatePoint":{"line":116,"column":56,"index":3432},"line":116,"code":"    it(\"should return custom module translation fallback\", done => {\n      const dom = new JSDOM(`<script src=\"file://${path.join(__dirname, \"..\", \"..\", \"..\", \"js\", \"translator.js\")}\">`, {\n        runScripts: \"dangerously\",\n        resources: \"usable\"\n      });\n      dom.window.onload = () => {\n        const {\n          Translator\n        } = dom.window;\n        setTranslations(Translator);\n        const translation = Translator.translate({\n          name: \"MMM-Module\"\n        }, \"A key\");\n        expect(translation).toBe(\"A translation\");\n        done();\n      };\n    });","file":"unit/classes/translator_spec.js","skipped":false,"dir":"tests"},{"name":"should return core translation fallback","suites":["Translator","translate"],"updatePoint":{"line":133,"column":47,"index":4002},"line":133,"code":"    it(\"should return core translation fallback\", done => {\n      const dom = new JSDOM(`<script src=\"file://${path.join(__dirname, \"..\", \"..\", \"..\", \"js\", \"translator.js\")}\">`, {\n        runScripts: \"dangerously\",\n        resources: \"usable\"\n      });\n      dom.window.onload = () => {\n        const {\n          Translator\n        } = dom.window;\n        setTranslations(Translator);\n        const translation = Translator.translate({\n          name: \"MMM-Module\"\n        }, \"Fallback\");\n        expect(translation).toBe(\"core fallback\");\n        done();\n      };\n    });","file":"unit/classes/translator_spec.js","skipped":false,"dir":"tests"},{"name":"should return translation with placeholder for missing variables","suites":["Translator","translate"],"updatePoint":{"line":150,"column":72,"index":4600},"line":150,"code":"    it(\"should return translation with placeholder for missing variables\", done => {\n      const dom = new JSDOM(`<script src=\"file://${path.join(__dirname, \"..\", \"..\", \"..\", \"js\", \"translator.js\")}\">`, {\n        runScripts: \"dangerously\",\n        resources: \"usable\"\n      });\n      dom.window.onload = () => {\n        const {\n          Translator\n        } = dom.window;\n        setTranslations(Translator);\n        const translation = Translator.translate({\n          name: \"MMM-Module\"\n        }, \"Hello {username}\");\n        expect(translation).toBe(\"Hallo {username}\");\n        done();\n      };\n    });","file":"unit/classes/translator_spec.js","skipped":false,"dir":"tests"},{"name":"should return key if no translation was found","suites":["Translator","translate"],"updatePoint":{"line":167,"column":53,"index":5190},"line":167,"code":"    it(\"should return key if no translation was found\", done => {\n      const dom = new JSDOM(`<script src=\"file://${path.join(__dirname, \"..\", \"..\", \"..\", \"js\", \"translator.js\")}\">`, {\n        runScripts: \"dangerously\",\n        resources: \"usable\"\n      });\n      dom.window.onload = () => {\n        const {\n          Translator\n        } = dom.window;\n        setTranslations(Translator);\n        const translation = Translator.translate({\n          name: \"MMM-Module\"\n        }, \"MISSING\");\n        expect(translation).toBe(\"MISSING\");\n        done();\n      };\n    });","file":"unit/classes/translator_spec.js","skipped":false,"dir":"tests"},{"name":"should load translations","suites":["Translator","load"],"updatePoint":{"line":192,"column":32,"index":5918},"line":192,"code":"    it(\"should load translations\", done => {\n      const dom = new JSDOM(`<script>var Log = {log: () => {}};</script><script src=\"file://${path.join(__dirname, \"..\", \"..\", \"..\", \"js\", \"translator.js\")}\">`, {\n        runScripts: \"dangerously\",\n        resources: \"usable\"\n      });\n      dom.window.onload = async () => {\n        const {\n          Translator\n        } = dom.window;\n        const file = \"translation_test.json\";\n        await Translator.load(mmm, file, false);\n        const json = require(path.join(__dirname, \"..\", \"..\", \"..\", \"tests\", \"mocks\", file));\n        expect(Translator.translations[mmm.name]).toEqual(json);\n        done();\n      };\n    });","file":"unit/classes/translator_spec.js","skipped":false,"dir":"tests"},{"name":"should load translation fallbacks","suites":["Translator","load"],"updatePoint":{"line":208,"column":41,"index":6596},"line":208,"code":"    it(\"should load translation fallbacks\", done => {\n      const dom = new JSDOM(`<script>var Log = {log: () => {}};</script><script src=\"file://${path.join(__dirname, \"..\", \"..\", \"..\", \"js\", \"translator.js\")}\">`, {\n        runScripts: \"dangerously\",\n        resources: \"usable\"\n      });\n      dom.window.onload = async () => {\n        const {\n          Translator\n        } = dom.window;\n        const file = \"translation_test.json\";\n        await Translator.load(mmm, file, true);\n        const json = require(path.join(__dirname, \"..\", \"..\", \"..\", \"tests\", \"mocks\", file));\n        expect(Translator.translationsFallback[mmm.name]).toEqual(json);\n        done();\n      };\n    });","file":"unit/classes/translator_spec.js","skipped":false,"dir":"tests"},{"name":"should not load translations, if module fallback exists","suites":["Translator","load"],"updatePoint":{"line":224,"column":63,"index":7303},"line":224,"code":"    it(\"should not load translations, if module fallback exists\", done => {\n      const dom = new JSDOM(`<script>var Log = {log: () => {}};</script><script src=\"file://${path.join(__dirname, \"..\", \"..\", \"..\", \"js\", \"translator.js\")}\">`, {\n        runScripts: \"dangerously\",\n        resources: \"usable\"\n      });\n      dom.window.onload = async () => {\n        const {\n          Translator,\n          XMLHttpRequest\n        } = dom.window;\n        const file = \"translation_test.json\";\n        XMLHttpRequest.prototype.send = () => {\n          throw new Error(\"Shouldn't load files\");\n        };\n        Translator.translationsFallback[mmm.name] = {\n          Hello: \"Hallo\"\n        };\n        await Translator.load(mmm, file, false);\n        expect(Translator.translations[mmm.name]).toBe(undefined);\n        expect(Translator.translationsFallback[mmm.name]).toEqual({\n          Hello: \"Hallo\"\n        });\n        done();\n      };\n    });","file":"unit/classes/translator_spec.js","skipped":false,"dir":"tests"},{"name":"should load core translations and fallback","suites":["Translator","loadCoreTranslations"],"updatePoint":{"line":251,"column":50,"index":8278},"line":251,"code":"    it(\"should load core translations and fallback\", done => {\n      const dom = new JSDOM(`<script>var translations = {en: \"http://localhost:3000/translations/translation_test.json\"}; var Log = {log: () => {}};</script>\\\n\t\t\t\t\t<script src=\"file://${path.join(__dirname, \"..\", \"..\", \"..\", \"js\", \"translator.js\")}\">`, {\n        runScripts: \"dangerously\",\n        resources: \"usable\"\n      });\n      dom.window.onload = async () => {\n        const {\n          Translator\n        } = dom.window;\n        await Translator.loadCoreTranslations(\"en\");\n        const en = require(path.join(__dirname, \"..\", \"..\", \"..\", \"tests\", \"mocks\", \"translation_test.json\"));\n        setTimeout(() => {\n          expect(Translator.coreTranslations).toEqual(en);\n          expect(Translator.coreTranslationsFallback).toEqual(en);\n          done();\n        }, 500);\n      };\n    });","file":"unit/classes/translator_spec.js","skipped":false,"dir":"tests"},{"name":"should load core fallback if language cannot be found","suites":["Translator","loadCoreTranslations"],"updatePoint":{"line":270,"column":61,"index":9150},"line":270,"code":"    it(\"should load core fallback if language cannot be found\", done => {\n      const dom = new JSDOM(`<script>var translations = {en: \"http://localhost:3000/translations/translation_test.json\"}; var Log = {log: () => {}};</script>\\\n\t\t\t\t\t<script src=\"file://${path.join(__dirname, \"..\", \"..\", \"..\", \"js\", \"translator.js\")}\">`, {\n        runScripts: \"dangerously\",\n        resources: \"usable\"\n      });\n      dom.window.onload = async () => {\n        const {\n          Translator\n        } = dom.window;\n        await Translator.loadCoreTranslations(\"MISSINGLANG\");\n        const en = require(path.join(__dirname, \"..\", \"..\", \"..\", \"tests\", \"mocks\", \"translation_test.json\"));\n        setTimeout(() => {\n          expect(Translator.coreTranslations).toEqual({});\n          expect(Translator.coreTranslationsFallback).toEqual(en);\n          done();\n        }, 500);\n      };\n    });","file":"unit/classes/translator_spec.js","skipped":false,"dir":"tests"},{"name":"should load core translations fallback","suites":["Translator","loadCoreTranslationsFallback"],"updatePoint":{"line":291,"column":46,"index":10073},"line":291,"code":"    it(\"should load core translations fallback\", done => {\n      const dom = new JSDOM(`<script>var translations = {en: \"http://localhost:3000/translations/translation_test.json\"}; var Log = {log: () => {}};</script>\\\n\t\t\t\t\t<script src=\"file://${path.join(__dirname, \"..\", \"..\", \"..\", \"js\", \"translator.js\")}\">`, {\n        runScripts: \"dangerously\",\n        resources: \"usable\"\n      });\n      dom.window.onload = async () => {\n        const {\n          Translator\n        } = dom.window;\n        await Translator.loadCoreTranslationsFallback();\n        const en = require(path.join(__dirname, \"..\", \"..\", \"..\", \"tests\", \"mocks\", \"translation_test.json\"));\n        setTimeout(() => {\n          expect(Translator.coreTranslationsFallback).toEqual(en);\n          done();\n        }, 500);\n      };\n    });","file":"unit/classes/translator_spec.js","skipped":false,"dir":"tests"},{"name":"should load core fallback if language cannot be found","suites":["Translator","loadCoreTranslationsFallback"],"updatePoint":{"line":309,"column":61,"index":10890},"line":309,"code":"    it(\"should load core fallback if language cannot be found\", done => {\n      const dom = new JSDOM(`<script>var translations = {}; var Log = {log: () => {}};</script>\\\n\t\t\t\t\t<script src=\"file://${path.join(__dirname, \"..\", \"..\", \"..\", \"js\", \"translator.js\")}\">`, {\n        runScripts: \"dangerously\",\n        resources: \"usable\"\n      });\n      dom.window.onload = async () => {\n        const {\n          Translator\n        } = dom.window;\n        await Translator.loadCoreTranslations();\n        setTimeout(() => {\n          expect(Translator.coreTranslationsFallback).toEqual({});\n          done();\n        }, 500);\n      };\n    });","file":"unit/classes/translator_spec.js","skipped":false,"dir":"tests"},{"name":"should have info, warn and error properties","suites":["Utils","colors"],"updatePoint":{"line":9,"column":51,"index":300},"line":9,"code":"    it(\"should have info, warn and error properties\", () => {\n      expect(Utils.colors).toHaveProperty(\"info\");\n      expect(Utils.colors).toHaveProperty(\"warn\");\n      expect(Utils.colors).toHaveProperty(\"error\");\n    });","file":"unit/classes/utils_spec.js","skipped":false,"dir":"tests"},{"name":"properties should be functions","suites":["Utils","colors"],"updatePoint":{"line":14,"column":38,"index":511},"line":14,"code":"    it(\"properties should be functions\", () => {\n      expect(typeof Utils.colors.info).toBe(\"function\");\n      expect(typeof Utils.colors.warn).toBe(\"function\");\n      expect(typeof Utils.colors.error).toBe(\"function\");\n    });","file":"unit/classes/utils_spec.js","skipped":false,"dir":"tests"},{"name":"should print colored message in supported consoles","suites":["Utils","colors"],"updatePoint":{"line":19,"column":58,"index":760},"line":19,"code":"    it(\"should print colored message in supported consoles\", () => {\n      colors.enabled = true;\n      expect(Utils.colors.info(\"some informations\")).toBe(\"\\u001b[34msome informations\\u001b[39m\");\n      expect(Utils.colors.warn(\"a warning\")).toBe(\"\\u001b[33ma warning\\u001b[39m\");\n      expect(Utils.colors.error(\"ERROR!\")).toBe(\"\\u001b[31mERROR!\\u001b[39m\");\n    });","file":"unit/classes/utils_spec.js","skipped":false,"dir":"tests"},{"name":"should print message in unsupported consoles","suites":["Utils","colors"],"updatePoint":{"line":25,"column":52,"index":1123},"line":25,"code":"    it(\"should print message in unsupported consoles\", () => {\n      colors.enabled = false;\n      expect(Utils.colors.info(\"some informations\")).toBe(\"some informations\");\n      expect(Utils.colors.warn(\"a warning\")).toBe(\"a warning\");\n      expect(Utils.colors.error(\"ERROR!\")).toBe(\"ERROR!\");\n    });","file":"unit/classes/utils_spec.js","skipped":false,"dir":"tests"},{"name":"for '' should return ''","suites":["Functions into modules/default/calendar/calendar.js","capFirst"],"updatePoint":{"line":22,"column":54,"index":674},"line":22,"code":"      it(`for '${word}' should return '${words[word]}'`, () => {\n        expect(Module.definitions.calendar.capFirst(word)).toBe(words[word]);\n      });","file":"unit/functions/calendar_spec.js","skipped":false,"dir":"tests"},{"name":"should return a valid moment.LocaleSpecification for a 12-hour format","suites":["Functions into modules/default/calendar/calendar.js","getLocaleSpecification"],"updatePoint":{"line":28,"column":77,"index":909},"line":28,"code":"    it(\"should return a valid moment.LocaleSpecification for a 12-hour format\", () => {\n      expect(Module.definitions.calendar.getLocaleSpecification(12)).toEqual({\n        longDateFormat: {\n          LT: \"h:mm A\"\n        }\n      });\n    });","file":"unit/functions/calendar_spec.js","skipped":false,"dir":"tests"},{"name":"should return a valid moment.LocaleSpecification for a 24-hour format","suites":["Functions into modules/default/calendar/calendar.js","getLocaleSpecification"],"updatePoint":{"line":35,"column":77,"index":1153},"line":35,"code":"    it(\"should return a valid moment.LocaleSpecification for a 24-hour format\", () => {\n      expect(Module.definitions.calendar.getLocaleSpecification(24)).toEqual({\n        longDateFormat: {\n          LT: \"HH:mm\"\n        }\n      });\n    });","file":"unit/functions/calendar_spec.js","skipped":false,"dir":"tests"},{"name":"should return the current system locale when called without timeFormat number","suites":["Functions into modules/default/calendar/calendar.js","getLocaleSpecification"],"updatePoint":{"line":42,"column":85,"index":1404},"line":42,"code":"    it(\"should return the current system locale when called without timeFormat number\", () => {\n      expect(Module.definitions.calendar.getLocaleSpecification()).toEqual({\n        longDateFormat: {\n          LT: moment.localeData().longDateFormat(\"LT\")\n        }\n      });\n    });","file":"unit/functions/calendar_spec.js","skipped":false,"dir":"tests"},{"name":"should return a 12-hour longDateFormat when using the 'en' locale","suites":["Functions into modules/default/calendar/calendar.js","getLocaleSpecification"],"updatePoint":{"line":49,"column":73,"index":1674},"line":49,"code":"    it(\"should return a 12-hour longDateFormat when using the 'en' locale\", () => {\n      const localeBackup = moment.locale();\n      moment.locale(\"en\");\n      expect(Module.definitions.calendar.getLocaleSpecification()).toEqual({\n        longDateFormat: {\n          LT: \"h:mm A\"\n        }\n      });\n      moment.locale(localeBackup);\n    });","file":"unit/functions/calendar_spec.js","skipped":false,"dir":"tests"},{"name":"should return a 12-hour longDateFormat when using the 'au' locale","suites":["Functions into modules/default/calendar/calendar.js","getLocaleSpecification"],"updatePoint":{"line":59,"column":73,"index":2018},"line":59,"code":"    it(\"should return a 12-hour longDateFormat when using the 'au' locale\", () => {\n      const localeBackup = moment.locale();\n      moment.locale(\"au\");\n      expect(Module.definitions.calendar.getLocaleSpecification()).toEqual({\n        longDateFormat: {\n          LT: \"h:mm A\"\n        }\n      });\n      moment.locale(localeBackup);\n    });","file":"unit/functions/calendar_spec.js","skipped":false,"dir":"tests"},{"name":"should return a 12-hour longDateFormat when using the 'eg' locale","suites":["Functions into modules/default/calendar/calendar.js","getLocaleSpecification"],"updatePoint":{"line":69,"column":73,"index":2362},"line":69,"code":"    it(\"should return a 12-hour longDateFormat when using the 'eg' locale\", () => {\n      const localeBackup = moment.locale();\n      moment.locale(\"eg\");\n      expect(Module.definitions.calendar.getLocaleSpecification()).toEqual({\n        longDateFormat: {\n          LT: \"h:mm A\"\n        }\n      });\n      moment.locale(localeBackup);\n    });","file":"unit/functions/calendar_spec.js","skipped":false,"dir":"tests"},{"name":"should return a 24-hour longDateFormat when using the 'nl' locale","suites":["Functions into modules/default/calendar/calendar.js","getLocaleSpecification"],"updatePoint":{"line":79,"column":73,"index":2706},"line":79,"code":"    it(\"should return a 24-hour longDateFormat when using the 'nl' locale\", () => {\n      const localeBackup = moment.locale();\n      moment.locale(\"nl\");\n      expect(Module.definitions.calendar.getLocaleSpecification()).toEqual({\n        longDateFormat: {\n          LT: \"HH:mm\"\n        }\n      });\n      moment.locale(localeBackup);\n    });","file":"unit/functions/calendar_spec.js","skipped":false,"dir":"tests"},{"name":"should return a 24-hour longDateFormat when using the 'fr' locale","suites":["Functions into modules/default/calendar/calendar.js","getLocaleSpecification"],"updatePoint":{"line":89,"column":73,"index":3049},"line":89,"code":"    it(\"should return a 24-hour longDateFormat when using the 'fr' locale\", () => {\n      const localeBackup = moment.locale();\n      moment.locale(\"fr\");\n      expect(Module.definitions.calendar.getLocaleSpecification()).toEqual({\n        longDateFormat: {\n          LT: \"HH:mm\"\n        }\n      });\n      moment.locale(localeBackup);\n    });","file":"unit/functions/calendar_spec.js","skipped":false,"dir":"tests"},{"name":"should return a 24-hour longDateFormat when using the 'uk' locale","suites":["Functions into modules/default/calendar/calendar.js","getLocaleSpecification"],"updatePoint":{"line":99,"column":73,"index":3392},"line":99,"code":"    it(\"should return a 24-hour longDateFormat when using the 'uk' locale\", () => {\n      const localeBackup = moment.locale();\n      moment.locale(\"uk\");\n      expect(Module.definitions.calendar.getLocaleSpecification()).toEqual({\n        longDateFormat: {\n          LT: \"HH:mm\"\n        }\n      });\n      moment.locale(localeBackup);\n    });","file":"unit/functions/calendar_spec.js","skipped":false,"dir":"tests"},{"name":"for '' should return ''","suites":["Functions into modules/default/calendar/calendar.js","shorten"],"updatePoint":{"line":129,"column":67,"index":4283},"line":129,"code":"      it(`for '${string}' should return '${strings[string].return}'`, () => {\n        expect(Module.definitions.calendar.shorten(string, strings[string].length)).toBe(strings[string].return);\n      });","file":"unit/functions/calendar_spec.js","skipped":false,"dir":"tests"},{"name":"should return an empty string if shorten is called with a non-string","suites":["Functions into modules/default/calendar/calendar.js","shorten"],"updatePoint":{"line":133,"column":76,"index":4502},"line":133,"code":"    it(\"should return an empty string if shorten is called with a non-string\", () => {\n      expect(Module.definitions.calendar.shorten(100)).toBe(\"\");\n    });","file":"unit/functions/calendar_spec.js","skipped":false,"dir":"tests"},{"name":"should not shorten the string if shorten is called with a non-number maxLength","suites":["Functions into modules/default/calendar/calendar.js","shorten"],"updatePoint":{"line":136,"column":86,"index":4672},"line":136,"code":"    it(\"should not shorten the string if shorten is called with a non-number maxLength\", () => {\n      expect(Module.definitions.calendar.shorten(\"This is a test string\", \"This is not a number\")).toBe(\"This is a test string\");\n    });","file":"unit/functions/calendar_spec.js","skipped":false,"dir":"tests"},{"name":"should wrap the string instead of shorten it if shorten is called with wrapEvents = true (with maxLength defined as 20)","suites":["Functions into modules/default/calendar/calendar.js","shorten"],"updatePoint":{"line":139,"column":127,"index":4948},"line":139,"code":"    it(\"should wrap the string instead of shorten it if shorten is called with wrapEvents = true (with maxLength defined as 20)\", () => {\n      expect(Module.definitions.calendar.shorten(\"This is a wrapEvent test. Should wrap the string instead of shorten it if called with wrapEvent = true\", 20, true)).toBe(\"This is a <br>wrapEvent test. Should wrap <br>the string instead of <br>shorten it if called with <br>wrapEvent = true\");\n    });","file":"unit/functions/calendar_spec.js","skipped":false,"dir":"tests"},{"name":"should wrap the string instead of shorten it if shorten is called with wrapEvents = true (without maxLength defined, default 25)","suites":["Functions into modules/default/calendar/calendar.js","shorten"],"updatePoint":{"line":142,"column":136,"index":5397},"line":142,"code":"    it(\"should wrap the string instead of shorten it if shorten is called with wrapEvents = true (without maxLength defined, default 25)\", () => {\n      expect(Module.definitions.calendar.shorten(\"This is a wrapEvent test. Should wrap the string instead of shorten it if called with wrapEvent = true\", undefined, true)).toBe(\"This is a wrapEvent <br>test. Should wrap the string <br>instead of shorten it if called <br>with wrapEvent = true\");\n    });","file":"unit/functions/calendar_spec.js","skipped":false,"dir":"tests"},{"name":"should wrap and shorten the string in the second line if called with wrapEvents = true and maxTitleLines = 2","suites":["Functions into modules/default/calendar/calendar.js","shorten"],"updatePoint":{"line":145,"column":116,"index":5829},"line":145,"code":"    it(\"should wrap and shorten the string in the second line if called with wrapEvents = true and maxTitleLines = 2\", () => {\n      expect(Module.definitions.calendar.shorten(\"This is a wrapEvent and maxTitleLines test. Should wrap and shorten the string in the second line if called with wrapEvents = true and maxTitleLines = 2\", undefined, true, 2)).toBe(\"This is a wrapEvent and <br>maxTitleLines test. Should wrap and …\");\n    });","file":"unit/functions/calendar_spec.js","skipped":false,"dir":"tests"},{"name":"should return -1 when comparing 2.1 to 2.2","suites":["Test function cmpVersions in js/module.js"],"updatePoint":{"line":21,"column":48,"index":599},"line":21,"code":"  it(\"should return -1 when comparing 2.1 to 2.2\", () => {\n    expect(cmp(\"2.1\", \"2.2\")).toBe(-1);\n  });","file":"unit/functions/cmp_versions_spec.js","skipped":false,"dir":"tests"},{"name":"should be return 0 when comparing 2.2 to 2.2","suites":["Test function cmpVersions in js/module.js"],"updatePoint":{"line":24,"column":50,"index":706},"line":24,"code":"  it(\"should be return 0 when comparing 2.2 to 2.2\", () => {\n    expect(cmp(\"2.2\", \"2.2\")).toBe(0);\n  });","file":"unit/functions/cmp_versions_spec.js","skipped":false,"dir":"tests"},{"name":"should be return 1 when comparing 1.1 to 1.0","suites":["Test function cmpVersions in js/module.js"],"updatePoint":{"line":27,"column":50,"index":812},"line":27,"code":"  it(\"should be return 1 when comparing 1.1 to 1.0\", () => {\n    expect(cmp(\"1.1\", \"1.0\")).toBe(1);\n  });","file":"unit/functions/cmp_versions_spec.js","skipped":false,"dir":"tests"},{"name":"Calls correct URL once","suites":["server_functions tests","The cors method"],"updatePoint":{"line":35,"column":32,"index":993},"line":35,"code":"    test(\"Calls correct URL once\", async () => {\n      const urlToCall = \"http://www.test.com/path?param1=value1\";\n      request.url = `/cors?url=${urlToCall}`;\n      await cors(request, corsResponse);\n      expect(fetchMock.mock.calls.length).toBe(1);\n      expect(fetchMock.mock.calls[0][0]).toBe(urlToCall);\n    });","file":"unit/functions/server_functions_spec.js","skipped":false,"dir":"tests"},{"name":"Forewards Content-Type if json","suites":["server_functions tests","The cors method"],"updatePoint":{"line":42,"column":40,"index":1320},"line":42,"code":"    test(\"Forewards Content-Type if json\", async () => {\n      fetchResponseHeadersGet.mockImplementation(() => \"json\");\n      await cors(request, corsResponse);\n      expect(fetchResponseHeadersGet.mock.calls.length).toBe(1);\n      expect(fetchResponseHeadersGet.mock.calls[0][0]).toBe(\"Content-Type\");\n      expect(corsResponse.set.mock.calls.length).toBe(1);\n      expect(corsResponse.set.mock.calls[0][0]).toBe(\"Content-Type\");\n      expect(corsResponse.set.mock.calls[0][1]).toBe(\"json\");\n    });","file":"unit/functions/server_functions_spec.js","skipped":false,"dir":"tests"},{"name":"Forewards Content-Type if xml","suites":["server_functions tests","The cors method"],"updatePoint":{"line":51,"column":39,"index":1821},"line":51,"code":"    test(\"Forewards Content-Type if xml\", async () => {\n      fetchResponseHeadersGet.mockImplementation(() => \"xml\");\n      await cors(request, corsResponse);\n      expect(fetchResponseHeadersGet.mock.calls.length).toBe(1);\n      expect(fetchResponseHeadersGet.mock.calls[0][0]).toBe(\"Content-Type\");\n      expect(corsResponse.set.mock.calls.length).toBe(1);\n      expect(corsResponse.set.mock.calls[0][0]).toBe(\"Content-Type\");\n      expect(corsResponse.set.mock.calls[0][1]).toBe(\"xml\");\n    });","file":"unit/functions/server_functions_spec.js","skipped":false,"dir":"tests"},{"name":"Sends correct data from response","suites":["server_functions tests","The cors method"],"updatePoint":{"line":60,"column":42,"index":2323},"line":60,"code":"    test(\"Sends correct data from response\", async () => {\n      const responseData = \"some data\";\n      fetchResponseHeadersText.mockImplementation(() => responseData);\n      let sentData;\n      corsResponse.send = jest.fn(input => {\n        sentData = input;\n      });\n      await cors(request, corsResponse);\n      expect(fetchResponseHeadersText.mock.calls.length).toBe(1);\n      expect(sentData).toBe(responseData);\n    });","file":"unit/functions/server_functions_spec.js","skipped":false,"dir":"tests"},{"name":"Sends error data from response","suites":["server_functions tests","The cors method"],"updatePoint":{"line":71,"column":40,"index":2750},"line":71,"code":"    test(\"Sends error data from response\", async () => {\n      const error = new Error(\"error data\");\n      fetchResponseHeadersText.mockImplementation(() => {\n        throw error;\n      });\n      let sentData;\n      corsResponse.send = jest.fn(input => {\n        sentData = input;\n      });\n      await cors(request, corsResponse);\n      expect(fetchResponseHeadersText.mock.calls.length).toBe(1);\n      expect(sentData).toBe(error);\n    });","file":"unit/functions/server_functions_spec.js","skipped":false,"dir":"tests"},{"name":"Fetches with user agent by default","suites":["server_functions tests","The cors method"],"updatePoint":{"line":84,"column":44,"index":3197},"line":84,"code":"    test(\"Fetches with user agent by default\", async () => {\n      await cors(request, corsResponse);\n      expect(fetchMock.mock.calls.length).toBe(1);\n      expect(fetchMock.mock.calls[0][1]).toHaveProperty(\"headers\");\n      expect(fetchMock.mock.calls[0][1].headers).toHaveProperty(\"User-Agent\");\n    });","file":"unit/functions/server_functions_spec.js","skipped":false,"dir":"tests"},{"name":"Fetches with specified headers","suites":["server_functions tests","The cors method"],"updatePoint":{"line":90,"column":40,"index":3501},"line":90,"code":"    test(\"Fetches with specified headers\", async () => {\n      const headersParam = \"sendheaders=header1:value1,header2:value2\";\n      const urlParam = \"http://www.test.com/path?param1=value1\";\n      request.url = `/cors?${headersParam}&url=${urlParam}`;\n      await cors(request, corsResponse);\n      expect(fetchMock.mock.calls.length).toBe(1);\n      expect(fetchMock.mock.calls[0][1]).toHaveProperty(\"headers\");\n      expect(fetchMock.mock.calls[0][1].headers).toHaveProperty(\"header1\", \"value1\");\n      expect(fetchMock.mock.calls[0][1].headers).toHaveProperty(\"header2\", \"value2\");\n    });","file":"unit/functions/server_functions_spec.js","skipped":false,"dir":"tests"},{"name":"Sends specified headers","suites":["server_functions tests","The cors method"],"updatePoint":{"line":100,"column":33,"index":4089},"line":100,"code":"    test(\"Sends specified headers\", async () => {\n      fetchResponseHeadersGet.mockImplementation(input => input.replace(\"header\", \"value\"));\n      const expectedheaders = \"expectedheaders=header1,header2\";\n      const urlParam = \"http://www.test.com/path?param1=value1\";\n      request.url = `/cors?${expectedheaders}&url=${urlParam}`;\n      await cors(request, corsResponse);\n      expect(fetchMock.mock.calls.length).toBe(1);\n      expect(fetchMock.mock.calls[0][1]).toHaveProperty(\"headers\");\n      expect(corsResponse.set.mock.calls.length).toBe(3);\n      expect(corsResponse.set.mock.calls[0][0]).toBe(\"Content-Type\");\n      expect(corsResponse.set.mock.calls[1][0]).toBe(\"header1\");\n      expect(corsResponse.set.mock.calls[1][1]).toBe(\"value1\");\n      expect(corsResponse.set.mock.calls[2][0]).toBe(\"header2\");\n      expect(corsResponse.set.mock.calls[2][1]).toBe(\"value2\");\n    });","file":"unit/functions/server_functions_spec.js","skipped":false,"dir":"tests"},{"name":"returns status information","suites":["Updatenotification","MagicMirror on develop"],"updatePoint":{"line":89,"column":34,"index":2694},"line":89,"code":"    it(\"returns status information\", async () => {\n      const repos = await gitHelper.getRepos();\n      expect(repos[0]).toMatchSnapshot();\n      expect(execMock).toHaveBeenCalledTimes(5);\n    });","file":"unit/functions/updatenotification_spec.js","skipped":false,"dir":"tests"},{"name":"returns status information early if isBehindInStatus","suites":["Updatenotification","MagicMirror on develop"],"updatePoint":{"line":94,"column":60,"index":2918},"line":94,"code":"    it(\"returns status information early if isBehindInStatus\", async () => {\n      gitStatusOut = \"## develop...origin/develop [behind 5]\";\n      const repos = await gitHelper.getRepos();\n      expect(repos[0]).toMatchSnapshot();\n      expect(execMock).toHaveBeenCalledTimes(3);\n    });","file":"unit/functions/updatenotification_spec.js","skipped":false,"dir":"tests"},{"name":"excludes repo if status can't be retrieved","suites":["Updatenotification","MagicMirror on develop"],"updatePoint":{"line":100,"column":50,"index":3195},"line":100,"code":"    it(\"excludes repo if status can't be retrieved\", async () => {\n      const errorMessage = \"Failed to retrieve status\";\n      execMock.mockRejectedValueOnce(errorMessage);\n      const repos = await gitHelper.getRepos();\n      expect(repos.length).toBe(0);\n      const {\n        error\n      } = require(\"logger\");\n      expect(error).toHaveBeenCalledWith(`Failed to retrieve repo info for ${moduleName}: Failed to retrieve status`);\n    });","file":"unit/functions/updatenotification_spec.js","skipped":false,"dir":"tests"},{"name":"returns status information","suites":["Updatenotification","MagicMirror on master (empty taglist)"],"updatePoint":{"line":121,"column":34,"index":4257},"line":121,"code":"    it(\"returns status information\", async () => {\n      const repos = await gitHelper.getRepos();\n      expect(repos[0]).toMatchSnapshot();\n      expect(execMock).toHaveBeenCalledTimes(7);\n    });","file":"unit/functions/updatenotification_spec.js","skipped":false,"dir":"tests"},{"name":"returns status information early if isBehindInStatus","suites":["Updatenotification","MagicMirror on master (empty taglist)"],"updatePoint":{"line":126,"column":60,"index":4481},"line":126,"code":"    it(\"returns status information early if isBehindInStatus\", async () => {\n      gitStatusOut = \"## master...origin/master [behind 5]\";\n      const repos = await gitHelper.getRepos();\n      expect(repos[0]).toMatchSnapshot();\n      expect(execMock).toHaveBeenCalledTimes(7);\n    });","file":"unit/functions/updatenotification_spec.js","skipped":false,"dir":"tests"},{"name":"excludes repo if status can't be retrieved","suites":["Updatenotification","MagicMirror on master (empty taglist)"],"updatePoint":{"line":132,"column":50,"index":4756},"line":132,"code":"    it(\"excludes repo if status can't be retrieved\", async () => {\n      const errorMessage = \"Failed to retrieve status\";\n      execMock.mockRejectedValueOnce(errorMessage);\n      const repos = await gitHelper.getRepos();\n      expect(repos.length).toBe(0);\n      const {\n        error\n      } = require(\"logger\");\n      expect(error).toHaveBeenCalledWith(`Failed to retrieve repo info for ${moduleName}: Failed to retrieve status`);\n    });","file":"unit/functions/updatenotification_spec.js","skipped":false,"dir":"tests"},{"name":"returns status information","suites":["Updatenotification","MagicMirror on master with match in taglist"],"updatePoint":{"line":155,"column":34,"index":5969},"line":155,"code":"    it(\"returns status information\", async () => {\n      const repos = await gitHelper.getRepos();\n      expect(repos[0]).toMatchSnapshot();\n      expect(execMock).toHaveBeenCalledTimes(7);\n    });","file":"unit/functions/updatenotification_spec.js","skipped":false,"dir":"tests"},{"name":"returns status information early if isBehindInStatus","suites":["Updatenotification","MagicMirror on master with match in taglist"],"updatePoint":{"line":160,"column":60,"index":6193},"line":160,"code":"    it(\"returns status information early if isBehindInStatus\", async () => {\n      gitStatusOut = \"## master...origin/master [behind 5]\";\n      const repos = await gitHelper.getRepos();\n      expect(repos[0]).toMatchSnapshot();\n      expect(execMock).toHaveBeenCalledTimes(7);\n    });","file":"unit/functions/updatenotification_spec.js","skipped":false,"dir":"tests"},{"name":"excludes repo if status can't be retrieved","suites":["Updatenotification","MagicMirror on master with match in taglist"],"updatePoint":{"line":166,"column":50,"index":6468},"line":166,"code":"    it(\"excludes repo if status can't be retrieved\", async () => {\n      const errorMessage = \"Failed to retrieve status\";\n      execMock.mockRejectedValueOnce(errorMessage);\n      const repos = await gitHelper.getRepos();\n      expect(repos.length).toBe(0);\n      const {\n        error\n      } = require(\"logger\");\n      expect(error).toHaveBeenCalledWith(`Failed to retrieve repo info for ${moduleName}: Failed to retrieve status`);\n    });","file":"unit/functions/updatenotification_spec.js","skipped":false,"dir":"tests"},{"name":"returns status information","suites":["Updatenotification","MagicMirror on master without match in taglist"],"updatePoint":{"line":189,"column":34,"index":7684},"line":189,"code":"    it(\"returns status information\", async () => {\n      const repos = await gitHelper.getRepos();\n      expect(repos[0]).toMatchSnapshot();\n      expect(execMock).toHaveBeenCalledTimes(7);\n    });","file":"unit/functions/updatenotification_spec.js","skipped":false,"dir":"tests"},{"name":"returns status information early if isBehindInStatus","suites":["Updatenotification","MagicMirror on master without match in taglist"],"updatePoint":{"line":194,"column":60,"index":7908},"line":194,"code":"    it(\"returns status information early if isBehindInStatus\", async () => {\n      gitStatusOut = \"## master...origin/master [behind 5]\";\n      const repos = await gitHelper.getRepos();\n      expect(repos[0]).toMatchSnapshot();\n      expect(execMock).toHaveBeenCalledTimes(7);\n    });","file":"unit/functions/updatenotification_spec.js","skipped":false,"dir":"tests"},{"name":"excludes repo if status can't be retrieved","suites":["Updatenotification","MagicMirror on master without match in taglist"],"updatePoint":{"line":200,"column":50,"index":8183},"line":200,"code":"    it(\"excludes repo if status can't be retrieved\", async () => {\n      const errorMessage = \"Failed to retrieve status\";\n      execMock.mockRejectedValueOnce(errorMessage);\n      const repos = await gitHelper.getRepos();\n      expect(repos.length).toBe(0);\n      const {\n        error\n      } = require(\"logger\");\n      expect(error).toHaveBeenCalledWith(`Failed to retrieve repo info for ${moduleName}: Failed to retrieve status`);\n    });","file":"unit/functions/updatenotification_spec.js","skipped":false,"dir":"tests"},{"name":"returns status information without hash","suites":["Updatenotification","custom module"],"updatePoint":{"line":221,"column":47,"index":9193},"line":221,"code":"    it(\"returns status information without hash\", async () => {\n      const repos = await gitHelper.getRepos();\n      expect(repos[0]).toMatchSnapshot();\n      expect(execMock).toHaveBeenCalledTimes(4);\n    });","file":"unit/functions/updatenotification_spec.js","skipped":false,"dir":"tests"},{"name":"should return true for daytime at noon","suites":["WeatherObject"],"updatePoint":{"line":13,"column":44,"index":524},"line":13,"code":"  it(\"should return true for daytime at noon\", () => {\n    weatherobject.date = moment(\"12:00\", \"HH:mm\");\n    weatherobject.updateSunTime(-6.774877582342688, 37.63345667023327);\n    expect(weatherobject.isDayTime()).toBe(true);\n  });","file":"unit/functions/weather_object_spec.js","skipped":false,"dir":"tests"},{"name":"should return false for daytime at midnight","suites":["WeatherObject"],"updatePoint":{"line":18,"column":49,"index":763},"line":18,"code":"  it(\"should return false for daytime at midnight\", () => {\n    weatherobject.date = moment(\"00:00\", \"HH:mm\");\n    weatherobject.updateSunTime(-6.774877582342688, 37.63345667023327);\n    expect(weatherobject.isDayTime()).toBe(false);\n  });","file":"unit/functions/weather_object_spec.js","skipped":false,"dir":"tests"},{"name":"should return sunrise as the next sunaction","suites":["WeatherObject"],"updatePoint":{"line":23,"column":49,"index":1003},"line":23,"code":"  it(\"should return sunrise as the next sunaction\", () => {\n    weatherobject.updateSunTime(-6.774877582342688, 37.63345667023327);\n    let midnight = moment(\"00:00\", \"HH:mm\");\n    expect(weatherobject.nextSunAction(midnight)).toBe(\"sunrise\");\n  });","file":"unit/functions/weather_object_spec.js","skipped":false,"dir":"tests"},{"name":"should return sunset as the next sunaction","suites":["WeatherObject"],"updatePoint":{"line":28,"column":48,"index":1252},"line":28,"code":"  it(\"should return sunset as the next sunaction\", () => {\n    weatherobject.updateSunTime(-6.774877582342688, 37.63345667023327);\n    let noon = moment(weatherobject.sunrise).hour(14);\n    expect(weatherobject.nextSunAction(noon)).toBe(\"sunset\");\n  });","file":"unit/functions/weather_object_spec.js","skipped":false,"dir":"tests"},{"name":"should return an already defined feelsLike info","suites":["WeatherObject"],"updatePoint":{"line":33,"column":53,"index":1511},"line":33,"code":"  it(\"should return an already defined feelsLike info\", () => {\n    weatherobject.feelsLikeTemp = \"feelsLikeTempValue\";\n    expect(weatherobject.feelsLike()).toBe(\"feelsLikeTempValue\");\n  });","file":"unit/functions/weather_object_spec.js","skipped":false,"dir":"tests"},{"name":"should convert windspeed correctly from mps to beaufort","suites":["WeatherUtils"],"updatePoint":{"line":42,"column":61,"index":1817},"line":42,"code":"  it(\"should convert windspeed correctly from mps to beaufort\", () => {\n    expect(Math.round(WeatherUtils.convertWind(5, \"beaufort\"))).toBe(3);\n    expect(Math.round(WeatherUtils.convertWind(300, \"beaufort\"))).toBe(12);\n  });","file":"unit/functions/weather_object_spec.js","skipped":false,"dir":"tests"},{"name":"should convert windspeed correctly from mps to kmh","suites":["WeatherUtils"],"updatePoint":{"line":46,"column":56,"index":2039},"line":46,"code":"  it(\"should convert windspeed correctly from mps to kmh\", () => {\n    expect(Math.round(WeatherUtils.convertWind(11.75, \"kmh\"))).toBe(42);\n  });","file":"unit/functions/weather_object_spec.js","skipped":false,"dir":"tests"},{"name":"should convert windspeed correctly from mps to knots","suites":["WeatherUtils"],"updatePoint":{"line":49,"column":58,"index":2187},"line":49,"code":"  it(\"should convert windspeed correctly from mps to knots\", () => {\n    expect(Math.round(WeatherUtils.convertWind(10, \"knots\"))).toBe(19);\n  });","file":"unit/functions/weather_object_spec.js","skipped":false,"dir":"tests"},{"name":"should convert windspeed correctly from mph to mps","suites":["WeatherUtils"],"updatePoint":{"line":52,"column":56,"index":2332},"line":52,"code":"  it(\"should convert windspeed correctly from mph to mps\", () => {\n    expect(Math.round(WeatherUtils.convertWindToMetric(93.951324266285))).toBe(42);\n  });","file":"unit/functions/weather_object_spec.js","skipped":false,"dir":"tests"},{"name":"should convert windspeed correctly from kmh to mps","suites":["WeatherUtils"],"updatePoint":{"line":55,"column":56,"index":2489},"line":55,"code":"  it(\"should convert windspeed correctly from kmh to mps\", () => {\n    expect(Math.round(WeatherUtils.convertWindToMs(151.2))).toBe(42);\n  });","file":"unit/functions/weather_object_spec.js","skipped":false,"dir":"tests"},{"name":"should convert wind direction correctly from cardinal to value","suites":["WeatherUtils"],"updatePoint":{"line":58,"column":68,"index":2644},"line":58,"code":"  it(\"should convert wind direction correctly from cardinal to value\", () => {\n    expect(WeatherUtils.convertWindDirection(\"SSE\")).toBe(157);\n  });","file":"unit/functions/weather_object_spec.js","skipped":false,"dir":"tests"},{"name":"should return a calculated feelsLike info","suites":["WeatherUtils"],"updatePoint":{"line":61,"column":47,"index":2772},"line":61,"code":"  it(\"should return a calculated feelsLike info\", () => {\n    expect(WeatherUtils.calculateFeelsLike(0, 20, 40)).toBe(-9.444444444444445);\n  });","file":"unit/functions/weather_object_spec.js","skipped":false,"dir":"tests"},{"name":"should return a calculated feelsLike info","suites":["WeatherUtils"],"updatePoint":{"line":64,"column":47,"index":2917},"line":64,"code":"  it(\"should return a calculated feelsLike info\", () => {\n    expect(WeatherUtils.calculateFeelsLike(30, 0, 60)).toBe(32.8320322777777);\n  });","file":"unit/functions/weather_object_spec.js","skipped":false,"dir":"tests"},{"name":"contains a folder for modules/default/\"","suites":["Default modules set in modules/default/defaultmodules.js"],"updatePoint":{"line":7,"column":63,"index":390},"line":7,"code":"    it(`contains a folder for modules/default/${defaultModule}\"`, () => {\n      expect(fs.existsSync(path.join(root_path, \"modules/default\", defaultModule))).toBe(true);\n    });","file":"unit/global_vars/defaults_modules_spec.js","skipped":false,"dir":"tests"},{"name":"contains a file/folder \"\"","suites":["'global.root_path' set in js/app.js"],"updatePoint":{"line":8,"column":43,"index":434},"line":8,"code":"    it(`contains a file/folder \"${subpath}\"`, () => {\n      expect(fs.existsSync(path.join(root_path, subpath))).toBe(true);\n    });","file":"unit/global_vars/root_path_spec.js","skipped":false,"dir":"tests"},{"name":"should not modify global.root_path for testing","suites":["'global.root_path' set in js/app.js"],"updatePoint":{"line":12,"column":52,"index":582},"line":12,"code":"  it(\"should not modify global.root_path for testing\", () => {\n    expect(global.root_path).toBe(undefined);\n  });","file":"unit/global_vars/root_path_spec.js","skipped":false,"dir":"tests"},{"name":"should not modify global.version for testing","suites":["'global.root_path' set in js/app.js"],"updatePoint":{"line":15,"column":50,"index":695},"line":15,"code":"  it(\"should not modify global.version for testing\", () => {\n    expect(global.version).toBe(undefined);\n  });","file":"unit/global_vars/root_path_spec.js","skipped":false,"dir":"tests"},{"name":"should expect the global.version equals package.json file","suites":["'global.root_path' set in js/app.js"],"updatePoint":{"line":18,"column":63,"index":819},"line":18,"code":"  it(\"should expect the global.version equals package.json file\", () => {\n    const versionPackage = JSON.parse(fs.readFileSync(\"package.json\", \"utf8\")).version;\n    expect(version).toBe(versionPackage);\n  });","file":"unit/global_vars/root_path_spec.js","skipped":false,"dir":"tests"},{"name":"Calls correct URL once","suites":["Utils tests","The performWebRequest-method","When using cors proxy"],"updatePoint":{"line":26,"column":36,"index":854},"line":26,"code":"        test(\"Calls correct URL once\", async () => {\n          const urlToCall = \"http://www.test.com/path?param1=value1\";\n          url = urlToCall;\n          await performWebRequest(url, \"json\", true);\n          expect(fetchMock.mock.calls.length).toBe(1);\n          expect(fetchMock.mock.calls[0][0]).toBe(`${locationProtocol}//${locationHost}/cors?url=${urlToCall}`);\n        });","file":"unit/modules/default/utils_spec.js","skipped":false,"dir":"tests"},{"name":"Sends correct headers","suites":["Utils tests","The performWebRequest-method","When using cors proxy"],"updatePoint":{"line":33,"column":35,"index":1237},"line":33,"code":"        test(\"Sends correct headers\", async () => {\n          const urlToCall = \"http://www.test.com/path?param1=value1\";\n          url = urlToCall;\n          const headers = [{\n            name: \"header1\",\n            value: \"value1\"\n          }, {\n            name: \"header2\",\n            value: \"value2\"\n          }];\n          await performWebRequest(url, \"json\", true, headers);\n          expect(fetchMock.mock.calls.length).toBe(1);\n          expect(fetchMock.mock.calls[0][0]).toBe(`${locationProtocol}//${locationHost}/cors?sendheaders=header1:value1,header2:value2&url=${urlToCall}`);\n        });","file":"unit/modules/default/utils_spec.js","skipped":false,"dir":"tests"},{"name":"Calls correct URL once","suites":["Utils tests","The performWebRequest-method","When not using cors proxy"],"updatePoint":{"line":49,"column":36,"index":1906},"line":49,"code":"        test(\"Calls correct URL once\", async () => {\n          const urlToCall = \"http://www.test.com/path?param1=value1\";\n          url = urlToCall;\n          await performWebRequest(url);\n          expect(fetchMock.mock.calls.length).toBe(1);\n          expect(fetchMock.mock.calls[0][0]).toBe(urlToCall);\n        });","file":"unit/modules/default/utils_spec.js","skipped":false,"dir":"tests"},{"name":"Sends correct headers","suites":["Utils tests","The performWebRequest-method","When not using cors proxy"],"updatePoint":{"line":56,"column":35,"index":2224},"line":56,"code":"        test(\"Sends correct headers\", async () => {\n          const urlToCall = \"http://www.test.com/path?param1=value1\";\n          url = urlToCall;\n          const headers = [{\n            name: \"header1\",\n            value: \"value1\"\n          }, {\n            name: \"header2\",\n            value: \"value2\"\n          }];\n          await performWebRequest(url, \"json\", false, headers);\n          const expectedHeaders = {\n            headers: {\n              header1: \"value1\",\n              header2: \"value2\"\n            }\n          };\n          expect(fetchMock.mock.calls.length).toBe(1);\n          expect(fetchMock.mock.calls[0][1]).toStrictEqual(expectedHeaders);\n        });","file":"unit/modules/default/utils_spec.js","skipped":false,"dir":"tests"},{"name":"Returns undefined when no data is received","suites":["Utils tests","The performWebRequest-method","When receiving json format"],"updatePoint":{"line":78,"column":56,"index":2988},"line":78,"code":"        test(\"Returns undefined when no data is received\", async () => {\n          const response = await performWebRequest(url);\n          expect(response).toBe(undefined);\n        });","file":"unit/modules/default/utils_spec.js","skipped":false,"dir":"tests"},{"name":"Returns object when data is received","suites":["Utils tests","The performWebRequest-method","When receiving json format"],"updatePoint":{"line":82,"column":50,"index":3168},"line":82,"code":"        test(\"Returns object when data is received\", async () => {\n          fetchResponse = new Response('{\"body\": \"some content\"}');\n          const response = await performWebRequest(url);\n          expect(response.body).toBe(\"some content\");\n        });","file":"unit/modules/default/utils_spec.js","skipped":false,"dir":"tests"},{"name":"Returns expected headers when data is received","suites":["Utils tests","The performWebRequest-method","When receiving json format"],"updatePoint":{"line":87,"column":60,"index":3436},"line":87,"code":"        test(\"Returns expected headers when data is received\", async () => {\n          fetchResponse = new Response('{\"body\": \"some content\"}', {\n            headers: {\n              header1: \"value1\",\n              header2: \"value2\"\n            }\n          });\n          const response = await performWebRequest(url, \"json\", false, undefined, [\"header1\"]);\n          expect(response.headers.length).toBe(1);\n          expect(response.headers[0].name).toBe(\"header1\");\n          expect(response.headers[0].value).toBe(\"value1\");\n        });","file":"unit/modules/default/utils_spec.js","skipped":false,"dir":"tests"},{"name":"Always ok, need one test","suites":["Utils tests","The performWebRequest-method","When receiving json format"],"updatePoint":{"line":101,"column":36,"index":3976},"line":101,"code":"      test(\"Always ok, need one test\", () => {});","file":"unit/modules/default/utils_spec.js","skipped":false,"dir":"tests"},{"name":"Should keep value and unit if outputUnit is undefined","suites":["Weather utils tests","convertPrecipitationUnit tests"],"updatePoint":{"line":4,"column":61,"index":235},"line":4,"code":"    it(\"Should keep value and unit if outputUnit is undefined\", () => {\n      const values = [1, 2];\n      const units = [\"mm\", \"cm\"];\n      for (let i = 0; i < values.length; i++) {\n        var result = weather.convertPrecipitationUnit(values[i], units[i], undefined);\n        expect(result).toBe(`${values[i].toFixed(2)} ${units[i]}`);\n      }\n    });","file":"unit/modules/default/weather/weather_utils_spec.js","skipped":false,"dir":"tests"},{"name":"Should keep value and unit if outputUnit is metric","suites":["Weather utils tests","convertPrecipitationUnit tests"],"updatePoint":{"line":12,"column":58,"index":586},"line":12,"code":"    it(\"Should keep value and unit if outputUnit is metric\", () => {\n      const values = [1, 2];\n      const units = [\"mm\", \"cm\"];\n      for (let i = 0; i < values.length; i++) {\n        var result = weather.convertPrecipitationUnit(values[i], units[i], \"metric\");\n        expect(result).toBe(`${values[i].toFixed(2)} ${units[i]}`);\n      }\n    });","file":"unit/modules/default/weather/weather_utils_spec.js","skipped":false,"dir":"tests"},{"name":"Should use mm unit if input unit is undefined","suites":["Weather utils tests","convertPrecipitationUnit tests"],"updatePoint":{"line":20,"column":53,"index":931},"line":20,"code":"    it(\"Should use mm unit if input unit is undefined\", () => {\n      const values = [1, 2];\n      for (let i = 0; i < values.length; i++) {\n        var result = weather.convertPrecipitationUnit(values[i], undefined, \"metric\");\n        expect(result).toBe(`${values[i].toFixed(2)} mm`);\n      }\n    });","file":"unit/modules/default/weather/weather_utils_spec.js","skipped":false,"dir":"tests"},{"name":"Should convert value and unit if outputUnit is imperial","suites":["Weather utils tests","convertPrecipitationUnit tests"],"updatePoint":{"line":27,"column":63,"index":1244},"line":27,"code":"    it(\"Should convert value and unit if outputUnit is imperial\", () => {\n      const values = [1, 2];\n      const units = [\"mm\", \"cm\"];\n      const expectedValues = [0.04, 0.79];\n      for (let i = 0; i < values.length; i++) {\n        var result = weather.convertPrecipitationUnit(values[i], units[i], \"imperial\");\n        expect(result).toBe(`${expectedValues[i]} in`);\n      }\n    });","file":"unit/modules/default/weather/weather_utils_spec.js","skipped":false,"dir":"tests"}]}