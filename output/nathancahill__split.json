{"repo":"nathancahill/split","url":"https://github.com/nathancahill/split","branch":"master","configs":[{"package":"split-generator","lang":"js","dir":"packages/split-generator/tests","framework":"jest","pattern":"**/*.{js,ts}"},{"package":"split.js","lang":"js","dir":"packages/splitjs/test","framework":"jest","pattern":"**/*[._-]{test,spec,unittest,unit}.{ts,js}"}],"tests":[{"name":"","suites":[],"updatePoint":{"line":1,"column":6},"line":1,"code":"test('', () => {});","file":"test.js","skipped":false,"dir":"packages/split-generator/tests"},{"name":"splits in two when given two elements","suites":["Split"],"updatePoint":{"line":34,"column":43},"line":34,"code":"  it('splits in two when given two elements', function () {\n    Split(['#a', '#b']);\n    expect(this.a.style.width).toContain('calc(50% - 5px)');\n    expect(this.b.style.width).toContain('calc(50% - 5px)');\n  });","file":"split.spec.js","skipped":false,"dir":"packages/splitjs/test"},{"name":"splits in three when given three elements","suites":["Split"],"updatePoint":{"line":39,"column":47},"line":39,"code":"  it('splits in three when given three elements', function () {\n    Split(['#a', '#b', '#c']);\n    expect(calcParts(this.a.style.width).percentage).toBeCloseTo(33.33);\n    expect(calcParts(this.b.style.width).percentage).toBeCloseTo(33.33);\n    expect(calcParts(this.c.style.width).percentage).toBeCloseTo(33.33);\n    expect(calcParts(this.a.style.width).pixels).toBe(5);\n    expect(calcParts(this.b.style.width).pixels).toBe(10);\n    expect(calcParts(this.c.style.width).pixels).toBe(5);\n  });","file":"split.spec.js","skipped":false,"dir":"packages/splitjs/test"},{"name":"splits vertically when direction is vertical","suites":["Split"],"updatePoint":{"line":48,"column":50},"line":48,"code":"  it('splits vertically when direction is vertical', function () {\n    Split(['#a', '#b'], {\n      direction: 'vertical'\n    });\n    expect(this.a.style.height).toContain('calc(50% - 5px)');\n    expect(this.b.style.height).toContain('calc(50% - 5px)');\n  });","file":"split.spec.js","skipped":false,"dir":"packages/splitjs/test"},{"name":"splits in percentages when given sizes","suites":["Split"],"updatePoint":{"line":55,"column":44},"line":55,"code":"  it('splits in percentages when given sizes', function () {\n    Split(['#a', '#b'], {\n      sizes: [25, 75]\n    });\n    expect(this.a.style.width).toContain('calc(25% - 5px)');\n    expect(this.b.style.width).toContain('calc(75% - 5px)');\n  });","file":"split.spec.js","skipped":false,"dir":"packages/splitjs/test"},{"name":"splits in percentages when given sizes","suites":["Split"],"updatePoint":{"line":62,"column":44},"line":62,"code":"  it('splits in percentages when given sizes', function () {\n    Split(['#a', '#b'], {\n      sizes: [25, 75]\n    });\n    expect(this.a.style.width).toContain('calc(25% - 5px)');\n    expect(this.b.style.width).toContain('calc(75% - 5px)');\n  });","file":"split.spec.js","skipped":false,"dir":"packages/splitjs/test"},{"name":"accounts for gutter size","suites":["Split"],"updatePoint":{"line":69,"column":30},"line":69,"code":"  it('accounts for gutter size', function () {\n    Split(['#a', '#b'], {\n      gutterSize: 20\n    });\n    expect(this.a.style.width).toContain('calc(50% - 10px)');\n    expect(this.b.style.width).toContain('calc(50% - 10px)');\n  });","file":"split.spec.js","skipped":false,"dir":"packages/splitjs/test"},{"name":"accounts for gutter size with more than two elements","suites":["Split"],"updatePoint":{"line":76,"column":58},"line":76,"code":"  it('accounts for gutter size with more than two elements', function () {\n    Split(['#a', '#b', '#c'], {\n      gutterSize: 20\n    });\n    expect(calcParts(this.a.style.width).percentage).toBeCloseTo(33.33);\n    expect(calcParts(this.b.style.width).percentage).toBeCloseTo(33.33);\n    expect(calcParts(this.c.style.width).percentage).toBeCloseTo(33.33);\n    expect(calcParts(this.a.style.width).pixels).toBe(10);\n    expect(calcParts(this.b.style.width).pixels).toBe(20);\n    expect(calcParts(this.c.style.width).pixels).toBe(10);\n  });","file":"split.spec.js","skipped":false,"dir":"packages/splitjs/test"},{"name":"accounts for gutter size when direction is vertical","suites":["Split"],"updatePoint":{"line":87,"column":57},"line":87,"code":"  it('accounts for gutter size when direction is vertical', function () {\n    Split(['#a', '#b'], {\n      direction: 'vertical',\n      gutterSize: 20\n    });\n    expect(this.a.style.height).toContain('calc(50% - 10px)');\n    expect(this.b.style.height).toContain('calc(50% - 10px)');\n  });","file":"split.spec.js","skipped":false,"dir":"packages/splitjs/test"},{"name":"accounts for gutter size with more than two elements when direction is vertical","suites":["Split"],"updatePoint":{"line":95,"column":85},"line":95,"code":"  it('accounts for gutter size with more than two elements when direction is vertical', function () {\n    Split(['#a', '#b', '#c'], {\n      direction: 'vertical',\n      gutterSize: 20\n    });\n    expect(calcParts(this.a.style.height).percentage).toBeCloseTo(33.33);\n    expect(calcParts(this.b.style.height).percentage).toBeCloseTo(33.33);\n    expect(calcParts(this.c.style.height).percentage).toBeCloseTo(33.33);\n    expect(calcParts(this.a.style.height).pixels).toBe(10);\n    expect(calcParts(this.b.style.height).pixels).toBe(20);\n    expect(calcParts(this.c.style.height).pixels).toBe(10);\n  });","file":"split.spec.js","skipped":false,"dir":"packages/splitjs/test"},{"name":"set size directly when given css values","suites":["Split"],"updatePoint":{"line":107,"column":45},"line":107,"code":"  it('set size directly when given css values', function () {\n    Split(['#a', '#b'], {\n      sizes: ['150px', '640px']\n    });\n    expect(this.a.style.width).toBe('150px');\n    expect(this.b.style.width).toBe('640px');\n  });","file":"split.spec.js","skipped":false,"dir":"packages/splitjs/test"},{"name":"adjusts sizes using setSizes","suites":["Split"],"updatePoint":{"line":114,"column":34},"line":114,"code":"  it('adjusts sizes using setSizes', function () {\n    var split = Split(['#a', '#b']);\n    split.setSizes([70, 30]);\n    expect(this.a.style.width).toContain('calc(70% - 5px)');\n    expect(this.b.style.width).toContain('calc(30% - 5px)');\n  });","file":"split.spec.js","skipped":false,"dir":"packages/splitjs/test"},{"name":"collapse splits","suites":["Split"],"updatePoint":{"line":120,"column":21},"line":120,"code":"  it('collapse splits', function () {\n    var split = Split(['#a', '#b']);\n    split.collapse(0);\n    expect(this.a.getBoundingClientRect().width).toBeCloseTo(100, 0);\n    expect(this.b.getBoundingClientRect().width).toBeCloseTo(800 - 100 - 10, 0);\n    split.collapse(1);\n    expect(this.a.getBoundingClientRect().width).toBeCloseTo(800 - 100 - 10, 0);\n    expect(this.b.getBoundingClientRect().width).toBeCloseTo(100, 0);\n  });","file":"split.spec.js","skipped":false,"dir":"packages/splitjs/test"},{"name":"returns sizes","suites":["Split"],"updatePoint":{"line":129,"column":19},"line":129,"code":"  it('returns sizes', function () {\n    var split = Split(['#a', '#b']);\n    var sizes = split.getSizes();\n    expect(sizes).toEqual([50, 50]);\n    split.setSizes([70, 30]);\n    sizes = split.getSizes();\n    expect(sizes).toEqual([70, 30]);\n  });","file":"split.spec.js","skipped":false,"dir":"packages/splitjs/test"},{"name":"sets element styles using the elementStyle function","suites":["Split"],"updatePoint":{"line":137,"column":57},"line":137,"code":"  it('sets element styles using the elementStyle function', function () {\n    Split(['#a', '#b'], {\n      elementStyle: function (dimension, size) {\n        return {\n          width: size + '%'\n        };\n      }\n    });\n    expect(this.a.style.width).toBe('50%');\n    expect(this.b.style.width).toBe('50%');\n  });","file":"split.spec.js","skipped":false,"dir":"packages/splitjs/test"}]}