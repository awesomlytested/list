{"repo":"ramda/ramda","url":"https://github.com/ramda/ramda","branch":"master","configs":[{"package":"ramda","lang":"js","dir":"test","framework":"mocha","pattern":"**/*.{js,ts}"}],"tests":[{"name":"adds together two numbers","suites":["add"],"updatePoint":{"line":8,"column":31,"index":172},"line":8,"code":"  it('adds together two numbers', function () {\n    eq(R.add(3, 7), 10);\n  });","file":"add.js","skipped":false,"dir":"test"},{"name":"coerces its arguments to numbers","suites":["add"],"updatePoint":{"line":11,"column":38,"index":258},"line":11,"code":"  it('coerces its arguments to numbers', function () {\n    eq(R.add('1', '2'), 3);\n    eq(R.add(1, '2'), 3);\n    eq(R.add(true, false), 1);\n    eq(R.add(null, null), 0);\n    eq(R.add(undefined, undefined), NaN);\n    eq(R.add(new Date(1), new Date(2)), 3);\n  });","file":"add.js","skipped":false,"dir":"test"},{"name":"commutative","suites":["add properties"],"updatePoint":{"line":21,"column":17,"index":544},"line":21,"code":"  it('commutative', function () {\n    fc.assert(fc.property(fc.integer(), fc.integer(), function (a, b) {\n      return R.add(a, b) === R.add(b, a);\n    }));\n  });","file":"add.js","skipped":false,"dir":"test"},{"name":"associative","suites":["add properties"],"updatePoint":{"line":26,"column":17,"index":707},"line":26,"code":"  it('associative', function () {\n    fc.assert(fc.property(fc.integer(), fc.integer(), fc.integer(), function (a, b, c) {\n      return R.add(a, R.add(b, c)) === R.add(R.add(a, b), c);\n    }));\n  });","file":"add.js","skipped":false,"dir":"test"},{"name":"identity","suites":["add properties"],"updatePoint":{"line":31,"column":14,"index":904},"line":31,"code":"  it('identity', function () {\n    fc.assert(fc.property(fc.integer(), function (a) {\n      return R.add(a, 0) === a && R.add(0, a) === a;\n    }));\n  });","file":"add.js","skipped":false,"dir":"test"},{"name":"works just like a normal map","suites":["addIndex","unary functions like `map`"],"updatePoint":{"line":20,"column":36,"index":496},"line":20,"code":"    it('works just like a normal map', function () {\n      eq(mapIndexed(times2, [1, 2, 3, 4]), [2, 4, 6, 8]);\n    });","file":"addIndex.js","skipped":false,"dir":"test"},{"name":"passes the index as a second parameter to the callback","suites":["addIndex","unary functions like `map`"],"updatePoint":{"line":23,"column":62,"index":641},"line":23,"code":"    it('passes the index as a second parameter to the callback', function () {\n      eq(mapIndexed(addIndexParam, [8, 6, 7, 5, 3, 0, 9]), [8, 7, 9, 8, 7, 5, 15]); // [8 + 0, 6 + 1...]\n    });","file":"addIndex.js","skipped":false,"dir":"test"},{"name":"passes the entire list as a third parameter to the callback","suites":["addIndex","unary functions like `map`"],"updatePoint":{"line":26,"column":67,"index":838},"line":26,"code":"    it('passes the entire list as a third parameter to the callback', function () {\n      eq(mapIndexed(squareEnds, [8, 6, 7, 5, 3, 0, 9]), [64, 6, 7, 5, 3, 0, 81]);\n    });","file":"addIndex.js","skipped":false,"dir":"test"},{"name":"acts as a curried function","suites":["addIndex","unary functions like `map`"],"updatePoint":{"line":29,"column":34,"index":979},"line":29,"code":"    it('acts as a curried function', function () {\n      var makeSquareEnds = mapIndexed(squareEnds);\n      eq(makeSquareEnds([8, 6, 7, 5, 3, 0, 9]), [64, 6, 7, 5, 3, 0, 81]);\n    });","file":"addIndex.js","skipped":false,"dir":"test"},{"name":"passes the index as a third parameter to the predicate","suites":["addIndex","binary functions like `reduce`"],"updatePoint":{"line":46,"column":62,"index":1488},"line":46,"code":"    it('passes the index as a third parameter to the predicate', function () {\n      eq(reduceIndexed(timesIndexed, 0, [1, 2, 3, 4, 5]), 40);\n      eq(reduceIndexed(objectify, {}, ['a', 'b', 'c', 'd', 'e']), {\n        a: 0,\n        b: 1,\n        c: 2,\n        d: 3,\n        e: 4\n      });\n    });","file":"addIndex.js","skipped":false,"dir":"test"},{"name":"passes the entire list as a fourth parameter to the predicate","suites":["addIndex","binary functions like `reduce`"],"updatePoint":{"line":56,"column":69,"index":1792},"line":56,"code":"    it('passes the entire list as a fourth parameter to the predicate', function () {\n      var list = [1, 2, 3];\n      reduceIndexed(function (acc, x, idx, ls) {\n        eq(ls, list);\n        return acc;\n      }, 0, list);\n    });","file":"addIndex.js","skipped":false,"dir":"test"},{"name":"passes the index as a second parameter","suites":["addIndex","works with functions like `all` that do not typically have index applied"],"updatePoint":{"line":67,"column":46,"index":2190},"line":67,"code":"    it('passes the index as a second parameter', function () {\n      eq(superDiagonal([8, 6, 5, 4, 9]), true); // 8 > 0, 6 > 1, 5 > 2, 4 > 3, 9 > 5\n\n      eq(superDiagonal([8, 6, 1, 3, 9]), false); //  1 !> 2, 3 !> 3\n    });","file":"addIndex.js","skipped":false,"dir":"test"},{"name":"passes the index as an additional parameter","suites":["addIndex","works with arbitrary user-defined functions"],"updatePoint":{"line":79,"column":51,"index":2646},"line":79,"code":"    it('passes the index as an additional parameter', function () {\n      eq(mapFilterIndexed(R.multiply, R.gt(R.__, 13), [8, 6, 7, 5, 3, 0, 9]), [7, 5, 9]); // 2 * 7 > 13, 3 * 5 > 13, 6 * 9 > 13\n    });","file":"addIndex.js","skipped":false,"dir":"test"},{"name":"works just like a normal (reversed) map","suites":["addIndexRight","unary functions like `map`"],"updatePoint":{"line":24,"column":47,"index":607},"line":24,"code":"    it('works just like a normal (reversed) map', function () {\n      eq(revmapIndexed(times2, [1, 2, 3, 4]), [8, 6, 4, 2]);\n    });","file":"addIndexRight.js","skipped":false,"dir":"test"},{"name":"passes the index as a second parameter to the callback","suites":["addIndexRight","unary functions like `map`"],"updatePoint":{"line":27,"column":62,"index":755},"line":27,"code":"    it('passes the index as a second parameter to the callback', function () {\n      eq(revmapIndexed(addIndexParam, [8, 6, 7, 5, 3, 0, 9]), [15, 5, 7, 8, 9, 7, 8]); // [9 + 6, 0 + 5...]\n    });","file":"addIndexRight.js","skipped":false,"dir":"test"},{"name":"passes the entire list as a third parameter to the callback","suites":["addIndexRight","unary functions like `map`"],"updatePoint":{"line":30,"column":67,"index":955},"line":30,"code":"    it('passes the entire list as a third parameter to the callback', function () {\n      eq(revmapIndexed(squareEnds, [8, 6, 7, 5, 3, 0, 9]), [81, 0, 3, 5, 7, 6, 64]);\n    });","file":"addIndexRight.js","skipped":false,"dir":"test"},{"name":"acts as a curried function","suites":["addIndexRight","unary functions like `map`"],"updatePoint":{"line":33,"column":34,"index":1099},"line":33,"code":"    it('acts as a curried function', function () {\n      var makeSquareEnds = revmapIndexed(squareEnds);\n      eq(makeSquareEnds([8, 6, 7, 5, 3, 0, 9]), [81, 0, 3, 5, 7, 6, 64]);\n    });","file":"addIndexRight.js","skipped":false,"dir":"test"},{"name":"passes the index as a third parameter to the predicate","suites":["addIndexRight","binary functions like `reduce`"],"updatePoint":{"line":50,"column":62,"index":1626},"line":50,"code":"    it('passes the index as a third parameter to the predicate', function () {\n      eq(reduceRightIndexed(timesIndexed, 0, [1, 2, 3, 4, 5]), 40);\n      eq(reduceRightIndexed(objectify, {}, ['a', 'b', 'c', 'd', 'e']), {\n        a: 0,\n        b: 1,\n        c: 2,\n        d: 3,\n        e: 4\n      });\n    });","file":"addIndexRight.js","skipped":false,"dir":"test"},{"name":"passes the entire list as a fourth parameter to the predicate","suites":["addIndexRight","binary functions like `reduce`"],"updatePoint":{"line":60,"column":69,"index":1940},"line":60,"code":"    it('passes the entire list as a fourth parameter to the predicate', function () {\n      var list = [1, 2, 3];\n      reduceRightIndexed(function (acc, x, idx, ls) {\n        eq(ls, list);\n        return acc;\n      }, 0, list);\n    });","file":"addIndexRight.js","skipped":false,"dir":"test"},{"name":"passes the index as a second parameter","suites":["addIndexRight","works with functions like `all` that do not typically have index applied"],"updatePoint":{"line":71,"column":46,"index":2348},"line":71,"code":"    it('passes the index as a second parameter', function () {\n      eq(superDiagonal([8, 6, 5, 4, 9]), true); // 8 > 0, 6 > 1, 5 > 2, 4 > 3, 9 > 5\n\n      eq(superDiagonal([8, 6, 1, 3, 9]), false); //  1 !> 2, 3 !> 3\n    });","file":"addIndexRight.js","skipped":false,"dir":"test"},{"name":"passes the index as an additional parameter","suites":["addIndexRight","works with arbitrary user-defined functions"],"updatePoint":{"line":83,"column":51,"index":2829},"line":83,"code":"    it('passes the index as an additional parameter', function () {\n      eq(revmapFilterIndexed(R.multiply, R.gt(R.__, 13), [8, 6, 7, 5, 3, 0, 9]), [9, 5, 7]); // 6 * 9 > 13, 3 * 5 > 13, 2 * 7 > 13\n    });","file":"addIndexRight.js","skipped":false,"dir":"test"},{"name":"applies the given function to the value at the given index of the supplied array","suites":["adjust"],"updatePoint":{"line":6,"column":86,"index":197},"line":6,"code":"  it('applies the given function to the value at the given index of the supplied array', function () {\n    eq(R.adjust(2, R.add(1), [0, 1, 2, 3]), [0, 1, 3, 3]);\n  });","file":"adjust.js","skipped":false,"dir":"test"},{"name":"offsets negative indexes from the end of the array","suites":["adjust"],"updatePoint":{"line":9,"column":56,"index":335},"line":9,"code":"  it('offsets negative indexes from the end of the array', function () {\n    eq(R.adjust(-3, R.add(1), [0, 1, 2, 3]), [0, 2, 2, 3]);\n  });","file":"adjust.js","skipped":false,"dir":"test"},{"name":"returns the original array if the supplied index is out of bounds","suites":["adjust"],"updatePoint":{"line":12,"column":71,"index":489},"line":12,"code":"  it('returns the original array if the supplied index is out of bounds', function () {\n    var list = [0, 1, 2, 3];\n    eq(R.adjust(4, R.add(1), list), list);\n    eq(R.adjust(-5, R.add(1), list), list);\n  });","file":"adjust.js","skipped":false,"dir":"test"},{"name":"does not mutate the original array","suites":["adjust"],"updatePoint":{"line":17,"column":40,"index":668},"line":17,"code":"  it('does not mutate the original array', function () {\n    var list = [0, 1, 2, 3];\n    eq(R.adjust(2, R.add(1), list), [0, 1, 3, 3]);\n    eq(list, [0, 1, 2, 3]);\n  });","file":"adjust.js","skipped":false,"dir":"test"},{"name":"accepts an array-like object","suites":["adjust"],"updatePoint":{"line":22,"column":34,"index":833},"line":22,"code":"  it('accepts an array-like object', function () {\n    function args() {\n      return arguments;\n    }\n\n    eq(R.adjust(2, R.add(1), args(0, 1, 2, 3)), [0, 1, 3, 3]);\n  });","file":"adjust.js","skipped":false,"dir":"test"},{"name":"returns true if all elements satisfy the predicate","suites":["all"],"updatePoint":{"line":21,"column":56,"index":406},"line":21,"code":"  it('returns true if all elements satisfy the predicate', function () {\n    eq(R.all(even, [2, 4, 6, 8, 10, 12]), true);\n    eq(R.all(isFalse, [false, false, false]), true);\n  });","file":"all.js","skipped":false,"dir":"test"},{"name":"returns false if any element fails to satisfy the predicate","suites":["all"],"updatePoint":{"line":25,"column":65,"index":596},"line":25,"code":"  it('returns false if any element fails to satisfy the predicate', function () {\n    eq(R.all(even, [2, 4, 6, 8, 9, 10]), false);\n  });","file":"all.js","skipped":false,"dir":"test"},{"name":"returns true for an empty list","suites":["all"],"updatePoint":{"line":28,"column":36,"index":704},"line":28,"code":"  it('returns true for an empty list', function () {\n    eq(R.all(T, []), true);\n  });","file":"all.js","skipped":false,"dir":"test"},{"name":"returns true into array if all elements satisfy the predicate","suites":["all"],"updatePoint":{"line":31,"column":67,"index":822},"line":31,"code":"  it('returns true into array if all elements satisfy the predicate', function () {\n    eq(intoArray(R.all(even), [2, 4, 6, 8, 10, 12]), [true]);\n    eq(intoArray(R.all(isFalse), [false, false, false]), [true]);\n  });","file":"all.js","skipped":false,"dir":"test"},{"name":"returns false into array if any element fails to satisfy the predicate","suites":["all"],"updatePoint":{"line":35,"column":76,"index":1049},"line":35,"code":"  it('returns false into array if any element fails to satisfy the predicate', function () {\n    eq(intoArray(R.all(even), [2, 4, 6, 8, 9, 10]), [false]);\n  });","file":"all.js","skipped":false,"dir":"test"},{"name":"returns true into array for an empty list","suites":["all"],"updatePoint":{"line":38,"column":47,"index":1181},"line":38,"code":"  it('returns true into array for an empty list', function () {\n    eq(intoArray(R.all(T), []), [true]);\n  });","file":"all.js","skipped":false,"dir":"test"},{"name":"works with more complex objects","suites":["all"],"updatePoint":{"line":41,"column":37,"index":1282},"line":41,"code":"  it('works with more complex objects', function () {\n    var xs = [{\n      x: 'abc'\n    }, {\n      x: 'ade'\n    }, {\n      x: 'fghiajk'\n    }];\n\n    function len3(o) {\n      return o.x.length === 3;\n    }\n\n    function hasA(o) {\n      return o.x.indexOf('a') > -1;\n    }\n\n    eq(R.all(len3, xs), false);\n    eq(R.all(hasA, xs), true);\n  });","file":"all.js","skipped":false,"dir":"test"},{"name":"dispatches when given a transformer in list position","suites":["all"],"updatePoint":{"line":61,"column":58,"index":1645},"line":61,"code":"  it('dispatches when given a transformer in list position', function () {\n    eq(R.all(even, listXf), {\n      all: true,\n      f: even,\n      xf: listXf\n    });\n  });","file":"all.js","skipped":false,"dir":"test"},{"name":"can act as a transducer","suites":["all"],"updatePoint":{"line":68,"column":29,"index":1784},"line":68,"code":"  it('can act as a transducer', function () {\n    var input = [2, 4, 6, 8, 9, 10];\n    var expected = [false];\n    eq(R.into([], R.all(even), input), expected);\n    eq(R.transduce(R.all(even), R.flip(R.append), [], input), expected);\n  });","file":"all.js","skipped":false,"dir":"test"},{"name":"reports whether all predicates are satisfied by a given value","suites":["allPass"],"updatePoint":{"line":22,"column":67,"index":413},"line":22,"code":"  it('reports whether all predicates are satisfied by a given value', function () {\n    var ok = R.allPass([odd, lt20, gt5]);\n    eq(ok(7), true);\n    eq(ok(9), true);\n    eq(ok(10), false);\n    eq(ok(3), false);\n    eq(ok(21), false);\n  });","file":"allPass.js","skipped":false,"dir":"test"},{"name":"returns true on empty predicate list","suites":["allPass"],"updatePoint":{"line":30,"column":42,"index":630},"line":30,"code":"  it('returns true on empty predicate list', function () {\n    eq(R.allPass([])(3), true);\n  });","file":"allPass.js","skipped":false,"dir":"test"},{"name":"returns a curried function whose arity matches that of the highest-arity predicate","suites":["allPass"],"updatePoint":{"line":33,"column":88,"index":773},"line":33,"code":"  it('returns a curried function whose arity matches that of the highest-arity predicate', function () {\n    eq(R.allPass([odd, gt5, plusEq]).length, 4);\n    eq(R.allPass([odd, gt5, plusEq])(9, 9, 9, 9), true);\n    eq(R.allPass([odd, gt5, plusEq])(9)(9)(9)(9), true);\n  });","file":"allPass.js","skipped":false,"dir":"test"},{"name":"returns a function that returns the object initially supplied","suites":["always"],"updatePoint":{"line":8,"column":67,"index":211},"line":8,"code":"  it('returns a function that returns the object initially supplied', function () {\n    var theMeaning = R.always(42);\n    eq(theMeaning(), 42);\n    eq(theMeaning(10), 42);\n    eq(theMeaning(false), 42);\n  });","file":"always.js","skipped":false,"dir":"test"},{"name":"works with various types","suites":["always"],"updatePoint":{"line":14,"column":30,"index":384},"line":14,"code":"  it('works with various types', function () {\n    eq(R.always(false)(), false);\n    eq(R.always('abc')(), 'abc');\n    eq(R.always({\n      a: 1,\n      b: 2\n    })(), {\n      a: 1,\n      b: 2\n    });\n    var obj = {\n      a: 1,\n      b: 2\n    };\n    eq(R.always(obj)(), obj);\n    var now = new Date(1776, 6, 4);\n    eq(R.always(now)(), new Date(1776, 6, 4));\n    eq(R.always(undefined)(), undefined);\n  });","file":"always.js","skipped":false,"dir":"test"},{"name":"returns initial argument","suites":["always properties"],"updatePoint":{"line":35,"column":30,"index":838},"line":35,"code":"  it('returns initial argument', function () {\n    fc.assert(fc.property(fc.anything(), fc.anything(), function (a, b) {\n      fc.pre(a === a);\n      var f = R.always(a);\n      return f() === a && f(b) === a;\n    }));\n  });","file":"always.js","skipped":false,"dir":"test"},{"name":"compares two values with js &&","suites":["and"],"updatePoint":{"line":6,"column":36,"index":144},"line":6,"code":"  it('compares two values with js &&', function () {\n    eq(R.and(true, true), true);\n    eq(R.and(true, false), false);\n    eq(R.and(false, true), false);\n    eq(R.and(false, false), false);\n  });","file":"and.js","skipped":false,"dir":"test"},{"name":"invokes then on the promise with the function passed to it","suites":["andThen"],"updatePoint":{"line":8,"column":64,"index":209},"line":8,"code":"  it('invokes then on the promise with the function passed to it', function (done) {\n    R.andThen(function (n) {\n      eq(n, 1);\n      done();\n    }, Promise.resolve(1));\n  });","file":"andThen.js","skipped":false,"dir":"test"},{"name":"flattens promise returning functions","suites":["andThen"],"updatePoint":{"line":14,"column":42,"index":365},"line":14,"code":"  it('flattens promise returning functions', function (done) {\n    var incAndWrap = R.compose(Promise.resolve.bind(Promise), R.inc);\n    var asyncAddThree = R.pipe(incAndWrap, R.andThen(incAndWrap), R.andThen(incAndWrap));\n    R.andThen(function (result) {\n      eq(result, 4);\n      done();\n    })(asyncAddThree(1));\n  });","file":"andThen.js","skipped":false,"dir":"test"},{"name":"throws a typeError if the then method does not exist","suites":["andThen"],"updatePoint":{"line":22,"column":58,"index":705},"line":22,"code":"  it('throws a typeError if the then method does not exist', function () {\n    assert.throws(function () {\n      R.andThen(R.inc, 1);\n    }, function (err) {\n      return err.constructor === TypeError && err.message === '`andThen` expected a Promise, received 1';\n    });\n  });","file":"andThen.js","skipped":false,"dir":"test"},{"name":"is not dependent on a particular promise implementation","suites":["andThen"],"updatePoint":{"line":29,"column":61,"index":986},"line":29,"code":"  it('is not dependent on a particular promise implementation', function (done) {\n    var thennable = {\n      then: function (f) {\n        return f(42);\n      }\n    };\n\n    var f = function (n) {\n      eq(n, 42);\n      done();\n    };\n\n    R.andThen(f, thennable);\n  });","file":"andThen.js","skipped":false,"dir":"test"},{"name":"returns true if any element satisfies the predicate","suites":["any"],"updatePoint":{"line":17,"column":57,"index":345},"line":17,"code":"  it('returns true if any element satisfies the predicate', function () {\n    eq(R.any(odd, [2, 4, 6, 8, 10, 11, 12]), true);\n  });","file":"any.js","skipped":false,"dir":"test"},{"name":"returns false if all elements fails to satisfy the predicate","suites":["any"],"updatePoint":{"line":20,"column":66,"index":486},"line":20,"code":"  it('returns false if all elements fails to satisfy the predicate', function () {\n    eq(R.any(odd, [2, 4, 6, 8, 10, 12]), false);\n  });","file":"any.js","skipped":false,"dir":"test"},{"name":"returns true into array if any element satisfies the predicate","suites":["any"],"updatePoint":{"line":23,"column":68,"index":626},"line":23,"code":"  it('returns true into array if any element satisfies the predicate', function () {\n    eq(intoArray(R.any(odd), [2, 4, 6, 8, 10, 11, 12]), [true]);\n  });","file":"any.js","skipped":false,"dir":"test"},{"name":"returns false if all elements fails to satisfy the predicate","suites":["any"],"updatePoint":{"line":26,"column":66,"index":780},"line":26,"code":"  it('returns false if all elements fails to satisfy the predicate', function () {\n    eq(intoArray(R.any(odd), [2, 4, 6, 8, 10, 12]), [false]);\n  });","file":"any.js","skipped":false,"dir":"test"},{"name":"works with more complex objects","suites":["any"],"updatePoint":{"line":29,"column":37,"index":902},"line":29,"code":"  it('works with more complex objects', function () {\n    var people = [{\n      first: 'Paul',\n      last: 'Grenier'\n    }, {\n      first: 'Mike',\n      last: 'Hurley'\n    }, {\n      first: 'Will',\n      last: 'Klein'\n    }];\n\n    var alliterative = function (person) {\n      return person.first.charAt(0) === person.last.charAt(0);\n    };\n\n    eq(R.any(alliterative, people), false);\n    people.push({\n      first: 'Scott',\n      last: 'Sauyet'\n    });\n    eq(R.any(alliterative, people), true);\n  });","file":"any.js","skipped":false,"dir":"test"},{"name":"can use a configurable function","suites":["any"],"updatePoint":{"line":52,"column":37,"index":1405},"line":52,"code":"  it('can use a configurable function', function () {\n    var teens = [{\n      name: 'Alice',\n      age: 14\n    }, {\n      name: 'Betty',\n      age: 18\n    }, {\n      name: 'Cindy',\n      age: 17\n    }];\n\n    var atLeast = function (age) {\n      return function (person) {\n        return person.age >= age;\n      };\n    };\n\n    eq(R.any(atLeast(16), teens), true);\n    eq(R.any(atLeast(21), teens), false);\n  });","file":"any.js","skipped":false,"dir":"test"},{"name":"returns false for an empty list","suites":["any"],"updatePoint":{"line":73,"column":37,"index":1818},"line":73,"code":"  it('returns false for an empty list', function () {\n    eq(R.any(T, []), false);\n  });","file":"any.js","skipped":false,"dir":"test"},{"name":"returns false into array for an empty list","suites":["any"],"updatePoint":{"line":76,"column":48,"index":1918},"line":76,"code":"  it('returns false into array for an empty list', function () {\n    eq(intoArray(R.any(T), []), [false]);\n  });","file":"any.js","skipped":false,"dir":"test"},{"name":"dispatches when given a transformer in list position","suites":["any"],"updatePoint":{"line":79,"column":58,"index":2041},"line":79,"code":"  it('dispatches when given a transformer in list position', function () {\n    eq(R.any(odd, listXf), {\n      any: false,\n      f: odd,\n      xf: listXf\n    });\n  });","file":"any.js","skipped":false,"dir":"test"},{"name":"can act as a transducer","suites":["any"],"updatePoint":{"line":86,"column":29,"index":2179},"line":86,"code":"  it('can act as a transducer', function () {\n    var input = [2, 4, 6, 8, 10];\n    var expected = [false];\n    eq(R.into([], R.any(odd), input), expected);\n    eq(R.transduce(R.any(odd), R.flip(R.append), [], input), expected);\n  });","file":"any.js","skipped":false,"dir":"test"},{"name":"reports whether any predicates are satisfied by a given value","suites":["anyPass"],"updatePoint":{"line":22,"column":67,"index":413},"line":22,"code":"  it('reports whether any predicates are satisfied by a given value', function () {\n    var ok = R.anyPass([odd, gt20, lt5]);\n    eq(ok(7), true);\n    eq(ok(9), true);\n    eq(ok(10), false);\n    eq(ok(18), false);\n    eq(ok(3), true);\n    eq(ok(22), true);\n  });","file":"anyPass.js","skipped":false,"dir":"test"},{"name":"returns false for an empty predicate list","suites":["anyPass"],"updatePoint":{"line":31,"column":47,"index":656},"line":31,"code":"  it('returns false for an empty predicate list', function () {\n    eq(R.anyPass([])(3), false);\n  });","file":"anyPass.js","skipped":false,"dir":"test"},{"name":"returns a curried function whose arity matches that of the highest-arity predicate","suites":["anyPass"],"updatePoint":{"line":34,"column":88,"index":800},"line":34,"code":"  it('returns a curried function whose arity matches that of the highest-arity predicate', function () {\n    eq(R.anyPass([odd, lt5, plusEq]).length, 4);\n    eq(R.anyPass([odd, lt5, plusEq])(6, 7, 8, 9), false);\n    eq(R.anyPass([odd, lt5, plusEq])(6)(7)(8)(9), false);\n  });","file":"anyPass.js","skipped":false,"dir":"test"},{"name":"interprets [a] as an applicative","suites":["ap"],"updatePoint":{"line":14,"column":38,"index":235},"line":14,"code":"  it('interprets [a] as an applicative', function () {\n    eq(R.ap([mult2, plus3], [1, 2, 3]), [2, 4, 6, 4, 5, 6]);\n  });","file":"ap.js","skipped":false,"dir":"test"},{"name":"interprets ((->) r) as an applicative","suites":["ap"],"updatePoint":{"line":17,"column":43,"index":362},"line":17,"code":"  it('interprets ((->) r) as an applicative', function () {\n    var f = function (r) {\n      return function (a) {\n        return r + a;\n      };\n    };\n\n    var g = function (r) {\n      return r * 2;\n    };\n\n    var h = R.ap(f, g); // (<*>) :: (r -> a -> b) -> (r -> a) -> (r -> b)\n    // f <*> g = \\x -> f x (g x)\n\n    eq(h(10), 10 + 10 * 2);\n    eq(R.ap(R.add)(g)(10), 10 + 10 * 2);\n  });","file":"ap.js","skipped":false,"dir":"test"},{"name":"dispatches to the first passed object's ap method when values is a non-Array object","suites":["ap"],"updatePoint":{"line":34,"column":90,"index":801},"line":34,"code":"  it('dispatches to the first passed object\\'s ap method when values is a non-Array object', function () {\n    var obj = {\n      ap: function (n) {\n        return 'called ap with ' + n;\n      }\n    };\n    eq(R.ap(obj, 10), obj.ap(10));\n  });","file":"ap.js","skipped":false,"dir":"test"},{"name":"creates a list of n-tuples from a list","suites":["aperture"],"updatePoint":{"line":7,"column":44,"index":196},"line":7,"code":"  it('creates a list of n-tuples from a list', function () {\n    eq(R.aperture(1, sevenLs), [[1], [2], [3], [4], [5], [6], [7]]);\n    eq(R.aperture(2, sevenLs), [[1, 2], [2, 3], [3, 4], [4, 5], [5, 6], [6, 7]]);\n    eq(R.aperture(3, sevenLs), [[1, 2, 3], [2, 3, 4], [3, 4, 5], [4, 5, 6], [5, 6, 7]]);\n    eq(R.aperture(4, [1, 2, 3, 4]), [[1, 2, 3, 4]]);\n  });","file":"aperture.js","skipped":false,"dir":"test"},{"name":"returns an empty list when `n` > `list.length`","suites":["aperture"],"updatePoint":{"line":13,"column":52,"index":564},"line":13,"code":"  it('returns an empty list when `n` > `list.length`', function () {\n    eq(R.aperture(6, [1, 2, 3]), []);\n    eq(R.aperture(1, []), []);\n  });","file":"aperture.js","skipped":false,"dir":"test"},{"name":"can act as a transducer","suites":["aperture"],"updatePoint":{"line":17,"column":29,"index":685},"line":17,"code":"  it('can act as a transducer', function () {\n    var expected = [[1, 2], [2, 3], [3, 4], [4, 5], [5, 6], [6, 7]];\n    eq(R.into([], R.aperture(2), sevenLs), expected);\n    eq(R.transduce(R.aperture(2), R.flip(R.append), [], sevenLs), expected);\n  });","file":"aperture.js","skipped":false,"dir":"test"},{"name":"adds the element to the end of the list","suites":["append"],"updatePoint":{"line":6,"column":45,"index":156},"line":6,"code":"  it('adds the element to the end of the list', function () {\n    eq(R.append('z', ['x', 'y']), ['x', 'y', 'z']);\n    eq(R.append(['a', 'z'], ['x', 'y']), ['x', 'y', ['a', 'z']]);\n  });","file":"append.js","skipped":false,"dir":"test"},{"name":"works on empty list","suites":["append"],"updatePoint":{"line":10,"column":25,"index":322},"line":10,"code":"  it('works on empty list', function () {\n    eq(R.append(1, []), [1]);\n  });","file":"append.js","skipped":false,"dir":"test"},{"name":"applies function to argument list","suites":["apply"],"updatePoint":{"line":6,"column":39,"index":149},"line":6,"code":"  it('applies function to argument list', function () {\n    eq(R.apply(Math.max, [1, 2, 3, -99, 42, 6, 7]), 42);\n  });","file":"apply.js","skipped":false,"dir":"test"},{"name":"provides no way to specify context","suites":["apply"],"updatePoint":{"line":9,"column":40,"index":269},"line":9,"code":"  it('provides no way to specify context', function () {\n    var obj = {\n      method: function () {\n        return this === obj;\n      }\n    };\n    eq(R.apply(obj.method, []), false);\n    eq(R.apply(R.bind(obj.method, obj), []), true);\n  });","file":"apply.js","skipped":false,"dir":"test"},{"name":"works with empty spec","suites":["applySpec"],"updatePoint":{"line":6,"column":27,"index":141},"line":6,"code":"  it('works with empty spec', function () {\n    eq(R.applySpec({})(), {});\n  });","file":"applySpec.js","skipped":false,"dir":"test"},{"name":"works with unary functions","suites":["applySpec"],"updatePoint":{"line":9,"column":32,"index":227},"line":9,"code":"  it('works with unary functions', function () {\n    eq(R.applySpec({\n      v: R.inc,\n      u: R.dec\n    })(1), {\n      v: 2,\n      u: 0\n    });\n  });","file":"applySpec.js","skipped":false,"dir":"test"},{"name":"works with binary functions","suites":["applySpec"],"updatePoint":{"line":18,"column":33,"index":379},"line":18,"code":"  it('works with binary functions', function () {\n    eq(R.applySpec({\n      sum: R.add\n    })(1, 2), {\n      sum: 3\n    });\n  });","file":"applySpec.js","skipped":false,"dir":"test"},{"name":"works with nested specs","suites":["applySpec"],"updatePoint":{"line":25,"column":29,"index":506},"line":25,"code":"  it('works with nested specs', function () {\n    eq(R.applySpec({\n      unnested: R.always(0),\n      nested: {\n        sum: R.add\n      }\n    })(1, 2), {\n      unnested: 0,\n      nested: {\n        sum: 3\n      }\n    });\n  });","file":"applySpec.js","skipped":false,"dir":"test"},{"name":"works with arrays of nested specs","suites":["applySpec"],"updatePoint":{"line":38,"column":39,"index":743},"line":38,"code":"  it('works with arrays of nested specs', function () {\n    eq(R.applySpec({\n      unnested: R.always(0),\n      nested: [{\n        sum: R.add\n      }]\n    })(1, 2), {\n      unnested: 0,\n      nested: [{\n        sum: 3\n      }]\n    });\n  });","file":"applySpec.js","skipped":false,"dir":"test"},{"name":"works with arrays of spec objects","suites":["applySpec"],"updatePoint":{"line":51,"column":39,"index":984},"line":51,"code":"  it('works with arrays of spec objects', function () {\n    eq(R.applySpec([{\n      sum: R.add\n    }])(1, 2), [{\n      sum: 3\n    }]);\n  });","file":"applySpec.js","skipped":false,"dir":"test"},{"name":"works with arrays of functions","suites":["applySpec"],"updatePoint":{"line":58,"column":36,"index":1122},"line":58,"code":"  it('works with arrays of functions', function () {\n    eq(R.applySpec([R.map(R.prop('a')), R.map(R.prop('b'))])([{\n      a: 'a1',\n      b: 'b1'\n    }, {\n      a: 'a2',\n      b: 'b2'\n    }]), [['a1', 'a2'], ['b1', 'b2']]);\n  });","file":"applySpec.js","skipped":false,"dir":"test"},{"name":"works with a spec defining a map key","suites":["applySpec"],"updatePoint":{"line":67,"column":42,"index":1358},"line":67,"code":"  it('works with a spec defining a map key', function () {\n    eq(R.applySpec({\n      map: R.prop('a')\n    })({\n      a: 1\n    }), {\n      map: 1\n    });\n  });","file":"applySpec.js","skipped":false,"dir":"test"},{"name":"retains the highest arity","suites":["applySpec"],"updatePoint":{"line":76,"column":31,"index":1507},"line":76,"code":"  it('retains the highest arity', function () {\n    var f = R.applySpec({\n      f1: R.nAry(2, R.T),\n      f2: R.nAry(5, R.T)\n    });\n    eq(f.length, 5);\n  });","file":"applySpec.js","skipped":false,"dir":"test"},{"name":"returns a curried function","suites":["applySpec"],"updatePoint":{"line":83,"column":32,"index":1668},"line":83,"code":"  it('returns a curried function', function () {\n    eq(R.applySpec({\n      sum: R.add\n    })(1)(2), {\n      sum: 3\n    });\n  });","file":"applySpec.js","skipped":false,"dir":"test"},{"name":"applies the function to its first argument","suites":["applyTo"],"updatePoint":{"line":6,"column":48,"index":160},"line":6,"code":"  it('applies the function to its first argument', function () {\n    eq(R.applyTo(21, R.multiply(2)), 42);\n  });","file":"applyTo.js","skipped":false,"dir":"test"},{"name":"has length 2","suites":["applyTo"],"updatePoint":{"line":9,"column":18,"index":243},"line":9,"code":"  it('has length 2', function () {\n    eq(R.applyTo.length, 2);\n  });","file":"applyTo.js","skipped":false,"dir":"test"},{"name":"builds an ascending comparator function out of the identity function","suites":["ascend"],"updatePoint":{"line":6,"column":74,"index":185},"line":6,"code":"  it('builds an ascending comparator function out of the identity function', function () {\n    eq([3, 1, 8, 1, 2, 5].sort(R.ascend(R.identity)), [1, 1, 2, 3, 5, 8]);\n  });","file":"ascend.js","skipped":false,"dir":"test"},{"name":"makes a shallow clone of an object, overriding only the specified property","suites":["assoc"],"updatePoint":{"line":8,"column":80,"index":223},"line":8,"code":"  it('makes a shallow clone of an object, overriding only the specified property', function () {\n    var obj1 = {\n      a: 1,\n      b: {\n        c: 2,\n        d: 3\n      },\n      e: 4,\n      f: 5\n    };\n    var obj2 = R.assoc('e', {\n      x: 42\n    }, obj1);\n    eq(obj2, {\n      a: 1,\n      b: {\n        c: 2,\n        d: 3\n      },\n      e: {\n        x: 42\n      },\n      f: 5\n    }); // Note: reference equality below!\n\n    assert.strictEqual(obj2.a, obj1.a);\n    assert.strictEqual(obj2.b, obj1.b);\n    assert.strictEqual(obj2.f, obj1.f);\n  });","file":"assoc.js","skipped":false,"dir":"test"},{"name":"is the equivalent of clone and set if the property is not on the original","suites":["assoc"],"updatePoint":{"line":37,"column":79,"index":770},"line":37,"code":"  it('is the equivalent of clone and set if the property is not on the original', function () {\n    var obj1 = {\n      a: 1,\n      b: {\n        c: 2,\n        d: 3\n      },\n      e: 4,\n      f: 5\n    };\n    var obj2 = R.assoc('z', {\n      x: 42\n    }, obj1);\n    eq(obj2, {\n      a: 1,\n      b: {\n        c: 2,\n        d: 3\n      },\n      e: 4,\n      f: 5,\n      z: {\n        x: 42\n      }\n    }); // Note: reference equality below!\n\n    assert.strictEqual(obj2.a, obj1.a);\n    assert.strictEqual(obj2.b, obj1.b);\n    assert.strictEqual(obj2.f, obj1.f);\n  });","file":"assoc.js","skipped":false,"dir":"test"},{"name":"makes a shallow clone of an array, overriding only the specified index","suites":["assoc"],"updatePoint":{"line":67,"column":76,"index":1326},"line":67,"code":"  it('makes a shallow clone of an array, overriding only the specified index', function () {\n    var newValue = [4, 2];\n    var ary1 = [1, [2, 3], 4, 5];\n    var ary2 = R.assoc(2, newValue, ary1);\n    eq(ary2, [1, [2, 3], [4, 2], 5]); // Note: reference equality below!\n\n    assert.strictEqual(ary2[0], ary1[0]);\n    assert.strictEqual(ary2[1], ary1[1]);\n    assert.strictEqual(ary2[2], newValue);\n    assert.strictEqual(ary2[3], ary1[3]);\n  });","file":"assoc.js","skipped":false,"dir":"test"},{"name":"is the equivalent of clone and set if the index is not on the original","suites":["assoc"],"updatePoint":{"line":78,"column":76,"index":1772},"line":78,"code":"  it('is the equivalent of clone and set if the index is not on the original', function () {\n    var newValue = [4, 2];\n    var ary1 = [1, [2, 3], 4];\n    var ary2 = R.assoc(5, newValue, ary1);\n    eq(ary2, [1, [2, 3], 4, undefined, undefined, [4, 2]]); // Note: reference equality below!\n\n    assert.strictEqual(ary2[0], ary1[0]);\n    assert.strictEqual(ary2[1], ary1[1]);\n    assert.strictEqual(ary2[2], ary1[2]);\n    assert.strictEqual(ary2[5], newValue);\n  });","file":"assoc.js","skipped":false,"dir":"test"},{"name":"makes a shallow clone of an object, overriding only what is necessary for the path","suites":["assocPath"],"updatePoint":{"line":8,"column":88,"index":235},"line":8,"code":"  it('makes a shallow clone of an object, overriding only what is necessary for the path', function () {\n    var obj1 = {\n      a: {\n        b: 1,\n        c: 2,\n        d: {\n          e: 3\n        }\n      },\n      f: {\n        g: {\n          h: 4,\n          i: [5, 6, 7],\n          j: {\n            k: 6,\n            l: 7\n          }\n        }\n      },\n      m: 8\n    };\n    var obj2 = R.assocPath(['f', 'g', 'i', 1], 42, obj1);\n    eq(obj2.f.g.i, [5, 42, 7]); // Note: reference equality below!\n\n    assert.strictEqual(obj2.a, obj1.a);\n    assert.strictEqual(obj2.m, obj1.m);\n    assert.strictEqual(obj2.f.g.h, obj1.f.g.h);\n    assert.strictEqual(obj2.f.g.j, obj1.f.g.j);\n  });","file":"assocPath.js","skipped":false,"dir":"test"},{"name":"is the equivalent of clone and setPath if the property is not on the original","suites":["assocPath"],"updatePoint":{"line":37,"column":83,"index":909},"line":37,"code":"  it('is the equivalent of clone and setPath if the property is not on the original', function () {\n    var obj1 = {\n      a: 1,\n      b: {\n        c: 2,\n        d: 3\n      },\n      e: 4,\n      f: 5\n    };\n    var obj2 = R.assocPath(['x', 0, 'y'], 42, obj1);\n    eq(obj2, {\n      a: 1,\n      b: {\n        c: 2,\n        d: 3\n      },\n      e: 4,\n      f: 5,\n      x: [{\n        y: 42\n      }]\n    }); // Note: reference equality below!\n\n    assert.strictEqual(obj2.a, obj1.a);\n    assert.strictEqual(obj2.b, obj1.b);\n    assert.strictEqual(obj2.e, obj1.e);\n    assert.strictEqual(obj2.f, obj1.f);\n  });","file":"assocPath.js","skipped":false,"dir":"test"},{"name":"overwrites primitive values with keys in the path","suites":["assocPath"],"updatePoint":{"line":66,"column":55,"index":1483},"line":66,"code":"  it('overwrites primitive values with keys in the path', function () {\n    var obj1 = {\n      a: 'str'\n    };\n    var obj2 = R.assocPath(['a', 'b'], 42, obj1);\n    eq(obj2, {\n      a: {\n        b: 42\n      }\n    });\n  });","file":"assocPath.js","skipped":false,"dir":"test"},{"name":"empty path replaces the whole object","suites":["assocPath"],"updatePoint":{"line":77,"column":42,"index":1693},"line":77,"code":"  it('empty path replaces the whole object', function () {\n    eq(R.assocPath([], 3, {\n      a: 1,\n      b: 2\n    }), 3);\n  });","file":"assocPath.js","skipped":false,"dir":"test"},{"name":"replaces `undefined` with a new object","suites":["assocPath"],"updatePoint":{"line":83,"column":44,"index":1823},"line":83,"code":"  it('replaces `undefined` with a new object', function () {\n    eq(R.assocPath(['foo', 'bar', 'baz'], 42, {\n      foo: undefined\n    }), {\n      foo: {\n        bar: {\n          baz: 42\n        }\n      }\n    });\n  });","file":"assocPath.js","skipped":false,"dir":"test"},{"name":"replaces `null` with a new object","suites":["assocPath"],"updatePoint":{"line":94,"column":39,"index":2036},"line":94,"code":"  it('replaces `null` with a new object', function () {\n    eq(R.assocPath(['foo', 'bar', 'baz'], 42, {\n      foo: null\n    }), {\n      foo: {\n        bar: {\n          baz: 42\n        }\n      }\n    });\n  });","file":"assocPath.js","skipped":false,"dir":"test"},{"name":"turns multiple-argument function into binary one","suites":["binary"],"updatePoint":{"line":6,"column":54,"index":165},"line":6,"code":"  it('turns multiple-argument function into binary one', function () {\n    R.binary(function (x, y, z) {\n      eq(arguments.length, 2);\n      eq(typeof z, 'undefined');\n    })(10, 20, 30);\n  });","file":"binary.js","skipped":false,"dir":"test"},{"name":"initial arguments are passed through normally","suites":["binary"],"updatePoint":{"line":12,"column":51,"index":357},"line":12,"code":"  it('initial arguments are passed through normally', function () {\n    R.binary(function (x, y, z) {\n      eq(x, 10);\n      eq(y, 20);\n      void z;\n    })(10, 20, 30);\n  });","file":"binary.js","skipped":false,"dir":"test"},{"name":"returns a function","suites":["bind"],"updatePoint":{"line":25,"column":24,"index":384},"line":25,"code":"  it('returns a function', function () {\n    eq(typeof R.bind(add, Foo), 'function');\n  });","file":"bind.js","skipped":false,"dir":"test"},{"name":"returns a function bound to the specified context object","suites":["bind"],"updatePoint":{"line":28,"column":62,"index":514},"line":28,"code":"  it('returns a function bound to the specified context object', function () {\n    var f = new Foo(12);\n\n    function isFoo() {\n      return this instanceof Foo;\n    }\n\n    var isFooBound = R.bind(isFoo, f);\n    eq(isFoo(), false);\n    eq(isFooBound(), true);\n  });","file":"bind.js","skipped":false,"dir":"test"},{"name":"works with built-in types","suites":["bind"],"updatePoint":{"line":39,"column":31,"index":749},"line":39,"code":"  it('works with built-in types', function () {\n    var abc = R.bind(String.prototype.toLowerCase, 'ABCDEFG');\n    eq(typeof abc, 'function');\n    eq(abc(), 'abcdefg');\n  });","file":"bind.js","skipped":false,"dir":"test"},{"name":"works with user-defined types","suites":["bind"],"updatePoint":{"line":44,"column":35,"index":928},"line":44,"code":"  it('works with user-defined types', function () {\n    var f = new Foo(12);\n\n    function getX() {\n      return this.x;\n    }\n\n    var getXFooBound = R.bind(getX, f);\n    eq(getXFooBound(), 12);\n  });","file":"bind.js","skipped":false,"dir":"test"},{"name":"works with plain objects","suites":["bind"],"updatePoint":{"line":54,"column":30,"index":1125},"line":54,"code":"  it('works with plain objects', function () {\n    var pojso = {\n      x: 100\n    };\n\n    function incThis() {\n      return this.x + 1;\n    }\n\n    var incPojso = R.bind(incThis, pojso);\n    eq(typeof incPojso, 'function');\n    eq(incPojso(), 101);\n  });","file":"bind.js","skipped":false,"dir":"test"},{"name":"does not interfere with existing object methods","suites":["bind"],"updatePoint":{"line":67,"column":53,"index":1402},"line":67,"code":"  it('does not interfere with existing object methods', function () {\n    var b = new Bar('a', 'b');\n\n    function getX() {\n      return this.x;\n    }\n\n    var getXBarBound = R.bind(getX, b);\n    eq(b.getX(), 'prototype getX');\n    eq(getXBarBound(), 'a');\n  });","file":"bind.js","skipped":false,"dir":"test"},{"name":"preserves arity","suites":["bind"],"updatePoint":{"line":78,"column":21,"index":1633},"line":78,"code":"  it('preserves arity', function () {\n    var f0 = function () {\n      return 0;\n    };\n\n    var f1 = function (a) {\n      return a;\n    };\n\n    var f2 = function (a, b) {\n      return a + b;\n    };\n\n    var f3 = function (a, b, c) {\n      return a + b + c;\n    };\n\n    eq(R.bind(f0, {}).length, 0);\n    eq(R.bind(f1, {}).length, 1);\n    eq(R.bind(f2, {}).length, 2);\n    eq(R.bind(f3, {}).length, 3);\n  });","file":"bind.js","skipped":false,"dir":"test"},{"name":"combines two boolean-returning functions into one","suites":["both"],"updatePoint":{"line":8,"column":55,"index":195},"line":8,"code":"  it('combines two boolean-returning functions into one', function () {\n    var even = function (x) {\n      return x % 2 === 0;\n    };\n\n    var gt10 = function (x) {\n      return x > 10;\n    };\n\n    var f = R.both(even, gt10);\n    eq(f(8), false);\n    eq(f(13), false);\n    eq(f(14), true);\n  });","file":"both.js","skipped":false,"dir":"test"},{"name":"accepts functions that take multiple parameters","suites":["both"],"updatePoint":{"line":22,"column":53,"index":490},"line":22,"code":"  it('accepts functions that take multiple parameters', function () {\n    var between = function (a, b, c) {\n      return a < b && b < c;\n    };\n\n    var total20 = function (a, b, c) {\n      return a + b + c === 20;\n    };\n\n    var f = R.both(between, total20);\n    eq(f(4, 5, 11), true);\n    eq(f(12, 2, 6), false);\n    eq(f(5, 6, 15), false);\n  });","file":"both.js","skipped":false,"dir":"test"},{"name":"does not evaluate the second expression if the first one is false","suites":["both"],"updatePoint":{"line":36,"column":71,"index":859},"line":36,"code":"  it('does not evaluate the second expression if the first one is false', function () {\n    var F = function () {\n      return false;\n    };\n\n    var Z = function () {\n      effect = 'Z got evaluated';\n    };\n\n    var effect = 'not evaluated';\n    R.both(F, Z)();\n    eq(effect, 'not evaluated');\n  });","file":"both.js","skipped":false,"dir":"test"},{"name":"accepts fantasy-land applicative functors","suites":["both"],"updatePoint":{"line":49,"column":47,"index":1138},"line":49,"code":"  it('accepts fantasy-land applicative functors', function () {\n    var Just = S.Just;\n    var Nothing = S.Nothing;\n    eq(R.both(Just(true), Just(true)), Just(true));\n    eq(R.both(Just(true), Just(false)), Just(false));\n    eq(R.both(Just(true), Nothing()), Nothing());\n    eq(R.both(Nothing(), Just(false)), Nothing());\n    eq(R.both(Nothing(), Nothing()), Nothing());\n  });","file":"both.js","skipped":false,"dir":"test"},{"name":"returns the result of calling its first argument with the remaining arguments","suites":["call"],"updatePoint":{"line":6,"column":83,"index":192},"line":6,"code":"  it('returns the result of calling its first argument with the remaining arguments', function () {\n    eq(R.call(Math.max, 1, 2, 3, -99, 42, 6, 7), 42);\n  });","file":"call.js","skipped":false,"dir":"test"},{"name":"accepts one or more arguments","suites":["call"],"updatePoint":{"line":9,"column":35,"index":304},"line":9,"code":"  it('accepts one or more arguments', function () {\n    var fn = function () {\n      return arguments.length;\n    };\n\n    eq(R.call(fn), 0);\n    eq(R.call(fn, 'x'), 1);\n    eq(R.call(fn, 'x', 'y'), 2);\n    eq(R.call(fn, 'x', 'y', 'z'), 3);\n  });","file":"call.js","skipped":false,"dir":"test"},{"name":"provides no way to specify context","suites":["call"],"updatePoint":{"line":19,"column":40,"index":555},"line":19,"code":"  it('provides no way to specify context', function () {\n    var obj = {\n      method: function () {\n        return this === obj;\n      }\n    };\n    eq(R.call(obj.method), false);\n    eq(R.call(R.bind(obj.method, obj)), true);\n  });","file":"call.js","skipped":false,"dir":"test"},{"name":"maps a function over a nested list and returns the (shallow) flattened result","suites":["chain"],"updatePoint":{"line":24,"column":83,"index":480},"line":24,"code":"  it('maps a function over a nested list and returns the (shallow) flattened result', function () {\n    eq(R.chain(times2, [1, 2, 3, 1, 0, 10, -3, 5, 7]), [2, 4, 6, 2, 0, 20, -6, 10, 14]);\n    eq(R.chain(times2, [1, 2, 3]), [2, 4, 6]);\n  });","file":"chain.js","skipped":false,"dir":"test"},{"name":"does not flatten recursively","suites":["chain"],"updatePoint":{"line":28,"column":34,"index":673},"line":28,"code":"  it('does not flatten recursively', function () {\n    function f(xs) {\n      return xs[0] ? [xs[0]] : [];\n    }\n\n    eq(R.chain(f, [[1], [[2], 100], [], [3, [4]]]), [1, [2], 3]);\n  });","file":"chain.js","skipped":false,"dir":"test"},{"name":"maps a function (a -> [b]) into a (shallow) flat result","suites":["chain"],"updatePoint":{"line":35,"column":61,"index":886},"line":35,"code":"  it('maps a function (a -> [b]) into a (shallow) flat result', function () {\n    eq(intoArray(R.chain(times2), [1, 2, 3, 4]), [2, 4, 6, 8]);\n  });","file":"chain.js","skipped":false,"dir":"test"},{"name":"interprets ((->) r) as a monad","suites":["chain"],"updatePoint":{"line":38,"column":36,"index":1009},"line":38,"code":"  it('interprets ((->) r) as a monad', function () {\n    var h = function (r) {\n      return r * 2;\n    };\n\n    var f = function (a) {\n      return function (r) {\n        return r + a;\n      };\n    };\n\n    var bound = R.chain(f, h); // (>>=) :: (r -> a) -> (a -> r -> b) -> (r -> b)\n    // h >>= f = \\w -> f (h w) w\n\n    eq(bound(10), 10 * 2 + 10);\n    eq(R.chain(R.append, R.head)([1, 2, 3]), [1, 2, 3, 1]);\n  });","file":"chain.js","skipped":false,"dir":"test"},{"name":"dispatches to objects that implement `chain`","suites":["chain"],"updatePoint":{"line":55,"column":50,"index":1438},"line":55,"code":"  it('dispatches to objects that implement `chain`', function () {\n    var obj = {\n      x: 100,\n      chain: function (f) {\n        return f(this.x);\n      }\n    };\n    eq(R.chain(add1, obj), [101]);\n  });","file":"chain.js","skipped":false,"dir":"test"},{"name":"dispatches to transformer objects","suites":["chain"],"updatePoint":{"line":64,"column":39,"index":1634},"line":64,"code":"  it('dispatches to transformer objects', function () {\n    eq(_isTransformer(R.chain(add1, listXf)), true);\n  });","file":"chain.js","skipped":false,"dir":"test"},{"name":"composes","suites":["chain"],"updatePoint":{"line":67,"column":14,"index":1724},"line":67,"code":"  it('composes', function () {\n    var mdouble = R.chain(times2);\n    var mdec = R.chain(dec);\n    eq(mdec(mdouble([10, 20, 30])), [19, 39, 59]);\n  });","file":"chain.js","skipped":false,"dir":"test"},{"name":"can compose transducer-style","suites":["chain"],"updatePoint":{"line":72,"column":34,"index":1896},"line":72,"code":"  it('can compose transducer-style', function () {\n    var mdouble = R.chain(times2);\n    var mdec = R.chain(dec);\n    var xcomp = R.compose(mdec, mdouble);\n    eq(intoArray(xcomp, [10, 20, 30]), [18, 38, 58]);\n  });","file":"chain.js","skipped":false,"dir":"test"},{"name":"clamps to the lower bound","suites":["clamp"],"updatePoint":{"line":6,"column":31,"index":141},"line":6,"code":"  it('clamps to the lower bound', function () {\n    eq(R.clamp(1, 10, 0), 1);\n    eq(R.clamp(3, 12, 1), 3);\n    eq(R.clamp(-15, 3, -100), -15);\n  });","file":"clamp.js","skipped":false,"dir":"test"},{"name":"clamps to the upper bound","suites":["clamp"],"updatePoint":{"line":11,"column":31,"index":291},"line":11,"code":"  it('clamps to the upper bound', function () {\n    eq(R.clamp(1, 10, 20), 10);\n    eq(R.clamp(3, 12, 23), 12);\n    eq(R.clamp(-15, 3, 16), 3);\n  });","file":"clamp.js","skipped":false,"dir":"test"},{"name":"leaves it alone when within the bound","suites":["clamp"],"updatePoint":{"line":16,"column":43,"index":453},"line":16,"code":"  it('leaves it alone when within the bound', function () {\n    eq(R.clamp(1, 10, 4), 4);\n    eq(R.clamp(3, 12, 6), 6);\n    eq(R.clamp(-15, 3, 0), 0);\n  });","file":"clamp.js","skipped":false,"dir":"test"},{"name":"works with letters as well","suites":["clamp"],"updatePoint":{"line":21,"column":32,"index":599},"line":21,"code":"  it('works with letters as well', function () {\n    eq(R.clamp('d', 'n', 'f'), 'f');\n    eq(R.clamp('d', 'n', 'a'), 'd');\n    eq(R.clamp('d', 'n', 'q'), 'n');\n  });","file":"clamp.js","skipped":false,"dir":"test"},{"name":"clones integers","suites":["deep clone integers, strings and booleans"],"updatePoint":{"line":8,"column":21,"index":200},"line":8,"code":"  it('clones integers', function () {\n    eq(R.clone(-4), -4);\n    eq(R.clone(9007199254740991), 9007199254740991);\n  });","file":"clone.js","skipped":false,"dir":"test"},{"name":"clones floats","suites":["deep clone integers, strings and booleans"],"updatePoint":{"line":12,"column":19,"index":320},"line":12,"code":"  it('clones floats', function () {\n    eq(R.clone(-4.5), -4.5);\n    eq(R.clone(0.0), 0.0);\n  });","file":"clone.js","skipped":false,"dir":"test"},{"name":"clones strings","suites":["deep clone integers, strings and booleans"],"updatePoint":{"line":16,"column":20,"index":419},"line":16,"code":"  it('clones strings', function () {\n    eq(R.clone('ramda'), 'ramda');\n  });","file":"clone.js","skipped":false,"dir":"test"},{"name":"clones booleans","suites":["deep clone integers, strings and booleans"],"updatePoint":{"line":19,"column":21,"index":498},"line":19,"code":"  it('clones booleans', function () {\n    eq(R.clone(true), true);\n  });","file":"clone.js","skipped":false,"dir":"test"},{"name":"clones shallow object","suites":["deep clone objects"],"updatePoint":{"line":24,"column":27,"index":626},"line":24,"code":"  it('clones shallow object', function () {\n    var obj = {\n      a: 1,\n      b: 'ramda',\n      c: true,\n      d: new Date(2013, 11, 25)\n    };\n    var clone = R.clone(obj);\n    obj.c = false;\n    obj.d.setDate(31);\n    eq(clone, {\n      a: 1,\n      b: 'ramda',\n      c: true,\n      d: new Date(2013, 11, 25)\n    });\n  });","file":"clone.js","skipped":false,"dir":"test"},{"name":"clones deep object","suites":["deep clone objects"],"updatePoint":{"line":41,"column":24,"index":946},"line":41,"code":"  it('clones deep object', function () {\n    var obj = {\n      a: {\n        b: {\n          c: 'ramda'\n        }\n      }\n    };\n    var clone = R.clone(obj);\n    obj.a.b.c = null;\n    eq(clone, {\n      a: {\n        b: {\n          c: 'ramda'\n        }\n      }\n    });\n  });","file":"clone.js","skipped":false,"dir":"test"},{"name":"clones objects with circular references","suites":["deep clone objects"],"updatePoint":{"line":59,"column":45,"index":1239},"line":59,"code":"  it('clones objects with circular references', function () {\n    var x = {\n      c: null\n    };\n    var y = {\n      a: x\n    };\n    var z = {\n      b: y\n    };\n    x.c = z;\n    var clone = R.clone(x);\n    assert.notStrictEqual(x, clone);\n    assert.notStrictEqual(x.c, clone.c);\n    assert.notStrictEqual(x.c.b, clone.c.b);\n    assert.notStrictEqual(x.c.b.a, clone.c.b.a);\n    assert.notStrictEqual(x.c.b.a.c, clone.c.b.a.c);\n    eq(R.keys(clone), R.keys(x));\n    eq(R.keys(clone.c), R.keys(x.c));\n    eq(R.keys(clone.c.b), R.keys(x.c.b));\n    eq(R.keys(clone.c.b.a), R.keys(x.c.b.a));\n    eq(R.keys(clone.c.b.a.c), R.keys(x.c.b.a.c));\n    x.c.b = 1;\n    assert.notDeepEqual(clone.c.b, x.c.b);\n  });","file":"clone.js","skipped":false,"dir":"test"},{"name":"clone instances","suites":["deep clone objects"],"updatePoint":{"line":84,"column":21,"index":1916},"line":84,"code":"  it('clone instances', function () {\n    var Obj = function (x) {\n      this.x = x;\n    };\n\n    Obj.prototype.get = function () {\n      return this.x;\n    };\n\n    Obj.prototype.set = function (x) {\n      this.x = x;\n    };\n\n    var obj = new Obj(10);\n    eq(obj.get(), 10);\n    var clone = R.clone(obj);\n    eq(clone.get(), 10);\n    assert.notStrictEqual(obj, clone);\n    obj.set(11);\n    eq(obj.get(), 11);\n    eq(clone.get(), 10);\n  });","file":"clone.js","skipped":false,"dir":"test"},{"name":"only own properties be copied","suites":["deep clone objects"],"updatePoint":{"line":106,"column":35,"index":2370},"line":106,"code":"  it('only own properties be copied', function () {\n    function Obj() {\n      this.x = 'own property';\n    }\n\n    Obj.prototype = {\n      y: 'not own property'\n    };\n    const obj = new Obj();\n    const cloneObj = R.clone(obj);\n    eq(Object.keys(obj), Object.keys(cloneObj));\n  });","file":"clone.js","skipped":false,"dir":"test"},{"name":"the prototype should keep the same","suites":["deep clone objects"],"updatePoint":{"line":118,"column":40,"index":2660},"line":118,"code":"  it('the prototype should keep the same', function () {\n    function Obj() {}\n\n    Obj.prototype = {\n      x: 'prototype property'\n    };\n    const obj = new Obj();\n    const cloneObj = R.clone(obj);\n    eq(Object.getPrototypeOf(obj), Object.getPrototypeOf(cloneObj));\n  });","file":"clone.js","skipped":false,"dir":"test"},{"name":"clones shallow arrays","suites":["deep clone arrays"],"updatePoint":{"line":130,"column":27,"index":2971},"line":130,"code":"  it('clones shallow arrays', function () {\n    var list = [1, 2, 3];\n    var clone = R.clone(list);\n    list.pop();\n    eq(clone, [1, 2, 3]);\n  });","file":"clone.js","skipped":false,"dir":"test"},{"name":"clones deep arrays","suites":["deep clone arrays"],"updatePoint":{"line":136,"column":24,"index":3117},"line":136,"code":"  it('clones deep arrays', function () {\n    var list = [1, [1, 2, 3], [[[5]]]];\n    var clone = R.clone(list);\n    assert.notStrictEqual(list, clone);\n    assert.notStrictEqual(list[2], clone[2]);\n    assert.notStrictEqual(list[2][0], clone[2][0]);\n    eq(clone, [1, [1, 2, 3], [[[5]]]]);\n  });","file":"clone.js","skipped":false,"dir":"test"},{"name":"clones Uint16Array","suites":["deep clone typed arrays"],"updatePoint":{"line":146,"column":24,"index":3467},"line":146,"code":"  it('clones Uint16Array', function () {\n    var array = new Uint16Array([1, 2, 3]);\n    var clone = R.clone(array);\n    assert.notStrictEqual(array, clone);\n    eq(clone, new Uint16Array([1, 2, 3]));\n  });","file":"clone.js","skipped":false,"dir":"test"},{"name":"clones Int8Array","suites":["deep clone typed arrays"],"updatePoint":{"line":152,"column":22,"index":3672},"line":152,"code":"  it('clones Int8Array', function () {\n    var array = new Int8Array([1, 2, 3]);\n    var clone = R.clone(array);\n    assert.notStrictEqual(array, clone);\n    eq(clone, new Int8Array([1, 2, 3]));\n  });","file":"clone.js","skipped":false,"dir":"test"},{"name":"clones Uint8Array","suites":["deep clone typed arrays"],"updatePoint":{"line":158,"column":23,"index":3874},"line":158,"code":"  it('clones Uint8Array', function () {\n    var array = new Uint8Array([1, 2, 3]);\n    var clone = R.clone(array);\n    assert.notStrictEqual(array, clone);\n    eq(clone, new Uint8Array([1, 2, 3]));\n  });","file":"clone.js","skipped":false,"dir":"test"},{"name":"clones Uint8ClampedArray","suites":["deep clone typed arrays"],"updatePoint":{"line":164,"column":30,"index":4085},"line":164,"code":"  it('clones Uint8ClampedArray', function () {\n    var array = new Uint8ClampedArray([1, 2, 3]);\n    var clone = R.clone(array);\n    assert.notStrictEqual(array, clone);\n    eq(clone, new Uint8ClampedArray([1, 2, 3]));\n  });","file":"clone.js","skipped":false,"dir":"test"},{"name":"clones Int16Array","suites":["deep clone typed arrays"],"updatePoint":{"line":170,"column":23,"index":4303},"line":170,"code":"  it('clones Int16Array', function () {\n    var array = new Int16Array([1, 2, 3]);\n    var clone = R.clone(array);\n    assert.notStrictEqual(array, clone);\n    eq(clone, new Int16Array([1, 2, 3]));\n  });","file":"clone.js","skipped":false,"dir":"test"},{"name":"clones Uint16Array","suites":["deep clone typed arrays"],"updatePoint":{"line":176,"column":24,"index":4508},"line":176,"code":"  it('clones Uint16Array', function () {\n    var array = new Uint16Array([1, 2, 3]);\n    var clone = R.clone(array);\n    assert.notStrictEqual(array, clone);\n    eq(clone, new Uint16Array([1, 2, 3]));\n  });","file":"clone.js","skipped":false,"dir":"test"},{"name":"clones Int32Array","suites":["deep clone typed arrays"],"updatePoint":{"line":182,"column":23,"index":4714},"line":182,"code":"  it('clones Int32Array', function () {\n    var array = new Int32Array([1, 2, 3]);\n    var clone = R.clone(array);\n    assert.notStrictEqual(array, clone);\n    eq(clone, new Int32Array([1, 2, 3]));\n  });","file":"clone.js","skipped":false,"dir":"test"},{"name":"clones Uint32Array","suites":["deep clone typed arrays"],"updatePoint":{"line":188,"column":24,"index":4919},"line":188,"code":"  it('clones Uint32Array', function () {\n    var array = new Uint32Array([1, 2, 3]);\n    var clone = R.clone(array);\n    assert.notStrictEqual(array, clone);\n    eq(clone, new Uint32Array([1, 2, 3]));\n  });","file":"clone.js","skipped":false,"dir":"test"},{"name":"clones Float32Array","suites":["deep clone typed arrays"],"updatePoint":{"line":194,"column":25,"index":5127},"line":194,"code":"  it('clones Float32Array', function () {\n    var array = new Float32Array([1, 2, 3]);\n    var clone = R.clone(array);\n    assert.notStrictEqual(array, clone);\n    eq(clone, new Float32Array([1, 2, 3]));\n  });","file":"clone.js","skipped":false,"dir":"test"},{"name":"clones Float64Array","suites":["deep clone typed arrays"],"updatePoint":{"line":200,"column":25,"index":5337},"line":200,"code":"  it('clones Float64Array', function () {\n    var array = new Float64Array([1, 2, 3]);\n    var clone = R.clone(array);\n    assert.notStrictEqual(array, clone);\n    eq(clone, new Float64Array([1, 2, 3]));\n  });","file":"clone.js","skipped":false,"dir":"test"},{"name":"keep reference to function","suites":["deep clone functions"],"updatePoint":{"line":208,"column":32,"index":5605},"line":208,"code":"  it('keep reference to function', function () {\n    var fn = function (x) {\n      return x + x;\n    };\n\n    var list = [{\n      a: fn\n    }];\n    var clone = R.clone(list);\n    eq(clone[0].a(10), 20);\n    eq(list[0].a, clone[0].a);\n  });","file":"clone.js","skipped":false,"dir":"test"},{"name":"clones Date object","suites":["built-in types"],"updatePoint":{"line":222,"column":24,"index":5881},"line":222,"code":"  it('clones Date object', function () {\n    var date = new Date(2014, 10, 14, 23, 59, 59, 999);\n    var clone = R.clone(date);\n    assert.notStrictEqual(date, clone);\n    eq(clone, new Date(2014, 10, 14, 23, 59, 59, 999));\n    eq(clone.getDay(), 5); // friday\n  });","file":"clone.js","skipped":false,"dir":"test"},{"name":"clones RegExp object","suites":["built-in types"],"updatePoint":{"line":229,"column":26,"index":6150},"line":229,"code":"  it('clones RegExp object', function () {\n    R.forEach(function (pattern) {\n      var clone = R.clone(pattern);\n      assert.notStrictEqual(clone, pattern);\n      eq(clone.constructor, RegExp);\n      eq(clone.source, pattern.source);\n      eq(clone.global, pattern.global);\n      eq(clone.ignoreCase, pattern.ignoreCase);\n      eq(clone.multiline, pattern.multiline);\n    }, [/x/, /x/g, /x/i, /x/m, /x/gi, /x/gm, /x/im, /x/gim]);\n  });","file":"clone.js","skipped":false,"dir":"test"},{"name":"clones array with objects","suites":["deep clone deep nested mixed objects"],"updatePoint":{"line":242,"column":31,"index":6660},"line":242,"code":"  it('clones array with objects', function () {\n    var list = [{\n      a: {\n        b: 1\n      }\n    }, [{\n      c: {\n        d: 1\n      }\n    }]];\n    var clone = R.clone(list);\n    list[1][0] = null;\n    eq(clone, [{\n      a: {\n        b: 1\n      }\n    }, [{\n      c: {\n        d: 1\n      }\n    }]]);\n  });","file":"clone.js","skipped":false,"dir":"test"},{"name":"clones array with arrays","suites":["deep clone deep nested mixed objects"],"updatePoint":{"line":264,"column":30,"index":6969},"line":264,"code":"  it('clones array with arrays', function () {\n    var list = [[1], [[3]]];\n    var clone = R.clone(list);\n    list[1][0] = null;\n    eq(clone, [[1], [[3]]]);\n  });","file":"clone.js","skipped":false,"dir":"test"},{"name":"clones array with mutual ref object","suites":["deep clone deep nested mixed objects"],"updatePoint":{"line":270,"column":41,"index":7145},"line":270,"code":"  it('clones array with mutual ref object', function () {\n    var obj = {\n      a: 1\n    };\n    var list = [{\n      b: obj\n    }, {\n      b: obj\n    }];\n    var clone = R.clone(list);\n    assert.strictEqual(list[0].b, list[1].b);\n    assert.strictEqual(clone[0].b, clone[1].b);\n    assert.notStrictEqual(clone[0].b, list[0].b);\n    assert.notStrictEqual(clone[1].b, list[1].b);\n    eq(clone[0].b, {\n      a: 1\n    });\n    eq(clone[1].b, {\n      a: 1\n    });\n    obj.a = 2;\n    eq(clone[0].b, {\n      a: 1\n    });\n    eq(clone[1].b, {\n      a: 1\n    });\n  });","file":"clone.js","skipped":false,"dir":"test"},{"name":"nulls, undefineds and empty objects and arrays","suites":["deep clone edge cases"],"updatePoint":{"line":300,"column":52,"index":7767},"line":300,"code":"  it('nulls, undefineds and empty objects and arrays', function () {\n    eq(R.clone(null), null);\n    eq(R.clone(undefined), undefined);\n    assert.notStrictEqual(R.clone(undefined), null);\n    var obj = {};\n    assert.notStrictEqual(R.clone(obj), obj);\n    var list = [];\n    assert.notStrictEqual(R.clone(list), list);\n  });","file":"clone.js","skipped":false,"dir":"test"},{"name":"nested object with no prototype","suites":["clone objects with no prototypes"],"updatePoint":{"line":311,"column":37,"index":8142},"line":311,"code":"  it('nested object with no prototype', function () {\n    const obj = Object.create(null);\n    obj.intValue = 1;\n    obj.a = Object.create(null);\n    obj.a.stringValue = 'Yeah';\n    const clonedObj = R.clone(obj);\n    assert.strictEqual(Object.getPrototypeOf(clonedObj), null);\n    assert.strictEqual(Object.getPrototypeOf(clonedObj.a), null);\n    assert.strictEqual(clonedObj.intValue, 1);\n    assert.strictEqual(clonedObj.a.stringValue, 'Yeah');\n  });","file":"clone.js","skipped":false,"dir":"test"},{"name":"dispatches to `clone` method if present","suites":["Let `R.clone` use an arbitrary user defined `clone` method"],"updatePoint":{"line":324,"column":45,"index":8693},"line":324,"code":"  it('dispatches to `clone` method if present', function () {\n    function ArbitraryClone(x) {\n      this.value = x;\n    }\n\n    ArbitraryClone.prototype.clone = function () {\n      return new ArbitraryClone(this.value);\n    };\n\n    var obj = new ArbitraryClone(42);\n    var arbitraryClonedObj = R.clone(obj);\n    eq(arbitraryClonedObj, new ArbitraryClone(42));\n    eq(arbitraryClonedObj instanceof ArbitraryClone, true);\n  });","file":"clone.js","skipped":false,"dir":"test"},{"name":"returns a list of lists","suites":["collectBy"],"updatePoint":{"line":23,"column":29,"index":295},"line":23,"code":"  it('returns a list of lists', function () {\n    fc.assert(fc.property(fc.array(fc.nat()), function (xs) {\n      var check = all(is(Array));\n      var ys = collectBy(identity)(xs);\n      return check(ys);\n    }));\n  });","file":"collectBy.js","skipped":false,"dir":"test"},{"name":"groups items but neither adds new ones nor removes any","suites":["collectBy"],"updatePoint":{"line":30,"column":60,"index":547},"line":30,"code":"  it('groups items but neither adds new ones nor removes any', function () {\n    fc.assert(fc.property(fc.array(fc.nat()), function (xs) {\n      var check = compose(isEmpty, difference(xs), unnest);\n      var ys = collectBy(identity)(xs);\n      return check(ys);\n    }));\n  });","file":"collectBy.js","skipped":false,"dir":"test"},{"name":"groups related items together","suites":["collectBy"],"updatePoint":{"line":37,"column":35,"index":800},"line":37,"code":"  it('groups related items together', function () {\n    fc.assert(fc.property(fc.array(fc.boolean()), function (xs) {\n      var ys = collectBy(identity)(xs);\n      var check = all(compose(equals(1), length, uniq));\n      return check(ys);\n    }));\n  });","file":"collectBy.js","skipped":false,"dir":"test"},{"name":"invokes the tag function for each item in the list","suites":["collectBy"],"updatePoint":{"line":44,"column":56,"index":1075},"line":44,"code":"  it('invokes the tag function for each item in the list', function () {\n    fc.assert(fc.property(fc.array(fc.nat()), function (xs) {\n      var id = spy(x => 42);\n      collectBy(id)(xs);\n      var check = compose(isEmpty, difference(xs));\n      return check(id.getCalls().map(call => call.args[0]));\n    }));\n  });","file":"collectBy.js","skipped":false,"dir":"test"},{"name":"groups items according to the tag value","suites":["collectBy"],"updatePoint":{"line":52,"column":45,"index":1381},"line":52,"code":"  it('groups items according to the tag value', function () {\n    fc.assert(fc.property(fc.array(fc.nat()), function (xs) {\n      var ys = collectBy(x => 42)(xs);\n      var check = compose(isEmpty, difference(xs), head);\n      return isEmpty(xs) && isEmpty(ys) ? true : check(ys);\n    }));\n  });","file":"collectBy.js","skipped":false,"dir":"test"},{"name":"builds a comparator function for sorting out of a simple predicate that reports whether the first param is smaller","suites":["comparator"],"updatePoint":{"line":6,"column":120,"index":235},"line":6,"code":"  it('builds a comparator function for sorting out of a simple predicate that reports whether the first param is smaller', function () {\n    eq([3, 1, 8, 1, 2, 5].sort(R.comparator(function (a, b) {\n      return a < b;\n    })), [1, 1, 2, 3, 5, 8]);\n  });","file":"comparator.js","skipped":false,"dir":"test"},{"name":"creates boolean-returning function that reverses another","suites":["complement"],"updatePoint":{"line":8,"column":62,"index":208},"line":8,"code":"  it('creates boolean-returning function that reverses another', function () {\n    var even = function (x) {\n      return x % 2 === 0;\n    };\n\n    var f = R.complement(even);\n    eq(f(8), false);\n    eq(f(13), true);\n  });","file":"complement.js","skipped":false,"dir":"test"},{"name":"accepts a function that take multiple parameters","suites":["complement"],"updatePoint":{"line":17,"column":54,"index":423},"line":17,"code":"  it('accepts a function that take multiple parameters', function () {\n    var between = function (a, b, c) {\n      return a < b && b < c;\n    };\n\n    var f = R.complement(between);\n    eq(f(4, 5, 11), false);\n    eq(f(12, 2, 6), true);\n  });","file":"complement.js","skipped":false,"dir":"test"},{"name":"accepts fantasy-land functors","suites":["complement"],"updatePoint":{"line":26,"column":35,"index":647},"line":26,"code":"  it('accepts fantasy-land functors', function () {\n    var Just = S.Just;\n    var Nothing = S.Nothing;\n    eq(R.complement(Just(true)), Just(false));\n    eq(R.complement(Just(false)), Just(true));\n    eq(R.complement(Nothing()), Nothing());\n  });","file":"complement.js","skipped":false,"dir":"test"},{"name":"is a variadic function","suites":["compose"],"updatePoint":{"line":10,"column":28,"index":206},"line":10,"code":"  it('is a variadic function', function () {\n    eq(typeof R.compose, 'function');\n    eq(R.compose.length, 0);\n  });","file":"compose.js","skipped":false,"dir":"test"},{"name":"performs right-to-left function composition","suites":["compose"],"updatePoint":{"line":14,"column":49,"index":345},"line":14,"code":"  it('performs right-to-left function composition', function () {\n    //  f :: (String, Number?) -> ([Number] -> [Number])\n    var f = R.compose(R.map, R.multiply, parseInt);\n    eq(f.length, 2);\n    eq(f('10')([1, 2, 3]), [10, 20, 30]);\n    eq(f('10', 2)([1, 2, 3]), [2, 4, 6]);\n  });","file":"compose.js","skipped":false,"dir":"test"},{"name":"passes context to functions","suites":["compose"],"updatePoint":{"line":21,"column":33,"index":615},"line":21,"code":"  it('passes context to functions', function () {\n    function x(val) {\n      return this.x * val;\n    }\n\n    function y(val) {\n      return this.y * val;\n    }\n\n    function z(val) {\n      return this.z * val;\n    }\n\n    var context = {\n      a: R.compose(x, y, z),\n      x: 4,\n      y: 2,\n      z: 1\n    };\n    eq(context.a(5), 40);\n  });","file":"compose.js","skipped":false,"dir":"test"},{"name":"throws if given no arguments","suites":["compose"],"updatePoint":{"line":42,"column":34,"index":957},"line":42,"code":"  it('throws if given no arguments', function () {\n    assert.throws(function () {\n      R.compose();\n    }, function (err) {\n      return err.constructor === Error && err.message === 'compose requires at least one argument';\n    });\n  });","file":"compose.js","skipped":false,"dir":"test"},{"name":"can be applied to one argument","suites":["compose"],"updatePoint":{"line":49,"column":36,"index":1199},"line":49,"code":"  it('can be applied to one argument', function () {\n    var f = function (a, b, c) {\n      return [a, b, c];\n    };\n\n    var g = R.compose(f);\n    eq(g.length, 3);\n    eq(g(1, 2, 3), [1, 2, 3]);\n  });","file":"compose.js","skipped":false,"dir":"test"},{"name":"composes two functions","suites":["compose properties"],"updatePoint":{"line":60,"column":28,"index":1442},"line":60,"code":"  it('composes two functions', function () {\n    fc.assert(fc.property(fc.func(fc.nat()), fc.func(fc.nat()), fc.nat(), function (f, g, x) {\n      return R.equals(R.compose(f, g)(x), f(g(x)));\n    }));\n  });","file":"compose.js","skipped":false,"dir":"test"},{"name":"associative","suites":["compose properties"],"updatePoint":{"line":65,"column":17,"index":1638},"line":65,"code":"  it('associative', function () {\n    fc.assert(fc.property(fc.func(fc.nat()), fc.func(fc.nat()), fc.func(fc.nat()), fc.nat(), function (f, g, h, x) {\n      var result = f(g(h(x)));\n      return R.all(R.equals(result), [R.compose(f, g, h)(x), R.compose(f, R.compose(g, h))(x), R.compose(R.compose(f, g), h)(x)]);\n    }));\n  });","file":"compose.js","skipped":false,"dir":"test"},{"name":"performs right-to-left function composition with function applying","suites":["composeWith"],"updatePoint":{"line":6,"column":72,"index":188},"line":6,"code":"  it('performs right-to-left function composition with function applying', function () {\n    //  f :: (String, Number?) -> ([Number] -> [Number])\n    var f = R.composeWith(function (f, res) {\n      return f(res);\n    })([R.map, R.multiply, parseInt]);\n    eq(f.length, 2);\n    eq(f('10')([1, 2, 3]), [10, 20, 30]);\n    eq(f('10', 2)([1, 2, 3]), [2, 4, 6]);\n  });","file":"composeWith.js","skipped":false,"dir":"test"},{"name":"performs right-to-left function while not nil result","suites":["composeWith"],"updatePoint":{"line":15,"column":58,"index":537},"line":15,"code":"  it('performs right-to-left function while not nil result', function () {\n    var isOdd = R.flip(R.modulo)(2);\n    var composeWhenNotNil = R.composeWith(function (f, res) {\n      return R.isNil(res) ? null : f(res);\n    });\n    var f = composeWhenNotNil([R.inc, R.ifElse(isOdd, R.identity, R.always(null)), parseInt]);\n    eq(f.length, 2);\n    eq(f('1'), 2);\n    eq(f('2'), null);\n  });","file":"composeWith.js","skipped":false,"dir":"test"},{"name":"performs right-to-left function using promise chaining","suites":["composeWith"],"updatePoint":{"line":25,"column":60,"index":927},"line":25,"code":"  it('performs right-to-left function using promise chaining', function () {\n    var then = function (f, p) {\n      return p.then(f);\n    };\n\n    var composeP = R.composeWith(then);\n\n    var toListPromise = function (a) {\n      return new Promise(function (res) {\n        res([a]);\n      });\n    };\n\n    var doubleListPromise = function (a) {\n      return new Promise(function (res) {\n        res(R.concat(a, a));\n      });\n    };\n\n    var f = composeP([doubleListPromise, toListPromise]);\n    return f(1).then(function (res) {\n      eq(res, [1, 1]);\n    });\n  });","file":"composeWith.js","skipped":false,"dir":"test"},{"name":"adds combines the elements of the two lists","suites":["concat"],"updatePoint":{"line":17,"column":49,"index":326},"line":17,"code":"  it('adds combines the elements of the two lists', function () {\n    eq(R.concat(['a', 'b'], ['c', 'd']), ['a', 'b', 'c', 'd']);\n    eq(R.concat([], ['c', 'd']), ['c', 'd']);\n  });","file":"concat.js","skipped":false,"dir":"test"},{"name":"works on strings","suites":["concat"],"updatePoint":{"line":21,"column":22,"index":481},"line":21,"code":"  it('works on strings', function () {\n    eq(R.concat('foo', 'bar'), 'foobar');\n    eq(R.concat('x', ''), 'x');\n    eq(R.concat('', 'x'), 'x');\n    eq(R.concat('', ''), '');\n  });","file":"concat.js","skipped":false,"dir":"test"},{"name":"delegates to non-String object with a concat method, as second param","suites":["concat"],"updatePoint":{"line":27,"column":74,"index":714},"line":27,"code":"  it('delegates to non-String object with a concat method, as second param', function () {\n    eq(R.concat(z1, z2), 'z1 z2');\n  });","file":"concat.js","skipped":false,"dir":"test"},{"name":"throws if attempting to combine an array with a non-array","suites":["concat"],"updatePoint":{"line":30,"column":63,"index":835},"line":30,"code":"  it('throws if attempting to combine an array with a non-array', function () {\n    assert.throws(function () {\n      return R.concat([1], 2);\n    }, TypeError);\n  });","file":"concat.js","skipped":false,"dir":"test"},{"name":"throws if not an array, String, or object with a concat method","suites":["concat"],"updatePoint":{"line":35,"column":68,"index":1008},"line":35,"code":"  it('throws if not an array, String, or object with a concat method', function () {\n    assert.throws(function () {\n      return R.concat({}, {});\n    }, TypeError);\n  });","file":"concat.js","skipped":false,"dir":"test"},{"name":"returns a function","suites":["cond"],"updatePoint":{"line":6,"column":24,"index":133},"line":6,"code":"  it('returns a function', function () {\n    eq(typeof R.cond([]), 'function');\n  });","file":"cond.js","skipped":false,"dir":"test"},{"name":"returns a conditional function","suites":["cond"],"updatePoint":{"line":9,"column":36,"index":231},"line":9,"code":"  it('returns a conditional function', function () {\n    var fn = R.cond([[R.equals(0), R.always('water freezes at 0°C')], [R.equals(100), R.always('water boils at 100°C')], [R.T, function (temp) {\n      return 'nothing special happens at ' + temp + '°C';\n    }]]);\n    eq(fn(0), 'water freezes at 0°C');\n    eq(fn(50), 'nothing special happens at 50°C');\n    eq(fn(100), 'water boils at 100°C');\n  });","file":"cond.js","skipped":false,"dir":"test"},{"name":"returns a function which returns undefined if none of the predicates matches","suites":["cond"],"updatePoint":{"line":17,"column":82,"index":680},"line":17,"code":"  it('returns a function which returns undefined if none of the predicates matches', function () {\n    var fn = R.cond([[R.equals('foo'), R.always(1)], [R.equals('bar'), R.always(2)]]);\n    eq(fn('quux'), undefined);\n  });","file":"cond.js","skipped":false,"dir":"test"},{"name":"predicates are tested in order","suites":["cond"],"updatePoint":{"line":21,"column":36,"index":857},"line":21,"code":"  it('predicates are tested in order', function () {\n    var fn = R.cond([[R.T, R.always('foo')], [R.T, R.always('bar')], [R.T, R.always('baz')]]);\n    eq(fn(), 'foo');\n  });","file":"cond.js","skipped":false,"dir":"test"},{"name":"forwards all arguments to predicates and to transformers","suites":["cond"],"updatePoint":{"line":25,"column":62,"index":1058},"line":25,"code":"  it('forwards all arguments to predicates and to transformers', function () {\n    var fn = R.cond([[function (_, x) {\n      return x === 42;\n    }, function () {\n      return arguments.length;\n    }]]);\n    eq(fn(21, 42, 84), 3);\n  });","file":"cond.js","skipped":false,"dir":"test"},{"name":"retains highest predicate arity","suites":["cond"],"updatePoint":{"line":33,"column":37,"index":1270},"line":33,"code":"  it('retains highest predicate arity', function () {\n    var fn = R.cond([[R.nAry(2, R.T), R.T], [R.nAry(3, R.T), R.T], [R.nAry(1, R.T), R.T]]);\n    eq(fn.length, 3);\n  });","file":"cond.js","skipped":false,"dir":"test"},{"name":"turns a constructor function into one that can be called without `new`","suites":["construct"],"updatePoint":{"line":17,"column":76,"index":392},"line":17,"code":"  it('turns a constructor function into one that can be called without `new`', function () {\n    var rect = R.construct(Rectangle);\n    var r1 = rect(3, 4);\n    eq(r1.constructor, Rectangle);\n    eq(r1.width, 3);\n    eq(r1.area(), 12);\n    var regex = R.construct(RegExp);\n    var word = regex('word', 'gi');\n    eq(word.constructor, RegExp);\n    eq(word.source, 'word');\n    eq(word.global, true);\n  });","file":"construct.js","skipped":false,"dir":"test"},{"name":"can be used to create Date object","suites":["construct"],"updatePoint":{"line":29,"column":39,"index":760},"line":29,"code":"  it('can be used to create Date object', function () {\n    var date = R.construct(Date)(1984, 3, 26, 0, 0, 0, 0);\n    eq(date.constructor, Date);\n    eq(date.getFullYear(), 1984);\n  });","file":"construct.js","skipped":false,"dir":"test"},{"name":"supports constructors with no arguments","suites":["construct"],"updatePoint":{"line":34,"column":45,"index":953},"line":34,"code":"  it('supports constructors with no arguments', function () {\n    function Foo() {}\n\n    var foo = R.construct(Foo)();\n    eq(foo.constructor, Foo);\n  });","file":"construct.js","skipped":false,"dir":"test"},{"name":"does not support constructor with greater than ten arguments","suites":["construct"],"updatePoint":{"line":40,"column":66,"index":1129},"line":40,"code":"  it('does not support constructor with greater than ten arguments', function () {\n    assert.throws(function () {\n      function Foo($0, $1, $2, $3, $4, $5, $6, $7, $8, $9, $10) {\n        this.eleventh = $10;\n      }\n\n      R.construct(Foo);\n    }, function (err) {\n      return err instanceof Error && err.message === 'Constructor with greater than ten arguments';\n    });\n  });","file":"construct.js","skipped":false,"dir":"test"},{"name":"returns a curried function","suites":["construct"],"updatePoint":{"line":51,"column":32,"index":1476},"line":51,"code":"  it('returns a curried function', function () {\n    var rect = R.construct(Rectangle);\n    var rect3 = rect(3);\n    var r1 = rect3(4);\n    eq(r1.constructor, Rectangle);\n    eq(r1.width, 3);\n    eq(r1.height, 4);\n    eq(r1.area(), 12);\n    var regex = R.construct(RegExp);\n    var word = regex('word');\n    var complete = word('gi');\n    eq(complete.constructor, RegExp);\n    eq(complete.source, 'word');\n    eq(complete.global, true);\n  });","file":"construct.js","skipped":false,"dir":"test"},{"name":"turns a constructor function into a function with n arguments","suites":["constructN"],"updatePoint":{"line":17,"column":67,"index":415},"line":17,"code":"  it('turns a constructor function into a function with n arguments', function () {\n    var circle = R.constructN(2, Circle);\n    var c1 = circle(1, 'red');\n    eq(c1.constructor, Circle);\n    eq(c1.r, 1);\n    eq(c1.area(), Math.PI);\n    eq(c1.colors, ['red']);\n    var regex = R.constructN(1, RegExp);\n    var pattern = regex('[a-z]');\n    eq(pattern.constructor, RegExp);\n    eq(pattern.source, '[a-z]');\n  });","file":"constructN.js","skipped":false,"dir":"test"},{"name":"can be used to create Date object","suites":["constructN"],"updatePoint":{"line":29,"column":39,"index":800},"line":29,"code":"  it('can be used to create Date object', function () {\n    var date = R.constructN(3, Date)(1984, 3, 26);\n    eq(date.constructor, Date);\n    eq(date.getFullYear(), 1984);\n  });","file":"constructN.js","skipped":false,"dir":"test"},{"name":"supports constructors with no arguments","suites":["constructN"],"updatePoint":{"line":34,"column":45,"index":985},"line":34,"code":"  it('supports constructors with no arguments', function () {\n    function Foo() {}\n\n    var foo = R.constructN(0, Foo)();\n    eq(foo.constructor, Foo);\n  });","file":"constructN.js","skipped":false,"dir":"test"},{"name":"does not support constructor with greater than ten arguments","suites":["constructN"],"updatePoint":{"line":40,"column":66,"index":1165},"line":40,"code":"  it('does not support constructor with greater than ten arguments', function () {\n    assert.throws(function () {\n      function Foo($0, $1, $2, $3, $4, $5, $6, $7, $8, $9, $10) {\n        this.eleventh = $10;\n      }\n\n      R.constructN(11, Foo);\n    }, function (err) {\n      return err instanceof Error && err.message === 'Constructor with greater than ten arguments';\n    });\n  });","file":"constructN.js","skipped":false,"dir":"test"},{"name":"passes the results of applying the arguments individually to two separate functions into a single one","suites":["converge"],"updatePoint":{"line":25,"column":107,"index":581},"line":25,"code":"  it('passes the results of applying the arguments individually to two separate functions into a single one', function () {\n    eq(R.converge(mult, [R.add(1), R.add(3)])(2), 15); // mult(add1(2), add3(2)) = mult(3, 5) = 3 * 15;\n  });","file":"converge.js","skipped":false,"dir":"test"},{"name":"returns a function with the length of the \"longest\" argument","suites":["converge"],"updatePoint":{"line":28,"column":66,"index":774},"line":28,"code":"  it('returns a function with the length of the \"longest\" argument', function () {\n    eq(f1.length, 1);\n    eq(f2.length, 2);\n    eq(f3.length, 3);\n  });","file":"converge.js","skipped":false,"dir":"test"},{"name":"passes context to its functions","suites":["converge"],"updatePoint":{"line":33,"column":37,"index":900},"line":33,"code":"  it('passes context to its functions', function () {\n    var a = function (x) {\n      return this.f1(x);\n    };\n\n    var b = function (x) {\n      return this.f2(x);\n    };\n\n    var c = function (x, y) {\n      return this.f3(x, y);\n    };\n\n    var d = R.converge(c, [a, b]);\n    var context = {\n      f1: R.add(1),\n      f2: R.add(2),\n      f3: R.add\n    };\n    eq(a.call(context, 1), 2);\n    eq(b.call(context, 1), 3);\n    eq(d.call(context, 1), 5);\n  });","file":"converge.js","skipped":false,"dir":"test"},{"name":"returns a curried function","suites":["converge"],"updatePoint":{"line":56,"column":32,"index":1352},"line":56,"code":"  it('returns a curried function', function () {\n    eq(f2(6)(7), 42);\n    eq(f3(R.__).length, 3);\n  });","file":"converge.js","skipped":false,"dir":"test"},{"name":"works with empty functions list","suites":["converge"],"updatePoint":{"line":60,"column":37,"index":1462},"line":60,"code":"  it('works with empty functions list', function () {\n    var fn = R.converge(function () {\n      return arguments.length;\n    }, []);\n    eq(fn.length, 0);\n    eq(fn(), 0);\n  });","file":"converge.js","skipped":false,"dir":"test"},{"name":"counts items in a list that match a filter","suites":["count"],"updatePoint":{"line":10,"column":48,"index":216},"line":10,"code":"  it('counts items in a list that match a filter', function () {\n    eq(R.count(even, [1, 2, 3, 4, 5]), 2);\n    eq(R.count(even, [2, 8, 10, 200]), 4);\n  });","file":"count.js","skipped":false,"dir":"test"},{"name":"returns zero when no element matches","suites":["count"],"updatePoint":{"line":14,"column":42,"index":367},"line":14,"code":"  it('returns zero when no element matches', function () {\n    eq(R.count(even, [1, 3, 5, 7]), 0);\n  });","file":"count.js","skipped":false,"dir":"test"},{"name":"returns zero for an empty list","suites":["count"],"updatePoint":{"line":17,"column":36,"index":466},"line":17,"code":"  it('returns zero for an empty list', function () {\n    eq(R.count(even, []), 0);\n  });","file":"count.js","skipped":false,"dir":"test"},{"name":"counts by a simple property of the objects","suites":["countBy"],"updatePoint":{"line":71,"column":48,"index":1381},"line":71,"code":"  it('counts by a simple property of the objects', function () {\n    eq(R.countBy(R.prop('genre'), albums), {\n      Baroque: 2,\n      Rock: 2,\n      Jazz: 2,\n      Romantic: 1,\n      Metal: 1,\n      Modern: 1,\n      Broadway: 1,\n      Folk: 1,\n      Classical: 1\n    });\n  });","file":"countBy.js","skipped":false,"dir":"test"},{"name":"counts by a more complex function on the objects","suites":["countBy"],"updatePoint":{"line":84,"column":54,"index":1664},"line":84,"code":"  it('counts by a more complex function on the objects', function () {\n    eq(R.countBy(derivedGenre, albums), {\n      Classical: 5,\n      Rock: 3,\n      Jazz: 2,\n      Broadway: 1,\n      Folk: 1\n    });\n  });","file":"countBy.js","skipped":false,"dir":"test"},{"name":"ignores inherited properties","suites":["countBy"],"updatePoint":{"line":93,"column":34,"index":1854},"line":93,"code":"  it('ignores inherited properties', function () {\n    var result = R.countBy(R.identity, ['abc', 'toString']);\n    eq(result.abc, 1);\n    eq(result.toString, 1);\n  });","file":"countBy.js","skipped":false,"dir":"test"},{"name":"can act as a transducer","suites":["countBy"],"updatePoint":{"line":98,"column":29,"index":2018},"line":98,"code":"  it('can act as a transducer', function () {\n    var transducer = R.compose(R.countBy(R.prop('genre')), R.map(R.adjust(1, R.toString)));\n    var expected = {\n      Baroque: '2',\n      Rock: '2',\n      Jazz: '2',\n      Romantic: '1',\n      Metal: '1',\n      Modern: '1',\n      Broadway: '1',\n      Folk: '1',\n      Classical: '1'\n    };\n    eq(R.into({}, transducer, albums), expected);\n    eq(R.transduce(transducer, (result, input) => {\n      result[input[0]] = input[1];\n      return result;\n    }, {}, albums), expected);\n  });","file":"countBy.js","skipped":false,"dir":"test"},{"name":"curries a single value","suites":["curry"],"updatePoint":{"line":8,"column":28,"index":171},"line":8,"code":"  it('curries a single value', function () {\n    var f = R.curry(function (a, b, c, d) {\n      return (a + b * c) / d;\n    }); // f(12, 3, 6, 2) == 15\n\n    var g = f(12);\n    eq(g(3, 6, 2), 15);\n  });","file":"curry.js","skipped":false,"dir":"test"},{"name":"curries multiple values","suites":["curry"],"updatePoint":{"line":16,"column":29,"index":373},"line":16,"code":"  it('curries multiple values', function () {\n    var f = R.curry(function (a, b, c, d) {\n      return (a + b * c) / d;\n    }); // f(12, 3, 6, 2) == 15\n\n    var g = f(12, 3);\n    eq(g(6, 2), 15);\n    var h = f(12, 3, 6);\n    eq(h(2), 15);\n  });","file":"curry.js","skipped":false,"dir":"test"},{"name":"allows further currying of a curried function","suites":["curry"],"updatePoint":{"line":26,"column":51,"index":640},"line":26,"code":"  it('allows further currying of a curried function', function () {\n    var f = R.curry(function (a, b, c, d) {\n      return (a + b * c) / d;\n    }); // f(12, 3, 6, 2) == 15\n\n    var g = f(12);\n    eq(g(3, 6, 2), 15);\n    var h = g(3);\n    eq(h(6, 2), 15);\n    eq(g(3, 6)(2), 15);\n  });","file":"curry.js","skipped":false,"dir":"test"},{"name":"properly reports the length of the curried function","suites":["curry"],"updatePoint":{"line":37,"column":57,"index":933},"line":37,"code":"  it('properly reports the length of the curried function', function () {\n    var f = R.curry(function (a, b, c, d) {\n      return (a + b * c) / d;\n    });\n    eq(f.length, 4);\n    var g = f(12);\n    eq(g.length, 3);\n    var h = g(3);\n    eq(h.length, 2);\n    eq(g(3, 6).length, 1);\n  });","file":"curry.js","skipped":false,"dir":"test"},{"name":"preserves context","suites":["curry"],"updatePoint":{"line":48,"column":23,"index":1188},"line":48,"code":"  it('preserves context', function () {\n    var ctx = {\n      x: 10\n    };\n\n    var f = function (a, b) {\n      return a + b * this.x;\n    };\n\n    var g = R.curry(f);\n    eq(g.call(ctx, 2, 4), 42);\n    eq(g.call(ctx, 2).call(ctx, 4), 42);\n  });","file":"curry.js","skipped":false,"dir":"test"},{"name":"supports R.__ placeholder","suites":["curry"],"updatePoint":{"line":61,"column":31,"index":1441},"line":61,"code":"  it('supports R.__ placeholder', function () {\n    var f = function (a, b, c) {\n      return [a, b, c];\n    };\n\n    var g = R.curry(f);\n    var _ = R.__;\n    eq(g(1)(2)(3), [1, 2, 3]);\n    eq(g(1)(2, 3), [1, 2, 3]);\n    eq(g(1, 2)(3), [1, 2, 3]);\n    eq(g(1, 2, 3), [1, 2, 3]);\n    eq(g(_, 2, 3)(1), [1, 2, 3]);\n    eq(g(1, _, 3)(2), [1, 2, 3]);\n    eq(g(1, 2, _)(3), [1, 2, 3]);\n    eq(g(1, _, _)(2)(3), [1, 2, 3]);\n    eq(g(_, 2, _)(1)(3), [1, 2, 3]);\n    eq(g(_, _, 3)(1)(2), [1, 2, 3]);\n    eq(g(1, _, _)(2, 3), [1, 2, 3]);\n    eq(g(_, 2, _)(1, 3), [1, 2, 3]);\n    eq(g(_, _, 3)(1, 2), [1, 2, 3]);\n    eq(g(1, _, _)(_, 3)(2), [1, 2, 3]);\n    eq(g(_, 2, _)(_, 3)(1), [1, 2, 3]);\n    eq(g(_, _, 3)(_, 2)(1), [1, 2, 3]);\n    eq(g(_, _, _)(_, _)(_)(1, 2, 3), [1, 2, 3]);\n    eq(g(_, _, _)(1, _, _)(_, _)(2, _)(_)(3), [1, 2, 3]);\n  });","file":"curry.js","skipped":false,"dir":"test"},{"name":"supports @@functional/placeholder","suites":["curry"],"updatePoint":{"line":87,"column":39,"index":2285},"line":87,"code":"  it('supports @@functional/placeholder', function () {\n    var f = function (a, b, c) {\n      return [a, b, c];\n    };\n\n    var g = R.curry(f);\n    var _ = {\n      '@@functional/placeholder': true,\n      x: Math.random()\n    };\n    eq(g(1)(2)(3), [1, 2, 3]);\n    eq(g(1)(2, 3), [1, 2, 3]);\n    eq(g(1, 2)(3), [1, 2, 3]);\n    eq(g(1, 2, 3), [1, 2, 3]);\n    eq(g(_, 2, 3)(1), [1, 2, 3]);\n    eq(g(1, _, 3)(2), [1, 2, 3]);\n    eq(g(1, 2, _)(3), [1, 2, 3]);\n    eq(g(1, _, _)(2)(3), [1, 2, 3]);\n    eq(g(_, 2, _)(1)(3), [1, 2, 3]);\n    eq(g(_, _, 3)(1)(2), [1, 2, 3]);\n    eq(g(1, _, _)(2, 3), [1, 2, 3]);\n    eq(g(_, 2, _)(1, 3), [1, 2, 3]);\n    eq(g(_, _, 3)(1, 2), [1, 2, 3]);\n    eq(g(1, _, _)(_, 3)(2), [1, 2, 3]);\n    eq(g(_, 2, _)(_, 3)(1), [1, 2, 3]);\n    eq(g(_, _, 3)(_, 2)(1), [1, 2, 3]);\n    eq(g(_, _, _)(_, _)(_)(1, 2, 3), [1, 2, 3]);\n    eq(g(_, _, _)(1, _, _)(_, _)(2, _)(_)(3), [1, 2, 3]);\n  });","file":"curry.js","skipped":false,"dir":"test"},{"name":"forwards extra arguments","suites":["curry"],"updatePoint":{"line":116,"column":30,"index":3186},"line":116,"code":"  it('forwards extra arguments', function () {\n    var f = function (a, b, c) {\n      void c;\n      return Array.prototype.slice.call(arguments);\n    };\n\n    var g = R.curry(f);\n    eq(g(1, 2, 3), [1, 2, 3]);\n    eq(g(1, 2, 3, 4), [1, 2, 3, 4]);\n    eq(g(1, 2)(3, 4), [1, 2, 3, 4]);\n    eq(g(1)(2, 3, 4), [1, 2, 3, 4]);\n    eq(g(1)(2)(3, 4), [1, 2, 3, 4]);\n  });","file":"curry.js","skipped":false,"dir":"test"},{"name":"curries multiple values","suites":["curry properties"],"updatePoint":{"line":131,"column":29,"index":3595},"line":131,"code":"  it('curries multiple values', function () {\n    fc.assert(fc.property(fc.func(fc.anything()), fc.anything(), fc.anything(), fc.anything(), fc.anything(), function (f, a, b, c, d) {\n      var f4 = function (a, b, c, d) {\n        return f(a, b, c, d);\n      };\n\n      var g = R.curry(f4);\n      return R.all(R.equals(f4(a, b, c, d)), [g(a, b, c, d), g(a)(b)(c)(d), g(a)(b, c, d), g(a, b)(c, d), g(a, b, c)(d)]);\n    }));\n  });","file":"curry.js","skipped":false,"dir":"test"},{"name":"curries with placeholder","suites":["curry properties"],"updatePoint":{"line":141,"column":30,"index":4023},"line":141,"code":"  it('curries with placeholder', function () {\n    fc.assert(fc.property(fc.func(fc.anything()), fc.anything(), fc.anything(), fc.anything(), function (f, a, b, c) {\n      var _ = {\n        '@@functional/placeholder': true,\n        x: Math.random()\n      };\n\n      var f3 = function (a, b, c) {\n        return f(a, b, c);\n      };\n\n      var g = R.curry(f3);\n      return R.all(R.equals(f3(a, b, c)), [g(_, _, c)(a, b), g(a, _, c)(b), g(_, b, c)(a), g(a, _, _)(_, c)(b), g(a, b, _)(c)]);\n    }));\n  });","file":"curry.js","skipped":false,"dir":"test"},{"name":"accepts an arity","suites":["curryN"],"updatePoint":{"line":11,"column":22,"index":204},"line":11,"code":"  it('accepts an arity', function () {\n    var curried = R.curryN(3, source);\n    eq(curried(1)(2)(3), 6);\n    eq(curried(1, 2)(3), 6);\n    eq(curried(1)(2, 3), 6);\n    eq(curried(1, 2, 3), 6);\n  });","file":"curryN.js","skipped":false,"dir":"test"},{"name":"can be partially applied","suites":["curryN"],"updatePoint":{"line":18,"column":30,"index":412},"line":18,"code":"  it('can be partially applied', function () {\n    var curry3 = R.curryN(3);\n    var curried = curry3(source);\n    eq(curried.length, 3);\n    eq(curried(1)(2)(3), 6);\n    eq(curried(1, 2)(3), 6);\n    eq(curried(1)(2, 3), 6);\n    eq(curried(1, 2, 3), 6);\n  });","file":"curryN.js","skipped":false,"dir":"test"},{"name":"preserves context","suites":["curryN"],"updatePoint":{"line":27,"column":23,"index":665},"line":27,"code":"  it('preserves context', function () {\n    var ctx = {\n      x: 10\n    };\n\n    var f = function (a, b) {\n      return a + b * this.x;\n    };\n\n    var g = R.curryN(2, f);\n    eq(g.call(ctx, 2, 4), 42);\n    eq(g.call(ctx, 2).call(ctx, 4), 42);\n  });","file":"curryN.js","skipped":false,"dir":"test"},{"name":"supports R.__ placeholder","suites":["curryN"],"updatePoint":{"line":40,"column":31,"index":922},"line":40,"code":"  it('supports R.__ placeholder', function () {\n    var f = function () {\n      return Array.prototype.slice.call(arguments);\n    };\n\n    var g = R.curryN(3, f);\n    var _ = R.__;\n    eq(g(1)(2)(3), [1, 2, 3]);\n    eq(g(1)(2, 3), [1, 2, 3]);\n    eq(g(1, 2)(3), [1, 2, 3]);\n    eq(g(1, 2, 3), [1, 2, 3]);\n    eq(g(_, 2, 3)(1), [1, 2, 3]);\n    eq(g(1, _, 3)(2), [1, 2, 3]);\n    eq(g(1, 2, _)(3), [1, 2, 3]);\n    eq(g(1, _, _)(2)(3), [1, 2, 3]);\n    eq(g(_, 2, _)(1)(3), [1, 2, 3]);\n    eq(g(_, _, 3)(1)(2), [1, 2, 3]);\n    eq(g(1, _, _)(2, 3), [1, 2, 3]);\n    eq(g(_, 2, _)(1, 3), [1, 2, 3]);\n    eq(g(_, _, 3)(1, 2), [1, 2, 3]);\n    eq(g(1, _, _)(_, 3)(2), [1, 2, 3]);\n    eq(g(_, 2, _)(_, 3)(1), [1, 2, 3]);\n    eq(g(_, _, 3)(_, 2)(1), [1, 2, 3]);\n    eq(g(_, _, _)(_, _)(_)(1, 2, 3), [1, 2, 3]);\n    eq(g(_, _, _)(1, _, _)(_, _)(2, _)(_)(3), [1, 2, 3]);\n  });","file":"curryN.js","skipped":false,"dir":"test"},{"name":"supports @@functional/placeholder","suites":["curryN"],"updatePoint":{"line":66,"column":39,"index":1791},"line":66,"code":"  it('supports @@functional/placeholder', function () {\n    var f = function () {\n      return Array.prototype.slice.call(arguments);\n    };\n\n    var g = R.curryN(3, f);\n    var _ = {\n      '@@functional/placeholder': true,\n      x: Math.random()\n    };\n    eq(g(1)(2)(3), [1, 2, 3]);\n    eq(g(1)(2, 3), [1, 2, 3]);\n    eq(g(1, 2)(3), [1, 2, 3]);\n    eq(g(1, 2, 3), [1, 2, 3]);\n    eq(g(_, 2, 3)(1), [1, 2, 3]);\n    eq(g(1, _, 3)(2), [1, 2, 3]);\n    eq(g(1, 2, _)(3), [1, 2, 3]);\n    eq(g(1, _, _)(2)(3), [1, 2, 3]);\n    eq(g(_, 2, _)(1)(3), [1, 2, 3]);\n    eq(g(_, _, 3)(1)(2), [1, 2, 3]);\n    eq(g(1, _, _)(2, 3), [1, 2, 3]);\n    eq(g(_, 2, _)(1, 3), [1, 2, 3]);\n    eq(g(_, _, 3)(1, 2), [1, 2, 3]);\n    eq(g(1, _, _)(_, 3)(2), [1, 2, 3]);\n    eq(g(_, 2, _)(_, 3)(1), [1, 2, 3]);\n    eq(g(_, _, 3)(_, 2)(1), [1, 2, 3]);\n    eq(g(_, _, _)(_, _)(_)(1, 2, 3), [1, 2, 3]);\n    eq(g(_, _, _)(1, _, _)(_, _)(2, _)(_)(3), [1, 2, 3]);\n  });","file":"curryN.js","skipped":false,"dir":"test"},{"name":"forwards extra arguments","suites":["curryN"],"updatePoint":{"line":95,"column":30,"index":2717},"line":95,"code":"  it('forwards extra arguments', function () {\n    var f = function () {\n      return Array.prototype.slice.call(arguments);\n    };\n\n    var g = R.curryN(3, f);\n    eq(g(1, 2, 3), [1, 2, 3]);\n    eq(g(1, 2, 3, 4), [1, 2, 3, 4]);\n    eq(g(1, 2)(3, 4), [1, 2, 3, 4]);\n    eq(g(1)(2, 3, 4), [1, 2, 3, 4]);\n    eq(g(1)(2)(3, 4), [1, 2, 3, 4]);\n  });","file":"curryN.js","skipped":false,"dir":"test"},{"name":"decrements its argument","suites":["dec"],"updatePoint":{"line":6,"column":29,"index":137},"line":6,"code":"  it('decrements its argument', function () {\n    eq(R.dec(-1), -2);\n    eq(R.dec(0), -1);\n    eq(R.dec(1), 0);\n    eq(R.dec(12.34), 11.34);\n    eq(R.dec(-Infinity), -Infinity);\n    eq(R.dec(Infinity), Infinity);\n  });","file":"dec.js","skipped":false,"dir":"test"},{"name":"returns the default value if input is null, undefined or NaN","suites":["defaultTo"],"updatePoint":{"line":7,"column":66,"index":217},"line":7,"code":"  it('returns the default value if input is null, undefined or NaN', function () {\n    eq(42, defaultTo42(null));\n    eq(42, defaultTo42(undefined));\n    eq(42, defaultTo42(NaN));\n  });","file":"defaultTo.js","skipped":false,"dir":"test"},{"name":"returns the input value if it is not null/undefined","suites":["defaultTo"],"updatePoint":{"line":12,"column":57,"index":394},"line":12,"code":"  it('returns the input value if it is not null/undefined', function () {\n    eq('a real value', defaultTo42('a real value'));\n  });","file":"defaultTo.js","skipped":false,"dir":"test"},{"name":"returns the input value even if it is considered falsy","suites":["defaultTo"],"updatePoint":{"line":15,"column":60,"index":530},"line":15,"code":"  it('returns the input value even if it is considered falsy', function () {\n    eq('', defaultTo42(''));\n    eq(0, defaultTo42(0));\n    eq(false, defaultTo42(false));\n    eq([], defaultTo42([]));\n  });","file":"defaultTo.js","skipped":false,"dir":"test"},{"name":"can be called with both arguments directly","suites":["defaultTo"],"updatePoint":{"line":21,"column":48,"index":721},"line":21,"code":"  it('can be called with both arguments directly', function () {\n    eq(42, R.defaultTo(42, null));\n    eq('a real value', R.defaultTo(42, 'a real value'));\n  });","file":"defaultTo.js","skipped":false,"dir":"test"},{"name":"builds a descending comparator function out of the identity function","suites":["descend"],"updatePoint":{"line":6,"column":74,"index":186},"line":6,"code":"  it('builds a descending comparator function out of the identity function', function () {\n    eq([3, 1, 8, 1, 2, 5].sort(R.descend(R.identity)), [8, 5, 3, 2, 1, 1]);\n  });","file":"descend.js","skipped":false,"dir":"test"},{"name":"finds the set of all elements in the first list not contained in the second","suites":["difference"],"updatePoint":{"line":16,"column":81,"index":443},"line":16,"code":"  it('finds the set of all elements in the first list not contained in the second', function () {\n    eq(R.difference(M, N), [1, 2]);\n  });","file":"difference.js","skipped":false,"dir":"test"},{"name":"does not allow duplicates in the output even if the input lists had duplicates","suites":["difference"],"updatePoint":{"line":19,"column":84,"index":586},"line":19,"code":"  it('does not allow duplicates in the output even if the input lists had duplicates', function () {\n    eq(R.difference(M2, N2), [1, 2]);\n  });","file":"difference.js","skipped":false,"dir":"test"},{"name":"has R.equals semantics","suites":["difference"],"updatePoint":{"line":22,"column":28,"index":675},"line":22,"code":"  it('has R.equals semantics', function () {\n    eq(R.difference([0], [-0]).length, 1);\n    eq(R.difference([-0], [0]).length, 1);\n    eq(R.difference([NaN], [NaN]).length, 0);\n    eq(R.difference([new Just([42])], [new Just([42])]).length, 0);\n  });","file":"difference.js","skipped":false,"dir":"test"},{"name":"works for arrays of different lengths","suites":["difference"],"updatePoint":{"line":28,"column":43,"index":941},"line":28,"code":"  it('works for arrays of different lengths', function () {\n    eq(R.difference(Z, Z2), [10]);\n    eq(R.difference(Z2, Z), [1, 2, 7, 8]);\n  });","file":"difference.js","skipped":false,"dir":"test"},{"name":"will not create a \"sparse\" array","suites":["difference"],"updatePoint":{"line":32,"column":38,"index":1080},"line":32,"code":"  it('will not create a \"sparse\" array', function () {\n    eq(R.difference(M2, [3]).length, 3);\n  });","file":"difference.js","skipped":false,"dir":"test"},{"name":"returns an empty array if there are no different elements","suites":["difference"],"updatePoint":{"line":35,"column":63,"index":1207},"line":35,"code":"  it('returns an empty array if there are no different elements', function () {\n    eq(R.difference(M2, M), []);\n    eq(R.difference(M, M2), []);\n    eq(R.difference([], M2), []);\n  });","file":"difference.js","skipped":false,"dir":"test"},{"name":"combines two lists into the set of all their elements based on the passed-in equality predicate","suites":["differenceWith"],"updatePoint":{"line":67,"column":101,"index":781},"line":67,"code":"  it('combines two lists into the set of all their elements based on the passed-in equality predicate', function () {\n    eq(R.differenceWith(eqA, Ro, So), [{\n      a: 1\n    }, {\n      a: 2\n    }]);\n  });","file":"differenceWith.js","skipped":false,"dir":"test"},{"name":"does not allow duplicates in the output even if the input lists had duplicates","suites":["differenceWith"],"updatePoint":{"line":74,"column":84,"index":969},"line":74,"code":"  it('does not allow duplicates in the output even if the input lists had duplicates', function () {\n    eq(R.differenceWith(eqA, Ro2, So2), [{\n      a: 1\n    }, {\n      a: 2\n    }]);\n  });","file":"differenceWith.js","skipped":false,"dir":"test"},{"name":"does not return a \"sparse\" array","suites":["differenceWith"],"updatePoint":{"line":81,"column":38,"index":1113},"line":81,"code":"  it('does not return a \"sparse\" array', function () {\n    eq(R.differenceWith(identical, [1, 3, 2, 1, 3, 1, 2, 3], [3]).length, 2);\n  });","file":"differenceWith.js","skipped":false,"dir":"test"},{"name":"copies an object omitting the specified property","suites":["dissoc"],"updatePoint":{"line":8,"column":54,"index":198},"line":8,"code":"  it('copies an object omitting the specified property', function () {\n    eq(R.dissoc('b', {\n      a: 1,\n      b: 2,\n      c: 3\n    }), {\n      a: 1,\n      c: 3\n    });\n    eq(R.dissoc('d', {\n      a: 1,\n      b: 2,\n      c: 3\n    }), {\n      a: 1,\n      b: 2,\n      c: 3\n    });\n    eq(R.dissoc('c', {\n      a: 1,\n      b: 2,\n      c: null\n    }), {\n      a: 1,\n      b: 2\n    });\n    eq(R.dissoc('c', {\n      a: 1,\n      b: 2,\n      c: undefined\n    }), {\n      a: 1,\n      b: 2\n    });\n    var obj1 = {\n      a: 1,\n      b: 2\n    };\n    var obj2 = R.dissoc('c', obj1);\n    eq(obj2, obj1); // Note: reference equality below!\n\n    assert.notStrictEqual(obj2, obj1);\n  });","file":"dissoc.js","skipped":false,"dir":"test"},{"name":"makes a shallow clone of an array, remove only the specified index","suites":["dissoc"],"updatePoint":{"line":51,"column":72,"index":890},"line":51,"code":"  it('makes a shallow clone of an array, remove only the specified index', function () {\n    var ary1 = [1, [2, 3], 4, 5];\n    var ary2 = R.dissoc(2, ary1);\n    var ary3 = R.dissoc(4, ary1);\n    eq(ary2, [1, [2, 3], 5]);\n    eq(ary3, [1, [2, 3], 4, 5]); // Note: reference equality below!\n\n    assert.strictEqual(ary2[0], ary1[0]);\n    assert.strictEqual(ary2[1], ary1[1]);\n    assert.strictEqual(ary2[2], ary1[3]);\n    assert.notStrictEqual(ary3, ary1);\n    assert.strictEqual(ary3[0], ary1[0]);\n    assert.strictEqual(ary3[1], ary1[1]);\n    assert.strictEqual(ary3[2], ary1[2]);\n    assert.strictEqual(ary3[3], ary1[3]);\n  });","file":"dissoc.js","skipped":false,"dir":"test"},{"name":"includes prototype properties","suites":["dissoc"],"updatePoint":{"line":67,"column":35,"index":1482},"line":67,"code":"  it('includes prototype properties', function () {\n    function Rectangle(width, height) {\n      this.width = width;\n      this.height = height;\n    }\n\n    var area = Rectangle.prototype.area = function () {\n      return this.width * this.height;\n    };\n\n    var rect = new Rectangle(7, 6);\n    eq(R.dissoc('area', rect), {\n      width: 7,\n      height: 6\n    });\n    eq(R.dissoc('width', rect), {\n      height: 6,\n      area: area\n    });\n    eq(R.dissoc('depth', rect), {\n      width: 7,\n      height: 6,\n      area: area\n    });\n  });","file":"dissoc.js","skipped":false,"dir":"test"},{"name":"coerces non-string types","suites":["dissoc"],"updatePoint":{"line":92,"column":30,"index":2016},"line":92,"code":"  it('coerces non-string types', function () {\n    eq(R.dissoc(42, {\n      a: 1,\n      b: 2,\n      42: 3\n    }), {\n      a: 1,\n      b: 2\n    });\n    eq(R.dissoc(null, {\n      a: 1,\n      b: 2,\n      'null': 3\n    }), {\n      a: 1,\n      b: 2\n    });\n    eq(R.dissoc(undefined, {\n      a: 1,\n      b: 2,\n      undefined: 3\n    }), {\n      a: 1,\n      b: 2\n    });\n  });","file":"dissoc.js","skipped":false,"dir":"test"},{"name":"makes a shallow clone of an object, omitting only what is necessary for the path","suites":["dissocPath"],"updatePoint":{"line":8,"column":86,"index":234},"line":8,"code":"  it('makes a shallow clone of an object, omitting only what is necessary for the path', function () {\n    var obj1 = {\n      a: {\n        b: 1,\n        c: 2,\n        d: {\n          e: 3\n        }\n      },\n      f: [{\n        g: 4\n      }, {\n        h: 5,\n        i: 6,\n        j: {\n          k: 7,\n          l: 8\n        }\n      }],\n      m: 9\n    };\n    var obj2 = R.dissocPath(['f', 1, 'i'], obj1);\n    eq(obj2, {\n      a: {\n        b: 1,\n        c: 2,\n        d: {\n          e: 3\n        }\n      },\n      f: [{\n        g: 4\n      }, {\n        h: 5,\n        j: {\n          k: 7,\n          l: 8\n        }\n      }],\n      m: 9\n    }); // Note: reference equality below!\n\n    assert.strictEqual(obj2.a, obj1.a);\n    assert.strictEqual(obj2.m, obj1.m);\n    assert.strictEqual(obj2.f[0], obj1.f[0]);\n    assert.strictEqual(obj2.f[1].h, obj1.f[1].h);\n    assert.strictEqual(obj2.f[1].j, obj1.f[1].j);\n  });","file":"dissocPath.js","skipped":false,"dir":"test"},{"name":"does not try to omit inner properties that do not exist","suites":["dissocPath"],"updatePoint":{"line":56,"column":61,"index":1113},"line":56,"code":"  it('does not try to omit inner properties that do not exist', function () {\n    var obj1 = {\n      a: 1,\n      b: {\n        c: 2,\n        d: 3\n      },\n      e: 4,\n      f: 5\n    };\n    var obj2 = R.dissocPath(['x', 0, 'z'], obj1);\n    eq(obj2, {\n      a: 1,\n      b: {\n        c: 2,\n        d: 3\n      },\n      e: 4,\n      f: 5\n    }); // Note: reference equality below!\n\n    assert.strictEqual(obj2.a, obj1.a);\n    assert.strictEqual(obj2.b, obj1.b);\n    assert.strictEqual(obj2.f, obj1.f);\n  });","file":"dissocPath.js","skipped":false,"dir":"test"},{"name":"leaves an empty object when all properties omitted","suites":["dissocPath"],"updatePoint":{"line":81,"column":56,"index":1609},"line":81,"code":"  it('leaves an empty object when all properties omitted', function () {\n    var obj1 = {\n      a: 1,\n      b: {\n        c: 2\n      },\n      d: 3\n    };\n    var obj2 = R.dissocPath(['b', 'c'], obj1);\n    eq(obj2, {\n      a: 1,\n      b: {},\n      d: 3\n    });\n  });","file":"dissocPath.js","skipped":false,"dir":"test"},{"name":"leaves an empty array when all indexes are omitted","suites":["dissocPath"],"updatePoint":{"line":96,"column":56,"index":1874},"line":96,"code":"  it('leaves an empty array when all indexes are omitted', function () {\n    var obj1 = {\n      a: 1,\n      b: [2],\n      d: 3\n    };\n    var obj2 = R.dissocPath(['b', 0], obj1);\n    eq(obj2, {\n      a: 1,\n      b: [],\n      d: 3\n    });\n  });","file":"dissocPath.js","skipped":false,"dir":"test"},{"name":"flattens properties from prototype","suites":["dissocPath"],"updatePoint":{"line":109,"column":40,"index":2102},"line":109,"code":"  it('flattens properties from prototype', function () {\n    var F = function () {};\n\n    F.prototype.a = 1;\n    var obj1 = new F();\n    obj1.b = {\n      c: 2,\n      d: 3\n    };\n    var obj2 = R.dissocPath(['b', 'c'], obj1);\n    eq(obj2, {\n      a: 1,\n      b: {\n        d: 3\n      }\n    });\n  });","file":"dissocPath.js","skipped":false,"dir":"test"},{"name":"accepts empty path","suites":["dissocPath"],"updatePoint":{"line":126,"column":24,"index":2384},"line":126,"code":"  it('accepts empty path', function () {\n    eq(R.dissocPath([], {\n      a: 1,\n      b: 2\n    }), {\n      a: 1,\n      b: 2\n    });\n  });","file":"dissocPath.js","skipped":false,"dir":"test"},{"name":"allow integer to be used as key for object","suites":["dissocPath"],"updatePoint":{"line":135,"column":48,"index":2545},"line":135,"code":"  it('allow integer to be used as key for object', function () {\n    eq(R.dissocPath([42], {\n      a: 1,\n      b: 2,\n      42: 3\n    }), {\n      a: 1,\n      b: 2\n    });\n  });","file":"dissocPath.js","skipped":false,"dir":"test"},{"name":"support remove null/undefined value path","suites":["dissocPath"],"updatePoint":{"line":145,"column":46,"index":2719},"line":145,"code":"  it('support remove null/undefined value path', function () {\n    eq(R.dissocPath(['c', 'd'], {\n      a: 1,\n      b: 2,\n      c: null\n    }), {\n      a: 1,\n      b: 2,\n      c: null\n    });\n    eq(R.dissocPath(['c', 'd'], {\n      a: 1,\n      b: 2,\n      c: undefined\n    }), {\n      a: 1,\n      b: 2,\n      c: undefined\n    });\n    var obj1 = {\n      a: 1,\n      b: 2\n    };\n    var obj2 = R.dissocPath(['c', 'd'], obj1);\n    eq(obj2, obj1); // Note: reference equality below!\n\n    assert.notStrictEqual(obj2, obj1);\n  });","file":"dissocPath.js","skipped":false,"dir":"test"},{"name":"divides two numbers","suites":["divide"],"updatePoint":{"line":6,"column":25,"index":136},"line":6,"code":"  it('divides two numbers', function () {\n    eq(R.divide(28, 7), 4);\n  });","file":"divide.js","skipped":false,"dir":"test"},{"name":"skips the first `n` elements from a list, returning the remainder","suites":["drop"],"updatePoint":{"line":8,"column":71,"index":213},"line":8,"code":"  it('skips the first `n` elements from a list, returning the remainder', function () {\n    eq(R.drop(3, ['a', 'b', 'c', 'd', 'e', 'f', 'g']), ['d', 'e', 'f', 'g']);\n  });","file":"drop.js","skipped":false,"dir":"test"},{"name":"returns an empty array if `n` is too large","suites":["drop"],"updatePoint":{"line":11,"column":48,"index":362},"line":11,"code":"  it('returns an empty array if `n` is too large', function () {\n    eq(R.drop(20, ['a', 'b', 'c', 'd', 'e', 'f', 'g']), []);\n  });","file":"drop.js","skipped":false,"dir":"test"},{"name":"returns an equivalent list if `n` is <= 0","suites":["drop"],"updatePoint":{"line":14,"column":47,"index":493},"line":14,"code":"  it('returns an equivalent list if `n` is <= 0', function () {\n    eq(R.drop(0, [1, 2, 3]), [1, 2, 3]);\n    eq(R.drop(-1, [1, 2, 3]), [1, 2, 3]);\n    eq(R.drop(-Infinity, [1, 2, 3]), [1, 2, 3]);\n  });","file":"drop.js","skipped":false,"dir":"test"},{"name":"never returns the input array","suites":["drop"],"updatePoint":{"line":19,"column":35,"index":683},"line":19,"code":"  it('never returns the input array', function () {\n    var xs = [1, 2, 3];\n    assert.notStrictEqual(R.drop(0, xs), xs);\n    assert.notStrictEqual(R.drop(-1, xs), xs);\n  });","file":"drop.js","skipped":false,"dir":"test"},{"name":"can operate on strings","suites":["drop"],"updatePoint":{"line":24,"column":28,"index":851},"line":24,"code":"  it('can operate on strings', function () {\n    eq(R.drop(3, 'Ramda'), 'da');\n    eq(R.drop(4, 'Ramda'), 'a');\n    eq(R.drop(5, 'Ramda'), '');\n    eq(R.drop(6, 'Ramda'), '');\n  });","file":"drop.js","skipped":false,"dir":"test"},{"name":"skips the last `n` elements from a list, returning the remainder","suites":["dropLast"],"updatePoint":{"line":8,"column":70,"index":216},"line":8,"code":"  it('skips the last `n` elements from a list, returning the remainder', function () {\n    eq(R.dropLast(3, ['a', 'b', 'c', 'd', 'e', 'f', 'g']), ['a', 'b', 'c', 'd']);\n  });","file":"dropLast.js","skipped":false,"dir":"test"},{"name":"returns an empty array if `n` is too large","suites":["dropLast"],"updatePoint":{"line":11,"column":48,"index":369},"line":11,"code":"  it('returns an empty array if `n` is too large', function () {\n    eq(R.dropLast(20, ['a', 'b', 'c', 'd', 'e', 'f', 'g']), []);\n  });","file":"dropLast.js","skipped":false,"dir":"test"},{"name":"returns an equivalent list if `n` is <= 0","suites":["dropLast"],"updatePoint":{"line":14,"column":47,"index":504},"line":14,"code":"  it('returns an equivalent list if `n` is <= 0', function () {\n    eq(R.dropLast(0, [1, 2, 3]), [1, 2, 3]);\n    eq(R.dropLast(-1, [1, 2, 3]), [1, 2, 3]);\n    eq(R.dropLast(-Infinity, [1, 2, 3]), [1, 2, 3]);\n  });","file":"dropLast.js","skipped":false,"dir":"test"},{"name":"never returns the input array","suites":["dropLast"],"updatePoint":{"line":19,"column":35,"index":706},"line":19,"code":"  it('never returns the input array', function () {\n    var xs = [1, 2, 3];\n    assert.notStrictEqual(R.dropLast(0, xs), xs);\n    assert.notStrictEqual(R.dropLast(-1, xs), xs);\n  });","file":"dropLast.js","skipped":false,"dir":"test"},{"name":"can operate on strings","suites":["dropLast"],"updatePoint":{"line":24,"column":28,"index":882},"line":24,"code":"  it('can operate on strings', function () {\n    eq(R.dropLast(3, 'Ramda'), 'Ra');\n  });","file":"dropLast.js","skipped":false,"dir":"test"},{"name":"can act as a transducer","suites":["dropLast"],"updatePoint":{"line":27,"column":29,"index":972},"line":27,"code":"  it('can act as a transducer', function () {\n    var dropLast2 = R.dropLast(2);\n    var input = [1, 3, 5, 7, 9, 1, 2];\n    var expected = [1, 3, 5, 7, 9];\n    eq(R.into([], dropLast2, input), expected);\n    eq(R.transduce(dropLast2, R.flip(R.append), [], input), expected);\n  });","file":"dropLast.js","skipped":false,"dir":"test"},{"name":"skips elements while the function reports `true`","suites":["dropLastWhile"],"updatePoint":{"line":6,"column":54,"index":172},"line":6,"code":"  it('skips elements while the function reports `true`', function () {\n    eq(R.dropLastWhile(function (x) {\n      return x >= 5;\n    }, [1, 3, 5, 7, 9]), [1, 3]);\n  });","file":"dropLastWhile.js","skipped":false,"dir":"test"},{"name":"returns an empty list for an empty list","suites":["dropLastWhile"],"updatePoint":{"line":11,"column":45,"index":333},"line":11,"code":"  it('returns an empty list for an empty list', function () {\n    eq(R.dropLastWhile(function () {\n      return false;\n    }, []), []);\n    eq(R.dropLastWhile(function () {\n      return true;\n    }, []), []);\n  });","file":"dropLastWhile.js","skipped":false,"dir":"test"},{"name":"starts at the right arg and acknowledges undefined","suites":["dropLastWhile"],"updatePoint":{"line":19,"column":56,"index":559},"line":19,"code":"  it('starts at the right arg and acknowledges undefined', function () {\n    var sublist = R.dropLastWhile(function (x) {\n      return x !== void 0;\n    }, [1, 3, void 0, 5, 7]);\n    eq(sublist.length, 3);\n    eq(sublist[0], 1);\n    eq(sublist[1], 3);\n    eq(sublist[2], void 0);\n  });","file":"dropLastWhile.js","skipped":false,"dir":"test"},{"name":"can operate on strings","suites":["dropLastWhile"],"updatePoint":{"line":28,"column":28,"index":817},"line":28,"code":"  it('can operate on strings', function () {\n    eq(R.dropLastWhile(function (x) {\n      return x !== 'd';\n    }, 'Ramda'), 'Ramd');\n  });","file":"dropLastWhile.js","skipped":false,"dir":"test"},{"name":"can act as a transducer","suites":["dropLastWhile"],"updatePoint":{"line":33,"column":29,"index":957},"line":33,"code":"  it('can act as a transducer', function () {\n    var dropLt7 = R.dropLastWhile(function (x) {\n      return x < 7;\n    });\n    var input = [1, 3, 5, 7, 9, 1, 2];\n    var expected = [1, 3, 5, 7, 9];\n    eq(R.into([], dropLt7, input), expected);\n    eq(R.transduce(dropLt7, R.flip(R.append), [], input), expected);\n  });","file":"dropLastWhile.js","skipped":false,"dir":"test"},{"name":"removes repeated elements","suites":["dropRepeats"],"updatePoint":{"line":12,"column":31,"index":283},"line":12,"code":"  it('removes repeated elements', function () {\n    eq(R.dropRepeats(objs2), objs);\n    eq(R.dropRepeats(objs), objs);\n  });","file":"dropRepeats.js","skipped":false,"dir":"test"},{"name":"returns an empty array for an empty array","suites":["dropRepeats"],"updatePoint":{"line":16,"column":47,"index":424},"line":16,"code":"  it('returns an empty array for an empty array', function () {\n    eq(R.dropRepeats([]), []);\n  });","file":"dropRepeats.js","skipped":false,"dir":"test"},{"name":"can act as a transducer","suites":["dropRepeats"],"updatePoint":{"line":19,"column":29,"index":507},"line":19,"code":"  it('can act as a transducer', function () {\n    eq(R.into([], R.dropRepeats, objs2), objs);\n    eq(R.transduce(R.dropRepeats, R.flip(R.append), [], objs2), objs);\n  });","file":"dropRepeats.js","skipped":false,"dir":"test"},{"name":"has R.equals semantics","suites":["dropRepeats"],"updatePoint":{"line":23,"column":28,"index":677},"line":23,"code":"  it('has R.equals semantics', function () {\n    eq(R.dropRepeats([0, -0]).length, 2);\n    eq(R.dropRepeats([-0, 0]).length, 2);\n    eq(R.dropRepeats([NaN, NaN]).length, 1);\n    eq(R.dropRepeats([new Just([42]), new Just([42])]).length, 1);\n  });","file":"dropRepeats.js","skipped":false,"dir":"test"},{"name":"removes repeated elements based on predicate","suites":["dropRepeatsBy"],"updatePoint":{"line":47,"column":50,"index":516},"line":47,"code":"  it('removes repeated elements based on predicate', function () {\n    eq(R.dropRepeatsBy(fn, objs2), objs);\n    eq(R.dropRepeatsBy(fn, objs), objs);\n  });","file":"dropRepeatsBy.js","skipped":false,"dir":"test"},{"name":"keeps elements from the left","suites":["dropRepeatsBy"],"updatePoint":{"line":51,"column":34,"index":656},"line":51,"code":"  it('keeps elements from the left', function () {\n    eq(R.dropRepeatsBy(({\n      n,\n      ...rest\n    }) => ({ ...rest\n    }), [{\n      i: 1,\n      n: 1\n    }, {\n      i: 1,\n      n: 2\n    }, {\n      i: 1,\n      n: 3\n    }, {\n      i: 4,\n      n: 1\n    }, {\n      i: 4,\n      n: 2\n    }]), [{\n      i: 1,\n      n: 1\n    }, {\n      i: 4,\n      n: 1\n    }]);\n  });","file":"dropRepeatsBy.js","skipped":false,"dir":"test"},{"name":"returns an empty array for an empty array","suites":["dropRepeatsBy"],"updatePoint":{"line":79,"column":47,"index":1034},"line":79,"code":"  it('returns an empty array for an empty array', function () {\n    eq(R.dropRepeatsBy(fn, []), []);\n  });","file":"dropRepeatsBy.js","skipped":false,"dir":"test"},{"name":"can act as a transducer","suites":["dropRepeatsBy"],"updatePoint":{"line":82,"column":29,"index":1123},"line":82,"code":"  it('can act as a transducer', function () {\n    eq(R.into([], R.dropRepeatsBy(fn), objs2), objs);\n  });","file":"dropRepeatsBy.js","skipped":false,"dir":"test"},{"name":"removes repeated elements based on predicate","suites":["dropRepeatsWith"],"updatePoint":{"line":43,"column":50,"index":494},"line":43,"code":"  it('removes repeated elements based on predicate', function () {\n    eq(R.dropRepeatsWith(eqI, objs2), objs);\n    eq(R.dropRepeatsWith(eqI, objs), objs);\n  });","file":"dropRepeatsWith.js","skipped":false,"dir":"test"},{"name":"keeps elements from the left","suites":["dropRepeatsWith"],"updatePoint":{"line":47,"column":34,"index":640},"line":47,"code":"  it('keeps elements from the left', function () {\n    eq(R.dropRepeatsWith(eqI, [{\n      i: 1,\n      n: 1\n    }, {\n      i: 1,\n      n: 2\n    }, {\n      i: 1,\n      n: 3\n    }, {\n      i: 4,\n      n: 1\n    }, {\n      i: 4,\n      n: 2\n    }]), [{\n      i: 1,\n      n: 1\n    }, {\n      i: 4,\n      n: 1\n    }]);\n  });","file":"dropRepeatsWith.js","skipped":false,"dir":"test"},{"name":"returns an empty array for an empty array","suites":["dropRepeatsWith"],"updatePoint":{"line":71,"column":47,"index":970},"line":71,"code":"  it('returns an empty array for an empty array', function () {\n    eq(R.dropRepeatsWith(eqI, []), []);\n  });","file":"dropRepeatsWith.js","skipped":false,"dir":"test"},{"name":"can act as a transducer","suites":["dropRepeatsWith"],"updatePoint":{"line":74,"column":29,"index":1062},"line":74,"code":"  it('can act as a transducer', function () {\n    eq(R.into([], R.dropRepeatsWith(eqI), objs2), objs);\n    eq(R.transduce(R.dropRepeatsWith(eqI), R.flip(R.append), [], objs2), objs);\n  });","file":"dropRepeatsWith.js","skipped":false,"dir":"test"},{"name":"skips elements while the function reports `true`","suites":["dropWhile"],"updatePoint":{"line":6,"column":54,"index":168},"line":6,"code":"  it('skips elements while the function reports `true`', function () {\n    eq(R.dropWhile(function (x) {\n      return x < 5;\n    }, [1, 3, 5, 7, 9]), [5, 7, 9]);\n  });","file":"dropWhile.js","skipped":false,"dir":"test"},{"name":"returns an empty list for an empty list","suites":["dropWhile"],"updatePoint":{"line":11,"column":45,"index":327},"line":11,"code":"  it('returns an empty list for an empty list', function () {\n    eq(R.dropWhile(function () {\n      return false;\n    }, []), []);\n    eq(R.dropWhile(function () {\n      return true;\n    }, []), []);\n  });","file":"dropWhile.js","skipped":false,"dir":"test"},{"name":"starts at the right arg and acknowledges undefined","suites":["dropWhile"],"updatePoint":{"line":19,"column":56,"index":545},"line":19,"code":"  it('starts at the right arg and acknowledges undefined', function () {\n    var sublist = R.dropWhile(function (x) {\n      return x !== void 0;\n    }, [1, 3, void 0, 5, 7]);\n    eq(sublist.length, 3);\n    eq(sublist[0], void 0);\n    eq(sublist[1], 5);\n    eq(sublist[2], 7);\n  });","file":"dropWhile.js","skipped":false,"dir":"test"},{"name":"can operate on strings","suites":["dropWhile"],"updatePoint":{"line":28,"column":28,"index":799},"line":28,"code":"  it('can operate on strings', function () {\n    eq(R.dropWhile(function (x) {\n      return x !== 'd';\n    }, 'Ramda'), 'da');\n  });","file":"dropWhile.js","skipped":false,"dir":"test"},{"name":"can act as a transducer","suites":["dropWhile"],"updatePoint":{"line":33,"column":29,"index":933},"line":33,"code":"  it('can act as a transducer', function () {\n    var lteTwo = x => x <= 2;\n\n    var input = [1, 2, 3, 4, 3, 2, 1];\n    var expected = [3, 4, 3, 2, 1];\n    eq(R.into([], R.dropWhile(lteTwo), input), expected);\n    eq(R.transduce(R.dropWhile(lteTwo), R.flip(R.append), [], input), expected);\n  });","file":"dropWhile.js","skipped":false,"dir":"test"},{"name":"combines two boolean-returning functions into one","suites":["either"],"updatePoint":{"line":8,"column":55,"index":197},"line":8,"code":"  it('combines two boolean-returning functions into one', function () {\n    var even = function (x) {\n      return x % 2 === 0;\n    };\n\n    var gt10 = function (x) {\n      return x > 10;\n    };\n\n    var f = R.either(even, gt10);\n    eq(f(8), true);\n    eq(f(13), true);\n    eq(f(7), false);\n  });","file":"either.js","skipped":false,"dir":"test"},{"name":"accepts functions that take multiple parameters","suites":["either"],"updatePoint":{"line":22,"column":53,"index":492},"line":22,"code":"  it('accepts functions that take multiple parameters', function () {\n    var between = function (a, b, c) {\n      return a < b && b < c;\n    };\n\n    var total20 = function (a, b, c) {\n      return a + b + c === 20;\n    };\n\n    var f = R.either(between, total20);\n    eq(f(4, 5, 8), true);\n    eq(f(12, 2, 6), true);\n    eq(f(7, 5, 1), false);\n  });","file":"either.js","skipped":false,"dir":"test"},{"name":"does not evaluate the second expression if the first one is true","suites":["either"],"updatePoint":{"line":36,"column":70,"index":859},"line":36,"code":"  it('does not evaluate the second expression if the first one is true', function () {\n    var T = function () {\n      return true;\n    };\n\n    var Z = function () {\n      effect = 'Z got evaluated';\n    };\n\n    var effect = 'not evaluated';\n    R.either(T, Z)();\n    eq(effect, 'not evaluated');\n  });","file":"either.js","skipped":false,"dir":"test"},{"name":"accepts fantasy-land applicative functors","suites":["either"],"updatePoint":{"line":49,"column":47,"index":1139},"line":49,"code":"  it('accepts fantasy-land applicative functors', function () {\n    var Just = S.Just;\n    var Nothing = S.Nothing;\n    eq(R.either(Just(true), Just(true)), Just(true));\n    eq(R.either(Just(true), Just(false)), Just(true));\n    eq(R.either(Just(false), Just(false)), Just(false));\n    eq(R.either(Just(true), Nothing()), Nothing());\n    eq(R.either(Nothing(), Just(false)), Nothing());\n    eq(R.either(Nothing(), Nothing()), Nothing());\n  });","file":"either.js","skipped":false,"dir":"test"},{"name":"dispatches to `empty` method","suites":["empty"],"updatePoint":{"line":6,"column":34,"index":144},"line":6,"code":"  it('dispatches to `empty` method', function () {\n    function Nothing() {}\n\n    Nothing.prototype.empty = function () {\n      return new Nothing();\n    };\n\n    function Just(x) {\n      this.value = x;\n    }\n\n    Just.prototype.empty = function () {\n      return new Nothing();\n    };\n\n    eq(R.empty(new Nothing()).constructor, Nothing);\n    eq(R.empty(new Just(123)).constructor, Nothing);\n  });","file":"empty.js","skipped":false,"dir":"test"},{"name":"dispatches to `empty` function on constructor","suites":["empty"],"updatePoint":{"line":24,"column":51,"index":560},"line":24,"code":"  it('dispatches to `empty` function on constructor', function () {\n    function Nothing() {}\n\n    Nothing.empty = function () {\n      return new Nothing();\n    };\n\n    function Just(x) {\n      this.value = x;\n    }\n\n    Just.empty = function () {\n      return new Nothing();\n    };\n\n    eq(R.empty(new Nothing()).constructor, Nothing);\n    eq(R.empty(new Just(123)).constructor, Nothing);\n  });","file":"empty.js","skipped":false,"dir":"test"},{"name":"returns empty array given array","suites":["empty"],"updatePoint":{"line":42,"column":37,"index":942},"line":42,"code":"  it('returns empty array given array', function () {\n    eq(R.empty([1, 2, 3]), []);\n  });","file":"empty.js","skipped":false,"dir":"test"},{"name":"returns empty typed array of equivalent type given typed array","suites":["empty"],"updatePoint":{"line":45,"column":68,"index":1065},"line":45,"code":"  it('returns empty typed array of equivalent type given typed array', function () {\n    eq(R.empty(Uint8Array.from('123')), Uint8Array.from(''));\n    eq(R.empty(Uint8Array.from('123')).constructor.name, 'Uint8Array');\n    eq(R.empty(new Float32Array([1, 2, 3])), new Float32Array([]));\n    eq(R.empty(new Float32Array([1, 2, 3])).constructor.name, 'Float32Array');\n  });","file":"empty.js","skipped":false,"dir":"test"},{"name":"returns empty object given object","suites":["empty"],"updatePoint":{"line":51,"column":39,"index":1408},"line":51,"code":"  it('returns empty object given object', function () {\n    eq(R.empty({\n      x: 1,\n      y: 2\n    }), {});\n  });","file":"empty.js","skipped":false,"dir":"test"},{"name":"returns empty string given string","suites":["empty"],"updatePoint":{"line":57,"column":39,"index":1523},"line":57,"code":"  it('returns empty string given string', function () {\n    eq(R.empty('abc'), '');\n    eq(R.empty(new String('abc')), '');\n  });","file":"empty.js","skipped":false,"dir":"test"},{"name":"returns empty arguments object given arguments object","suites":["empty"],"updatePoint":{"line":61,"column":59,"index":1673},"line":61,"code":"  it('returns empty arguments object given arguments object', function () {\n    var x = function () {\n      return arguments;\n    }(1, 2, 3);\n\n    eq(R.empty(x), function () {\n      return arguments;\n    }());\n  });","file":"empty.js","skipped":false,"dir":"test"},{"name":"should return true when a string ends with the provided value","suites":["endsWith"],"updatePoint":{"line":6,"column":67,"index":180},"line":6,"code":"  it('should return true when a string ends with the provided value', function () {\n    eq(R.endsWith('c', 'abc'), true);\n  });","file":"endsWith.js","skipped":false,"dir":"test"},{"name":"should return true when a long string ends with the provided value","suites":["endsWith"],"updatePoint":{"line":9,"column":72,"index":313},"line":9,"code":"  it('should return true when a long string ends with the provided value', function () {\n    eq(R.endsWith('ology', 'astrology'), true);\n  });","file":"endsWith.js","skipped":false,"dir":"test"},{"name":"should return false when a string does not end with the provided value","suites":["endsWith"],"updatePoint":{"line":12,"column":76,"index":460},"line":12,"code":"  it('should return false when a string does not end with the provided value', function () {\n    eq(R.endsWith('b', 'abc'), false);\n  });","file":"endsWith.js","skipped":false,"dir":"test"},{"name":"should return false when a long string does not end with the provided value","suites":["endsWith"],"updatePoint":{"line":15,"column":81,"index":603},"line":15,"code":"  it('should return false when a long string does not end with the provided value', function () {\n    eq(R.endsWith('olog', 'astrology'), false);\n  });","file":"endsWith.js","skipped":false,"dir":"test"},{"name":"should return true when an array ends with the provided value","suites":["endsWith"],"updatePoint":{"line":18,"column":67,"index":741},"line":18,"code":"  it('should return true when an array ends with the provided value', function () {\n    eq(R.endsWith(['c'], ['a', 'b', 'c']), true);\n  });","file":"endsWith.js","skipped":false,"dir":"test"},{"name":"should return true when an array ends with the provided values","suites":["endsWith"],"updatePoint":{"line":21,"column":68,"index":882},"line":21,"code":"  it('should return true when an array ends with the provided values', function () {\n    eq(R.endsWith(['b', 'c'], ['a', 'b', 'c']), true);\n  });","file":"endsWith.js","skipped":false,"dir":"test"},{"name":"should return false when an array does not end with the provided value","suites":["endsWith"],"updatePoint":{"line":24,"column":76,"index":1036},"line":24,"code":"  it('should return false when an array does not end with the provided value', function () {\n    eq(R.endsWith(['b'], ['a', 'b', 'c']), false);\n  });","file":"endsWith.js","skipped":false,"dir":"test"},{"name":"should return false when an array does not end with the provided values","suites":["endsWith"],"updatePoint":{"line":27,"column":77,"index":1187},"line":27,"code":"  it('should return false when an array does not end with the provided values', function () {\n    eq(R.endsWith(['a', 'b'], ['a', 'b', 'c']), false);\n  });","file":"endsWith.js","skipped":false,"dir":"test"},{"name":"determines whether two values map to the same value in the codomain","suites":["eqBy"],"updatePoint":{"line":10,"column":73,"index":230},"line":10,"code":"  it('determines whether two values map to the same value in the codomain', function () {\n    eq(R.eqBy(Math.abs, 5, 5), true);\n    eq(R.eqBy(Math.abs, 5, -5), true);\n    eq(R.eqBy(Math.abs, -5, 5), true);\n    eq(R.eqBy(Math.abs, -5, -5), true);\n    eq(R.eqBy(Math.abs, 42, 99), false);\n  });","file":"eqBy.js","skipped":false,"dir":"test"},{"name":"has R.equals semantics","suites":["eqBy"],"updatePoint":{"line":17,"column":28,"index":478},"line":17,"code":"  it('has R.equals semantics', function () {\n    eq(R.eqBy(R.identity, 0, -0), false);\n    eq(R.eqBy(R.identity, -0, 0), false);\n    eq(R.eqBy(R.identity, NaN, NaN), true);\n    eq(R.eqBy(R.identity, new Just([42]), new Just([42])), true);\n  });","file":"eqBy.js","skipped":false,"dir":"test"},{"name":"reports whether two objects have the same value for a given property","suites":["eqProps"],"updatePoint":{"line":10,"column":74,"index":234},"line":10,"code":"  it('reports whether two objects have the same value for a given property', function () {\n    eq(R.eqProps('name', {\n      name: 'fred',\n      age: 10\n    }, {\n      name: 'fred',\n      age: 12\n    }), true);\n    eq(R.eqProps('name', {\n      name: 'fred',\n      age: 10\n    }, {\n      name: 'franny',\n      age: 10\n    }), false);\n  });","file":"eqProps.js","skipped":false,"dir":"test"},{"name":"has R.equals semantics","suites":["eqProps"],"updatePoint":{"line":26,"column":28,"index":526},"line":26,"code":"  it('has R.equals semantics', function () {\n    eq(R.eqProps('value', {\n      value: 0\n    }, {\n      value: -0\n    }), false);\n    eq(R.eqProps('value', {\n      value: -0\n    }, {\n      value: 0\n    }), false);\n    eq(R.eqProps('value', {\n      value: NaN\n    }, {\n      value: NaN\n    }), true);\n    eq(R.eqProps('value', {\n      value: new Just([42])\n    }, {\n      value: new Just([42])\n    }), true);\n  });","file":"eqProps.js","skipped":false,"dir":"test"},{"name":"tests for deep equality of its operands","suites":["equals"],"updatePoint":{"line":11,"column":45,"index":256},"line":11,"code":"  it('tests for deep equality of its operands', function () {\n    eq(R.equals(100, 100), true);\n    eq(R.equals(100, '100'), false);\n    eq(R.equals([], []), true);\n    eq(R.equals(a, b), true);\n  });","file":"equals.js","skipped":false,"dir":"test"},{"name":"considers equal Boolean primitives equal","suites":["equals"],"updatePoint":{"line":17,"column":46,"index":458},"line":17,"code":"  it('considers equal Boolean primitives equal', function () {\n    eq(R.equals(true, true), true);\n    eq(R.equals(false, false), true);\n    eq(R.equals(true, false), false);\n    eq(R.equals(false, true), false);\n  });","file":"equals.js","skipped":false,"dir":"test"},{"name":"considers equivalent Boolean objects equal","suites":["equals"],"updatePoint":{"line":23,"column":48,"index":679},"line":23,"code":"  it('considers equivalent Boolean objects equal', function () {\n    eq(R.equals(new Boolean(true), new Boolean(true)), true);\n    eq(R.equals(new Boolean(false), new Boolean(false)), true);\n    eq(R.equals(new Boolean(true), new Boolean(false)), false);\n    eq(R.equals(new Boolean(false), new Boolean(true)), false);\n  });","file":"equals.js","skipped":false,"dir":"test"},{"name":"never considers Boolean primitive equal to Boolean object","suites":["equals"],"updatePoint":{"line":29,"column":63,"index":1019},"line":29,"code":"  it('never considers Boolean primitive equal to Boolean object', function () {\n    eq(R.equals(true, new Boolean(true)), false);\n    eq(R.equals(new Boolean(true), true), false);\n    eq(R.equals(false, new Boolean(false)), false);\n    eq(R.equals(new Boolean(false), false), false);\n  });","file":"equals.js","skipped":false,"dir":"test"},{"name":"considers equal number primitives equal","suites":["equals"],"updatePoint":{"line":35,"column":45,"index":1291},"line":35,"code":"  it('considers equal number primitives equal', function () {\n    eq(R.equals(0, 0), true);\n    eq(R.equals(0, 1), false);\n    eq(R.equals(1, 0), false);\n  });","file":"equals.js","skipped":false,"dir":"test"},{"name":"considers equivalent Number objects equal","suites":["equals"],"updatePoint":{"line":40,"column":47,"index":1453},"line":40,"code":"  it('considers equivalent Number objects equal', function () {\n    eq(R.equals(new Number(0), new Number(0)), true);\n    eq(R.equals(new Number(0), new Number(1)), false);\n    eq(R.equals(new Number(1), new Number(0)), false);\n  });","file":"equals.js","skipped":false,"dir":"test"},{"name":"never considers number primitive equal to Number object","suites":["equals"],"updatePoint":{"line":45,"column":61,"index":1701},"line":45,"code":"  it('never considers number primitive equal to Number object', function () {\n    eq(R.equals(0, new Number(0)), false);\n    eq(R.equals(new Number(0), 0), false);\n  });","file":"equals.js","skipped":false,"dir":"test"},{"name":"considers equal string primitives equal","suites":["equals"],"updatePoint":{"line":49,"column":45,"index":1855},"line":49,"code":"  it('considers equal string primitives equal', function () {\n    eq(R.equals('', ''), true);\n    eq(R.equals('', 'x'), false);\n    eq(R.equals('x', ''), false);\n    eq(R.equals('foo', 'foo'), true);\n    eq(R.equals('foo', 'bar'), false);\n    eq(R.equals('bar', 'foo'), false);\n  });","file":"equals.js","skipped":false,"dir":"test"},{"name":"considers equivalent String objects equal","suites":["equals"],"updatePoint":{"line":57,"column":47,"index":2141},"line":57,"code":"  it('considers equivalent String objects equal', function () {\n    eq(R.equals(new String(''), new String('')), true);\n    eq(R.equals(new String(''), new String('x')), false);\n    eq(R.equals(new String('x'), new String('')), false);\n    eq(R.equals(new String('foo'), new String('foo')), true);\n    eq(R.equals(new String('foo'), new String('bar')), false);\n    eq(R.equals(new String('bar'), new String('foo')), false);\n  });","file":"equals.js","skipped":false,"dir":"test"},{"name":"never considers string primitive equal to String object","suites":["equals"],"updatePoint":{"line":65,"column":61,"index":2585},"line":65,"code":"  it('never considers string primitive equal to String object', function () {\n    eq(R.equals('', new String('')), false);\n    eq(R.equals(new String(''), ''), false);\n    eq(R.equals('x', new String('x')), false);\n    eq(R.equals(new String('x'), 'x'), false);\n  });","file":"equals.js","skipped":false,"dir":"test"},{"name":"handles objects","suites":["equals"],"updatePoint":{"line":71,"column":21,"index":2813},"line":71,"code":"  it('handles objects', function () {\n    eq(R.equals({}, {}), true);\n    eq(R.equals({\n      a: 1,\n      b: 2\n    }, {\n      a: 1,\n      b: 2\n    }), true);\n    eq(R.equals({\n      a: 2,\n      b: 3\n    }, {\n      b: 3,\n      a: 2\n    }), true);\n    eq(R.equals({\n      a: 2,\n      b: 3\n    }, {\n      a: 3,\n      b: 3\n    }), false);\n    eq(R.equals({\n      a: 2,\n      b: 3,\n      c: 1\n    }, {\n      a: 2,\n      b: 3\n    }), false);\n  });","file":"equals.js","skipped":false,"dir":"test"},{"name":"considers equivalent Arguments objects equal","suites":["equals"],"updatePoint":{"line":103,"column":50,"index":3284},"line":103,"code":"  it('considers equivalent Arguments objects equal', function () {\n    var a = function () {\n      return arguments;\n    }();\n\n    var b = function () {\n      return arguments;\n    }();\n\n    var c = function () {\n      return arguments;\n    }(1, 2, 3);\n\n    var d = function () {\n      return arguments;\n    }(1, 2, 3);\n\n    eq(R.equals(a, b), true);\n    eq(R.equals(b, a), true);\n    eq(R.equals(c, d), true);\n    eq(R.equals(d, c), true);\n    eq(R.equals(a, c), false);\n    eq(R.equals(c, a), false);\n  });","file":"equals.js","skipped":false,"dir":"test"},{"name":"considers equivalent Error objects equal","suites":["equals"],"updatePoint":{"line":127,"column":46,"index":3789},"line":127,"code":"  it('considers equivalent Error objects equal', function () {\n    eq(R.equals(new Error('XXX'), new Error('XXX')), true);\n    eq(R.equals(new Error('XXX'), new Error('YYY')), false);\n    eq(R.equals(new Error('XXX'), new TypeError('XXX')), false);\n    eq(R.equals(new Error('XXX'), new TypeError('YYY')), false);\n  });","file":"equals.js","skipped":false,"dir":"test"},{"name":"handles regex","suites":["equals"],"updatePoint":{"line":147,"column":19,"index":4294},"line":147,"code":"  it('handles regex', function () {\n    eq(R.equals(/\\s/, /\\s/), true);\n    eq(R.equals(/\\s/, /\\d/), false);\n    eq(R.equals(/a/gi, /a/ig), true);\n    eq(R.equals(/a/mgi, /a/img), true);\n    eq(R.equals(/a/gi, /a/i), false);\n\n    if (supportsSticky) {// eq(R.equals(/\\s/y, /\\s/y), true);\n      // eq(R.equals(/a/mygi, /a/imgy), true);\n    }\n\n    if (supportsUnicode) {// eq(R.equals(/\\s/u, /\\s/u), true);\n      // eq(R.equals(/a/mugi, /a/imgu), true);\n    }\n  });","file":"equals.js","skipped":false,"dir":"test"},{"name":"handles lists","suites":["equals"],"updatePoint":{"line":164,"column":19,"index":4808},"line":164,"code":"  it('handles lists', function () {\n    eq(R.equals([], {}), false);\n    eq(R.equals(listA, listB), false);\n  });","file":"equals.js","skipped":false,"dir":"test"},{"name":"handles recursive data structures","suites":["equals"],"updatePoint":{"line":194,"column":39,"index":5241},"line":194,"code":"  it('handles recursive data structures', function () {\n    eq(R.equals(c, d), true);\n    eq(R.equals(e, f), true);\n    eq(R.equals(nestA, nestB), true);\n    eq(R.equals(nestA, nestC), false);\n  });","file":"equals.js","skipped":false,"dir":"test"},{"name":"handles dates","suites":["equals"],"updatePoint":{"line":200,"column":19,"index":5420},"line":200,"code":"  it('handles dates', function () {\n    eq(R.equals(new Date(0), new Date(0)), true);\n    eq(R.equals(new Date(1), new Date(1)), true);\n    eq(R.equals(new Date(0), new Date(1)), false);\n    eq(R.equals(new Date(1), new Date(0)), false);\n  });","file":"equals.js","skipped":false,"dir":"test"},{"name":"requires that both objects have the same enumerable properties with the same values","suites":["equals"],"updatePoint":{"line":206,"column":89,"index":5734},"line":206,"code":"  it('requires that both objects have the same enumerable properties with the same values', function () {\n    var a1 = [];\n    var a2 = [];\n    a2.x = 0;\n    var b1 = new Boolean(false);\n    var b2 = new Boolean(false);\n    b2.x = 0;\n    var d1 = new Date(0);\n    var d2 = new Date(0);\n    d2.x = 0;\n    var n1 = new Number(0);\n    var n2 = new Number(0);\n    n2.x = 0;\n    var r1 = /(?:)/;\n    var r2 = /(?:)/;\n    r2.x = 0;\n    var s1 = new String('');\n    var s2 = new String('');\n    s2.x = 0;\n    eq(R.equals(a1, a2), false);\n    eq(R.equals(b1, b2), false);\n    eq(R.equals(d1, d2), false);\n    eq(R.equals(n1, n2), false);\n    eq(R.equals(r1, r2), false);\n    eq(R.equals(s1, s2), false);\n  });","file":"equals.js","skipped":false,"dir":"test"},{"name":"handles typed arrays","suites":["equals"],"updatePoint":{"line":241,"column":28,"index":6677},"line":241,"code":"    it('handles typed arrays', function () {\n      eq(R.equals(typArr1, typArr2), true);\n      eq(R.equals(typArr1, typArr3), false);\n      eq(R.equals(typArr1, intTypArr), false);\n    });","file":"equals.js","skipped":false,"dir":"test"},{"name":"compares Promise objects by identity","suites":["equals"],"updatePoint":{"line":249,"column":44,"index":6927},"line":249,"code":"    it('compares Promise objects by identity', function () {\n      var p = Promise.resolve(42);\n      var q = Promise.resolve(42);\n      eq(R.equals(p, p), true);\n      eq(R.equals(p, q), false);\n    });","file":"equals.js","skipped":false,"dir":"test"},{"name":"compares Map objects by value","suites":["equals"],"updatePoint":{"line":258,"column":37,"index":7165},"line":258,"code":"    it('compares Map objects by value', function () {\n      eq(R.equals(new Map([]), new Map([])), true);\n      eq(R.equals(new Map([]), new Map([[1, 'a']])), false);\n      eq(R.equals(new Map([[1, 'a']]), new Map([])), false);\n      eq(R.equals(new Map([[1, 'a']]), new Map([[1, 'a']])), true);\n      eq(R.equals(new Map([[1, 'a'], [2, 'b']]), new Map([[2, 'b'], [1, 'a']])), true);\n      eq(R.equals(new Map([[1, 'a']]), new Map([[2, 'a']])), false);\n      eq(R.equals(new Map([[1, 'a']]), new Map([[1, 'b']])), false);\n      eq(R.equals(new Map([[1, 'a'], [2, new Map([[3, 'c']])]]), new Map([[1, 'a'], [2, new Map([[3, 'c']])]])), true);\n      eq(R.equals(new Map([[1, 'a'], [2, new Map([[3, 'c']])]]), new Map([[1, 'a'], [2, new Map([[3, 'd']])]])), false);\n      eq(R.equals(new Map([[[1, 2, 3], [4, 5, 6]]]), new Map([[[1, 2, 3], [4, 5, 6]]])), true);\n      eq(R.equals(new Map([[[1, 2, 3], [4, 5, 6]]]), new Map([[[1, 2, 3], [7, 8, 9]]])), false);\n    });","file":"equals.js","skipped":false,"dir":"test"},{"name":"dispatches to `equals` method recursively in Set","suites":["equals"],"updatePoint":{"line":271,"column":56,"index":8148},"line":271,"code":"    it('dispatches to `equals` method recursively in Set', function () {\n      var a = new Map();\n      var b = new Map();\n      a.set(a, a);\n      eq(R.equals(a, b), false);\n      a.set(b, b);\n      b.set(b, b);\n      b.set(a, a);\n      eq(R.equals(a, b), true);\n    });","file":"equals.js","skipped":false,"dir":"test"},{"name":"compares Set objects by value","suites":["equals"],"updatePoint":{"line":284,"column":37,"index":8442},"line":284,"code":"    it('compares Set objects by value', function () {\n      eq(R.equals(new Set([]), new Set([])), true);\n      eq(R.equals(new Set([]), new Set([1])), false);\n      eq(R.equals(new Set([1]), new Set([])), false);\n      eq(R.equals(new Set([1, 2]), new Set([2, 1])), true);\n      eq(R.equals(new Set([1, new Set([2, new Set([3])])]), new Set([1, new Set([2, new Set([3])])])), true);\n      eq(R.equals(new Set([1, new Set([2, new Set([3])])]), new Set([1, new Set([2, new Set([4])])])), false);\n      eq(R.equals(new Set([[1, 2, 3], [4, 5, 6]]), new Set([[1, 2, 3], [4, 5, 6]])), true);\n      eq(R.equals(new Set([[1, 2, 3], [4, 5, 6]]), new Set([[1, 2, 3], [7, 8, 9]])), false);\n    });","file":"equals.js","skipped":false,"dir":"test"},{"name":"dispatches to `equals` method recursively in Set","suites":["equals"],"updatePoint":{"line":294,"column":56,"index":9149},"line":294,"code":"    it('dispatches to `equals` method recursively in Set', function () {\n      var a = new Set();\n      var b = new Set();\n      a.add(a);\n      eq(R.equals(a, b), false);\n      a.add(b);\n      b.add(b);\n      b.add(a);\n      eq(R.equals(a, b), true);\n    });","file":"equals.js","skipped":false,"dir":"test"},{"name":"compares WeakMap objects by identity","suites":["equals"],"updatePoint":{"line":307,"column":44,"index":9442},"line":307,"code":"    it('compares WeakMap objects by identity', function () {\n      var m = new WeakMap([]);\n      eq(R.equals(m, m), true);\n      eq(R.equals(m, new WeakMap([])), false);\n    });","file":"equals.js","skipped":false,"dir":"test"},{"name":"compares WeakSet objects by identity","suites":["equals"],"updatePoint":{"line":315,"column":44,"index":9666},"line":315,"code":"    it('compares WeakSet objects by identity', function () {\n      var s = new WeakSet([]);\n      eq(R.equals(s, s), true);\n      eq(R.equals(s, new WeakSet([])), false);\n    });","file":"equals.js","skipped":false,"dir":"test"},{"name":"dispatches to `equals` method recursively","suites":["equals"],"updatePoint":{"line":322,"column":47,"index":9853},"line":322,"code":"  it('dispatches to `equals` method recursively', function () {\n    function Left(x) {\n      this.value = x;\n    }\n\n    Left.prototype.equals = function (x) {\n      return x instanceof Left && R.equals(x.value, this.value);\n    };\n\n    function Right(x) {\n      this.value = x;\n    }\n\n    Right.prototype.equals = function (x) {\n      return x instanceof Right && R.equals(x.value, this.value);\n    };\n\n    eq(R.equals(new Left([42]), new Left([42])), true);\n    eq(R.equals(new Left([42]), new Left([43])), false);\n    eq(R.equals(new Left(42), {\n      value: 42\n    }), false);\n    eq(R.equals({\n      value: 42\n    }, new Left(42)), false);\n    eq(R.equals(new Left(42), new Right(42)), false);\n    eq(R.equals(new Right(42), new Left(42)), false);\n    eq(R.equals([new Left(42)], [new Left(42)]), true);\n    eq(R.equals([new Left(42)], [new Right(42)]), false);\n    eq(R.equals([new Right(42)], [new Left(42)]), false);\n    eq(R.equals([new Right(42)], [new Right(42)]), true);\n  });","file":"equals.js","skipped":false,"dir":"test"},{"name":"is commutative","suites":["equals"],"updatePoint":{"line":354,"column":20,"index":10814},"line":354,"code":"  it('is commutative', function () {\n    function Point(x, y) {\n      this.x = x;\n      this.y = y;\n    }\n\n    Point.prototype.equals = function (point) {\n      return point instanceof Point && this.x === point.x && this.y === point.y;\n    };\n\n    function ColorPoint(x, y, color) {\n      this.x = x;\n      this.y = y;\n      this.color = color;\n    }\n\n    ColorPoint.prototype = new Point(0, 0);\n\n    ColorPoint.prototype.equals = function (point) {\n      return point instanceof ColorPoint && this.x === point.x && this.y === point.y && this.color === point.color;\n    };\n\n    eq(R.equals(new Point(2, 2), new ColorPoint(2, 2, 'red')), false);\n    eq(R.equals(new ColorPoint(2, 2, 'red'), new Point(2, 2)), false);\n  }); // Arbitrary configured to produce any kind of values","file":"equals.js","skipped":false,"dir":"test"},{"name":"perfect clones should be considered equal","suites":["equals"],"updatePoint":{"line":391,"column":47,"index":11975},"line":391,"code":"  it('perfect clones should be considered equal', function () {\n    fc.assert(fc.property(fc.clone(anythingInstanceArb, 2), function (values) {\n      eq(R.equals(values[0], values[1]), true);\n    }));\n  });","file":"equals.js","skipped":false,"dir":"test"},{"name":"is commutative whatever the values","suites":["equals"],"updatePoint":{"line":396,"column":40,"index":12175},"line":396,"code":"  it('is commutative whatever the values', function () {\n    fc.assert(fc.property(anythingInstanceArb, anythingInstanceArb, function (v1, v2) {\n      eq(R.equals(v1, v2), R.equals(v2, v1));\n    }));\n  });","file":"equals.js","skipped":false,"dir":"test"},{"name":"creates a new object by evolving the `object` according to the `transformation` functions","suites":["evolve"],"updatePoint":{"line":6,"column":95,"index":206},"line":6,"code":"  it('creates a new object by evolving the `object` according to the `transformation` functions', function () {\n    var transf = {\n      elapsed: R.add(1),\n      remaining: R.add(-1)\n    };\n    var object = {\n      name: 'Tomato',\n      elapsed: 100,\n      remaining: 1400\n    };\n    var expected = {\n      name: 'Tomato',\n      elapsed: 101,\n      remaining: 1399\n    };\n    eq(R.evolve(transf, object), expected);\n  });","file":"evolve.js","skipped":false,"dir":"test"},{"name":"does not invoke function if object does not contain the key","suites":["evolve"],"updatePoint":{"line":23,"column":65,"index":598},"line":23,"code":"  it('does not invoke function if object does not contain the key', function () {\n    var transf = {\n      n: R.add(1),\n      m: R.add(1)\n    };\n    var object = {\n      m: 3\n    };\n    var expected = {\n      m: 4\n    };\n    eq(R.evolve(transf, object), expected);\n  });","file":"evolve.js","skipped":false,"dir":"test"},{"name":"is not destructive","suites":["evolve"],"updatePoint":{"line":36,"column":24,"index":828},"line":36,"code":"  it('is not destructive', function () {\n    var transf = {\n      elapsed: R.add(1),\n      remaining: R.add(-1)\n    };\n    var object = {\n      name: 'Tomato',\n      elapsed: 100,\n      remaining: 1400\n    };\n    var expected = {\n      name: 'Tomato',\n      elapsed: 100,\n      remaining: 1400\n    };\n    R.evolve(transf, object);\n    eq(object, expected);\n  });","file":"evolve.js","skipped":false,"dir":"test"},{"name":"is recursive","suites":["evolve"],"updatePoint":{"line":54,"column":18,"index":1185},"line":54,"code":"  it('is recursive', function () {\n    var transf = {\n      nested: {\n        second: R.add(-1),\n        third: R.add(1)\n      }\n    };\n    var object = {\n      first: 1,\n      nested: {\n        second: 2,\n        third: 3\n      }\n    };\n    var expected = {\n      first: 1,\n      nested: {\n        second: 1,\n        third: 4\n      }\n    };\n    eq(R.evolve(transf, object), expected);\n  });","file":"evolve.js","skipped":false,"dir":"test"},{"name":"ignores primitive value transformations","suites":["evolve"],"updatePoint":{"line":77,"column":45,"index":1604},"line":77,"code":"  it('ignores primitive value transformations', function () {\n    var transf = {\n      n: 2,\n      m: 'foo'\n    };\n    var object = {\n      n: 0,\n      m: 1\n    };\n    var expected = {\n      n: 0,\n      m: 1\n    };\n    eq(R.evolve(transf, object), expected);\n  });","file":"evolve.js","skipped":false,"dir":"test"},{"name":"ignores null transformations","suites":["evolve"],"updatePoint":{"line":92,"column":34,"index":1858},"line":92,"code":"  it('ignores null transformations', function () {\n    var transf = {\n      n: null\n    };\n    var object = {\n      n: 0\n    };\n    var expected = {\n      n: 0\n    };\n    eq(R.evolve(transf, object), expected);\n  });","file":"evolve.js","skipped":false,"dir":"test"},{"name":"creates a new array by evolving the `array` according to the `transformation` functions","suites":["evolve"],"updatePoint":{"line":104,"column":93,"index":2134},"line":104,"code":"  it('creates a new array by evolving the `array` according to the `transformation` functions', function () {\n    var transf = [R.add(1), R.add(-1)];\n    var object = [100, 1400];\n    var expected = [101, 1399];\n    eq(R.evolve(transf, object), expected);\n  });","file":"evolve.js","skipped":false,"dir":"test"},{"name":"ignores transformations if the input value is not Array and Object","suites":["evolve"],"updatePoint":{"line":110,"column":72,"index":2375},"line":110,"code":"  it('ignores transformations if the input value is not Array and Object', function () {\n    var transf = {\n      a: R.add(1)\n    };\n    eq(R.evolve(transf, 42), 42);\n    eq(R.evolve(transf, undefined), undefined);\n    eq(R.evolve(transf, null), null);\n    eq(R.evolve(transf, ''), '');\n  });","file":"evolve.js","skipped":false,"dir":"test"},{"name":"always returns false","suites":["F"],"updatePoint":{"line":6,"column":26,"index":132},"line":6,"code":"  it('always returns false', function () {\n    eq(R.F(), false);\n    eq(R.F(10), false);\n    eq(R.F(true), false);\n  });","file":"F.js","skipped":false,"dir":"test"},{"name":"reduces an array to those matching a filter","suites":["filter"],"updatePoint":{"line":14,"column":49,"index":266},"line":14,"code":"  it('reduces an array to those matching a filter', function () {\n    eq(R.filter(even, [1, 2, 3, 4, 5]), [2, 4]);\n  });","file":"filter.js","skipped":false,"dir":"test"},{"name":"returns an empty array if no element matches","suites":["filter"],"updatePoint":{"line":17,"column":50,"index":388},"line":17,"code":"  it('returns an empty array if no element matches', function () {\n    eq(R.filter(function (x) {\n      return x > 100;\n    }, [1, 9, 99]), []);\n  });","file":"filter.js","skipped":false,"dir":"test"},{"name":"returns an empty array if asked to filter an empty array","suites":["filter"],"updatePoint":{"line":22,"column":62,"index":551},"line":22,"code":"  it('returns an empty array if asked to filter an empty array', function () {\n    eq(R.filter(function (x) {\n      return x > 100;\n    }, []), []);\n  });","file":"filter.js","skipped":false,"dir":"test"},{"name":"filters objects","suites":["filter"],"updatePoint":{"line":27,"column":21,"index":665},"line":27,"code":"  it('filters objects', function () {\n    var positive = function (x) {\n      return x > 0;\n    };\n\n    eq(R.filter(positive, {}), {});\n    eq(R.filter(positive, {\n      x: 0,\n      y: 0,\n      z: 0\n    }), {});\n    eq(R.filter(positive, {\n      x: 1,\n      y: 0,\n      z: 0\n    }), {\n      x: 1\n    });\n    eq(R.filter(positive, {\n      x: 1,\n      y: 2,\n      z: 0\n    }), {\n      x: 1,\n      y: 2\n    });\n    eq(R.filter(positive, {\n      x: 1,\n      y: 2,\n      z: 3\n    }), {\n      x: 1,\n      y: 2,\n      z: 3\n    });\n  });","file":"filter.js","skipped":false,"dir":"test"},{"name":"dispatches to passed-in non-Array object with a `filter` method","suites":["filter"],"updatePoint":{"line":63,"column":69,"index":1243},"line":63,"code":"  it('dispatches to passed-in non-Array object with a `filter` method', function () {\n    var f = {\n      filter: function (f) {\n        return f('called f.filter');\n      }\n    };\n    eq(R.filter(function (s) {\n      return s;\n    }, f), 'called f.filter');\n  });","file":"filter.js","skipped":false,"dir":"test"},{"name":"correctly uses fantasy-land implementations","suites":["filter"],"updatePoint":{"line":73,"column":49,"index":1488},"line":73,"code":"  it('correctly uses fantasy-land implementations', function () {\n    var m1 = Just(-1);\n    var m2 = R.filter(function (x) {\n      return x > 0;\n    }, m1);\n    eq(m2.isNothing, true);\n  });","file":"filter.js","skipped":false,"dir":"test"},{"name":"can act as a transducer","suites":["filter"],"updatePoint":{"line":80,"column":29,"index":1660},"line":80,"code":"  it('can act as a transducer', function () {\n    var input = [1, 2, 3, 4];\n    var expected = [2, 4];\n    eq(R.into([], R.filter(even), input), expected);\n    eq(R.transduce(R.filter(even), R.flip(R.append), [], input), expected);\n  });","file":"filter.js","skipped":false,"dir":"test"},{"name":"returns the first element that satisfies the predicate","suites":["find"],"updatePoint":{"line":32,"column":60,"index":601},"line":32,"code":"  it('returns the first element that satisfies the predicate', function () {\n    eq(R.find(even, a), 10);\n    eq(R.find(gt100, a), 200);\n    eq(R.find(isStr, a), 'cow');\n    eq(R.find(xGt100, a), obj2);\n  });","file":"find.js","skipped":false,"dir":"test"},{"name":"returns `undefined` when no element satisfies the predicate","suites":["find"],"updatePoint":{"line":38,"column":65,"index":815},"line":38,"code":"  it('returns `undefined` when no element satisfies the predicate', function () {\n    eq(R.find(even, ['zing']), undefined);\n  });","file":"find.js","skipped":false,"dir":"test"},{"name":"returns `undefined` when given an empty list","suites":["find"],"updatePoint":{"line":41,"column":50,"index":931},"line":41,"code":"  it('returns `undefined` when given an empty list', function () {\n    eq(R.find(even, []), undefined);\n  });","file":"find.js","skipped":false,"dir":"test"},{"name":"dispatches to transformer objects","suites":["find"],"updatePoint":{"line":44,"column":39,"index":1030},"line":44,"code":"  it('dispatches to transformer objects', function () {\n    eq(R.find(R.identity, listXf), {\n      f: R.identity,\n      found: false,\n      xf: listXf\n    });\n  });","file":"find.js","skipped":false,"dir":"test"},{"name":"can act as a transducer","suites":["find"],"updatePoint":{"line":51,"column":29,"index":1185},"line":51,"code":"  it('can act as a transducer', function () {\n    eq(R.into([], R.find(even), a), [10]);\n    eq(R.transduce(R.find(even), R.flip(R.append), [], a), [10]);\n  });","file":"find.js","skipped":false,"dir":"test"},{"name":"returns the index of the first element that satisfies the predicate","suites":["findIndex"],"updatePoint":{"line":32,"column":73,"index":619},"line":32,"code":"  it('returns the index of the first element that satisfies the predicate', function () {\n    eq(R.findIndex(even, a), 1);\n    eq(R.findIndex(gt100, a), 8);\n    eq(R.findIndex(isStr, a), 3);\n    eq(R.findIndex(xGt100, a), 10);\n  });","file":"findIndex.js","skipped":false,"dir":"test"},{"name":"returns -1 when no element satisfies the predicate","suites":["findIndex"],"updatePoint":{"line":38,"column":56,"index":835},"line":38,"code":"  it('returns -1 when no element satisfies the predicate', function () {\n    eq(R.findIndex(even, ['zing']), -1);\n    eq(R.findIndex(even, []), -1);\n  });","file":"findIndex.js","skipped":false,"dir":"test"},{"name":"dispatches to transformer objects","suites":["findIndex"],"updatePoint":{"line":42,"column":39,"index":973},"line":42,"code":"  it('dispatches to transformer objects', function () {\n    eq(R.findIndex(R.identity, listXf), {\n      f: R.identity,\n      found: false,\n      idx: -1,\n      xf: listXf\n    });\n  });","file":"findIndex.js","skipped":false,"dir":"test"},{"name":"can act as a transducer","suites":["findIndex"],"updatePoint":{"line":50,"column":29,"index":1148},"line":50,"code":"  it('can act as a transducer', function () {\n    eq(R.into([], R.findIndex(even), a), [1]);\n    eq(R.transduce(R.findIndex(even), R.flip(R.append), [], a), [1]);\n  });","file":"findIndex.js","skipped":false,"dir":"test"},{"name":"returns the index of the last element that satisfies the predicate","suites":["findLast"],"updatePoint":{"line":32,"column":72,"index":617},"line":32,"code":"  it('returns the index of the last element that satisfies the predicate', function () {\n    eq(R.findLast(even, a), 0);\n    eq(R.findLast(gt100, a), 300);\n    eq(R.findLast(isStr, a), 'cow');\n    eq(R.findLast(xGt100, a), obj2);\n  });","file":"findLast.js","skipped":false,"dir":"test"},{"name":"returns `undefined` when no element satisfies the predicate","suites":["findLast"],"updatePoint":{"line":38,"column":65,"index":846},"line":38,"code":"  it('returns `undefined` when no element satisfies the predicate', function () {\n    eq(R.findLast(even, ['zing']), undefined);\n  });","file":"findLast.js","skipped":false,"dir":"test"},{"name":"works when the first element matches","suites":["findLast"],"updatePoint":{"line":41,"column":42,"index":958},"line":41,"code":"  it('works when the first element matches', function () {\n    eq(R.findLast(even, [2, 3, 5]), 2);\n  });","file":"findLast.js","skipped":false,"dir":"test"},{"name":"does not go into an infinite loop on an empty array","suites":["findLast"],"updatePoint":{"line":44,"column":57,"index":1078},"line":44,"code":"  it('does not go into an infinite loop on an empty array', function () {\n    eq(R.findLast(even, []), undefined);\n  });","file":"findLast.js","skipped":false,"dir":"test"},{"name":"dispatches to transformer objects","suites":["findLast"],"updatePoint":{"line":47,"column":39,"index":1181},"line":47,"code":"  it('dispatches to transformer objects', function () {\n    eq(R.findLast(R.identity, listXf), {\n      f: R.identity,\n      xf: listXf\n    });\n  });","file":"findLast.js","skipped":false,"dir":"test"},{"name":"can act as a transducer","suites":["findLast"],"updatePoint":{"line":53,"column":29,"index":1320},"line":53,"code":"  it('can act as a transducer', function () {\n    eq(R.into([], R.findLast(even), a), [0]);\n    eq(R.transduce(R.findLast(even), R.flip(R.append), [], a), [0]);\n  });","file":"findLast.js","skipped":false,"dir":"test"},{"name":"returns the index of the last element that satisfies the predicate","suites":["findLastIndex"],"updatePoint":{"line":32,"column":72,"index":622},"line":32,"code":"  it('returns the index of the last element that satisfies the predicate', function () {\n    eq(R.findLastIndex(even, a), 15);\n    eq(R.findLastIndex(gt100, a), 9);\n    eq(R.findLastIndex(isStr, a), 3);\n    eq(R.findLastIndex(xGt100, a), 10);\n  });","file":"findLastIndex.js","skipped":false,"dir":"test"},{"name":"returns -1 when no element satisfies the predicate","suites":["findLastIndex"],"updatePoint":{"line":38,"column":56,"index":855},"line":38,"code":"  it('returns -1 when no element satisfies the predicate', function () {\n    eq(R.findLastIndex(even, ['zing']), -1);\n  });","file":"findLastIndex.js","skipped":false,"dir":"test"},{"name":"works when the first element matches","suites":["findLastIndex"],"updatePoint":{"line":41,"column":42,"index":965},"line":41,"code":"  it('works when the first element matches', function () {\n    eq(R.findLastIndex(even, [2, 3, 5]), 0);\n  });","file":"findLastIndex.js","skipped":false,"dir":"test"},{"name":"does not go into an infinite loop on an empty array","suites":["findLastIndex"],"updatePoint":{"line":44,"column":57,"index":1090},"line":44,"code":"  it('does not go into an infinite loop on an empty array', function () {\n    eq(R.findLastIndex(even, []), -1);\n  });","file":"findLastIndex.js","skipped":false,"dir":"test"},{"name":"dispatches to transformer objects","suites":["findLastIndex"],"updatePoint":{"line":47,"column":39,"index":1191},"line":47,"code":"  it('dispatches to transformer objects', function () {\n    eq(R.findLastIndex(R.identity, listXf), {\n      f: R.identity,\n      idx: -1,\n      lastIdx: -1,\n      xf: listXf\n    });\n  });","file":"findLastIndex.js","skipped":false,"dir":"test"},{"name":"can act as a transducer","suites":["findLastIndex"],"updatePoint":{"line":55,"column":29,"index":1369},"line":55,"code":"  it('can act as a transducer', function () {\n    eq(R.into([], R.findLastIndex(even), a), [15]);\n    eq(R.transduce(R.findLastIndex(even), R.flip(R.append), [], a), [15]);\n  });","file":"findLastIndex.js","skipped":false,"dir":"test"},{"name":"turns a nested list into one flat list","suites":["flatten"],"updatePoint":{"line":8,"column":44,"index":189},"line":8,"code":"  it('turns a nested list into one flat list', function () {\n    var nest = [1, [2], [3, [4, 5], 6, [[[7], 8]]], 9, 10];\n    eq(R.flatten(nest), [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]);\n    nest = [[[[3]], 2, 1], 0, [[-1, -2], -3]];\n    eq(R.flatten(nest), [3, 2, 1, 0, -1, -2, -3]);\n    eq(R.flatten([1, 2, 3, 4, 5]), [1, 2, 3, 4, 5]);\n  });","file":"flatten.js","skipped":false,"dir":"test"},{"name":"is not destructive","suites":["flatten"],"updatePoint":{"line":15,"column":24,"index":505},"line":15,"code":"  it('is not destructive', function () {\n    var nest = [1, [2], [3, [4, 5], 6, [[[7], 8]]], 9, 10];\n    assert.notStrictEqual(R.flatten(nest), nest);\n  });","file":"flatten.js","skipped":false,"dir":"test"},{"name":"handles ridiculously large inputs","suites":["flatten"],"updatePoint":{"line":19,"column":39,"index":677},"line":19,"code":"  it('handles ridiculously large inputs', function () {\n    this.timeout(10000);\n    eq(R.flatten([new Array(1000000), R.range(0, 56000), 5, 1, 3]).length, 1056003);\n  });","file":"flatten.js","skipped":false,"dir":"test"},{"name":"handles array-like objects","suites":["flatten"],"updatePoint":{"line":23,"column":32,"index":842},"line":23,"code":"  it('handles array-like objects', function () {\n    var o = {\n      length: 3,\n      0: [1, 2, [3]],\n      1: [],\n      2: ['a', 'b', 'c', ['d', 'e']]\n    };\n    eq(R.flatten(o), [1, 2, 3, 'a', 'b', 'c', 'd', 'e']);\n  });","file":"flatten.js","skipped":false,"dir":"test"},{"name":"flattens an array of empty arrays","suites":["flatten"],"updatePoint":{"line":32,"column":39,"index":1072},"line":32,"code":"  it('flattens an array of empty arrays', function () {\n    eq(R.flatten([[], [], []]), []);\n    eq(R.flatten([]), []);\n  });","file":"flatten.js","skipped":false,"dir":"test"},{"name":"returns a function which inverts the first two arguments to the supplied function","suites":["flip"],"updatePoint":{"line":8,"column":87,"index":229},"line":8,"code":"  it('returns a function which inverts the first two arguments to the supplied function', function () {\n    var f = function (a, b, c) {\n      return a + ' ' + b + ' ' + c;\n    };\n\n    var g = R.flip(f);\n    eq(f('a', 'b', 'c'), 'a b c');\n    eq(g('a', 'b', 'c'), 'b a c');\n  });","file":"flip.js","skipped":false,"dir":"test"},{"name":"returns a curried function","suites":["flip"],"updatePoint":{"line":17,"column":32,"index":454},"line":17,"code":"  it('returns a curried function', function () {\n    var f = function (a, b, c) {\n      return a + ' ' + b + ' ' + c;\n    };\n\n    var g = R.flip(f)('a');\n    eq(g('b', 'c'), 'b a c');\n  });","file":"flip.js","skipped":false,"dir":"test"},{"name":"returns a function with the correct arity","suites":["flip"],"updatePoint":{"line":25,"column":47,"index":659},"line":25,"code":"  it('returns a function with the correct arity', function () {\n    var f2 = function (a, b) {\n      return a + ' ' + b;\n    };\n\n    var f3 = function (a, b, c) {\n      return a + ' ' + b + ' ' + c;\n    };\n\n    eq(R.flip(f2).length, 2);\n    eq(R.flip(f3).length, 3);\n  });","file":"flip.js","skipped":false,"dir":"test"},{"name":"inverts first two arguments","suites":["flip properties"],"updatePoint":{"line":39,"column":33,"index":964},"line":39,"code":"  it('inverts first two arguments', function () {\n    fc.assert(fc.property(fc.func(fc.anything()), fc.anything(), fc.anything(), fc.anything(), function (f, a, b, c) {\n      var g = R.flip(f);\n      return R.equals(f(a, b, c), g(b, a, c));\n    }));\n  });","file":"flip.js","skipped":false,"dir":"test"},{"name":"performs the passed in function on each element of the list","suites":["forEach"],"updatePoint":{"line":19,"column":65,"index":308},"line":19,"code":"  it('performs the passed in function on each element of the list', function () {\n    var sideEffect = {};\n    R.forEach(function (elem) {\n      sideEffect[elem.x] = elem.y;\n    }, list);\n    eq(sideEffect, {\n      1: 2,\n      100: 200,\n      300: 400,\n      234: 345\n    });\n  });","file":"forEach.js","skipped":false,"dir":"test"},{"name":"returns the original list","suites":["forEach"],"updatePoint":{"line":31,"column":31,"index":556},"line":31,"code":"  it('returns the original list', function () {\n    var s = '';\n    eq(R.forEach(function (obj) {\n      s += obj.x;\n    }, list), list);\n    eq('1100300234', s);\n  });","file":"forEach.js","skipped":false,"dir":"test"},{"name":"handles empty list","suites":["forEach"],"updatePoint":{"line":38,"column":24,"index":717},"line":38,"code":"  it('handles empty list', function () {\n    eq(R.forEach(function (x) {\n      return x * x;\n    }, []), []);\n  });","file":"forEach.js","skipped":false,"dir":"test"},{"name":"dispatches to `forEach` method","suites":["forEach"],"updatePoint":{"line":43,"column":36,"index":845},"line":43,"code":"  it('dispatches to `forEach` method', function () {\n    var dispatched = false;\n\n    var fn = function () {};\n\n    function DummyList() {}\n\n    DummyList.prototype.forEach = function (callback) {\n      dispatched = true;\n      eq(callback, fn);\n    };\n\n    R.forEach(fn, new DummyList());\n    eq(dispatched, true);\n  });","file":"forEach.js","skipped":false,"dir":"test"},{"name":"performs the passed in function on each key and value of the object","suites":["forEachObjIndexed"],"updatePoint":{"line":11,"column":73,"index":245},"line":11,"code":"  it('performs the passed in function on each key and value of the object', function () {\n    var sideEffect = {};\n    R.forEachObjIndexed(function (value, key) {\n      sideEffect[key] = value;\n    }, obj);\n    eq(sideEffect, obj);\n  });","file":"forEachObjIndexed.js","skipped":false,"dir":"test"},{"name":"returns the original object","suites":["forEachObjIndexed"],"updatePoint":{"line":18,"column":33,"index":443},"line":18,"code":"  it('returns the original object', function () {\n    var s = '';\n    eq(R.forEachObjIndexed(function (value) {\n      s += value;\n    }, obj), obj);\n    eq('12123', s);\n  });","file":"forEachObjIndexed.js","skipped":false,"dir":"test"},{"name":"combines an array of two-element arrays into an object","suites":["fromPairs"],"updatePoint":{"line":6,"column":60,"index":174},"line":6,"code":"  it('combines an array of two-element arrays into an object', function () {\n    eq(R.fromPairs([['a', 1], ['b', 2], ['c', 3]]), {\n      a: 1,\n      b: 2,\n      c: 3\n    });\n  });","file":"fromPairs.js","skipped":false,"dir":"test"},{"name":"gives later entries precedence over earlier ones","suites":["fromPairs"],"updatePoint":{"line":13,"column":54,"index":348},"line":13,"code":"  it('gives later entries precedence over earlier ones', function () {\n    eq(R.fromPairs([['x', 1], ['x', 2]]), {\n      x: 2\n    });\n  });","file":"fromPairs.js","skipped":false,"dir":"test"},{"name":"splits the list into groups according to the grouping function","suites":["groupBy"],"updatePoint":{"line":8,"column":68,"index":251},"line":8,"code":"  it('splits the list into groups according to the grouping function', function () {\n    var grade = function (score) {\n      return score < 65 ? 'F' : score < 70 ? 'D' : score < 80 ? 'C' : score < 90 ? 'B' : 'A';\n    };\n\n    var students = [{\n      name: 'Abby',\n      score: 84\n    }, {\n      name: 'Brad',\n      score: 73\n    }, {\n      name: 'Chris',\n      score: 89\n    }, {\n      name: 'Dianne',\n      score: 99\n    }, {\n      name: 'Eddy',\n      score: 58\n    }, {\n      name: 'Fred',\n      score: 67\n    }, {\n      name: 'Gillian',\n      score: 91\n    }, {\n      name: 'Hannah',\n      score: 78\n    }, {\n      name: 'Irene',\n      score: 85\n    }, {\n      name: 'Jack',\n      score: 69\n    }];\n\n    var byGrade = function (student) {\n      return grade(student.score || 0);\n    };\n\n    eq(R.groupBy(byGrade, students), {\n      A: [{\n        name: 'Dianne',\n        score: 99\n      }, {\n        name: 'Gillian',\n        score: 91\n      }],\n      B: [{\n        name: 'Abby',\n        score: 84\n      }, {\n        name: 'Chris',\n        score: 89\n      }, {\n        name: 'Irene',\n        score: 85\n      }],\n      C: [{\n        name: 'Brad',\n        score: 73\n      }, {\n        name: 'Hannah',\n        score: 78\n      }],\n      D: [{\n        name: 'Fred',\n        score: 67\n      }, {\n        name: 'Jack',\n        score: 69\n      }],\n      F: [{\n        name: 'Eddy',\n        score: 58\n      }]\n    });\n  });","file":"groupBy.js","skipped":false,"dir":"test"},{"name":"returns an empty object if given an empty array","suites":["groupBy"],"updatePoint":{"line":87,"column":53,"index":1652},"line":87,"code":"  it('returns an empty object if given an empty array', function () {\n    eq(R.groupBy(R.prop('x'), []), {});\n  });","file":"groupBy.js","skipped":false,"dir":"test"},{"name":"dispatches on transformer objects in list position","suites":["groupBy"],"updatePoint":{"line":90,"column":56,"index":1771},"line":90,"code":"  it('dispatches on transformer objects in list position', function () {\n    var byType = R.prop('type');\n    var xf = {\n      '@@transducer/init': function () {\n        return {};\n      },\n      '@@transducer/result': function (x) {\n        return x;\n      },\n      '@@transducer/step': R.mergeRight\n    };\n    eq(_isTransformer(R.groupBy(byType, xf)), true);\n  });","file":"groupBy.js","skipped":false,"dir":"test"},{"name":"can act as a transducer","suites":["groupBy"],"updatePoint":{"line":103,"column":29,"index":2111},"line":103,"code":"  it('can act as a transducer', function () {\n    var evenOdd = x => x % 2 === 0 ? 'even' : 'odd';\n\n    var expected = {\n      even: [2, 4, 6, 8],\n      odd: [1, 3, 5, 7, 9]\n    };\n    eq(R.into({}, R.groupBy(evenOdd), R.range(1, 10)), expected);\n    eq(R.transduce(R.groupBy(evenOdd), (result, input) => {\n      result[input[0]] = input[1];\n      return result;\n    }, {}, R.range(1, 10)), expected);\n  });","file":"groupBy.js","skipped":false,"dir":"test"},{"name":"splits the list into groups according to the grouping function","suites":["groupWith"],"updatePoint":{"line":6,"column":68,"index":182},"line":6,"code":"  it('splits the list into groups according to the grouping function', function () {\n    eq(R.groupWith(R.equals, [1, 2, 2, 3]), [[1], [2, 2], [3]]);\n    eq(R.groupWith(R.equals, [1, 1, 1, 1]), [[1, 1, 1, 1]]);\n    eq(R.groupWith(R.equals, [1, 2, 3, 4]), [[1], [2], [3], [4]]);\n  });","file":"groupWith.js","skipped":false,"dir":"test"},{"name":"splits the list into \"streaks\" testing adjacent elements","suites":["groupWith"],"updatePoint":{"line":11,"column":62,"index":460},"line":11,"code":"  it('splits the list into \"streaks\" testing adjacent elements', function () {\n    var isConsecutive = function (a, b) {\n      return a + 1 === b;\n    };\n\n    eq(R.groupWith(isConsecutive, []), []);\n    eq(R.groupWith(isConsecutive, [4, 3, 2, 1]), [[4], [3], [2], [1]]);\n    eq(R.groupWith(isConsecutive, [1, 2, 3, 4]), [[1, 2, 3, 4]]);\n    eq(R.groupWith(isConsecutive, [1, 2, 2, 3]), [[1, 2], [2, 3]]);\n    eq(R.groupWith(isConsecutive, [1, 2, 9, 3, 4]), [[1, 2], [9], [3, 4]]);\n  });","file":"groupWith.js","skipped":false,"dir":"test"},{"name":"returns an empty array if given an empty array","suites":["groupWith"],"updatePoint":{"line":22,"column":52,"index":937},"line":22,"code":"  it('returns an empty array if given an empty array', function () {\n    eq(R.groupWith(R.equals, []), []);\n  });","file":"groupWith.js","skipped":false,"dir":"test"},{"name":"can be turned into the original list through concatenation","suites":["groupWith"],"updatePoint":{"line":25,"column":64,"index":1063},"line":25,"code":"  it('can be turned into the original list through concatenation', function () {\n    var list = [1, 1, 2, 3, 4, 4, 5, 5];\n    eq(R.unnest(R.groupWith(R.equals, list)), list);\n    eq(R.unnest(R.groupWith(R.complement(R.equals), list)), list);\n    eq(R.unnest(R.groupWith(R.T, list)), list);\n    eq(R.unnest(R.groupWith(R.F, list)), list);\n  });","file":"groupWith.js","skipped":false,"dir":"test"},{"name":"also works on strings","suites":["groupWith"],"updatePoint":{"line":32,"column":27,"index":1370},"line":32,"code":"  it('also works on strings', function () {\n    eq(R.groupWith(R.equals)('Mississippi'), ['M', 'i', 'ss', 'i', 'ss', 'i', 'pp', 'i']);\n  });","file":"groupWith.js","skipped":false,"dir":"test"},{"name":"reports whether one item is greater than another","suites":["gt"],"updatePoint":{"line":6,"column":54,"index":161},"line":6,"code":"  it('reports whether one item is greater than another', function () {\n    eq(R.gt(3, 5), false);\n    eq(R.gt(6, 4), true);\n    eq(R.gt(7.0, 7.0), false);\n    eq(R.gt('abc', 'xyz'), false);\n    eq(R.gt('abcd', 'abc'), true);\n  });","file":"gt.js","skipped":false,"dir":"test"},{"name":"reports whether one item is greater than or equal to another","suites":["gte"],"updatePoint":{"line":6,"column":66,"index":174},"line":6,"code":"  it('reports whether one item is greater than or equal to another', function () {\n    eq(R.gte(3, 5), false);\n    eq(R.gte(6, 4), true);\n    eq(R.gte(7.0, 7.0), true);\n    eq(R.gte('abc', 'xyz'), false);\n    eq(R.gte('abcd', 'abc'), true);\n  });","file":"gte.js","skipped":false,"dir":"test"},{"name":"returns true if the specified property is present","suites":["has"],"updatePoint":{"line":13,"column":55,"index":245},"line":13,"code":"  it('returns true if the specified property is present', function () {\n    eq(R.has('name', fred), true);\n  });","file":"has.js","skipped":false,"dir":"test"},{"name":"returns false if the specified property is absent","suites":["has"],"updatePoint":{"line":16,"column":55,"index":358},"line":16,"code":"  it('returns false if the specified property is absent', function () {\n    eq(R.has('name', anon), false);\n  });","file":"has.js","skipped":false,"dir":"test"},{"name":"does not check properties from the prototype chain","suites":["has"],"updatePoint":{"line":19,"column":56,"index":473},"line":19,"code":"  it('does not check properties from the prototype chain', function () {\n    var Person = function () {};\n\n    Person.prototype.age = function () {};\n\n    var bob = new Person();\n    eq(R.has('age', bob), false);\n  });","file":"has.js","skipped":false,"dir":"test"},{"name":"returns false for non-objects","suites":["has"],"updatePoint":{"line":27,"column":35,"index":671},"line":27,"code":"  it('returns false for non-objects', function () {\n    eq(R.has('a', undefined), false);\n    eq(R.has('a', null), false);\n    eq(R.has('a', true), false);\n    eq(R.has('a', ''), false);\n    eq(R.has('a', /a/), false);\n  });","file":"has.js","skipped":false,"dir":"test"},{"name":"tests currying","suites":["has"],"updatePoint":{"line":34,"column":20,"index":881},"line":34,"code":"  it('tests currying', function () {\n    eq(R.has('a')({\n      a: {\n        b: 1\n      }\n    }), true);\n  });","file":"has.js","skipped":false,"dir":"test"},{"name":"returns a function that checks the appropriate property","suites":["hasIn"],"updatePoint":{"line":13,"column":61,"index":253},"line":13,"code":"  it('returns a function that checks the appropriate property', function () {\n    var nm = R.hasIn('name');\n    eq(typeof nm, 'function');\n    eq(nm(fred), true);\n    eq(nm(anon), false);\n  });","file":"hasIn.js","skipped":false,"dir":"test"},{"name":"checks properties from the prototype chain","suites":["hasIn"],"updatePoint":{"line":19,"column":48,"index":434},"line":19,"code":"  it('checks properties from the prototype chain', function () {\n    var Person = function () {};\n\n    Person.prototype.age = function () {};\n\n    var bob = new Person();\n    eq(R.hasIn('age', bob), true);\n  });","file":"hasIn.js","skipped":false,"dir":"test"},{"name":"works properly when called with two arguments","suites":["hasIn"],"updatePoint":{"line":27,"column":51,"index":649},"line":27,"code":"  it('works properly when called with two arguments', function () {\n    eq(R.hasIn('name', fred), true);\n    eq(R.hasIn('name', anon), false);\n  });","file":"hasIn.js","skipped":false,"dir":"test"},{"name":"returns false when non-existent object","suites":["hasIn"],"updatePoint":{"line":31,"column":44,"index":791},"line":31,"code":"  it('returns false when non-existent object', function () {\n    eq(R.hasIn('name', null), false);\n    eq(R.hasIn('name', undefined), false);\n  });","file":"hasIn.js","skipped":false,"dir":"test"},{"name":"returns true for existing path","suites":["hasPath"],"updatePoint":{"line":17,"column":36,"index":313},"line":17,"code":"  it('returns true for existing path', function () {\n    eq(R.hasPath(['objVal'], obj), true);\n    eq(R.hasPath(['objVal', 'b'], obj), true);\n    eq(R.hasPath(['objVal', 'b', 'c'], obj), true);\n    eq(R.hasPath(['arrayVal'], obj), true);\n  });","file":"hasPath.js","skipped":false,"dir":"test"},{"name":"returns true for existing path to falsy values","suites":["hasPath"],"updatePoint":{"line":23,"column":52,"index":573},"line":23,"code":"  it('returns true for existing path to falsy values', function () {\n    eq(R.hasPath(['falseVal'], obj), true);\n    eq(R.hasPath(['nullVal'], obj), true);\n    eq(R.hasPath(['undefinedVal'], obj), true);\n  });","file":"hasPath.js","skipped":false,"dir":"test"},{"name":"return false for a test for a child to a non-object","suites":["hasPath"],"updatePoint":{"line":28,"column":57,"index":788},"line":28,"code":"  it('return false for a test for a child to a non-object', function () {\n    eq(R.hasPath(['undefinedVal', 'child', 'grandchild'], obj), false);\n    eq(R.hasPath(['falseVal', 'child', 'grandchild'], obj), false);\n    eq(R.hasPath(['nullVal', 'child', 'grandchild'], obj), false);\n    eq(R.hasPath(['arrayVal', 0, 'child', 'grandchild'], obj), false);\n  });","file":"hasPath.js","skipped":false,"dir":"test"},{"name":"returns true for existing path with indexes","suites":["hasPath"],"updatePoint":{"line":34,"column":49,"index":1138},"line":34,"code":"  it('returns true for existing path with indexes', function () {\n    eq(R.hasPath(['arrayVal', 0], obj), true);\n  });","file":"hasPath.js","skipped":false,"dir":"test"},{"name":"returns false for non-existing path with indexes","suites":["hasPath"],"updatePoint":{"line":37,"column":54,"index":1262},"line":37,"code":"  it('returns false for non-existing path with indexes', function () {\n    eq(R.hasPath(['arrayVal', 1], obj), false);\n  });","file":"hasPath.js","skipped":false,"dir":"test"},{"name":"tests for paths in arrays","suites":["hasPath"],"updatePoint":{"line":40,"column":31,"index":1364},"line":40,"code":"  it('tests for paths in arrays', function () {\n    eq(R.hasPath([0], [1, 2]), true);\n    eq(R.hasPath([2], [1, 2]), false);\n    eq(R.hasPath(['0'], [1, 2]), true);\n    eq(R.hasPath(['2'], [1, 2]), false);\n  });","file":"hasPath.js","skipped":false,"dir":"test"},{"name":"returns false for non-existent path","suites":["hasPath"],"updatePoint":{"line":46,"column":41,"index":1586},"line":46,"code":"  it('returns false for non-existent path', function () {\n    eq(R.hasPath(['Unknown'], obj), false);\n    eq(R.hasPath(['objVal', 'Unknown'], obj), false);\n  });","file":"hasPath.js","skipped":false,"dir":"test"},{"name":"does not check properties from the prototype chain","suites":["hasPath"],"updatePoint":{"line":50,"column":56,"index":1763},"line":50,"code":"  it('does not check properties from the prototype chain', function () {\n    var Person = function () {};\n\n    Person.prototype.age = {\n      x: 1\n    };\n    var bob = new Person();\n    eq(R.hasPath(['age'], bob), false);\n    eq(R.hasPath(['age', 'x'], bob), false);\n    eq(R.hasPath(['toString'], bob), false);\n  });","file":"hasPath.js","skipped":false,"dir":"test"},{"name":"returns false for non-objects","suites":["hasPath"],"updatePoint":{"line":61,"column":35,"index":2060},"line":61,"code":"  it('returns false for non-objects', function () {\n    eq(R.hasPath([], obj), false);\n  });","file":"hasPath.js","skipped":false,"dir":"test"},{"name":"tests paths on non-objects","suites":["hasPath"],"updatePoint":{"line":64,"column":32,"index":2150},"line":64,"code":"  it('tests paths on non-objects', function () {\n    eq(R.hasPath(['a', 'b'], undefined), false);\n    eq(R.hasPath(['a', 'b'], null), false);\n    eq(R.hasPath('a', true), false);\n    eq(R.hasPath('a', ''), false);\n    eq(R.hasPath('a', /a/), false);\n  });","file":"hasPath.js","skipped":false,"dir":"test"},{"name":"tests currying","suites":["hasPath"],"updatePoint":{"line":71,"column":20,"index":2394},"line":71,"code":"  it('tests currying', function () {\n    eq(R.hasPath(['a', 'b'])({\n      a: {\n        b: 1\n      }\n    }), true);\n  });","file":"hasPath.js","skipped":false,"dir":"test"},{"name":"returns the first element of an ordered collection","suites":["head"],"updatePoint":{"line":8,"column":56,"index":198},"line":8,"code":"  it('returns the first element of an ordered collection', function () {\n    eq(R.head([1, 2, 3]), 1);\n    eq(R.head([2, 3]), 2);\n    eq(R.head([3]), 3);\n    eq(R.head([]), undefined);\n    eq(R.head('abc'), 'a');\n    eq(R.head('bc'), 'b');\n    eq(R.head('c'), 'c');\n    eq(R.head(''), '');\n  });","file":"head.js","skipped":false,"dir":"test"},{"name":"throws if applied to null or undefined","suites":["head"],"updatePoint":{"line":18,"column":44,"index":482},"line":18,"code":"  it('throws if applied to null or undefined', function () {\n    assert.throws(function () {\n      R.head(null);\n    }, TypeError);\n    assert.throws(function () {\n      R.head(undefined);\n    }, TypeError);\n  });","file":"head.js","skipped":false,"dir":"test"},{"name":"has Object.is semantics","suites":["identical"],"updatePoint":{"line":12,"column":29,"index":474},"line":12,"code":"  it('has Object.is semantics', function () {\n    eq(R.identical(100, 100), true);\n    eq(R.identical(100, '100'), false);\n    eq(R.identical('string', 'string'), true);\n    eq(R.identical([], []), false);\n    eq(R.identical(a, b), true);\n    eq(R.identical(undefined, undefined), true);\n    eq(R.identical(null, undefined), false);\n    eq(R.identical(-0, 0), false);\n    eq(R.identical(0, -0), false);\n    eq(R.identical(NaN, NaN), true);\n    eq(R.identical(NaN, 42), false);\n    eq(R.identical(42, NaN), false);\n    eq(R.identical(0, new Number(0)), false);\n    eq(R.identical(new Number(0), 0), false);\n    eq(R.identical(new Number(0), new Number(0)), false);\n  });","file":"identical.js","skipped":false,"dir":"test"},{"name":"is auto-curried","suites":["identical"],"updatePoint":{"line":29,"column":21,"index":1136},"line":29,"code":"  it('is auto-curried', function () {\n    assert.strictEqual(R.identical.length, 2);\n    var unaryFn = R.identical('foo');\n    assert.strictEqual(unaryFn.length, 1);\n    eq(unaryFn('bar'), false);\n    eq(unaryFn('foo'), true);\n  });","file":"identical.js","skipped":false,"dir":"test"},{"name":"does not access the placeholder property of its arguments which is forbidden for cross-origin browser windows","suites":["identical"],"updatePoint":{"line":36,"column":115,"index":1463},"line":36,"code":"  it('does not access the placeholder property of its arguments which is forbidden for cross-origin browser windows', function () {\n    // mock cross origin window object\n    // Access is just to a few properties allowed\n    // See https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy#cross-origin_script_api_access\n    function CrossOriginWindow() {} // disallow instanceof\n\n\n    Object.defineProperty(CrossOriginWindow, Symbol.hasInstance, {\n      value: function () {\n        throw new Error('Not allowed instanceof!');\n      }\n    });\n    const crossOriginWindowObject = new Proxy(new CrossOriginWindow(), {\n      get(target, key, context) {\n        if (allowedCrossOriginProperties.includes(key)) {\n          return Reflect.get(target, key, context);\n        }\n\n        throw new Error(`Not allowed property \"${key}\" access!`);\n      }\n\n    });\n    assert.doesNotThrow(() => R.identical(crossOriginWindowObject, {}), Error);\n    assert.doesNotThrow(() => R.identical({}, crossOriginWindowObject), Error);\n    eq(R.identical(crossOriginWindowObject, crossOriginWindowObject), true);\n    eq(R.identical(crossOriginWindowObject, {}), false);\n  });","file":"identical.js","skipped":false,"dir":"test"},{"name":"returns its first argument","suites":["identity"],"updatePoint":{"line":6,"column":32,"index":145},"line":6,"code":"  it('returns its first argument', function () {\n    eq(R.identity(undefined), undefined);\n    eq(R.identity('foo'), 'foo');\n    eq(R.identity('foo', 'bar'), 'foo');\n  });","file":"identity.js","skipped":false,"dir":"test"},{"name":"has length 1","suites":["identity"],"updatePoint":{"line":11,"column":18,"index":303},"line":11,"code":"  it('has length 1', function () {\n    eq(R.identity.length, 1);\n  });","file":"identity.js","skipped":false,"dir":"test"},{"name":"calls the truth case function if the validator returns a truthy value","suites":["ifElse"],"updatePoint":{"line":18,"column":75,"index":391},"line":18,"code":"  it('calls the truth case function if the validator returns a truthy value', function () {\n    var v = function (a) {\n      return typeof a === 'number';\n    };\n\n    eq(R.ifElse(v, t, identity)(10), 11);\n  });","file":"ifElse.js","skipped":false,"dir":"test"},{"name":"calls the false case function if the validator returns a falsy value","suites":["ifElse"],"updatePoint":{"line":25,"column":74,"index":601},"line":25,"code":"  it('calls the false case function if the validator returns a falsy value', function () {\n    var v = function (a) {\n      return typeof a === 'number';\n    };\n\n    eq(R.ifElse(v, t, identity)('hello'), 'hello');\n  });","file":"ifElse.js","skipped":false,"dir":"test"},{"name":"calls the true case on array items and the false case on non array items","suites":["ifElse"],"updatePoint":{"line":32,"column":78,"index":825},"line":32,"code":"  it('calls the true case on array items and the false case on non array items', function () {\n    var list = [[1, 2, 3, 4, 5], 10, [0, 1], 15];\n    var arrayToLength = R.map(R.ifElse(isArray, R.prop('length'), identity));\n    eq(arrayToLength(list), [5, 10, 2, 15]);\n  });","file":"ifElse.js","skipped":false,"dir":"test"},{"name":"passes the arguments to the true case function","suites":["ifElse"],"updatePoint":{"line":37,"column":52,"index":1073},"line":37,"code":"  it('passes the arguments to the true case function', function () {\n    var v = function () {\n      return true;\n    };\n\n    var onTrue = function (a, b) {\n      eq(a, 123);\n      eq(b, 'abc');\n    };\n\n    R.ifElse(v, onTrue, identity)(123, 'abc');\n  });","file":"ifElse.js","skipped":false,"dir":"test"},{"name":"passes the arguments to the false case function","suites":["ifElse"],"updatePoint":{"line":49,"column":53,"index":1330},"line":49,"code":"  it('passes the arguments to the false case function', function () {\n    var v = function () {\n      return false;\n    };\n\n    var onFalse = function (a, b) {\n      eq(a, 123);\n      eq(b, 'abc');\n    };\n\n    R.ifElse(v, identity, onFalse)(123, 'abc');\n  });","file":"ifElse.js","skipped":false,"dir":"test"},{"name":"returns a function whose arity equals the max arity of the three arguments to `ifElse`","suites":["ifElse"],"updatePoint":{"line":61,"column":92,"index":1629},"line":61,"code":"  it('returns a function whose arity equals the max arity of the three arguments to `ifElse`', function () {\n    function a0() {\n      return 0;\n    }\n\n    function a1(x) {\n      return x;\n    }\n\n    function a2(x, y) {\n      return x + y;\n    }\n\n    eq(R.ifElse(a0, a1, a2).length, 2);\n    eq(R.ifElse(a0, a2, a1).length, 2);\n    eq(R.ifElse(a1, a0, a2).length, 2);\n    eq(R.ifElse(a1, a2, a0).length, 2);\n    eq(R.ifElse(a2, a0, a1).length, 2);\n    eq(R.ifElse(a2, a1, a0).length, 2);\n  });","file":"ifElse.js","skipped":false,"dir":"test"},{"name":"returns a curried function","suites":["ifElse"],"updatePoint":{"line":81,"column":32,"index":2062},"line":81,"code":"  it('returns a curried function', function () {\n    var v = function (a) {\n      return typeof a === 'number';\n    };\n\n    var ifIsNumber = R.ifElse(v);\n    eq(ifIsNumber(t, identity)(15), 16);\n    eq(ifIsNumber(t, identity)('hello'), 'hello');\n    var fn = R.ifElse(R.gt, R.subtract, R.add);\n    eq(fn(2)(7), 9);\n    eq(fn(2, 7), 9);\n    eq(fn(7)(2), 5);\n    eq(fn(7, 2), 5);\n  });","file":"ifElse.js","skipped":false,"dir":"test"},{"name":"increments its argument","suites":["inc"],"updatePoint":{"line":6,"column":29,"index":137},"line":6,"code":"  it('increments its argument', function () {\n    eq(R.inc(-1), 0);\n    eq(R.inc(0), 1);\n    eq(R.inc(1), 2);\n    eq(R.inc(12.34), 13.34);\n    eq(R.inc(-Infinity), -Infinity);\n    eq(R.inc(Infinity), Infinity);\n  });","file":"inc.js","skipped":false,"dir":"test"},{"name":"returns true if an element is in a list","suites":["includes"],"updatePoint":{"line":10,"column":45,"index":206},"line":10,"code":"  it('returns true if an element is in a list', function () {\n    eq(R.includes(7, [1, 2, 3, 9, 8, 7, 100, 200, 300]), true);\n  });","file":"includes.js","skipped":false,"dir":"test"},{"name":"returns false if an element is not in a list","suites":["includes"],"updatePoint":{"line":13,"column":50,"index":343},"line":13,"code":"  it('returns false if an element is not in a list', function () {\n    eq(R.includes(99, [1, 2, 3, 9, 8, 7, 100, 200, 300]), false);\n  });","file":"includes.js","skipped":false,"dir":"test"},{"name":"returns false for the empty list","suites":["includes"],"updatePoint":{"line":16,"column":38,"index":470},"line":16,"code":"  it('returns false for the empty list', function () {\n    eq(R.includes(1, []), false);\n  });","file":"includes.js","skipped":false,"dir":"test"},{"name":"has R.equals semantics","suites":["includes"],"updatePoint":{"line":19,"column":28,"index":555},"line":19,"code":"  it('has R.equals semantics', function () {\n    eq(R.includes(0, [-0]), false);\n    eq(R.includes(-0, [0]), false);\n    eq(R.includes(NaN, [NaN]), true);\n    eq(R.includes(new Just([42]), [new Just([42])]), true);\n  });","file":"includes.js","skipped":false,"dir":"test"},{"name":"returns true if substring is part of string","suites":["includes"],"updatePoint":{"line":25,"column":49,"index":797},"line":25,"code":"  it('returns true if substring is part of string', function () {\n    eq(R.includes('ba', 'banana'), true);\n  });","file":"includes.js","skipped":false,"dir":"test"},{"name":"both APIs are in sync","suites":["API surface"],"updatePoint":{"line":49,"column":27,"index":1433},"line":49,"code":"  it('both APIs are in sync', function () {\n    eq(actual.length, exported.length);\n  });","file":"index.js","skipped":false,"dir":"test"},{"name":"list of not exported API methods is empty","suites":["API surface"],"updatePoint":{"line":52,"column":47,"index":1543},"line":52,"code":"  it('list of not exported API methods is empty', function () {\n    function isNotExported(method) {\n      return exported.indexOf(method) === -1;\n    }\n\n    eq(actual.filter(isNotExported), []);\n  });","file":"index.js","skipped":false,"dir":"test"},{"name":"indexes list by the given property","suites":["indexBy"],"updatePoint":{"line":6,"column":40,"index":152},"line":6,"code":"  it('indexes list by the given property', function () {\n    var list = [{\n      id: 'xyz',\n      title: 'A'\n    }, {\n      id: 'abc',\n      title: 'B'\n    }];\n    var indexed = R.indexBy(R.prop('id'), list);\n    eq(indexed, {\n      abc: {\n        id: 'abc',\n        title: 'B'\n      },\n      xyz: {\n        id: 'xyz',\n        title: 'A'\n      }\n    });\n  });","file":"indexBy.js","skipped":false,"dir":"test"},{"name":"indexes list by the given property upper case","suites":["indexBy"],"updatePoint":{"line":26,"column":51,"index":523},"line":26,"code":"  it('indexes list by the given property upper case', function () {\n    var list = [{\n      id: 'xyz',\n      title: 'A'\n    }, {\n      id: 'abc',\n      title: 'B'\n    }];\n    var indexed = R.indexBy(R.compose(R.toUpper, R.prop('id')), list);\n    eq(indexed, {\n      ABC: {\n        id: 'abc',\n        title: 'B'\n      },\n      XYZ: {\n        id: 'xyz',\n        title: 'A'\n      }\n    });\n  });","file":"indexBy.js","skipped":false,"dir":"test"},{"name":"can act as a transducer","suites":["indexBy"],"updatePoint":{"line":46,"column":29,"index":894},"line":46,"code":"  it('can act as a transducer', function () {\n    var list = [{\n      id: 'xyz',\n      title: 'A'\n    }, {\n      id: 'abc',\n      title: 'B'\n    }];\n    var transducer = R.compose(R.indexBy(R.prop('id')), R.map(R.pipe(R.adjust(0, R.toUpper), R.adjust(1, R.omit(['id'])))));\n    var expected = {\n      ABC: {\n        title: 'B'\n      },\n      XYZ: {\n        title: 'A'\n      }\n    };\n    eq(R.into({}, transducer, list), expected);\n    eq(R.transduce(transducer, (result, input) => {\n      result[input[0]] = input[1];\n      return result;\n    }, {}, list), expected);\n  });","file":"indexBy.js","skipped":false,"dir":"test"},{"name":"returns a number indicating an object's position in a list","suites":["indexOf"],"updatePoint":{"line":10,"column":64,"index":224},"line":10,"code":"  it(\"returns a number indicating an object's position in a list\", function () {\n    var list = [0, 10, 20, 30];\n    eq(R.indexOf(30, list), 3);\n  });","file":"indexOf.js","skipped":false,"dir":"test"},{"name":"returns -1 if the object is not in the list","suites":["indexOf"],"updatePoint":{"line":14,"column":49,"index":360},"line":14,"code":"  it('returns -1 if the object is not in the list', function () {\n    var list = [0, 10, 20, 30];\n    eq(R.indexOf(40, list), -1);\n  });","file":"indexOf.js","skipped":false,"dir":"test"},{"name":"returns the index of the first item","suites":["indexOf"],"updatePoint":{"line":19,"column":41,"index":520},"line":19,"code":"  it('returns the index of the first item', function () {\n    eq(R.indexOf(1, input), 0);\n  });","file":"indexOf.js","skipped":false,"dir":"test"},{"name":"returns the index of the last item","suites":["indexOf"],"updatePoint":{"line":22,"column":40,"index":615},"line":22,"code":"  it('returns the index of the last item', function () {\n    eq(R.indexOf(5, input), 4);\n  });","file":"indexOf.js","skipped":false,"dir":"test"},{"name":"finds 1","suites":["indexOf"],"updatePoint":{"line":28,"column":13,"index":812},"line":28,"code":"  it('finds 1', function () {\n    eq(R.indexOf(1, list), 0);\n  });","file":"indexOf.js","skipped":false,"dir":"test"},{"name":"finds 1 and is result strictly it","suites":["indexOf"],"updatePoint":{"line":31,"column":39,"index":905},"line":31,"code":"  it('finds 1 and is result strictly it', function () {\n    eq(R.indexOf(1, list), 0);\n  });","file":"indexOf.js","skipped":false,"dir":"test"},{"name":"does not find 4","suites":["indexOf"],"updatePoint":{"line":34,"column":21,"index":980},"line":34,"code":"  it('does not find 4', function () {\n    eq(R.indexOf(4, list), -1);\n  });","file":"indexOf.js","skipped":false,"dir":"test"},{"name":"does not consider \"1\" equal to 1","suites":["indexOf"],"updatePoint":{"line":37,"column":38,"index":1073},"line":37,"code":"  it('does not consider \"1\" equal to 1', function () {\n    eq(R.indexOf('1', list), -1);\n  });","file":"indexOf.js","skipped":false,"dir":"test"},{"name":"returns -1 for an empty array","suites":["indexOf"],"updatePoint":{"line":40,"column":35,"index":1165},"line":40,"code":"  it('returns -1 for an empty array', function () {\n    eq(R.indexOf('x', []), -1);\n  });","file":"indexOf.js","skipped":false,"dir":"test"},{"name":"has R.equals semantics","suites":["indexOf"],"updatePoint":{"line":43,"column":28,"index":1248},"line":43,"code":"  it('has R.equals semantics', function () {\n    eq(R.indexOf(0, [-0]), -1);\n    eq(R.indexOf(-0, [0]), -1);\n    eq(R.indexOf(NaN, [NaN]), 0);\n    eq(R.indexOf(new Just([42]), [new Just([42])]), 0);\n  });","file":"indexOf.js","skipped":false,"dir":"test"},{"name":"dispatches to `indexOf` method","suites":["indexOf"],"updatePoint":{"line":49,"column":36,"index":1461},"line":49,"code":"  it('dispatches to `indexOf` method', function () {\n    function Empty() {}\n\n    Empty.prototype.indexOf = R.always(-1);\n\n    function List(head, tail) {\n      this.head = head;\n      this.tail = tail;\n    }\n\n    List.prototype.indexOf = function (x) {\n      var idx = this.tail.indexOf(x);\n      return this.head === x ? 0 : idx >= 0 ? 1 + idx : -1;\n    };\n\n    var list = new List('b', new List('a', new List('n', new List('a', new List('n', new List('a', new Empty()))))));\n    eq(R.indexOf('a', 'banana'), 1);\n    eq(R.indexOf('x', 'banana'), -1);\n    eq(R.indexOf('a', list), 1);\n    eq(R.indexOf('x', list), -1);\n  });","file":"indexOf.js","skipped":false,"dir":"test"},{"name":"finds function, compared by identity","suites":["indexOf"],"updatePoint":{"line":70,"column":42,"index":2093},"line":70,"code":"  it('finds function, compared by identity', function () {\n    var f = function () {};\n\n    var g = function () {};\n\n    var list = [g, f, g, f];\n    eq(R.indexOf(f, list), 1);\n  });","file":"indexOf.js","skipped":false,"dir":"test"},{"name":"does not find function, compared by identity","suites":["indexOf"],"updatePoint":{"line":78,"column":50,"index":2284},"line":78,"code":"  it('does not find function, compared by identity', function () {\n    var f = function () {};\n\n    var g = function () {};\n\n    var h = function () {};\n\n    var list = [g, f];\n    eq(R.indexOf(h, list), -1);\n  });","file":"indexOf.js","skipped":false,"dir":"test"},{"name":"returns all but the last element of an ordered collection","suites":["init"],"updatePoint":{"line":8,"column":63,"index":205},"line":8,"code":"  it('returns all but the last element of an ordered collection', function () {\n    eq(R.init([1, 2, 3]), [1, 2]);\n    eq(R.init([2, 3]), [2]);\n    eq(R.init([3]), []);\n    eq(R.init([]), []);\n    eq(R.init('abc'), 'ab');\n    eq(R.init('bc'), 'b');\n    eq(R.init('c'), '');\n    eq(R.init(''), '');\n  });","file":"init.js","skipped":false,"dir":"test"},{"name":"throws if applied to null or undefined","suites":["init"],"updatePoint":{"line":18,"column":44,"index":490},"line":18,"code":"  it('throws if applied to null or undefined', function () {\n    assert.throws(function () {\n      R.init(null);\n    }, TypeError);\n    assert.throws(function () {\n      R.init(undefined);\n    }, TypeError);\n  });","file":"init.js","skipped":false,"dir":"test"},{"name":"handles array-like object","suites":["init"],"updatePoint":{"line":26,"column":31,"index":691},"line":26,"code":"  it('handles array-like object', function () {\n    var args = function () {\n      return arguments;\n    }(1, 2, 3, 4, 5);\n\n    eq(R.init(args), [1, 2, 3, 4]);\n  });","file":"init.js","skipped":false,"dir":"test"},{"name":"only returns elements from the first list","suites":["innerJoin"],"updatePoint":{"line":21,"column":47,"index":328},"line":21,"code":"  it('only returns elements from the first list', function () {\n    eq(f([a, b, c], []), []);\n    eq(f([a, b, c], [1]), [a]);\n    eq(f([a, b, c], [1, 2]), [a, b]);\n    eq(f([a, b, c], [1, 2, 3]), [a, b, c]);\n    eq(f([a, b, c], [1, 2, 3, 4]), [a, b, c]);\n  });","file":"innerJoin.js","skipped":false,"dir":"test"},{"name":"does not remove duplicates","suites":["innerJoin"],"updatePoint":{"line":28,"column":32,"index":574},"line":28,"code":"  it('does not remove duplicates', function () {\n    eq(f([a, a, a], [1, 2, 3]), [a, a, a]);\n    eq(f([a, b, c], [1, 1, 1]), [a]);\n  });","file":"innerJoin.js","skipped":false,"dir":"test"},{"name":"inserts an element into the given list","suites":["insert"],"updatePoint":{"line":6,"column":44,"index":155},"line":6,"code":"  it('inserts an element into the given list', function () {\n    var list = ['a', 'b', 'c', 'd', 'e'];\n    eq(R.insert(2, 'x', list), ['a', 'b', 'x', 'c', 'd', 'e']);\n  });","file":"insert.js","skipped":false,"dir":"test"},{"name":"inserts another list as an element","suites":["insert"],"updatePoint":{"line":10,"column":40,"index":324},"line":10,"code":"  it('inserts another list as an element', function () {\n    var list = ['a', 'b', 'c', 'd', 'e'];\n    eq(R.insert(2, ['s', 't'], list), ['a', 'b', ['s', 't'], 'c', 'd', 'e']);\n  });","file":"insert.js","skipped":false,"dir":"test"},{"name":"appends to the end of the list if the index is too large","suites":["insert"],"updatePoint":{"line":14,"column":62,"index":529},"line":14,"code":"  it('appends to the end of the list if the index is too large', function () {\n    var list = ['a', 'b', 'c', 'd', 'e'];\n    eq(R.insert(8, 'z', list), ['a', 'b', 'c', 'd', 'e', 'z']);\n  });","file":"insert.js","skipped":false,"dir":"test"},{"name":"inserts a list of elements into the given list","suites":["insertAll"],"updatePoint":{"line":6,"column":52,"index":166},"line":6,"code":"  it('inserts a list of elements into the given list', function () {\n    var list = ['a', 'b', 'c', 'd', 'e'];\n    eq(R.insertAll(2, ['x', 'y', 'z'], list), ['a', 'b', 'x', 'y', 'z', 'c', 'd', 'e']);\n  });","file":"insertAll.js","skipped":false,"dir":"test"},{"name":"appends to the end of the list if the index is too large","suites":["insertAll"],"updatePoint":{"line":10,"column":62,"index":382},"line":10,"code":"  it('appends to the end of the list if the index is too large', function () {\n    var list = ['a', 'b', 'c', 'd', 'e'];\n    eq(R.insertAll(8, ['p', 'q', 'r'], list), ['a', 'b', 'c', 'd', 'e', 'p', 'q', 'r']);\n  });","file":"insertAll.js","skipped":false,"dir":"test"},{"name":"supports R.__ placeholder","suites":["_curry2"],"updatePoint":{"line":8,"column":31,"index":204},"line":8,"code":"  it('supports R.__ placeholder', function () {\n    var f = function (a, b) {\n      return [a, b];\n    };\n\n    var g = _curry2(f);\n\n    eq(g(1)(2), [1, 2]);\n    eq(g(1, 2), [1, 2]);\n    eq(g(_, 2)(1), [1, 2]);\n    eq(g(1, _)(2), [1, 2]);\n    eq(g(_, _)(1)(2), [1, 2]);\n    eq(g(_, _)(1, 2), [1, 2]);\n    eq(g(_, _)(_)(1, 2), [1, 2]);\n    eq(g(_, _)(_, 2)(1), [1, 2]);\n  });","file":"internal/_curry2.js","skipped":false,"dir":"test"},{"name":"supports R.__ placeholder","suites":["_curry3"],"updatePoint":{"line":8,"column":31,"index":204},"line":8,"code":"  it('supports R.__ placeholder', function () {\n    var f = function (a, b, c) {\n      return [a, b, c];\n    };\n\n    var g = _curry3(f);\n\n    eq(g(1)(2)(3), [1, 2, 3]);\n    eq(g(1)(2, 3), [1, 2, 3]);\n    eq(g(1, 2)(3), [1, 2, 3]);\n    eq(g(1, 2, 3), [1, 2, 3]);\n    eq(g(_, 2, 3)(1), [1, 2, 3]);\n    eq(g(1, _, 3)(2), [1, 2, 3]);\n    eq(g(1, 2, _)(3), [1, 2, 3]);\n    eq(g(1, _, _)(2)(3), [1, 2, 3]);\n    eq(g(_, 2, _)(1)(3), [1, 2, 3]);\n    eq(g(_, _, 3)(1)(2), [1, 2, 3]);\n    eq(g(1, _, _)(2, 3), [1, 2, 3]);\n    eq(g(_, 2, _)(1, 3), [1, 2, 3]);\n    eq(g(_, _, 3)(1, 2), [1, 2, 3]);\n    eq(g(1, _, _)(_, 3)(2), [1, 2, 3]);\n    eq(g(_, 2, _)(_, 3)(1), [1, 2, 3]);\n    eq(g(_, _, 3)(_, 2)(1), [1, 2, 3]);\n    eq(g(_, _, _)(_, _)(_)(1, 2, 3), [1, 2, 3]);\n    eq(g(_, _, _)(1, _, _)(_, _)(2, _)(_)(3), [1, 2, 3]);\n  });","file":"internal/_curry3.js","skipped":false,"dir":"test"},{"name":"is true for Arrays","suites":["isArrayLike"],"updatePoint":{"line":6,"column":24,"index":171},"line":6,"code":"  it('is true for Arrays', function () {\n    eq(_isArrayLike([]), true);\n    eq(_isArrayLike([1, 2, 3, 4]), true);\n    eq(_isArrayLike([null]), true);\n  });","file":"internal/_isArrayLike.js","skipped":false,"dir":"test"},{"name":"is true for arguments","suites":["isArrayLike"],"updatePoint":{"line":11,"column":27,"index":331},"line":11,"code":"  it('is true for arguments', function () {\n    function test() {\n      return _isArrayLike(arguments);\n    }\n\n    eq(test(), true);\n    eq(test(1, 2, 3), true);\n    eq(test(null), true);\n  });","file":"internal/_isArrayLike.js","skipped":false,"dir":"test"},{"name":"is false for Strings","suites":["isArrayLike"],"updatePoint":{"line":20,"column":26,"index":524},"line":20,"code":"  it('is false for Strings', function () {\n    eq(_isArrayLike(''), false);\n    eq(_isArrayLike('abcdefg'), false);\n  });","file":"internal/_isArrayLike.js","skipped":false,"dir":"test"},{"name":"is true for arbitrary objects with numeric length, if extreme indices are defined","suites":["isArrayLike"],"updatePoint":{"line":24,"column":87,"index":707},"line":24,"code":"  it('is true for arbitrary objects with numeric length, if extreme indices are defined', function () {\n    var obj1 = {\n      length: 0\n    };\n    var obj2 = {\n      0: 'something',\n      length: 0\n    };\n    var obj3 = {\n      0: void 0,\n      length: 0\n    };\n    var obj4 = {\n      0: 'zero',\n      1: 'one',\n      length: 2\n    };\n    var obj5 = {\n      0: 'zero',\n      length: 2\n    };\n    var obj6 = {\n      1: 'one',\n      length: 2\n    };\n    eq(_isArrayLike(obj1), true);\n    eq(_isArrayLike(obj2), true);\n    eq(_isArrayLike(obj3), true);\n    eq(_isArrayLike(obj4), true);\n    eq(_isArrayLike(obj5), false);\n    eq(_isArrayLike(obj6), false);\n  });","file":"internal/_isArrayLike.js","skipped":false,"dir":"test"},{"name":"is false for everything else","suites":["isArrayLike"],"updatePoint":{"line":56,"column":34,"index":1315},"line":56,"code":"  it('is false for everything else', function () {\n    eq(_isArrayLike(undefined), false);\n    eq(_isArrayLike(1), false);\n    eq(_isArrayLike({}), false);\n    eq(_isArrayLike(false), false);\n    eq(_isArrayLike(function () {}), false);\n  });","file":"internal/_isArrayLike.js","skipped":false,"dir":"test"},{"name":"combines two lists into the set of common elements","suites":["intersection"],"updatePoint":{"line":14,"column":56,"index":343},"line":14,"code":"  it('combines two lists into the set of common elements', function () {\n    eq(R.intersection(M, N), [3, 4]);\n  });","file":"intersection.js","skipped":false,"dir":"test"},{"name":"does not allow duplicates in the output even if the input lists had duplicates","suites":["intersection"],"updatePoint":{"line":17,"column":84,"index":488},"line":17,"code":"  it('does not allow duplicates in the output even if the input lists had duplicates', function () {\n    eq(R.intersection(M2, N2), [3, 4]);\n  });","file":"intersection.js","skipped":false,"dir":"test"},{"name":"does not allow duplicates in the output even if the first list is bigger and has duplicates","suites":["intersection"],"updatePoint":{"line":20,"column":97,"index":648},"line":20,"code":"  it('does not allow duplicates in the output even if the first list is bigger and has duplicates', function () {\n    eq(R.intersection(M2, N), [3, 4]);\n  });","file":"intersection.js","skipped":false,"dir":"test"},{"name":"does not allow duplicates in the output even if the second list is bigger and has duplicates","suites":["intersection"],"updatePoint":{"line":23,"column":98,"index":808},"line":23,"code":"  it('does not allow duplicates in the output even if the second list is bigger and has duplicates', function () {\n    eq(R.intersection(M, N2), [3, 4]);\n  });","file":"intersection.js","skipped":false,"dir":"test"},{"name":"has R.equals semantics","suites":["intersection"],"updatePoint":{"line":26,"column":28,"index":898},"line":26,"code":"  it('has R.equals semantics', function () {\n    eq(R.intersection([0], [-0]).length, 0);\n    eq(R.intersection([-0], [0]).length, 0);\n    eq(R.intersection([NaN], [NaN]).length, 1);\n    eq(R.intersection([new Just([42])], [new Just([42])]).length, 1);\n  });","file":"intersection.js","skipped":false,"dir":"test"},{"name":"interposes a separator between list items","suites":["intersperse"],"updatePoint":{"line":6,"column":47,"index":163},"line":6,"code":"  it('interposes a separator between list items', function () {\n    eq(R.intersperse('n', ['ba', 'a', 'a']), ['ba', 'n', 'a', 'n', 'a']);\n    eq(R.intersperse('bar', ['foo']), ['foo']);\n    eq(R.intersperse('bar', []), []);\n  });","file":"intersperse.js","skipped":false,"dir":"test"},{"name":"dispatches","suites":["intersperse"],"updatePoint":{"line":11,"column":16,"index":362},"line":11,"code":"  it('dispatches', function () {\n    var obj = {\n      intersperse: function (x) {\n        return 'override ' + x;\n      }\n    };\n    eq(R.intersperse('x', obj), 'override x');\n  });","file":"intersperse.js","skipped":false,"dir":"test"},{"name":"transduces into arrays","suites":["into"],"updatePoint":{"line":17,"column":28,"index":343},"line":17,"code":"  it('transduces into arrays', function () {\n    eq(R.into([], R.map(add(1)), [1, 2, 3, 4]), [2, 3, 4, 5]);\n    eq(R.into([], R.filter(isOdd), [1, 2, 3, 4]), [1, 3]);\n    eq(R.into([], R.compose(R.map(add(1)), R.take(2)), [1, 2, 3, 4]), [2, 3]);\n  });","file":"into.js","skipped":false,"dir":"test"},{"name":"transduces into strings","suites":["into"],"updatePoint":{"line":22,"column":29,"index":596},"line":22,"code":"  it('transduces into strings', function () {\n    eq(R.into('', R.map(add(1)), [1, 2, 3, 4]), '2345');\n    eq(R.into('', R.filter(isOdd), [1, 2, 3, 4]), '13');\n    eq(R.into('', R.compose(R.map(add(1)), R.take(2)), [1, 2, 3, 4]), '23');\n  });","file":"into.js","skipped":false,"dir":"test"},{"name":"transduces into objects","suites":["into"],"updatePoint":{"line":27,"column":29,"index":839},"line":27,"code":"  it('transduces into objects', function () {\n    eq(R.into({}, R.identity, [['a', 1], ['b', 2]]), {\n      a: 1,\n      b: 2\n    });\n    eq(R.into({}, R.identity, [{\n      a: 1\n    }, {\n      b: 2,\n      c: 3\n    }]), {\n      a: 1,\n      b: 2,\n      c: 3\n    });\n  });","file":"into.js","skipped":false,"dir":"test"},{"name":"dispatches to objects that implement `reduce`","suites":["into"],"updatePoint":{"line":43,"column":51,"index":1129},"line":43,"code":"  it('dispatches to objects that implement `reduce`', function () {\n    var obj = {\n      x: [1, 2, 3],\n      reduce: function () {\n        return 'override';\n      }\n    };\n    eq(R.into([], R.map(add(1)), obj), 'override');\n    eq(R.into([], R.filter(isOdd), obj), 'override');\n  });","file":"into.js","skipped":false,"dir":"test"},{"name":"allows custom transformer","suites":["into"],"updatePoint":{"line":53,"column":31,"index":1395},"line":53,"code":"  it('allows custom transformer', function () {\n    var intoSum = R.into(addXf);\n    var add2 = R.map(add(2));\n    var result = intoSum(add2);\n    eq(result([1, 2, 3, 4]), 18);\n  });","file":"into.js","skipped":false,"dir":"test"},{"name":"-- applying function f with length n (where n > 0) to no arguments gives function with length n","suites":["invariants"],"updatePoint":{"line":6,"column":101,"index":216},"line":6,"code":"  it('-- applying function f with length n (where n > 0) to no arguments gives function with length n', function () {\n    for (var prop in R) {\n      if (typeof R[prop] === 'function' && R[prop].length > 0) {\n        var result = R[prop]();\n        eq(typeof result, 'function');\n        eq(result.length, R[prop].length);\n      }\n    }\n  });","file":"invariants.js","skipped":false,"dir":"test"},{"name":"-- applying function f with length n (where n > 0) to R.__ gives function with length n","suites":["invariants"],"updatePoint":{"line":15,"column":93,"index":551},"line":15,"code":"  it('-- applying function f with length n (where n > 0) to R.__ gives function with length n', function () {\n    var unsupportedFunctionNames = ['identical'];\n\n    for (var prop in R) {\n      if (typeof R[prop] === 'function' && R[prop].length > 0 && unsupportedFunctionNames.indexOf(prop) === -1) {\n        var result = R[prop](R.__);\n        eq(typeof result, 'function');\n        eq(result.length, R[prop].length);\n      }\n    }\n  });","file":"invariants.js","skipped":false,"dir":"test"},{"name":"-- applying function f with length n (where n > 1) to any value other than R.__ gives function with length n - 1","suites":["invariants"],"updatePoint":{"line":26,"column":118,"index":1015},"line":26,"code":"  it('-- applying function f with length n (where n > 1) to any value other than R.__ gives function with length n - 1', function () {\n    var testPartialApplication = function (fn, name) {\n      if (fn.length > 1) {\n        var result = fn(null);\n        eq(typeof result, 'function');\n        eq(result.length, fn.length - 1);\n        testPartialApplication(result, name + \"'\");\n      }\n    };\n\n    for (var prop in R) {\n      if (typeof R[prop] === 'function') {\n        testPartialApplication(R[prop], prop);\n      }\n    }\n  });","file":"invariants.js","skipped":false,"dir":"test"},{"name":"takes a list or object and returns an object of lists","suites":["invert"],"updatePoint":{"line":6,"column":59,"index":170},"line":6,"code":"  it('takes a list or object and returns an object of lists', function () {\n    eq(typeof R.invert([]), 'object');\n    eq(typeof R.invert({}), 'object');\n    var inverted = R.invert([0]);\n    var keys = R.keys(inverted);\n    eq(R.is(Array, inverted[keys.pop()]), true);\n  });","file":"invert.js","skipped":false,"dir":"test"},{"name":"returns an empty object when applied to a primitive","suites":["invert"],"updatePoint":{"line":13,"column":57,"index":444},"line":13,"code":"  it('returns an empty object when applied to a primitive', function () {\n    eq(R.invert(42), {});\n    eq(R.invert('abc'), {});\n  });","file":"invert.js","skipped":false,"dir":"test"},{"name":"returns an empty object when applied to null/undefined","suites":["invert"],"updatePoint":{"line":17,"column":60,"index":582},"line":17,"code":"  it('returns an empty object when applied to null/undefined', function () {\n    eq(R.invert(null), {});\n    eq(R.invert(undefined), {});\n  });","file":"invert.js","skipped":false,"dir":"test"},{"name":"returns the input's values as keys, and keys as values of an array","suites":["invert"],"updatePoint":{"line":21,"column":73,"index":739},"line":21,"code":"  it('returns the input\\'s values as keys, and keys as values of an array', function () {\n    eq(R.invert(['a', 'b', 'c']), {\n      a: ['0'],\n      b: ['1'],\n      c: ['2']\n    });\n    eq(R.invert({\n      x: 'a',\n      y: 'b',\n      z: 'c'\n    }), {\n      a: ['x'],\n      b: ['y'],\n      c: ['z']\n    });\n  });","file":"invert.js","skipped":false,"dir":"test"},{"name":"puts keys that have the same value into the appropriate an array","suites":["invert"],"updatePoint":{"line":37,"column":70,"index":1047},"line":37,"code":"  it('puts keys that have the same value into the appropriate an array', function () {\n    eq(R.invert(['a', 'b', 'a']), {\n      a: ['0', '2'],\n      b: ['1']\n    });\n    var inverted = R.invert({\n      x: 'a',\n      y: 'b',\n      z: 'a',\n      _id: 'a'\n    });\n    eq(R.indexOf('x', inverted.a) >= 0, true);\n    eq(R.indexOf('z', inverted.a) >= 0, true);\n    eq(R.indexOf('_id', inverted.a) >= 0, true);\n    eq(inverted.b, ['y']);\n  }); // this one is more of a sanity check","file":"invert.js","skipped":false,"dir":"test"},{"name":"is not destructive","suites":["invert"],"updatePoint":{"line":54,"column":24,"index":1478},"line":54,"code":"  it('is not destructive', function () {\n    var input = {\n      x: 'a',\n      y: 'b',\n      z: 'a',\n      _id: 'a'\n    };\n    R.invert(input);\n    eq(input, {\n      x: 'a',\n      y: 'b',\n      z: 'a',\n      _id: 'a'\n    });\n  });","file":"invert.js","skipped":false,"dir":"test"},{"name":"ignores inherited properties","suites":["invert"],"updatePoint":{"line":69,"column":34,"index":1719},"line":69,"code":"  it('ignores inherited properties', function () {\n    eq(R.invert({\n      x: 'hasOwnProperty'\n    }), {\n      hasOwnProperty: ['x']\n    });\n  });","file":"invert.js","skipped":false,"dir":"test"},{"name":"takes a list or object and returns an object","suites":["invertObj"],"updatePoint":{"line":6,"column":50,"index":164},"line":6,"code":"  it('takes a list or object and returns an object', function () {\n    eq(typeof R.invertObj([]), 'object');\n    eq(typeof R.invertObj({}), 'object');\n  });","file":"invertObj.js","skipped":false,"dir":"test"},{"name":"returns an empty object when applied to a primitive","suites":["invertObj"],"updatePoint":{"line":10,"column":57,"index":328},"line":10,"code":"  it('returns an empty object when applied to a primitive', function () {\n    eq(R.invertObj(42), {});\n    eq(R.invertObj('abc'), {});\n  });","file":"invertObj.js","skipped":false,"dir":"test"},{"name":"returns an empty object when applied to null/undefined","suites":["invertObj"],"updatePoint":{"line":14,"column":60,"index":472},"line":14,"code":"  it('returns an empty object when applied to null/undefined', function () {\n    eq(R.invertObj(null), {});\n    eq(R.invertObj(undefined), {});\n  });","file":"invertObj.js","skipped":false,"dir":"test"},{"name":"returns the input's values as keys, and keys as values","suites":["invertObj"],"updatePoint":{"line":18,"column":61,"index":623},"line":18,"code":"  it('returns the input\\'s values as keys, and keys as values', function () {\n    eq(R.invertObj(['a', 'b', 'c']), {\n      a: '0',\n      b: '1',\n      c: '2'\n    });\n    eq(R.invertObj({\n      x: 'a',\n      y: 'b',\n      z: 'c'\n    }), {\n      a: 'x',\n      b: 'y',\n      c: 'z'\n    });\n  });","file":"invertObj.js","skipped":false,"dir":"test"},{"name":"prefers the last key found when handling keys with the same value","suites":["invertObj"],"updatePoint":{"line":34,"column":71,"index":926},"line":34,"code":"  it('prefers the last key found when handling keys with the same value', function () {\n    eq(R.invertObj(['a', 'b', 'a']), {\n      a: '2',\n      b: '1'\n    });\n    eq(R.invertObj({\n      x: 'a',\n      y: 'b',\n      z: 'a',\n      _id: 'a'\n    }), {\n      a: '_id',\n      b: 'y'\n    });\n  }); // this one is more of a sanity check","file":"invertObj.js","skipped":false,"dir":"test"},{"name":"is not destructive","suites":["invertObj"],"updatePoint":{"line":50,"column":24,"index":1211},"line":50,"code":"  it('is not destructive', function () {\n    var input = {\n      x: 'a',\n      y: 'b',\n      z: 'a',\n      _id: 'a'\n    };\n    R.invertObj(input);\n    eq(input, {\n      x: 'a',\n      y: 'b',\n      z: 'a',\n      _id: 'a'\n    });\n  });","file":"invertObj.js","skipped":false,"dir":"test"},{"name":"returns a function with correct arity","suites":["invoker"],"updatePoint":{"line":11,"column":43,"index":253},"line":11,"code":"  it('returns a function with correct arity', function () {\n    eq(concat2.length, 3);\n  });","file":"invoker.js","skipped":false,"dir":"test"},{"name":"calls the method on the object","suites":["invoker"],"updatePoint":{"line":14,"column":36,"index":339},"line":14,"code":"  it('calls the method on the object', function () {\n    eq(concat2(3, 4, [1, 2]), [1, 2, 3, 4]);\n  });","file":"invoker.js","skipped":false,"dir":"test"},{"name":"throws a descriptive TypeError if method does not exist","suites":["invoker"],"updatePoint":{"line":17,"column":61,"index":468},"line":17,"code":"  it('throws a descriptive TypeError if method does not exist', function () {\n    assert.throws(function () {\n      R.invoker(0, 'foo')(null);\n    }, function (err) {\n      return err.constructor === TypeError && err.message === 'null does not have a method named \"foo\"';\n    });\n    assert.throws(function () {\n      R.invoker(0, 'foo')([1, 2, 3]);\n    }, function (err) {\n      return err.constructor === TypeError && err.message === '[1, 2, 3] does not have a method named \"foo\"';\n    });\n    assert.throws(function () {\n      R.invoker(0, 'length')([1, 2, 3]);\n    }, function (err) {\n      return err.constructor === TypeError && err.message === '[1, 2, 3] does not have a method named \"length\"';\n    });\n  });","file":"invoker.js","skipped":false,"dir":"test"},{"name":"does not rely on constructor identity","suites":["invoker"],"updatePoint":{"line":34,"column":43,"index":1166},"line":34,"code":"  it('does not rely on constructor identity', function () {\n    eq(concat2([2], [3], vm.runInNewContext('[1]')), [1, 2, 3]);\n  });","file":"invoker.js","skipped":false,"dir":"test"},{"name":"curries the method call","suites":["invoker"],"updatePoint":{"line":37,"column":29,"index":1283},"line":37,"code":"  it('curries the method call', function () {\n    eq(concat2(3)(4)([1, 2]), [1, 2, 3, 4]);\n    eq(concat2(3, 4)([1, 2]), [1, 2, 3, 4]);\n    eq(concat2(3)(4, [1, 2]), [1, 2, 3, 4]);\n  });","file":"invoker.js","skipped":false,"dir":"test"},{"name":"works with built-in types","suites":["is"],"updatePoint":{"line":6,"column":31,"index":138},"line":6,"code":"  it('works with built-in types', function () {\n    eq(R.is(Array, []), true);\n    eq(R.is(Boolean, new Boolean(false)), true);\n    eq(R.is(Date, new Date()), true);\n    eq(R.is(Function, function () {}), true);\n    eq(R.is(Number, new Number(0)), true);\n    eq(R.is(Object, {}), true);\n    eq(R.is(RegExp, /(?:)/), true);\n    eq(R.is(String, new String('')), true);\n  });","file":"is.js","skipped":false,"dir":"test"},{"name":"works with user-defined types","suites":["is"],"updatePoint":{"line":16,"column":35,"index":515},"line":16,"code":"  it('works with user-defined types', function () {\n    function Foo() {}\n\n    function Bar() {}\n\n    Bar.prototype = new Foo();\n    var foo = new Foo();\n    var bar = new Bar();\n    eq(R.is(Foo, foo), true);\n    eq(R.is(Bar, bar), true);\n    eq(R.is(Foo, bar), true);\n    eq(R.is(Bar, foo), false);\n  });","file":"is.js","skipped":false,"dir":"test"},{"name":"considers almost everything an object","suites":["is"],"updatePoint":{"line":29,"column":43,"index":829},"line":29,"code":"  it('considers almost everything an object', function () {\n    function Foo() {}\n\n    var foo = new Foo();\n    var isObject = R.is(Object);\n    eq(isObject(foo), true);\n    eq(isObject(function () {\n      return arguments;\n    }()), true);\n    eq(isObject([]), true);\n    eq(isObject(new Boolean(false)), true);\n    eq(isObject(new Date()), true);\n    eq(isObject(function () {}), true);\n    eq(isObject(new Number(0)), true);\n    eq(isObject(/(?:)/), true);\n    eq(isObject(new String('')), true);\n    eq(isObject(Object.create(null)), true);\n    eq(isObject(null), false);\n    eq(isObject(undefined), false);\n  });","file":"is.js","skipped":false,"dir":"test"},{"name":"does not coerce","suites":["is"],"updatePoint":{"line":49,"column":21,"index":1425},"line":49,"code":"  it('does not coerce', function () {\n    eq(R.is(Boolean, 1), false);\n    eq(R.is(Number, '1'), false);\n    eq(R.is(Number, false), false);\n  });","file":"is.js","skipped":false,"dir":"test"},{"name":"recognizes primitives as their object equivalents","suites":["is"],"updatePoint":{"line":54,"column":55,"index":1606},"line":54,"code":"  it('recognizes primitives as their object equivalents', function () {\n    eq(R.is(Boolean, false), true);\n    eq(R.is(Number, 0), true);\n    eq(R.is(String, ''), true);\n  });","file":"is.js","skipped":false,"dir":"test"},{"name":"does not consider primitives to be instances of Object","suites":["is"],"updatePoint":{"line":59,"column":60,"index":1788},"line":59,"code":"  it('does not consider primitives to be instances of Object', function () {\n    eq(R.is(Object, false), false);\n    eq(R.is(Object, 0), false);\n    eq(R.is(Object, ''), false);\n  });","file":"is.js","skipped":false,"dir":"test"},{"name":"returns false for null","suites":["isEmpty"],"updatePoint":{"line":6,"column":28,"index":140},"line":6,"code":"  it('returns false for null', function () {\n    eq(R.isEmpty(null), false);\n  });","file":"isEmpty.js","skipped":false,"dir":"test"},{"name":"returns false for undefined","suites":["isEmpty"],"updatePoint":{"line":9,"column":33,"index":228},"line":9,"code":"  it('returns false for undefined', function () {\n    eq(R.isEmpty(undefined), false);\n  });","file":"isEmpty.js","skipped":false,"dir":"test"},{"name":"returns true for empty string","suites":["isEmpty"],"updatePoint":{"line":12,"column":35,"index":323},"line":12,"code":"  it('returns true for empty string', function () {\n    eq(R.isEmpty(''), true);\n    eq(R.isEmpty(' '), false);\n  });","file":"isEmpty.js","skipped":false,"dir":"test"},{"name":"returns true for empty array","suites":["isEmpty"],"updatePoint":{"line":16,"column":34,"index":440},"line":16,"code":"  it('returns true for empty array', function () {\n    eq(R.isEmpty([]), true);\n    eq(R.isEmpty([[]]), false);\n  });","file":"isEmpty.js","skipped":false,"dir":"test"},{"name":"returns true for empty typed array","suites":["isEmpty"],"updatePoint":{"line":20,"column":40,"index":564},"line":20,"code":"  it('returns true for empty typed array', function () {\n    eq(R.isEmpty(Uint8Array.from('')), true);\n    eq(R.isEmpty(Float32Array.from('')), true);\n    eq(R.isEmpty(new Float32Array([])), true);\n    eq(R.isEmpty(Uint8Array.from('1')), false);\n    eq(R.isEmpty(Float32Array.from('1')), false);\n    eq(R.isEmpty(new Float32Array([1])), false);\n  });","file":"isEmpty.js","skipped":false,"dir":"test"},{"name":"returns true for empty object","suites":["isEmpty"],"updatePoint":{"line":28,"column":35,"index":910},"line":28,"code":"  it('returns true for empty object', function () {\n    eq(R.isEmpty({}), true);\n    eq(R.isEmpty({\n      x: 0\n    }), false);\n  });","file":"isEmpty.js","skipped":false,"dir":"test"},{"name":"returns true for empty arguments object","suites":["isEmpty"],"updatePoint":{"line":34,"column":45,"index":1053},"line":34,"code":"  it('returns true for empty arguments object', function () {\n    eq(R.isEmpty(function () {\n      return arguments;\n    }()), true);\n    eq(R.isEmpty(function () {\n      return arguments;\n    }(0)), false);\n  });","file":"isEmpty.js","skipped":false,"dir":"test"},{"name":"returns false for every other value","suites":["isEmpty"],"updatePoint":{"line":42,"column":41,"index":1263},"line":42,"code":"  it('returns false for every other value', function () {\n    eq(R.isEmpty(0), false);\n    eq(R.isEmpty(NaN), false);\n    eq(R.isEmpty(['']), false);\n  });","file":"isEmpty.js","skipped":false,"dir":"test"},{"name":"tests a value for `null` or `undefined`","suites":["isNil"],"updatePoint":{"line":6,"column":45,"index":155},"line":6,"code":"  it('tests a value for `null` or `undefined`', function () {\n    eq(R.isNil(void 0), true);\n    eq(R.isNil(null), true);\n    eq(R.isNil([]), false);\n    eq(R.isNil({}), false);\n    eq(R.isNil(0), false);\n    eq(R.isNil(''), false);\n  });","file":"isNil.js","skipped":false,"dir":"test"},{"name":"tests a value for `null` or `undefined`","suites":["isNotNil"],"updatePoint":{"line":6,"column":45,"index":158},"line":6,"code":"  it('tests a value for `null` or `undefined`', function () {\n    eq(R.isNotNil(void 0), false);\n    eq(R.isNotNil(undefined), false);\n    eq(R.isNotNil(null), false);\n    eq(R.isNotNil([]), true);\n    eq(R.isNotNil({}), true);\n    eq(R.isNotNil(0), true);\n    eq(R.isNotNil(''), true);\n  });","file":"isNotNil.js","skipped":false,"dir":"test"},{"name":"concatenates a list's elements to a string, with an separator string between elements","suites":["join"],"updatePoint":{"line":6,"column":91,"index":200},"line":6,"code":"  it(\"concatenates a list's elements to a string, with an separator string between elements\", function () {\n    var list = [1, 2, 3, 4];\n    eq(R.join('~', list), '1~2~3~4');\n  });","file":"join.js","skipped":false,"dir":"test"},{"name":"works with no functions and no values","suites":["juxt"],"updatePoint":{"line":14,"column":43,"index":240},"line":14,"code":"  it('works with no functions and no values', function () {\n    eq(R.juxt([])(), []);\n  });","file":"juxt.js","skipped":false,"dir":"test"},{"name":"works with no functions and some values","suites":["juxt"],"updatePoint":{"line":17,"column":45,"index":334},"line":17,"code":"  it('works with no functions and some values', function () {\n    eq(R.juxt([])(2, 3), []);\n  });","file":"juxt.js","skipped":false,"dir":"test"},{"name":"works with 1 function and no values","suites":["juxt"],"updatePoint":{"line":20,"column":41,"index":428},"line":20,"code":"  it('works with 1 function and no values', function () {\n    eq(R.juxt([hello])(), ['hello']);\n  });","file":"juxt.js","skipped":false,"dir":"test"},{"name":"works with 1 function and 1 value","suites":["juxt"],"updatePoint":{"line":23,"column":39,"index":528},"line":23,"code":"  it('works with 1 function and 1 value', function () {\n    eq(R.juxt([R.add(3)])(2), [5]);\n  });","file":"juxt.js","skipped":false,"dir":"test"},{"name":"works with 1 function and some values","suites":["juxt"],"updatePoint":{"line":26,"column":43,"index":630},"line":26,"code":"  it('works with 1 function and some values', function () {\n    eq(R.juxt([R.multiply])(2, 3), [6]);\n  });","file":"juxt.js","skipped":false,"dir":"test"},{"name":"works with some functions and no values","suites":["juxt"],"updatePoint":{"line":29,"column":45,"index":739},"line":29,"code":"  it('works with some functions and no values', function () {\n    eq(R.juxt([hello, bye])(), ['hello', 'bye']);\n  });","file":"juxt.js","skipped":false,"dir":"test"},{"name":"works with some functions and 1 value","suites":["juxt"],"updatePoint":{"line":32,"column":43,"index":855},"line":32,"code":"  it('works with some functions and 1 value', function () {\n    eq(R.juxt([R.multiply(2), R.add(3)])(2), [4, 5]);\n  });","file":"juxt.js","skipped":false,"dir":"test"},{"name":"works with some functions and some values","suites":["juxt"],"updatePoint":{"line":35,"column":47,"index":979},"line":35,"code":"  it('works with some functions and some values', function () {\n    eq(R.juxt([R.add, R.multiply])(2, 3), [5, 6]);\n  });","file":"juxt.js","skipped":false,"dir":"test"},{"name":"retains the highest arity","suites":["juxt"],"updatePoint":{"line":38,"column":31,"index":1084},"line":38,"code":"  it('retains the highest arity', function () {\n    var f = R.juxt([R.nAry(1, R.T), R.nAry(3, R.T), R.nAry(2, R.T)]);\n    eq(f.length, 3);\n  });","file":"juxt.js","skipped":false,"dir":"test"},{"name":"returns a curried function","suites":["juxt"],"updatePoint":{"line":42,"column":32,"index":1230},"line":42,"code":"  it('returns a curried function', function () {\n    eq(R.juxt([R.multiply, R.add])(2)(3), [6, 5]);\n  });","file":"juxt.js","skipped":false,"dir":"test"},{"name":"returns an array of the given object's own keys","suites":["keys"],"updatePoint":{"line":29,"column":53,"index":454},"line":29,"code":"  it(\"returns an array of the given object's own keys\", function () {\n    eq(R.keys(obj).sort(), ['a', 'b', 'c', 'd', 'e', 'f']);\n  });","file":"keys.js","skipped":false,"dir":"test"},{"name":"works with hasOwnProperty override","suites":["keys"],"updatePoint":{"line":32,"column":40,"index":577},"line":32,"code":"  it('works with hasOwnProperty override', function () {\n    eq(R.keys({\n      hasOwnProperty: false\n    }), ['hasOwnProperty']);\n  });","file":"keys.js","skipped":false,"dir":"test"},{"name":"works for primitives","suites":["keys"],"updatePoint":{"line":37,"column":26,"index":699},"line":37,"code":"  it('works for primitives', function () {\n    eq(R.keys(null), []);\n    eq(R.keys(undefined), []);\n    eq(R.keys(55), []);\n    eq(R.keys('foo'), []);\n    eq(R.keys(true), []);\n    eq(R.keys(false), []);\n    eq(R.keys(NaN), []);\n    eq(R.keys(Infinity), []);\n    eq(R.keys([]), []);\n  });","file":"keys.js","skipped":false,"dir":"test"},{"name":"does not include the given object's prototype properties","suites":["keys"],"updatePoint":{"line":48,"column":62,"index":1024},"line":48,"code":"  it(\"does not include the given object's prototype properties\", function () {\n    eq(R.keys(cobj).sort(), ['a', 'b']);\n  });","file":"keys.js","skipped":false,"dir":"test"},{"name":"returns an array of the given object's keys","suites":["keysIn"],"updatePoint":{"line":29,"column":49,"index":452},"line":29,"code":"  it(\"returns an array of the given object's keys\", function () {\n    eq(R.keysIn(obj).sort(), ['a', 'b', 'c', 'd', 'e', 'f']);\n  });","file":"keysIn.js","skipped":false,"dir":"test"},{"name":"includes the given object's prototype properties","suites":["keysIn"],"updatePoint":{"line":32,"column":54,"index":591},"line":32,"code":"  it(\"includes the given object's prototype properties\", function () {\n    eq(R.keysIn(cobj).sort(), ['a', 'b', 'x', 'y']);\n  });","file":"keysIn.js","skipped":false,"dir":"test"},{"name":"works for primitives","suites":["keysIn"],"updatePoint":{"line":35,"column":26,"index":693},"line":35,"code":"  it('works for primitives', function () {\n    var result = R.map(function (val) {\n      return R.keys(val);\n    }, [null, undefined, 55, '', true, false, NaN, Infinity,, []]);\n    eq(result, R.repeat([], 10));\n  });","file":"keysIn.js","skipped":false,"dir":"test"},{"name":"returns the last element of an ordered collection","suites":["last"],"updatePoint":{"line":8,"column":55,"index":197},"line":8,"code":"  it('returns the last element of an ordered collection', function () {\n    eq(R.last([1, 2, 3]), 3);\n    eq(R.last([1, 2]), 2);\n    eq(R.last([1]), 1);\n    eq(R.last([]), undefined);\n    eq(R.last('abc'), 'c');\n    eq(R.last('ab'), 'b');\n    eq(R.last('a'), 'a');\n    eq(R.last(''), '');\n  });","file":"last.js","skipped":false,"dir":"test"},{"name":"throws if applied to null or undefined","suites":["last"],"updatePoint":{"line":18,"column":44,"index":481},"line":18,"code":"  it('throws if applied to null or undefined', function () {\n    assert.throws(function () {\n      R.last(null);\n    }, TypeError);\n    assert.throws(function () {\n      R.last(undefined);\n    }, TypeError);\n  });","file":"last.js","skipped":false,"dir":"test"},{"name":"returns a number indicating an object's last position in a list","suites":["lastIndexOf"],"updatePoint":{"line":10,"column":69,"index":233},"line":10,"code":"  it(\"returns a number indicating an object's last position in a list\", function () {\n    var list = [0, 10, 20, 30, 0, 10, 20, 30, 0, 10];\n    eq(R.lastIndexOf(30, list), 7);\n  });","file":"lastIndexOf.js","skipped":false,"dir":"test"},{"name":"returns -1 if the object is not in the list","suites":["lastIndexOf"],"updatePoint":{"line":14,"column":49,"index":395},"line":14,"code":"  it('returns -1 if the object is not in the list', function () {\n    var list = [0, 10, 20, 30];\n    eq(R.lastIndexOf(40, list), -1);\n  });","file":"lastIndexOf.js","skipped":false,"dir":"test"},{"name":"returns the last index of the first item","suites":["lastIndexOf"],"updatePoint":{"line":19,"column":46,"index":567},"line":19,"code":"  it('returns the last index of the first item', function () {\n    eq(R.lastIndexOf(1, input), 5);\n  });","file":"lastIndexOf.js","skipped":false,"dir":"test"},{"name":"returns the index of the last item","suites":["lastIndexOf"],"updatePoint":{"line":22,"column":40,"index":666},"line":22,"code":"  it('returns the index of the last item', function () {\n    eq(R.lastIndexOf(5, input), 4);\n  });","file":"lastIndexOf.js","skipped":false,"dir":"test"},{"name":"finds a","suites":["lastIndexOf"],"updatePoint":{"line":28,"column":13,"index":873},"line":28,"code":"  it('finds a', function () {\n    eq(R.lastIndexOf('a', list), 2);\n  });","file":"lastIndexOf.js","skipped":false,"dir":"test"},{"name":"does not find c","suites":["lastIndexOf"],"updatePoint":{"line":31,"column":21,"index":954},"line":31,"code":"  it('does not find c', function () {\n    eq(R.lastIndexOf('c', list), -1);\n  });","file":"lastIndexOf.js","skipped":false,"dir":"test"},{"name":"does not consider \"1\" equal to 1","suites":["lastIndexOf"],"updatePoint":{"line":34,"column":38,"index":1053},"line":34,"code":"  it('does not consider \"1\" equal to 1', function () {\n    eq(R.lastIndexOf('1', list), -1);\n  });","file":"lastIndexOf.js","skipped":false,"dir":"test"},{"name":"returns -1 for an empty array","suites":["lastIndexOf"],"updatePoint":{"line":37,"column":35,"index":1149},"line":37,"code":"  it('returns -1 for an empty array', function () {\n    eq(R.lastIndexOf('x', []), -1);\n  });","file":"lastIndexOf.js","skipped":false,"dir":"test"},{"name":"has R.equals semantics","suites":["lastIndexOf"],"updatePoint":{"line":40,"column":28,"index":1236},"line":40,"code":"  it('has R.equals semantics', function () {\n    eq(R.lastIndexOf(0, [-0]), -1);\n    eq(R.lastIndexOf(-0, [0]), -1);\n    eq(R.lastIndexOf(NaN, [NaN]), 0);\n    eq(R.lastIndexOf(new Just([42]), [new Just([42])]), 0);\n  });","file":"lastIndexOf.js","skipped":false,"dir":"test"},{"name":"dispatches to `lastIndexOf` method","suites":["lastIndexOf"],"updatePoint":{"line":46,"column":40,"index":1469},"line":46,"code":"  it('dispatches to `lastIndexOf` method', function () {\n    function Empty() {}\n\n    Empty.prototype.lastIndexOf = R.always(-1);\n\n    function List(head, tail) {\n      this.head = head;\n      this.tail = tail;\n    }\n\n    List.prototype.lastIndexOf = function (x) {\n      var idx = this.tail.lastIndexOf(x);\n      return idx >= 0 ? 1 + idx : this.head === x ? 0 : -1;\n    };\n\n    var list = new List('b', new List('a', new List('n', new List('a', new List('n', new List('a', new Empty()))))));\n    eq(R.lastIndexOf('a', 'banana'), 5);\n    eq(R.lastIndexOf('x', 'banana'), -1);\n    eq(R.lastIndexOf('a', list), 5);\n    eq(R.lastIndexOf('x', list), -1);\n  });","file":"lastIndexOf.js","skipped":false,"dir":"test"},{"name":"finds function, compared by identity","suites":["lastIndexOf"],"updatePoint":{"line":67,"column":42,"index":2129},"line":67,"code":"  it('finds function, compared by identity', function () {\n    var f = function () {};\n\n    var g = function () {};\n\n    var list = [g, f, g, f];\n    eq(R.lastIndexOf(f, list), 3);\n  });","file":"lastIndexOf.js","skipped":false,"dir":"test"},{"name":"does not find function, compared by identity","suites":["lastIndexOf"],"updatePoint":{"line":75,"column":50,"index":2324},"line":75,"code":"  it('does not find function, compared by identity', function () {\n    var f = function () {};\n\n    var g = function () {};\n\n    var h = function () {};\n\n    var list = [g, f];\n    eq(R.lastIndexOf(h, list), -1);\n  });","file":"lastIndexOf.js","skipped":false,"dir":"test"},{"name":"returns the length of a list","suites":["length"],"updatePoint":{"line":6,"column":34,"index":145},"line":6,"code":"  it('returns the length of a list', function () {\n    eq(R.length([]), 0);\n    eq(R.length(['a', 'b', 'c', 'd']), 4);\n  });","file":"length.js","skipped":false,"dir":"test"},{"name":"returns the length of a string","suites":["length"],"updatePoint":{"line":10,"column":36,"index":272},"line":10,"code":"  it('returns the length of a string', function () {\n    eq(R.length(''), 0);\n    eq(R.length('xyz'), 3);\n  });","file":"length.js","skipped":false,"dir":"test"},{"name":"returns the length of a function","suites":["length"],"updatePoint":{"line":14,"column":38,"index":386},"line":14,"code":"  it('returns the length of a function', function () {\n    eq(R.length(function () {}), 0);\n    eq(R.length(function (x, y, z) {\n      return z;\n    }), 3);\n  });","file":"length.js","skipped":false,"dir":"test"},{"name":"returns the length of an arguments object","suites":["length"],"updatePoint":{"line":20,"column":47,"index":558},"line":20,"code":"  it('returns the length of an arguments object', function () {\n    eq(R.length(function () {\n      return arguments;\n    }()), 0);\n    eq(R.length(function () {\n      return arguments;\n    }('x', 'y', 'z')), 3);\n  });","file":"length.js","skipped":false,"dir":"test"},{"name":"returns NaN for value of unexpected type","suites":["length"],"updatePoint":{"line":28,"column":46,"index":776},"line":28,"code":"  it('returns NaN for value of unexpected type', function () {\n    eq(R.identical(NaN, R.length(0)), true);\n    eq(R.identical(NaN, R.length({})), true);\n    eq(R.identical(NaN, R.length(null)), true);\n    eq(R.identical(NaN, R.length(undefined)), true);\n  });","file":"length.js","skipped":false,"dir":"test"},{"name":"returns NaN for length property of unexpected type","suites":["length"],"updatePoint":{"line":34,"column":56,"index":1047},"line":34,"code":"  it('returns NaN for length property of unexpected type', function () {\n    eq(R.identical(NaN, R.length({\n      length: ''\n    })), true);\n    eq(R.identical(NaN, R.length({\n      length: '1.23'\n    })), true);\n    eq(R.identical(NaN, R.length({\n      length: null\n    })), true);\n    eq(R.identical(NaN, R.length({\n      length: undefined\n    })), true);\n    eq(R.identical(NaN, R.length({})), true);\n  });","file":"length.js","skipped":false,"dir":"test"},{"name":"focuses list element at the specified index","suites":["lensIndex","view"],"updatePoint":{"line":14,"column":51,"index":251},"line":14,"code":"    it('focuses list element at the specified index', function () {\n      eq(R.view(R.lensIndex(0), testList), {\n        a: 1\n      });\n    });","file":"lensIndex.js","skipped":false,"dir":"test"},{"name":"returns undefined if the specified index does not exist","suites":["lensIndex","view"],"updatePoint":{"line":19,"column":63,"index":407},"line":19,"code":"    it('returns undefined if the specified index does not exist', function () {\n      eq(R.view(R.lensIndex(10), testList), undefined);\n    });","file":"lensIndex.js","skipped":false,"dir":"test"},{"name":"sets the list value at the specified index","suites":["lensIndex","set"],"updatePoint":{"line":24,"column":50,"index":576},"line":24,"code":"    it('sets the list value at the specified index', function () {\n      eq(R.set(R.lensIndex(0), 0, testList), [0, {\n        b: 2\n      }, {\n        c: 3\n      }]);\n    });","file":"lensIndex.js","skipped":false,"dir":"test"},{"name":"applies function to the value at the specified list index","suites":["lensIndex","over"],"updatePoint":{"line":33,"column":65,"index":804},"line":33,"code":"    it('applies function to the value at the specified list index', function () {\n      eq(R.over(R.lensIndex(2), R.keys, testList), [{\n        a: 1\n      }, {\n        b: 2\n      }, ['c']]);\n    });","file":"lensIndex.js","skipped":false,"dir":"test"},{"name":"can be composed","suites":["lensIndex","composability"],"updatePoint":{"line":42,"column":23,"index":1009},"line":42,"code":"    it('can be composed', function () {\n      var nestedList = [0, [10, 11, 12], 1, 2];\n      var composedLens = R.compose(R.lensIndex(1), R.lensIndex(0));\n      eq(R.view(composedLens, nestedList), 10);\n    });","file":"lensIndex.js","skipped":false,"dir":"test"},{"name":"set s (get s) === s","suites":["lensIndex","well behaved lens"],"updatePoint":{"line":49,"column":27,"index":1277},"line":49,"code":"    it('set s (get s) === s', function () {\n      eq(R.set(R.lensIndex(0), R.view(R.lensIndex(0), testList), testList), testList);\n    });","file":"lensIndex.js","skipped":false,"dir":"test"},{"name":"get (set s v) === v","suites":["lensIndex","well behaved lens"],"updatePoint":{"line":52,"column":27,"index":1416},"line":52,"code":"    it('get (set s v) === v', function () {\n      eq(R.view(R.lensIndex(0), R.set(R.lensIndex(0), 0, testList)), 0);\n    });","file":"lensIndex.js","skipped":false,"dir":"test"},{"name":"get (set(set s v1) v2) === v2","suites":["lensIndex","well behaved lens"],"updatePoint":{"line":55,"column":37,"index":1551},"line":55,"code":"    it('get (set(set s v1) v2) === v2', function () {\n      eq(R.view(R.lensIndex(0), R.set(R.lensIndex(0), 11, R.set(R.lensIndex(0), 10, testList))), 11);\n    });","file":"lensIndex.js","skipped":false,"dir":"test"},{"name":"focuses the specified object property","suites":["lensPath","view"],"updatePoint":{"line":15,"column":45,"index":256},"line":15,"code":"    it('focuses the specified object property', function () {\n      eq(R.view(R.lensPath(['d']), testObj), 3);\n      eq(R.view(R.lensPath(['a', 1, 'b']), testObj), 2);\n      eq(R.view(R.lensPath([]), testObj), testObj);\n    });","file":"lensPath.js","skipped":false,"dir":"test"},{"name":"sets the value of the object property specified","suites":["lensPath","set"],"updatePoint":{"line":22,"column":55,"index":532},"line":22,"code":"    it('sets the value of the object property specified', function () {\n      eq(R.set(R.lensPath(['d']), 0, testObj), {\n        a: [{\n          b: 1\n        }, {\n          b: 2\n        }],\n        d: 0\n      });\n      eq(R.set(R.lensPath(['a', 0, 'b']), 0, testObj), {\n        a: [{\n          b: 0\n        }, {\n          b: 2\n        }],\n        d: 3\n      });\n      eq(R.set(R.lensPath([]), 0, testObj), 0);\n    });","file":"lensPath.js","skipped":false,"dir":"test"},{"name":"adds the property to the object if it doesn't exist","suites":["lensPath","set"],"updatePoint":{"line":41,"column":60,"index":955},"line":41,"code":"    it('adds the property to the object if it doesn\\'t exist', function () {\n      eq(R.set(R.lensPath(['X']), 0, testObj), {\n        a: [{\n          b: 1\n        }, {\n          b: 2\n        }],\n        d: 3,\n        X: 0\n      });\n      eq(R.set(R.lensPath(['a', 0, 'X']), 0, testObj), {\n        a: [{\n          b: 1,\n          X: 0\n        }, {\n          b: 2\n        }],\n        d: 3\n      });\n    });","file":"lensPath.js","skipped":false,"dir":"test"},{"name":"applies function to the value of the specified object property","suites":["lensPath","over"],"updatePoint":{"line":63,"column":70,"index":1409},"line":63,"code":"    it('applies function to the value of the specified object property', function () {\n      eq(R.over(R.lensPath(['d']), R.inc, testObj), {\n        a: [{\n          b: 1\n        }, {\n          b: 2\n        }],\n        d: 4\n      });\n      eq(R.over(R.lensPath(['a', 1, 'b']), R.inc, testObj), {\n        a: [{\n          b: 1\n        }, {\n          b: 3\n        }],\n        d: 3\n      });\n      eq(R.over(R.lensPath([]), R.toPairs, testObj), [['a', [{\n        b: 1\n      }, {\n        b: 2\n      }]], ['d', 3]]);\n    });","file":"lensPath.js","skipped":false,"dir":"test"},{"name":"applies function to undefined and adds the property if it doesn't exist","suites":["lensPath","over"],"updatePoint":{"line":86,"column":80,"index":1937},"line":86,"code":"    it('applies function to undefined and adds the property if it doesn\\'t exist', function () {\n      eq(R.over(R.lensPath(['X']), R.identity, testObj), {\n        a: [{\n          b: 1\n        }, {\n          b: 2\n        }],\n        d: 3,\n        X: undefined\n      });\n      eq(R.over(R.lensPath(['a', 0, 'X']), R.identity, testObj), {\n        a: [{\n          b: 1,\n          X: undefined\n        }, {\n          b: 2\n        }],\n        d: 3\n      });\n    });","file":"lensPath.js","skipped":false,"dir":"test"},{"name":"can be composed","suites":["lensPath","composability"],"updatePoint":{"line":108,"column":23,"index":2389},"line":108,"code":"    it('can be composed', function () {\n      var composedLens = R.compose(R.lensPath(['a']), R.lensPath([1, 'b']));\n      eq(R.view(composedLens, testObj), 2);\n    });","file":"lensPath.js","skipped":false,"dir":"test"},{"name":"set s (get s) === s","suites":["lensPath","well behaved lens"],"updatePoint":{"line":114,"column":27,"index":2614},"line":114,"code":"    it('set s (get s) === s', function () {\n      eq(R.set(R.lensPath(['d']), R.view(R.lensPath(['d']), testObj), testObj), testObj);\n      eq(R.set(R.lensPath(['a', 0, 'b']), R.view(R.lensPath(['a', 0, 'b']), testObj), testObj), testObj);\n    });","file":"lensPath.js","skipped":false,"dir":"test"},{"name":"get (set s v) === v","suites":["lensPath","well behaved lens"],"updatePoint":{"line":118,"column":27,"index":2862},"line":118,"code":"    it('get (set s v) === v', function () {\n      eq(R.view(R.lensPath(['d']), R.set(R.lensPath(['d']), 0, testObj)), 0);\n      eq(R.view(R.lensPath(['a', 0, 'b']), R.set(R.lensPath(['a', 0, 'b']), 0, testObj)), 0);\n    });","file":"lensPath.js","skipped":false,"dir":"test"},{"name":"get (set(set s v1) v2) === v2","suites":["lensPath","well behaved lens"],"updatePoint":{"line":122,"column":37,"index":3096},"line":122,"code":"    it('get (set(set s v1) v2) === v2', function () {\n      var p = ['d'];\n      var q = ['a', 0, 'b'];\n      eq(R.view(R.lensPath(p), R.set(R.lensPath(p), 11, R.set(R.lensPath(p), 10, testObj))), 11);\n      eq(R.view(R.lensPath(q), R.set(R.lensPath(q), 11, R.set(R.lensPath(q), 10, testObj))), 11);\n    });","file":"lensPath.js","skipped":false,"dir":"test"},{"name":"focuses object the specified object property","suites":["lensProp","view"],"updatePoint":{"line":12,"column":52,"index":240},"line":12,"code":"    it('focuses object the specified object property', function () {\n      eq(R.view(R.lensProp('a'), testObj), 1);\n    });","file":"lensProp.js","skipped":false,"dir":"test"},{"name":"returns undefined if the specified property does not exist","suites":["lensProp","view"],"updatePoint":{"line":15,"column":66,"index":378},"line":15,"code":"    it('returns undefined if the specified property does not exist', function () {\n      eq(R.view(R.lensProp('X'), testObj), undefined);\n    });","file":"lensProp.js","skipped":false,"dir":"test"},{"name":"sets the value of the object property specified","suites":["lensProp","set"],"updatePoint":{"line":20,"column":55,"index":551},"line":20,"code":"    it('sets the value of the object property specified', function () {\n      eq(R.set(R.lensProp('a'), 0, testObj), {\n        a: 0,\n        b: 2,\n        c: 3\n      });\n    });","file":"lensProp.js","skipped":false,"dir":"test"},{"name":"adds the property to the object if it doesn't exist","suites":["lensProp","set"],"updatePoint":{"line":27,"column":60,"index":734},"line":27,"code":"    it('adds the property to the object if it doesn\\'t exist', function () {\n      eq(R.set(R.lensProp('d'), 4, testObj), {\n        a: 1,\n        b: 2,\n        c: 3,\n        d: 4\n      });\n    });","file":"lensProp.js","skipped":false,"dir":"test"},{"name":"applies function to the value of the specified object property","suites":["lensProp","over"],"updatePoint":{"line":37,"column":70,"index":980},"line":37,"code":"    it('applies function to the value of the specified object property', function () {\n      eq(R.over(R.lensProp('a'), R.inc, testObj), {\n        a: 2,\n        b: 2,\n        c: 3\n      });\n    });","file":"lensProp.js","skipped":false,"dir":"test"},{"name":"applies function to undefined and adds the property if it doesn't exist","suites":["lensProp","over"],"updatePoint":{"line":44,"column":80,"index":1188},"line":44,"code":"    it('applies function to undefined and adds the property if it doesn\\'t exist', function () {\n      eq(R.over(R.lensProp('X'), R.identity, testObj), {\n        a: 1,\n        b: 2,\n        c: 3,\n        X: undefined\n      });\n    });","file":"lensProp.js","skipped":false,"dir":"test"},{"name":"can be composed","suites":["lensProp","composability"],"updatePoint":{"line":54,"column":23,"index":1414},"line":54,"code":"    it('can be composed', function () {\n      var nestedObj = {\n        a: {\n          b: 1\n        },\n        c: 2\n      };\n      var composedLens = R.compose(R.lensProp('a'), R.lensProp('b'));\n      eq(R.view(composedLens, nestedObj), 1);\n    });","file":"lensProp.js","skipped":false,"dir":"test"},{"name":"set s (get s) === s","suites":["lensProp","well behaved lens"],"updatePoint":{"line":66,"column":27,"index":1719},"line":66,"code":"    it('set s (get s) === s', function () {\n      eq(R.set(R.lensProp('a'), R.view(R.lensProp('a'), testObj), testObj), testObj);\n    });","file":"lensProp.js","skipped":false,"dir":"test"},{"name":"get (set s v) === v","suites":["lensProp","well behaved lens"],"updatePoint":{"line":69,"column":27,"index":1857},"line":69,"code":"    it('get (set s v) === v', function () {\n      eq(R.view(R.lensProp('a'), R.set(R.lensProp('a'), 0, testObj)), 0);\n    });","file":"lensProp.js","skipped":false,"dir":"test"},{"name":"get (set(set s v1) v2) === v2","suites":["lensProp","well behaved lens"],"updatePoint":{"line":72,"column":37,"index":1993},"line":72,"code":"    it('get (set(set s v1) v2) === v2', function () {\n      eq(R.view(R.lensProp('a'), R.set(R.lensProp('a'), 11, R.set(R.lensProp('a'), 10, testObj))), 11);\n    });","file":"lensProp.js","skipped":false,"dir":"test"},{"name":"returns a function if called with just a function","suites":["lift"],"updatePoint":{"line":27,"column":55,"index":587},"line":27,"code":"  it('returns a function if called with just a function', function () {\n    eq(typeof R.lift(R.add), 'function');\n  });","file":"lift.js","skipped":false,"dir":"test"},{"name":"produces a cross-product of array values","suites":["lift"],"updatePoint":{"line":30,"column":46,"index":698},"line":30,"code":"  it('produces a cross-product of array values', function () {\n    eq(madd3([1, 2, 3], [1, 2], [1, 2, 3]), [3, 4, 5, 4, 5, 6, 4, 5, 6, 5, 6, 7, 5, 6, 7, 6, 7, 8]);\n    eq(madd3([1], [2], [3]), [6]);\n    eq(madd3([1, 2], [3, 4], [5, 6]), [9, 10, 10, 11, 10, 11, 11, 12]);\n  });","file":"lift.js","skipped":false,"dir":"test"},{"name":"can lift functions of any arity","suites":["lift"],"updatePoint":{"line":35,"column":37,"index":966},"line":35,"code":"  it('can lift functions of any arity', function () {\n    eq(complement(R.isNil)(null), false);\n    eq(madd3([1, 10], [2], [3]), [6, 15]);\n    eq(madd4([1, 10], [2], [3], [40]), [46, 55]);\n    eq(madd5([1, 10], [2], [3], [40], [500, 1000]), [546, 1046, 555, 1055]);\n  });","file":"lift.js","skipped":false,"dir":"test"},{"name":"works with other functors such as \"Maybe\"","suites":["lift"],"updatePoint":{"line":41,"column":47,"index":1248},"line":41,"code":"  it('works with other functors such as \"Maybe\"', function () {\n    var addM = R.lift(R.add);\n    eq(addM(Just(3), Just(5)), Just(8));\n  });","file":"lift.js","skipped":false,"dir":"test"},{"name":"returns a function","suites":["liftN"],"updatePoint":{"line":22,"column":24,"index":449},"line":22,"code":"  it('returns a function', function () {\n    eq(typeof R.liftN(3, add3), 'function');\n  });","file":"liftN.js","skipped":false,"dir":"test"},{"name":"limits a variadic function to the specified arity","suites":["liftN"],"updatePoint":{"line":25,"column":55,"index":572},"line":25,"code":"  it('limits a variadic function to the specified arity', function () {\n    eq(addN3([1, 10], [2], [3]), [6, 15]);\n  });","file":"liftN.js","skipped":false,"dir":"test"},{"name":"can lift functions of any arity","suites":["liftN"],"updatePoint":{"line":28,"column":37,"index":675},"line":28,"code":"  it('can lift functions of any arity', function () {\n    eq(addN3([1, 10], [2], [3]), [6, 15]);\n    eq(addN4([1, 10], [2], [3], [40]), [46, 55]);\n    eq(addN5([1, 10], [2], [3], [40], [500, 1000]), [546, 1046, 555, 1055]);\n  });","file":"liftN.js","skipped":false,"dir":"test"},{"name":"works with other functors such as \"Maybe\"","suites":["liftN"],"updatePoint":{"line":33,"column":47,"index":915},"line":33,"code":"  it('works with other functors such as \"Maybe\"', function () {\n    var addM = R.liftN(2, R.add);\n    eq(addM(Just(3), Just(5)), Just(8));\n  });","file":"liftN.js","skipped":false,"dir":"test"},{"name":"interprets [a] as a functor","suites":["liftN"],"updatePoint":{"line":37,"column":33,"index":1046},"line":37,"code":"  it('interprets [a] as a functor', function () {\n    eq(addN3([1, 2, 3], [10, 20], [100, 200, 300]), [111, 211, 311, 121, 221, 321, 112, 212, 312, 122, 222, 322, 113, 213, 313, 123, 223, 323]);\n    eq(addN3([1], [2], [3]), [6]);\n    eq(addN3([1, 2], [10, 20], [100, 200]), [111, 211, 121, 221, 112, 212, 122, 222]);\n  });","file":"liftN.js","skipped":false,"dir":"test"},{"name":"interprets ((->) r) as a functor","suites":["liftN"],"updatePoint":{"line":42,"column":38,"index":1374},"line":42,"code":"  it('interprets ((->) r) as a functor', function () {\n    var convergedOnInt = addN3(R.add(2), R.multiply(3), R.subtract(4));\n    var convergedOnBool = R.liftN(2, R.and)(R.gt(R.__, 0), R.lt(R.__, 3));\n    eq(typeof convergedOnInt, 'function');\n    eq(typeof convergedOnBool, 'function');\n    eq(convergedOnInt(10), 10 + 2 + 10 * 3 + (4 - 10)); // jscs:disable disallowYodaConditions\n\n    eq(convergedOnBool(0), 0 > 0 && 0 < 3);\n    eq(convergedOnBool(1), 1 > 0 && 1 < 3);\n    eq(convergedOnBool(2), 2 > 0 && 2 < 3);\n    eq(convergedOnBool(3), 3 > 0 && 3 < 3); // jscs:enable disallowYodaConditions\n  });","file":"liftN.js","skipped":false,"dir":"test"},{"name":"reports whether one item is less than another","suites":["lt"],"updatePoint":{"line":6,"column":51,"index":158},"line":6,"code":"  it('reports whether one item is less than another', function () {\n    eq(R.lt(3, 5), true);\n    eq(R.lt(6, 4), false);\n    eq(R.lt(7.0, 7.0), false);\n    eq(R.lt('abc', 'xyz'), true);\n    eq(R.lt('abcd', 'abc'), false);\n  });","file":"lt.js","skipped":false,"dir":"test"},{"name":"reports whether one item is less than or equal to another","suites":["lte"],"updatePoint":{"line":6,"column":63,"index":171},"line":6,"code":"  it('reports whether one item is less than or equal to another', function () {\n    eq(R.lte(3, 5), true);\n    eq(R.lte(6, 4), false);\n    eq(R.lte(7.0, 7.0), true);\n    eq(R.lte('abc', 'xyz'), true);\n    eq(R.lte('abcd', 'abc'), false);\n  });","file":"lte.js","skipped":false,"dir":"test"},{"name":"maps simple functions over arrays","suites":["map"],"updatePoint":{"line":24,"column":39,"index":420},"line":24,"code":"  it('maps simple functions over arrays', function () {\n    eq(R.map(times2, [1, 2, 3, 4]), [2, 4, 6, 8]);\n  });","file":"map.js","skipped":false,"dir":"test"},{"name":"maps over objects","suites":["map"],"updatePoint":{"line":27,"column":23,"index":517},"line":27,"code":"  it('maps over objects', function () {\n    eq(R.map(dec, {}), {});\n    eq(R.map(dec, {\n      x: 4,\n      y: 5,\n      z: 6\n    }), {\n      x: 3,\n      y: 4,\n      z: 5\n    });\n  });","file":"map.js","skipped":false,"dir":"test"},{"name":"interprets ((->) r) as a functor","suites":["map"],"updatePoint":{"line":39,"column":38,"index":714},"line":39,"code":"  it('interprets ((->) r) as a functor', function () {\n    var f = function (a) {\n      return a - 1;\n    };\n\n    var g = function (b) {\n      return b * 2;\n    };\n\n    var h = R.map(f, g);\n    eq(h(10), 10 * 2 - 1);\n  });","file":"map.js","skipped":false,"dir":"test"},{"name":"dispatches to objects that implement `map`","suites":["map"],"updatePoint":{"line":51,"column":48,"index":947},"line":51,"code":"  it('dispatches to objects that implement `map`', function () {\n    var obj = {\n      x: 100,\n      map: function (f) {\n        return f(this.x);\n      }\n    };\n    eq(R.map(add1, obj), 101);\n  });","file":"map.js","skipped":false,"dir":"test"},{"name":"dispatches to transformer objects","suites":["map"],"updatePoint":{"line":60,"column":39,"index":1137},"line":60,"code":"  it('dispatches to transformer objects', function () {\n    eq(R.map(add1, listXf), {\n      f: add1,\n      xf: listXf\n    });\n  });","file":"map.js","skipped":false,"dir":"test"},{"name":"throws a TypeError on null and undefined","suites":["map"],"updatePoint":{"line":66,"column":46,"index":1276},"line":66,"code":"  it('throws a TypeError on null and undefined', function () {\n    assert.throws(function () {\n      return R.map(times2, null);\n    }, TypeError);\n    assert.throws(function () {\n      return R.map(times2, undefined);\n    }, TypeError);\n  });","file":"map.js","skipped":false,"dir":"test"},{"name":"composes","suites":["map"],"updatePoint":{"line":74,"column":14,"index":1488},"line":74,"code":"  it('composes', function () {\n    var mdouble = R.map(times2);\n    var mdec = R.map(dec);\n    eq(mdec(mdouble([10, 20, 30])), [19, 39, 59]);\n  });","file":"map.js","skipped":false,"dir":"test"},{"name":"can compose transducer-style","suites":["map"],"updatePoint":{"line":79,"column":34,"index":1656},"line":79,"code":"  it('can compose transducer-style', function () {\n    var mdouble = R.map(times2);\n    var mdec = R.map(dec);\n    var xcomp = mdec(mdouble(listXf));\n    eq(xcomp.xf, {\n      xf: listXf,\n      f: times2\n    });\n    eq(xcomp.f, dec);\n  });","file":"map.js","skipped":false,"dir":"test"},{"name":"correctly uses fantasy-land implementations","suites":["map"],"updatePoint":{"line":89,"column":49,"index":1910},"line":89,"code":"  it('correctly uses fantasy-land implementations', function () {\n    var m1 = Id(1);\n    var m2 = R.map(R.add(1), m1);\n    eq(m1.value + 1, m2.value);\n  });","file":"map.js","skipped":false,"dir":"test"},{"name":"can act as a transducer","suites":["map"],"updatePoint":{"line":94,"column":29,"index":2048},"line":94,"code":"  it('can act as a transducer', function () {\n    eq(R.into([], R.map(times2), [1, 2, 3, 4]), [2, 4, 6, 8]);\n    eq(R.transduce(R.map(times2), R.flip(R.append), [], [1, 2, 3, 4]), [2, 4, 6, 8]);\n  });","file":"map.js","skipped":false,"dir":"test"},{"name":"map and accumulate simple functions over arrays with the supplied accumulator","suites":["mapAccum"],"updatePoint":{"line":18,"column":83,"index":401},"line":18,"code":"  it('map and accumulate simple functions over arrays with the supplied accumulator', function () {\n    eq(R.mapAccum(add, 0, [1, 2, 3, 4]), [10, [1, 3, 6, 10]]);\n    eq(R.mapAccum(mult, 1, [1, 2, 3, 4]), [24, [1, 2, 6, 24]]);\n  });","file":"mapAccum.js","skipped":false,"dir":"test"},{"name":"returns the list and accumulator for an empty array","suites":["mapAccum"],"updatePoint":{"line":22,"column":57,"index":608},"line":22,"code":"  it('returns the list and accumulator for an empty array', function () {\n    eq(R.mapAccum(add, 0, []), [0, []]);\n    eq(R.mapAccum(mult, 1, []), [1, []]);\n    eq(R.mapAccum(concat, [], []), [[], []]);\n  });","file":"mapAccum.js","skipped":false,"dir":"test"},{"name":"map and accumulate simple functions over arrays with the supplied accumulator","suites":["mapAccumRight"],"updatePoint":{"line":14,"column":83,"index":328},"line":14,"code":"  it('map and accumulate simple functions over arrays with the supplied accumulator', function () {\n    eq(R.mapAccumRight(add, 0, [1, 2, 3, 4]), [10, [10, 9, 7, 4]]);\n    eq(R.mapAccumRight(mult, 1, [1, 2, 3, 4]), [24, [24, 24, 12, 4]]);\n  });","file":"mapAccumRight.js","skipped":false,"dir":"test"},{"name":"returns the list and accumulator for an empty array","suites":["mapAccumRight"],"updatePoint":{"line":18,"column":57,"index":547},"line":18,"code":"  it('returns the list and accumulator for an empty array', function () {\n    eq(R.mapAccumRight(add, 0, []), [0, []]);\n    eq(R.mapAccumRight(mult, 1, []), [1, []]);\n    eq(R.mapAccumRight(R.concat, [], []), [[], []]);\n  });","file":"mapAccumRight.js","skipped":false,"dir":"test"},{"name":"works just like a normal mapObj","suites":["mapObjIndexed"],"updatePoint":{"line":19,"column":37,"index":413},"line":19,"code":"  it('works just like a normal mapObj', function () {\n    eq(R.mapObjIndexed(times2, {\n      a: 1,\n      b: 2,\n      c: 3,\n      d: 4\n    }), {\n      a: 2,\n      b: 4,\n      c: 6,\n      d: 8\n    });\n  });","file":"mapObjIndexed.js","skipped":false,"dir":"test"},{"name":"passes the index as a second parameter to the callback","suites":["mapObjIndexed"],"updatePoint":{"line":32,"column":60,"index":641},"line":32,"code":"  it('passes the index as a second parameter to the callback', function () {\n    eq(R.mapObjIndexed(addIndexed, {\n      a: 8,\n      b: 6,\n      c: 7,\n      d: 5,\n      e: 3,\n      f: 0,\n      g: 9\n    }), {\n      a: '8a',\n      b: '6b',\n      c: '7c',\n      d: '5d',\n      e: '3e',\n      f: '0f',\n      g: '9g'\n    });\n  });","file":"mapObjIndexed.js","skipped":false,"dir":"test"},{"name":"passes the entire list as a third parameter to the callback","suites":["mapObjIndexed"],"updatePoint":{"line":51,"column":65,"index":971},"line":51,"code":"  it('passes the entire list as a third parameter to the callback', function () {\n    eq(R.mapObjIndexed(squareVowels, {\n      a: 8,\n      b: 6,\n      c: 7,\n      d: 5,\n      e: 3,\n      f: 0,\n      g: 9\n    }), {\n      a: 64,\n      b: 6,\n      c: 7,\n      d: 5,\n      e: 9,\n      f: 0,\n      g: 9\n    });\n  });","file":"mapObjIndexed.js","skipped":false,"dir":"test"},{"name":"determines whether a string matches a regex","suites":["match"],"updatePoint":{"line":11,"column":49,"index":285},"line":11,"code":"  it('determines whether a string matches a regex', function () {\n    eq(R.match(re, matching).length, 1);\n    eq(R.match(re, notMatching), []);\n  });","file":"match.js","skipped":false,"dir":"test"},{"name":"defaults to a different empty array each time","suites":["match"],"updatePoint":{"line":15,"column":51,"index":438},"line":15,"code":"  it('defaults to a different empty array each time', function () {\n    var first = R.match(re, notMatching);\n    var second = R.match(re, notMatching);\n    assert.notStrictEqual(first, second);\n  });","file":"match.js","skipped":false,"dir":"test"},{"name":"throws on null input","suites":["match"],"updatePoint":{"line":20,"column":26,"index":614},"line":20,"code":"  it('throws on null input', function () {\n    assert.throws(function shouldThrow() {\n      R.match(re, null);\n    }, TypeError);\n  });","file":"match.js","skipped":false,"dir":"test"},{"name":"requires integer arguments","suites":["mathMod"],"updatePoint":{"line":8,"column":32,"index":177},"line":8,"code":"  it('requires integer arguments', function () {\n    assert(Number.isNaN(R.mathMod('s', 3)));\n    assert(Number.isNaN(R.mathMod(3, 's')));\n    assert(Number.isNaN(R.mathMod(12.2, 3)));\n    assert(Number.isNaN(R.mathMod(3, 12.2)));\n  });","file":"mathMod.js","skipped":false,"dir":"test"},{"name":"behaves differently than JS modulo","suites":["mathMod"],"updatePoint":{"line":14,"column":40,"index":422},"line":14,"code":"  it('behaves differently than JS modulo', function () {\n    assert.notStrictEqual(R.mathMod(-17, 5), -17 % 5);\n    assert.notStrictEqual(R.mathMod(17.2, 5), 17.2 % 5);\n    assert.notStrictEqual(R.mathMod(17, -5), 17 % -5);\n  });","file":"mathMod.js","skipped":false,"dir":"test"},{"name":"computes the true modulo function","suites":["mathMod"],"updatePoint":{"line":19,"column":39,"index":651},"line":19,"code":"  it('computes the true modulo function', function () {\n    eq(R.mathMod(-17, 5), 3);\n    eq(R.identical(NaN, R.mathMod(17, -5)), true);\n    eq(R.identical(NaN, R.mathMod(17, 0)), true);\n    eq(R.identical(NaN, R.mathMod(17.2, 5)), true);\n    eq(R.identical(NaN, R.mathMod(17, 5.5)), true);\n  });","file":"mathMod.js","skipped":false,"dir":"test"},{"name":"returns the larger of its two arguments","suites":["max"],"updatePoint":{"line":6,"column":45,"index":153},"line":6,"code":"  it('returns the larger of its two arguments', function () {\n    eq(R.max(-7, 7), 7);\n    eq(R.max(7, -7), 7);\n  });","file":"max.js","skipped":false,"dir":"test"},{"name":"works for any orderable type","suites":["max"],"updatePoint":{"line":10,"column":34,"index":260},"line":10,"code":"  it('works for any orderable type', function () {\n    var d1 = new Date('2001-01-01');\n    var d2 = new Date('2002-02-02');\n    eq(R.max(d1, d2), d2);\n    eq(R.max(d2, d1), d2);\n    eq(R.max('a', 'b'), 'b');\n    eq(R.max('b', 'a'), 'b');\n  });","file":"max.js","skipped":false,"dir":"test"},{"name":"returns the second argument if both arguments are equal according to the native JS strict equals operator","suites":["max"],"updatePoint":{"line":18,"column":111,"index":582},"line":18,"code":"  it('returns the second argument if both arguments are equal according to the native JS strict equals operator', function () {\n    eq(R.max(7, 7), 7);\n    eq(R.max(undefined, undefined), undefined);\n  });","file":"max.js","skipped":false,"dir":"test"},{"name":"returns the alphabetically later type if neither argument is greater than the other","suites":["max"],"updatePoint":{"line":22,"column":89,"index":766},"line":22,"code":"  it('returns the alphabetically later type if neither argument is greater than the other', function () {\n    eq(R.max('a', 7), 'a');\n    eq(R.max('a', undefined), undefined);\n  });","file":"max.js","skipped":false,"dir":"test"},{"name":"returns the alphabetically later string coersion if no argument or type is greater than the other","suites":["max"],"updatePoint":{"line":26,"column":103,"index":962},"line":26,"code":"  it('returns the alphabetically later string coersion if no argument or type is greater than the other', function () {\n    const obj1 = {\n      a: 1\n    };\n    const obj2 = {\n      b: 1\n    };\n    eq(R.max(obj1, obj2), obj2);\n    eq(R.max(obj1, null), obj1);\n  });","file":"max.js","skipped":false,"dir":"test"},{"name":"returns the first argument if no other comparison attempts produce a result","suites":["max"],"updatePoint":{"line":36,"column":81,"index":1206},"line":36,"code":"  it('returns the first argument if no other comparison attempts produce a result', function () {\n    const obj1 = {\n      a: 1\n    };\n    eq(R.max(obj1, obj1), obj1);\n    eq(R.max(NaN, NaN), NaN);\n  });","file":"max.js","skipped":false,"dir":"test"},{"name":"returns the larger value as determined by the function","suites":["maxBy"],"updatePoint":{"line":6,"column":60,"index":170},"line":6,"code":"  it('returns the larger value as determined by the function', function () {\n    eq(R.maxBy(function (n) {\n      return n * n;\n    }, -3, 2), -3);\n    eq(R.maxBy(R.prop('x'), {\n      x: 3,\n      y: 1\n    }, {\n      x: 5,\n      y: 10\n    }), {\n      x: 5,\n      y: 10\n    });\n  });","file":"maxBy.js","skipped":false,"dir":"test"},{"name":"returns mean of a nonempty list","suites":["mean"],"updatePoint":{"line":6,"column":37,"index":146},"line":6,"code":"  it('returns mean of a nonempty list', function () {\n    eq(R.mean([2]), 2);\n    eq(R.mean([2, 7]), 4.5);\n    eq(R.mean([2, 7, 9]), 6);\n    eq(R.mean([2, 7, 9, 10]), 7);\n  });","file":"mean.js","skipped":false,"dir":"test"},{"name":"returns NaN for an empty list","suites":["mean"],"updatePoint":{"line":12,"column":35,"index":321},"line":12,"code":"  it('returns NaN for an empty list', function () {\n    eq(R.identical(NaN, R.mean([])), true);\n  });","file":"mean.js","skipped":false,"dir":"test"},{"name":"handles array-like object","suites":["mean"],"updatePoint":{"line":15,"column":31,"index":419},"line":15,"code":"  it('handles array-like object', function () {\n    eq(R.mean(function () {\n      return arguments;\n    }(1, 2, 3)), 2);\n  });","file":"mean.js","skipped":false,"dir":"test"},{"name":"returns middle value of an odd-length list","suites":["median"],"updatePoint":{"line":6,"column":48,"index":159},"line":6,"code":"  it('returns middle value of an odd-length list', function () {\n    eq(R.median([2]), 2);\n    eq(R.median([2, 9, 7]), 7);\n  });","file":"median.js","skipped":false,"dir":"test"},{"name":"returns mean of two middle values of a nonempty even-length list","suites":["median"],"updatePoint":{"line":10,"column":70,"index":310},"line":10,"code":"  it('returns mean of two middle values of a nonempty even-length list', function () {\n    eq(R.median([7, 2]), 4.5);\n    eq(R.median([7, 2, 10, 9]), 8);\n  });","file":"median.js","skipped":false,"dir":"test"},{"name":"returns NaN for an empty list","suites":["median"],"updatePoint":{"line":14,"column":35,"index":435},"line":14,"code":"  it('returns NaN for an empty list', function () {\n    eq(R.identical(NaN, R.median([])), true);\n  });","file":"median.js","skipped":false,"dir":"test"},{"name":"handles array-like object","suites":["median"],"updatePoint":{"line":17,"column":31,"index":535},"line":17,"code":"  it('handles array-like object', function () {\n    eq(R.median(function () {\n      return arguments;\n    }(1, 2, 3)), 2);\n  });","file":"median.js","skipped":false,"dir":"test"},{"name":"calculates the value for a given input only once","suites":["memoizeWith"],"updatePoint":{"line":6,"column":54,"index":170},"line":6,"code":"  it('calculates the value for a given input only once', function () {\n    var ctr = 0;\n    var fib = R.memoizeWith(R.identity, function (n) {\n      ctr += 1;\n      return n < 2 ? n : fib(n - 2) + fib(n - 1);\n    });\n    var result = fib(10);\n    eq(result, 55);\n    eq(ctr, 11); // fib(0), fib(1), ... fib(10), no memoization would take 177 iterations.\n  });","file":"memoizeWith.js","skipped":false,"dir":"test"},{"name":"handles multiple parameters","suites":["memoizeWith"],"updatePoint":{"line":16,"column":33,"index":509},"line":16,"code":"  it('handles multiple parameters', function () {\n    var f = R.memoizeWith(function (a, b, c) {\n      return a + b + c;\n    }, function (a, b, c) {\n      return a + ', ' + b + c;\n    });\n    eq(f('Hello', 'World', '!'), 'Hello, World!');\n    eq(f('Goodbye', 'Cruel World', '!!!'), 'Goodbye, Cruel World!!!');\n    eq(f('Hello', 'how are you', '?'), 'Hello, how are you?');\n    eq(f('Hello', 'World', '!'), 'Hello, World!');\n  });","file":"memoizeWith.js","skipped":false,"dir":"test"},{"name":"does not rely on reported arity","suites":["memoizeWith"],"updatePoint":{"line":27,"column":37,"index":943},"line":27,"code":"  it('does not rely on reported arity', function () {\n    var identity = R.memoizeWith(R.identity, function () {\n      return arguments[0];\n    });\n    eq(identity('x'), 'x');\n    eq(identity('y'), 'y');\n  });","file":"memoizeWith.js","skipped":false,"dir":"test"},{"name":"can be applied to nullary function","suites":["memoizeWith"],"updatePoint":{"line":34,"column":40,"index":1156},"line":34,"code":"  it('can be applied to nullary function', function () {\n    var count = 0;\n    var f = R.memoizeWith(R.identity, function () {\n      count += 1;\n      return 42;\n    });\n    eq(f(), 42);\n    eq(f(), 42);\n    eq(f(), 42);\n    eq(count, 1);\n  });","file":"memoizeWith.js","skipped":false,"dir":"test"},{"name":"can be applied to function with optional arguments","suites":["memoizeWith"],"updatePoint":{"line":45,"column":56,"index":1418},"line":45,"code":"  it('can be applied to function with optional arguments', function () {\n    var count = 0;\n    var f = R.memoizeWith(R.concat, function concat(a, b) {\n      count += 1;\n\n      switch (arguments.length) {\n        case 0:\n          a = 'foo';\n\n        case 1:\n          b = 'bar';\n      }\n\n      return a + b;\n    });\n    eq(f(), 'foobar');\n    eq(f(), 'foobar');\n    eq(f(), 'foobar');\n    eq(count, 1);\n  });","file":"memoizeWith.js","skipped":false,"dir":"test"},{"name":"retains arity","suites":["memoizeWith"],"updatePoint":{"line":65,"column":19,"index":1791},"line":65,"code":"  it('retains arity', function () {\n    var f = R.memoizeWith(R.concat, function (a, b) {\n      return a + b;\n    });\n    eq(f.length, 2);\n  });","file":"memoizeWith.js","skipped":false,"dir":"test"},{"name":"merges a list of objects together into one object","suites":["mergeAll"],"updatePoint":{"line":6,"column":55,"index":168},"line":6,"code":"  it('merges a list of objects together into one object', function () {\n    eq(R.mergeAll([{\n      foo: 1\n    }, {\n      bar: 2\n    }, {\n      baz: 3\n    }]), {\n      foo: 1,\n      bar: 2,\n      baz: 3\n    });\n  });","file":"mergeAll.js","skipped":false,"dir":"test"},{"name":"gives precedence to later objects in the list","suites":["mergeAll"],"updatePoint":{"line":19,"column":51,"index":380},"line":19,"code":"  it('gives precedence to later objects in the list', function () {\n    eq(R.mergeAll([{\n      foo: 1\n    }, {\n      foo: 2\n    }, {\n      bar: 2\n    }]), {\n      foo: 2,\n      bar: 2\n    });\n  });","file":"mergeAll.js","skipped":false,"dir":"test"},{"name":"ignores inherited properties","suites":["mergeAll"],"updatePoint":{"line":31,"column":34,"index":561},"line":31,"code":"  it('ignores inherited properties', function () {\n    function Foo() {}\n\n    Foo.prototype.bar = 42;\n    var foo = new Foo();\n    var res = R.mergeAll([foo, {\n      fizz: 'buzz'\n    }]);\n    eq(res, {\n      fizz: 'buzz'\n    });\n  });","file":"mergeAll.js","skipped":false,"dir":"test"},{"name":"... if the first object is nil","suites":["mergeAll","acts as if nil values are simply empty objects"],"updatePoint":{"line":44,"column":38,"index":875},"line":44,"code":"    it('... if the first object is nil', function () {\n      eq(R.mergeAll([null, {\n        foo: 1\n      }, {\n        foo: 2\n      }, {\n        bar: 2\n      }]), {\n        foo: 2,\n        bar: 2\n      });\n    });","file":"mergeAll.js","skipped":false,"dir":"test"},{"name":"... if the last object is nil","suites":["mergeAll","acts as if nil values are simply empty objects"],"updatePoint":{"line":56,"column":37,"index":1087},"line":56,"code":"    it('... if the last object is nil', function () {\n      eq(R.mergeAll([{\n        foo: 1\n      }, {\n        foo: 2\n      }, {\n        bar: 2\n      }, undefined]), {\n        foo: 2,\n        bar: 2\n      });\n    });","file":"mergeAll.js","skipped":false,"dir":"test"},{"name":"... if an intermediate object is nil","suites":["mergeAll","acts as if nil values are simply empty objects"],"updatePoint":{"line":68,"column":44,"index":1311},"line":68,"code":"    it('... if an intermediate object is nil', function () {\n      eq(R.mergeAll([{\n        foo: 1\n      }, {\n        foo: 2\n      }, null, {\n        bar: 2\n      }]), {\n        foo: 2,\n        bar: 2\n      });\n    });","file":"mergeAll.js","skipped":false,"dir":"test"},{"name":"takes two objects, recursively merges their own properties and returns a new object","suites":["mergeDeepLeft"],"updatePoint":{"line":8,"column":89,"index":240},"line":8,"code":"  it('takes two objects, recursively merges their own properties and returns a new object', function () {\n    var a = {\n      w: 1,\n      x: 2,\n      y: {\n        z: 3\n      }\n    };\n    var b = {\n      a: 4,\n      b: 5,\n      c: {\n        d: 6\n      }\n    };\n    eq(R.mergeDeepLeft(a, b), {\n      w: 1,\n      x: 2,\n      y: {\n        z: 3\n      },\n      a: 4,\n      b: 5,\n      c: {\n        d: 6\n      }\n    });\n  });","file":"mergeDeepLeft.js","skipped":false,"dir":"test"},{"name":"overrides properties in the second object with properties in the first object","suites":["mergeDeepLeft"],"updatePoint":{"line":36,"column":83,"index":653},"line":36,"code":"  it('overrides properties in the second object with properties in the first object', function () {\n    var a = {\n      a: {\n        b: 1,\n        c: 2\n      },\n      y: 0\n    };\n    var b = {\n      a: {\n        b: 3,\n        d: 4\n      },\n      z: 0\n    };\n    eq(R.mergeDeepLeft(a, b), {\n      a: {\n        b: 1,\n        c: 2,\n        d: 4\n      },\n      y: 0,\n      z: 0\n    });\n  });","file":"mergeDeepLeft.js","skipped":false,"dir":"test"},{"name":"is not destructive","suites":["mergeDeepLeft"],"updatePoint":{"line":61,"column":24,"index":982},"line":61,"code":"  it('is not destructive', function () {\n    var a = {\n      w: 1,\n      x: {\n        y: 2\n      }\n    };\n    var res = R.mergeDeepLeft(a, {\n      x: {\n        y: 3\n      }\n    });\n    assert.notStrictEqual(a, res);\n    assert.notStrictEqual(a.x, res.x);\n    eq(res, {\n      w: 1,\n      x: {\n        y: 2\n      }\n    });\n  });","file":"mergeDeepLeft.js","skipped":false,"dir":"test"},{"name":"reports only own properties","suites":["mergeDeepLeft"],"updatePoint":{"line":82,"column":33,"index":1318},"line":82,"code":"  it('reports only own properties', function () {\n    var a = {\n      w: 1,\n      x: {\n        y: 2\n      }\n    };\n\n    function Cla() {}\n\n    Cla.prototype.y = 5;\n    eq(R.mergeDeepLeft({\n      x: new Cla()\n    }, a), {\n      w: 1,\n      x: {\n        y: 2\n      }\n    });\n    eq(R.mergeDeepLeft(a, {\n      x: new Cla()\n    }), {\n      w: 1,\n      x: {\n        y: 2\n      }\n    });\n  });","file":"mergeDeepLeft.js","skipped":false,"dir":"test"},{"name":"takes two objects, recursively merges their own properties and returns a new object","suites":["mergeDeepRight"],"updatePoint":{"line":8,"column":89,"index":241},"line":8,"code":"  it('takes two objects, recursively merges their own properties and returns a new object', function () {\n    var a = {\n      w: 1,\n      x: 2,\n      y: {\n        z: 3\n      }\n    };\n    var b = {\n      a: 4,\n      b: 5,\n      c: {\n        d: 6\n      }\n    };\n    eq(R.mergeDeepRight(a, b), {\n      w: 1,\n      x: 2,\n      y: {\n        z: 3\n      },\n      a: 4,\n      b: 5,\n      c: {\n        d: 6\n      }\n    });\n  });","file":"mergeDeepRight.js","skipped":false,"dir":"test"},{"name":"overrides properties in the first object with properties in the second object","suites":["mergeDeepRight"],"updatePoint":{"line":36,"column":83,"index":655},"line":36,"code":"  it('overrides properties in the first object with properties in the second object', function () {\n    var a = {\n      a: {\n        b: 1,\n        c: 2\n      },\n      y: 0\n    };\n    var b = {\n      a: {\n        b: 3,\n        d: 4\n      },\n      z: 0\n    };\n    eq(R.mergeDeepRight(a, b), {\n      a: {\n        b: 3,\n        c: 2,\n        d: 4\n      },\n      y: 0,\n      z: 0\n    });\n  });","file":"mergeDeepRight.js","skipped":false,"dir":"test"},{"name":"is not destructive","suites":["mergeDeepRight"],"updatePoint":{"line":61,"column":24,"index":985},"line":61,"code":"  it('is not destructive', function () {\n    var a = {\n      w: 1,\n      x: {\n        y: 2\n      }\n    };\n    var res = R.mergeDeepRight(a, {\n      x: {\n        y: 3\n      }\n    });\n    assert.notStrictEqual(a, res);\n    assert.notStrictEqual(a.x, res.x);\n    eq(res, {\n      w: 1,\n      x: {\n        y: 3\n      }\n    });\n  });","file":"mergeDeepRight.js","skipped":false,"dir":"test"},{"name":"reports only own properties","suites":["mergeDeepRight"],"updatePoint":{"line":82,"column":33,"index":1322},"line":82,"code":"  it('reports only own properties', function () {\n    var a = {\n      w: 1,\n      x: {\n        y: 2\n      }\n    };\n\n    function Cla() {}\n\n    Cla.prototype.y = 5;\n    eq(R.mergeDeepRight({\n      x: new Cla()\n    }, a), {\n      w: 1,\n      x: {\n        y: 2\n      }\n    });\n    eq(R.mergeDeepRight(a, {\n      x: new Cla()\n    }), {\n      w: 1,\n      x: {\n        y: 2\n      }\n    });\n  });","file":"mergeDeepRight.js","skipped":false,"dir":"test"},{"name":"takes two objects, recursively merges their own properties and returns a new object","suites":["mergeDeepWith"],"updatePoint":{"line":12,"column":89,"index":283},"line":12,"code":"  it('takes two objects, recursively merges their own properties and returns a new object', function () {\n    var a = {\n      w: 1,\n      x: 2,\n      y: {\n        z: 3\n      }\n    };\n    var b = {\n      a: 4,\n      b: 5,\n      c: {\n        d: 6\n      }\n    };\n    eq(R.mergeDeepWith(last, a, b), {\n      w: 1,\n      x: 2,\n      y: {\n        z: 3\n      },\n      a: 4,\n      b: 5,\n      c: {\n        d: 6\n      }\n    });\n  });","file":"mergeDeepWith.js","skipped":false,"dir":"test"},{"name":"is not destructive","suites":["mergeDeepWith"],"updatePoint":{"line":68,"column":24,"index":1211},"line":68,"code":"  it('is not destructive', function () {\n    var a = {\n      w: 1,\n      x: {\n        y: 2\n      }\n    };\n    var res = R.mergeDeepWith(last, a, {\n      x: {\n        y: 3\n      }\n    });\n    assert.notStrictEqual(a, res);\n    assert.notStrictEqual(a.x, res.x);\n    eq(res, {\n      w: 1,\n      x: {\n        y: 3\n      }\n    });\n  });","file":"mergeDeepWith.js","skipped":false,"dir":"test"},{"name":"reports only own properties","suites":["mergeDeepWith"],"updatePoint":{"line":89,"column":33,"index":1553},"line":89,"code":"  it('reports only own properties', function () {\n    var a = {\n      w: 1,\n      x: {\n        y: 2\n      }\n    };\n\n    function Cla() {}\n\n    Cla.prototype.y = 5;\n    eq(R.mergeDeepWith(last, {\n      x: new Cla()\n    }, a), {\n      w: 1,\n      x: {\n        y: 2\n      }\n    });\n    eq(R.mergeDeepWith(last, a, {\n      x: new Cla()\n    }), {\n      w: 1,\n      x: {\n        y: 2\n      }\n    });\n  });","file":"mergeDeepWith.js","skipped":false,"dir":"test"},{"name":"takes two objects, recursively merges their own properties and returns a new object","suites":["mergeDeepWithKey"],"updatePoint":{"line":12,"column":89,"index":289},"line":12,"code":"  it('takes two objects, recursively merges their own properties and returns a new object', function () {\n    var a = {\n      w: 1,\n      x: 2,\n      y: {\n        z: 3\n      }\n    };\n    var b = {\n      a: 4,\n      b: 5,\n      c: {\n        d: 6\n      }\n    };\n    eq(R.mergeDeepWithKey(last, a, b), {\n      w: 1,\n      x: 2,\n      y: {\n        z: 3\n      },\n      a: 4,\n      b: 5,\n      c: {\n        d: 6\n      }\n    });\n  });","file":"mergeDeepWithKey.js","skipped":false,"dir":"test"},{"name":"is not destructive","suites":["mergeDeepWithKey"],"updatePoint":{"line":68,"column":24,"index":1240},"line":68,"code":"  it('is not destructive', function () {\n    var a = {\n      w: 1,\n      x: {\n        y: 2\n      }\n    };\n    var res = R.mergeDeepWithKey(last, a, {\n      x: {\n        y: 3\n      }\n    });\n    assert.notStrictEqual(a, res);\n    assert.notStrictEqual(a.x, res.x);\n    eq(res, {\n      w: 1,\n      x: {\n        y: 3\n      }\n    });\n  });","file":"mergeDeepWithKey.js","skipped":false,"dir":"test"},{"name":"reports only own properties","suites":["mergeDeepWithKey"],"updatePoint":{"line":89,"column":33,"index":1585},"line":89,"code":"  it('reports only own properties', function () {\n    var a = {\n      w: 1,\n      x: {\n        y: 2\n      }\n    };\n\n    function Cla() {}\n\n    Cla.prototype.y = 5;\n    eq(R.mergeDeepWithKey(last, {\n      x: new Cla()\n    }, a), {\n      w: 1,\n      x: {\n        y: 2\n      }\n    });\n    eq(R.mergeDeepWithKey(last, a, {\n      x: new Cla()\n    }), {\n      w: 1,\n      x: {\n        y: 2\n      }\n    });\n  });","file":"mergeDeepWithKey.js","skipped":false,"dir":"test"},{"name":"takes two objects, merges their own properties and returns a new object","suites":["mergeLeft"],"updatePoint":{"line":8,"column":77,"index":224},"line":8,"code":"  it('takes two objects, merges their own properties and returns a new object', function () {\n    var a = {\n      w: 1,\n      x: 2\n    };\n    var b = {\n      y: 3,\n      z: 4\n    };\n    eq(R.mergeLeft(a, b), {\n      w: 1,\n      x: 2,\n      y: 3,\n      z: 4\n    });\n  });","file":"mergeLeft.js","skipped":false,"dir":"test"},{"name":"overrides properties in the second object with properties in the first object","suites":["mergeLeft"],"updatePoint":{"line":24,"column":83,"index":501},"line":24,"code":"  it('overrides properties in the second object with properties in the first object', function () {\n    var a = {\n      w: 1,\n      x: 2\n    };\n    var b = {\n      w: 100,\n      y: 3,\n      z: 4\n    };\n    eq(R.mergeLeft(a, b), {\n      w: 1,\n      x: 2,\n      y: 3,\n      z: 4\n    });\n  });","file":"mergeLeft.js","skipped":false,"dir":"test"},{"name":"is not destructive","suites":["mergeLeft"],"updatePoint":{"line":41,"column":24,"index":733},"line":41,"code":"  it('is not destructive', function () {\n    var a = {\n      w: 1,\n      x: 2\n    };\n    var res = R.mergeLeft(a, {\n      x: 3,\n      y: 4\n    });\n    assert.notStrictEqual(a, res);\n    eq(res, {\n      w: 1,\n      x: 2,\n      y: 4\n    });\n  });","file":"mergeLeft.js","skipped":false,"dir":"test"},{"name":"reports only own properties","suites":["mergeLeft"],"updatePoint":{"line":57,"column":33,"index":987},"line":57,"code":"  it('reports only own properties', function () {\n    var a = {\n      w: 1,\n      x: 2\n    };\n\n    function Cla() {}\n\n    Cla.prototype.x = 5;\n    eq(R.mergeLeft(new Cla(), a), {\n      w: 1,\n      x: 2\n    });\n    eq(R.mergeLeft(a, new Cla()), {\n      w: 1,\n      x: 2\n    });\n  });","file":"mergeLeft.js","skipped":false,"dir":"test"},{"name":"is shallow","suites":["mergeLeft"],"updatePoint":{"line":75,"column":16,"index":1253},"line":75,"code":"  it('is shallow', function () {\n    var a = {\n      x: {\n        u: 1,\n        v: 2\n      },\n      y: 0\n    };\n    var b = {\n      x: {\n        u: 3,\n        w: 4\n      },\n      z: 0\n    };\n    var res = R.mergeLeft(a, b);\n    assert.strictEqual(a.x, res.x);\n    eq(res, {\n      x: {\n        u: 1,\n        v: 2\n      },\n      y: 0,\n      z: 0\n    });\n  });","file":"mergeLeft.js","skipped":false,"dir":"test"},{"name":"... if the first object is nil","suites":["mergeLeft","acts as if nil values are simply empty objects"],"updatePoint":{"line":111,"column":38,"index":1810},"line":111,"code":"    it('... if the first object is nil', function () {\n      eq(R.mergeLeft(null, b), b);\n    });","file":"mergeLeft.js","skipped":false,"dir":"test"},{"name":"... if the second object is nil","suites":["mergeLeft","acts as if nil values are simply empty objects"],"updatePoint":{"line":114,"column":39,"index":1909},"line":114,"code":"    it('... if the second object is nil', function () {\n      eq(R.mergeLeft(a, undefined), a);\n    });","file":"mergeLeft.js","skipped":false,"dir":"test"},{"name":"... if both objects are nil","suites":["mergeLeft","acts as if nil values are simply empty objects"],"updatePoint":{"line":117,"column":35,"index":2009},"line":117,"code":"    it('... if both objects are nil', function () {\n      eq(R.mergeLeft(null, undefined), {});\n    });","file":"mergeLeft.js","skipped":false,"dir":"test"},{"name":"takes two objects, merges their own properties and returns a new object","suites":["mergeRight"],"updatePoint":{"line":8,"column":77,"index":225},"line":8,"code":"  it('takes two objects, merges their own properties and returns a new object', function () {\n    var a = {\n      w: 1,\n      x: 2\n    };\n    var b = {\n      y: 3,\n      z: 4\n    };\n    eq(R.mergeRight(a, b), {\n      w: 1,\n      x: 2,\n      y: 3,\n      z: 4\n    });\n  });","file":"mergeRight.js","skipped":false,"dir":"test"},{"name":"overrides properties in the first object with properties in the second object","suites":["mergeRight"],"updatePoint":{"line":24,"column":83,"index":503},"line":24,"code":"  it('overrides properties in the first object with properties in the second object', function () {\n    var a = {\n      w: 1,\n      x: 2\n    };\n    var b = {\n      w: 100,\n      y: 3,\n      z: 4\n    };\n    eq(R.mergeRight(a, b), {\n      w: 100,\n      x: 2,\n      y: 3,\n      z: 4\n    });\n  });","file":"mergeRight.js","skipped":false,"dir":"test"},{"name":"is not destructive","suites":["mergeRight"],"updatePoint":{"line":41,"column":24,"index":738},"line":41,"code":"  it('is not destructive', function () {\n    var a = {\n      w: 1,\n      x: 2\n    };\n    var res = R.mergeRight(a, {\n      x: 5\n    });\n    assert.notStrictEqual(a, res);\n    eq(res, {\n      w: 1,\n      x: 5\n    });\n  });","file":"mergeRight.js","skipped":false,"dir":"test"},{"name":"reports only own properties","suites":["mergeRight"],"updatePoint":{"line":55,"column":33,"index":969},"line":55,"code":"  it('reports only own properties', function () {\n    var a = {\n      w: 1,\n      x: 2\n    };\n\n    function Cla() {}\n\n    Cla.prototype.x = 5;\n    eq(R.mergeRight(new Cla(), a), {\n      w: 1,\n      x: 2\n    });\n    eq(R.mergeRight(a, new Cla()), {\n      w: 1,\n      x: 2\n    });\n  });","file":"mergeRight.js","skipped":false,"dir":"test"},{"name":"is shallow","suites":["mergeRight"],"updatePoint":{"line":73,"column":16,"index":1237},"line":73,"code":"  it('is shallow', function () {\n    var a = {\n      x: {\n        u: 1,\n        v: 2\n      },\n      y: 0\n    };\n    var b = {\n      x: {\n        u: 3,\n        w: 4\n      },\n      z: 0\n    };\n    var res = R.mergeRight(a, b);\n    assert.strictEqual(b.x, res.x);\n    eq(res, {\n      x: {\n        u: 3,\n        w: 4\n      },\n      y: 0,\n      z: 0\n    });\n  });","file":"mergeRight.js","skipped":false,"dir":"test"},{"name":"... if the first object is nil","suites":["mergeRight","acts as if nil values are simply empty objects"],"updatePoint":{"line":109,"column":38,"index":1795},"line":109,"code":"    it('... if the first object is nil', function () {\n      eq(R.mergeRight(null, b), b);\n    });","file":"mergeRight.js","skipped":false,"dir":"test"},{"name":"... if the second object is nil","suites":["mergeRight","acts as if nil values are simply empty objects"],"updatePoint":{"line":112,"column":39,"index":1895},"line":112,"code":"    it('... if the second object is nil', function () {\n      eq(R.mergeRight(a, undefined), a);\n    });","file":"mergeRight.js","skipped":false,"dir":"test"},{"name":"... if both objects are nil","suites":["mergeRight","acts as if nil values are simply empty objects"],"updatePoint":{"line":115,"column":35,"index":1996},"line":115,"code":"    it('... if both objects are nil', function () {\n      eq(R.mergeRight(null, undefined), {});\n    });","file":"mergeRight.js","skipped":false,"dir":"test"},{"name":"takes two objects, merges their own properties and returns a new object","suites":["mergeWith"],"updatePoint":{"line":12,"column":77,"index":267},"line":12,"code":"  it('takes two objects, merges their own properties and returns a new object', function () {\n    var a = {\n      w: 1,\n      x: 2\n    };\n    var b = {\n      y: 3,\n      z: 4\n    };\n    eq(R.mergeWith(last, a, b), {\n      w: 1,\n      x: 2,\n      y: 3,\n      z: 4\n    });\n  });","file":"mergeWith.js","skipped":false,"dir":"test"},{"name":"is not destructive","suites":["mergeWith"],"updatePoint":{"line":46,"column":24,"index":924},"line":46,"code":"  it('is not destructive', function () {\n    var a = {\n      w: 1,\n      x: 2\n    };\n    var res = R.mergeWith(last, a, {\n      x: 5\n    });\n    assert.notStrictEqual(a, res);\n    eq(res, {\n      w: 1,\n      x: 5\n    });\n  });","file":"mergeWith.js","skipped":false,"dir":"test"},{"name":"reports only own properties","suites":["mergeWith"],"updatePoint":{"line":60,"column":33,"index":1160},"line":60,"code":"  it('reports only own properties', function () {\n    function Cla() {}\n\n    Cla.prototype.x = 5;\n    eq(R.mergeWith(last, new Cla(), {\n      w: 1,\n      x: 2\n    }), {\n      w: 1,\n      x: 2\n    });\n    eq(R.mergeWith(last, {\n      w: 1,\n      x: 2\n    }, new Cla()), {\n      w: 1,\n      x: 2\n    });\n    eq(R.mergeWith(last, new Cla(), {\n      w: 1\n    }), {\n      w: 1\n    });\n  });","file":"mergeWith.js","skipped":false,"dir":"test"},{"name":"... if the first object is nil and the second empty","suites":["mergeWith","acts as if nil values are simply empty objects"],"updatePoint":{"line":85,"column":59,"index":1647},"line":85,"code":"    it('... if the first object is nil and the second empty', function () {\n      eq(R.mergeWith(R.concat, undefined, {}), {});\n    });","file":"mergeWith.js","skipped":false,"dir":"test"},{"name":"... if the first object is empty and the second nil","suites":["mergeWith","acts as if nil values are simply empty objects"],"updatePoint":{"line":88,"column":59,"index":1783},"line":88,"code":"    it('... if the first object is empty and the second nil', function () {\n      eq(R.mergeWith(R.concat, {}, null), {});\n    });","file":"mergeWith.js","skipped":false,"dir":"test"},{"name":"... if both objects are nil","suites":["mergeWith","acts as if nil values are simply empty objects"],"updatePoint":{"line":91,"column":35,"index":1890},"line":91,"code":"    it('... if both objects are nil', function () {\n      eq(R.mergeWith(R.concat, undefined, null), {});\n    });","file":"mergeWith.js","skipped":false,"dir":"test"},{"name":"... if the first object is not empty and the second is nil","suites":["mergeWith","acts as if nil values are simply empty objects"],"updatePoint":{"line":94,"column":66,"index":2035},"line":94,"code":"    it('... if the first object is not empty and the second is nil', function () {\n      eq(R.mergeWith(R.concat, {\n        a: 'a'\n      }, null), {\n        a: 'a'\n      });\n    });","file":"mergeWith.js","skipped":false,"dir":"test"},{"name":"... if the first object is nil and the second is not empty","suites":["mergeWith","acts as if nil values are simply empty objects"],"updatePoint":{"line":101,"column":66,"index":2217},"line":101,"code":"    it('... if the first object is nil and the second is not empty', function () {\n      eq(R.mergeWith(R.concat, undefined, {\n        a: 'a'\n      }), {\n        a: 'a'\n      });\n    });","file":"mergeWith.js","skipped":false,"dir":"test"},{"name":"takes two objects, merges their own properties and returns a new object","suites":["mergeWithKey"],"updatePoint":{"line":12,"column":77,"index":273},"line":12,"code":"  it('takes two objects, merges their own properties and returns a new object', function () {\n    var a = {\n      w: 1,\n      x: 2\n    };\n    var b = {\n      y: 3,\n      z: 4\n    };\n    eq(R.mergeWithKey(last, a, b), {\n      w: 1,\n      x: 2,\n      y: 3,\n      z: 4\n    });\n  });","file":"mergeWithKey.js","skipped":false,"dir":"test"},{"name":"is not destructive","suites":["mergeWithKey"],"updatePoint":{"line":46,"column":24,"index":953},"line":46,"code":"  it('is not destructive', function () {\n    var a = {\n      w: 1,\n      x: 2\n    };\n    var res = R.mergeWithKey(last, a, {\n      x: 5\n    });\n    assert.notStrictEqual(a, res);\n    eq(res, {\n      w: 1,\n      x: 5\n    });\n  });","file":"mergeWithKey.js","skipped":false,"dir":"test"},{"name":"reports only own properties","suites":["mergeWithKey"],"updatePoint":{"line":60,"column":33,"index":1192},"line":60,"code":"  it('reports only own properties', function () {\n    var a = {\n      w: 1,\n      x: 2\n    };\n\n    function Cla() {}\n\n    Cla.prototype.x = 5;\n    eq(R.mergeWithKey(last, new Cla(), a), {\n      w: 1,\n      x: 2\n    });\n    eq(R.mergeWithKey(last, a, new Cla()), {\n      w: 1,\n      x: 2\n    });\n  });","file":"mergeWithKey.js","skipped":false,"dir":"test"},{"name":"... if the first object is nil","suites":["mergeWithKey","acts as if nil values are simply empty objects"],"updatePoint":{"line":97,"column":38,"index":1834},"line":97,"code":"    it('... if the first object is nil', function () {\n      eq(R.mergeWithKey(combine, null, b), b);\n    });","file":"mergeWithKey.js","skipped":false,"dir":"test"},{"name":"... if the second object is nil","suites":["mergeWithKey","acts as if nil values are simply empty objects"],"updatePoint":{"line":100,"column":39,"index":1945},"line":100,"code":"    it('... if the second object is nil', function () {\n      eq(R.mergeWithKey(combine, a, undefined), a);\n    });","file":"mergeWithKey.js","skipped":false,"dir":"test"},{"name":"... if both objects are nil","suites":["mergeWithKey","acts as if nil values are simply empty objects"],"updatePoint":{"line":103,"column":35,"index":2057},"line":103,"code":"    it('... if both objects are nil', function () {\n      eq(R.mergeWithKey(combine, null, undefined), {});\n    });","file":"mergeWithKey.js","skipped":false,"dir":"test"},{"name":"returns the smaller of its two arguments","suites":["min"],"updatePoint":{"line":6,"column":46,"index":154},"line":6,"code":"  it('returns the smaller of its two arguments', function () {\n    eq(R.min(-7, 7), -7);\n    eq(R.min(7, -7), -7);\n  });","file":"min.js","skipped":false,"dir":"test"},{"name":"works for any orderable type","suites":["min"],"updatePoint":{"line":10,"column":34,"index":263},"line":10,"code":"  it('works for any orderable type', function () {\n    var d1 = new Date('2001-01-01');\n    var d2 = new Date('2002-02-02');\n    eq(R.min(d1, d2), d1);\n    eq(R.min(d2, d1), d1);\n    eq(R.min('a', 'b'), 'a');\n    eq(R.min('b', 'a'), 'a');\n  });","file":"min.js","skipped":false,"dir":"test"},{"name":"returns the first argument if both arguments are equal according to the native JS strict equals operator","suites":["min"],"updatePoint":{"line":18,"column":110,"index":584},"line":18,"code":"  it('returns the first argument if both arguments are equal according to the native JS strict equals operator', function () {\n    eq(R.min(7, 7), 7);\n    eq(R.min(undefined, undefined), undefined);\n  });","file":"min.js","skipped":false,"dir":"test"},{"name":"returns the alphabetically earlier type if neither argument is smaller than the other","suites":["min"],"updatePoint":{"line":22,"column":91,"index":770},"line":22,"code":"  it('returns the alphabetically earlier type if neither argument is smaller than the other', function () {\n    eq(R.min('a', 7), 7);\n    eq(R.min('a', undefined), 'a');\n  });","file":"min.js","skipped":false,"dir":"test"},{"name":"returns the alphabetically earlier string coersion if no argument or type is smaller than the other","suites":["min"],"updatePoint":{"line":26,"column":105,"index":960},"line":26,"code":"  it('returns the alphabetically earlier string coersion if no argument or type is smaller than the other', function () {\n    const obj1 = {\n      a: 1\n    };\n    const obj2 = {\n      b: 1\n    };\n    eq(R.min(obj1, obj2), obj1);\n    eq(R.min(obj1, null), null);\n  });","file":"min.js","skipped":false,"dir":"test"},{"name":"returns the first argument if no other comparison attempts produce a result","suites":["min"],"updatePoint":{"line":36,"column":81,"index":1204},"line":36,"code":"  it('returns the first argument if no other comparison attempts produce a result', function () {\n    const obj1 = {\n      a: 1\n    };\n    eq(R.min(obj1, obj1), obj1);\n    eq(R.min(NaN, NaN), NaN);\n  });","file":"min.js","skipped":false,"dir":"test"},{"name":"returns the smaller value as determined by the function","suites":["minBy"],"updatePoint":{"line":6,"column":61,"index":171},"line":6,"code":"  it('returns the smaller value as determined by the function', function () {\n    eq(R.minBy(function (n) {\n      return n * n;\n    }, -3, 2), 2);\n    eq(R.minBy(R.prop('x'), {\n      x: 3,\n      y: 1\n    }, {\n      x: 5,\n      y: 10\n    }), {\n      x: 3,\n      y: 1\n    });\n  });","file":"minBy.js","skipped":false,"dir":"test"},{"name":"creates a new object by applying the `transformation` function to the given `property` of the `object`","suites":["modify"],"updatePoint":{"line":6,"column":108,"index":219},"line":6,"code":"  it('creates a new object by applying the `transformation` function to the given `property` of the `object`', function () {\n    var object = {\n      name: 'Tomato',\n      elapsed: 100,\n      remaining: 1400\n    };\n    var expected = {\n      name: 'Tomato',\n      elapsed: 101,\n      remaining: 1400\n    };\n    eq(R.modify('elapsed', R.add(1), object), expected);\n  });","file":"modify.js","skipped":false,"dir":"test"},{"name":"returns the original object if object does not contain the property","suites":["modify"],"updatePoint":{"line":19,"column":73,"index":554},"line":19,"code":"  it('returns the original object if object does not contain the property', function () {\n    var object = {\n      name: 'Tomato',\n      elapsed: 100,\n      remaining: 1400\n    };\n    eq(R.modify('nonexistent', R.add(1), object), object);\n  });","file":"modify.js","skipped":false,"dir":"test"},{"name":"is not destructive","suites":["modify"],"updatePoint":{"line":27,"column":24,"index":750},"line":27,"code":"  it('is not destructive', function () {\n    var object = {\n      name: 'Tomato',\n      elapsed: 100,\n      remaining: 1400\n    };\n    var expected = {\n      name: 'Tomato',\n      elapsed: 100,\n      remaining: 1400\n    };\n    R.modify('elapsed', R.add(1), object);\n    eq(object, expected);\n  });","file":"modify.js","skipped":false,"dir":"test"},{"name":"ignores primitive value transformations","suites":["modify"],"updatePoint":{"line":41,"column":45,"index":1069},"line":41,"code":"  it('ignores primitive value transformations', function () {\n    var object = {\n      n: 0,\n      m: 1\n    };\n    var expected = {\n      n: 0,\n      m: 1\n    };\n    eq(R.modify('elapsed', 2, object), expected);\n  });","file":"modify.js","skipped":false,"dir":"test"},{"name":"ignores null transformations","suites":["modify"],"updatePoint":{"line":52,"column":34,"index":1276},"line":52,"code":"  it('ignores null transformations', function () {\n    var object = {\n      n: 0\n    };\n    var expected = {\n      n: 0\n    };\n    eq(R.modify('elapsed', null, object), expected);\n  });","file":"modify.js","skipped":false,"dir":"test"},{"name":"adjust if `array` at the given key with the `transformation` function","suites":["modify"],"updatePoint":{"line":61,"column":75,"index":1503},"line":61,"code":"  it('adjust if `array` at the given key with the `transformation` function', function () {\n    var object = [100, 1400];\n    var expected = [100, 1401];\n    eq(R.modify(1, R.add(1), object), expected);\n  });","file":"modify.js","skipped":false,"dir":"test"},{"name":"ignores transformations if the input value is not Array and Object","suites":["modify"],"updatePoint":{"line":66,"column":72,"index":1709},"line":66,"code":"  it('ignores transformations if the input value is not Array and Object', function () {\n    eq(R.modify('a', R.add(1), 42), 42);\n    eq(R.modify('a', R.add(1), undefined), undefined);\n    eq(R.modify('a', R.add(1), null), null);\n    eq(R.modify('a', R.add(1), ''), '');\n  }); // TODO: check reference equality?","file":"modify.js","skipped":false,"dir":"test"},{"name":"creates a new object by applying the `transformation` function to the given `properties` of the `object`","suites":["modifyPath"],"updatePoint":{"line":8,"column":110,"index":258},"line":8,"code":"  it('creates a new object by applying the `transformation` function to the given `properties` of the `object`', function () {\n    var object = {\n      a: 'Tomato',\n      b: {\n        c: {\n          d: [100, 101, 102]\n        }\n      },\n      e: {\n        f: 'g',\n        h: [1, 2, 3]\n      }\n    };\n    var expected = {\n      a: 'Tomato',\n      b: {\n        c: {\n          d: [100, 102, 102]\n        }\n      },\n      e: {\n        f: 'g',\n        h: [1, 2, 3]\n      }\n    };\n    var created = R.modifyPath(['b', 'c', 'd', 1], R.add(1), object);\n    eq(created, expected); // Note: reference equality below!\n\n    assert.strictEqual(object.a, created.a);\n    assert.strictEqual(object.e, created.e);\n    assert.strictEqual(object.e.h, created.e.h);\n  });","file":"modifyPath.js","skipped":false,"dir":"test"},{"name":"returns the original object if object does not contain the key","suites":["modifyPath"],"updatePoint":{"line":40,"column":68,"index":969},"line":40,"code":"  it('returns the original object if object does not contain the key', function () {\n    var object = {\n      a: 'Tomato',\n      b: {\n        c: {\n          d: [100, 101, 102]\n        }\n      },\n      e: {\n        f: 'g',\n        h: [1, 2, 3]\n      }\n    };\n    var created = R.modifyPath(['b', 'nonexistent', 'd', 1], R.add(1), object);\n    eq(created, object); // Note: reference equality below!\n\n    assert.strictEqual(object, created);\n  });","file":"modifyPath.js","skipped":false,"dir":"test"},{"name":"is not destructive","suites":["modifyPath"],"updatePoint":{"line":58,"column":24,"index":1371},"line":58,"code":"  it('is not destructive', function () {\n    var object = {\n      a: 'Tomato',\n      b: {\n        c: {\n          d: [100, 101, 102]\n        }\n      },\n      e: {\n        f: 'g',\n        h: [1, 2, 3]\n      }\n    };\n    var expected = {\n      a: 'Tomato',\n      b: {\n        c: {\n          d: [100, 101, 102]\n        }\n      },\n      e: {\n        f: 'g',\n        h: [1, 2, 3]\n      }\n    };\n    R.modifyPath(['b', 'c', 'd', 1], R.add(1), object);\n    eq(object, expected);\n  });","file":"modifyPath.js","skipped":false,"dir":"test"},{"name":"throws error for non-function transformations","suites":["modifyPath"],"updatePoint":{"line":86,"column":51,"index":1875},"line":86,"code":"  it('throws error for non-function transformations', function () {\n    var object = {\n      a: 'Tomato',\n      b: {\n        c: {\n          d: [100, 101, 102]\n        }\n      },\n      e: {\n        f: 'g',\n        h: [1, 2, 3]\n      }\n    };\n    assert.throws(function () {\n      R.modifyPath(['b', 'c', 'd', 1], 2, object);\n    }, function (err) {\n      return err.constructor === TypeError && err.message === 'fn is not a function';\n    });\n  });","file":"modifyPath.js","skipped":false,"dir":"test"},{"name":"divides the first param by the second and returns the remainder","suites":["modulo"],"updatePoint":{"line":6,"column":69,"index":180},"line":6,"code":"  it('divides the first param by the second and returns the remainder', function () {\n    eq(R.modulo(100, 2), 0);\n    eq(R.modulo(100, 3), 1);\n    eq(R.modulo(100, 17), 15);\n  });","file":"modulo.js","skipped":false,"dir":"test"},{"name":"preserves javascript-style modulo evaluation for negative numbers","suites":["modulo"],"updatePoint":{"line":11,"column":71,"index":363},"line":11,"code":"  it('preserves javascript-style modulo evaluation for negative numbers', function () {\n    eq(R.modulo(-5, 4), -1);\n  });","file":"modulo.js","skipped":false,"dir":"test"},{"name":"moves an element from an index to another","suites":["move"],"updatePoint":{"line":7,"column":47,"index":199},"line":7,"code":"  it('moves an element from an index to another', function () {\n    eq(R.move(0, 1, list), ['b', 'a', 'c', 'd', 'e', 'f']);\n    eq(R.move(2, 1, list), ['a', 'c', 'b', 'd', 'e', 'f']);\n    eq(R.move(-1, 0, list), ['f', 'a', 'b', 'c', 'd', 'e']);\n    eq(R.move(0, -1, list), ['b', 'c', 'd', 'e', 'f', 'a']);\n  });","file":"move.js","skipped":false,"dir":"test"},{"name":"does nothing when indexes are outside the list outbounds","suites":["move"],"updatePoint":{"line":13,"column":62,"index":526},"line":13,"code":"  it('does nothing when indexes are outside the list outbounds', function () {\n    eq(R.move(-20, 2, list), list);\n    eq(R.move(20, 2, list), list);\n    eq(R.move(2, 20, list), list);\n    eq(R.move(2, -20, list), list);\n    eq(R.move(20, 20, list), list);\n    eq(R.move(-20, -20, list), list);\n  });","file":"move.js","skipped":false,"dir":"test"},{"name":"multiplies together two numbers","suites":["multiply"],"updatePoint":{"line":6,"column":37,"index":150},"line":6,"code":"  it('multiplies together two numbers', function () {\n    eq(R.multiply(6, 7), 42);\n  });","file":"multiply.js","skipped":false,"dir":"test"},{"name":"turns multiple-argument function into a nullary one","suites":["nAry"],"updatePoint":{"line":12,"column":57,"index":279},"line":12,"code":"  it('turns multiple-argument function into a nullary one', function () {\n    var fn = R.nAry(0, function (x, y, z) {\n      void z;\n      return toArray(arguments);\n    });\n    eq(fn.length, 0);\n    eq(fn(1, 2, 3), []);\n  });","file":"nAry.js","skipped":false,"dir":"test"},{"name":"turns multiple-argument function into a ternary one","suites":["nAry"],"updatePoint":{"line":20,"column":57,"index":505},"line":20,"code":"  it('turns multiple-argument function into a ternary one', function () {\n    var fn = R.nAry(3, function (a, b, c, d) {\n      void d;\n      return toArray(arguments);\n    });\n    eq(fn.length, 3);\n    eq(fn(1, 2, 3, 4), [1, 2, 3]);\n    eq(fn(1), [1, undefined, undefined]);\n  });","file":"nAry.js","skipped":false,"dir":"test"},{"name":"creates functions of arity less than or equal to ten","suites":["nAry"],"updatePoint":{"line":29,"column":58,"index":787},"line":29,"code":"  it('creates functions of arity less than or equal to ten', function () {\n    var fn = R.nAry(10, function () {\n      return toArray(arguments);\n    });\n    eq(fn.length, 10);\n    eq(fn.apply(null, R.range(0, 25)), R.range(0, 10));\n    var undefs = fn();\n    var ns = R.repeat(undefined, 10);\n    eq(undefs.length, ns.length);\n    var idx = undefs.length - 1;\n\n    while (idx >= 0) {\n      eq(undefs[idx], ns[idx]);\n      idx -= 1;\n    }\n  });","file":"nAry.js","skipped":false,"dir":"test"},{"name":"throws if n is greater than ten","suites":["nAry"],"updatePoint":{"line":45,"column":37,"index":1211},"line":45,"code":"  it('throws if n is greater than ten', function () {\n    assert.throws(function () {\n      R.nAry(11, function () {});\n    }, function (err) {\n      return err instanceof Error && err.message === 'First argument to nAry must be a non-negative integer no greater than ten';\n    });\n  });","file":"nAry.js","skipped":false,"dir":"test"},{"name":"negates its argument","suites":["negate"],"updatePoint":{"line":6,"column":26,"index":137},"line":6,"code":"  it('negates its argument', function () {\n    eq(R.negate(-Infinity), Infinity);\n    eq(R.negate(-1), 1);\n    eq(R.negate(-0), 0);\n    eq(R.negate(0), -0);\n    eq(R.negate(1), -1);\n    eq(R.negate(Infinity), -Infinity);\n  });","file":"negate.js","skipped":false,"dir":"test"},{"name":"returns true if no elements satisfy the predicate","suites":["none"],"updatePoint":{"line":14,"column":55,"index":269},"line":14,"code":"  it('returns true if no elements satisfy the predicate', function () {\n    eq(R.none(even, [1, 3, 5, 7, 9, 11]), true);\n  });","file":"none.js","skipped":false,"dir":"test"},{"name":"returns false if any element satisfies the predicate","suites":["none"],"updatePoint":{"line":17,"column":58,"index":399},"line":17,"code":"  it('returns false if any element satisfies the predicate', function () {\n    eq(R.none(even, [1, 3, 5, 7, 8, 11]), false);\n  });","file":"none.js","skipped":false,"dir":"test"},{"name":"returns true for an empty list","suites":["none"],"updatePoint":{"line":20,"column":36,"index":508},"line":20,"code":"  it('returns true for an empty list', function () {\n    eq(R.none(T, []), true);\n  });","file":"none.js","skipped":false,"dir":"test"},{"name":"works with more complex objects","suites":["none"],"updatePoint":{"line":23,"column":37,"index":597},"line":23,"code":"  it('works with more complex objects', function () {\n    var xs = [{\n      x: 'abcd'\n    }, {\n      x: 'adef'\n    }, {\n      x: 'fghiajk'\n    }];\n\n    function len3(o) {\n      return o.x.length === 3;\n    }\n\n    function hasA(o) {\n      return o.x.indexOf('a') >= 0;\n    }\n\n    eq(R.none(len3, xs), true);\n    eq(R.none(hasA, xs), false);\n  });","file":"none.js","skipped":false,"dir":"test"},{"name":"can act as a transducer","suites":["none"],"updatePoint":{"line":43,"column":29,"index":935},"line":43,"code":"  it('can act as a transducer', function () {\n    eq(R.into([], R.none(even), [1, 3, 5, 7, 9, 11]), [true]);\n    eq(R.transduce(R.none(even), R.flip(R.append), [], [1, 3, 5, 7, 9, 11]), [true]);\n  });","file":"none.js","skipped":false,"dir":"test"},{"name":"reverses argument","suites":["not"],"updatePoint":{"line":6,"column":23,"index":131},"line":6,"code":"  it('reverses argument', function () {\n    eq(R.not(false), true);\n    eq(R.not(1), false);\n    eq(R.not(''), true);\n  });","file":"not.js","skipped":false,"dir":"test"},{"name":"accepts positive offsets","suites":["nth"],"updatePoint":{"line":9,"column":30,"index":215},"line":9,"code":"  it('accepts positive offsets', function () {\n    eq(R.nth(0, list), 'foo');\n    eq(R.nth(1, list), 'bar');\n    eq(R.nth(2, list), 'baz');\n    eq(R.nth(3, list), 'quux');\n    eq(R.nth(4, list), undefined);\n    eq(R.nth(0, 'abc'), 'a');\n    eq(R.nth(1, 'abc'), 'b');\n    eq(R.nth(2, 'abc'), 'c');\n    eq(R.nth(3, 'abc'), '');\n  });","file":"nth.js","skipped":false,"dir":"test"},{"name":"accepts negative offsets","suites":["nth"],"updatePoint":{"line":20,"column":30,"index":547},"line":20,"code":"  it('accepts negative offsets', function () {\n    eq(R.nth(-1, list), 'quux');\n    eq(R.nth(-2, list), 'baz');\n    eq(R.nth(-3, list), 'bar');\n    eq(R.nth(-4, list), 'foo');\n    eq(R.nth(-5, list), undefined);\n    eq(R.nth(-1, 'abc'), 'c');\n    eq(R.nth(-2, 'abc'), 'b');\n    eq(R.nth(-3, 'abc'), 'a');\n    eq(R.nth(-4, 'abc'), '');\n  });","file":"nth.js","skipped":false,"dir":"test"},{"name":"throws if applied to null or undefined","suites":["nth"],"updatePoint":{"line":31,"column":44,"index":902},"line":31,"code":"  it('throws if applied to null or undefined', function () {\n    assert.throws(function () {\n      R.nth(0, null);\n    }, TypeError);\n    assert.throws(function () {\n      R.nth(0, undefined);\n    }, TypeError);\n  });","file":"nth.js","skipped":false,"dir":"test"},{"name":"returns a function which returns its nth argument","suites":["nthArg"],"updatePoint":{"line":6,"column":55,"index":166},"line":6,"code":"  it('returns a function which returns its nth argument', function () {\n    eq(R.nthArg(0)('foo', 'bar'), 'foo');\n    eq(R.nthArg(1)('foo', 'bar'), 'bar');\n  });","file":"nthArg.js","skipped":false,"dir":"test"},{"name":"accepts negative offsets","suites":["nthArg"],"updatePoint":{"line":10,"column":30,"index":303},"line":10,"code":"  it('accepts negative offsets', function () {\n    eq(R.nthArg(-1)('foo', 'bar'), 'bar');\n    eq(R.nthArg(-2)('foo', 'bar'), 'foo');\n    eq(R.nthArg(-3)('foo', 'bar'), undefined);\n  });","file":"nthArg.js","skipped":false,"dir":"test"},{"name":"returns a function with length n + 1 when n >= 0","suites":["nthArg"],"updatePoint":{"line":15,"column":54,"index":513},"line":15,"code":"  it('returns a function with length n + 1 when n >= 0', function () {\n    eq(R.nthArg(0).length, 1);\n    eq(R.nthArg(1).length, 2);\n    eq(R.nthArg(2).length, 3);\n    eq(R.nthArg(3).length, 4);\n  });","file":"nthArg.js","skipped":false,"dir":"test"},{"name":"returns a function with length 1 when n < 0","suites":["nthArg"],"updatePoint":{"line":21,"column":49,"index":709},"line":21,"code":"  it('returns a function with length 1 when n < 0', function () {\n    eq(R.nthArg(-1).length, 1);\n    eq(R.nthArg(-2).length, 1);\n    eq(R.nthArg(-3).length, 1);\n  });","file":"nthArg.js","skipped":false,"dir":"test"},{"name":"returns a curried function","suites":["nthArg"],"updatePoint":{"line":26,"column":32,"index":860},"line":26,"code":"  it('returns a curried function', function () {\n    eq(R.nthArg(1)('foo', 'bar'), R.nthArg(1)('foo')('bar'));\n    eq(R.nthArg(2)('foo', 'bar', 'baz'), R.nthArg(2)('foo')('bar')('baz'));\n  });","file":"nthArg.js","skipped":false,"dir":"test"},{"name":"is not a variadic function","suites":["o"],"updatePoint":{"line":8,"column":32,"index":171},"line":8,"code":"  it('is not a variadic function', function () {\n    eq(typeof R.o, 'function');\n    eq(R.o.length, 3);\n  });","file":"o.js","skipped":false,"dir":"test"},{"name":"is a curried function","suites":["o"],"updatePoint":{"line":12,"column":27,"index":276},"line":12,"code":"  it('is a curried function', function () {\n    eq(R.o(R.add(1), R.multiply(2), 10), R.o(R.add(1))(R.multiply(2))(10));\n  });","file":"o.js","skipped":false,"dir":"test"},{"name":"performs right-to-left function composition","suites":["o"],"updatePoint":{"line":15,"column":49,"index":424},"line":15,"code":"  it('performs right-to-left function composition', function () {\n    //  f :: Number -> ([Number] -> [Number])\n    var f = R.o(R.map, R.multiply);\n    eq(f.length, 1);\n    eq(f(10)([1, 2, 3]), [10, 20, 30]);\n  });","file":"o.js","skipped":false,"dir":"test"},{"name":"composes two functions","suites":["o","o properties"],"updatePoint":{"line":22,"column":30,"index":661},"line":22,"code":"    it('composes two functions', function () {\n      fc.assert(fc.property(fc.func(fc.nat()), fc.func(fc.nat()), fc.nat(), function (f, g, x) {\n        return R.equals(R.o(f, g)(x), f(g(x)));\n      }));\n    });","file":"o.js","skipped":false,"dir":"test"},{"name":"associative","suites":["o","o properties"],"updatePoint":{"line":27,"column":19,"index":861},"line":27,"code":"    it('associative', function () {\n      fc.assert(fc.property(fc.func(fc.nat()), fc.func(fc.nat()), fc.func(fc.nat()), fc.nat(), function (f, g, h, x) {\n        var result = f(g(h(x)));\n        var fg = R.o(f, g);\n        var gh = R.o(g, h);\n        return R.all(R.equals(result), [R.o(f, gh, x), R.o(fg, h, x), R.o(f, gh)(x), R.o(fg, h)(x)]);\n      }));\n    });","file":"o.js","skipped":false,"dir":"test"},{"name":"creates an object containing a single key:value pair","suites":["objOf"],"updatePoint":{"line":6,"column":58,"index":168},"line":6,"code":"  it('creates an object containing a single key:value pair', function () {\n    eq(R.objOf('foo', 42), {\n      foo: 42\n    });\n    eq(R.objOf('foo')(42), {\n      foo: 42\n    });\n  });","file":"objOf.js","skipped":false,"dir":"test"},{"name":"returns its argument as an Array","suites":["of"],"updatePoint":{"line":8,"column":38,"index":176},"line":8,"code":"  it('returns its argument as an Array', function () {\n    eq(R.of(Array, 100), [100]);\n    eq(R.of(Array, [100]), [[100]]);\n    eq(R.of(Array, null), [null]);\n    eq(R.of(Array, undefined), [undefined]);\n    eq(R.of(Array, []), [[]]);\n  });","file":"of.js","skipped":false,"dir":"test"},{"name":"dispatches to an available of method","suites":["of"],"updatePoint":{"line":15,"column":42,"index":422},"line":15,"code":"  it('dispatches to an available of method', function () {\n    eq(R.of(S.Maybe, 100), S.Just(100));\n  });","file":"of.js","skipped":false,"dir":"test"},{"name":"copies an object omitting the listed properties","suites":["omit"],"updatePoint":{"line":14,"column":53,"index":240},"line":14,"code":"  it('copies an object omitting the listed properties', function () {\n    eq(R.omit(['a', 'c', 'f'], obj), {\n      b: 2,\n      d: 4,\n      e: 5\n    });\n  });","file":"omit.js","skipped":false,"dir":"test"},{"name":"includes prototype properties","suites":["omit"],"updatePoint":{"line":21,"column":35,"index":380},"line":21,"code":"  it('includes prototype properties', function () {\n    var F = function (param) {\n      this.x = param;\n    };\n\n    F.prototype.y = 40;\n    F.prototype.z = 50;\n    var obj = new F(30);\n    obj.v = 10;\n    obj.w = 20;\n    eq(R.omit(['w', 'x', 'y'], obj), {\n      v: 10,\n      z: 50\n    });\n  });","file":"omit.js","skipped":false,"dir":"test"},{"name":"transforms and combines two values","suites":["on"],"updatePoint":{"line":6,"column":40,"index":147},"line":6,"code":"  it('transforms and combines two values', function () {\n    const containsInsensitive = R.on(R.includes, R.toLower);\n    eq(containsInsensitive('o', 'FOO'), true);\n  });","file":"on.js","skipped":false,"dir":"test"},{"name":"returns a function that calls the supplied function only the first time called","suites":["once"],"updatePoint":{"line":6,"column":84,"index":193},"line":6,"code":"  it('returns a function that calls the supplied function only the first time called', function () {\n    var ctr = 0;\n    var fn = R.once(function () {\n      ctr += 1;\n    });\n    fn();\n    eq(ctr, 1);\n    fn();\n    eq(ctr, 1);\n    fn();\n    eq(ctr, 1);\n  });","file":"once.js","skipped":false,"dir":"test"},{"name":"passes along arguments supplied","suites":["once"],"updatePoint":{"line":18,"column":37,"index":406},"line":18,"code":"  it('passes along arguments supplied', function () {\n    var fn = R.once(function (a, b) {\n      return a + b;\n    });\n    var result = fn(5, 10);\n    eq(result, 15);\n  });","file":"once.js","skipped":false,"dir":"test"},{"name":"retains and returns the first value calculated, even if different arguments are passed later","suites":["once"],"updatePoint":{"line":25,"column":98,"index":641},"line":25,"code":"  it('retains and returns the first value calculated, even if different arguments are passed later', function () {\n    var ctr = 0;\n    var fn = R.once(function (a, b) {\n      ctr += 1;\n      return a + b;\n    });\n    var result = fn(5, 10);\n    eq(result, 15);\n    eq(ctr, 1);\n    result = fn(20, 30);\n    eq(result, 15);\n    eq(ctr, 1);\n  });","file":"once.js","skipped":false,"dir":"test"},{"name":"retains arity","suites":["once"],"updatePoint":{"line":38,"column":19,"index":907},"line":38,"code":"  it('retains arity', function () {\n    var f = R.once(function (a, b) {\n      return a + b;\n    });\n    eq(f.length, 2);\n  });","file":"once.js","skipped":false,"dir":"test"},{"name":"compares two values with js ||","suites":["or"],"updatePoint":{"line":6,"column":36,"index":143},"line":6,"code":"  it('compares two values with js ||', function () {\n    eq(R.or(true, true), true);\n    eq(R.or(true, false), true);\n    eq(R.or(false, true), true);\n    eq(R.or(false, false), false);\n  });","file":"or.js","skipped":false,"dir":"test"},{"name":"catches failed promises","suites":["otherwise"],"updatePoint":{"line":8,"column":29,"index":176},"line":8,"code":"  it('catches failed promises', function (done) {\n    R.otherwise(function (n) {\n      eq(n, 1);\n      done();\n    }, Promise.reject(1));\n  });","file":"otherwise.js","skipped":false,"dir":"test"},{"name":"does nothing to successfully resolved promises","suites":["otherwise"],"updatePoint":{"line":14,"column":52,"index":343},"line":14,"code":"  it('does nothing to successfully resolved promises', function (done) {\n    var asyncAddTwo = R.pipe(Promise.resolve.bind(Promise), R.andThen(R.inc), R.otherwise(R.multiply(0)), R.andThen(R.inc));\n    R.andThen(function (result) {\n      eq(result, 3);\n      done();\n    })(asyncAddTwo(1));\n  });","file":"otherwise.js","skipped":false,"dir":"test"},{"name":"throws a typeError if the then method does not exist","suites":["otherwise"],"updatePoint":{"line":21,"column":58,"index":646},"line":21,"code":"  it('throws a typeError if the then method does not exist', function () {\n    assert.throws(function () {\n      R.otherwise(R.inc, 1);\n    }, function (err) {\n      return err.constructor === TypeError && err.message === '`otherwise` expected a Promise, received 1';\n    });\n  });","file":"otherwise.js","skipped":false,"dir":"test"},{"name":"creates a two-element array","suites":["pair"],"updatePoint":{"line":6,"column":33,"index":142},"line":6,"code":"  it('creates a two-element array', function () {\n    eq(R.pair('foo', 'bar'), ['foo', 'bar']);\n    eq(R.pair('foo')('bar'), ['foo', 'bar']);\n  });","file":"pair.js","skipped":false,"dir":"test"},{"name":"caches the initially supplied arguments","suites":["partial"],"updatePoint":{"line":11,"column":45,"index":258},"line":11,"code":"  it('caches the initially supplied arguments', function () {\n    var f = R.partial(disc, [3]);\n    eq(f(7, 4), 1);\n    var g = R.partial(disc, [3, 7]);\n    eq(g(4), 1);\n  });","file":"partial.js","skipped":false,"dir":"test"},{"name":"correctly reports the arity of the new function","suites":["partial"],"updatePoint":{"line":17,"column":53,"index":442},"line":17,"code":"  it('correctly reports the arity of the new function', function () {\n    var f = R.partial(disc, [3]);\n    eq(f.length, 2);\n    var g = R.partial(disc, [3, 7]);\n    eq(g.length, 1);\n  });","file":"partial.js","skipped":false,"dir":"test"},{"name":"caches the initially supplied arguments","suites":["partialObject"],"updatePoint":{"line":14,"column":45,"index":259},"line":14,"code":"  it('caches the initially supplied arguments', function () {\n    var f = R.partialObject(discriminant, {\n      a: 3\n    });\n    eq(f({\n      b: 7,\n      c: 4\n    }), 1);\n    var g = R.partialObject(discriminant, {\n      a: 3,\n      b: 7\n    });\n    eq(g({\n      c: 4\n    }), 1);\n  });","file":"partialObject.js","skipped":false,"dir":"test"},{"name":"works regardless of property order","suites":["partialObject"],"updatePoint":{"line":30,"column":40,"index":540},"line":30,"code":"  it('works regardless of property order', function () {\n    var f = R.partialObject(discriminant, {\n      b: 7\n    });\n    eq(f({\n      c: 4,\n      a: 3\n    }), 1);\n    var g = R.partialObject(discriminant, {\n      a: 3\n    });\n    var h = R.partialObject(g, {\n      c: 4\n    });\n    eq(h({\n      b: 7\n    }), 1);\n  });","file":"partialObject.js","skipped":false,"dir":"test"},{"name":"merges deeply right","suites":["partialObject"],"updatePoint":{"line":48,"column":25,"index":846},"line":48,"code":"  it('merges deeply right', function () {\n    var nestedDiscriminant = function ({\n      a,\n      c,\n      d\n    }) {\n      return d.b * d.b - 4 * a * c;\n    };\n\n    var f = R.partialObject(nestedDiscriminant, {\n      a: 0,\n      d: {\n        b: 0\n      }\n    });\n    var g = R.partialObject(f, {\n      a: 3,\n      d: {\n        b: 7\n      }\n    });\n    eq(g({\n      c: 4\n    }), 1);\n  });","file":"partialObject.js","skipped":false,"dir":"test"},{"name":"caches the initially supplied arguments","suites":["partialRight"],"updatePoint":{"line":11,"column":45,"index":263},"line":11,"code":"  it('caches the initially supplied arguments', function () {\n    var f = R.partialRight(disc, [4]);\n    eq(f(3, 7), 1);\n    var g = R.partialRight(disc, [7, 4]);\n    eq(g(3), 1);\n  });","file":"partialRight.js","skipped":false,"dir":"test"},{"name":"correctly reports the arity of the new function","suites":["partialRight"],"updatePoint":{"line":17,"column":53,"index":457},"line":17,"code":"  it('correctly reports the arity of the new function', function () {\n    var f = R.partialRight(disc, [4]);\n    eq(f.length, 2);\n    var g = R.partialRight(disc, [7, 4]);\n    eq(g.length, 1);\n  });","file":"partialRight.js","skipped":false,"dir":"test"},{"name":"splits a list into two lists according to a predicate","suites":["partition"],"updatePoint":{"line":8,"column":59,"index":204},"line":8,"code":"  it('splits a list into two lists according to a predicate', function () {\n    var pred = function (n) {\n      return n % 2;\n    };\n\n    eq(R.partition(pred, []), [[], []]);\n    eq(R.partition(pred, [0, 2, 4, 6]), [[], [0, 2, 4, 6]]);\n    eq(R.partition(pred, [1, 3, 5, 7]), [[1, 3, 5, 7], []]);\n    eq(R.partition(pred, [0, 1, 2, 3]), [[1, 3], [0, 2]]);\n  });","file":"partition.js","skipped":false,"dir":"test"},{"name":"works with objects","suites":["partition"],"updatePoint":{"line":18,"column":24,"index":531},"line":18,"code":"  it('works with objects', function () {\n    var pred = function (n) {\n      return n % 2;\n    };\n\n    eq(R.partition(pred, {}), [{}, {}]);\n    eq(R.partition(pred, {\n      a: 0,\n      b: 2,\n      c: 4,\n      d: 6\n    }), [{}, {\n      a: 0,\n      b: 2,\n      c: 4,\n      d: 6\n    }]);\n    eq(R.partition(pred, {\n      a: 1,\n      b: 3,\n      c: 5,\n      d: 7\n    }), [{\n      a: 1,\n      b: 3,\n      c: 5,\n      d: 7\n    }, {}]);\n    eq(R.partition(pred, {\n      a: 0,\n      b: 1,\n      c: 2,\n      d: 3\n    }), [{\n      b: 1,\n      d: 3\n    }, {\n      a: 0,\n      c: 2\n    }]);\n  });","file":"partition.js","skipped":false,"dir":"test"},{"name":"works with other filterables","suites":["partition"],"updatePoint":{"line":59,"column":34,"index":1126},"line":59,"code":"  it('works with other filterables', function () {\n    eq(R.partition(R.isEmpty, S.Just(3)), [S.Nothing(), S.Just(3)]);\n    eq(R.partition(R.complement(R.isEmpty), S.Just(3)), [S.Just(3), S.Nothing()]);\n  });","file":"partition.js","skipped":false,"dir":"test"},{"name":"takes a path and an object and returns the value at the path or undefined","suites":["path"],"updatePoint":{"line":17,"column":79,"index":355},"line":17,"code":"  it('takes a path and an object and returns the value at the path or undefined', function () {\n    var obj = {\n      a: {\n        b: {\n          c: 100,\n          d: 200\n        },\n        e: {\n          f: [100, 101, 102],\n          g: 'G'\n        },\n        h: 'H'\n      },\n      i: 'I',\n      j: ['J']\n    };\n    eq(R.path(['a', 'b', 'c'], obj), 100);\n    eq(R.path([], obj), obj);\n    eq(R.path(['a', 'e', 'f', 1], obj), 101);\n    eq(R.path(['j', 0], obj), 'J');\n    eq(R.path(['j', 1], obj), undefined);\n  });","file":"path.js","skipped":false,"dir":"test"},{"name":"takes a path that contains indices into arrays","suites":["path"],"updatePoint":{"line":39,"column":52,"index":844},"line":39,"code":"  it('takes a path that contains indices into arrays', function () {\n    var obj = {\n      a: [[{}], [{\n        x: 'first'\n      }, {\n        x: 'second'\n      }, {\n        x: 'third'\n      }, {\n        x: 'last'\n      }]]\n    };\n    eq(R.path(['a', 0, 0], obj), {});\n    eq(R.path(['a', 0, 1], obj), undefined);\n    eq(R.path(['a', 1, 0, 'x'], obj), 'first');\n    eq(R.path(['a', 1, 1, 'x'], obj), 'second');\n    eq(R.path([0], ['A']), 'A');\n  });","file":"path.js","skipped":false,"dir":"test"},{"name":"takes a path that contains negative indices into arrays","suites":["path"],"updatePoint":{"line":57,"column":61,"index":1302},"line":57,"code":"  it('takes a path that contains negative indices into arrays', function () {\n    eq(R.path(['x', -2], {\n      x: ['a', 'b', 'c', 'd']\n    }), 'c');\n    eq(R.path([-1, 'y'], [{\n      x: 1,\n      y: 99\n    }, {\n      x: 2,\n      y: 98\n    }, {\n      x: 3,\n      y: 97\n    }]), 97);\n  });","file":"path.js","skipped":false,"dir":"test"},{"name":"gets a deep property's value from objects","suites":["path"],"updatePoint":{"line":72,"column":47,"index":1575},"line":72,"code":"  it(\"gets a deep property's value from objects\", function () {\n    eq(R.path(['a', 'b', 'c'], deepObject), 'c');\n    eq(R.path(['a'], deepObject), deepObject.a);\n  });","file":"path.js","skipped":false,"dir":"test"},{"name":"returns undefined for items not found","suites":["path"],"updatePoint":{"line":76,"column":43,"index":1740},"line":76,"code":"  it('returns undefined for items not found', function () {\n    eq(R.path(['a', 'b', 'foo'], deepObject), undefined);\n    eq(R.path(['bar'], deepObject), undefined);\n    eq(R.path(['a', 'b'], {\n      a: null\n    }), undefined);\n  });","file":"path.js","skipped":false,"dir":"test"},{"name":"works with falsy items","suites":["path"],"updatePoint":{"line":83,"column":28,"index":1959},"line":83,"code":"  it('works with falsy items', function () {\n    eq(R.path(['toString'], false), Boolean.prototype.toString);\n  });","file":"path.js","skipped":false,"dir":"test"},{"name":"returns true if the path matches the value","suites":["pathEq"],"updatePoint":{"line":18,"column":48,"index":286},"line":18,"code":"  it('returns true if the path matches the value', function () {\n    eq(R.pathEq(1, ['a'], obj), true);\n    eq(R.pathEq(3, ['b', 1, 'ba'], obj), true);\n  });","file":"pathEq.js","skipped":false,"dir":"test"},{"name":"returns false for non matches","suites":["pathEq"],"updatePoint":{"line":22,"column":35,"index":431},"line":22,"code":"  it('returns false for non matches', function () {\n    eq(R.pathEq('1', ['a'], obj), false);\n    eq(R.pathEq(3, ['b', 0, 'ba'], obj), false);\n  });","file":"pathEq.js","skipped":false,"dir":"test"},{"name":"returns false for non existing values","suites":["pathEq"],"updatePoint":{"line":26,"column":43,"index":588},"line":26,"code":"  it('returns false for non existing values', function () {\n    eq(R.pathEq('foo', ['c'], obj), false);\n    eq(R.pathEq('foo', ['c', 'd'], obj), false);\n  });","file":"pathEq.js","skipped":false,"dir":"test"},{"name":"accepts empty path","suites":["pathEq"],"updatePoint":{"line":30,"column":24,"index":728},"line":30,"code":"  it('accepts empty path', function () {\n    eq(R.pathEq(42, [], {\n      a: 1,\n      b: 2\n    }), false);\n    eq(R.pathEq(obj, [], obj), true);\n  });","file":"pathEq.js","skipped":false,"dir":"test"},{"name":"has R.equals semantics","suites":["pathEq"],"updatePoint":{"line":37,"column":28,"index":882},"line":37,"code":"  it('has R.equals semantics', function () {\n    eq(R.pathEq(0, ['value'], {\n      value: -0\n    }), false);\n    eq(R.pathEq(-0, ['value'], {\n      value: 0\n    }), false);\n    eq(R.pathEq(NaN, ['value'], {\n      value: NaN\n    }), true);\n    eq(R.pathEq(new Just([42]), ['value'], {\n      value: new Just([42])\n    }), true);\n  });","file":"pathEq.js","skipped":false,"dir":"test"},{"name":"takes a path and an object and returns the value at the path or the default value","suites":["pathOr"],"updatePoint":{"line":17,"column":87,"index":365},"line":17,"code":"  it('takes a path and an object and returns the value at the path or the default value', function () {\n    var obj = {\n      a: {\n        b: {\n          c: 100,\n          d: 200\n        },\n        e: {\n          f: [100, 101, 102],\n          g: 'G'\n        },\n        h: 'H'\n      },\n      i: 'I',\n      j: ['J']\n    };\n    eq(R.pathOr('Unknown', ['a', 'b', 'c'], obj), 100);\n    eq(R.pathOr('Unknown', [], obj), obj);\n    eq(R.pathOr('Unknown', ['a', 'e', 'f', 1], obj), 101);\n    eq(R.pathOr('Unknown', ['j', 0], obj), 'J');\n    eq(R.pathOr('Unknown', ['j', 1], obj), 'Unknown');\n    eq(R.pathOr('Unknown', ['a', 'b', 'c'], null), 'Unknown');\n  });","file":"pathOr.js","skipped":false,"dir":"test"},{"name":"gets a deep property's value from objects","suites":["pathOr"],"updatePoint":{"line":40,"column":47,"index":977},"line":40,"code":"  it(\"gets a deep property's value from objects\", function () {\n    eq(R.pathOr('Unknown', ['a', 'b', 'c'], deepObject), 'c');\n    eq(R.pathOr('Unknown', ['a'], deepObject), deepObject.a);\n  });","file":"pathOr.js","skipped":false,"dir":"test"},{"name":"returns the default value for items not found","suites":["pathOr"],"updatePoint":{"line":44,"column":51,"index":1176},"line":44,"code":"  it('returns the default value for items not found', function () {\n    eq(R.pathOr('Unknown', ['a', 'b', 'foo'], deepObject), 'Unknown');\n    eq(R.pathOr('Unknown', ['bar'], deepObject), 'Unknown');\n  });","file":"pathOr.js","skipped":false,"dir":"test"},{"name":"returns the default value for null/undefined","suites":["pathOr"],"updatePoint":{"line":48,"column":50,"index":1381},"line":48,"code":"  it('returns the default value for null/undefined', function () {\n    eq(R.pathOr('Unknown', ['toString'], null), 'Unknown');\n    eq(R.pathOr('Unknown', ['toString'], undefined), 'Unknown');\n  });","file":"pathOr.js","skipped":false,"dir":"test"},{"name":"works with falsy items","suites":["pathOr"],"updatePoint":{"line":52,"column":28,"index":1557},"line":52,"code":"  it('works with falsy items', function () {\n    eq(R.pathOr('Unknown', ['toString'], false), Boolean.prototype.toString);\n  });","file":"pathOr.js","skipped":false,"dir":"test"},{"name":"takes paths and returns values at those paths","suites":["paths"],"updatePoint":{"line":21,"column":51,"index":326},"line":21,"code":"  it('takes paths and returns values at those paths', function () {\n    eq(R.paths([['a', 'b', 'c'], ['x', 'y']], obj), [1, 'Alice']);\n    eq(R.paths([['a', 'b', 'd'], ['p', 'q']], obj), [2, undefined]);\n  });","file":"paths.js","skipped":false,"dir":"test"},{"name":"takes a paths that contains indices into arrays","suites":["paths"],"updatePoint":{"line":25,"column":53,"index":538},"line":25,"code":"  it('takes a paths that contains indices into arrays', function () {\n    eq(R.paths([['p', 0, 'q'], ['x', 'z', 0, 0]], obj), [3, {}]);\n    eq(R.paths([['p', 0, 'q'], ['x', 'z', 2, 1]], obj), [3, undefined]);\n  });","file":"paths.js","skipped":false,"dir":"test"},{"name":"takes a path that contains negative indices into arrays","suites":["paths"],"updatePoint":{"line":29,"column":61,"index":761},"line":29,"code":"  it('takes a path that contains negative indices into arrays', function () {\n    eq(R.paths([['p', -2, 'q'], ['p', -1]], obj), [3, 'Hi']);\n    eq(R.paths([['p', -4, 'q'], ['x', 'z', -1, 0]], obj), [undefined, {}]);\n  });","file":"paths.js","skipped":false,"dir":"test"},{"name":"gets a deep property's value from objects","suites":["paths"],"updatePoint":{"line":33,"column":47,"index":969},"line":33,"code":"  it(\"gets a deep property's value from objects\", function () {\n    eq(R.paths([['a', 'b']], obj), [obj.a.b]);\n    eq(R.paths([['p', 0]], obj), [obj.p[0]]);\n  });","file":"paths.js","skipped":false,"dir":"test"},{"name":"returns undefined for items not found","suites":["paths"],"updatePoint":{"line":37,"column":43,"index":1128},"line":37,"code":"  it('returns undefined for items not found', function () {\n    eq(R.paths([['a', 'x', 'y']], obj), [undefined]);\n    eq(R.paths([['p', 2]], obj), [undefined]);\n  });","file":"paths.js","skipped":false,"dir":"test"},{"name":"returns true if the specified object path satisfies the given predicate","suites":["pathSatisfies"],"updatePoint":{"line":10,"column":77,"index":253},"line":10,"code":"  it('returns true if the specified object path satisfies the given predicate', function () {\n    eq(R.pathSatisfies(isPositive, ['x', 1, 'y'], {\n      x: [{\n        y: -1\n      }, {\n        y: 1\n      }]\n    }), true);\n  });","file":"pathSatisfies.js","skipped":false,"dir":"test"},{"name":"returns false if the specified path does not exist","suites":["pathSatisfies"],"updatePoint":{"line":19,"column":56,"index":458},"line":19,"code":"  it('returns false if the specified path does not exist', function () {\n    eq(R.pathSatisfies(isPositive, ['x', 'y'], {\n      x: {\n        z: 42\n      }\n    }), false);\n  });","file":"pathSatisfies.js","skipped":false,"dir":"test"},{"name":"handles empty paths by applying pred to data: positive","suites":["pathSatisfies"],"updatePoint":{"line":26,"column":60,"index":639},"line":26,"code":"  it('handles empty paths by applying pred to data: positive', function () {\n    eq(R.pathSatisfies(R.is(Object), [], {\n      x: {\n        z: 42\n      }\n    }), true);\n  });","file":"pathSatisfies.js","skipped":false,"dir":"test"},{"name":"handles empty paths by applying pred to data: negative","suites":["pathSatisfies"],"updatePoint":{"line":33,"column":60,"index":813},"line":33,"code":"  it('handles empty paths by applying pred to data: negative', function () {\n    eq(R.pathSatisfies(R.has('y'), [], {\n      x: {\n        z: 42\n      }\n    }), false);\n  });","file":"pathSatisfies.js","skipped":false,"dir":"test"},{"name":"returns false otherwise","suites":["pathSatisfies"],"updatePoint":{"line":40,"column":29,"index":955},"line":40,"code":"  it('returns false otherwise', function () {\n    eq(R.pathSatisfies(isPositive, ['x', 'y'], {\n      x: {\n        y: 0\n      }\n    }), false);\n  });","file":"pathSatisfies.js","skipped":false,"dir":"test"},{"name":"copies the named properties of an object to the new object","suites":["pick"],"updatePoint":{"line":15,"column":64,"index":261},"line":15,"code":"  it('copies the named properties of an object to the new object', function () {\n    eq(R.pick(['a', 'c', 'f'], obj), {\n      a: 1,\n      c: 3,\n      f: 6\n    });\n  });","file":"pick.js","skipped":false,"dir":"test"},{"name":"handles numbers as properties","suites":["pick"],"updatePoint":{"line":22,"column":35,"index":401},"line":22,"code":"  it('handles numbers as properties', function () {\n    eq(R.pick([1], obj), {\n      1: 7\n    });\n  });","file":"pick.js","skipped":false,"dir":"test"},{"name":"ignores properties not included","suites":["pick"],"updatePoint":{"line":27,"column":37,"index":507},"line":27,"code":"  it('ignores properties not included', function () {\n    eq(R.pick(['a', 'c', 'g'], obj), {\n      a: 1,\n      c: 3\n    });\n  });","file":"pick.js","skipped":false,"dir":"test"},{"name":"retrieves prototype properties","suites":["pick"],"updatePoint":{"line":33,"column":36,"index":636},"line":33,"code":"  it('retrieves prototype properties', function () {\n    var F = function (param) {\n      this.x = param;\n    };\n\n    F.prototype.y = 40;\n    F.prototype.z = 50;\n    var obj = new F(30);\n    obj.v = 10;\n    obj.w = 20;\n    eq(R.pick(['w', 'x', 'y'], obj), {\n      w: 20,\n      x: 30,\n      y: 40\n    });\n  });","file":"pick.js","skipped":false,"dir":"test"},{"name":"copies the named properties of an object to the new object","suites":["pickAll"],"updatePoint":{"line":14,"column":64,"index":254},"line":14,"code":"  it('copies the named properties of an object to the new object', function () {\n    eq(R.pickAll(['a', 'c', 'f'], obj), {\n      a: 1,\n      c: 3,\n      f: 6\n    });\n  });","file":"pickAll.js","skipped":false,"dir":"test"},{"name":"includes properties not present on the input object","suites":["pickAll"],"updatePoint":{"line":21,"column":57,"index":419},"line":21,"code":"  it('includes properties not present on the input object', function () {\n    eq(R.pickAll(['a', 'c', 'g'], obj), {\n      a: 1,\n      c: 3,\n      g: undefined\n    });\n  });","file":"pickAll.js","skipped":false,"dir":"test"},{"name":"creates a copy of the object","suites":["pickBy"],"updatePoint":{"line":16,"column":34,"index":256},"line":16,"code":"  it('creates a copy of the object', function () {\n    assert.notStrictEqual(R.pickBy(R.always(true), obj), obj);\n  });","file":"pickBy.js","skipped":false,"dir":"test"},{"name":"when returning truthy, keeps the key","suites":["pickBy"],"updatePoint":{"line":19,"column":42,"index":384},"line":19,"code":"  it('when returning truthy, keeps the key', function () {\n    eq(R.pickBy(R.T, obj), obj);\n    eq(R.pickBy(R.always({}), obj), obj);\n    eq(R.pickBy(R.always(1), obj), obj);\n  });","file":"pickBy.js","skipped":false,"dir":"test"},{"name":"when returning falsy, keeps the key","suites":["pickBy"],"updatePoint":{"line":24,"column":41,"index":564},"line":24,"code":"  it('when returning falsy, keeps the key', function () {\n    eq(R.pickBy(R.always(false), obj), {});\n    eq(R.pickBy(R.always(0), obj), {});\n    eq(R.pickBy(R.always(null), obj), {});\n  });","file":"pickBy.js","skipped":false,"dir":"test"},{"name":"is called with (val,key,obj)","suites":["pickBy"],"updatePoint":{"line":29,"column":34,"index":748},"line":29,"code":"  it('is called with (val,key,obj)', function () {\n    eq(R.pickBy(function (val, key, _obj) {\n      eq(_obj, obj);\n      return key === 'd' && val === 4;\n    }, obj), {\n      d: 4\n    });\n  });","file":"pickBy.js","skipped":false,"dir":"test"},{"name":"retrieves prototype properties","suites":["pickBy"],"updatePoint":{"line":37,"column":36,"index":945},"line":37,"code":"  it('retrieves prototype properties', function () {\n    var F = function (param) {\n      this.x = param;\n    };\n\n    F.prototype.y = 40;\n    F.prototype.z = 50;\n    var obj = new F(30);\n    obj.v = 10;\n    obj.w = 20;\n    eq(R.pickBy(function (val) {\n      return val < 45;\n    }, obj), {\n      v: 10,\n      w: 20,\n      x: 30,\n      y: 40\n    });\n  });","file":"pickBy.js","skipped":false,"dir":"test"},{"name":"is a variadic function","suites":["pipe"],"updatePoint":{"line":8,"column":28,"index":170},"line":8,"code":"  it('is a variadic function', function () {\n    eq(typeof R.pipe, 'function');\n    eq(R.pipe.length, 0);\n  });","file":"pipe.js","skipped":false,"dir":"test"},{"name":"performs left-to-right function composition","suites":["pipe"],"updatePoint":{"line":12,"column":49,"index":303},"line":12,"code":"  it('performs left-to-right function composition', function () {\n    //  f :: (String, Number?) -> ([Number] -> [Number])\n    var f = R.pipe(parseInt, R.multiply, R.map);\n    eq(f.length, 2);\n    eq(f('10')([1, 2, 3]), [10, 20, 30]);\n    eq(f('10', 2)([1, 2, 3]), [2, 4, 6]);\n  });","file":"pipe.js","skipped":false,"dir":"test"},{"name":"passes context to functions","suites":["pipe"],"updatePoint":{"line":19,"column":33,"index":570},"line":19,"code":"  it('passes context to functions', function () {\n    function x(val) {\n      return this.x * val;\n    }\n\n    function y(val) {\n      return this.y * val;\n    }\n\n    function z(val) {\n      return this.z * val;\n    }\n\n    var context = {\n      a: R.pipe(x, y, z),\n      x: 4,\n      y: 2,\n      z: 1\n    };\n    eq(context.a(5), 40);\n  });","file":"pipe.js","skipped":false,"dir":"test"},{"name":"throws if given no arguments","suites":["pipe"],"updatePoint":{"line":40,"column":34,"index":909},"line":40,"code":"  it('throws if given no arguments', function () {\n    assert.throws(function () {\n      R.pipe();\n    }, function (err) {\n      return err.constructor === Error && err.message === 'pipe requires at least one argument';\n    });\n  });","file":"pipe.js","skipped":false,"dir":"test"},{"name":"can be applied to one argument","suites":["pipe"],"updatePoint":{"line":47,"column":36,"index":1145},"line":47,"code":"  it('can be applied to one argument', function () {\n    var f = function (a, b, c) {\n      return [a, b, c];\n    };\n\n    var g = R.pipe(f);\n    eq(g.length, 3);\n    eq(g(1, 2, 3), [1, 2, 3]);\n  });","file":"pipe.js","skipped":false,"dir":"test"},{"name":"performs left-to-right function composition with function applying","suites":["pipeWith"],"updatePoint":{"line":6,"column":72,"index":185},"line":6,"code":"  it('performs left-to-right function composition with function applying', function () {\n    //  f :: (String, Number?) -> ([Number] -> [Number])\n    var f = R.pipeWith(function (f, res) {\n      return f(res);\n    })([parseInt, R.multiply, R.map]);\n    eq(f.length, 2);\n    eq(f('10')([1, 2, 3]), [10, 20, 30]);\n    eq(f('10', 2)([1, 2, 3]), [2, 4, 6]);\n  });","file":"pipeWith.js","skipped":false,"dir":"test"},{"name":"performs left-to-right function while not nil result","suites":["pipeWith"],"updatePoint":{"line":15,"column":58,"index":531},"line":15,"code":"  it('performs left-to-right function while not nil result', function () {\n    var isOdd = R.flip(R.modulo)(2);\n    var pipeWhenNotNil = R.pipeWith(function (f, res) {\n      return R.isNil(res) ? null : f(res);\n    });\n    var f = pipeWhenNotNil([parseInt, R.ifElse(isOdd, R.identity, R.always(null)), R.inc]);\n    eq(f.length, 2);\n    eq(f('1'), 2);\n    eq(f('2'), null);\n  });","file":"pipeWith.js","skipped":false,"dir":"test"},{"name":"performs left-to-right function using promise chaining","suites":["pipeWith"],"updatePoint":{"line":25,"column":60,"index":912},"line":25,"code":"  it('performs left-to-right function using promise chaining', function () {\n    var then = function (f, p) {\n      return p.then(f);\n    };\n\n    var pipeP = R.pipeWith(then);\n\n    var toListPromise = function (a) {\n      return new Promise(function (res) {\n        res([a]);\n      });\n    };\n\n    var doubleListPromise = function (a) {\n      return new Promise(function (res) {\n        res(R.concat(a, a));\n      });\n    };\n\n    var f = pipeP([toListPromise, doubleListPromise]);\n    return f(1).then(function (res) {\n      eq(res, [1, 1]);\n    });\n  });","file":"pipeWith.js","skipped":false,"dir":"test"},{"name":"returns a function that maps the appropriate property over an array","suites":["pluck"],"updatePoint":{"line":16,"column":73,"index":314},"line":16,"code":"  it('returns a function that maps the appropriate property over an array', function () {\n    var nm = R.pluck('name');\n    eq(typeof nm, 'function');\n    eq(nm(people), ['Fred', 'Wilma', 'Pebbles']);\n  });","file":"pluck.js","skipped":false,"dir":"test"},{"name":"behaves as a transducer when given a transducer in list position","suites":["pluck"],"updatePoint":{"line":21,"column":70,"index":518},"line":21,"code":"  it('behaves as a transducer when given a transducer in list position', function () {\n    var numbers = [{\n      a: 1\n    }, {\n      a: 2\n    }, {\n      a: 3\n    }, {\n      a: 4\n    }];\n    var transducer = R.compose(R.pluck('a'), R.map(R.add(1)), R.take(2));\n    eq(R.transduce(transducer, R.flip(R.append), [], numbers), [2, 3]);\n  });","file":"pluck.js","skipped":false,"dir":"test"},{"name":"adds the element to the beginning of the list","suites":["prepend"],"updatePoint":{"line":6,"column":51,"index":163},"line":6,"code":"  it('adds the element to the beginning of the list', function () {\n    eq(R.prepend('x', ['y', 'z']), ['x', 'y', 'z']);\n    eq(R.prepend(['a', 'z'], ['x', 'y']), [['a', 'z'], 'x', 'y']);\n  });","file":"prepend.js","skipped":false,"dir":"test"},{"name":"works on empty list","suites":["prepend"],"updatePoint":{"line":10,"column":25,"index":331},"line":10,"code":"  it('works on empty list', function () {\n    eq(R.prepend(1, []), [1]);\n  });","file":"prepend.js","skipped":false,"dir":"test"},{"name":"multiplies together the array of numbers supplied","suites":["product"],"updatePoint":{"line":6,"column":55,"index":167},"line":6,"code":"  it('multiplies together the array of numbers supplied', function () {\n    eq(R.product([1, 2, 3, 4]), 24);\n  });","file":"product.js","skipped":false,"dir":"test"},{"name":"selects the chosen properties from each element in a list","suites":["project"],"updatePoint":{"line":23,"column":63,"index":422},"line":23,"code":"  it('selects the chosen properties from each element in a list', function () {\n    eq(R.project(['name', 'age'], kids), [{\n      name: 'Abby',\n      age: 7\n    }, {\n      name: 'Fred',\n      age: 12\n    }, {\n      name: 'Rusty',\n      age: 10\n    }, {\n      name: 'Alois',\n      age: 15\n    }]);\n  });","file":"project.js","skipped":false,"dir":"test"},{"name":"has an undefined property on the output tuple for any input tuple that does not have the property","suites":["project"],"updatePoint":{"line":38,"column":103,"index":765},"line":38,"code":"  it('has an undefined property on the output tuple for any input tuple that does not have the property', function () {\n    eq(R.project(['name', 'hair'], kids), [{\n      name: 'Abby',\n      hair: 'blond'\n    }, {\n      name: 'Fred',\n      hair: 'brown'\n    }, {\n      name: 'Rusty',\n      hair: 'brown'\n    }, {\n      name: 'Alois',\n      hair: undefined\n    }]);\n  });","file":"project.js","skipped":false,"dir":"test"},{"name":"dispatches to pronfuctor[\"fantasy-land/promap\"]() if present","suites":["promap"],"updatePoint":{"line":23,"column":66,"index":481},"line":23,"code":"  it('dispatches to pronfuctor[\"fantasy-land/promap\"]() if present', function () {\n    var setJson = R.promap(JSON.parse, JSON.stringify);\n    var pair = setJson(Pair(R.assoc('left-promapped', true), R.assoc('right-promapped', true)));\n\n    function mergeWithJson(json) {\n      return function (left, right) {\n        return right(left(json));\n      };\n    }\n\n    eq(pair.merge(mergeWithJson('{}')), '{\"left-promapped\":true,\"right-promapped\":true}');\n  });","file":"promap.js","skipped":false,"dir":"test"},{"name":"dispatches to pronfuctor.promap() if present","suites":["promap"],"updatePoint":{"line":35,"column":50,"index":922},"line":35,"code":"  it('dispatches to pronfuctor.promap() if present', function () {\n    var is1337Change = R.promap(R.multiply(100), R.equals(1337), Costar(R.sum));\n    var data = [10, 3, 0.3, 0.07];\n    eq(is1337Change.run(data), true);\n  });","file":"promap.js","skipped":false,"dir":"test"},{"name":"composes two functions, f and g, before and after the final function respectively","suites":["promap"],"updatePoint":{"line":40,"column":87,"index":1186},"line":40,"code":"  it('composes two functions, f and g, before and after the final function respectively', function () {\n    var decodeChar = R.promap(charCodeAt, fromCharCode, R.add(-8));\n    var decodeString = R.promap(R.split(''), R.join(''), R.map(decodeChar));\n    var code = 'ziuli';\n    eq(decodeString(code), 'ramda');\n  });","file":"promap.js","skipped":false,"dir":"test"},{"name":"returns a function that fetches the appropriate property","suites":["prop"],"updatePoint":{"line":12,"column":62,"index":254},"line":12,"code":"  it('returns a function that fetches the appropriate property', function () {\n    var nm = R.prop('name');\n    eq(typeof nm, 'function');\n    eq(nm(fred), 'Fred');\n  });","file":"prop.js","skipped":false,"dir":"test"},{"name":"handles number as property","suites":["prop"],"updatePoint":{"line":17,"column":32,"index":395},"line":17,"code":"  it('handles number as property', function () {\n    var deities = ['Cthulhu', 'Dagon', 'Yog-Sothoth'];\n    eq(R.prop(0, deities), 'Cthulhu');\n    eq(R.prop(1, deities), 'Dagon');\n    eq(R.prop(2, deities), 'Yog-Sothoth');\n    eq(R.prop(-1, deities), 'Yog-Sothoth');\n  });","file":"prop.js","skipped":false,"dir":"test"},{"name":"shows the same behaviour as path for a nonexistent property","suites":["prop"],"updatePoint":{"line":24,"column":65,"index":701},"line":24,"code":"  it('shows the same behaviour as path for a nonexistent property', function () {\n    var propResult = R.prop('incorrect', fred);\n    var pathResult = R.path(['incorrect'], fred);\n    eq(propResult, pathResult);\n  });","file":"prop.js","skipped":false,"dir":"test"},{"name":"shows the same behaviour as path for an undefined property","suites":["prop"],"updatePoint":{"line":29,"column":64,"index":918},"line":29,"code":"  it('shows the same behaviour as path for an undefined property', function () {\n    var propResult = R.prop(undefined, fred);\n    var pathResult = R.path([undefined], fred);\n    eq(propResult, pathResult);\n  });","file":"prop.js","skipped":false,"dir":"test"},{"name":"shows the same behaviour as path for a null property","suites":["prop"],"updatePoint":{"line":34,"column":58,"index":1125},"line":34,"code":"  it('shows the same behaviour as path for a null property', function () {\n    var propResult = R.prop(null, fred);\n    var pathResult = R.path([null], fred);\n    eq(propResult, pathResult);\n  });","file":"prop.js","skipped":false,"dir":"test"},{"name":"shows the same behaviour as path for a valid property and object","suites":["prop"],"updatePoint":{"line":39,"column":70,"index":1334},"line":39,"code":"  it('shows the same behaviour as path for a valid property and object', function () {\n    var propResult = R.prop('age', fred);\n    var pathResult = R.path(['age'], fred);\n    eq(propResult, pathResult);\n  });","file":"prop.js","skipped":false,"dir":"test"},{"name":"shows the same behaviour as path for a null object","suites":["prop"],"updatePoint":{"line":44,"column":56,"index":1531},"line":44,"code":"  it('shows the same behaviour as path for a null object', function () {\n    var propResult = R.prop('age', null);\n    var pathResult = R.path(['age'], null);\n    eq(propResult, pathResult);\n  });","file":"prop.js","skipped":false,"dir":"test"},{"name":"shows the same behaviour as path for an undefined object","suites":["prop"],"updatePoint":{"line":49,"column":62,"index":1734},"line":49,"code":"  it('shows the same behaviour as path for an undefined object', function () {\n    var propResult, propException, pathResult, pathException;\n\n    try {\n      propResult = R.prop('name', undefined);\n    } catch (e) {\n      propException = e;\n    }\n\n    try {\n      pathResult = R.path(['name'], undefined);\n    } catch (e) {\n      pathException = e;\n    }\n\n    eq(propResult, pathResult);\n    eq(propException, pathException);\n  });","file":"prop.js","skipped":false,"dir":"test"},{"name":"returns that value associated to a property given valid one","suites":["prop"],"updatePoint":{"line":67,"column":65,"index":2169},"line":67,"code":"  it('returns that value associated to a property given valid one', function () {\n    fc.assert(fc.property(fc.string(), fc.anything(), function (p, value) {\n      const o = {\n        [p]: value\n      };\n      eq(R.prop(p, o), value);\n    }));\n  });","file":"prop.js","skipped":false,"dir":"test"},{"name":"shows the same behaviour as path on any object","suites":["prop"],"updatePoint":{"line":75,"column":52,"index":2406},"line":75,"code":"  it('shows the same behaviour as path on any object', function () {\n    fc.assert(fc.property(fc.string(), fc.object(), function (p, o) {\n      eq(R.prop(p, o), R.path([p], o));\n    }));\n  });","file":"prop.js","skipped":false,"dir":"test"},{"name":"shows the same behaviour as path on any value","suites":["prop"],"updatePoint":{"line":80,"column":51,"index":2599},"line":80,"code":"  it('shows the same behaviour as path on any value', function () {\n    fc.assert(fc.property(fc.string(), fc.anything(), function (p, o) {\n      var propResult, propException, pathResult, pathException;\n\n      try {\n        propResult = R.prop(p, o);\n      } catch (e) {\n        propException = e;\n      }\n\n      try {\n        pathResult = R.path([p], o);\n      } catch (e) {\n        pathException = e;\n      }\n\n      eq(propResult, pathResult);\n      eq(propException, pathException);\n    }));\n  });","file":"prop.js","skipped":false,"dir":"test"},{"name":"determines whether a particular property matches a given value for a specific object","suites":["propEq"],"updatePoint":{"line":20,"column":90,"index":386},"line":20,"code":"  it('determines whether a particular property matches a given value for a specific object', function () {\n    eq(R.propEq('Abby', 'name', obj1), true);\n    eq(R.propEq('brown', 'hair', obj2), true);\n    eq(R.propEq('blond', 'hair', obj2), false);\n  });","file":"propEq.js","skipped":false,"dir":"test"},{"name":"handles number as property","suites":["propEq"],"updatePoint":{"line":25,"column":32,"index":582},"line":25,"code":"  it('handles number as property', function () {\n    var deities = ['Cthulhu', 'Dagon', 'Yog-Sothoth'];\n    eq(R.propEq('Cthulhu', 0, deities), true);\n    eq(R.propEq('Dagon', 1, deities), true);\n    eq(R.propEq('Yog-Sothoth', 2, deities), true);\n    eq(R.propEq('Yog-Sothoth', -1, deities), true);\n    eq(R.propEq(undefined, 3, deities), true);\n  });","file":"propEq.js","skipped":false,"dir":"test"},{"name":"has R.equals semantics","suites":["propEq"],"updatePoint":{"line":33,"column":28,"index":930},"line":33,"code":"  it('has R.equals semantics', function () {\n    eq(R.propEq(0, 'value', {\n      value: -0\n    }), false);\n    eq(R.propEq(-0, 'value', {\n      value: 0\n    }), false);\n    eq(R.propEq(NaN, 'value', {\n      value: NaN\n    }), true);\n    eq(R.propEq(new Just([42]), 'value', {\n      value: new Just([42])\n    }), true);\n  });","file":"propEq.js","skipped":false,"dir":"test"},{"name":"returns false if called with a null or undefined object","suites":["propEq"],"updatePoint":{"line":47,"column":61,"index":1288},"line":47,"code":"  it('returns false if called with a null or undefined object', function () {\n    eq(R.propEq('Abby', 'name', null), false);\n    eq(R.propEq('Abby', 'name', undefined), false);\n  });","file":"propEq.js","skipped":false,"dir":"test"},{"name":"returns true if the specified object property is of the given type","suites":["propIs"],"updatePoint":{"line":6,"column":72,"index":183},"line":6,"code":"  it('returns true if the specified object property is of the given type', function () {\n    eq(R.propIs(Number, 'value', {\n      value: 1\n    }), true);\n  });","file":"propIs.js","skipped":false,"dir":"test"},{"name":"returns false otherwise","suites":["propIs"],"updatePoint":{"line":11,"column":29,"index":300},"line":11,"code":"  it('returns false otherwise', function () {\n    eq(R.propIs(String, 'value', {\n      value: 1\n    }), false);\n    eq(R.propIs(String, 'value', {}), false);\n  });","file":"propIs.js","skipped":false,"dir":"test"},{"name":"handles number as property","suites":["propIs"],"updatePoint":{"line":17,"column":32,"index":467},"line":17,"code":"  it('handles number as property', function () {\n    var deities = ['Cthulhu', 'Dagon', 'Yog-Sothoth'];\n    eq(R.propIs(String, 0, deities), true);\n    eq(R.propIs(String, 1, deities), true);\n    eq(R.propIs(String, 2, deities), true);\n    eq(R.propIs(String, -1, deities), true);\n    eq(R.propIs(String, 3, deities), false);\n  });","file":"propIs.js","skipped":false,"dir":"test"},{"name":"returns a function that fetches the appropriate property","suites":["propOr"],"updatePoint":{"line":14,"column":62,"index":295},"line":14,"code":"  it('returns a function that fetches the appropriate property', function () {\n    eq(typeof nm, 'function');\n    eq(nm(fred), 'Fred');\n  });","file":"propOr.js","skipped":false,"dir":"test"},{"name":"returns the default value when the property does not exist","suites":["propOr"],"updatePoint":{"line":18,"column":64,"index":439},"line":18,"code":"  it('returns the default value when the property does not exist', function () {\n    eq(nm(anon), 'Unknown');\n  });","file":"propOr.js","skipped":false,"dir":"test"},{"name":"returns the default value when the object is nil","suites":["propOr"],"updatePoint":{"line":21,"column":54,"index":545},"line":21,"code":"  it('returns the default value when the object is nil', function () {\n    eq(nm(null), 'Unknown');\n    eq(nm(void 0), 'Unknown');\n  });","file":"propOr.js","skipped":false,"dir":"test"},{"name":"uses the default when supplied an object with a nil value","suites":["propOr"],"updatePoint":{"line":25,"column":63,"index":691},"line":25,"code":"  it('uses the default when supplied an object with a nil value', function () {\n    eq(R.propOr('foo', 'x', {\n      x: null\n    }), 'foo');\n    eq(R.propOr('foo', 'x', {\n      x: undefined\n    }), 'foo');\n  });","file":"propOr.js","skipped":false,"dir":"test"},{"name":"handles number as property","suites":["propOr"],"updatePoint":{"line":33,"column":32,"index":871},"line":33,"code":"  it('handles number as property', function () {\n    var deities = ['Cthulhu', 'Dagon', 'Yog-Sothoth'];\n    eq(R.propOr('Unknown', 0, deities), 'Cthulhu');\n    eq(R.propOr('Unknown', 1, deities), 'Dagon');\n    eq(R.propOr('Unknown', 2, deities), 'Yog-Sothoth');\n    eq(R.propOr('Unknown', -1, deities), 'Yog-Sothoth');\n    eq(R.propOr('Unknown', 3, deities), 'Unknown');\n  });","file":"propOr.js","skipped":false,"dir":"test"},{"name":"shows the same behaviour as pathOr for a nonexistent property","suites":["propOr"],"updatePoint":{"line":41,"column":67,"index":1283},"line":41,"code":"  it('shows the same behaviour as pathOr for a nonexistent property', function () {\n    var propOrResult = R.propOr('Unknown', 'incorrect', fred);\n    var pathOrResult = R.pathOr('Unknown', ['incorrect'], fred);\n    eq(propOrResult, pathOrResult);\n  });","file":"propOr.js","skipped":false,"dir":"test"},{"name":"shows the same behaviour as pathOr for an undefined property","suites":["propOr"],"updatePoint":{"line":46,"column":66,"index":1536},"line":46,"code":"  it('shows the same behaviour as pathOr for an undefined property', function () {\n    var propOrResult = R.propOr('Unknown', undefined, fred);\n    var pathOrResult = R.pathOr('Unknown', [undefined], fred);\n    eq(propOrResult, pathOrResult);\n  });","file":"propOr.js","skipped":false,"dir":"test"},{"name":"shows the same behaviour as pathOr for a null property","suites":["propOr"],"updatePoint":{"line":51,"column":60,"index":1779},"line":51,"code":"  it('shows the same behaviour as pathOr for a null property', function () {\n    var propOrResult = R.propOr('Unknown', null, fred);\n    var pathOrResult = R.pathOr('Unknown', [null], fred);\n    eq(propOrResult, pathOrResult);\n  });","file":"propOr.js","skipped":false,"dir":"test"},{"name":"shows the same behaviour as pathOr for a valid property and object","suites":["propOr"],"updatePoint":{"line":56,"column":72,"index":2024},"line":56,"code":"  it('shows the same behaviour as pathOr for a valid property and object', function () {\n    var propOrResult = R.propOr('Unknown', 'age', fred);\n    var pathOrResult = R.pathOr('Unknown', ['age'], fred);\n    eq(propOrResult, pathOrResult);\n  });","file":"propOr.js","skipped":false,"dir":"test"},{"name":"shows the same behaviour as pathOr for a null object","suites":["propOr"],"updatePoint":{"line":61,"column":58,"index":2257},"line":61,"code":"  it('shows the same behaviour as pathOr for a null object', function () {\n    var propOrResult = R.propOr('Unknown', 'age', null);\n    var pathOrResult = R.pathOr('Unknown', ['age'], null);\n    eq(propOrResult, pathOrResult);\n  });","file":"propOr.js","skipped":false,"dir":"test"},{"name":"shows the same behaviour as pathOr for an undefined object","suites":["propOr"],"updatePoint":{"line":66,"column":64,"index":2496},"line":66,"code":"  it('shows the same behaviour as pathOr for an undefined object', function () {\n    var propOrResult = R.propOr('Unknown', 'age', undefined);\n    var pathOrResult = R.pathOr('Unknown', ['age'], undefined);\n    eq(propOrResult, pathOrResult);\n  });","file":"propOr.js","skipped":false,"dir":"test"},{"name":"returns empty array if no properties requested","suites":["props"],"updatePoint":{"line":14,"column":52,"index":240},"line":14,"code":"  it('returns empty array if no properties requested', function () {\n    eq(R.props([], obj), []);\n  });","file":"props.js","skipped":false,"dir":"test"},{"name":"returns values for requested properties","suites":["props"],"updatePoint":{"line":17,"column":45,"index":338},"line":17,"code":"  it('returns values for requested properties', function () {\n    eq(R.props(['a', 'e'], obj), [1, 5]);\n  });","file":"props.js","skipped":false,"dir":"test"},{"name":"preserves order","suites":["props"],"updatePoint":{"line":20,"column":21,"index":424},"line":20,"code":"  it('preserves order', function () {\n    eq(R.props(['f', 'c', 'e'], obj), [6, 3, 5]);\n  });","file":"props.js","skipped":false,"dir":"test"},{"name":"returns undefined for nonexistent properties","suites":["props"],"updatePoint":{"line":23,"column":50,"index":547},"line":23,"code":"  it('returns undefined for nonexistent properties', function () {\n    var ps = R.props(['a', 'nonexistent'], obj);\n    eq(ps.length, 2);\n    eq(ps[0], 1);\n    eq(ps[1], void 0);\n  });","file":"props.js","skipped":false,"dir":"test"},{"name":"returns true if the specified object property satisfies the given predicate","suites":["propSatisfies"],"updatePoint":{"line":10,"column":81,"index":257},"line":10,"code":"  it('returns true if the specified object property satisfies the given predicate', function () {\n    eq(R.propSatisfies(isPositive, 'x', {\n      x: 1,\n      y: 0\n    }), true);\n  });","file":"propSatisfies.js","skipped":false,"dir":"test"},{"name":"returns false otherwise","suites":["propSatisfies"],"updatePoint":{"line":16,"column":29,"index":389},"line":16,"code":"  it('returns false otherwise', function () {\n    eq(R.propSatisfies(isPositive, 'y', {\n      x: 1,\n      y: 0\n    }), false);\n  });","file":"propSatisfies.js","skipped":false,"dir":"test"},{"name":"returns false if given a null or undefined object","suites":["propSatisfies"],"updatePoint":{"line":22,"column":55,"index":548},"line":22,"code":"  it('returns false if given a null or undefined object', function () {\n    eq(R.propSatisfies(isPositive, 'y', null), false);\n    eq(R.propSatisfies(isPositive, 'y', undefined), false);\n  });","file":"propSatisfies.js","skipped":false,"dir":"test"},{"name":"returns list of numbers","suites":["range"],"updatePoint":{"line":8,"column":29,"index":172},"line":8,"code":"  it('returns list of numbers', function () {\n    eq(R.range(0, 5), [0, 1, 2, 3, 4]);\n    eq(R.range(4, 7), [4, 5, 6]);\n  });","file":"range.js","skipped":false,"dir":"test"},{"name":"returns the empty list if the first parameter is not larger than the second","suites":["range"],"updatePoint":{"line":12,"column":81,"index":350},"line":12,"code":"  it('returns the empty list if the first parameter is not larger than the second', function () {\n    eq(R.range(7, 3), []);\n    eq(R.range(5, 5), []);\n  });","file":"range.js","skipped":false,"dir":"test"},{"name":"returns an empty array if from > to","suites":["range"],"updatePoint":{"line":16,"column":41,"index":468},"line":16,"code":"  it('returns an empty array if from > to', function () {\n    var result = R.range(10, 5);\n    eq(result, []);\n    result.push(5);\n    eq(R.range(10, 5), []);\n  });","file":"range.js","skipped":false,"dir":"test"},{"name":"terminates given bad input","suites":["range"],"updatePoint":{"line":22,"column":32,"index":624},"line":22,"code":"  it('terminates given bad input', function () {\n    assert.throws(function () {\n      R.range('a', 'z');\n    }, function (err) {\n      return err.constructor === TypeError && err.message === 'Both arguments to range must be numbers';\n    });\n  });","file":"range.js","skipped":false,"dir":"test"},{"name":"folds simple functions over arrays with the supplied accumulator","suites":["reduce"],"updatePoint":{"line":14,"column":70,"index":290},"line":14,"code":"  it('folds simple functions over arrays with the supplied accumulator', function () {\n    eq(R.reduce(add, 0, [1, 2, 3, 4]), 10);\n    eq(R.reduce(mult, 1, [1, 2, 3, 4]), 24);\n  });","file":"reduce.js","skipped":false,"dir":"test"},{"name":"dispatches to objects that implement `reduce`","suites":["reduce"],"updatePoint":{"line":18,"column":51,"index":453},"line":18,"code":"  it('dispatches to objects that implement `reduce`', function () {\n    var obj = {\n      x: [1, 2, 3],\n      reduce: function () {\n        return 'override';\n      }\n    };\n    eq(R.reduce(add, 0, obj), 'override');\n    eq(R.reduce(add, 10, obj), 'override');\n  });","file":"reduce.js","skipped":false,"dir":"test"},{"name":"returns the accumulator for an empty array","suites":["reduce"],"updatePoint":{"line":28,"column":48,"index":717},"line":28,"code":"  it('returns the accumulator for an empty array', function () {\n    eq(R.reduce(add, 0, []), 0);\n    eq(R.reduce(mult, 1, []), 1);\n    eq(R.reduce(R.concat, [], []), []);\n  });","file":"reduce.js","skipped":false,"dir":"test"},{"name":"returns the accumulator for an null/undefined list","suites":["reduce"],"updatePoint":{"line":33,"column":56,"index":903},"line":33,"code":"  it('returns the accumulator for an null/undefined list', function () {\n    eq(R.reduce(add, 0, null), 0);\n    eq(R.reduce(R.concat, [], null), []);\n    eq(R.reduce(add, 0, undefined), 0);\n    eq(R.reduce(R.concat, [], undefined), []);\n  });","file":"reduce.js","skipped":false,"dir":"test"},{"name":"Prefers the use of the iterator of an object over reduce (and handles short-circuits)","suites":["reduce"],"updatePoint":{"line":39,"column":91,"index":1181},"line":39,"code":"  it('Prefers the use of the iterator of an object over reduce (and handles short-circuits)', function () {\n    var symIterator = typeof Symbol !== 'undefined' ? Symbol.iterator : '@@iterator';\n\n    function Reducible(arr) {\n      this.arr = arr;\n    }\n\n    Reducible.prototype.reduce = function (f, init) {\n      var acc = init;\n\n      for (var i = 0; i < this.arr.length; i += 1) {\n        acc = f(acc, this.arr[i]);\n      }\n\n      return acc;\n    };\n\n    Reducible.prototype[symIterator] = function () {\n      var a = this.arr;\n      return {\n        _pos: 0,\n        next: function () {\n          if (this._pos < a.length) {\n            var v = a[this._pos];\n            this._pos += 1;\n            return {\n              value: v,\n              done: false\n            };\n          } else {\n            return {\n              done: true\n            };\n          }\n        }\n      };\n    };\n\n    var xf = R.take(2);\n    var apendingT = {};\n    apendingT['@@transducer/result'] = R.identity;\n    apendingT['@@transducer/step'] = R.flip(R.append);\n    var rfn = xf(apendingT);\n    var list = new Reducible([1, 2, 3, 4, 5, 6]);\n    eq(R.reduce(rfn, [], list), [1, 2]);\n  });","file":"reduce.js","skipped":false,"dir":"test"},{"name":"short circuits with reduced","suites":["reduce"],"updatePoint":{"line":85,"column":33,"index":2299},"line":85,"code":"  it('short circuits with reduced', function () {\n    var addWithMaxOf10 = function (acc, val) {\n      return acc + val > 10 ? R.reduced(acc) : acc + val;\n    };\n\n    eq(R.reduce(addWithMaxOf10, 0, [1, 2, 3, 4]), 10);\n    eq(R.reduce(addWithMaxOf10, 0, [2, 4, 6, 8]), 6);\n  });","file":"reduce.js","skipped":false,"dir":"test"},{"name":"splits the list into groups according to the grouping function","suites":["reduceBy"],"updatePoint":{"line":71,"column":68,"index":1093},"line":71,"code":"  it('splits the list into groups according to the grouping function', function () {\n    var collectNames = function (acc, student) {\n      return acc.concat(student.name);\n    };\n\n    eq(R.reduceBy(collectNames, [], byGrade, students), {\n      A: ['Dianne', 'Gillian'],\n      B: ['Abby', 'Chris', 'Irene'],\n      C: ['Brad', 'Hannah'],\n      D: ['Fred', 'Jack'],\n      F: ['Eddy']\n    });\n  });","file":"reduceBy.js","skipped":false,"dir":"test"},{"name":"splits the list into mutation-free groups","suites":["reduceBy"],"updatePoint":{"line":84,"column":47,"index":1468},"line":84,"code":"  it('splits the list into mutation-free groups', function () {\n    var collectNames = function (acc, student) {\n      acc.push(student.name);\n      return acc;\n    };\n\n    eq(R.reduceBy(collectNames, [], byGrade, students), {\n      A: ['Dianne', 'Gillian'],\n      B: ['Abby', 'Chris', 'Irene'],\n      C: ['Brad', 'Hannah'],\n      D: ['Fred', 'Jack'],\n      F: ['Eddy']\n    });\n  });","file":"reduceBy.js","skipped":false,"dir":"test"},{"name":"returns an empty object if given an empty array","suites":["reduceBy"],"updatePoint":{"line":98,"column":53,"index":1858},"line":98,"code":"  it('returns an empty object if given an empty array', function () {\n    eq(R.reduceBy(sumValues, 0, byType, []), {});\n  });","file":"reduceBy.js","skipped":false,"dir":"test"},{"name":"can act as a transducer","suites":["reduceBy"],"updatePoint":{"line":101,"column":29,"index":1960},"line":101,"code":"  it('can act as a transducer', function () {\n    var reduceToSumsBy = R.reduceBy(sumValues, 0);\n    var sumByType = reduceToSumsBy(byType);\n    eq(R.into({}, R.compose(sumByType, R.map(R.adjust(1, R.multiply(10)))), sumInput), {\n      A: 800,\n      B: 800,\n      C: 500\n    });\n    eq(R.transduce(R.compose(sumByType, R.map(R.adjust(1, R.multiply(10)))), (result, input) => {\n      result[input[0]] = result[input[0]] ? result[input[0]] : 0 + input[1];\n      return result;\n    }, {}, sumInput), {\n      A: 800,\n      B: 800,\n      C: 500\n    });\n  });","file":"reduceBy.js","skipped":false,"dir":"test"},{"name":"short circuits with reduced","suites":["reduceBy"],"updatePoint":{"line":118,"column":33,"index":2518},"line":118,"code":"  it('short circuits with reduced', function () {\n    var collectNames = function (acc, student) {\n      return student.name === 'Fred' ? R.reduced(acc) : acc.concat(student.name);\n    };\n\n    eq(R.reduceBy(collectNames, [], byGrade, students), {\n      A: ['Dianne'],\n      B: ['Abby', 'Chris'],\n      C: ['Brad'],\n      F: ['Eddy']\n    });\n  });","file":"reduceBy.js","skipped":false,"dir":"test"},{"name":"wraps a value","suites":["reduced"],"updatePoint":{"line":6,"column":19,"index":131},"line":6,"code":"  it('wraps a value', function () {\n    // white box test.\n    var v = {};\n    eq(R.reduced(v)['@@transducer/value'], v);\n  });","file":"reduced.js","skipped":false,"dir":"test"},{"name":"flags value as reduced","suites":["reduced"],"updatePoint":{"line":11,"column":28,"index":268},"line":11,"code":"  it('flags value as reduced', function () {\n    // white box test.\n    eq(R.reduced({})['@@transducer/reduced'], true);\n  });","file":"reduced.js","skipped":false,"dir":"test"},{"name":"short-circuits reduce","suites":["reduced"],"updatePoint":{"line":15,"column":27,"index":394},"line":15,"code":"  it('short-circuits reduce', function () {\n    // black box test.\n    eq(R.reduce(function (acc, v) {\n      var result = acc + v;\n\n      if (result >= 10) {\n        result = R.reduced(result);\n      }\n\n      return result;\n    }, 0, [1, 2, 3, 4, 5]), 10);\n  });","file":"reduced.js","skipped":false,"dir":"test"},{"name":"folds lists in the right order","suites":["reduceRight"],"updatePoint":{"line":14,"column":36,"index":329},"line":14,"code":"  it('folds lists in the right order', function () {\n    eq(R.reduceRight(function (a, b) {\n      return a + b;\n    }, '', ['a', 'b', 'c', 'd']), 'abcd');\n  });","file":"reduceRight.js","skipped":false,"dir":"test"},{"name":"folds subtract over arrays in the right order","suites":["reduceRight"],"updatePoint":{"line":19,"column":51,"index":505},"line":19,"code":"  it('folds subtract over arrays in the right order', function () {\n    eq(R.reduceRight(function (a, b) {\n      return a - b;\n    }, 0, [1, 2, 3, 4]), -2);\n  });","file":"reduceRight.js","skipped":false,"dir":"test"},{"name":"folds simple functions over arrays with the supplied accumulator","suites":["reduceRight"],"updatePoint":{"line":24,"column":70,"index":687},"line":24,"code":"  it('folds simple functions over arrays with the supplied accumulator', function () {\n    eq(R.reduceRight(avg, 54, [12, 4, 10, 6]), 12);\n  });","file":"reduceRight.js","skipped":false,"dir":"test"},{"name":"returns the accumulator for an empty array","suites":["reduceRight"],"updatePoint":{"line":27,"column":48,"index":810},"line":27,"code":"  it('returns the accumulator for an empty array', function () {\n    eq(R.reduceRight(avg, 0, []), 0);\n  });","file":"reduceRight.js","skipped":false,"dir":"test"},{"name":"short circuits with reduced","suites":["reduceRight"],"updatePoint":{"line":30,"column":33,"index":904},"line":30,"code":"  it('short circuits with reduced', function () {\n    eq(R.reduceRight(concatFirstThree, '', ['a', 'd', 'm', 'a', 'r']), 'ram');\n  });","file":"reduceRight.js","skipped":false,"dir":"test"},{"name":"reduces until its predicate fails","suites":["reduceWhile"],"updatePoint":{"line":10,"column":39,"index":211},"line":10,"code":"  it('reduces until its predicate fails', function () {\n    eq(R.reduceWhile(isOdd, R.add, 0, [1, 3, 1, 5, 20, 7, 7, 7]), 10);\n  });","file":"reduceWhile.js","skipped":false,"dir":"test"},{"name":"returns its accumulator when given an empty array","suites":["reduceWhile"],"updatePoint":{"line":13,"column":55,"index":360},"line":13,"code":"  it('returns its accumulator when given an empty array', function () {\n    eq(R.reduceWhile(isOdd, R.add, 101, []), 101);\n  });","file":"reduceWhile.js","skipped":false,"dir":"test"},{"name":"short circuits with reduced","suites":["reduceWhile"],"updatePoint":{"line":16,"column":33,"index":467},"line":16,"code":"  it('short circuits with reduced', function () {\n    var appendWhileLessThan10 = function (acc, val) {\n      return val > 10 ? R.reduced(acc) : R.append(val, acc);\n    };\n\n    eq(R.reduceWhile(isOdd, appendWhileLessThan10, [], [1, 3, 1, 5, 20, 7]), [1, 3, 1, 5]);\n    eq(R.reduceWhile(isOdd, appendWhileLessThan10, [], [1, 3, 2, 5, 20, 7]), [1, 3]);\n  });","file":"reduceWhile.js","skipped":false,"dir":"test"},{"name":"reduces an array to those not matching a filter","suites":["reject"],"updatePoint":{"line":15,"column":53,"index":281},"line":15,"code":"  it('reduces an array to those not matching a filter', function () {\n    eq(R.reject(even, [1, 2, 3, 4, 5]), [1, 3, 5]);\n  });","file":"reject.js","skipped":false,"dir":"test"},{"name":"returns an empty array if no element matches","suites":["reject"],"updatePoint":{"line":18,"column":50,"index":406},"line":18,"code":"  it('returns an empty array if no element matches', function () {\n    eq(R.reject(function (x) {\n      return x < 100;\n    }, [1, 9, 99]), []);\n  });","file":"reject.js","skipped":false,"dir":"test"},{"name":"returns an empty array if asked to filter an empty array","suites":["reject"],"updatePoint":{"line":23,"column":62,"index":569},"line":23,"code":"  it('returns an empty array if asked to filter an empty array', function () {\n    eq(R.reject(function (x) {\n      return x > 100;\n    }, []), []);\n  });","file":"reject.js","skipped":false,"dir":"test"},{"name":"filters objects","suites":["reject"],"updatePoint":{"line":28,"column":21,"index":683},"line":28,"code":"  it('filters objects', function () {\n    eq(R.reject(R.equals(0), {}), {});\n    eq(R.reject(R.equals(0), {\n      x: 0,\n      y: 0,\n      z: 0\n    }), {});\n    eq(R.reject(R.equals(0), {\n      x: 1,\n      y: 0,\n      z: 0\n    }), {\n      x: 1\n    });\n    eq(R.reject(R.equals(0), {\n      x: 1,\n      y: 2,\n      z: 0\n    }), {\n      x: 1,\n      y: 2\n    });\n    eq(R.reject(R.equals(0), {\n      x: 1,\n      y: 2,\n      z: 3\n    }), {\n      x: 1,\n      y: 2,\n      z: 3\n    });\n  });","file":"reject.js","skipped":false,"dir":"test"},{"name":"dispatches to `filter` method","suites":["reject"],"updatePoint":{"line":60,"column":35,"index":1180},"line":60,"code":"  it('dispatches to `filter` method', function () {\n    var m = new Just(42);\n    eq(R.filter(R.T, m), m);\n    eq(R.filter(R.F, m), Nothing);\n    eq(R.reject(R.T, m), Nothing);\n    eq(R.reject(R.F, m), m);\n  });","file":"reject.js","skipped":false,"dir":"test"},{"name":"can act as a transducer","suites":["reject"],"updatePoint":{"line":67,"column":29,"index":1386},"line":67,"code":"  it('can act as a transducer', function () {\n    var input = [1, 2, 3, 4];\n    var expected = [1, 3];\n    eq(R.into([], R.reject(even), input), expected);\n    eq(R.transduce(R.reject(even), R.flip(R.append), [], input), expected);\n  });","file":"reject.js","skipped":false,"dir":"test"},{"name":"splices out a sub-list of the given list","suites":["remove"],"updatePoint":{"line":6,"column":46,"index":157},"line":6,"code":"  it('splices out a sub-list of the given list', function () {\n    var list = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j'];\n    eq(R.remove(2, 5, list), ['a', 'b', 'h', 'i', 'j']);\n  });","file":"remove.js","skipped":false,"dir":"test"},{"name":"returns the appropriate sublist when start == 0","suites":["remove"],"updatePoint":{"line":10,"column":53,"index":357},"line":10,"code":"  it('returns the appropriate sublist when start == 0', function () {\n    var list = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j'];\n    eq(R.remove(0, 5, list), ['f', 'g', 'h', 'i', 'j']);\n    eq(R.remove(0, 1, list), ['b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j']);\n    eq(R.remove(0, list.length, list), []);\n  });","file":"remove.js","skipped":false,"dir":"test"},{"name":"removes the end of the list if the count is too large","suites":["remove"],"updatePoint":{"line":16,"column":59,"index":684},"line":16,"code":"  it('removes the end of the list if the count is too large', function () {\n    var list = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j'];\n    eq(R.remove(2, 20, list), ['a', 'b']);\n  });","file":"remove.js","skipped":false,"dir":"test"},{"name":"retains the entire list if the start is too large","suites":["remove"],"updatePoint":{"line":20,"column":55,"index":872},"line":20,"code":"  it('retains the entire list if the start is too large', function () {\n    var list = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j'];\n    eq(R.remove(13, 3, list), ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j']);\n  });","file":"remove.js","skipped":false,"dir":"test"},{"name":"returns a lazy list of identical values","suites":["repeat"],"updatePoint":{"line":6,"column":45,"index":156},"line":6,"code":"  it('returns a lazy list of identical values', function () {\n    eq(R.repeat(0, 5), [0, 0, 0, 0, 0]);\n  });","file":"repeat.js","skipped":false,"dir":"test"},{"name":"can accept any value, including `null`","suites":["repeat"],"updatePoint":{"line":9,"column":44,"index":264},"line":9,"code":"  it('can accept any value, including `null`', function () {\n    eq(R.repeat(null, 3), [null, null, null]);\n  });","file":"repeat.js","skipped":false,"dir":"test"},{"name":"replaces substrings of the input string","suites":["replace"],"updatePoint":{"line":6,"column":45,"index":157},"line":6,"code":"  it('replaces substrings of the input string', function () {\n    eq(R.replace('1', 'one', '1 two three'), 'one two three');\n  });","file":"replace.js","skipped":false,"dir":"test"},{"name":"replaces regex matches of the input string","suites":["replace"],"updatePoint":{"line":9,"column":48,"index":291},"line":9,"code":"  it('replaces regex matches of the input string', function () {\n    eq(R.replace(/\\d+/g, 'num', '1 2 three'), 'num num three');\n  });","file":"replace.js","skipped":false,"dir":"test"},{"name":"reverses arrays","suites":["reverse"],"updatePoint":{"line":8,"column":21,"index":166},"line":8,"code":"  it('reverses arrays', function () {\n    eq(R.reverse([]), []);\n    eq(R.reverse([1]), [1]);\n    eq(R.reverse([1, 2]), [2, 1]);\n    eq(R.reverse([1, 2, 3]), [3, 2, 1]);\n  });","file":"reverse.js","skipped":false,"dir":"test"},{"name":"reverses twice an array should be the array itself","suites":["reverse"],"updatePoint":{"line":14,"column":56,"index":377},"line":14,"code":"  it('reverses twice an array should be the array itself', function () {\n    fc.assert(fc.property(fc.array(fc.anything()), function (array) {\n      eq(R.reverse(R.reverse(array)), array);\n    }));\n  });","file":"reverse.js","skipped":false,"dir":"test"},{"name":"reverses strings","suites":["reverse"],"updatePoint":{"line":19,"column":22,"index":547},"line":19,"code":"  it('reverses strings', function () {\n    eq(R.reverse(''), '');\n    eq(R.reverse('a'), 'a');\n    eq(R.reverse('ab'), 'ba');\n    eq(R.reverse('abc'), 'cba');\n  });","file":"reverse.js","skipped":false,"dir":"test"},{"name":"reverses twice a string should be the string itself","suites":["reverse"],"updatePoint":{"line":25,"column":57,"index":747},"line":25,"code":"  it('reverses twice a string should be the string itself', function () {\n    fc.assert(fc.property(fc.fullUnicodeString(), function (str) {\n      eq(R.reverse(R.reverse(str)), str);\n    }));\n  });","file":"reverse.js","skipped":false,"dir":"test"},{"name":"scans simple functions over arrays with the supplied accumulator","suites":["scan"],"updatePoint":{"line":20,"column":70,"index":373},"line":20,"code":"  it('scans simple functions over arrays with the supplied accumulator', function () {\n    eq(R.scan(add, 0, [1, 2, 3, 4]), [0, 1, 3, 6, 10]);\n    eq(R.scan(mult, 1, [1, 2, 3, 4]), [1, 1, 2, 6, 24]);\n  });","file":"scan.js","skipped":false,"dir":"test"},{"name":"returns the accumulator for an empty array","suites":["scan"],"updatePoint":{"line":24,"column":48,"index":557},"line":24,"code":"  it('returns the accumulator for an empty array', function () {\n    eq(R.scan(add, 0, []), [0]);\n    eq(R.scan(mult, 1, []), [1]);\n  });","file":"scan.js","skipped":false,"dir":"test"},{"name":"works with transducers","suites":["scan"],"updatePoint":{"line":28,"column":28,"index":675},"line":28,"code":"  it('works with transducers', function () {\n    eq(R.into([], R.scan(add, 0), [1, 2, 3, 4]), [0, 1, 3, 6, 10]);\n    eq(R.into([], R.scan(mult, 1), []), [1]);\n  });","file":"scan.js","skipped":false,"dir":"test"},{"name":"composes with other transducers","suites":["scan"],"updatePoint":{"line":32,"column":37,"index":849},"line":32,"code":"  it('composes with other transducers', function () {\n    eq(R.into([], R.compose(R.scan(mult, 1), R.take(2)), [1, 2, 3, 4]), [1, 1]);\n    eq(R.into([], R.compose(R.scan(mult, 1), R.map(double)), [1, 2, 3, 4]), [2, 2, 4, 12, 48]);\n  });","file":"scan.js","skipped":false,"dir":"test"},{"name":"works lazily: taking 3 elements must call reducer twice","suites":["scan"],"updatePoint":{"line":36,"column":61,"index":1110},"line":36,"code":"  it('works lazily: taking 3 elements must call reducer twice', function () {\n    var reducer = sinon.spy();\n    R.into([], R.compose(R.scan(reducer, 0), R.take(3)), [1, 2, 3, 4]);\n    sinon.assert.calledTwice(reducer);\n  });","file":"scan.js","skipped":false,"dir":"test"},{"name":"works lazily: taking 0 elements must call reducer 0 times","suites":["scan"],"updatePoint":{"line":41,"column":63,"index":1338},"line":41,"code":"  it('works lazily: taking 0 elements must call reducer 0 times', function () {\n    var reducer = sinon.spy();\n    R.into([], R.compose(R.scan(reducer, 0), R.take(0)), [1, 2, 3, 4]);\n    sinon.assert.notCalled(reducer);\n  });","file":"scan.js","skipped":false,"dir":"test"},{"name":"operates on a list of lists","suites":["sequence"],"updatePoint":{"line":13,"column":33,"index":301},"line":13,"code":"  it('operates on a list of lists', function () {\n    eq(R.sequence(ofArray, []), [[]]);\n    eq(R.sequence(ofArray, [[], [1, 2, 3, 4]]), []);\n    eq(R.sequence(ofArray, [[1], [2, 3, 4]]), [[1, 2], [1, 3], [1, 4]]);\n    eq(R.sequence(ofArray, [[1, 2], [3, 4]]), [[1, 3], [1, 4], [2, 3], [2, 4]]);\n    eq(R.sequence(ofArray, [[1, 2, 3], [4]]), [[1, 4], [2, 4], [3, 4]]);\n    eq(R.sequence(ofArray, [[1, 2, 3, 4], []]), []);\n  });","file":"sequence.js","skipped":false,"dir":"test"},{"name":"operates on a list of applicatives","suites":["sequence"],"updatePoint":{"line":21,"column":40,"index":736},"line":21,"code":"  it('operates on a list of applicatives', function () {\n    eq(R.sequence(ofMaybe, [S.Just(3), S.Just(4), S.Just(5)]), S.Just([3, 4, 5]));\n    eq(R.sequence(ofMaybe, [S.Just(3), S.Nothing(), S.Just(5)]), S.Nothing());\n  });","file":"sequence.js","skipped":false,"dir":"test"},{"name":"traverses left to right","suites":["sequence"],"updatePoint":{"line":25,"column":29,"index":950},"line":25,"code":"  it('traverses left to right', function () {\n    eq(R.sequence(ofEither, [S.Right(1), S.Right(2)]), S.Right([1, 2]));\n    eq(R.sequence(ofEither, [S.Right(1), S.Left('XXX')]), S.Left('XXX'));\n    eq(R.sequence(ofEither, [S.Left('XXX'), S.Right(1)]), S.Left('XXX'));\n    eq(R.sequence(ofEither, [S.Left('XXX'), S.Left('YYY')]), S.Left('XXX'));\n  });","file":"sequence.js","skipped":false,"dir":"test"},{"name":"dispatches to `sequence` method","suites":["sequence"],"updatePoint":{"line":31,"column":37,"index":1308},"line":31,"code":"  it('dispatches to `sequence` method', function () {\n    eq(R.sequence(Id, [Id(1), Id(2), Id(3)]), Id([1, 2, 3]));\n    eq(R.sequence(ofArray, Id([1, 2, 3])), [Id(1), Id(2), Id(3)]);\n  });","file":"sequence.js","skipped":false,"dir":"test"},{"name":"retrieves the proper sublist of a list","suites":["slice"],"updatePoint":{"line":6,"column":44,"index":154},"line":6,"code":"  it('retrieves the proper sublist of a list', function () {\n    var list = [8, 6, 7, 5, 3, 0, 9];\n    eq(R.slice(2, 5, list), [7, 5, 3]);\n  });","file":"slice.js","skipped":false,"dir":"test"},{"name":"handles array-like object","suites":["slice"],"updatePoint":{"line":10,"column":31,"index":286},"line":10,"code":"  it('handles array-like object', function () {\n    var args = function () {\n      return arguments;\n    }(1, 2, 3, 4, 5);\n\n    eq(R.slice(1, 4, args), [2, 3, 4]);\n  });","file":"slice.js","skipped":false,"dir":"test"},{"name":"can operate on strings","suites":["slice"],"updatePoint":{"line":17,"column":28,"index":453},"line":17,"code":"  it('can operate on strings', function () {\n    eq(R.slice(0, 0, 'abc'), '');\n    eq(R.slice(0, 1, 'abc'), 'a');\n    eq(R.slice(0, 2, 'abc'), 'ab');\n    eq(R.slice(0, 3, 'abc'), 'abc');\n    eq(R.slice(0, 4, 'abc'), 'abc');\n    eq(R.slice(1, 0, 'abc'), '');\n    eq(R.slice(1, 1, 'abc'), '');\n    eq(R.slice(1, 2, 'abc'), 'b');\n    eq(R.slice(1, 3, 'abc'), 'bc');\n    eq(R.slice(1, 4, 'abc'), 'bc');\n    eq(R.slice(0, -4, 'abc'), '');\n    eq(R.slice(0, -3, 'abc'), '');\n    eq(R.slice(0, -2, 'abc'), 'a');\n    eq(R.slice(0, -1, 'abc'), 'ab');\n    eq(R.slice(0, -0, 'abc'), '');\n    eq(R.slice(-2, -4, 'abc'), '');\n    eq(R.slice(-2, -3, 'abc'), '');\n    eq(R.slice(-2, -2, 'abc'), '');\n    eq(R.slice(-2, -1, 'abc'), 'b');\n    eq(R.slice(-2, -0, 'abc'), '');\n  });","file":"slice.js","skipped":false,"dir":"test"},{"name":"sorts the elements of a list","suites":["sort"],"updatePoint":{"line":6,"column":34,"index":143},"line":6,"code":"  it('sorts the elements of a list', function () {\n    eq(R.sort(function (a, b) {\n      return a - b;\n    }, [3, 1, 8, 1, 2, 5]), [1, 1, 2, 3, 5, 8]);\n  });","file":"sort.js","skipped":false,"dir":"test"},{"name":"does not affect the list passed supplied","suites":["sort"],"updatePoint":{"line":11,"column":46,"index":313},"line":11,"code":"  it('does not affect the list passed supplied', function () {\n    var list = [3, 1, 8, 1, 2, 5];\n    eq(R.sort(function (a, b) {\n      return a - b;\n    }, list), [1, 1, 2, 3, 5, 8]);\n    eq(list, [3, 1, 8, 1, 2, 5]);\n  });","file":"sort.js","skipped":false,"dir":"test"},{"name":"sorts by a simple property of the objects","suites":["sortBy"],"updatePoint":{"line":55,"column":47,"index":1099},"line":55,"code":"  it('sorts by a simple property of the objects', function () {\n    var sortedAlbums = R.sortBy(R.prop('title'), albums);\n    eq(sortedAlbums.length, albums.length);\n    eq(sortedAlbums[0].title, 'A Farewell to Kings');\n    eq(sortedAlbums[11].title, 'Timeout');\n  });","file":"sortBy.js","skipped":false,"dir":"test"},{"name":"preserves object identity","suites":["sortBy"],"updatePoint":{"line":61,"column":31,"index":1352},"line":61,"code":"  it('preserves object identity', function () {\n    var a = {\n      value: 'a'\n    };\n    var b = {\n      value: 'b'\n    };\n    var result = R.sortBy(R.prop('value'), [b, a]);\n    eq(result[0], a);\n    eq(result[1], b);\n  });","file":"sortBy.js","skipped":false,"dir":"test"},{"name":"sorts array-like object","suites":["sortBy"],"updatePoint":{"line":72,"column":29,"index":1576},"line":72,"code":"  it('sorts array-like object', function () {\n    var args = function () {\n      return arguments;\n    }('c', 'a', 'b');\n\n    var result = R.sortBy(R.identity, args);\n    eq(result[0], 'a');\n    eq(result[1], 'b');\n    eq(result[2], 'c');\n  });","file":"sortBy.js","skipped":false,"dir":"test"},{"name":"sorts by a simple property of the objects","suites":["sortWith"],"updatePoint":{"line":67,"column":47,"index":1245},"line":67,"code":"  it('sorts by a simple property of the objects', function () {\n    var sortedAlbums = R.sortWith([R.ascend(R.prop('title'))], albums);\n    eq(sortedAlbums.length, albums.length);\n    eq(sortedAlbums[0].title, 'A Farewell to Kings');\n    eq(sortedAlbums[11].title, 'Timeout');\n  });","file":"sortWith.js","skipped":false,"dir":"test"},{"name":"sorts by multiple properties of the objects","suites":["sortWith"],"updatePoint":{"line":73,"column":49,"index":1530},"line":73,"code":"  it('sorts by multiple properties of the objects', function () {\n    var sortedAlbums = R.sortWith([R.ascend(R.prop('score')), R.ascend(R.prop('title'))], albums);\n    eq(sortedAlbums.length, albums.length);\n    eq(sortedAlbums[0].title, 'Five Leaves Left');\n    eq(sortedAlbums[1].title, 'In Times of Desparation');\n    eq(sortedAlbums[11].title, 'Romance with the Unseen');\n  });","file":"sortWith.js","skipped":false,"dir":"test"},{"name":"sorts by 3 properties of the objects","suites":["sortWith"],"updatePoint":{"line":80,"column":42,"index":1906},"line":80,"code":"  it('sorts by 3 properties of the objects', function () {\n    var sortedAlbums = R.sortWith([R.ascend(R.prop('genre')), R.ascend(R.prop('score')), R.ascend(R.prop('title'))], albums);\n    eq(sortedAlbums.length, albums.length);\n    eq(sortedAlbums[0].title, 'Art of the Fugue');\n    eq(sortedAlbums[1].title, 'Goldberg Variations');\n    eq(sortedAlbums[11].title, 'New World Symphony');\n  });","file":"sortWith.js","skipped":false,"dir":"test"},{"name":"sorts by multiple properties using ascend and descend","suites":["sortWith"],"updatePoint":{"line":87,"column":59,"index":2317},"line":87,"code":"  it('sorts by multiple properties using ascend and descend', function () {\n    var sortedAlbums = R.sortWith([R.descend(R.prop('score')), R.ascend(R.prop('title'))], albums);\n    eq(sortedAlbums.length, albums.length);\n    eq(sortedAlbums[0].title, 'Fly By Night');\n    eq(sortedAlbums[1].title, 'Romance with the Unseen');\n    eq(sortedAlbums[11].title, 'In Times of Desparation');\n  });","file":"sortWith.js","skipped":false,"dir":"test"},{"name":"preserves object identity","suites":["sortWith"],"updatePoint":{"line":94,"column":31,"index":2679},"line":94,"code":"  it('preserves object identity', function () {\n    var a = {\n      value: 'a'\n    };\n    var b = {\n      value: 'b'\n    };\n    var result = R.sortWith([R.ascend(R.prop('value'))], [b, a]);\n    eq(result[0], a);\n    eq(result[1], b);\n  });","file":"sortWith.js","skipped":false,"dir":"test"},{"name":"sorts array-like object","suites":["sortWith"],"updatePoint":{"line":105,"column":29,"index":2917},"line":105,"code":"  it('sorts array-like object', function () {\n    var args = function () {\n      return arguments;\n    }('c', 'a', 'b');\n\n    var result = R.sortWith([R.ascend(R.identity)], args);\n    eq(result[0], 'a');\n    eq(result[1], 'b');\n    eq(result[2], 'c');\n  });","file":"sortWith.js","skipped":false,"dir":"test"},{"name":"splits a string into an array","suites":["split"],"updatePoint":{"line":6,"column":35,"index":145},"line":6,"code":"  it('splits a string into an array', function () {\n    eq(R.split('.', 'a.b.c.xyz.d'), ['a', 'b', 'c', 'xyz', 'd']);\n  });","file":"split.js","skipped":false,"dir":"test"},{"name":"the split string can be arbitrary","suites":["split"],"updatePoint":{"line":9,"column":39,"index":273},"line":9,"code":"  it('the split string can be arbitrary', function () {\n    eq(R.split('at', 'The Cat in the Hat sat on the mat'), ['The C', ' in the H', ' s', ' on the m', '']);\n  });","file":"split.js","skipped":false,"dir":"test"},{"name":"splits an array at a given index","suites":["splitAt"],"updatePoint":{"line":6,"column":38,"index":150},"line":6,"code":"  it('splits an array at a given index', function () {\n    eq(R.splitAt(1, [1, 2, 3]), [[1], [2, 3]]);\n  });","file":"splitAt.js","skipped":false,"dir":"test"},{"name":"splits a string at a given index","suites":["splitAt"],"updatePoint":{"line":9,"column":38,"index":259},"line":9,"code":"  it('splits a string at a given index', function () {\n    eq(R.splitAt(5, 'hello world'), ['hello', ' world']);\n  });","file":"splitAt.js","skipped":false,"dir":"test"},{"name":"can handle index greater than array length","suites":["splitAt"],"updatePoint":{"line":12,"column":48,"index":388},"line":12,"code":"  it('can handle index greater than array length', function () {\n    eq(R.splitAt(4, [1, 2]), [[1, 2], []]);\n  });","file":"splitAt.js","skipped":false,"dir":"test"},{"name":"can support negative index","suites":["splitAt"],"updatePoint":{"line":15,"column":32,"index":487},"line":15,"code":"  it('can support negative index', function () {\n    eq(R.splitAt(-1, 'foobar'), ['fooba', 'r']);\n  });","file":"splitAt.js","skipped":false,"dir":"test"},{"name":"splits a collection into slices of the specified length","suites":["splitEvery"],"updatePoint":{"line":8,"column":61,"index":209},"line":8,"code":"  it('splits a collection into slices of the specified length', function () {\n    eq(R.splitEvery(1, [1, 2, 3, 4]), [[1], [2], [3], [4]]);\n    eq(R.splitEvery(2, [1, 2, 3, 4]), [[1, 2], [3, 4]]);\n    eq(R.splitEvery(3, [1, 2, 3, 4]), [[1, 2, 3], [4]]);\n    eq(R.splitEvery(4, [1, 2, 3, 4]), [[1, 2, 3, 4]]);\n    eq(R.splitEvery(5, [1, 2, 3, 4]), [[1, 2, 3, 4]]);\n    eq(R.splitEvery(3, []), []);\n    eq(R.splitEvery(1, 'abcd'), ['a', 'b', 'c', 'd']);\n    eq(R.splitEvery(2, 'abcd'), ['ab', 'cd']);\n    eq(R.splitEvery(3, 'abcd'), ['abc', 'd']);\n    eq(R.splitEvery(4, 'abcd'), ['abcd']);\n    eq(R.splitEvery(5, 'abcd'), ['abcd']);\n    eq(R.splitEvery(3, ''), []);\n  });","file":"splitEvery.js","skipped":false,"dir":"test"},{"name":"throws if first argument is not positive","suites":["splitEvery"],"updatePoint":{"line":22,"column":46,"index":864},"line":22,"code":"  it('throws if first argument is not positive', function () {\n    var test = function (err) {\n      return err.constructor === Error && err.message === 'First argument to splitEvery must be a positive integer';\n    };\n\n    assert.throws(function () {\n      R.splitEvery(0, []);\n    }, test);\n    assert.throws(function () {\n      R.splitEvery(0, '');\n    }, test);\n    assert.throws(function () {\n      R.splitEvery(-1, []);\n    }, test);\n    assert.throws(function () {\n      R.splitEvery(-1, '');\n    }, test);\n  });","file":"splitEvery.js","skipped":false,"dir":"test"},{"name":"splits an array at the first instance to satisfy the predicate","suites":["splitWhen"],"updatePoint":{"line":6,"column":68,"index":182},"line":6,"code":"  it('splits an array at the first instance to satisfy the predicate', function () {\n    eq(R.splitWhen(R.equals(2), [1, 2, 3]), [[1], [2, 3]]);\n  });","file":"splitWhen.js","skipped":false,"dir":"test"},{"name":"retains all original elements","suites":["splitWhen"],"updatePoint":{"line":9,"column":35,"index":300},"line":9,"code":"  it('retains all original elements', function () {\n    eq(R.splitWhen(R.T, [1, 1, 1]), [[], [1, 1, 1]]);\n  });","file":"splitWhen.js","skipped":false,"dir":"test"},{"name":"only splits once","suites":["splitWhen"],"updatePoint":{"line":12,"column":22,"index":399},"line":12,"code":"  it('only splits once', function () {\n    eq(R.splitWhen(R.equals(2), [1, 2, 3, 1, 2, 3]), [[1], [2, 3, 1, 2, 3]]);\n  });","file":"splitWhen.js","skipped":false,"dir":"test"},{"name":"Splits an array into slices, whenever the predicate returns true","suites":["splitWhenever"],"updatePoint":{"line":6,"column":70,"index":188},"line":6,"code":"  it('Splits an array into slices, whenever the predicate returns true', function () {\n    eq(R.splitWhenever(R.equals(2), [1, 2, 3, 2, 4, 5, 2, 6, 7]), [[1], [3], [4, 5], [6, 7]]);\n    eq(R.splitWhenever(R.equals(2), [1, 2, 1]), [[1], [1]]);\n    eq(R.splitWhenever(R.equals(1), [1, 2, 1]), [[2]]);\n    eq(R.splitWhenever(R.equals(3), [1, 2, 1]), [[1, 2, 1]]);\n    eq(R.splitWhenever(e => e % 2 === 0 ? true : false, [1, 2, 3, 2, 4, 5, 2, 6, 7]), [[1], [3], [5], [7]]);\n    eq(R.splitWhenever(R.equals(3), []), []);\n    eq(R.splitWhenever(R.equals(1), [1, 2, 3]), [[2, 3]]);\n    eq(R.splitWhenever(R.equals(4), [1, 2, 3]), [[1, 2, 3]]);\n  });","file":"splitWhenever.js","skipped":false,"dir":"test"},{"name":"should return true when a string starts with the provided value","suites":["startsWith"],"updatePoint":{"line":6,"column":69,"index":184},"line":6,"code":"  it('should return true when a string starts with the provided value', function () {\n    eq(R.startsWith('a', 'abc'), true);\n  });","file":"startsWith.js","skipped":false,"dir":"test"},{"name":"should return true when a long string starts with the provided value","suites":["startsWith"],"updatePoint":{"line":9,"column":74,"index":321},"line":9,"code":"  it('should return true when a long string starts with the provided value', function () {\n    eq(R.startsWith('astro', 'astrology'), true);\n  });","file":"startsWith.js","skipped":false,"dir":"test"},{"name":"should return false when a string does not start with the provided value","suites":["startsWith"],"updatePoint":{"line":12,"column":78,"index":472},"line":12,"code":"  it('should return false when a string does not start with the provided value', function () {\n    eq(R.startsWith('b', 'abc'), false);\n  });","file":"startsWith.js","skipped":false,"dir":"test"},{"name":"should return false when a long string does not start with the provided value","suites":["startsWith"],"updatePoint":{"line":15,"column":83,"index":619},"line":15,"code":"  it('should return false when a long string does not start with the provided value', function () {\n    eq(R.startsWith('stro', 'astrology'), false);\n  });","file":"startsWith.js","skipped":false,"dir":"test"},{"name":"should return true when an array starts with the provided value","suites":["startsWith"],"updatePoint":{"line":18,"column":69,"index":761},"line":18,"code":"  it('should return true when an array starts with the provided value', function () {\n    eq(R.startsWith(['a'], ['a', 'b', 'c']), true);\n  });","file":"startsWith.js","skipped":false,"dir":"test"},{"name":"should return true when an array starts with the provided values","suites":["startsWith"],"updatePoint":{"line":21,"column":70,"index":906},"line":21,"code":"  it('should return true when an array starts with the provided values', function () {\n    eq(R.startsWith(['a', 'b'], ['a', 'b', 'c']), true);\n  });","file":"startsWith.js","skipped":false,"dir":"test"},{"name":"should return false when an array does not start with the provided value","suites":["startsWith"],"updatePoint":{"line":24,"column":78,"index":1064},"line":24,"code":"  it('should return false when an array does not start with the provided value', function () {\n    eq(R.startsWith(['b'], ['a', 'b', 'c']), false);\n  });","file":"startsWith.js","skipped":false,"dir":"test"},{"name":"should return false when an array does not start with the provided values","suites":["startsWith"],"updatePoint":{"line":27,"column":79,"index":1219},"line":27,"code":"  it('should return false when an array does not start with the provided values', function () {\n    eq(R.startsWith(['b', 'c'], ['a', 'b', 'c']), false);\n  });","file":"startsWith.js","skipped":false,"dir":"test"},{"name":"subtracts two numbers","suites":["subtract"],"updatePoint":{"line":6,"column":27,"index":140},"line":6,"code":"  it('subtracts two numbers', function () {\n    eq(R.subtract(22, 7), 15);\n  });","file":"subtract.js","skipped":false,"dir":"test"},{"name":"coerces its arguments to numbers","suites":["subtract"],"updatePoint":{"line":9,"column":38,"index":232},"line":9,"code":"  it('coerces its arguments to numbers', function () {\n    eq(R.subtract('1', '2'), -1);\n    eq(R.subtract(1, '2'), -1);\n    eq(R.subtract(true, false), 1);\n    eq(R.subtract(null, null), 0);\n    eq(R.subtract(undefined, undefined), NaN);\n    eq(R.subtract(new Date(1), new Date(2)), -1);\n  });","file":"subtract.js","skipped":false,"dir":"test"},{"name":"adds together the array of numbers supplied","suites":["sum"],"updatePoint":{"line":6,"column":49,"index":157},"line":6,"code":"  it('adds together the array of numbers supplied', function () {\n    eq(R.sum([1, 2, 3, 4]), 10);\n  });","file":"sum.js","skipped":false,"dir":"test"},{"name":"does not save the state of the accumulator","suites":["sum"],"updatePoint":{"line":9,"column":48,"index":261},"line":9,"code":"  it('does not save the state of the accumulator', function () {\n    eq(R.sum([1, 2, 3, 4]), 10);\n    eq(R.sum([1]), 1);\n    eq(R.sum([5, 5, 5, 5, 5]), 25);\n  });","file":"sum.js","skipped":false,"dir":"test"},{"name":"swaps an element from one index to the other","suites":["swap"],"updatePoint":{"line":7,"column":50,"index":202},"line":7,"code":"  it('swaps an element from one index to the other', function () {\n    eq(R.swap(0, 1, list), ['b', 'a', 'c', 'd', 'e', 'f']);\n    eq(R.swap(2, 1, list), ['a', 'c', 'b', 'd', 'e', 'f']);\n    eq(R.swap(-1, 0, list), ['f', 'b', 'c', 'd', 'e', 'a']);\n    eq(R.swap(4, 1, list), ['a', 'e', 'c', 'd', 'b', 'f']);\n  });","file":"swap.js","skipped":false,"dir":"test"},{"name":"does nothing when indexes are outside the list boundaries","suites":["swap"],"updatePoint":{"line":13,"column":63,"index":529},"line":13,"code":"  it('does nothing when indexes are outside the list boundaries', function () {\n    eq(R.swap(-20, 2, list), list);\n    eq(R.swap(20, 2, list), list);\n    eq(R.swap(2, 20, list), list);\n    eq(R.swap(2, -20, list), list);\n    eq(R.swap(20, 20, list), list);\n    eq(R.swap(-20, -20, list), list);\n  });","file":"swap.js","skipped":false,"dir":"test"},{"name":"does nothing when indexes are equal","suites":["swap"],"updatePoint":{"line":21,"column":41,"index":809},"line":21,"code":"  it('does nothing when indexes are equal', function () {\n    eq(R.swap(0, 0, list), list);\n  });","file":"swap.js","skipped":false,"dir":"test"},{"name":"should be the same when swapping index order","suites":["swap"],"updatePoint":{"line":24,"column":50,"index":916},"line":24,"code":"  it('should be the same when swapping index order', function () {\n    eq(R.swap(0, 1, list), R.swap(1, 0, list));\n  });","file":"swap.js","skipped":false,"dir":"test"},{"name":"swaps property values from one property to another","suites":["swap"],"updatePoint":{"line":27,"column":56,"index":1043},"line":27,"code":"  it('swaps property values from one property to another', function () {\n    eq(R.swap('a', 'b', {\n      a: 1,\n      b: 2\n    }), {\n      a: 2,\n      b: 1\n    });\n    eq(R.swap('b', 'a', {\n      a: 1,\n      b: 2\n    }), {\n      a: 2,\n      b: 1\n    });\n  });","file":"swap.js","skipped":false,"dir":"test"},{"name":"does nothing when property names are not defined","suites":["swap"],"updatePoint":{"line":43,"column":54,"index":1300},"line":43,"code":"  it('does nothing when property names are not defined', function () {\n    eq(R.swap('a', 'b', {\n      a: 1\n    }), {\n      a: 1\n    });\n    eq(R.swap('a', 'b', {\n      b: 2\n    }), {\n      b: 2\n    });\n  });","file":"swap.js","skipped":false,"dir":"test"},{"name":"swaps characters in string from one index to another","suites":["swap"],"updatePoint":{"line":55,"column":58,"index":1513},"line":55,"code":"  it('swaps characters in string from one index to another', function () {\n    eq(R.swap(0, 2, 'foo'), 'oof');\n  });","file":"swap.js","skipped":false,"dir":"test"},{"name":"finds the set of all elements in the first or second list but not both","suites":["symmetricDifference"],"updatePoint":{"line":18,"column":76,"index":480},"line":18,"code":"  it('finds the set of all elements in the first or second list but not both', function () {\n    eq(R.symmetricDifference(M, N), [1, 2, 5, 6]);\n  });","file":"symmetricDifference.js","skipped":false,"dir":"test"},{"name":"does not allow duplicates in the output even if the input lists had duplicates","suites":["symmetricDifference"],"updatePoint":{"line":21,"column":84,"index":638},"line":21,"code":"  it('does not allow duplicates in the output even if the input lists had duplicates', function () {\n    eq(R.symmetricDifference(M2, N2), [1, 2, 5, 6]);\n  });","file":"symmetricDifference.js","skipped":false,"dir":"test"},{"name":"has R.equals semantics","suites":["symmetricDifference"],"updatePoint":{"line":24,"column":28,"index":742},"line":24,"code":"  it('has R.equals semantics', function () {\n    eq(R.symmetricDifference([0], [-0]).length, 2);\n    eq(R.symmetricDifference([-0], [0]).length, 2);\n    eq(R.symmetricDifference([NaN], [NaN]).length, 0);\n    eq(R.symmetricDifference([new Just([42])], [new Just([42])]).length, 0);\n  });","file":"symmetricDifference.js","skipped":false,"dir":"test"},{"name":"works for arrays of different lengths","suites":["symmetricDifference"],"updatePoint":{"line":30,"column":43,"index":1044},"line":30,"code":"  it('works for arrays of different lengths', function () {\n    eq(R.symmetricDifference(Z, Z2), [10, 1, 2, 7, 8]);\n    eq(R.symmetricDifference(Z2, Z), [1, 2, 7, 8, 10]);\n  });","file":"symmetricDifference.js","skipped":false,"dir":"test"},{"name":"will not create a \"sparse\" array","suites":["symmetricDifference"],"updatePoint":{"line":34,"column":38,"index":1217},"line":34,"code":"  it('will not create a \"sparse\" array', function () {\n    eq(R.symmetricDifference(M2, [3]).length, 3);\n  });","file":"symmetricDifference.js","skipped":false,"dir":"test"},{"name":"returns an empty array if there are no different elements","suites":["symmetricDifference"],"updatePoint":{"line":37,"column":63,"index":1353},"line":37,"code":"  it('returns an empty array if there are no different elements', function () {\n    eq(R.symmetricDifference(M2, M), []);\n    eq(R.symmetricDifference(M, M2), []);\n  }); // Arbitrary producing arrays of unique values (with respect to R.equals)","file":"symmetricDifference.js","skipped":false,"dir":"test"},{"name":"returns empty arrays when receiving twice the same array","suites":["symmetricDifference"],"updatePoint":{"line":48,"column":62,"index":1781},"line":48,"code":"  it('returns empty arrays when receiving twice the same array', function () {\n    fc.assert(fc.property(fc.clone(compatibleREquals, 2), function (arrays) {\n      var A1 = arrays[0];\n      var A2 = arrays[1];\n      eq(R.symmetricDifference(A1, A2), []);\n    }));\n  });","file":"symmetricDifference.js","skipped":false,"dir":"test"},{"name":"returns empty arrays when receiving an array and a permutation of it","suites":["symmetricDifference"],"updatePoint":{"line":55,"column":74,"index":2062},"line":55,"code":"  it('returns empty arrays when receiving an array and a permutation of it', function () {\n    fc.assert(fc.property(fc.clone(compatibleREquals, 2).chain(function (arrays) {\n      return fc.tuple(fc.constant(arrays[0]), fc.shuffledSubarray(arrays[1], arrays[1].length, arrays[1].length));\n    }), function (arrays) {\n      var A1 = arrays[0];\n      var A2 = arrays[1];\n      eq(R.symmetricDifference(A1, A2), []);\n    }));\n  });","file":"symmetricDifference.js","skipped":false,"dir":"test"},{"name":"returns missing items when receiving an array and a permuted subset of it","suites":["symmetricDifference"],"updatePoint":{"line":64,"column":79,"index":2496},"line":64,"code":"  it('returns missing items when receiving an array and a permuted subset of it', function () {\n    fc.assert(fc.property(fc.clone(compatibleREquals, 2).chain(function (arrays) {\n      return fc.tuple(fc.constant(arrays[0]), fc.shuffledSubarray(arrays[1]));\n    }), function (arrays) {\n      var A1 = arrays[0];\n      var A2 = arrays[1];\n      eq(R.symmetricDifference(A1, A2).length, A1.length - A2.length);\n    }));\n  });","file":"symmetricDifference.js","skipped":false,"dir":"test"},{"name":"returns an array not containing too many items","suites":["symmetricDifference"],"updatePoint":{"line":73,"column":52,"index":2893},"line":73,"code":"  it('returns an array not containing too many items', function () {\n    fc.assert(fc.property(compatibleREquals, compatibleREquals, compatibleREquals, compatibleREquals, compatibleREquals, function (A1, A2, B, C1, C2) {\n      var M = R.uniq(A1.concat(B).concat(C1));\n      var N = R.uniq(A2.concat(B).concat(C2));\n      var difference = R.symmetricDifference(M, N);\n      var upperBoundDifferenceLength = A1.length + A2.length + C1.length + C2.length;\n      eq(difference.length <= upperBoundDifferenceLength, true);\n    }));\n  });","file":"symmetricDifference.js","skipped":false,"dir":"test"},{"name":"returns an array containing only items coming from one of the sources","suites":["symmetricDifference"],"updatePoint":{"line":82,"column":75,"index":3449},"line":82,"code":"  it('returns an array containing only items coming from one of the sources', function () {\n    fc.assert(fc.property(compatibleREquals, compatibleREquals, compatibleREquals, compatibleREquals, compatibleREquals, function (A1, A2, B, C1, C2) {\n      var M = R.uniq(A1.concat(B).concat(C1));\n      var N = R.uniq(A2.concat(B).concat(C2));\n      var MN = R.uniq(M.concat(N));\n      var difference = R.symmetricDifference(M, N);\n      eq(R.symmetricDifference(difference, MN).length, MN.length - difference.length);\n    }));\n  });","file":"symmetricDifference.js","skipped":false,"dir":"test"},{"name":"combines two lists into the set of all elements unique to either list based on the passed-in equality predicate","suites":["symmetricDifferenceWith"],"updatePoint":{"line":67,"column":117,"index":806},"line":67,"code":"  it('combines two lists into the set of all elements unique to either list based on the passed-in equality predicate', function () {\n    eq(R.symmetricDifferenceWith(eqA, Ro, So), [{\n      a: 1\n    }, {\n      a: 2\n    }, {\n      a: 5\n    }, {\n      a: 6\n    }]);\n  });","file":"symmetricDifferenceWith.js","skipped":false,"dir":"test"},{"name":"does not allow duplicates in the output even if the input lists had duplicates","suites":["symmetricDifferenceWith"],"updatePoint":{"line":78,"column":84,"index":1043},"line":78,"code":"  it('does not allow duplicates in the output even if the input lists had duplicates', function () {\n    eq(R.symmetricDifferenceWith(eqA, Ro2, So2), [{\n      a: 1\n    }, {\n      a: 2\n    }, {\n      a: 5\n    }, {\n      a: 6\n    }]);\n  });","file":"symmetricDifferenceWith.js","skipped":false,"dir":"test"},{"name":"does not return a \"sparse\" array","suites":["symmetricDifferenceWith"],"updatePoint":{"line":89,"column":38,"index":1236},"line":89,"code":"  it('does not return a \"sparse\" array', function () {\n    eq(R.symmetricDifferenceWith(identical, [1, 3, 2, 1, 3, 1, 2, 3], [3]).length, 2);\n  });","file":"symmetricDifferenceWith.js","skipped":false,"dir":"test"},{"name":"always returns true","suites":["T"],"updatePoint":{"line":6,"column":25,"index":131},"line":6,"code":"  it('always returns true', function () {\n    eq(R.T(), true);\n    eq(R.T(10), true);\n    eq(R.T(true), true);\n  });","file":"T.js","skipped":false,"dir":"test"},{"name":"returns the tail of an ordered collection","suites":["tail"],"updatePoint":{"line":8,"column":47,"index":189},"line":8,"code":"  it('returns the tail of an ordered collection', function () {\n    eq(R.tail([1, 2, 3]), [2, 3]);\n    eq(R.tail([2, 3]), [3]);\n    eq(R.tail([3]), []);\n    eq(R.tail([]), []);\n    eq(R.tail('abc'), 'bc');\n    eq(R.tail('bc'), 'c');\n    eq(R.tail('c'), '');\n    eq(R.tail(''), '');\n  });","file":"tail.js","skipped":false,"dir":"test"},{"name":"throws if applied to null or undefined","suites":["tail"],"updatePoint":{"line":18,"column":44,"index":474},"line":18,"code":"  it('throws if applied to null or undefined', function () {\n    assert.throws(function () {\n      R.tail(null);\n    }, TypeError);\n    assert.throws(function () {\n      R.tail(undefined);\n    }, TypeError);\n  });","file":"tail.js","skipped":false,"dir":"test"},{"name":"takes only the first `n` elements from a list","suites":["take"],"updatePoint":{"line":10,"column":51,"index":224},"line":10,"code":"  it('takes only the first `n` elements from a list', function () {\n    eq(R.take(3, ['a', 'b', 'c', 'd', 'e', 'f', 'g']), ['a', 'b', 'c']);\n  });","file":"take.js","skipped":false,"dir":"test"},{"name":"returns only as many as the array can provide","suites":["take"],"updatePoint":{"line":13,"column":51,"index":371},"line":13,"code":"  it('returns only as many as the array can provide', function () {\n    eq(R.take(3, [1, 2]), [1, 2]);\n    eq(R.take(3, []), []);\n  });","file":"take.js","skipped":false,"dir":"test"},{"name":"returns an equivalent list if `n` is < 0","suites":["take"],"updatePoint":{"line":17,"column":46,"index":502},"line":17,"code":"  it('returns an equivalent list if `n` is < 0', function () {\n    eq(R.take(-1, [1, 2, 3]), [1, 2, 3]);\n    eq(R.take(-Infinity, [1, 2, 3]), [1, 2, 3]);\n  });","file":"take.js","skipped":false,"dir":"test"},{"name":"never returns the input array","suites":["take"],"updatePoint":{"line":21,"column":35,"index":651},"line":21,"code":"  it('never returns the input array', function () {\n    var xs = [1, 2, 3];\n    assert.notStrictEqual(R.take(3, xs), xs);\n    assert.notStrictEqual(R.take(Infinity, xs), xs);\n    assert.notStrictEqual(R.take(-1, xs), xs);\n  });","file":"take.js","skipped":false,"dir":"test"},{"name":"can operate on strings","suites":["take"],"updatePoint":{"line":27,"column":28,"index":872},"line":27,"code":"  it('can operate on strings', function () {\n    eq(R.take(3, 'Ramda'), 'Ram');\n    eq(R.take(2, 'Ramda'), 'Ra');\n    eq(R.take(1, 'Ramda'), 'R');\n    eq(R.take(0, 'Ramda'), '');\n  });","file":"take.js","skipped":false,"dir":"test"},{"name":"handles zero correctly (#1224)","suites":["take"],"updatePoint":{"line":33,"column":36,"index":1065},"line":33,"code":"  it('handles zero correctly (#1224)', function () {\n    eq(R.into([], R.take(0), [1, 2, 3]), []);\n  });","file":"take.js","skipped":false,"dir":"test"},{"name":"steps correct number of times","suites":["take"],"updatePoint":{"line":36,"column":35,"index":1169},"line":36,"code":"  it('steps correct number of times', function () {\n    var spy = sinon.spy();\n    R.into([], R.compose(R.map(spy), R.take(2)), [1, 2, 3]);\n    sinon.assert.calledTwice(spy);\n  });","file":"take.js","skipped":false,"dir":"test"},{"name":"transducer called for every member of list if `n` is < 0","suites":["take"],"updatePoint":{"line":41,"column":62,"index":1377},"line":41,"code":"  it('transducer called for every member of list if `n` is < 0', function () {\n    var spy = sinon.spy();\n    R.into([], R.compose(R.map(spy), R.take(-1)), [1, 2, 3]);\n    sinon.assert.calledThrice(spy);\n  });","file":"take.js","skipped":false,"dir":"test"},{"name":"takes only the last `n` elements from a list","suites":["takeLast"],"updatePoint":{"line":8,"column":50,"index":196},"line":8,"code":"  it('takes only the last `n` elements from a list', function () {\n    eq(R.takeLast(3, ['a', 'b', 'c', 'd', 'e', 'f', 'g']), ['e', 'f', 'g']);\n  });","file":"takeLast.js","skipped":false,"dir":"test"},{"name":"returns only as many as the array can provide","suites":["takeLast"],"updatePoint":{"line":11,"column":51,"index":347},"line":11,"code":"  it('returns only as many as the array can provide', function () {\n    eq(R.takeLast(3, [1, 2]), [1, 2]);\n    eq(R.takeLast(3, []), []);\n  });","file":"takeLast.js","skipped":false,"dir":"test"},{"name":"returns an equivalent list if `n` is < 0","suites":["takeLast"],"updatePoint":{"line":15,"column":46,"index":486},"line":15,"code":"  it('returns an equivalent list if `n` is < 0', function () {\n    eq(R.takeLast(-1, [1, 2, 3]), [1, 2, 3]);\n    eq(R.takeLast(-Infinity, [1, 2, 3]), [1, 2, 3]);\n  });","file":"takeLast.js","skipped":false,"dir":"test"},{"name":"never returns the input array","suites":["takeLast"],"updatePoint":{"line":19,"column":35,"index":643},"line":19,"code":"  it('never returns the input array', function () {\n    var xs = [1, 2, 3];\n    assert.notStrictEqual(R.takeLast(3, xs), xs);\n    assert.notStrictEqual(R.takeLast(Infinity, xs), xs);\n    assert.notStrictEqual(R.takeLast(-1, xs), xs);\n  });","file":"takeLast.js","skipped":false,"dir":"test"},{"name":"can operate on strings","suites":["takeLast"],"updatePoint":{"line":25,"column":28,"index":876},"line":25,"code":"  it('can operate on strings', function () {\n    eq(R.takeLast(3, 'Ramda'), 'mda');\n  });","file":"takeLast.js","skipped":false,"dir":"test"},{"name":"handles zero correctly (#1224)","suites":["takeLast"],"updatePoint":{"line":28,"column":36,"index":974},"line":28,"code":"  it('handles zero correctly (#1224)', function () {\n    eq(R.takeLast(0, [1, 2, 3]), []);\n  });","file":"takeLast.js","skipped":false,"dir":"test"},{"name":"continues taking elements while the function reports `true`","suites":["takeLastWhile"],"updatePoint":{"line":8,"column":65,"index":216},"line":8,"code":"  it('continues taking elements while the function reports `true`', function () {\n    eq(R.takeLastWhile(function (x) {\n      return x !== 5;\n    }, [1, 3, 5, 7, 9]), [7, 9]);\n  });","file":"takeLastWhile.js","skipped":false,"dir":"test"},{"name":"starts at the right arg and acknowledges undefined","suites":["takeLastWhile"],"updatePoint":{"line":13,"column":56,"index":389},"line":13,"code":"  it('starts at the right arg and acknowledges undefined', function () {\n    eq(R.takeLastWhile(function () {\n      assert(false);\n    }, []), []);\n    eq(R.takeLastWhile(function (x) {\n      return x !== void 0;\n    }, [1, 3, void 0, 5, 7]), [5, 7]);\n  });","file":"takeLastWhile.js","skipped":false,"dir":"test"},{"name":"can operate on strings","suites":["takeLastWhile"],"updatePoint":{"line":21,"column":28,"index":619},"line":21,"code":"  it('can operate on strings', function () {\n    eq(R.takeLastWhile(function (x) {\n      return x !== 'R';\n    }, 'Ramda'), 'amda');\n  });","file":"takeLastWhile.js","skipped":false,"dir":"test"},{"name":"continues taking elements while the function reports `true`","suites":["takeWhile"],"updatePoint":{"line":8,"column":65,"index":212},"line":8,"code":"  it('continues taking elements while the function reports `true`', function () {\n    eq(R.takeWhile(function (x) {\n      return x !== 5;\n    }, [1, 3, 5, 7, 9]), [1, 3]);\n  });","file":"takeWhile.js","skipped":false,"dir":"test"},{"name":"starts at the right arg and acknowledges undefined","suites":["takeWhile"],"updatePoint":{"line":13,"column":56,"index":381},"line":13,"code":"  it('starts at the right arg and acknowledges undefined', function () {\n    eq(R.takeWhile(function () {\n      assert(false);\n    }, []), []);\n    eq(R.takeWhile(function (x) {\n      return x !== void 0;\n    }, [1, 3, void 0, 5, 7]), [1, 3]);\n  });","file":"takeWhile.js","skipped":false,"dir":"test"},{"name":"can operate on strings","suites":["takeWhile"],"updatePoint":{"line":21,"column":28,"index":603},"line":21,"code":"  it('can operate on strings', function () {\n    eq(R.takeWhile(function (x) {\n      return x !== 'd';\n    }, 'Ramda'), 'Ram');\n  });","file":"takeWhile.js","skipped":false,"dir":"test"},{"name":"can act as a transducer","suites":["takeWhile"],"updatePoint":{"line":26,"column":29,"index":738},"line":26,"code":"  it('can act as a transducer', function () {\n    var isNotFour = x => x !== 4;\n\n    var input = [1, 2, 3, 4, 3, 2, 1];\n    var expected = [1, 2, 3];\n    eq(R.into([], R.takeWhile(isNotFour), input), expected);\n    eq(R.transduce(R.takeWhile(isNotFour), R.flip(R.append), [], input), expected);\n  });","file":"takeWhile.js","skipped":false,"dir":"test"},{"name":"returns a function that always returns its argument","suites":["tap"],"updatePoint":{"line":14,"column":57,"index":339},"line":14,"code":"  it('returns a function that always returns its argument', function () {\n    var f = R.tap(R.identity);\n    eq(typeof f, 'function');\n    eq(f(100), 100);\n    eq(f(undefined), undefined);\n    eq(f(null), null);\n  });","file":"tap.js","skipped":false,"dir":"test"},{"name":"may take a function as the first argument that executes with tap's argument","suites":["tap"],"updatePoint":{"line":21,"column":81,"index":581},"line":21,"code":"  it(\"may take a function as the first argument that executes with tap's argument\", function () {\n    var sideEffect = 0;\n    eq(sideEffect, 0);\n    var rv = R.tap(function (x) {\n      sideEffect = 'string ' + x;\n    }, 200);\n    eq(rv, 200);\n    eq(sideEffect, 'string 200');\n  });","file":"tap.js","skipped":false,"dir":"test"},{"name":"can act as a transducer","suites":["tap"],"updatePoint":{"line":30,"column":29,"index":812},"line":30,"code":"  it('can act as a transducer', function () {\n    var sideEffect = [];\n    var numbers = [1, 2, 3, 4, 5];\n    var xf = R.compose(R.map(R.identity), R.tap(pushToList(sideEffect)));\n    eq(R.into([], xf, numbers), numbers);\n    eq(sideEffect, numbers);\n  });","file":"tap.js","skipped":false,"dir":"test"},{"name":"dispatches to transformer objects","suites":["tap"],"updatePoint":{"line":37,"column":39,"index":1079},"line":37,"code":"  it('dispatches to transformer objects', function () {\n    var sideEffect = [];\n    var pushToSideEffect = pushToList(sideEffect);\n    eq(R.tap(pushToSideEffect, listXf), {\n      f: pushToSideEffect,\n      xf: listXf\n    });\n  });","file":"tap.js","skipped":false,"dir":"test"},{"name":"returns true if string matches dotAll pattern","suites":["test"],"updatePoint":{"line":8,"column":51,"index":193},"line":8,"code":"  it('returns true if string matches dotAll pattern', function () {\n    eq(R.test(/x.*z/s, 'x.\\nyz'), true);\n  });","file":"test.js","skipped":false,"dir":"test"},{"name":"returns true if string matches pattern","suites":["test"],"updatePoint":{"line":11,"column":44,"index":301},"line":11,"code":"  it('returns true if string matches pattern', function () {\n    eq(R.test(/^x/, 'xyz'), true);\n  });","file":"test.js","skipped":false,"dir":"test"},{"name":"returns false if string does not match pattern","suites":["test"],"updatePoint":{"line":14,"column":52,"index":411},"line":14,"code":"  it('returns false if string does not match pattern', function () {\n    eq(R.test(/^y/, 'xyz'), false);\n  });","file":"test.js","skipped":false,"dir":"test"},{"name":"is referentially transparent","suites":["test"],"updatePoint":{"line":17,"column":34,"index":504},"line":17,"code":"  it('is referentially transparent', function () {\n    var pattern = /x/g;\n    eq(pattern.lastIndex, 0);\n    eq(R.test(pattern, 'xyz'), true);\n    eq(pattern.lastIndex, 0);\n    eq(R.test(pattern, 'xyz'), true);\n  });","file":"test.js","skipped":false,"dir":"test"},{"name":"throws if first argument is not a regexp","suites":["test"],"updatePoint":{"line":24,"column":46,"index":733},"line":24,"code":"  it('throws if first argument is not a regexp', function () {\n    assert.throws(function () {\n      R.test('foo', 'bar');\n    }, function (err) {\n      return err.constructor === TypeError && err.message === '‘test’ requires a value of type RegExp ' + 'as its first argument; received \"foo\"';\n    });\n  });","file":"test.js","skipped":false,"dir":"test"},{"name":"returns a function with the same arity as the given function","suites":["thunkify"],"updatePoint":{"line":6,"column":66,"index":179},"line":6,"code":"  it('returns a function with the same arity as the given function', function () {\n    var input = function input(a0, a1) {};\n\n    var thunk = R.thunkify(input);\n    eq(typeof thunk, 'function');\n    eq(thunk.length, input.length);\n  });","file":"thunkify.js","skipped":false,"dir":"test"},{"name":"returns a function that expects arguments and returns a new invoker function","suites":["thunkify"],"updatePoint":{"line":13,"column":82,"index":433},"line":13,"code":"  it('returns a function that expects arguments and returns a new invoker function', function () {\n    var input = function input(a0, a1) {};\n\n    var thunk = R.thunkify(input);\n    eq(typeof thunk(42, 'xyz'), 'function');\n  });","file":"thunkify.js","skipped":false,"dir":"test"},{"name":"calls the original function with the provided arguments when all were supplied","suites":["thunkify"],"updatePoint":{"line":19,"column":84,"index":664},"line":19,"code":"  it('calls the original function with the provided arguments when all were supplied', function () {\n    var thunk = R.thunkify(R.add(2));\n    eq(thunk(40)(), 42);\n  });","file":"thunkify.js","skipped":false,"dir":"test"},{"name":"takes a map func","suites":["times"],"updatePoint":{"line":8,"column":22,"index":165},"line":8,"code":"  it('takes a map func', function () {\n    eq(R.times(R.identity, 5), [0, 1, 2, 3, 4]);\n    eq(R.times(function (x) {\n      return x * 2;\n    }, 5), [0, 2, 4, 6, 8]);\n  });","file":"times.js","skipped":false,"dir":"test"},{"name":"throws if second argument is not a valid array length","suites":["times"],"updatePoint":{"line":14,"column":59,"index":375},"line":14,"code":"  it('throws if second argument is not a valid array length', function () {\n    assert.throws(function () {\n      R.times(3)('cheers!');\n    }, RangeError);\n    assert.throws(function () {\n      R.times(R.identity, -1);\n    }, RangeError);\n  });","file":"times.js","skipped":false,"dir":"test"},{"name":"returns the lower-case equivalent of the input string","suites":["toLower"],"updatePoint":{"line":6,"column":59,"index":171},"line":6,"code":"  it('returns the lower-case equivalent of the input string', function () {\n    eq(R.toLower('XYZ'), 'xyz');\n  });","file":"toLower.js","skipped":false,"dir":"test"},{"name":"converts an object into an array of two-element [key, value] arrays","suites":["toPairs"],"updatePoint":{"line":6,"column":73,"index":185},"line":6,"code":"  it('converts an object into an array of two-element [key, value] arrays', function () {\n    eq(R.toPairs({\n      a: 1,\n      b: 2,\n      c: 3\n    }), [['a', 1], ['b', 2], ['c', 3]]);\n  });","file":"toPairs.js","skipped":false,"dir":"test"},{"name":"only iterates the object's own properties","suites":["toPairs"],"updatePoint":{"line":13,"column":47,"index":350},"line":13,"code":"  it(\"only iterates the object's own properties\", function () {\n    var F = function () {\n      this.x = 1;\n      this.y = 2;\n    };\n\n    F.prototype.protoProp = 'you can\\'t see me';\n    var f = new F();\n    eq(R.toPairs(f), [['x', 1], ['y', 2]]);\n  });","file":"toPairs.js","skipped":false,"dir":"test"},{"name":"converts an object into an array of two-element [key, value] arrays","suites":["toPairsIn"],"updatePoint":{"line":6,"column":73,"index":187},"line":6,"code":"  it('converts an object into an array of two-element [key, value] arrays', function () {\n    eq(R.toPairsIn({\n      a: 1,\n      b: 2,\n      c: 3\n    }), [['a', 1], ['b', 2], ['c', 3]]);\n  });","file":"toPairsIn.js","skipped":false,"dir":"test"},{"name":"iterates properties on the object's prototype chain","suites":["toPairsIn"],"updatePoint":{"line":13,"column":57,"index":364},"line":13,"code":"  it(\"iterates properties on the object's prototype chain\", function () {\n    function sortPairs(a, b) {\n      return a[0] > b[0] ? 1 : a[0] < b[0] ? -1 : 0;\n    }\n\n    var F = function () {\n      this.x = 1;\n      this.y = 2;\n    };\n\n    F.prototype.protoProp = 'you can see me';\n    var f = new F();\n    eq(R.toPairsIn(f).sort(sortPairs), [['protoProp', 'you can see me'], ['x', 1], ['y', 2]]);\n  });","file":"toPairsIn.js","skipped":false,"dir":"test"},{"name":"returns the string representation of null","suites":["toString"],"updatePoint":{"line":10,"column":47,"index":204},"line":10,"code":"  it('returns the string representation of null', function () {\n    assert.strictEqual(R.toString(null), 'null');\n  });","file":"toString.js","skipped":false,"dir":"test"},{"name":"returns the string representation of undefined","suites":["toString"],"updatePoint":{"line":13,"column":52,"index":329},"line":13,"code":"  it('returns the string representation of undefined', function () {\n    assert.strictEqual(R.toString(undefined), 'undefined');\n  });","file":"toString.js","skipped":false,"dir":"test"},{"name":"returns the string representation of a Boolean primitive","suites":["toString"],"updatePoint":{"line":16,"column":62,"index":474},"line":16,"code":"  it('returns the string representation of a Boolean primitive', function () {\n    assert.strictEqual(R.toString(true), 'true');\n    assert.strictEqual(R.toString(false), 'false');\n  });","file":"toString.js","skipped":false,"dir":"test"},{"name":"returns the string representation of a number primitive","suites":["toString"],"updatePoint":{"line":20,"column":61,"index":660},"line":20,"code":"  it('returns the string representation of a number primitive', function () {\n    assert.strictEqual(R.toString(0), '0');\n    assert.strictEqual(R.toString(-0), '-0');\n    assert.strictEqual(R.toString(1.23), '1.23');\n    assert.strictEqual(R.toString(-1.23), '-1.23');\n    assert.strictEqual(R.toString(1e+23), '1e+23');\n    assert.strictEqual(R.toString(-1e+23), '-1e+23');\n    assert.strictEqual(R.toString(1e-23), '1e-23');\n    assert.strictEqual(R.toString(-1e-23), '-1e-23');\n    assert.strictEqual(R.toString(Infinity), 'Infinity');\n    assert.strictEqual(R.toString(-Infinity), '-Infinity');\n    assert.strictEqual(R.toString(NaN), 'NaN');\n  });","file":"toString.js","skipped":false,"dir":"test"},{"name":"returns the string representation of a string primitive","suites":["toString"],"updatePoint":{"line":33,"column":61,"index":1314},"line":33,"code":"  it('returns the string representation of a string primitive', function () {\n    assert.strictEqual(R.toString('abc'), '\"abc\"');\n    assert.strictEqual(R.toString('x \"y\" z'), '\"x \\\\\"y\\\\\" z\"');\n    assert.strictEqual(R.toString(\"' '\"), '\"\\' \\'\"');\n    assert.strictEqual(R.toString('\" \"'), '\"\\\\\" \\\\\"\"');\n    assert.strictEqual(R.toString('\\b \\b'), '\"\\\\b \\\\b\"');\n    assert.strictEqual(R.toString('\\f \\f'), '\"\\\\f \\\\f\"');\n    assert.strictEqual(R.toString('\\n \\n'), '\"\\\\n \\\\n\"');\n    assert.strictEqual(R.toString('\\r \\r'), '\"\\\\r \\\\r\"');\n    assert.strictEqual(R.toString('\\t \\t'), '\"\\\\t \\\\t\"');\n    assert.strictEqual(R.toString('\\v \\v'), '\"\\\\v \\\\v\"');\n    assert.strictEqual(R.toString('\\0 \\0'), '\"\\\\0 \\\\0\"');\n    assert.strictEqual(R.toString('\\\\ \\\\'), '\"\\\\\\\\ \\\\\\\\\"');\n  });","file":"toString.js","skipped":false,"dir":"test"},{"name":"returns the string representation of a Boolean object","suites":["toString"],"updatePoint":{"line":47,"column":59,"index":2088},"line":47,"code":"  it('returns the string representation of a Boolean object', function () {\n    assert.strictEqual(R.toString(new Boolean(true)), 'new Boolean(true)');\n    assert.strictEqual(R.toString(new Boolean(false)), 'new Boolean(false)');\n  });","file":"toString.js","skipped":false,"dir":"test"},{"name":"returns the string representation of a Map object","suites":["toString"],"updatePoint":{"line":51,"column":55,"index":2320},"line":51,"code":"  it('returns the string representation of a Map object', function () {\n    if (typeof Map !== 'function') {\n      return;\n    }\n\n    assert.strictEqual(R.toString(new Map([[1, 2], [3, 4]])), 'new Map([[1, 2], [3, 4]])');\n  });","file":"toString.js","skipped":false,"dir":"test"},{"name":"returns the string representation of a Number object","suites":["toString"],"updatePoint":{"line":58,"column":58,"index":2551},"line":58,"code":"  it('returns the string representation of a Number object', function () {\n    assert.strictEqual(R.toString(new Number(0)), 'new Number(0)');\n    assert.strictEqual(R.toString(new Number(-0)), 'new Number(-0)');\n  });","file":"toString.js","skipped":false,"dir":"test"},{"name":"returns the string representation of a Set object","suites":["toString"],"updatePoint":{"line":62,"column":55,"index":2767},"line":62,"code":"  it('returns the string representation of a Set object', function () {\n    if (typeof Set !== 'function') {\n      return;\n    }\n\n    assert.strictEqual(R.toString(new Set([2, 1])), 'new Set([1, 2])');\n  });","file":"toString.js","skipped":false,"dir":"test"},{"name":"returns the string representation of a String object","suites":["toString"],"updatePoint":{"line":69,"column":58,"index":2978},"line":69,"code":"  it('returns the string representation of a String object', function () {\n    assert.strictEqual(R.toString(new String('abc')), 'new String(\"abc\")');\n    assert.strictEqual(R.toString(new String('x \"y\" z')), 'new String(\"x \\\\\"y\\\\\" z\")');\n    assert.strictEqual(R.toString(new String(\"' '\")), 'new String(\"\\' \\'\")');\n    assert.strictEqual(R.toString(new String('\" \"')), 'new String(\"\\\\\" \\\\\"\")');\n    assert.strictEqual(R.toString(new String('\\b \\b')), 'new String(\"\\\\b \\\\b\")');\n    assert.strictEqual(R.toString(new String('\\f \\f')), 'new String(\"\\\\f \\\\f\")');\n    assert.strictEqual(R.toString(new String('\\n \\n')), 'new String(\"\\\\n \\\\n\")');\n    assert.strictEqual(R.toString(new String('\\r \\r')), 'new String(\"\\\\r \\\\r\")');\n    assert.strictEqual(R.toString(new String('\\t \\t')), 'new String(\"\\\\t \\\\t\")');\n    assert.strictEqual(R.toString(new String('\\v \\v')), 'new String(\"\\\\v \\\\v\")');\n    assert.strictEqual(R.toString(new String('\\0 \\0')), 'new String(\"\\\\0 \\\\0\")');\n    assert.strictEqual(R.toString(new String('\\\\ \\\\')), 'new String(\"\\\\\\\\ \\\\\\\\\")');\n  });","file":"toString.js","skipped":false,"dir":"test"},{"name":"returns the string representation of a Date object","suites":["toString"],"updatePoint":{"line":83,"column":56,"index":4037},"line":83,"code":"  it('returns the string representation of a Date object', function () {\n    assert.strictEqual(R.toString(new Date('2001-02-03T04:05:06.000Z')), 'new Date(\"2001-02-03T04:05:06.000Z\")');\n    assert.strictEqual(R.toString(new Date('XXX')), 'new Date(NaN)');\n  });","file":"toString.js","skipped":false,"dir":"test"},{"name":"returns the string representation of a RegExp object","suites":["toString"],"updatePoint":{"line":87,"column":58,"index":4302},"line":87,"code":"  it('returns the string representation of a RegExp object', function () {\n    assert.strictEqual(R.toString(/(?:)/), '/(?:)/');\n    assert.strictEqual(R.toString(/\\//g), '/\\\\//g');\n  });","file":"toString.js","skipped":false,"dir":"test"},{"name":"returns the string representation of a function","suites":["toString"],"updatePoint":{"line":91,"column":53,"index":4485},"line":91,"code":"  it('returns the string representation of a function', function () {\n    var add = function add(a, b) {\n      return a + b;\n    };\n\n    assert.strictEqual(R.toString(add), add.toString());\n  });","file":"toString.js","skipped":false,"dir":"test"},{"name":"returns the string representation of an array","suites":["toString"],"updatePoint":{"line":98,"column":51,"index":4679},"line":98,"code":"  it('returns the string representation of an array', function () {\n    assert.strictEqual(R.toString([]), '[]');\n    assert.strictEqual(R.toString([1, 2, 3]), '[1, 2, 3]');\n    assert.strictEqual(R.toString([1, [2, [3]]]), '[1, [2, [3]]]');\n    assert.strictEqual(R.toString(['x', 'y']), '[\"x\", \"y\"]');\n  });","file":"toString.js","skipped":false,"dir":"test"},{"name":"returns the string representation of an array with non-numeric property names","suites":["toString"],"updatePoint":{"line":104,"column":83,"index":5021},"line":104,"code":"  it('returns the string representation of an array with non-numeric property names', function () {\n    var xs = [1, 2, 3];\n    xs.foo = 0;\n    xs.bar = 0;\n    xs.baz = 0;\n    assert.strictEqual(R.toString(xs), '[1, 2, 3, \"bar\": 0, \"baz\": 0, \"foo\": 0]');\n  });","file":"toString.js","skipped":false,"dir":"test"},{"name":"returns the string representation of an arguments object","suites":["toString"],"updatePoint":{"line":111,"column":62,"index":5261},"line":111,"code":"  it('returns the string representation of an arguments object', function () {\n    assert.strictEqual(R.toString(function () {\n      return arguments;\n    }()), '(function() { return arguments; }())');\n    assert.strictEqual(R.toString(function () {\n      return arguments;\n    }(1, 2, 3)), '(function() { return arguments; }(1, 2, 3))');\n    assert.strictEqual(R.toString(function () {\n      return arguments;\n    }(['x', 'y'])), '(function() { return arguments; }([\"x\", \"y\"]))');\n  });","file":"toString.js","skipped":false,"dir":"test"},{"name":"returns the string representation of a plain object","suites":["toString"],"updatePoint":{"line":122,"column":57,"index":5744},"line":122,"code":"  it('returns the string representation of a plain object', function () {\n    assert.strictEqual(R.toString({}), '{}');\n    assert.strictEqual(R.toString({\n      foo: 1,\n      bar: 2,\n      baz: 3\n    }), '{\"bar\": 2, \"baz\": 3, \"foo\": 1}');\n    assert.strictEqual(R.toString({\n      '\"quoted\"': true\n    }), '{\"\\\\\"quoted\\\\\"\": true}');\n    assert.strictEqual(R.toString({\n      a: {\n        b: {\n          c: {}\n        }\n      }\n    }), '{\"a\": {\"b\": {\"c\": {}}}}');\n  });","file":"toString.js","skipped":false,"dir":"test"},{"name":"treats instance without custom `toString` method as plain object","suites":["toString"],"updatePoint":{"line":140,"column":70,"index":6227},"line":140,"code":"  it('treats instance without custom `toString` method as plain object', function () {\n    function Point(x, y) {\n      this.x = x;\n      this.y = y;\n    }\n\n    assert.strictEqual(R.toString(new Point(1, 2)), '{\"x\": 1, \"y\": 2}');\n  });","file":"toString.js","skipped":false,"dir":"test"},{"name":"dispatches to custom `toString` method","suites":["toString"],"updatePoint":{"line":148,"column":44,"index":6437},"line":148,"code":"  it('dispatches to custom `toString` method', function () {\n    function Point(x, y) {\n      this.x = x;\n      this.y = y;\n    }\n\n    Point.prototype.toString = function () {\n      return 'new Point(' + this.x + ', ' + this.y + ')';\n    };\n\n    assert.strictEqual(R.toString(new Point(1, 2)), 'new Point(1, 2)');\n    assert.strictEqual(R.toString(Just(42)), 'Just(42)');\n    assert.strictEqual(R.toString(Just([1, 2, 3])), 'Just([1, 2, 3])');\n    assert.strictEqual(R.toString(Just(Just(Just('')))), 'Just(Just(Just(\"\")))');\n    assert.strictEqual(R.toString({\n      toString: R.always('x')\n    }), 'x');\n  });","file":"toString.js","skipped":false,"dir":"test"},{"name":"handles object with no `toString` method","suites":["toString"],"updatePoint":{"line":166,"column":46,"index":7051},"line":166,"code":"  it('handles object with no `toString` method', function () {\n    if (typeof Object.create === 'function') {\n      var a = Object.create(null);\n      var b = Object.create(null);\n      b.x = 1;\n      b.y = 2;\n      assert.strictEqual(R.toString(a), '{}');\n      assert.strictEqual(R.toString(b), '{\"x\": 1, \"y\": 2}');\n    }\n  });","file":"toString.js","skipped":false,"dir":"test"},{"name":"handles circular references","suites":["toString"],"updatePoint":{"line":176,"column":33,"index":7368},"line":176,"code":"  it('handles circular references', function () {\n    var a = [];\n    a[0] = a;\n    assert.strictEqual(R.toString(a), '[<Circular>]');\n    var o = {};\n    o.o = o;\n    assert.strictEqual(R.toString(o), '{\"o\": <Circular>}');\n    var b = ['bee'];\n    var c = ['see'];\n    b[1] = c;\n    c[1] = b;\n    assert.strictEqual(R.toString(b), '[\"bee\", [\"see\", <Circular>]]');\n    assert.strictEqual(R.toString(c), '[\"see\", [\"bee\", <Circular>]]');\n    var p = {};\n    var q = {};\n    p.q = q;\n    q.p = p;\n    assert.strictEqual(R.toString(p), '{\"q\": {\"p\": <Circular>}}');\n    assert.strictEqual(R.toString(q), '{\"p\": {\"q\": <Circular>}}');\n    var x = [];\n    var y = {};\n    x[0] = y;\n    y.x = x;\n    assert.strictEqual(R.toString(x), '[{\"x\": <Circular>}]');\n    assert.strictEqual(R.toString(y), '{\"x\": [<Circular>]}');\n  });","file":"toString.js","skipped":false,"dir":"test"},{"name":"returns the upper-case equivalent of the input string","suites":["toUpper"],"updatePoint":{"line":6,"column":59,"index":171},"line":6,"code":"  it('returns the upper-case equivalent of the input string', function () {\n    eq(R.toUpper('abc'), 'ABC');\n  });","file":"toUpper.js","skipped":false,"dir":"test"},{"name":"transduces into arrays","suites":["transduce"],"updatePoint":{"line":73,"column":28,"index":1355},"line":73,"code":"  it('transduces into arrays', function () {\n    eq(R.transduce(R.map(add(1)), R.flip(R.append), [], [1, 2, 3, 4]), [2, 3, 4, 5]);\n    eq(R.transduce(R.filter(isOdd), R.flip(R.append), [], [1, 2, 3, 4]), [1, 3]);\n    eq(R.transduce(R.compose(R.map(add(1)), R.take(2)), R.flip(R.append), [], [1, 2, 3, 4]), [2, 3]);\n    eq(R.transduce(R.compose(R.filter(isOdd), R.take(1)), R.flip(R.append), [], [1, 2, 3, 4]), [1]);\n    eq(R.transduce(R.compose(R.uniq, R.map(square), R.take(3)), R.flip(R.append), [], [1, 1, 2, 2, 3, 3, 4, 4]), [1, 4, 9]);\n    eq(R.transduce(R.compose(R.filter(isEven), R.uniq), R.flip(R.append), [], [1, 1, 2, 2, 3, 3, 4, 4]), [2, 4]);\n    eq(R.transduce(R.compose(R.map(negate), R.uniqBy(Math.abs), R.map(square)), R.flip(R.append), [], [-1, -5, 2, 10, 1, 2]), [1, 25, 4, 100]);\n    eq(R.transduce(R.compose(R.uniqWith(R.eqBy(String)), R.map(square), R.take(3)), R.flip(R.append), [], [1, '1', '2', 2, 3, '3', '4', 4]), [1, 4, 9]);\n  });","file":"transduce.js","skipped":false,"dir":"test"},{"name":"transduces into strings","suites":["transduce"],"updatePoint":{"line":83,"column":29,"index":2314},"line":83,"code":"  it('transduces into strings', function () {\n    var _add = function (x, y) {\n      return x + y;\n    };\n\n    eq(R.transduce(R.map(R.inc), _add, '', [1, 2, 3, 4]), '2345');\n    eq(R.transduce(R.filter(isOdd), _add, '', [1, 2, 3, 4]), '13');\n    eq(R.transduce(R.compose(R.map(add(1)), R.take(2)), _add, '', [1, 2, 3, 4]), '23');\n  });","file":"transduce.js","skipped":false,"dir":"test"},{"name":"transduces into objects","suites":["transduce"],"updatePoint":{"line":92,"column":29,"index":2650},"line":92,"code":"  it('transduces into objects', function () {\n    eq(R.transduce(R.map(R.identity), R.mergeRight, {}, [{\n      a: 1\n    }, {\n      b: 2,\n      c: 3\n    }]), {\n      a: 1,\n      b: 2,\n      c: 3\n    });\n  });","file":"transduce.js","skipped":false,"dir":"test"},{"name":"folds transformer objects over a collection with the supplied accumulator","suites":["transduce"],"updatePoint":{"line":104,"column":79,"index":2908},"line":104,"code":"  it('folds transformer objects over a collection with the supplied accumulator', function () {\n    eq(R.transduce(toxf(add), addxf, 0, [1, 2, 3, 4]), 10);\n    eq(R.transduce(toxf(mult), multxf, 1, [1, 2, 3, 4]), 24);\n    eq(R.transduce(toxf(R.concat), listxf, [0], [1, 2, 3, 4]), [0, 1, 2, 3, 4]);\n    eq(R.transduce(toxf(add), add, 0, [1, 2, 3, 4]), 10);\n    eq(R.transduce(toxf(mult), mult, 1, [1, 2, 3, 4]), 24);\n  });","file":"transduce.js","skipped":false,"dir":"test"},{"name":"dispatches to objects that implement `reduce`","suites":["transduce"],"updatePoint":{"line":111,"column":51,"index":3303},"line":111,"code":"  it('dispatches to objects that implement `reduce`', function () {\n    var obj = {\n      x: [1, 2, 3],\n      reduce: function () {\n        return 'override';\n      }\n    };\n    eq(R.transduce(R.map(add(1)), add, 0, obj), 'override');\n    eq(R.transduce(R.map(add(1)), add, 10, obj), 'override');\n  });","file":"transduce.js","skipped":false,"dir":"test"},{"name":"returns the accumulator for an empty collection","suites":["transduce"],"updatePoint":{"line":121,"column":53,"index":3608},"line":121,"code":"  it('returns the accumulator for an empty collection', function () {\n    eq(R.transduce(toxf(add), addxf, 0, []), 0);\n    eq(R.transduce(toxf(mult), multxf, 1, []), 1);\n    eq(R.transduce(toxf(R.concat), listxf, [], []), []);\n  });","file":"transduce.js","skipped":false,"dir":"test"},{"name":"short circuits with reduced","suites":["transduce"],"updatePoint":{"line":126,"column":33,"index":3821},"line":126,"code":"  it('short circuits with reduced', function () {\n    var transducer = R.compose(R.map(square), R.filter(isOdd));\n\n    var iterator = function (acc, val) {\n      return val > 10 ? R.reduced(acc) : R.append(val, acc);\n    };\n\n    var getOddSquaresWhileLessThan10 = R.transduce(transducer, iterator, []);\n    eq(getOddSquaresWhileLessThan10([1, 2, 3, 4]), [1, 9]);\n  });","file":"transduce.js","skipped":false,"dir":"test"},{"name":"returns an array of two arrays","suites":["transpose"],"updatePoint":{"line":6,"column":36,"index":150},"line":6,"code":"  it('returns an array of two arrays', function () {\n    var input = [['a', 1], ['b', 2], ['c', 3]];\n    eq(R.transpose(input), [['a', 'b', 'c'], [1, 2, 3]]);\n  });","file":"transpose.js","skipped":false,"dir":"test"},{"name":"skips elements when rows are shorter","suites":["transpose"],"updatePoint":{"line":10,"column":42,"index":321},"line":10,"code":"  it('skips elements when rows are shorter', function () {\n    var actual = R.transpose([[10, 11], [20], [], [30, 31, 32]]);\n    var expected = [[10, 20, 30], [11, 31], [32]];\n    eq(actual, expected);\n  });","file":"transpose.js","skipped":false,"dir":"test"},{"name":"copes with empty arrays","suites":["transpose"],"updatePoint":{"line":15,"column":29,"index":516},"line":15,"code":"  it('copes with empty arrays', function () {\n    eq(R.transpose([]), []);\n  });","file":"transpose.js","skipped":false,"dir":"test"},{"name":"copes with true, false, null & undefined elements of arrays","suites":["transpose"],"updatePoint":{"line":18,"column":65,"index":633},"line":18,"code":"  it('copes with true, false, null & undefined elements of arrays', function () {\n    var actual = R.transpose([[true, false, undefined, null], [null, undefined, false, true]]);\n    var expected = [[true, null], [false, undefined], [undefined, false], [null, true]];\n    eq(actual, expected);\n  });","file":"transpose.js","skipped":false,"dir":"test"},{"name":"operates on a list of lists","suites":["traverse"],"updatePoint":{"line":13,"column":33,"index":301},"line":13,"code":"  it('operates on a list of lists', function () {\n    eq(R.traverse(ofArray, R.map(R.add(10)), []), [[]]);\n    eq(R.traverse(ofArray, R.map(R.add(10)), [[], [1, 2, 3, 4]]), []);\n    eq(R.traverse(ofArray, R.map(R.add(10)), [[1], [2, 3, 4]]), [[11, 12], [11, 13], [11, 14]]);\n    eq(R.traverse(ofArray, R.map(R.add(10)), [[1, 2], [3, 4]]), [[11, 13], [11, 14], [12, 13], [12, 14]]);\n    eq(R.traverse(ofArray, R.map(R.add(10)), [[1, 2, 3], [4]]), [[11, 14], [12, 14], [13, 14]]);\n    eq(R.traverse(ofArray, R.map(R.add(10)), [[1, 2, 3, 4], []]), []);\n  });","file":"traverse.js","skipped":false,"dir":"test"},{"name":"operates on a list of applicatives","suites":["traverse"],"updatePoint":{"line":21,"column":40,"index":864},"line":21,"code":"  it('operates on a list of applicatives', function () {\n    eq(R.traverse(ofMaybe, R.map(R.add(10)), [S.Just(3), S.Just(4), S.Just(5)]), S.Just([13, 14, 15]));\n    eq(R.traverse(ofMaybe, R.map(R.add(10)), [S.Just(3), S.Nothing(), S.Just(5)]), S.Nothing());\n  });","file":"traverse.js","skipped":false,"dir":"test"},{"name":"traverses left to right","suites":["traverse"],"updatePoint":{"line":25,"column":29,"index":1117},"line":25,"code":"  it('traverses left to right', function () {\n    eq(R.traverse(ofEither, R.identity, [S.Right(1), S.Right(2)]), S.Right([1, 2]));\n    eq(R.traverse(ofEither, R.identity, [S.Right(1), S.Left('XXX')]), S.Left('XXX'));\n    eq(R.traverse(ofEither, R.identity, [S.Left('XXX'), S.Right(1)]), S.Left('XXX'));\n    eq(R.traverse(ofEither, R.identity, [S.Left('XXX'), S.Left('YYY')]), S.Left('XXX'));\n  });","file":"traverse.js","skipped":false,"dir":"test"},{"name":"dispatches to `traverse` method","suites":["traverse"],"updatePoint":{"line":31,"column":37,"index":1523},"line":31,"code":"  it('dispatches to `traverse` method', function () {\n    const mockTraversable = {\n      traverse(_1, _2) {\n        return 'traverse called';\n      }\n\n    };\n    eq(R.traverse(Id, R.identity, mockTraversable), 'traverse called');\n  });","file":"traverse.js","skipped":false,"dir":"test"},{"name":"dispatches to `fantasy-land/traverse` method","suites":["traverse"],"updatePoint":{"line":40,"column":50,"index":1773},"line":40,"code":"  it('dispatches to `fantasy-land/traverse` method', function () {\n    const mockTraversable2 = {\n      ['fantasy-land/traverse'](_1, _2) {\n        return 'fantasy-land/traverse called';\n      }\n\n    };\n    eq(R.traverse(Id, R.identity, mockTraversable2), 'fantasy-land/traverse called');\n  });","file":"traverse.js","skipped":false,"dir":"test"},{"name":"dispatches to `fantasy-land/traverse` method when it and `traverse` exist","suites":["traverse"],"updatePoint":{"line":49,"column":79,"index":2097},"line":49,"code":"  it('dispatches to `fantasy-land/traverse` method when it and `traverse` exist', function () {\n    const mockTraversable3 = {\n      traverse(_1, _2) {\n        return 'traverse called';\n      },\n\n      ['fantasy-land/traverse'](_1, _2) {\n        return 'fantasy-land/traverse called';\n      }\n\n    };\n    eq(R.traverse(Id, R.identity, mockTraversable3), 'fantasy-land/traverse called');\n  });","file":"traverse.js","skipped":false,"dir":"test"},{"name":"dispatches to `traverse` when it exists and `fantasy-land/traverse` is not a function","suites":["traverse"],"updatePoint":{"line":62,"column":91,"index":2502},"line":62,"code":"  it('dispatches to `traverse` when it exists and `fantasy-land/traverse` is not a function', function () {\n    const mockTraversable4 = {\n      traverse(_1, _2) {\n        return 'traverse called';\n      },\n\n      'fantasy-land/traverse': new Error()\n    };\n    eq(R.traverse(Id, R.identity, mockTraversable4), 'traverse called');\n  });","file":"traverse.js","skipped":false,"dir":"test"},{"name":"trims a string","suites":["trim"],"updatePoint":{"line":7,"column":20,"index":431},"line":7,"code":"  it('trims a string', function () {\n    eq(R.trim('   xyz  '), 'xyz');\n  });","file":"trim.js","skipped":false,"dir":"test"},{"name":"trims all ES5 whitespace","suites":["trim"],"updatePoint":{"line":10,"column":30,"index":519},"line":10,"code":"  it('trims all ES5 whitespace', function () {\n    eq(R.trim(test), 'Hello, World!');\n    eq(R.trim(test).length, 13);\n  });","file":"trim.js","skipped":false,"dir":"test"},{"name":"does not trim the zero-width space","suites":["trim"],"updatePoint":{"line":14,"column":40,"index":654},"line":14,"code":"  it('does not trim the zero-width space', function () {\n    eq(R.trim('\\u200b'), '\\u200b');\n    eq(R.trim('\\u200b').length, 1);\n  });","file":"trim.js","skipped":false,"dir":"test"},{"name":"falls back to a shim if String.prototype.trim is not present","suites":["trim"],"updatePoint":{"line":20,"column":68,"index":871},"line":20,"code":"    it('falls back to a shim if String.prototype.trim is not present', function () {\n      eq(R.trim('   xyz  '), 'xyz');\n      eq(R.trim(test), 'Hello, World!');\n      eq(R.trim(test).length, 13);\n      eq(R.trim('\\u200b'), '\\u200b');\n      eq(R.trim('\\u200b').length, 1);\n    });","file":"trim.js","skipped":false,"dir":"test"},{"name":"takes two functions and return a function","suites":["tryCatch"],"updatePoint":{"line":14,"column":47,"index":254},"line":14,"code":"  it('takes two functions and return a function', function () {\n    var mayThrow = R.tryCatch(headX, catcher);\n    eq(typeof mayThrow, 'function');\n  });","file":"tryCatch.js","skipped":false,"dir":"test"},{"name":"returns a function with the same arity as the `tryer` function","suites":["tryCatch"],"updatePoint":{"line":18,"column":68,"index":429},"line":18,"code":"  it('returns a function with the same arity as the `tryer` function', function () {\n    function a1(a) {\n      return a;\n    }\n\n    function a2(a, b) {\n      return b;\n    }\n\n    function a3(a, b, c) {\n      return c;\n    }\n\n    function a4(a, b, c, d) {\n      return d;\n    }\n\n    eq(R.tryCatch(a1, catcher).length, a1.length);\n    eq(R.tryCatch(a2, catcher).length, a2.length);\n    eq(R.tryCatch(a3, catcher).length, a3.length);\n    eq(R.tryCatch(a4, catcher).length, a4.length);\n  });","file":"tryCatch.js","skipped":false,"dir":"test"},{"name":"returns the value of the first function if it does not throw","suites":["tryCatch"],"updatePoint":{"line":40,"column":66,"index":916},"line":40,"code":"  it('returns the value of the first function if it does not throw', function () {\n    var mayThrow = R.tryCatch(headX, catcher);\n    eq(mayThrow([{\n      x: 10\n    }, {\n      x: 20\n    }, {\n      x: 30\n    }]), 10);\n  });","file":"tryCatch.js","skipped":false,"dir":"test"},{"name":"returns the value of the second function if the first function throws","suites":["tryCatch"],"updatePoint":{"line":50,"column":75,"index":1148},"line":50,"code":"  it('returns the value of the second function if the first function throws', function () {\n    function throw10() {\n      throw new Error(10);\n    }\n\n    function eCatcher(e) {\n      return Number(e.message);\n    }\n\n    var mayThrow = R.tryCatch(headX, catcher);\n    eq(mayThrow([]), 10101);\n    var willThrow = R.tryCatch(throw10, eCatcher);\n    eq(willThrow([]), 10);\n    eq(willThrow([{}, {}, {}]), 10);\n  });","file":"tryCatch.js","skipped":false,"dir":"test"},{"name":"the second function gets passed the error object and the same arguments as the first function","suites":["tryCatch"],"updatePoint":{"line":65,"column":99,"index":1586},"line":65,"code":"  it('the second function gets passed the error object and the same arguments as the first function', function () {\n    function thrower(a, b, c) {\n      void c;\n      throw new Error('throwerError');\n    }\n\n    function catch3(e, a, b, c) {\n      return [e.message, a, b, c].join(' ');\n    }\n\n    var mayThrow = R.tryCatch(thrower, catch3);\n    eq(mayThrow('A', 'B', 'C'), 'throwerError A B C');\n  });","file":"tryCatch.js","skipped":false,"dir":"test"},{"name":"\"Array\" if given an array literal","suites":["type"],"updatePoint":{"line":6,"column":39,"index":148},"line":6,"code":"  it('\"Array\" if given an array literal', function () {\n    eq(R.type([1, 2, 3]), 'Array');\n  }); // it('\"Arguments\" if given an arguments object', function() {","file":"type.js","skipped":false,"dir":"test"},{"name":"\"Object\" if given an object literal","suites":["type"],"updatePoint":{"line":13,"column":41,"index":415},"line":13,"code":"  it('\"Object\" if given an object literal', function () {\n    eq(R.type({\n      batman: 'na na na na na na na'\n    }), 'Object');\n  });","file":"type.js","skipped":false,"dir":"test"},{"name":"\"RegExp\" if given a RegExp literal","suites":["type"],"updatePoint":{"line":18,"column":40,"index":550},"line":18,"code":"  it('\"RegExp\" if given a RegExp literal', function () {\n    eq(R.type(/[A-z]/), 'RegExp');\n  });","file":"type.js","skipped":false,"dir":"test"},{"name":"\"Number\" if given a numeric value","suites":["type"],"updatePoint":{"line":21,"column":39,"index":647},"line":21,"code":"  it('\"Number\" if given a numeric value', function () {\n    eq(R.type(4), 'Number');\n  });","file":"type.js","skipped":false,"dir":"test"},{"name":"\"Number\" if given the NaN value","suites":["type"],"updatePoint":{"line":24,"column":37,"index":736},"line":24,"code":"  it('\"Number\" if given the NaN value', function () {\n    eq(R.type(NaN), 'Number');\n  });","file":"type.js","skipped":false,"dir":"test"},{"name":"\"String\" if given a String literal","suites":["type"],"updatePoint":{"line":27,"column":40,"index":830},"line":27,"code":"  it('\"String\" if given a String literal', function () {\n    eq(R.type('Gooooodd Mornning Ramda!!'), 'String');\n  });","file":"type.js","skipped":false,"dir":"test"},{"name":"\"String\" if given a String object","suites":["type"],"updatePoint":{"line":30,"column":39,"index":947},"line":30,"code":"  it('\"String\" if given a String object', function () {\n    eq(R.type(new String('I am a String object')), 'String');\n  });","file":"type.js","skipped":false,"dir":"test"},{"name":"\"Null\" if given the null value","suites":["type"],"updatePoint":{"line":33,"column":36,"index":1068},"line":33,"code":"  it('\"Null\" if given the null value', function () {\n    eq(R.type(null), 'Null');\n  });","file":"type.js","skipped":false,"dir":"test"},{"name":"\"Undefined\" if given the undefined value","suites":["type"],"updatePoint":{"line":36,"column":46,"index":1167},"line":36,"code":"  it('\"Undefined\" if given the undefined value', function () {\n    eq(R.type(undefined), 'Undefined');\n  });","file":"type.js","skipped":false,"dir":"test"},{"name":"returns a function which is always passed one argument","suites":["unapply"],"updatePoint":{"line":6,"column":60,"index":172},"line":6,"code":"  it('returns a function which is always passed one argument', function () {\n    var fn = R.unapply(function () {\n      return arguments.length;\n    });\n    eq(fn(), 1);\n    eq(fn('x'), 1);\n    eq(fn('x', 'y'), 1);\n    eq(fn('x', 'y', 'z'), 1);\n  });","file":"unapply.js","skipped":false,"dir":"test"},{"name":"forwards arguments to decorated function as an array","suites":["unapply"],"updatePoint":{"line":15,"column":58,"index":421},"line":15,"code":"  it('forwards arguments to decorated function as an array', function () {\n    var fn = R.unapply(function (xs) {\n      return '[' + xs + ']';\n    });\n    eq(fn(), '[]');\n    eq(fn(2), '[2]');\n    eq(fn(2, 4), '[2,4]');\n    eq(fn(2, 4, 6), '[2,4,6]');\n  });","file":"unapply.js","skipped":false,"dir":"test"},{"name":"returns a function with length 0","suites":["unapply"],"updatePoint":{"line":24,"column":38,"index":659},"line":24,"code":"  it('returns a function with length 0', function () {\n    var fn = R.unapply(R.identity);\n    eq(fn.length, 0);\n  });","file":"unapply.js","skipped":false,"dir":"test"},{"name":"is the inverse of R.apply","suites":["unapply"],"updatePoint":{"line":28,"column":31,"index":771},"line":28,"code":"  it('is the inverse of R.apply', function () {\n    var a, b, c, d, e, f, g, n;\n\n    var rand = function () {\n      return Math.floor(200 * Math.random()) - 100;\n    };\n\n    f = Math.max;\n    g = R.unapply(R.apply(f));\n    n = 1;\n\n    while (n <= 100) {\n      a = rand();\n      b = rand();\n      c = rand();\n      d = rand();\n      e = rand();\n      eq(f(a, b, c, d, e), g(a, b, c, d, e));\n      n += 1;\n    }\n\n    f = function (xs) {\n      return '[' + xs + ']';\n    };\n\n    g = R.apply(R.unapply(f));\n    n = 1;\n\n    while (n <= 100) {\n      a = rand();\n      b = rand();\n      c = rand();\n      d = rand();\n      e = rand();\n      eq(f([a, b, c, d, e]), g([a, b, c, d, e]));\n      n += 1;\n    }\n  });","file":"unapply.js","skipped":false,"dir":"test"},{"name":"turns multiple-argument function into unary one","suites":["unary"],"updatePoint":{"line":6,"column":53,"index":163},"line":6,"code":"  it('turns multiple-argument function into unary one', function () {\n    R.unary(function (x, y, z) {\n      eq(arguments.length, 1);\n      eq(typeof y, 'undefined');\n      eq(typeof z, 'undefined');\n    })(10, 20, 30);\n  });","file":"unary.js","skipped":false,"dir":"test"},{"name":"initial argument is passed through normally","suites":["unary"],"updatePoint":{"line":13,"column":49,"index":385},"line":13,"code":"  it('initial argument is passed through normally', function () {\n    R.unary(function (x, y, z) {\n      eq(x, 10);\n      void z;\n    })(10, 20, 30);\n  });","file":"unary.js","skipped":false,"dir":"test"},{"name":"accepts an arity","suites":["uncurryN"],"updatePoint":{"line":38,"column":22,"index":664},"line":38,"code":"  it('accepts an arity', function () {\n    var uncurried = R.uncurryN(3, a3);\n    eq(uncurried(1, 2, 3), 6);\n  });","file":"uncurryN.js","skipped":false,"dir":"test"},{"name":"returns a function of the specified arity","suites":["uncurryN"],"updatePoint":{"line":42,"column":47,"index":804},"line":42,"code":"  it('returns a function of the specified arity', function () {\n    eq(R.uncurryN(2, a2).length, 2);\n    eq(R.uncurryN(3, a3).length, 3);\n    eq(R.uncurryN(4, a4).length, 4);\n  });","file":"uncurryN.js","skipped":false,"dir":"test"},{"name":"forwards extra arguments","suites":["uncurryN"],"updatePoint":{"line":47,"column":30,"index":968},"line":47,"code":"  it('forwards extra arguments', function () {\n    var g = R.uncurryN(3, a3b);\n    eq(g(1, 2, 3), 6);\n    eq(g(1, 2, 3, 4), 10);\n    eq(g(1, 2, 3, 4, 5), 15);\n  });","file":"uncurryN.js","skipped":false,"dir":"test"},{"name":"works with ordinary uncurried functions","suites":["uncurryN"],"updatePoint":{"line":53,"column":45,"index":1148},"line":53,"code":"  it('works with ordinary uncurried functions', function () {\n    eq(R.uncurryN(2, function (a, b) {\n      return a + b;\n    })(10, 20), 30);\n    eq(R.uncurryN(3, function (a, b, c) {\n      return a + b + c;\n    })(10, 20, 30), 60);\n  });","file":"uncurryN.js","skipped":false,"dir":"test"},{"name":"works with ramda-curried functions","suites":["uncurryN"],"updatePoint":{"line":61,"column":40,"index":1382},"line":61,"code":"  it('works with ramda-curried functions', function () {\n    eq(R.uncurryN(2, R.add)(10, 20), 30);\n  });","file":"uncurryN.js","skipped":false,"dir":"test"},{"name":"returns a function that supports R.__ placeholder","suites":["uncurryN"],"updatePoint":{"line":64,"column":55,"index":1502},"line":64,"code":"  it('returns a function that supports R.__ placeholder', function () {\n    var g = R.uncurryN(3, a3);\n    var _ = R.__;\n    eq(g(1)(2)(3), 6);\n    eq(g(1)(2, 3), 6);\n    eq(g(1, 2)(3), 6);\n    eq(g(1, 2, 3), 6);\n    eq(g(_, 2, 3)(1), 6);\n    eq(g(1, _, 3)(2), 6);\n    eq(g(1, 2, _)(3), 6);\n    eq(g(1, _, _)(2)(3), 6);\n    eq(g(_, 2, _)(1)(3), 6);\n    eq(g(_, _, 3)(1)(2), 6);\n    eq(g(1, _, _)(2, 3), 6);\n    eq(g(_, 2, _)(1, 3), 6);\n    eq(g(_, _, 3)(1, 2), 6);\n    eq(g(1, _, _)(_, 3)(2), 6);\n    eq(g(_, 2, _)(_, 3)(1), 6);\n    eq(g(_, _, 3)(_, 2)(1), 6);\n    eq(g(_, _, _)(_, _)(_)(1, 2, 3), 6);\n    eq(g(_, _, _)(1, _, _)(_, _)(2, _)(_)(3), 6);\n  });","file":"uncurryN.js","skipped":false,"dir":"test"},{"name":"unfolds simple functions with a starting point to create a list","suites":["unfold"],"updatePoint":{"line":6,"column":69,"index":180},"line":6,"code":"  it('unfolds simple functions with a starting point to create a list', function () {\n    eq(R.unfold(function (n) {\n      if (n > 0) {\n        return [n, n - 1];\n      }\n    }, 10), [10, 9, 8, 7, 6, 5, 4, 3, 2, 1]);\n  });","file":"unfold.js","skipped":false,"dir":"test"},{"name":"is cool!","suites":["unfold"],"updatePoint":{"line":13,"column":14,"index":348},"line":13,"code":"  it('is cool!', function () {\n    var fib = function (n) {\n      var count = 0;\n      return function (pair) {\n        count += 1;\n\n        if (count <= n) {\n          return [pair[0], [pair[1], pair[0] + pair[1]]];\n        }\n      };\n    };\n\n    eq(R.unfold(fib(10), [0, 1]), [0, 1, 1, 2, 3, 5, 8, 13, 21, 34]);\n  });","file":"unfold.js","skipped":false,"dir":"test"},{"name":"combines two lists into the set of all their elements","suites":["union"],"updatePoint":{"line":12,"column":59,"index":265},"line":12,"code":"  it('combines two lists into the set of all their elements', function () {\n    eq(R.union(M, N), [1, 2, 3, 4, 5, 6]);\n  });","file":"union.js","skipped":false,"dir":"test"},{"name":"has R.equals semantics","suites":["union"],"updatePoint":{"line":15,"column":28,"index":359},"line":15,"code":"  it('has R.equals semantics', function () {\n    eq(R.union([0], [-0]).length, 2);\n    eq(R.union([-0], [0]).length, 2);\n    eq(R.union([NaN], [NaN]).length, 1);\n    eq(R.union([new Just([42])], [new Just([42])]).length, 1);\n  });","file":"union.js","skipped":false,"dir":"test"},{"name":"combines two lists into the set of all their elements based on the passed-in equality predicate","suites":["unionWith"],"updatePoint":{"line":29,"column":101,"index":430},"line":29,"code":"  it('combines two lists into the set of all their elements based on the passed-in equality predicate', function () {\n    eq(R.unionWith(eqA, Ro, So), [{\n      a: 1\n    }, {\n      a: 2\n    }, {\n      a: 3\n    }, {\n      a: 4\n    }, {\n      a: 5\n    }, {\n      a: 6\n    }]);\n  });","file":"unionWith.js","skipped":false,"dir":"test"},{"name":"returns a set from any array (i.e. purges duplicate elements)","suites":["uniq"],"updatePoint":{"line":10,"column":67,"index":224},"line":10,"code":"  it('returns a set from any array (i.e. purges duplicate elements)', function () {\n    var list = [1, 2, 3, 1, 2, 3, 1, 2, 3];\n    eq(R.uniq(list), [1, 2, 3]);\n  });","file":"uniq.js","skipped":false,"dir":"test"},{"name":"keeps elements from the left","suites":["uniq"],"updatePoint":{"line":14,"column":34,"index":358},"line":14,"code":"  it('keeps elements from the left', function () {\n    eq(R.uniq([1, 2, 3, 4, 1]), [1, 2, 3, 4]);\n  });","file":"uniq.js","skipped":false,"dir":"test"},{"name":"returns an empty array for an empty array","suites":["uniq"],"updatePoint":{"line":17,"column":47,"index":475},"line":17,"code":"  it('returns an empty array for an empty array', function () {\n    eq(R.uniq([]), []);\n  });","file":"uniq.js","skipped":false,"dir":"test"},{"name":"has R.equals semantics","suites":["uniq"],"updatePoint":{"line":20,"column":28,"index":550},"line":20,"code":"  it('has R.equals semantics', function () {\n    eq(R.uniq([-0, -0]).length, 1);\n    eq(R.uniq([0, -0]).length, 2);\n    eq(R.uniq([NaN, NaN]).length, 1);\n    eq(R.uniq([[1], [1]]).length, 1);\n    eq(R.uniq([new Just([42]), new Just([42])]).length, 1);\n  });","file":"uniq.js","skipped":false,"dir":"test"},{"name":"handles null and undefined elements","suites":["uniq"],"updatePoint":{"line":27,"column":41,"index":821},"line":27,"code":"  it('handles null and undefined elements', function () {\n    eq(R.uniq([void 0, null, void 0, null]), [void 0, null]);\n  });","file":"uniq.js","skipped":false,"dir":"test"},{"name":"uses reference equality for functions","suites":["uniq"],"updatePoint":{"line":30,"column":43,"index":949},"line":30,"code":"  it('uses reference equality for functions', function () {\n    eq(R.uniq([R.add, R.identity, R.add, R.identity, R.add, R.identity]).length, 2);\n  });","file":"uniq.js","skipped":false,"dir":"test"},{"name":"returns a set from any array based on predicate","suites":["uniqBy"],"updatePoint":{"line":10,"column":53,"index":212},"line":10,"code":"  it('returns a set from any array based on predicate', function () {\n    eq(R.uniqBy(Math.abs, [-2, -1, 0, 1, 2]), [-2, -1, 0]);\n  });","file":"uniqBy.js","skipped":false,"dir":"test"},{"name":"keeps elements from the left","suites":["uniqBy"],"updatePoint":{"line":13,"column":34,"index":329},"line":13,"code":"  it('keeps elements from the left', function () {\n    eq(R.uniqBy(Math.abs, [-1, 2, 4, 3, 1, 3]), [-1, 2, 4, 3]);\n  });","file":"uniqBy.js","skipped":false,"dir":"test"},{"name":"returns an empty array for an empty array","suites":["uniqBy"],"updatePoint":{"line":16,"column":47,"index":463},"line":16,"code":"  it('returns an empty array for an empty array', function () {\n    eq(R.uniqBy(R.identity, []), []);\n  });","file":"uniqBy.js","skipped":false,"dir":"test"},{"name":"has R.equals semantics","suites":["uniqBy"],"updatePoint":{"line":19,"column":28,"index":552},"line":19,"code":"  it('has R.equals semantics', function () {\n    eq(R.uniqBy(R.identity, [-0, 0]).length, 2);\n    eq(R.uniqBy(R.identity, [NaN, NaN]).length, 1);\n    eq(R.uniqBy(R.identity, [new Just([1, 2, 3]), new Just([1, 2, 3])]).length, 1);\n  });","file":"uniqBy.js","skipped":false,"dir":"test"},{"name":"can act as a transducer","suites":["uniqBy"],"updatePoint":{"line":24,"column":29,"index":789},"line":24,"code":"  it('can act as a transducer', function () {\n    var input = [-1, -5, 2, 10, 1, 2];\n    var expected = [-1, -5, 2, 10];\n    eq(R.into([], R.uniqBy(Math.abs), input), expected);\n    eq(R.transduce(R.uniqBy(Math.abs), R.flip(R.append), [], input), expected);\n  });","file":"uniqBy.js","skipped":false,"dir":"test"},{"name":"returns a set from any array (i.e. purges duplicate elements) based on predicate","suites":["uniqWith"],"updatePoint":{"line":61,"column":86,"index":737},"line":61,"code":"  it('returns a set from any array (i.e. purges duplicate elements) based on predicate', function () {\n    eq(R.uniqWith(eqI, objs), objs);\n    eq(R.uniqWith(eqI, objs2), [{\n      x: R.T,\n      i: 0\n    }, {\n      x: R.F,\n      i: 1\n    }, {\n      x: R.T,\n      i: 2\n    }, {\n      x: R.T,\n      i: 3\n    }]);\n  });","file":"uniqWith.js","skipped":false,"dir":"test"},{"name":"keeps elements from the left","suites":["uniqWith"],"updatePoint":{"line":77,"column":34,"index":1001},"line":77,"code":"  it('keeps elements from the left', function () {\n    eq(R.uniqWith(eqI, [{\n      i: 1\n    }, {\n      i: 2\n    }, {\n      i: 3\n    }, {\n      i: 4\n    }, {\n      i: 1\n    }]), [{\n      i: 1\n    }, {\n      i: 2\n    }, {\n      i: 3\n    }, {\n      i: 4\n    }]);\n  });","file":"uniqWith.js","skipped":false,"dir":"test"},{"name":"returns an empty array for an empty array","suites":["uniqWith"],"updatePoint":{"line":98,"column":47,"index":1280},"line":98,"code":"  it('returns an empty array for an empty array', function () {\n    eq(R.uniqWith(eqI, []), []);\n  });","file":"uniqWith.js","skipped":false,"dir":"test"},{"name":"can act as a transducer","suites":["uniqWith"],"updatePoint":{"line":101,"column":29,"index":1365},"line":101,"code":"  it('can act as a transducer', function () {\n    var input = [1, '1', 2, 1];\n    var expected = [1, 2];\n    eq(R.into([], R.uniqWith(R.eqBy(String)), input), expected);\n    eq(R.transduce(R.uniqWith(R.eqBy(String)), R.flip(R.append), [], input), expected);\n  });","file":"uniqWith.js","skipped":false,"dir":"test"},{"name":"calls the whenFalse function if the validator returns a falsy value","suites":["unless"],"updatePoint":{"line":9,"column":73,"index":278},"line":9,"code":"  it('calls the whenFalse function if the validator returns a falsy value', function () {\n    eq(R.unless(_isArrayLike, ofArray)(10), [10]);\n  });","file":"unless.js","skipped":false,"dir":"test"},{"name":"returns the argument unmodified if the validator returns a truthy value","suites":["unless"],"updatePoint":{"line":12,"column":77,"index":429},"line":12,"code":"  it('returns the argument unmodified if the validator returns a truthy value', function () {\n    eq(R.unless(_isArrayLike, ofArray)([10]), [10]);\n  });","file":"unless.js","skipped":false,"dir":"test"},{"name":"returns a curried function","suites":["unless"],"updatePoint":{"line":15,"column":32,"index":537},"line":15,"code":"  it('returns a curried function', function () {\n    eq(R.unless(_isArrayLike)(ofArray)(10), [10]);\n    eq(R.unless(_isArrayLike)(ofArray)([10]), [10]);\n  });","file":"unless.js","skipped":false,"dir":"test"},{"name":"only flattens one layer deep of a nested list","suites":["unnest"],"updatePoint":{"line":13,"column":51,"index":254},"line":13,"code":"  it('only flattens one layer deep of a nested list', function () {\n    var nest = [1, [2], [3, [4, 5], 6, [[[7], 8]]], 9, 10];\n    eq(R.unnest(nest), [1, 2, 3, [4, 5], 6, [[[7], 8]], 9, 10]);\n    nest = [[[[3]], 2, 1], 0, [[-1, -2], -3]];\n    eq(R.unnest(nest), [[[3]], 2, 1, 0, [-1, -2], -3]);\n    eq(R.unnest([1, 2, 3, 4, 5]), [1, 2, 3, 4, 5]);\n  });","file":"unnest.js","skipped":false,"dir":"test"},{"name":"is not destructive","suites":["unnest"],"updatePoint":{"line":20,"column":24,"index":581},"line":20,"code":"  it('is not destructive', function () {\n    var nest = [1, [2], [3, [4, 5], 6, [[[7], 8]]], 9, 10];\n    assert.notStrictEqual(R.unnest(nest), nest);\n  });","file":"unnest.js","skipped":false,"dir":"test"},{"name":"handles array-like objects","suites":["unnest"],"updatePoint":{"line":24,"column":32,"index":745},"line":24,"code":"  it('handles array-like objects', function () {\n    var o = {\n      length: 3,\n      0: [1, 2, [3]],\n      1: [],\n      2: ['a', 'b', 'c', ['d', 'e']]\n    };\n    eq(R.unnest(o), [1, 2, [3], 'a', 'b', 'c', ['d', 'e']]);\n  });","file":"unnest.js","skipped":false,"dir":"test"},{"name":"flattens an array of empty arrays","suites":["unnest"],"updatePoint":{"line":33,"column":39,"index":978},"line":33,"code":"  it('flattens an array of empty arrays', function () {\n    eq(R.unnest([[], [], []]), []);\n    eq(R.unnest([]), []);\n  });","file":"unnest.js","skipped":false,"dir":"test"},{"name":"is equivalent to R.chain(R.identity)","suites":["unnest"],"updatePoint":{"line":37,"column":42,"index":1105},"line":37,"code":"  it('is equivalent to R.chain(R.identity)', function () {\n    eq(R.unnest(Nothing), Nothing);\n    eq(R.unnest(Just(Nothing)), Nothing);\n    eq(R.unnest(Just(Just(Nothing))), Just(Nothing));\n    eq(R.unnest(Just(Just(42))), Just(42));\n    eq(R.unnest(Just(Just(Just(42)))), Just(Just(42)));\n  });","file":"unnest.js","skipped":false,"dir":"test"},{"name":"applies fn until pred is satisfied","suites":["until"],"updatePoint":{"line":8,"column":40,"index":217},"line":8,"code":"  it('applies fn until pred is satisfied', function () {\n    eq(R.until(R.gt(R.__, 100), R.multiply(2), 1), 128);\n  });","file":"until.js","skipped":false,"dir":"test"},{"name":"works with lists","suites":["until"],"updatePoint":{"line":11,"column":22,"index":319},"line":11,"code":"  it('works with lists', function () {\n    eq(R.until(R.none(_isArrayLike), R.unnest)([1, [2], [[3]]]), [1, 2, 3]);\n  });","file":"until.js","skipped":false,"dir":"test"},{"name":"ignores fn if predicate is always true","suites":["until"],"updatePoint":{"line":14,"column":44,"index":463},"line":14,"code":"  it('ignores fn if predicate is always true', function () {\n    eq(R.until(R.T, R.T, false), false);\n  });","file":"until.js","skipped":false,"dir":"test"},{"name":"returns list of destructed object if key is present as list in the object","suites":["unwind"],"updatePoint":{"line":11,"column":79,"index":294},"line":11,"code":"  it('returns list of destructed object if key is present as list in the object', function () {\n    eq(R.unwind('hobbies', object), [{\n      name: 'alice',\n      hobbies: 'Golf',\n      colors: ['red', 'green']\n    }, {\n      name: 'alice',\n      hobbies: 'Hacking',\n      colors: ['red', 'green']\n    }]);\n    eq(R.unwind('colors', object), [{\n      name: 'alice',\n      hobbies: ['Golf', 'Hacking'],\n      colors: 'red'\n    }, {\n      name: 'alice',\n      hobbies: ['Golf', 'Hacking'],\n      colors: 'green'\n    }]);\n  });","file":"unwind.js","skipped":false,"dir":"test"},{"name":"returns a list containing only the original object if the key is not present in the object","suites":["unwind"],"updatePoint":{"line":31,"column":96,"index":835},"line":31,"code":"  it('returns a list containing only the original object if the key is not present in the object', function () {\n    eq(R.unwind('hobby', object), [object]);\n  });","file":"unwind.js","skipped":false,"dir":"test"},{"name":"returns a list containing only the original object if the value for that key is not iterable","suites":["unwind"],"updatePoint":{"line":34,"column":98,"index":1001},"line":34,"code":"  it('returns a list containing only the original object if the value for that key is not iterable', function () {\n    eq(R.unwind('passtimes', object), [object]);\n    eq(R.unwind('options', {\n      title: 'What is the best programming language?',\n      options: {\n        0: 'Python',\n        1: 'Java',\n        2: 'JavaScript',\n        3: 'C++'\n      },\n      ans: 'Correct Answer is 2'\n    }), [{\n      title: 'What is the best programming language?',\n      options: {\n        0: 'Python',\n        1: 'Java',\n        2: 'JavaScript',\n        3: 'C++'\n      },\n      ans: 'Correct Answer is 2'\n    }]);\n    eq(R.unwind('hobbies', {\n      name: 'Berney',\n      hobbies: NaN\n    }), [{\n      name: 'Berney',\n      hobbies: NaN\n    }]);\n  });","file":"unwind.js","skipped":false,"dir":"test"},{"name":"does not treat a String as a list","suites":["unwind"],"updatePoint":{"line":63,"column":39,"index":1684},"line":63,"code":"  it('does not treat a String as a list', function () {\n    eq(R.unwind('hobbies', {\n      name: 'alice',\n      hobbies: 'Golf'\n    }), [{\n      name: 'alice',\n      hobbies: 'Golf'\n    }]); // Incorrect: result <- [\n    //     { name: 'alice', hobbies: 'G'},\n    //     { name: 'alice', hobbies: 'o'},\n    //     { name: 'alice', hobbies: 'l'},\n    //     { name: 'alice', hobbies: 'f'},\n    // ]\n  });","file":"unwind.js","skipped":false,"dir":"test"},{"name":"updates the value at the given index of the supplied array","suites":["update"],"updatePoint":{"line":6,"column":64,"index":175},"line":6,"code":"  it('updates the value at the given index of the supplied array', function () {\n    eq(R.update(2, 4, [0, 1, 2, 3]), [0, 1, 4, 3]);\n  });","file":"update.js","skipped":false,"dir":"test"},{"name":"offsets negative indexes from the end of the array","suites":["update"],"updatePoint":{"line":9,"column":56,"index":306},"line":9,"code":"  it('offsets negative indexes from the end of the array', function () {\n    eq(R.update(-3, 4, [0, 1, 2, 3]), [0, 4, 2, 3]);\n  });","file":"update.js","skipped":false,"dir":"test"},{"name":"returns the original array if the supplied index is out of bounds","suites":["update"],"updatePoint":{"line":12,"column":71,"index":453},"line":12,"code":"  it('returns the original array if the supplied index is out of bounds', function () {\n    var list = [0, 1, 2, 3];\n    eq(R.update(4, 4, list), list);\n    eq(R.update(-5, 4, list), list);\n  });","file":"update.js","skipped":false,"dir":"test"},{"name":"does not mutate the original array","suites":["update"],"updatePoint":{"line":17,"column":40,"index":618},"line":17,"code":"  it('does not mutate the original array', function () {\n    var list = [0, 1, 2, 3];\n    eq(R.update(2, 4, list), [0, 1, 4, 3]);\n    eq(list, [0, 1, 2, 3]);\n  });","file":"update.js","skipped":false,"dir":"test"},{"name":"curries the arguments","suites":["update"],"updatePoint":{"line":22,"column":27,"index":769},"line":22,"code":"  it('curries the arguments', function () {\n    eq(R.update(2)(4)([0, 1, 2, 3]), [0, 1, 4, 3]);\n  });","file":"update.js","skipped":false,"dir":"test"},{"name":"accepts an array-like object","suites":["update"],"updatePoint":{"line":25,"column":34,"index":878},"line":25,"code":"  it('accepts an array-like object', function () {\n    function args() {\n      return arguments;\n    }\n\n    eq(R.update(2, 4, args(0, 1, 2, 3)), [0, 1, 4, 3]);\n  });","file":"update.js","skipped":false,"dir":"test"},{"name":"takes a list of function and returns a function","suites":["useWith"],"updatePoint":{"line":23,"column":53,"index":413},"line":23,"code":"  it('takes a list of function and returns a function', function () {\n    eq(typeof R.useWith(max, []), 'function');\n    eq(typeof R.useWith(max, [add1]), 'function');\n    eq(typeof R.useWith(max, [add1, mult2, div3]), 'function');\n  });","file":"useWith.js","skipped":false,"dir":"test"},{"name":"passes the arguments received to their respective functions","suites":["useWith"],"updatePoint":{"line":28,"column":65,"index":663},"line":28,"code":"  it('passes the arguments received to their respective functions', function () {\n    eq(f(7, 8, 9), 16); // max(7 + 1, 8 * 2, 9 / 3);\n  });","file":"useWith.js","skipped":false,"dir":"test"},{"name":"passes additional arguments to the main function","suites":["useWith"],"updatePoint":{"line":31,"column":54,"index":793},"line":31,"code":"  it('passes additional arguments to the main function', function () {\n    eq(f(7, 8, 9, 10), 16);\n    eq(f(7, 8, 9, 20), 20);\n  });","file":"useWith.js","skipped":false,"dir":"test"},{"name":"has the correct arity","suites":["useWith"],"updatePoint":{"line":35,"column":27,"index":899},"line":35,"code":"  it('has the correct arity', function () {\n    eq(f.length, 3);\n  });","file":"useWith.js","skipped":false,"dir":"test"},{"name":"passes context to its functions","suites":["useWith"],"updatePoint":{"line":38,"column":37,"index":980},"line":38,"code":"  it('passes context to its functions', function () {\n    var a = function (x) {\n      return this.f1(x);\n    };\n\n    var b = function (x) {\n      return this.f2(x);\n    };\n\n    var c = function (x, y) {\n      return this.f3(x, y);\n    };\n\n    var d = R.useWith(c, [a, b]);\n    var context = {\n      f1: R.add(1),\n      f2: R.add(2),\n      f3: R.add\n    };\n    eq(a.call(context, 1), 2);\n    eq(b.call(context, 1), 3);\n    eq(d.apply(context, [1, 1]), 5);\n    eq(d.apply(context, [2, 3]), 8);\n  });","file":"useWith.js","skipped":false,"dir":"test"},{"name":"returns an array of the given object's values","suites":["values"],"updatePoint":{"line":29,"column":51,"index":454},"line":29,"code":"  it(\"returns an array of the given object's values\", function () {\n    var vs = R.values(obj).sort();\n    var ts = [[1, 2, 3], 100, 'D', {\n      x: 200,\n      y: 300\n    }, null, undefined];\n    eq(vs.length, ts.length);\n    eq(vs[0], ts[0]);\n    eq(vs[1], ts[1]);\n    eq(vs[2], ts[2]);\n    eq(vs[3], ts[3]);\n    eq(vs[4], ts[4]);\n    eq(vs[5], ts[5]);\n    eq(R.values({\n      hasOwnProperty: false\n    }), [false]);\n  });","file":"values.js","skipped":false,"dir":"test"},{"name":"does not include the given object's prototype properties","suites":["values"],"updatePoint":{"line":46,"column":62,"index":889},"line":46,"code":"  it(\"does not include the given object's prototype properties\", function () {\n    eq(R.values(cobj), [100, 200]);\n  });","file":"values.js","skipped":false,"dir":"test"},{"name":"returns an empty object for primitives","suites":["values"],"updatePoint":{"line":49,"column":44,"index":992},"line":49,"code":"  it('returns an empty object for primitives', function () {\n    eq(R.values(null), []);\n    eq(R.values(undefined), []);\n    eq(R.values(55), []);\n    eq(R.values('foo'), []);\n    eq(R.values(true), []);\n    eq(R.values(false), []);\n    eq(R.values(NaN), []);\n    eq(R.values(Infinity), []);\n    eq(R.values([]), []);\n  });","file":"values.js","skipped":false,"dir":"test"},{"name":"returns an array of the given object's values","suites":["valuesIn"],"updatePoint":{"line":29,"column":51,"index":456},"line":29,"code":"  it(\"returns an array of the given object's values\", function () {\n    var vs = R.valuesIn(obj);\n    eq(vs.length, 6);\n    eq(R.indexOf(100, vs) >= 0, true);\n    eq(R.indexOf('D', vs) >= 0, true);\n    eq(R.indexOf(null, vs) >= 0, true);\n    eq(R.indexOf(undefined, vs) >= 0, true);\n    eq(R.indexOf(obj.b, vs) >= 0, true);\n    eq(R.indexOf(obj.c, vs) >= 0, true);\n  });","file":"valuesIn.js","skipped":false,"dir":"test"},{"name":"includes the given object's prototype properties","suites":["valuesIn"],"updatePoint":{"line":39,"column":54,"index":830},"line":39,"code":"  it(\"includes the given object's prototype properties\", function () {\n    var vs = R.valuesIn(cobj);\n    eq(vs.length, 4);\n    eq(R.indexOf(100, vs) >= 0, true);\n    eq(R.indexOf(200, vs) >= 0, true);\n    eq(R.indexOf(cobj.x, vs) >= 0, true);\n    eq(R.indexOf('y', vs) >= 0, true);\n  });","file":"valuesIn.js","skipped":false,"dir":"test"},{"name":"works for primitives","suites":["valuesIn"],"updatePoint":{"line":47,"column":26,"index":1091},"line":47,"code":"  it('works for primitives', function () {\n    var result = R.map(function (val) {\n      return R.valuesIn(val);\n    }, [null, undefined, 55, '', true, false, NaN, Infinity,, []]);\n    eq(result, R.repeat([], 10));\n  });","file":"valuesIn.js","skipped":false,"dir":"test"},{"name":"calls the whenTrue function if the validator returns a truthy value","suites":["when"],"updatePoint":{"line":6,"column":73,"index":182},"line":6,"code":"  it('calls the whenTrue function if the validator returns a truthy value', function () {\n    eq(R.when(R.is(Number), R.add(1))(10), 11);\n  });","file":"when.js","skipped":false,"dir":"test"},{"name":"returns the argument unmodified if the validator returns a falsy value","suites":["when"],"updatePoint":{"line":9,"column":76,"index":329},"line":9,"code":"  it('returns the argument unmodified if the validator returns a falsy value', function () {\n    eq(R.when(R.is(Number), R.add(1))('hello'), 'hello');\n  });","file":"when.js","skipped":false,"dir":"test"},{"name":"returns a curried function","suites":["when"],"updatePoint":{"line":12,"column":32,"index":442},"line":12,"code":"  it('returns a curried function', function () {\n    var ifIsNumber = R.when(R.is(Number));\n    eq(ifIsNumber(R.add(1))(15), 16);\n    eq(ifIsNumber(R.add(1))('hello'), 'hello');\n  });","file":"when.js","skipped":false,"dir":"test"},{"name":"returns true if the test object satisfies the spec","suites":["where"],"updatePoint":{"line":6,"column":56,"index":166},"line":6,"code":"  it('returns true if the test object satisfies the spec', function () {\n    var spec = {\n      x: R.equals(1),\n      y: R.equals(2)\n    };\n    var test1 = {\n      x: 0,\n      y: 200\n    };\n    var test2 = {\n      x: 0,\n      y: 10\n    };\n    var test3 = {\n      x: 1,\n      y: 101\n    };\n    var test4 = {\n      x: 1,\n      y: 2\n    };\n    eq(R.where(spec, test1), false);\n    eq(R.where(spec, test2), false);\n    eq(R.where(spec, test3), false);\n    eq(R.where(spec, test4), true);\n  });","file":"where.js","skipped":false,"dir":"test"},{"name":"does not need the spec and the test object to have the same interface (the test object will have a superset of the specs properties)","suites":["where"],"updatePoint":{"line":32,"column":138,"index":738},"line":32,"code":"  it('does not need the spec and the test object to have the same interface (the test object will have a superset of the specs properties)', function () {\n    var spec = {\n      x: R.equals(100)\n    };\n    var test1 = {\n      x: 20,\n      y: 100,\n      z: 100\n    };\n    var test2 = {\n      w: 1,\n      x: 100,\n      y: 100,\n      z: 100\n    };\n    eq(R.where(spec, test1), false);\n    eq(R.where(spec, test2), true);\n  });","file":"where.js","skipped":false,"dir":"test"},{"name":"matches specs that have undefined properties","suites":["where"],"updatePoint":{"line":50,"column":50,"index":1074},"line":50,"code":"  it('matches specs that have undefined properties', function () {\n    var spec = {\n      x: R.equals(undefined)\n    };\n    var test1 = {};\n    var test2 = {\n      x: null\n    };\n    var test3 = {\n      x: undefined\n    };\n    var test4 = {\n      x: 1\n    };\n    eq(R.where(spec, test1), true);\n    eq(R.where(spec, test2), false);\n    eq(R.where(spec, test3), true);\n    eq(R.where(spec, test4), false);\n  });","file":"where.js","skipped":false,"dir":"test"},{"name":"is true for an empty spec","suites":["where"],"updatePoint":{"line":69,"column":31,"index":1466},"line":69,"code":"  it('is true for an empty spec', function () {\n    eq(R.where({}, {\n      a: 1\n    }), true);\n  });","file":"where.js","skipped":false,"dir":"test"},{"name":"matches inherited properties","suites":["where"],"updatePoint":{"line":74,"column":34,"index":1570},"line":74,"code":"  it('matches inherited properties', function () {\n    var spec = {\n      toString: R.equals(Object.prototype.toString),\n      valueOf: R.equals(Object.prototype.valueOf)\n    };\n    eq(R.where(spec, {}), true);\n  });","file":"where.js","skipped":false,"dir":"test"},{"name":"does not match inherited spec","suites":["where"],"updatePoint":{"line":81,"column":35,"index":1788},"line":81,"code":"  it('does not match inherited spec', function () {\n    function Spec() {\n      this.y = R.equals(6);\n    }\n\n    Spec.prototype.x = R.equals(5);\n    var spec = new Spec();\n    eq(R.where(spec, {\n      y: 6\n    }), true);\n    eq(R.where(spec, {\n      x: 5\n    }), false);\n  });","file":"where.js","skipped":false,"dir":"test"},{"name":"returns true if the test object satisfies the spec","suites":["whereAny"],"updatePoint":{"line":6,"column":56,"index":169},"line":6,"code":"  it('returns true if the test object satisfies the spec', function () {\n    var spec = {\n      x: R.equals(0),\n      y: R.equals(2)\n    };\n    var test1 = {\n      x: 0,\n      y: 200\n    };\n    var test2 = {\n      x: 0,\n      y: 10\n    };\n    var test3 = {\n      x: 1,\n      y: 101\n    };\n    var test4 = {\n      x: 1,\n      y: 2\n    };\n    eq(R.whereAny(spec, test1), true);\n    eq(R.whereAny(spec, test2), true);\n    eq(R.whereAny(spec, test3), false);\n    eq(R.whereAny(spec, test4), true);\n  });","file":"whereAny.js","skipped":false,"dir":"test"},{"name":"does not need the spec and the test object to have the same interface (the test object will have a superset of the specs properties)","suites":["whereAny"],"updatePoint":{"line":32,"column":138,"index":751},"line":32,"code":"  it('does not need the spec and the test object to have the same interface (the test object will have a superset of the specs properties)', function () {\n    var spec = {\n      x: R.equals(100)\n    };\n    var test1 = {\n      x: 20,\n      y: 100,\n      z: 100\n    };\n    var test2 = {\n      w: 1,\n      x: 100,\n      y: 100,\n      z: 100\n    };\n    eq(R.whereAny(spec, test1), false);\n    eq(R.whereAny(spec, test2), true);\n  });","file":"whereAny.js","skipped":false,"dir":"test"},{"name":"matches specs that have undefined properties","suites":["whereAny"],"updatePoint":{"line":50,"column":50,"index":1093},"line":50,"code":"  it('matches specs that have undefined properties', function () {\n    var spec = {\n      x: R.equals(undefined)\n    };\n    var test1 = {};\n    var test2 = {\n      x: null\n    };\n    var test3 = {\n      x: undefined\n    };\n    var test4 = {\n      x: 1\n    };\n    eq(R.whereAny(spec, test1), true);\n    eq(R.whereAny(spec, test2), false);\n    eq(R.whereAny(spec, test3), true);\n    eq(R.whereAny(spec, test4), false);\n  });","file":"whereAny.js","skipped":false,"dir":"test"},{"name":"is false for an empty spec","suites":["whereAny"],"updatePoint":{"line":69,"column":32,"index":1498},"line":69,"code":"  it('is false for an empty spec', function () {\n    eq(R.whereAny({}, {\n      a: 1\n    }), false);\n  });","file":"whereAny.js","skipped":false,"dir":"test"},{"name":"matches inherited properties","suites":["whereAny"],"updatePoint":{"line":74,"column":34,"index":1606},"line":74,"code":"  it('matches inherited properties', function () {\n    var spec = {\n      toString: R.equals(Object.prototype.toString),\n      valueOf: R.equals(null)\n    };\n    eq(R.whereAny(spec, {}), true);\n  });","file":"whereAny.js","skipped":false,"dir":"test"},{"name":"does not match inherited spec","suites":["whereAny"],"updatePoint":{"line":81,"column":35,"index":1807},"line":81,"code":"  it('does not match inherited spec', function () {\n    function Spec() {\n      this.y = R.equals(6);\n    }\n\n    Spec.prototype.x = R.equals(5);\n    var spec = new Spec();\n    eq(R.whereAny(spec, {\n      y: 6\n    }), true);\n    eq(R.whereAny(spec, {\n      x: 5\n    }), false);\n  });","file":"whereAny.js","skipped":false,"dir":"test"},{"name":"returns true if the test object satisfies the spec","suites":["whereEq"],"updatePoint":{"line":6,"column":56,"index":168},"line":6,"code":"  it('returns true if the test object satisfies the spec', function () {\n    var spec = {\n      x: 1,\n      y: 2\n    };\n    var test1 = {\n      x: 0,\n      y: 200\n    };\n    var test2 = {\n      x: 0,\n      y: 10\n    };\n    var test3 = {\n      x: 1,\n      y: 101\n    };\n    var test4 = {\n      x: 1,\n      y: 2\n    };\n    eq(R.whereEq(spec, test1), false);\n    eq(R.whereEq(spec, test2), false);\n    eq(R.whereEq(spec, test3), false);\n    eq(R.whereEq(spec, test4), true);\n  });","file":"whereEq.js","skipped":false,"dir":"test"},{"name":"does not need the spec and the test object to have the same interface (the test object will have a superset of the specs properties)","suites":["whereEq"],"updatePoint":{"line":32,"column":138,"index":728},"line":32,"code":"  it('does not need the spec and the test object to have the same interface (the test object will have a superset of the specs properties)', function () {\n    var spec = {\n      x: 100\n    };\n    var test1 = {\n      x: 20,\n      y: 100,\n      z: 100\n    };\n    var test2 = {\n      w: 1,\n      x: 100,\n      y: 100,\n      z: 100\n    };\n    eq(R.whereEq(spec, test1), false);\n    eq(R.whereEq(spec, test2), true);\n  });","file":"whereEq.js","skipped":false,"dir":"test"},{"name":"matches specs that have undefined properties","suites":["whereEq"],"updatePoint":{"line":50,"column":50,"index":1058},"line":50,"code":"  it('matches specs that have undefined properties', function () {\n    var spec = {\n      x: undefined\n    };\n    var test1 = {};\n    var test2 = {\n      x: null\n    };\n    var test3 = {\n      x: undefined\n    };\n    var test4 = {\n      x: 1\n    };\n    eq(R.whereEq(spec, test1), true);\n    eq(R.whereEq(spec, test2), false);\n    eq(R.whereEq(spec, test3), true);\n    eq(R.whereEq(spec, test4), false);\n  });","file":"whereEq.js","skipped":false,"dir":"test"},{"name":"is true for an empty spec","suites":["whereEq"],"updatePoint":{"line":69,"column":31,"index":1448},"line":69,"code":"  it('is true for an empty spec', function () {\n    eq(R.whereEq({}, {\n      a: 1\n    }), true);\n  });","file":"whereEq.js","skipped":false,"dir":"test"},{"name":"reports true when the object equals the spec","suites":["whereEq"],"updatePoint":{"line":74,"column":50,"index":1570},"line":74,"code":"  it('reports true when the object equals the spec', function () {\n    eq(R.whereEq(R, R), true);\n  });","file":"whereEq.js","skipped":false,"dir":"test"},{"name":"matches inherited props","suites":["whereEq"],"updatePoint":{"line":85,"column":29,"index":1786},"line":85,"code":"  it('matches inherited props', function () {\n    eq(R.whereEq({\n      y: 6\n    }, parent), true);\n    eq(R.whereEq({\n      x: 5\n    }, parent), true);\n    eq(R.whereEq({\n      x: 5,\n      y: 6\n    }, parent), true);\n    eq(R.whereEq({\n      x: 4,\n      y: 6\n    }, parent), false);\n  });","file":"whereEq.js","skipped":false,"dir":"test"},{"name":"does not match inherited spec","suites":["whereEq"],"updatePoint":{"line":101,"column":35,"index":2081},"line":101,"code":"  it('does not match inherited spec', function () {\n    eq(R.whereEq(parent, {\n      y: 6\n    }), true);\n    eq(R.whereEq(parent, {\n      x: 5\n    }), false);\n  });","file":"whereEq.js","skipped":false,"dir":"test"},{"name":"returns an array not containing values in the first argument","suites":["without"],"updatePoint":{"line":10,"column":66,"index":226},"line":10,"code":"  it('returns an array not containing values in the first argument', function () {\n    eq(R.without([1, 2], [1, 2, 1, 4, 5]), [4, 5]);\n  });","file":"without.js","skipped":false,"dir":"test"},{"name":"can act as a transducer","suites":["without"],"updatePoint":{"line":13,"column":29,"index":330},"line":13,"code":"  it('can act as a transducer', function () {\n    eq(R.into([], R.without([1]), [1]), []);\n    eq(R.transduce(R.without([1]), R.flip(R.append), [], [1]), []);\n  });","file":"without.js","skipped":false,"dir":"test"},{"name":"has R.equals semantics","suites":["without"],"updatePoint":{"line":17,"column":28,"index":494},"line":17,"code":"  it('has R.equals semantics', function () {\n    eq(R.without([0], [-0]).length, 1);\n    eq(R.without([-0], [0]).length, 1);\n    eq(R.without([NaN], [NaN]).length, 0);\n    eq(R.without([[1]], [[1]]).length, 0);\n    eq(R.without([new Just([42])], [new Just([42])]).length, 0);\n  });","file":"without.js","skipped":false,"dir":"test"},{"name":"compares two values with exclusive or","suites":["xor"],"updatePoint":{"line":6,"column":43,"index":151},"line":6,"code":"  it('compares two values with exclusive or', function () {\n    eq(R.xor(true, true), false);\n    eq(R.xor(true, false), true);\n    eq(R.xor(false, true), true);\n    eq(R.xor(false, false), false);\n  });","file":"xor.js","skipped":false,"dir":"test"},{"name":"when both values are truthy, it should return false","suites":["xor"],"updatePoint":{"line":12,"column":57,"index":369},"line":12,"code":"  it('when both values are truthy, it should return false', function () {\n    eq(R.xor(true, 'foo'), false);\n    eq(R.xor(42, true), false);\n    eq(R.xor('foo', 42), false);\n    eq(R.xor({}, true), false);\n    eq(R.xor(true, []), false);\n    eq(R.xor([], {}), false);\n    eq(R.xor(new Date(), true), false);\n    eq(R.xor(true, Infinity), false);\n    eq(R.xor(Infinity, new Date()), false);\n  });","file":"xor.js","skipped":false,"dir":"test"},{"name":"when both values are falsy, it should return false","suites":["xor"],"updatePoint":{"line":23,"column":56,"index":764},"line":23,"code":"  it('when both values are falsy, it should return false', function () {\n    eq(R.xor(null, false), false);\n    eq(R.xor(false, undefined), false);\n    eq(R.xor(undefined, null), false);\n    eq(R.xor(0, false), false);\n    eq(R.xor(false, NaN), false);\n    eq(R.xor(NaN, 0), false);\n    eq(R.xor('', false), false);\n  });","file":"xor.js","skipped":false,"dir":"test"},{"name":"when one argument is truthy and the other is falsy, it should return true","suites":["xor"],"updatePoint":{"line":32,"column":79,"index":1109},"line":32,"code":"  it('when one argument is truthy and the other is falsy, it should return true', function () {\n    eq(R.xor('foo', null), true);\n    eq(R.xor(null, 'foo'), true);\n    eq(R.xor(undefined, 42), true);\n    eq(R.xor(42, undefined), true);\n    eq(R.xor(Infinity, NaN), true);\n    eq(R.xor(NaN, Infinity), true);\n    eq(R.xor({}, ''), true);\n    eq(R.xor('', {}), true);\n    eq(R.xor(new Date(), 0), true);\n    eq(R.xor(0, new Date()), true);\n    eq(R.xor([], null), true);\n    eq(R.xor(undefined, []), true);\n  });","file":"xor.js","skipped":false,"dir":"test"},{"name":"returns a curried function","suites":["xor"],"updatePoint":{"line":46,"column":32,"index":1573},"line":46,"code":"  it('returns a curried function', function () {\n    eq(R.xor()(true)(true), false);\n    eq(R.xor()(true)(false), true);\n    eq(R.xor()(false)(true), true);\n    eq(R.xor()(false)(false), false);\n  });","file":"xor.js","skipped":false,"dir":"test"},{"name":"returns an empty list if either input list is empty","suites":["xprod"],"updatePoint":{"line":8,"column":57,"index":212},"line":8,"code":"  it('returns an empty list if either input list is empty', function () {\n    eq(R.xprod([], [1, 2, 3]), []);\n    eq(R.xprod([1, 2, 3], []), []);\n  });","file":"xprod.js","skipped":false,"dir":"test"},{"name":"creates the collection of all cross-product pairs of its parameters","suites":["xprod"],"updatePoint":{"line":12,"column":73,"index":380},"line":12,"code":"  it('creates the collection of all cross-product pairs of its parameters', function () {\n    eq(R.xprod(a, b), [[1, 'a'], [1, 'b'], [1, 'c'], [2, 'a'], [2, 'b'], [2, 'c']]);\n  });","file":"xprod.js","skipped":false,"dir":"test"},{"name":"returns an array of \"tuples\"","suites":["zip"],"updatePoint":{"line":6,"column":34,"index":142},"line":6,"code":"  it('returns an array of \"tuples\"', function () {\n    var a = [1, 2, 3];\n    var b = [100, 200, 300];\n    eq(R.zip(a, b), [[1, 100], [2, 200], [3, 300]]);\n  });","file":"zip.js","skipped":false,"dir":"test"},{"name":"returns a list as long as the shorter of the lists input","suites":["zip"],"updatePoint":{"line":11,"column":62,"index":332},"line":11,"code":"  it('returns a list as long as the shorter of the lists input', function () {\n    var a = [1, 2, 3];\n    var b = [100, 200, 300, 400];\n    var c = [10, 20];\n    eq(R.zip(a, b), [[1, 100], [2, 200], [3, 300]]);\n    eq(R.zip(a, c), [[1, 10], [2, 20]]);\n  });","file":"zip.js","skipped":false,"dir":"test"},{"name":"combines an array of keys with an array of values into a single object","suites":["zipObj"],"updatePoint":{"line":6,"column":76,"index":187},"line":6,"code":"  it('combines an array of keys with an array of values into a single object', function () {\n    eq(R.zipObj(['a', 'b', 'c'], [1, 2, 3]), {\n      a: 1,\n      b: 2,\n      c: 3\n    });\n  });","file":"zipObj.js","skipped":false,"dir":"test"},{"name":"ignores extra values","suites":["zipObj"],"updatePoint":{"line":13,"column":26,"index":326},"line":13,"code":"  it('ignores extra values', function () {\n    eq(R.zipObj(['a', 'b', 'c'], [1, 2, 3, 4, 5, 6, 7]), {\n      a: 1,\n      b: 2,\n      c: 3\n    });\n  });","file":"zipObj.js","skipped":false,"dir":"test"},{"name":"ignores extra keys","suites":["zipObj"],"updatePoint":{"line":20,"column":24,"index":475},"line":20,"code":"  it('ignores extra keys', function () {\n    eq(R.zipObj(['a', 'b', 'c', 'd', 'e', 'f'], [1, 2, 3]), {\n      a: 1,\n      b: 2,\n      c: 3\n    });\n  });","file":"zipObj.js","skipped":false,"dir":"test"},{"name":"last one in wins when there are duplicate keys","suites":["zipObj"],"updatePoint":{"line":27,"column":52,"index":655},"line":27,"code":"  it('last one in wins when there are duplicate keys', function () {\n    eq(R.zipObj(['a', 'b', 'c', 'a'], [1, 2, 3, 'LAST']), {\n      a: 'LAST',\n      b: 2,\n      c: 3\n    });\n  });","file":"zipObj.js","skipped":false,"dir":"test"},{"name":"returns an array created by applying its passed-in function pair-wise on its passed in arrays","suites":["zipWith"],"updatePoint":{"line":22,"column":99,"index":464},"line":22,"code":"  it('returns an array created by applying its passed-in function pair-wise on its passed in arrays', function () {\n    eq(R.zipWith(add, a, b), [101, 202, 303]);\n    eq(R.zipWith(x, a, b), [100, 400, 900]);\n    eq(R.zipWith(s, a, b), ['1 cow 100', '2 cow 200', '3 cow 300']);\n  });","file":"zipWith.js","skipped":false,"dir":"test"},{"name":"returns an array whose length is equal to the shorter of its input arrays","suites":["zipWith"],"updatePoint":{"line":27,"column":79,"index":727},"line":27,"code":"  it('returns an array whose length is equal to the shorter of its input arrays', function () {\n    eq(R.zipWith(add, a, c).length, a.length);\n  });","file":"zipWith.js","skipped":false,"dir":"test"}]}