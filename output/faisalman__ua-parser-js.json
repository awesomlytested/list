{
    "repo": "faisalman/ua-parser-js",
    "url": "https://github.com/faisalman/ua-parser-js",
    "branch": "master",
    "configs": [
        {
            "package": "ua-parser-js",
            "lang": "js",
            "dir": "test",
            "framework": "mocha",
            "pattern": "**/*.{js,ts}"
        }
    ],
    "tests": [
        {
            "name": "getResult() should returns JSON",
            "suites": [
                "Returns"
            ],
            "updatePoint": {
                "line": 84,
                "column": 37
            },
            "line": 84,
            "code": "  it('getResult() should returns JSON', function (done) {\n    assert.deepStrictEqual(new UAParser('').getResult(), {\n      ua: '',\n      browser: {\n        name: undefined,\n        version: undefined,\n        major: undefined\n      },\n      cpu: {\n        architecture: undefined\n      },\n      device: {\n        vendor: undefined,\n        model: undefined,\n        type: undefined\n      },\n      engine: {\n        name: undefined,\n        version: undefined\n      },\n      os: {\n        name: undefined,\n        version: undefined\n      }\n    });\n    done();\n  });",
            "file": "test.js",
            "skipped": false,
            "dir": "test"
        },
        {
            "name": "should loaded automatically",
            "suites": [
                "Using Require.js"
            ],
            "updatePoint": {
                "line": 138,
                "column": 33
            },
            "line": 138,
            "code": "  it('should loaded automatically', function (done) {\n    requirejs.config({\n      baseUrl: 'dist',\n      paths: {\n        'ua-parser-js': 'ua-parser.min'\n      }\n    });\n    requirejs(['ua-parser-js'], function (ua) {\n      var parser = new ua('Dillo/1.0');\n      assert.deepStrictEqual(parser.getBrowser().name, 'Dillo');\n      done();\n    });\n  });",
            "file": "test.js",
            "skipped": false,
            "dir": "test"
        },
        {
            "name": "all regexes in main file",
            "suites": [
                "Testing regexes",
                "Begin testing"
            ],
            "updatePoint": {
                "line": 171,
                "column": 32
            },
            "line": 171,
            "code": "    it('all regexes in main file', function () {\n      regexes.forEach(function (regex) {\n        describe('Test against `safe-regex` : ' + regex, function () {\n          it('should be safe from potentially vulnerable regex', function () {\n            assert.strictEqual(safe(regex), true);\n          });\n        });\n      });\n    });",
            "file": "test.js",
            "skipped": false,
            "dir": "test"
        },
        {
            "name": "should be safe from potentially vulnerable regex",
            "suites": [
                "Testing regexes",
                "Begin testing"
            ],
            "updatePoint": {
                "line": 174,
                "column": 62
            },
            "line": 174,
            "code": "          it('should be safe from potentially vulnerable regex', function () {\n            assert.strictEqual(safe(regex), true);\n          });",
            "file": "test.js",
            "skipped": false,
            "dir": "test"
        }
    ],
    "badge": "faisalman__ua-parser-js.svg"
}