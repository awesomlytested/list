{"repo":"Automattic/kue","url":"https://github.com/Automattic/kue","branch":"master","configs":[{"package":"kue","lang":"js","dir":"test","framework":"mocha","pattern":"**/*[._-]{test,spec,unittest,unit}.{ts,js}"}],"tests":[{"name":"should subscribe to queue events","suites":["Kue","Function: createQueue"],"updatePoint":{"line":30,"column":40},"line":30,"code":"    it('should subscribe to queue events', function () {\n      var queue = kue.createQueue();\n      events.subscribe.called.should.be.true;\n    });","file":"tdd/kue.spec.js","skipped":false,"dir":"test"},{"name":"should set the correct default values","suites":["Kue","Function: createQueue"],"updatePoint":{"line":34,"column":45},"line":34,"code":"    it('should set the correct default values', function () {\n      var queue = kue.createQueue();\n      queue.name.should.equal('kue');\n      queue.id.should.equal(['kue', require(\"os\").hostname(), process.pid].join(':'));\n      (queue.promoter === null).should.be.true;\n      queue.workers.should.eql(kue.workers);\n      queue.shuttingDown.should.be.false;\n    });","file":"tdd/kue.spec.js","skipped":false,"dir":"test"},{"name":"should allow a custom name option","suites":["Kue","Function: createQueue"],"updatePoint":{"line":42,"column":41},"line":42,"code":"    it('should allow a custom name option', function () {\n      it('should set the correct default values', function () {\n        var queue = kue.createQueue({\n          name: 'name'\n        });\n        queue.name.should.equal('name');\n      });\n    });","file":"tdd/kue.spec.js","skipped":false,"dir":"test"},{"name":"should set the correct default values","suites":["Kue","Function: createQueue"],"updatePoint":{"line":43,"column":47},"line":43,"code":"      it('should set the correct default values', function () {\n        var queue = kue.createQueue({\n          name: 'name'\n        });\n        queue.name.should.equal('name');\n      });","file":"tdd/kue.spec.js","skipped":false,"dir":"test"},{"name":"should return a new Job instance","suites":["Kue","Function: create"],"updatePoint":{"line":56,"column":40},"line":56,"code":"    it('should return a new Job instance', function () {\n      var data = {\n        key: 'value'\n      };\n      var job = queue.create('type', data);\n      job.type.should.equal('type');\n      job.data.should.eql(data);\n    });","file":"tdd/kue.spec.js","skipped":false,"dir":"test"},{"name":"should subscribe to events when subscribing to the job event","suites":["Kue","Function: on"],"updatePoint":{"line":73,"column":68},"line":73,"code":"    it('should subscribe to events when subscribing to the job event', function () {\n      queue.on('job', noop);\n      events.subscribe.called.should.be.true;\n    });","file":"tdd/kue.spec.js","skipped":false,"dir":"test"},{"name":"should proxy the event listener","suites":["Kue","Function: on"],"updatePoint":{"line":77,"column":39},"line":77,"code":"    it('should proxy the event listener', function (done) {\n      queue.on('event', function (data) {\n        data.should.equal('data');\n        done();\n      });\n      queue.emit('event', 'data');\n    });","file":"tdd/kue.spec.js","skipped":false,"dir":"test"},{"name":"should setup a warlock client if it is not setup yet","suites":["Kue","Function: setupTimers"],"updatePoint":{"line":96,"column":60},"line":96,"code":"    it('should setup a warlock client if it is not setup yet', function () {\n      queue.warlock = undefined;\n      queue.setupTimers();\n      queue.warlock.should.exist;\n    });","file":"tdd/kue.spec.js","skipped":false,"dir":"test"},{"name":"should call checkJobPromotion","suites":["Kue","Function: setupTimers"],"updatePoint":{"line":101,"column":37},"line":101,"code":"    it('should call checkJobPromotion', function () {\n      queue.setupTimers();\n      queue.checkJobPromotion.called.should.be.true;\n    });","file":"tdd/kue.spec.js","skipped":false,"dir":"test"},{"name":"should call checkActiveJobTtl","suites":["Kue","Function: setupTimers"],"updatePoint":{"line":105,"column":37},"line":105,"code":"    it('should call checkActiveJobTtl', function () {\n      queue.setupTimers();\n      queue.checkActiveJobTtl.called.should.be.true;\n    });","file":"tdd/kue.spec.js","skipped":false,"dir":"test"},{"name":"should set the promotion lock","suites":["Kue","Function: checkJobPromotion"],"updatePoint":{"line":137,"column":37},"line":137,"code":"    it('should set the promotion lock', function () {\n      queue.checkJobPromotion();\n      clock.tick(timeout);\n      queue.warlock.lock.calledWith('promotion', 2000).should.be.true;\n    });","file":"tdd/kue.spec.js","skipped":false,"dir":"test"},{"name":"should allow an override for the lockTtl","suites":["Kue","Function: checkJobPromotion"],"updatePoint":{"line":142,"column":48},"line":142,"code":"    it('should allow an override for the lockTtl', function () {\n      queue.checkJobPromotion({\n        lockTtl: 5000\n      });\n      clock.tick(timeout);\n      queue.warlock.lock.calledWith('promotion', 5000).should.be.true;\n    });","file":"tdd/kue.spec.js","skipped":false,"dir":"test"},{"name":"should load all delayed jobs that should be run job","suites":["Kue","Function: checkJobPromotion"],"updatePoint":{"line":149,"column":59},"line":149,"code":"    it('should load all delayed jobs that should be run job', function () {\n      queue.checkJobPromotion();\n      clock.tick(timeout);\n      client.zrangebyscore.calledWith(client.getKey('jobs:delayed'), 0, sinon.match.any, \"LIMIT\", 0, 1000).should.be.true;\n    });","file":"tdd/kue.spec.js","skipped":false,"dir":"test"},{"name":"should get each job","suites":["Kue","Function: checkJobPromotion"],"updatePoint":{"line":154,"column":27},"line":154,"code":"    it('should get each job', function () {\n      queue.checkJobPromotion();\n      clock.tick(timeout);\n      Job.get.callCount.should.equal(3);\n      Job.get.calledWith(ids[0]).should.be.true;\n      Job.get.calledWith(ids[1]).should.be.true;\n      Job.get.calledWith(ids[2]).should.be.true;\n    });","file":"tdd/kue.spec.js","skipped":false,"dir":"test"},{"name":"should emit promotion for each job","suites":["Kue","Function: checkJobPromotion"],"updatePoint":{"line":162,"column":42},"line":162,"code":"    it('should emit promotion for each job', function () {\n      queue.checkJobPromotion();\n      clock.tick(timeout);\n      events.emit.callCount.should.equal(3);\n      events.emit.calledWith(ids[0], 'promotion').should.be.true;\n      events.emit.calledWith(ids[1], 'promotion').should.be.true;\n      events.emit.calledWith(ids[2], 'promotion').should.be.true;\n    });","file":"tdd/kue.spec.js","skipped":false,"dir":"test"},{"name":"should set each job to inactive","suites":["Kue","Function: checkJobPromotion"],"updatePoint":{"line":170,"column":39},"line":170,"code":"    it('should set each job to inactive', function () {\n      queue.checkJobPromotion();\n      clock.tick(timeout);\n      job.inactive.callCount.should.equal(3);\n    });","file":"tdd/kue.spec.js","skipped":false,"dir":"test"},{"name":"should unlock promotion","suites":["Kue","Function: checkJobPromotion"],"updatePoint":{"line":175,"column":31},"line":175,"code":"    it('should unlock promotion', function () {\n      queue.checkJobPromotion();\n      clock.tick(timeout);\n      unlock.calledOnce.should.be.true;\n    });","file":"tdd/kue.spec.js","skipped":false,"dir":"test"},{"name":"should set the activeJobsTTL lock","suites":["Kue","Function: checkActiveJobTtl"],"updatePoint":{"line":210,"column":41},"line":210,"code":"    it('should set the activeJobsTTL lock', function () {\n      queue.checkActiveJobTtl();\n      clock.tick(timeout);\n      queue.warlock.lock.calledWith('activeJobsTTL').should.be.true;\n    });","file":"tdd/kue.spec.js","skipped":false,"dir":"test"},{"name":"should load all expired jobs","suites":["Kue","Function: checkActiveJobTtl"],"updatePoint":{"line":215,"column":36},"line":215,"code":"    it('should load all expired jobs', function () {\n      queue.checkActiveJobTtl();\n      clock.tick(timeout);\n      client.zrangebyscore.calledWith(client.getKey('jobs:active'), 100000, sinon.match.any, \"LIMIT\", 0, 1000).should.be.true;\n    });","file":"tdd/kue.spec.js","skipped":false,"dir":"test"},{"name":"should emit ttl exceeded for each job","suites":["Kue","Function: checkActiveJobTtl"],"updatePoint":{"line":220,"column":45},"line":220,"code":"    it('should emit ttl exceeded for each job', function () {\n      queue.checkActiveJobTtl();\n      clock.tick(timeout);\n      events.emit.callCount.should.equal(3);\n      events.emit.calledWith(ids[0], 'ttl exceeded');\n      events.emit.calledWith(ids[1], 'ttl exceeded');\n      events.emit.calledWith(ids[2], 'ttl exceeded');\n    });","file":"tdd/kue.spec.js","skipped":false,"dir":"test"},{"name":"should unlock after all the job ttl exceeded acks have been received","suites":["Kue","Function: checkActiveJobTtl"],"updatePoint":{"line":228,"column":76},"line":228,"code":"    it('should unlock after all the job ttl exceeded acks have been received', function () {\n      queue.checkActiveJobTtl('job ttl exceeded ack');\n      queue.checkActiveJobTtl();\n      clock.tick(timeout);\n\n      _.each(ids, function (id) {\n        // calling queue.emit since queue.on does special logic for events that start with \"job\"\n        queue.emit('job ttl exceeded ack', id);\n      });\n\n      unlock.calledOnce.should.be.true;\n      queue.removeAllListeners.calledWith('job ttl exceeded ack').should.be.true;\n    });","file":"tdd/kue.spec.js","skipped":false,"dir":"test"},{"name":"should call job.failedAttempt for each job that did not receive the ack event","suites":["Kue","Function: checkActiveJobTtl"],"updatePoint":{"line":241,"column":85},"line":241,"code":"    it('should call job.failedAttempt for each job that did not receive the ack event', function () {\n      queue.removeAllListeners('job ttl exceeded ack');\n      queue.checkActiveJobTtl('job ttl exceeded ack');\n      clock.tick(timeout);\n      var id = ids.splice(0, 1)[0];\n\n      _.each(ids, function (id) {\n        // calling queue.emit since queue.on does special logic for events that start with \"job\"\n        queue.emit('job ttl exceeded ack', id);\n      });\n\n      clock.tick(timeout);\n      Job.get.calledWith(id).should.be.true;\n      job.failedAttempt.calledOnce.should.be.true;\n      job.failedAttempt.calledWith({\n        error: true,\n        message: 'TTL exceeded'\n      }).should.be.true;\n    });","file":"tdd/kue.spec.js","skipped":false,"dir":"test"},{"name":"should load the script","suites":["Kue","Function: watchStuckJobs"],"updatePoint":{"line":276,"column":30},"line":276,"code":"    it('should load the script', function () {\n      queue.watchStuckJobs();\n      client.script.calledWith('LOAD').should.be.true;\n    });","file":"tdd/kue.spec.js","skipped":false,"dir":"test"},{"name":"should run the script on an interval","suites":["Kue","Function: watchStuckJobs"],"updatePoint":{"line":280,"column":44},"line":280,"code":"    it('should run the script on an interval', function () {\n      queue.watchStuckJobs();\n      clock.tick(1000);\n      client.evalsha.calledWith(sha, 0).should.be.true;\n      client.evalsha.callCount.should.equal(1);\n      clock.tick(1000);\n      client.evalsha.callCount.should.equal(2);\n    });","file":"tdd/kue.spec.js","skipped":false,"dir":"test"},{"name":"should get the requested setting","suites":["Kue","Function: setting"],"updatePoint":{"line":299,"column":40},"line":299,"code":"    it('should get the requested setting', function (done) {\n      queue.setting('name', function () {\n        client.hget.calledWith(client.getKey('settings'), 'name').should.be.true;\n        done();\n      });\n    });","file":"tdd/kue.spec.js","skipped":false,"dir":"test"},{"name":"should use 1 as the default number of workers","suites":["Kue","Function: process"],"updatePoint":{"line":324,"column":53},"line":324,"code":"    it('should use 1 as the default number of workers', function () {\n      queue.process('type', sinon.stub());\n      Worker.prototype.start.callCount.should.equal(1);\n    });","file":"tdd/kue.spec.js","skipped":false,"dir":"test"},{"name":"should accept a number for the number of workers","suites":["Kue","Function: process"],"updatePoint":{"line":328,"column":56},"line":328,"code":"    it('should accept a number for the number of workers', function () {\n      queue.process('type', 3, sinon.stub());\n      Worker.prototype.start.callCount.should.equal(3);\n    });","file":"tdd/kue.spec.js","skipped":false,"dir":"test"},{"name":"should add each worker to the queue.workers array","suites":["Kue","Function: process"],"updatePoint":{"line":332,"column":57},"line":332,"code":"    it('should add each worker to the queue.workers array', function () {\n      queue.process('type', 3, sinon.stub());\n      queue.workers.length.should.equal(3);\n    });","file":"tdd/kue.spec.js","skipped":false,"dir":"test"},{"name":"should setup each worker to respond to error events","suites":["Kue","Function: process"],"updatePoint":{"line":336,"column":59},"line":336,"code":"    it('should setup each worker to respond to error events', function () {\n      sinon.stub(queue, 'emit');\n      queue.process('type', 3, sinon.stub());\n      worker.emit('error');\n      queue.emit.callCount.should.equal(3);\n      queue.emit.restore();\n    });","file":"tdd/kue.spec.js","skipped":false,"dir":"test"},{"name":"should setup each worker to respond to job complete events","suites":["Kue","Function: process"],"updatePoint":{"line":343,"column":66},"line":343,"code":"    it('should setup each worker to respond to job complete events', function () {\n      var job = {\n        duration: 100\n      };\n      queue.process('type', 3, sinon.stub());\n      worker.emit('job complete', job);\n      client.incrby.calledWith(client.getKey('stats:work-time'), job.duration).should.be.true;\n    });","file":"tdd/kue.spec.js","skipped":false,"dir":"test"},{"name":"should setup timers","suites":["Kue","Function: process"],"updatePoint":{"line":351,"column":27},"line":351,"code":"    it('should setup timers', function () {\n      queue.process('type', 3, sinon.stub());\n      queue.setupTimers.called.should.be.true;\n    });","file":"tdd/kue.spec.js","skipped":false,"dir":"test"},{"name":"should return an error if it is already shutting down","suites":["Kue","Function: shutdown"],"updatePoint":{"line":380,"column":61},"line":380,"code":"    it('should return an error if it is already shutting down', function (done) {\n      queue.shuttingDown = true;\n      queue.shutdown(function (err) {\n        err.should.exist;\n        done();\n      });\n    });","file":"tdd/kue.spec.js","skipped":false,"dir":"test"},{"name":"should shutdown each worker","suites":["Kue","Function: shutdown"],"updatePoint":{"line":387,"column":35},"line":387,"code":"    it('should shutdown each worker', function (done) {\n      queue.shutdown(function () {\n        worker.shutdown.callCount.should.equal(3);\n        done();\n      });\n    });","file":"tdd/kue.spec.js","skipped":false,"dir":"test"},{"name":"should clean things up","suites":["Kue","Function: shutdown"],"updatePoint":{"line":393,"column":30},"line":393,"code":"    it('should clean things up', function (done) {\n      queue.shutdown(function () {\n        queue.workers.length.should.equal(0);\n        events.unsubscribe.called.should.be.true;\n        redis.reset.called.should.be.true;\n        client.quit.called.should.be.true;\n        (queue.client == null).should.be.true;\n        lockClient.quit.called.should.be.true;\n        (queue.lockClient == null).should.be.true;\n        done();\n      });\n    });","file":"tdd/kue.spec.js","skipped":false,"dir":"test"},{"name":"should get the jobs types","suites":["Kue","Function: types"],"updatePoint":{"line":417,"column":33},"line":417,"code":"    it('should get the jobs types', function (done) {\n      queue.types(function (err, tps) {\n        tps.should.eql(types);\n        done();\n      });\n    });","file":"tdd/kue.spec.js","skipped":false,"dir":"test"},{"name":"should get all job ids for the given state","suites":["Kue","Function: state"],"updatePoint":{"line":437,"column":50},"line":437,"code":"    it('should get all job ids for the given state', function (done) {\n      queue.state(state, function (err, ids) {\n        ids.should.eql(jobIds);\n        done();\n      });\n    });","file":"tdd/kue.spec.js","skipped":false,"dir":"test"},{"name":"should load the worktime","suites":["Kue","Function: workTime"],"updatePoint":{"line":455,"column":32},"line":455,"code":"    it('should load the worktime', function (done) {\n      queue.workTime(function (err, time) {\n        time.should.equal(n);\n        done();\n      });\n    });","file":"tdd/kue.spec.js","skipped":false,"dir":"test"},{"name":"should return the total number of jobs for a given type and state","suites":["Kue","Function: cardByType"],"updatePoint":{"line":475,"column":73},"line":475,"code":"    it('should return the total number of jobs for a given type and state', function (done) {\n      queue.cardByType(type, state, function (err, card) {\n        card.should.equal(total);\n        done();\n      });\n    });","file":"tdd/kue.spec.js","skipped":false,"dir":"test"},{"name":"should return the total number of jobs for a given state","suites":["Kue","function: card"],"updatePoint":{"line":494,"column":64},"line":494,"code":"    it('should return the total number of jobs for a given state', function (done) {\n      queue.card(state, function (err, card) {\n        card.should.equal(total);\n        done();\n      });\n    });","file":"tdd/kue.spec.js","skipped":false,"dir":"test"},{"name":"should get the completed jobs","suites":["Kue","Function: complete"],"updatePoint":{"line":510,"column":37},"line":510,"code":"    it('should get the completed jobs', function (done) {\n      queue.complete(function () {\n        queue.state.calledWith('complete').should.be.true;\n        done();\n      });\n    });","file":"tdd/kue.spec.js","skipped":false,"dir":"test"},{"name":"should get the completed jobs","suites":["Kue","Function: failed"],"updatePoint":{"line":526,"column":37},"line":526,"code":"    it('should get the completed jobs', function (done) {\n      queue.failed(function () {\n        queue.state.calledWith('failed').should.be.true;\n        done();\n      });\n    });","file":"tdd/kue.spec.js","skipped":false,"dir":"test"},{"name":"should get the completed jobs","suites":["Kue","Function: inactive"],"updatePoint":{"line":542,"column":37},"line":542,"code":"    it('should get the completed jobs', function (done) {\n      queue.inactive(function () {\n        queue.state.calledWith('inactive').should.be.true;\n        done();\n      });\n    });","file":"tdd/kue.spec.js","skipped":false,"dir":"test"},{"name":"should get the completed jobs","suites":["Kue","Function: active"],"updatePoint":{"line":558,"column":37},"line":558,"code":"    it('should get the completed jobs', function (done) {\n      queue.active(function () {\n        queue.state.calledWith('active').should.be.true;\n        done();\n      });\n    });","file":"tdd/kue.spec.js","skipped":false,"dir":"test"},{"name":"should get the completed jobs","suites":["Kue","Function: delayed"],"updatePoint":{"line":574,"column":37},"line":574,"code":"    it('should get the completed jobs', function (done) {\n      queue.delayed(function () {\n        queue.state.calledWith('delayed').should.be.true;\n        done();\n      });\n    });","file":"tdd/kue.spec.js","skipped":false,"dir":"test"},{"name":"should get all completed jobs","suites":["Kue","Function: completeCount"],"updatePoint":{"line":592,"column":37},"line":592,"code":"    it('should get all completed jobs', function (done) {\n      queue.completeCount(function () {\n        queue.card.calledWith('complete').should.be.true;\n        done();\n      });\n    });","file":"tdd/kue.spec.js","skipped":false,"dir":"test"},{"name":"should get all completed jobs of a certain type","suites":["Kue","Function: completeCount"],"updatePoint":{"line":598,"column":55},"line":598,"code":"    it('should get all completed jobs of a certain type', function (done) {\n      queue.completeCount('type', function () {\n        queue.cardByType.calledWith('type', 'complete').should.be.true;\n        done();\n      });\n    });","file":"tdd/kue.spec.js","skipped":false,"dir":"test"},{"name":"should get all completed jobs","suites":["Kue","Function: failedCount"],"updatePoint":{"line":616,"column":37},"line":616,"code":"    it('should get all completed jobs', function (done) {\n      queue.failedCount(function () {\n        queue.card.calledWith('failed').should.be.true;\n        done();\n      });\n    });","file":"tdd/kue.spec.js","skipped":false,"dir":"test"},{"name":"should get all completed jobs of a certain type","suites":["Kue","Function: failedCount"],"updatePoint":{"line":622,"column":55},"line":622,"code":"    it('should get all completed jobs of a certain type', function (done) {\n      queue.failedCount('type', function () {\n        queue.cardByType.calledWith('type', 'failed').should.be.true;\n        done();\n      });\n    });","file":"tdd/kue.spec.js","skipped":false,"dir":"test"},{"name":"should get all completed jobs","suites":["Kue","Function: inactiveCount"],"updatePoint":{"line":640,"column":37},"line":640,"code":"    it('should get all completed jobs', function (done) {\n      queue.inactiveCount(function () {\n        queue.card.calledWith('inactive').should.be.true;\n        done();\n      });\n    });","file":"tdd/kue.spec.js","skipped":false,"dir":"test"},{"name":"should get all completed jobs of a certain type","suites":["Kue","Function: inactiveCount"],"updatePoint":{"line":646,"column":55},"line":646,"code":"    it('should get all completed jobs of a certain type', function (done) {\n      queue.inactiveCount('type', function () {\n        queue.cardByType.calledWith('type', 'inactive').should.be.true;\n        done();\n      });\n    });","file":"tdd/kue.spec.js","skipped":false,"dir":"test"},{"name":"should get all completed jobs","suites":["Kue","Function: activeCount"],"updatePoint":{"line":664,"column":37},"line":664,"code":"    it('should get all completed jobs', function (done) {\n      queue.activeCount(function () {\n        queue.card.calledWith('active').should.be.true;\n        done();\n      });\n    });","file":"tdd/kue.spec.js","skipped":false,"dir":"test"},{"name":"should get all completed jobs of a certain type","suites":["Kue","Function: activeCount"],"updatePoint":{"line":670,"column":55},"line":670,"code":"    it('should get all completed jobs of a certain type', function (done) {\n      queue.activeCount('type', function () {\n        queue.cardByType.calledWith('type', 'active').should.be.true;\n        done();\n      });\n    });","file":"tdd/kue.spec.js","skipped":false,"dir":"test"},{"name":"should get all completed jobs","suites":["Kue","Function: delayedCount"],"updatePoint":{"line":688,"column":37},"line":688,"code":"    it('should get all completed jobs', function (done) {\n      queue.delayedCount(function () {\n        queue.card.calledWith('delayed').should.be.true;\n        done();\n      });\n    });","file":"tdd/kue.spec.js","skipped":false,"dir":"test"},{"name":"should get all completed jobs of a certain type","suites":["Kue","Function: delayedCount"],"updatePoint":{"line":694,"column":55},"line":694,"code":"    it('should get all completed jobs of a certain type', function (done) {\n      queue.delayedCount('type', function () {\n        queue.cardByType.calledWith('type', 'delayed').should.be.true;\n        done();\n      });\n    });","file":"tdd/kue.spec.js","skipped":false,"dir":"test"},{"name":"should parse a url connection string","suites":["redis","Function: configureFactory"],"updatePoint":{"line":15,"column":44},"line":15,"code":"    it('should parse a url connection string', function () {\n      var options = {\n        redis: 'redis://:password@host:1234/db'\n      };\n      redis.configureFactory(options);\n      options.redis.port.should.equal('1234');\n      options.redis.host.should.equal('host');\n      options.redis.db.should.equal('db');\n    });","file":"tdd/redis.spec.js","skipped":false,"dir":"test"},{"name":"should reset everything","suites":["redis","Function: configureFactory"],"updatePoint":{"line":24,"column":31},"line":24,"code":"    it('should reset everything', function () {\n      var options = {\n        redis: 'redis://:password@host:1234/db'\n      };\n      redis.configureFactory(options);\n      redis.reset.called.should.be.true;\n    });","file":"tdd/redis.spec.js","skipped":false,"dir":"test"},{"name":"should export the createClient function","suites":["redis","Function: configureFactory"],"updatePoint":{"line":31,"column":47},"line":31,"code":"    it('should export the createClient function', function () {\n      var options = {\n        redis: 'redis://:password@host:1234/db'\n      };\n      redis.createClient = null;\n      redis.configureFactory(options);\n      (typeof redis.createClient == 'function').should.be.true;\n    });","file":"tdd/redis.spec.js","skipped":false,"dir":"test"},{"name":"should create a client object","suites":["redis","Function: createClient"],"updatePoint":{"line":55,"column":37},"line":55,"code":"    it('should create a client object', function () {\n      var client = redis.createClient();\n      client.prefix.should.equal(options.prefix);\n      ('function' === typeof client.getKey).should.be.true;\n      ('function' === typeof client.createFIFO).should.be.true;\n      ('function' === typeof client.stripFIFO).should.be.true;\n    });","file":"tdd/redis.spec.js","skipped":false,"dir":"test"},{"name":"should return the key with the prefix","suites":["redis","Function: createClient","Function: client.getKey"],"updatePoint":{"line":63,"column":47},"line":63,"code":"      it('should return the key with the prefix', function () {\n        var client = redis.createClient();\n        var key = client.getKey('key');\n        key.should.equal('prefix:key');\n      });","file":"tdd/redis.spec.js","skipped":false,"dir":"test"},{"name":"should return key with prefix and curly braces for ioredis cluster","suites":["redis","Function: createClient","Function: client.getKey"],"updatePoint":{"line":68,"column":76},"line":68,"code":"      it('should return key with prefix and curly braces for ioredis cluster', function () {\n        var client = redis.createClient();\n        client.constructor = {\n          name: 'Redis'\n        };\n        var key = client.getKey('key');\n        key.should.equal('{prefix}:key');\n      });","file":"tdd/redis.spec.js","skipped":false,"dir":"test"},{"name":"should prefix with the length of the id","suites":["redis","Function: createClient","Function: client.createFIFO"],"updatePoint":{"line":78,"column":49},"line":78,"code":"      it('should prefix with the length of the id', function () {\n        var client = redis.createClient();\n        var id = client.createFIFO('12345678910');\n        id.should.equal('11|12345678910');\n      });","file":"tdd/redis.spec.js","skipped":false,"dir":"test"},{"name":"should pad with a zero for single digit length ids","suites":["redis","Function: createClient","Function: client.createFIFO"],"updatePoint":{"line":83,"column":60},"line":83,"code":"      it('should pad with a zero for single digit length ids', function () {\n        var client = redis.createClient();\n        var id = client.createFIFO('123');\n        id.should.equal('03|123');\n      });","file":"tdd/redis.spec.js","skipped":false,"dir":"test"},{"name":"should strip the prefix on the id","suites":["redis","Function: createClient","Function: client.stripFIFO"],"updatePoint":{"line":90,"column":43},"line":90,"code":"      it('should strip the prefix on the id', function () {\n        var client = redis.createClient();\n        var id = client.stripFIFO('03|123');\n        id.should.equal(123);\n      });","file":"tdd/redis.spec.js","skipped":false,"dir":"test"},{"name":"should create a client","suites":["redis","Function: createClientFactory"],"updatePoint":{"line":118,"column":30},"line":118,"code":"    it('should create a client', function () {\n      var c = redis.createClientFactory(options);\n      r.createClient.called.should.be.true;\n      r.createClient.calledWith(options.redis.port, options.redis.host, options.redis.options).should.be.true;\n    });","file":"tdd/redis.spec.js","skipped":false,"dir":"test"},{"name":"should authenticate if auth is present","suites":["redis","Function: createClientFactory"],"updatePoint":{"line":123,"column":46},"line":123,"code":"    it('should authenticate if auth is present', function () {\n      options.redis.auth = 'auth';\n      var c = redis.createClientFactory(options);\n      client.auth.calledWith(options.redis.auth).should.be.true;\n    });","file":"tdd/redis.spec.js","skipped":false,"dir":"test"},{"name":"should select the passed in db","suites":["redis","Function: createClientFactory"],"updatePoint":{"line":128,"column":38},"line":128,"code":"    it('should select the passed in db', function () {\n      options.redis.db = 1;\n      var c = redis.createClientFactory(options);\n      client.select.calledWith(options.redis.db).should.be.true;\n    });","file":"tdd/redis.spec.js","skipped":false,"dir":"test"},{"name":"should return the existing client if there is one","suites":["redis","Function: client"],"updatePoint":{"line":135,"column":57},"line":135,"code":"    it('should return the existing client if there is one', function () {\n      redis._client = 'client';\n      redis.client().should.equal('client');\n    });","file":"tdd/redis.spec.js","skipped":false,"dir":"test"},{"name":"should create a client if one is not present","suites":["redis","Function: client"],"updatePoint":{"line":139,"column":52},"line":139,"code":"    it('should create a client if one is not present', function () {\n      redis._client = null;\n      sinon.stub(redis, 'createClient');\n      redis.client();\n      redis.createClient.called.should.be.true;\n      redis.createClient.restore();\n    });","file":"tdd/redis.spec.js","skipped":false,"dir":"test"},{"name":"should return the existing client if there is one","suites":["redis","Function: pubsubClient"],"updatePoint":{"line":148,"column":57},"line":148,"code":"    it('should return the existing client if there is one', function () {\n      redis._pubsub = 'pubsubClient';\n      redis.pubsubClient().should.equal('pubsubClient');\n    });","file":"tdd/redis.spec.js","skipped":false,"dir":"test"},{"name":"should create a pubsubClient if one is not present","suites":["redis","Function: pubsubClient"],"updatePoint":{"line":152,"column":58},"line":152,"code":"    it('should create a pubsubClient if one is not present', function () {\n      redis._pubsub = null;\n      sinon.stub(redis, 'createClient');\n      redis.pubsubClient();\n      redis.createClient.called.should.be.true;\n      redis.createClient.restore();\n    });","file":"tdd/redis.spec.js","skipped":false,"dir":"test"},{"name":"should quit and remove the client","suites":["redis","Function: reset"],"updatePoint":{"line":172,"column":41},"line":172,"code":"    it('should quit and remove the client', function () {\n      redis.reset();\n      (redis._client == null).should.be.true;\n      client.quit.called.should.be.true;\n    });","file":"tdd/redis.spec.js","skipped":false,"dir":"test"},{"name":"should quick and remove the pubsub client","suites":["redis","Function: reset"],"updatePoint":{"line":177,"column":49},"line":177,"code":"    it('should quick and remove the pubsub client', function () {\n      redis.reset();\n      (redis._pubsub == null).should.be.true;\n      pubsub.quit.called.should.be.true;\n    });","file":"tdd/redis.spec.js","skipped":false,"dir":"test"}]}