{"repo":"ionic-team/ionic-framework","url":"https://github.com/ionic-team/ionic-framework","branch":"main","configs":[{"package":"react-router-new","lang":"js","dir":"packages/react-router/test-app/cypress","framework":"jest","pattern":"**/*[._-]{test,spec,unittest,unit}.{ts,js}"},{"package":"@ionic/react/routing","lang":"ts","dir":"packages/react/src/routing/__tests__","framework":"jest","pattern":"**/*[._-]{test,spec,unittest,unit}.{ts,js}"},{"package":"test-app","lang":"js","dir":"packages/react/test-app/cypress","framework":"jest","pattern":"**/*[._-]{test,spec,unittest,unit}.{ts,js}"},{"package":"@ionic/vue-router","lang":"ts","dir":"packages/vue-router/__tests__","framework":"jest","pattern":"**/*[._-]{test,spec,unittest,unit}.{ts,js}"}],"tests":[{"name":".type() - type into a DOM element","suites":[],"updatePoint":{"line":7,"column":39,"index":241},"line":7,"code":"  it('.type() - type into a DOM element', () => {\n    // https://on.cypress.io/type\n    cy.get('.action-email').type('fake@email.com').should('have.value', 'fake@email.com') // .type() with special character sequences\n    .type('{leftarrow}{rightarrow}{uparrow}{downarrow}').type('{del}{selectall}{backspace}') // .type() with key modifiers\n    .type('{alt}{option}') //these are equivalent\n    .type('{ctrl}{control}') //these are equivalent\n    .type('{meta}{command}{cmd}') //these are equivalent\n    .type('{shift}') // Delay each keypress by 0.1 sec\n    .type('slow.typing@email.com', {\n      delay: 100\n    }).should('have.value', 'slow.typing@email.com');\n    cy.get('.action-disabled') // Ignore error checking prior to type\n    // like whether the input is visible or disabled\n    .type('disabled error checking', {\n      force: true\n    }).should('have.value', 'disabled error checking');\n  });","file":"examples/actions.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":".focus() - focus on a DOM element","suites":[],"updatePoint":{"line":24,"column":39,"index":1146},"line":24,"code":"  it('.focus() - focus on a DOM element', () => {\n    // https://on.cypress.io/focus\n    cy.get('.action-focus').focus().should('have.class', 'focus').prev().should('have.attr', 'style', 'color: orange;');\n  });","file":"examples/actions.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":".blur() - blur off a DOM element","suites":[],"updatePoint":{"line":28,"column":38,"index":1357},"line":28,"code":"  it('.blur() - blur off a DOM element', () => {\n    // https://on.cypress.io/blur\n    cy.get('.action-blur').type('About to blur').blur().should('have.class', 'error').prev().should('have.attr', 'style', 'color: red;');\n  });","file":"examples/actions.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":".clear() - clears an input or textarea element","suites":[],"updatePoint":{"line":32,"column":52,"index":1598},"line":32,"code":"  it('.clear() - clears an input or textarea element', () => {\n    // https://on.cypress.io/clear\n    cy.get('.action-clear').type('Clear this text').should('have.value', 'Clear this text').clear().should('have.value', '');\n  });","file":"examples/actions.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":".submit() - submit a form","suites":[],"updatePoint":{"line":36,"column":31,"index":1807},"line":36,"code":"  it('.submit() - submit a form', () => {\n    // https://on.cypress.io/submit\n    cy.get('.action-form').find('[type=\"text\"]').type('HALFOFF');\n    cy.get('.action-form').submit().next().should('contain', 'Your form has been submitted!');\n  });","file":"examples/actions.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":".click() - click on a DOM element","suites":[],"updatePoint":{"line":41,"column":39,"index":2060},"line":41,"code":"  it('.click() - click on a DOM element', () => {\n    // https://on.cypress.io/click\n    cy.get('.action-btn').click(); // You can click on 9 specific positions of an element:\n    //  -----------------------------------\n    // | topLeft        top       topRight |\n    // |                                   |\n    // |                                   |\n    // |                                   |\n    // | left          center        right |\n    // |                                   |\n    // |                                   |\n    // |                                   |\n    // | bottomLeft   bottom   bottomRight |\n    //  -----------------------------------\n    // clicking in the center of the element is the default\n\n    cy.get('#action-canvas').click();\n    cy.get('#action-canvas').click('topLeft');\n    cy.get('#action-canvas').click('top');\n    cy.get('#action-canvas').click('topRight');\n    cy.get('#action-canvas').click('left');\n    cy.get('#action-canvas').click('right');\n    cy.get('#action-canvas').click('bottomLeft');\n    cy.get('#action-canvas').click('bottom');\n    cy.get('#action-canvas').click('bottomRight'); // .click() accepts an x and y coordinate\n    // that controls where the click occurs :)\n\n    cy.get('#action-canvas').click(80, 75) // click 80px on x coord and 75px on y coord\n    .click(170, 75).click(80, 165).click(100, 185).click(125, 190).click(150, 185).click(170, 165); // click multiple elements by passing multiple: true\n\n    cy.get('.action-labels>.label').click({\n      multiple: true\n    }); // Ignore error checking prior to clicking\n\n    cy.get('.action-opacity>.btn').click({\n      force: true\n    });\n  });","file":"examples/actions.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":".dblclick() - double click on a DOM element","suites":[],"updatePoint":{"line":79,"column":49,"index":3736},"line":79,"code":"  it('.dblclick() - double click on a DOM element', () => {\n    // https://on.cypress.io/dblclick\n    // Our app has a listener on 'dblclick' event in our 'scripts.js'\n    // that hides the div and shows an input on double click\n    cy.get('.action-div').dblclick().should('not.be.visible');\n    cy.get('.action-input-hidden').should('be.visible');\n  });","file":"examples/actions.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":".rightclick() - right click on a DOM element","suites":[],"updatePoint":{"line":86,"column":50,"index":4092},"line":86,"code":"  it('.rightclick() - right click on a DOM element', () => {\n    // https://on.cypress.io/rightclick\n    // Our app has a listener on 'contextmenu' event in our 'scripts.js'\n    // that hides the div and shows an input on right click\n    cy.get('.rightclick-action-div').rightclick().should('not.be.visible');\n    cy.get('.rightclick-action-input-hidden').should('be.visible');\n  });","file":"examples/actions.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":".check() - check a checkbox or radio element","suites":[],"updatePoint":{"line":93,"column":50,"index":4476},"line":93,"code":"  it('.check() - check a checkbox or radio element', () => {\n    // https://on.cypress.io/check\n    // By default, .check() will check all\n    // matching checkbox or radio elements in succession, one after another\n    cy.get('.action-checkboxes [type=\"checkbox\"]').not('[disabled]').check().should('be.checked');\n    cy.get('.action-radios [type=\"radio\"]').not('[disabled]').check().should('be.checked'); // .check() accepts a value argument\n\n    cy.get('.action-radios [type=\"radio\"]').check('radio1').should('be.checked'); // .check() accepts an array of values\n\n    cy.get('.action-multiple-checkboxes [type=\"checkbox\"]').check(['checkbox1', 'checkbox2']).should('be.checked'); // Ignore error checking prior to checking\n\n    cy.get('.action-checkboxes [disabled]').check({\n      force: true\n    }).should('be.checked');\n    cy.get('.action-radios [type=\"radio\"]').check('radio3', {\n      force: true\n    }).should('be.checked');\n  });","file":"examples/actions.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":".uncheck() - uncheck a checkbox element","suites":[],"updatePoint":{"line":111,"column":45,"index":5411},"line":111,"code":"  it('.uncheck() - uncheck a checkbox element', () => {\n    // https://on.cypress.io/uncheck\n    // By default, .uncheck() will uncheck all matching\n    // checkbox elements in succession, one after another\n    cy.get('.action-check [type=\"checkbox\"]').not('[disabled]').uncheck().should('not.be.checked'); // .uncheck() accepts a value argument\n\n    cy.get('.action-check [type=\"checkbox\"]').check('checkbox1').uncheck('checkbox1').should('not.be.checked'); // .uncheck() accepts an array of values\n\n    cy.get('.action-check [type=\"checkbox\"]').check(['checkbox1', 'checkbox3']).uncheck(['checkbox1', 'checkbox3']).should('not.be.checked'); // Ignore error checking prior to unchecking\n\n    cy.get('.action-check [disabled]').uncheck({\n      force: true\n    }).should('not.be.checked');\n  });","file":"examples/actions.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":".select() - select an option in a <select> element","suites":[],"updatePoint":{"line":125,"column":56,"index":6217},"line":125,"code":"  it('.select() - select an option in a <select> element', () => {\n    // https://on.cypress.io/select\n    // at first, no option should be selected\n    cy.get('.action-select').should('have.value', '--Select a fruit--'); // Select option(s) with matching text content\n\n    cy.get('.action-select').select('apples'); // confirm the apples were selected\n    // note that each value starts with \"fr-\" in our HTML\n\n    cy.get('.action-select').should('have.value', 'fr-apples');\n    cy.get('.action-select-multiple').select(['apples', 'oranges', 'bananas']) // when getting multiple values, invoke \"val\" method first\n    .invoke('val').should('deep.equal', ['fr-apples', 'fr-oranges', 'fr-bananas']); // Select option(s) with matching value\n\n    cy.get('.action-select').select('fr-bananas') // can attach an assertion right away to the element\n    .should('have.value', 'fr-bananas');\n    cy.get('.action-select-multiple').select(['fr-apples', 'fr-oranges', 'fr-bananas']).invoke('val').should('deep.equal', ['fr-apples', 'fr-oranges', 'fr-bananas']); // assert the selected values include oranges\n\n    cy.get('.action-select-multiple').invoke('val').should('include', 'fr-oranges');\n  });","file":"examples/actions.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":".scrollIntoView() - scroll an element into view","suites":[],"updatePoint":{"line":143,"column":53,"index":7402},"line":143,"code":"  it('.scrollIntoView() - scroll an element into view', () => {\n    // https://on.cypress.io/scrollintoview\n    // normally all of these buttons are hidden,\n    // because they're not within\n    // the viewable area of their parent\n    // (we need to scroll to see them)\n    cy.get('#scroll-horizontal button').should('not.be.visible'); // scroll the button into view, as if the user had scrolled\n\n    cy.get('#scroll-horizontal button').scrollIntoView().should('be.visible');\n    cy.get('#scroll-vertical button').should('not.be.visible'); // Cypress handles the scroll direction needed\n\n    cy.get('#scroll-vertical button').scrollIntoView().should('be.visible');\n    cy.get('#scroll-both button').should('not.be.visible'); // Cypress knows to scroll to the right and down\n\n    cy.get('#scroll-both button').scrollIntoView().should('be.visible');\n  });","file":"examples/actions.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":".trigger() - trigger an event on a DOM element","suites":[],"updatePoint":{"line":159,"column":52,"index":8256},"line":159,"code":"  it('.trigger() - trigger an event on a DOM element', () => {\n    // https://on.cypress.io/trigger\n    // To interact with a range input (slider)\n    // we need to set its value & trigger the\n    // event to signal it changed\n    // Here, we invoke jQuery's val() method to set\n    // the value and trigger the 'change' event\n    cy.get('.trigger-input-range').invoke('val', 25).trigger('change').get('input[type=range]').siblings('p').should('have.text', '25');\n  });","file":"examples/actions.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"cy.scrollTo() - scroll the window or element to a position","suites":[],"updatePoint":{"line":168,"column":64,"index":8738},"line":168,"code":"  it('cy.scrollTo() - scroll the window or element to a position', () => {\n    // https://on.cypress.io/scrollTo\n    // You can scroll to 9 specific positions of an element:\n    //  -----------------------------------\n    // | topLeft        top       topRight |\n    // |                                   |\n    // |                                   |\n    // |                                   |\n    // | left          center        right |\n    // |                                   |\n    // |                                   |\n    // |                                   |\n    // | bottomLeft   bottom   bottomRight |\n    //  -----------------------------------\n    // if you chain .scrollTo() off of cy, we will\n    // scroll the entire window\n    cy.scrollTo('bottom');\n    cy.get('#scrollable-horizontal').scrollTo('right'); // or you can scroll to a specific coordinate:\n    // (x axis, y axis) in pixels\n\n    cy.get('#scrollable-vertical').scrollTo(250, 250); // or you can scroll to a specific percentage\n    // of the (width, height) of the element\n\n    cy.get('#scrollable-both').scrollTo('75%', '25%'); // control the easing of the scroll (default is 'swing')\n\n    cy.get('#scrollable-vertical').scrollTo('center', {\n      easing: 'linear'\n    }); // control the duration of the scroll (in ms)\n\n    cy.get('#scrollable-both').scrollTo('center', {\n      duration: 2000\n    });\n  });","file":"examples/actions.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":".as() - alias a DOM element for later use","suites":[],"updatePoint":{"line":6,"column":47,"index":199},"line":6,"code":"  it('.as() - alias a DOM element for later use', () => {\n    // https://on.cypress.io/as\n    // Alias a DOM element for use later\n    // We don't have to traverse to the element\n    // later in our code, we reference it with @\n    cy.get('.as-table').find('tbody>tr').first().find('td').first().find('button').as('firstBtn'); // when we reference the alias, we place an\n    // @ in front of its name\n\n    cy.get('@firstBtn').click();\n    cy.get('@firstBtn').should('have.class', 'btn-success').and('contain', 'Changed');\n  });","file":"examples/aliasing.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":".as() - alias a route for later use","suites":[],"updatePoint":{"line":17,"column":41,"index":721},"line":17,"code":"  it('.as() - alias a route for later use', () => {\n    // Alias the route to wait for its response\n    cy.server();\n    cy.route('GET', 'comments/*').as('getComment'); // we have code that gets a comment when\n    // the button is clicked in scripts.js\n\n    cy.get('.network-btn').click(); // https://on.cypress.io/wait\n\n    cy.wait('@getComment').its('status').should('eq', 200);\n  });","file":"examples/aliasing.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":".should() - make an assertion about the current subject","suites":["Implicit Assertions"],"updatePoint":{"line":7,"column":63,"index":261},"line":7,"code":"    it('.should() - make an assertion about the current subject', () => {\n      // https://on.cypress.io/should\n      cy.get('.assertion-table').find('tbody tr:last').should('have.class', 'success').find('td').first() // checking the text of the <td> element in various ways\n      .should('have.text', 'Column content').should('contain', 'Column content').should('have.html', 'Column content') // chai-jquery uses \"is()\" to check if element matches selector\n      .should('match', 'td') // to match text content against a regular expression\n      // first need to invoke jQuery method text()\n      // and then match using regular expression\n      .invoke('text').should('match', /column content/i); // a better way to check element's text content against a regular expression\n      // is to use \"cy.contains\"\n      // https://on.cypress.io/contains\n\n      cy.get('.assertion-table').find('tbody tr:last') // finds first <td> element with text content matching regular expression\n      .contains('td', /column content/i).should('be.visible'); // for more information about asserting element's text\n      // see https://on.cypress.io/using-cypress-faq#How-do-I-get-an-element’s-text-contents\n    });","file":"examples/assertions.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":".and() - chain multiple assertions together","suites":["Implicit Assertions"],"updatePoint":{"line":22,"column":51,"index":1447},"line":22,"code":"    it('.and() - chain multiple assertions together', () => {\n      // https://on.cypress.io/and\n      cy.get('.assertions-link').should('have.class', 'active').and('have.attr', 'href').and('include', 'cypress.io');\n    });","file":"examples/assertions.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"expect - make an assertion about a specified subject","suites":["Explicit Assertions"],"updatePoint":{"line":29,"column":60,"index":1768},"line":29,"code":"    it('expect - make an assertion about a specified subject', () => {\n      // We can use Chai's BDD style assertions\n      expect(true).to.be.true;\n      const o = {\n        foo: 'bar'\n      };\n      expect(o).to.equal(o);\n      expect(o).to.deep.equal({\n        foo: 'bar'\n      }); // matching text using regular expression\n\n      expect('FooBar').to.match(/bar$/i);\n    });","file":"examples/assertions.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"pass your own callback function to should()","suites":["Explicit Assertions"],"updatePoint":{"line":42,"column":51,"index":2138},"line":42,"code":"    it('pass your own callback function to should()', () => {\n      // Pass a function to should that can have any number\n      // of explicit assertions within it.\n      // The \".should(cb)\" function will be retried\n      // automatically until it passes all your explicit assertions or times out.\n      cy.get('.assertions-p').find('p').should($p => {\n        // https://on.cypress.io/$\n        // return an array of texts from all of the p's\n        // @ts-ignore TS6133 unused variable\n        const texts = $p.map((i, el) => Cypress.$(el).text()); // jquery map returns jquery object\n        // and .get() convert this to simple array\n\n        const paragraphs = texts.get(); // array should have length of 3\n\n        expect(paragraphs, 'has 3 paragraphs').to.have.length(3); // use second argument to expect(...) to provide clear\n        // message with each assertion\n\n        expect(paragraphs, 'has expected text in each paragraph').to.deep.eq(['Some text from first p', 'More text from second p', 'And even more text from third p']);\n      });\n    });","file":"examples/assertions.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"finds element by class name regex","suites":["Explicit Assertions"],"updatePoint":{"line":62,"column":41,"index":3190},"line":62,"code":"    it('finds element by class name regex', () => {\n      cy.get('.docs-header').find('div') // .should(cb) callback function will be retried\n      .should($div => {\n        expect($div).to.have.length(1);\n        const className = $div[0].className;\n        expect(className).to.match(/heading-/);\n      }) // .then(cb) callback is not retried,\n      // it either passes or fails\n      .then($div => {\n        expect($div, 'text content').to.have.text('Introduction');\n      });\n    });","file":"examples/assertions.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"can throw any error","suites":["Explicit Assertions"],"updatePoint":{"line":74,"column":27,"index":3664},"line":74,"code":"    it('can throw any error', () => {\n      cy.get('.docs-header').find('div').should($div => {\n        if ($div.length !== 1) {\n          // you can throw your own errors\n          throw new Error('Did not find 1 element');\n        }\n\n        const className = $div[0].className;\n\n        if (!className.match(/heading-/)) {\n          throw new Error(`Could not find class \"heading-\" in ${className}`);\n        }\n      });\n    });","file":"examples/assertions.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"matches unknown text between two elements","suites":["Explicit Assertions"],"updatePoint":{"line":88,"column":49,"index":4118},"line":88,"code":"    it('matches unknown text between two elements', () => {\n      /**\n       * Text from the first element.\n       * @type {string}\n       */\n      let text;\n      /**\n       * Normalizes passed text,\n       * useful before comparing text with spaces and different capitalization.\n       * @param {string} s Text to normalize\n       */\n\n      const normalizeText = s => s.replace(/\\s/g, '').toLowerCase();\n\n      cy.get('.two-elements').find('.first').then($first => {\n        // save text from the first element\n        text = normalizeText($first.text());\n      });\n      cy.get('.two-elements').find('.second').should($div => {\n        // we can massage text before comparing\n        const secondText = normalizeText($div.text());\n        expect(secondText, 'second text').to.equal(text);\n      });\n    });","file":"examples/assertions.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"assert - assert shape of an object","suites":["Explicit Assertions"],"updatePoint":{"line":112,"column":42,"index":4921},"line":112,"code":"    it('assert - assert shape of an object', () => {\n      const person = {\n        name: 'Joe',\n        age: 20\n      };\n      assert.isObject(person, 'value is object');\n    });","file":"examples/assertions.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":".each() - iterate over an array of elements","suites":[],"updatePoint":{"line":6,"column":49,"index":205},"line":6,"code":"  it('.each() - iterate over an array of elements', () => {\n    // https://on.cypress.io/each\n    cy.get('.connectors-each-ul>li').each(($el, index, $list) => {\n      console.log($el, index, $list);\n    });\n  });","file":"examples/connectors.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":".its() - get properties on the current subject","suites":[],"updatePoint":{"line":12,"column":52,"index":421},"line":12,"code":"  it('.its() - get properties on the current subject', () => {\n    // https://on.cypress.io/its\n    cy.get('.connectors-its-ul>li') // calls the 'length' property yielding that value\n    .its('length').should('be.gt', 2);\n  });","file":"examples/connectors.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":".invoke() - invoke a function on the current subject","suites":[],"updatePoint":{"line":17,"column":58,"index":655},"line":17,"code":"  it('.invoke() - invoke a function on the current subject', () => {\n    // our div is hidden in our script.js\n    // $('.connectors-div').hide()\n    // https://on.cypress.io/invoke\n    cy.get('.connectors-div').should('be.hidden') // call the jquery method 'show' on the 'div.container'\n    .invoke('show').should('be.visible');\n  });","file":"examples/connectors.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":".spread() - spread an array as individual args to callback function","suites":[],"updatePoint":{"line":24,"column":73,"index":1006},"line":24,"code":"  it('.spread() - spread an array as individual args to callback function', () => {\n    // https://on.cypress.io/spread\n    const arr = ['foo', 'bar', 'baz'];\n    cy.wrap(arr).spread((foo, bar, baz) => {\n      expect(foo).to.eq('foo');\n      expect(bar).to.eq('bar');\n      expect(baz).to.eq('baz');\n    });\n  });","file":"examples/connectors.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"invokes a callback function with the current subject","suites":[".then()"],"updatePoint":{"line":34,"column":60,"index":1337},"line":34,"code":"    it('invokes a callback function with the current subject', () => {\n      // https://on.cypress.io/then\n      cy.get('.connectors-list > li').then($lis => {\n        expect($lis, '3 items').to.have.length(3);\n        expect($lis.eq(0), 'first item').to.contain('Walk the dog');\n        expect($lis.eq(1), 'second item').to.contain('Feed the cat');\n        expect($lis.eq(2), 'third item').to.contain('Write JavaScript');\n      });\n    });","file":"examples/connectors.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"yields the returned value to the next command","suites":[".then()"],"updatePoint":{"line":43,"column":53,"index":1771},"line":43,"code":"    it('yields the returned value to the next command', () => {\n      cy.wrap(1).then(num => {\n        expect(num).to.equal(1);\n        return 2;\n      }).then(num => {\n        expect(num).to.equal(2);\n      });\n    });","file":"examples/connectors.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"yields the original subject without return","suites":[".then()"],"updatePoint":{"line":51,"column":50,"index":1988},"line":51,"code":"    it('yields the original subject without return', () => {\n      cy.wrap(1).then(num => {\n        expect(num).to.equal(1); // note that nothing is returned from this callback\n      }).then(num => {\n        // this callback receives the original unchanged value 1\n        expect(num).to.equal(1);\n      });\n    });","file":"examples/connectors.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"yields the value yielded by the last Cypress command inside","suites":[".then()"],"updatePoint":{"line":59,"column":67,"index":2321},"line":59,"code":"    it('yields the value yielded by the last Cypress command inside', () => {\n      cy.wrap(1).then(num => {\n        expect(num).to.equal(1); // note how we run a Cypress command\n        // the result yielded by this Cypress command\n        // will be passed to the second \".then\"\n\n        cy.wrap(2);\n      }).then(num => {\n        // this callback receives the value yielded by \"cy.wrap(2)\"\n        expect(num).to.equal(2);\n      });\n    });","file":"examples/connectors.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"cy.getCookie() - get a browser cookie","suites":[],"updatePoint":{"line":10,"column":43,"index":356},"line":10,"code":"  it('cy.getCookie() - get a browser cookie', () => {\n    // https://on.cypress.io/getcookie\n    cy.get('#getCookie .set-a-cookie').click(); // cy.getCookie() yields a cookie object\n\n    cy.getCookie('token').should('have.property', 'value', '123ABC');\n  });","file":"examples/cookies.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"cy.getCookies() - get browser cookies","suites":[],"updatePoint":{"line":16,"column":43,"index":615},"line":16,"code":"  it('cy.getCookies() - get browser cookies', () => {\n    // https://on.cypress.io/getcookies\n    cy.getCookies().should('be.empty');\n    cy.get('#getCookies .set-a-cookie').click(); // cy.getCookies() yields an array of cookies\n\n    cy.getCookies().should('have.length', 1).should(cookies => {\n      // each cookie has these properties\n      expect(cookies[0]).to.have.property('name', 'token');\n      expect(cookies[0]).to.have.property('value', '123ABC');\n      expect(cookies[0]).to.have.property('httpOnly', false);\n      expect(cookies[0]).to.have.property('secure', false);\n      expect(cookies[0]).to.have.property('domain');\n      expect(cookies[0]).to.have.property('path');\n    });\n  });","file":"examples/cookies.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"cy.setCookie() - set a browser cookie","suites":[],"updatePoint":{"line":31,"column":43,"index":1314},"line":31,"code":"  it('cy.setCookie() - set a browser cookie', () => {\n    // https://on.cypress.io/setcookie\n    cy.getCookies().should('be.empty');\n    cy.setCookie('foo', 'bar'); // cy.getCookie() yields a cookie object\n\n    cy.getCookie('foo').should('have.property', 'value', 'bar');\n  });","file":"examples/cookies.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"cy.clearCookie() - clear a browser cookie","suites":[],"updatePoint":{"line":38,"column":47,"index":1596},"line":38,"code":"  it('cy.clearCookie() - clear a browser cookie', () => {\n    // https://on.cypress.io/clearcookie\n    cy.getCookie('token').should('be.null');\n    cy.get('#clearCookie .set-a-cookie').click();\n    cy.getCookie('token').should('have.property', 'value', '123ABC'); // cy.clearCookies() yields null\n\n    cy.clearCookie('token').should('be.null');\n    cy.getCookie('token').should('be.null');\n  });","file":"examples/cookies.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"cy.clearCookies() - clear browser cookies","suites":[],"updatePoint":{"line":47,"column":47,"index":1992},"line":47,"code":"  it('cy.clearCookies() - clear browser cookies', () => {\n    // https://on.cypress.io/clearcookies\n    cy.getCookies().should('be.empty');\n    cy.get('#clearCookies .set-a-cookie').click();\n    cy.getCookies().should('have.length', 1); // cy.clearCookies() yields null\n\n    cy.clearCookies();\n    cy.getCookies().should('be.empty');\n  });","file":"examples/cookies.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":".add() - create a custom command","suites":[],"updatePoint":{"line":7,"column":38,"index":234},"line":7,"code":"  it('.add() - create a custom command', () => {\n    Cypress.Commands.add('console', {\n      prevSubject: true\n    }, (subject, method) => {\n      // the previous subject is automatically received\n      // and the commands arguments are shifted\n      // allow us to change the console method used\n      method = method || 'log'; // log the subject to the console\n      // @ts-ignore TS7017\n\n      console[method]('The subject is', subject); // whatever we return becomes the new subject\n      // we don't want to change the subject so\n      // we return whatever was passed in\n\n      return subject;\n    }); // @ts-ignore TS2339\n\n    cy.get('button').console('info').then($button => {// subject is still $button\n    });\n  });","file":"examples/cypress_api.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":".debug() - enable or disable debugging","suites":[],"updatePoint":{"line":33,"column":44,"index":1122},"line":33,"code":"  it('.debug() - enable or disable debugging', () => {\n    Cypress.Cookies.debug(true); // Cypress will now log in the console when\n    // cookies are set or cleared\n\n    cy.setCookie('fakeCookie', '123ABC');\n    cy.clearCookie('fakeCookie');\n    cy.setCookie('fakeCookie', '123ABC');\n    cy.clearCookie('fakeCookie');\n    cy.setCookie('fakeCookie', '123ABC');\n  });","file":"examples/cypress_api.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":".preserveOnce() - preserve cookies by key","suites":[],"updatePoint":{"line":43,"column":47,"index":1492},"line":43,"code":"  it('.preserveOnce() - preserve cookies by key', () => {\n    // normally cookies are reset after each test\n    cy.getCookie('fakeCookie').should('not.be.ok'); // preserving a cookie will not clear it when\n    // the next test starts\n\n    cy.setCookie('lastCookie', '789XYZ');\n    Cypress.Cookies.preserveOnce('lastCookie');\n  });","file":"examples/cypress_api.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":".defaults() - set defaults for all cookies","suites":[],"updatePoint":{"line":51,"column":48,"index":1824},"line":51,"code":"  it('.defaults() - set defaults for all cookies', () => {\n    // now any cookie with the name 'session_id' will\n    // not be cleared before each new test runs\n    Cypress.Cookies.defaults({\n      whitelist: 'session_id'\n    });\n  });","file":"examples/cypress_api.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":".defaults() - change default config of server","suites":[],"updatePoint":{"line":66,"column":51,"index":2304},"line":66,"code":"  it('.defaults() - change default config of server', () => {\n    Cypress.Server.defaults({\n      delay: 0,\n      force404: false\n    });\n  });","file":"examples/cypress_api.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"Get CPU architecture name of underlying OS","suites":[],"updatePoint":{"line":77,"column":48,"index":2564},"line":77,"code":"  it('Get CPU architecture name of underlying OS', () => {\n    // https://on.cypress.io/arch\n    expect(Cypress.arch).to.exist;\n  });","file":"examples/cypress_api.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"Get and set configuration options","suites":[],"updatePoint":{"line":86,"column":39,"index":2812},"line":86,"code":"  it('Get and set configuration options', () => {\n    // https://on.cypress.io/config\n    let myConfig = Cypress.config();\n    expect(myConfig).to.have.property('animationDistanceThreshold', 5);\n    expect(myConfig).to.have.property('baseUrl', null);\n    expect(myConfig).to.have.property('defaultCommandTimeout', 4000);\n    expect(myConfig).to.have.property('requestTimeout', 5000);\n    expect(myConfig).to.have.property('responseTimeout', 30000);\n    expect(myConfig).to.have.property('viewportHeight', 660);\n    expect(myConfig).to.have.property('viewportWidth', 1000);\n    expect(myConfig).to.have.property('pageLoadTimeout', 60000);\n    expect(myConfig).to.have.property('waitForAnimations', true);\n    expect(Cypress.config('pageLoadTimeout')).to.eq(60000); // this will change the config for the rest of your tests!\n\n    Cypress.config('pageLoadTimeout', 20000);\n    expect(Cypress.config('pageLoadTimeout')).to.eq(20000);\n    Cypress.config('pageLoadTimeout', 60000);\n  });","file":"examples/cypress_api.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":".isHidden() - determine if a DOM element is hidden","suites":[],"updatePoint":{"line":110,"column":56,"index":3959},"line":110,"code":"  it('.isHidden() - determine if a DOM element is hidden', () => {\n    let hiddenP = Cypress.$('.dom-p p.hidden').get(0);\n    let visibleP = Cypress.$('.dom-p p.visible').get(0); // our first paragraph has css class 'hidden'\n\n    expect(Cypress.dom.isHidden(hiddenP)).to.be.true;\n    expect(Cypress.dom.isHidden(visibleP)).to.be.false;\n  });","file":"examples/cypress_api.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"Get environment variables","suites":[],"updatePoint":{"line":124,"column":31,"index":4508},"line":124,"code":"  it('Get environment variables', () => {\n    // https://on.cypress.io/env\n    // set multiple environment variables\n    Cypress.env({\n      host: 'veronica.dev.local',\n      api_server: 'http://localhost:8888/v1/'\n    }); // get environment variable\n\n    expect(Cypress.env('host')).to.eq('veronica.dev.local'); // set environment variable\n\n    Cypress.env('api_server', 'http://localhost:8888/v2/');\n    expect(Cypress.env('api_server')).to.eq('http://localhost:8888/v2/'); // get all environment variable\n\n    expect(Cypress.env()).to.have.property('host', 'veronica.dev.local');\n    expect(Cypress.env()).to.have.property('api_server', 'http://localhost:8888/v2/');\n  });","file":"examples/cypress_api.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"Control what is printed to the Command Log","suites":[],"updatePoint":{"line":145,"column":48,"index":5319},"line":145,"code":"  it('Control what is printed to the Command Log', () => {// https://on.cypress.io/cypress-log\n  });","file":"examples/cypress_api.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"Get underlying OS name","suites":[],"updatePoint":{"line":152,"column":28,"index":5523},"line":152,"code":"  it('Get underlying OS name', () => {\n    // https://on.cypress.io/platform\n    expect(Cypress.platform).to.be.exist;\n  });","file":"examples/cypress_api.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"Get current version of Cypress being run","suites":[],"updatePoint":{"line":161,"column":46,"index":5788},"line":161,"code":"  it('Get current version of Cypress being run', () => {\n    // https://on.cypress.io/version\n    expect(Cypress.version).to.be.exist;\n  });","file":"examples/cypress_api.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"Get current spec information","suites":[],"updatePoint":{"line":170,"column":34,"index":6036},"line":170,"code":"  it('Get current spec information', () => {\n    // https://on.cypress.io/spec\n    // wrap the object so we can inspect it easily by clicking in the command log\n    cy.wrap(Cypress.spec).should('include.keys', ['name', 'relative', 'absolute']);\n  });","file":"examples/cypress_api.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"cy.fixture() - load a fixture","suites":[],"updatePoint":{"line":16,"column":35,"index":496},"line":16,"code":"  it('cy.fixture() - load a fixture', () => {\n    // https://on.cypress.io/fixture\n    // Instead of writing a response inline you can\n    // use a fixture file's content.\n    cy.server();\n    cy.fixture('example.json').as('comment'); // when application makes an Ajax request matching \"GET comments/*\"\n    // Cypress will intercept it and reply with object\n    // from the \"comment\" alias\n\n    cy.route('GET', 'comments/*', '@comment').as('getComment'); // we have code that gets a comment when\n    // the button is clicked in scripts.js\n\n    cy.get('.fixture-btn').click();\n    cy.wait('@getComment').its('responseBody').should('have.property', 'name').and('include', 'Using fixtures to represent data'); // you can also just write the fixture in the route\n\n    cy.route('GET', 'comments/*', 'fixture:example.json').as('getComment'); // we have code that gets a comment when\n    // the button is clicked in scripts.js\n\n    cy.get('.fixture-btn').click();\n    cy.wait('@getComment').its('responseBody').should('have.property', 'name').and('include', 'Using fixtures to represent data'); // or write fx to represent fixture\n    // by default it assumes it's .json\n\n    cy.route('GET', 'comments/*', 'fx:example').as('getComment'); // we have code that gets a comment when\n    // the button is clicked in scripts.js\n\n    cy.get('.fixture-btn').click();\n    cy.wait('@getComment').its('responseBody').should('have.property', 'name').and('include', 'Using fixtures to represent data');\n  });","file":"examples/files.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"cy.fixture() or require - load a fixture","suites":[],"updatePoint":{"line":44,"column":46,"index":1996},"line":44,"code":"  it('cy.fixture() or require - load a fixture', function () {\n    // we are inside the \"function () { ... }\"\n    // callback and can use test context object \"this\"\n    // \"this.example\" was loaded in \"beforeEach\" function callback\n    expect(this.example, 'fixture in the test context').to.deep.equal(requiredExample); // or use \"cy.wrap\" and \"should('deep.equal', ...)\" assertion\n    // @ts-ignore\n\n    cy.wrap(this.example, 'fixture vs require').should('deep.equal', requiredExample);\n  });","file":"examples/files.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"cy.readFile() - read file contents","suites":[],"updatePoint":{"line":53,"column":40,"index":2484},"line":53,"code":"  it('cy.readFile() - read file contents', () => {\n    // https://on.cypress.io/readfile\n    // You can read a file and yield its contents\n    // The filePath is relative to your project's root.\n    cy.readFile('cypress.json').then(json => {\n      expect(json).to.be.an('object');\n    });\n  });","file":"examples/files.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"cy.writeFile() - write to a file","suites":[],"updatePoint":{"line":61,"column":38,"index":2777},"line":61,"code":"  it('cy.writeFile() - write to a file', () => {\n    // https://on.cypress.io/writefile\n    // You can write to a file\n    // Use a response from a request to automatically\n    // generate a fixture file for use later\n    cy.request('https://jsonplaceholder.cypress.io/users').then(response => {\n      cy.writeFile('cypress/fixtures/users.json', response.body);\n    });\n    cy.fixture('users').should(users => {\n      expect(users[0].name).to.exist;\n    }); // JavaScript arrays and objects are stringified\n    // and formatted into text.\n\n    cy.writeFile('cypress/fixtures/profile.json', {\n      id: 8739,\n      name: 'Jane',\n      email: 'jane@example.com'\n    });\n    cy.fixture('profile').should(profile => {\n      expect(profile.name).to.eq('Jane');\n    });\n  });","file":"examples/files.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"cy.clearLocalStorage() - clear all data in local storage","suites":[],"updatePoint":{"line":9,"column":62,"index":383},"line":9,"code":"  it('cy.clearLocalStorage() - clear all data in local storage', () => {\n    // https://on.cypress.io/clearlocalstorage\n    cy.get('.ls-btn').click().should(() => {\n      expect(localStorage.getItem('prop1')).to.eq('red');\n      expect(localStorage.getItem('prop2')).to.eq('blue');\n      expect(localStorage.getItem('prop3')).to.eq('magenta');\n    }); // clearLocalStorage() yields the localStorage object\n\n    cy.clearLocalStorage().should(ls => {\n      expect(ls.getItem('prop1')).to.be.null;\n      expect(ls.getItem('prop2')).to.be.null;\n      expect(ls.getItem('prop3')).to.be.null;\n    }); // Clear key matching string in Local Storage\n\n    cy.get('.ls-btn').click().should(() => {\n      expect(localStorage.getItem('prop1')).to.eq('red');\n      expect(localStorage.getItem('prop2')).to.eq('blue');\n      expect(localStorage.getItem('prop3')).to.eq('magenta');\n    });\n    cy.clearLocalStorage('prop1').should(ls => {\n      expect(ls.getItem('prop1')).to.be.null;\n      expect(ls.getItem('prop2')).to.eq('blue');\n      expect(ls.getItem('prop3')).to.eq('magenta');\n    }); // Clear keys matching regex in Local Storage\n\n    cy.get('.ls-btn').click().should(() => {\n      expect(localStorage.getItem('prop1')).to.eq('red');\n      expect(localStorage.getItem('prop2')).to.eq('blue');\n      expect(localStorage.getItem('prop3')).to.eq('magenta');\n    });\n    cy.clearLocalStorage(/prop1|2/).should(ls => {\n      expect(ls.getItem('prop1')).to.be.null;\n      expect(ls.getItem('prop2')).to.be.null;\n      expect(ls.getItem('prop3')).to.eq('magenta');\n    });\n  });","file":"examples/local_storage.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"cy.hash() - get the current URL hash","suites":[],"updatePoint":{"line":6,"column":42,"index":194},"line":6,"code":"  it('cy.hash() - get the current URL hash', () => {\n    // https://on.cypress.io/hash\n    cy.hash().should('be.empty');\n  });","file":"examples/location.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"cy.location() - get window.location","suites":[],"updatePoint":{"line":10,"column":41,"index":320},"line":10,"code":"  it('cy.location() - get window.location', () => {\n    // https://on.cypress.io/location\n    cy.location().should(location => {\n      expect(location.hash).to.be.empty;\n      expect(location.href).to.eq('https://example.cypress.io/commands/location');\n      expect(location.host).to.eq('example.cypress.io');\n      expect(location.hostname).to.eq('example.cypress.io');\n      expect(location.origin).to.eq('https://example.cypress.io');\n      expect(location.pathname).to.eq('/commands/location');\n      expect(location.port).to.eq('');\n      expect(location.protocol).to.eq('https:');\n      expect(location.search).to.be.empty;\n    });\n  });","file":"examples/location.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"cy.url() - get the current URL","suites":[],"updatePoint":{"line":24,"column":36,"index":959},"line":24,"code":"  it('cy.url() - get the current URL', () => {\n    // https://on.cypress.io/url\n    cy.url().should('eq', 'https://example.cypress.io/commands/location');\n  });","file":"examples/location.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":".end() - end the command chain","suites":[],"updatePoint":{"line":6,"column":36,"index":180},"line":6,"code":"  it('.end() - end the command chain', () => {\n    // https://on.cypress.io/end\n    // cy.end is useful when you want to end a chain of commands\n    // and force Cypress to re-query from the root element\n    cy.get('.misc-table').within(() => {\n      // ends the current chain and yields null\n      cy.contains('Cheryl').click().end(); // queries the entire table again\n\n      cy.contains('Charles').click();\n    });\n  });","file":"examples/misc.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"cy.exec() - execute a system command","suites":[],"updatePoint":{"line":17,"column":42,"index":609},"line":17,"code":"  it('cy.exec() - execute a system command', () => {\n    // execute a system command.\n    // so you can take actions necessary for\n    // your test outside the scope of Cypress.\n    // https://on.cypress.io/exec\n    // we can use Cypress.platform string to\n    // select appropriate command\n    // https://on.cypress/io/platform\n    cy.log(`Platform ${Cypress.platform} architecture ${Cypress.arch}`); // on CircleCI Windows build machines we have a failure to run bash shell\n    // https://github.com/cypress-io/cypress/issues/5169\n    // so skip some of the tests by passing flag \"--env circle=true\"\n\n    const isCircleOnWindows = Cypress.platform === 'win32' && Cypress.env('circle');\n\n    if (isCircleOnWindows) {\n      return;\n    }\n\n    cy.exec('echo Jane Lane').its('stdout').should('contain', 'Jane Lane');\n\n    if (Cypress.platform === 'win32') {\n      cy.exec('print cypress.json').its('stderr').should('be.empty');\n    } else {\n      cy.exec('cat cypress.json').its('stderr').should('be.empty');\n      cy.exec('pwd').its('code').should('eq', 0);\n    }\n  });","file":"examples/misc.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"cy.focused() - get the DOM element that has focus","suites":[],"updatePoint":{"line":44,"column":55,"index":1691},"line":44,"code":"  it('cy.focused() - get the DOM element that has focus', () => {\n    // https://on.cypress.io/focused\n    cy.get('.misc-form').find('#name').click();\n    cy.focused().should('have.id', 'name');\n    cy.get('.misc-form').find('#description').click();\n    cy.focused().should('have.id', 'description');\n  });","file":"examples/misc.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"cy.screenshot() - take a screenshot","suites":[],"updatePoint":{"line":52,"column":43,"index":2032},"line":52,"code":"    it('cy.screenshot() - take a screenshot', () => {\n      // https://on.cypress.io/screenshot\n      cy.screenshot('my-image');\n    });","file":"examples/misc.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"Cypress.Screenshot.defaults() - change default config of screenshots","suites":[],"updatePoint":{"line":56,"column":76,"index":2202},"line":56,"code":"    it('Cypress.Screenshot.defaults() - change default config of screenshots', function () {\n      Cypress.Screenshot.defaults({\n        blackout: ['.foo'],\n        capture: 'viewport',\n        clip: {\n          x: 0,\n          y: 0,\n          width: 200,\n          height: 200\n        },\n        scale: false,\n        disableTimersAndAnimations: true,\n        screenshotOnRunFailure: true,\n\n        beforeScreenshot() {},\n\n        afterScreenshot() {}\n\n      });\n    });","file":"examples/misc.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"cy.wrap() - wrap an object","suites":[],"updatePoint":{"line":77,"column":32,"index":2636},"line":77,"code":"  it('cy.wrap() - wrap an object', () => {\n    // https://on.cypress.io/wrap\n    cy.wrap({\n      foo: 'bar'\n    }).should('have.property', 'foo').and('include', 'bar');\n  });","file":"examples/misc.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"cy.go() - go back or forward in the browser's history","suites":[],"updatePoint":{"line":8,"column":59,"index":312},"line":8,"code":"  it(\"cy.go() - go back or forward in the browser's history\", () => {\n    // https://on.cypress.io/go\n    cy.location('pathname').should('include', 'navigation');\n    cy.go('back');\n    cy.location('pathname').should('not.include', 'navigation');\n    cy.go('forward');\n    cy.location('pathname').should('include', 'navigation'); // clicking back\n\n    cy.go(-1);\n    cy.location('pathname').should('not.include', 'navigation'); // clicking forward\n\n    cy.go(1);\n    cy.location('pathname').should('include', 'navigation');\n  });","file":"examples/navigation.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"cy.reload() - reload the page","suites":[],"updatePoint":{"line":22,"column":35,"index":818},"line":22,"code":"  it('cy.reload() - reload the page', () => {\n    // https://on.cypress.io/reload\n    cy.reload(); // reload the page without using the cache\n\n    cy.reload(true);\n  });","file":"examples/navigation.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"cy.visit() - visit a remote url","suites":[],"updatePoint":{"line":28,"column":37,"index":990},"line":28,"code":"  it('cy.visit() - visit a remote url', () => {\n    // https://on.cypress.io/visit\n    // Visit any sub-domain of your current domain\n    // Pass options to the visit\n    cy.visit('https://example.cypress.io/commands/navigation', {\n      timeout: 50000,\n\n      // increase total time for the visit to resolve\n      onBeforeLoad(contentWindow) {\n        // contentWindow is the remote page's window object\n        expect(typeof contentWindow === 'object').to.be.true;\n      },\n\n      onLoad(contentWindow) {\n        // contentWindow is the remote page's window object\n        expect(typeof contentWindow === 'object').to.be.true;\n      }\n\n    });\n  });","file":"examples/navigation.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"cy.server() - control behavior of network requests and responses","suites":[],"updatePoint":{"line":7,"column":70,"index":281},"line":7,"code":"  it('cy.server() - control behavior of network requests and responses', () => {\n    // https://on.cypress.io/server\n    cy.server().should(server => {\n      // the default options on server\n      // you can override any of these options\n      expect(server.delay).to.eq(0);\n      expect(server.method).to.eq('GET');\n      expect(server.status).to.eq(200);\n      expect(server.headers).to.be.null;\n      expect(server.response).to.be.null;\n      expect(server.onRequest).to.be.undefined;\n      expect(server.onResponse).to.be.undefined;\n      expect(server.onAbort).to.be.undefined; // These options control the server behavior\n      // affecting all requests\n      // pass false to disable existing route stubs\n\n      expect(server.enable).to.be.true; // forces requests that don't match your routes to 404\n\n      expect(server.force404).to.be.false; // whitelists requests from ever being logged or stubbed\n\n      expect(server.whitelist).to.be.a('function');\n    });\n    cy.server({\n      method: 'POST',\n      delay: 1000,\n      status: 422,\n      response: {}\n    }); // any route commands will now inherit the above options\n    // from the server. anything we pass specifically\n    // to route will override the defaults though.\n  });","file":"examples/network_requests.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"cy.request() - make an XHR request","suites":[],"updatePoint":{"line":38,"column":40,"index":1492},"line":38,"code":"  it('cy.request() - make an XHR request', () => {\n    // https://on.cypress.io/request\n    cy.request('https://jsonplaceholder.cypress.io/comments').should(response => {\n      expect(response.status).to.eq(200);\n      expect(response.body).to.have.length(500);\n      expect(response).to.have.property('headers');\n      expect(response).to.have.property('duration');\n    });\n  });","file":"examples/network_requests.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"cy.request() - verify response using BDD syntax","suites":[],"updatePoint":{"line":47,"column":53,"index":1886},"line":47,"code":"  it('cy.request() - verify response using BDD syntax', () => {\n    cy.request('https://jsonplaceholder.cypress.io/comments').then(response => {\n      // https://on.cypress.io/assertions\n      expect(response).property('status').to.equal(200);\n      expect(response).property('body').to.have.length(500);\n      expect(response).to.include.keys('headers', 'duration');\n    });\n  });","file":"examples/network_requests.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"cy.request() with query parameters","suites":[],"updatePoint":{"line":55,"column":40,"index":2255},"line":55,"code":"  it('cy.request() with query parameters', () => {\n    // will execute request\n    // https://jsonplaceholder.cypress.io/comments?postId=1&id=3\n    cy.request({\n      url: 'https://jsonplaceholder.cypress.io/comments',\n      qs: {\n        postId: 1,\n        id: 3\n      }\n    }).its('body').should('be.an', 'array').and('have.length', 1).its('0') // yields first element of the array\n    .should('contain', {\n      postId: 1,\n      id: 3\n    });\n  });","file":"examples/network_requests.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"cy.request() - pass result to the second request","suites":[],"updatePoint":{"line":70,"column":54,"index":2721},"line":70,"code":"  it('cy.request() - pass result to the second request', () => {\n    // first, let's find out the userId of the first user we have\n    cy.request('https://jsonplaceholder.cypress.io/users?_limit=1').its('body') // yields the response object\n    .its('0') // yields the first element of the returned list\n    // the above two commands its('body').its('0')\n    // can be written as its('body.0')\n    // if you do not care about TypeScript checks\n    .then(user => {\n      expect(user).property('id').to.be.a('number'); // make a new post on behalf of the user\n\n      cy.request('POST', 'https://jsonplaceholder.cypress.io/posts', {\n        userId: user.id,\n        title: 'Cypress Test Runner',\n        body: 'Fast, easy and reliable testing for anything that runs in a browser.'\n      });\n    }) // note that the value here is the returned value of the 2nd request\n    // which is the new post object\n    .then(response => {\n      expect(response).property('status').to.equal(201); // new entity created\n\n      expect(response).property('body').to.contain({\n        id: 101,\n        // there are already 100 posts, so new entity gets id 101\n        title: 'Cypress Test Runner'\n      }); // we don't know the user id here - since it was in above closure\n      // so in this test just confirm that the property is there\n\n      expect(response.body).property('userId').to.be.a('number');\n    });\n  });","file":"examples/network_requests.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"cy.request() - save response in the shared test context","suites":[],"updatePoint":{"line":100,"column":61,"index":4127},"line":100,"code":"  it('cy.request() - save response in the shared test context', () => {\n    // https://on.cypress.io/variables-and-aliases\n    cy.request('https://jsonplaceholder.cypress.io/users?_limit=1').its('body').its('0') // yields the first element of the returned list\n    .as('user') // saves the object in the test context\n    .then(function () {\n      // NOTE 👀\n      //  By the time this callback runs the \"as('user')\" command\n      //  has saved the user object in the test context.\n      //  To access the test context we need to use\n      //  the \"function () { ... }\" callback form,\n      //  otherwise \"this\" points at a wrong or undefined object!\n      cy.request('POST', 'https://jsonplaceholder.cypress.io/posts', {\n        userId: this.user.id,\n        title: 'Cypress Test Runner',\n        body: 'Fast, easy and reliable testing for anything that runs in a browser.'\n      }).its('body').as('post'); // save the new post from the response\n    }).then(function () {\n      // When this callback runs, both \"cy.request\" API commands have finished\n      // and the test context has \"user\" and \"post\" objects set.\n      // Let's verify them.\n      expect(this.post, 'post has the right user id').property('userId').to.equal(this.user.id);\n    });\n  });","file":"examples/network_requests.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"cy.route() - route responses to matching requests","suites":[],"updatePoint":{"line":123,"column":55,"index":5376},"line":123,"code":"  it('cy.route() - route responses to matching requests', () => {\n    // https://on.cypress.io/route\n    let message = 'whoa, this comment does not exist';\n    cy.server(); // Listen to GET to comments/1\n\n    cy.route('GET', 'comments/*').as('getComment'); // we have code that gets a comment when\n    // the button is clicked in scripts.js\n\n    cy.get('.network-btn').click(); // https://on.cypress.io/wait\n\n    cy.wait('@getComment').its('status').should('eq', 200); // Listen to POST to comments\n\n    cy.route('POST', '/comments').as('postComment'); // we have code that posts a comment when\n    // the button is clicked in scripts.js\n\n    cy.get('.network-post').click();\n    cy.wait('@postComment').should(xhr => {\n      expect(xhr.requestBody).to.include('email');\n      expect(xhr.requestHeaders).to.have.property('Content-Type');\n      expect(xhr.responseBody).to.have.property('name', 'Using POST in cy.route()');\n    }); // Stub a response to PUT comments/ ****\n\n    cy.route({\n      method: 'PUT',\n      url: 'comments/*',\n      status: 404,\n      response: {\n        error: message\n      },\n      delay: 500\n    }).as('putComment'); // we have code that puts a comment when\n    // the button is clicked in scripts.js\n\n    cy.get('.network-put').click();\n    cy.wait('@putComment'); // our 404 statusCode logic in scripts.js executed\n\n    cy.get('.network-put-comment').should('contain', message);\n  });","file":"examples/network_requests.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"cy.get() - query DOM elements","suites":[],"updatePoint":{"line":8,"column":35,"index":285},"line":8,"code":"  it('cy.get() - query DOM elements', () => {\n    // https://on.cypress.io/get\n    cy.get('#query-btn').should('contain', 'Button');\n    cy.get('.query-btn').should('contain', 'Button');\n    cy.get('#querying .well>button:first').should('contain', 'Button'); //              ↲\n    // Use CSS selectors just like jQuery\n\n    cy.get('[data-test-id=\"test-example\"]').should('have.class', 'example'); // 'cy.get()' yields jQuery object, you can get its attribute\n    // by invoking `.attr()` method\n\n    cy.get('[data-test-id=\"test-example\"]').invoke('attr', 'data-test-id').should('equal', 'test-example'); // or you can get element's CSS property\n\n    cy.get('[data-test-id=\"test-example\"]').invoke('css', 'position').should('equal', 'static'); // or use assertions directly during 'cy.get()'\n    // https://on.cypress.io/assertions\n\n    cy.get('[data-test-id=\"test-example\"]').should('have.attr', 'data-test-id', 'test-example').and('have.css', 'position', 'static');\n  });","file":"examples/querying.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"cy.contains() - query DOM elements with matching content","suites":[],"updatePoint":{"line":25,"column":62,"index":1285},"line":25,"code":"  it('cy.contains() - query DOM elements with matching content', () => {\n    // https://on.cypress.io/contains\n    cy.get('.query-list').contains('bananas').should('have.class', 'third'); // we can pass a regexp to `.contains()`\n\n    cy.get('.query-list').contains(/^b\\w+/).should('have.class', 'third');\n    cy.get('.query-list').contains('apples').should('have.class', 'first'); // passing a selector to contains will\n    // yield the selector containing the text\n\n    cy.get('#querying').contains('ul', 'oranges').should('have.class', 'query-list');\n    cy.get('.query-button').contains('Save Form').should('have.class', 'btn');\n  });","file":"examples/querying.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":".within() - query DOM elements within a specific element","suites":[],"updatePoint":{"line":36,"column":62,"index":1923},"line":36,"code":"  it('.within() - query DOM elements within a specific element', () => {\n    // https://on.cypress.io/within\n    cy.get('.query-form').within(() => {\n      cy.get('input:first').should('have.attr', 'placeholder', 'Email');\n      cy.get('input:last').should('have.attr', 'placeholder', 'Password');\n    });\n  });","file":"examples/querying.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"cy.root() - query the root DOM element","suites":[],"updatePoint":{"line":43,"column":44,"index":2217},"line":43,"code":"  it('cy.root() - query the root DOM element', () => {\n    // https://on.cypress.io/root\n    // By default, root is the document\n    cy.root().should('match', 'html');\n    cy.get('.query-ul').within(() => {\n      // In this within, the root is now the ul DOM element\n      cy.root().should('have.class', 'query-ul');\n    });\n  });","file":"examples/querying.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"best practices - selecting elements","suites":[],"updatePoint":{"line":52,"column":41,"index":2545},"line":52,"code":"  it('best practices - selecting elements', () => {\n    // https://on.cypress.io/best-practices#Selecting-Elements\n    cy.get('[data-cy=best-practices-selecting-elements]').within(() => {\n      // Worst - too generic, no context\n      cy.get('button').click(); // Bad. Coupled to styling. Highly subject to change.\n\n      cy.get('.btn.btn-large').click(); // Average. Coupled to the `name` attribute which has HTML semantics.\n\n      cy.get('[name=submission]').click(); // Better. But still coupled to styling or JS event listeners.\n\n      cy.get('#main').click(); // Slightly better. Uses an ID but also ensures the element\n      // has an ARIA role attribute\n\n      cy.get('#main[role=button]').click(); // Much better. But still coupled to text content that may change.\n\n      cy.contains('Submit').click(); // Best. Insulated from all changes.\n\n      cy.get('[data-cy=submit]').click();\n    });\n  });","file":"examples/querying.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"cy.spy() - wrap a method in a spy","suites":[],"updatePoint":{"line":3,"column":39,"index":117},"line":3,"code":"  it('cy.spy() - wrap a method in a spy', () => {\n    // https://on.cypress.io/spy\n    cy.visit('https://example.cypress.io/commands/spies-stubs-clocks');\n    const obj = {\n      foo() {}\n\n    };\n    const spy = cy.spy(obj, 'foo').as('anyArgs');\n    obj.foo();\n    expect(spy).to.be.called;\n  });","file":"examples/spies_stubs_clocks.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"cy.spy() retries until assertions pass","suites":[],"updatePoint":{"line":14,"column":44,"index":419},"line":14,"code":"  it('cy.spy() retries until assertions pass', () => {\n    cy.visit('https://example.cypress.io/commands/spies-stubs-clocks');\n    const obj = {\n      /**\n       * Prints the argument passed\n       * @param x {any}\n       */\n      foo(x) {\n        console.log('obj.foo called with', x);\n      }\n\n    };\n    cy.spy(obj, 'foo').as('foo');\n    setTimeout(() => {\n      obj.foo('first');\n    }, 500);\n    setTimeout(() => {\n      obj.foo('second');\n    }, 2500);\n    cy.get('@foo').should('have.been.calledTwice');\n  });","file":"examples/spies_stubs_clocks.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"cy.stub() - create a stub and/or replace a function with stub","suites":[],"updatePoint":{"line":35,"column":67,"index":959},"line":35,"code":"  it('cy.stub() - create a stub and/or replace a function with stub', () => {\n    // https://on.cypress.io/stub\n    cy.visit('https://example.cypress.io/commands/spies-stubs-clocks');\n    const obj = {\n      /**\n       * prints both arguments to the console\n       * @param a {string}\n       * @param b {string}\n       */\n      foo(a, b) {\n        console.log('a', a, 'b', b);\n      }\n\n    };\n    const stub = cy.stub(obj, 'foo').as('foo');\n    obj.foo('foo', 'bar');\n    expect(stub).to.be.called;\n  });","file":"examples/spies_stubs_clocks.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"cy.clock() - control time in the browser","suites":[],"updatePoint":{"line":53,"column":46,"index":1443},"line":53,"code":"  it('cy.clock() - control time in the browser', () => {\n    // https://on.cypress.io/clock\n    // create the date in UTC so its always the same\n    // no matter what local timezone the browser is running in\n    const now = new Date(Date.UTC(2017, 2, 14)).getTime();\n    cy.clock(now);\n    cy.visit('https://example.cypress.io/commands/spies-stubs-clocks');\n    cy.get('#clock-div').click().should('have.text', '1489449600');\n  });","file":"examples/spies_stubs_clocks.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"cy.tick() - move time in the browser","suites":[],"updatePoint":{"line":62,"column":42,"index":1871},"line":62,"code":"  it('cy.tick() - move time in the browser', () => {\n    // https://on.cypress.io/tick\n    // create the date in UTC so its always the same\n    // no matter what local timezone the browser is running in\n    const now = new Date(Date.UTC(2017, 2, 14)).getTime();\n    cy.clock(now);\n    cy.visit('https://example.cypress.io/commands/spies-stubs-clocks');\n    cy.get('#tick-div').click().should('have.text', '1489449600');\n    cy.tick(10000); // 10 seconds passed\n\n    cy.get('#tick-div').click().should('have.text', '1489449610');\n  });","file":"examples/spies_stubs_clocks.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":".children() - get child DOM elements","suites":[],"updatePoint":{"line":6,"column":42,"index":196},"line":6,"code":"  it('.children() - get child DOM elements', () => {\n    // https://on.cypress.io/children\n    cy.get('.traversal-breadcrumb').children('.active').should('contain', 'Data');\n  });","file":"examples/traversal.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":".closest() - get closest ancestor DOM element","suites":[],"updatePoint":{"line":10,"column":51,"index":385},"line":10,"code":"  it('.closest() - get closest ancestor DOM element', () => {\n    // https://on.cypress.io/closest\n    cy.get('.traversal-badge').closest('ul').should('have.class', 'list-group');\n  });","file":"examples/traversal.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":".eq() - get a DOM element at a specific index","suites":[],"updatePoint":{"line":14,"column":51,"index":571},"line":14,"code":"  it('.eq() - get a DOM element at a specific index', () => {\n    // https://on.cypress.io/eq\n    cy.get('.traversal-list>li').eq(1).should('contain', 'siamese');\n  });","file":"examples/traversal.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":".filter() - get DOM elements that match the selector","suites":[],"updatePoint":{"line":18,"column":58,"index":747},"line":18,"code":"  it('.filter() - get DOM elements that match the selector', () => {\n    // https://on.cypress.io/filter\n    cy.get('.traversal-nav>li').filter('.active').should('contain', 'About');\n  });","file":"examples/traversal.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":".find() - get descendant DOM elements of the selector","suites":[],"updatePoint":{"line":22,"column":59,"index":937},"line":22,"code":"  it('.find() - get descendant DOM elements of the selector', () => {\n    // https://on.cypress.io/find\n    cy.get('.traversal-pagination').find('li').find('a').should('have.length', 7);\n  });","file":"examples/traversal.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":".first() - get first DOM element","suites":[],"updatePoint":{"line":26,"column":38,"index":1109},"line":26,"code":"  it('.first() - get first DOM element', () => {\n    // https://on.cypress.io/first\n    cy.get('.traversal-table td').first().should('contain', '1');\n  });","file":"examples/traversal.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":".last() - get last DOM element","suites":[],"updatePoint":{"line":30,"column":36,"index":1263},"line":30,"code":"  it('.last() - get last DOM element', () => {\n    // https://on.cypress.io/last\n    cy.get('.traversal-buttons .btn').last().should('contain', 'Submit');\n  });","file":"examples/traversal.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":".next() - get next sibling DOM element","suites":[],"updatePoint":{"line":34,"column":44,"index":1432},"line":34,"code":"  it('.next() - get next sibling DOM element', () => {\n    // https://on.cypress.io/next\n    cy.get('.traversal-ul').contains('apples').next().should('contain', 'oranges');\n  });","file":"examples/traversal.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":".nextAll() - get all next sibling DOM elements","suites":[],"updatePoint":{"line":38,"column":52,"index":1619},"line":38,"code":"  it('.nextAll() - get all next sibling DOM elements', () => {\n    // https://on.cypress.io/nextall\n    cy.get('.traversal-next-all').contains('oranges').nextAll().should('have.length', 3);\n  });","file":"examples/traversal.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":".nextUntil() - get next sibling DOM elements until next el","suites":[],"updatePoint":{"line":42,"column":64,"index":1827},"line":42,"code":"  it('.nextUntil() - get next sibling DOM elements until next el', () => {\n    // https://on.cypress.io/nextuntil\n    cy.get('#veggies').nextUntil('#nuts').should('have.length', 3);\n  });","file":"examples/traversal.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":".not() - remove DOM elements from set of DOM elements","suites":[],"updatePoint":{"line":46,"column":59,"index":2010},"line":46,"code":"  it('.not() - remove DOM elements from set of DOM elements', () => {\n    // https://on.cypress.io/not\n    cy.get('.traversal-disabled .btn').not('[disabled]').should('not.contain', 'Disabled');\n  });","file":"examples/traversal.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":".parent() - get parent DOM element from DOM elements","suites":[],"updatePoint":{"line":50,"column":58,"index":2210},"line":50,"code":"  it('.parent() - get parent DOM element from DOM elements', () => {\n    // https://on.cypress.io/parent\n    cy.get('.traversal-mark').parent().should('contain', 'Morbi leo risus');\n  });","file":"examples/traversal.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":".parents() - get parent DOM elements from DOM elements","suites":[],"updatePoint":{"line":54,"column":60,"index":2400},"line":54,"code":"  it('.parents() - get parent DOM elements from DOM elements', () => {\n    // https://on.cypress.io/parents\n    cy.get('.traversal-cite').parents().should('match', 'blockquote');\n  });","file":"examples/traversal.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":".parentsUntil() - get parent DOM elements from DOM elements until el","suites":[],"updatePoint":{"line":58,"column":74,"index":2599},"line":58,"code":"  it('.parentsUntil() - get parent DOM elements from DOM elements until el', () => {\n    // https://on.cypress.io/parentsuntil\n    cy.get('.clothes-nav').find('.active').parentsUntil('.clothes-nav').should('have.length', 2);\n  });","file":"examples/traversal.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":".prev() - get previous sibling DOM element","suites":[],"updatePoint":{"line":62,"column":48,"index":2804},"line":62,"code":"  it('.prev() - get previous sibling DOM element', () => {\n    // https://on.cypress.io/prev\n    cy.get('.birds').find('.active').prev().should('contain', 'Lorikeets');\n  });","file":"examples/traversal.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":".prevAll() - get all previous sibling DOM elements","suites":[],"updatePoint":{"line":66,"column":56,"index":2987},"line":66,"code":"  it('.prevAll() - get all previous sibling DOM elements', () => {\n    // https://on.cypress.io/prevAll\n    cy.get('.fruits-list').find('.third').prevAll().should('have.length', 2);\n  });","file":"examples/traversal.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":".prevUntil() - get all previous sibling DOM elements until el","suites":[],"updatePoint":{"line":70,"column":67,"index":3186},"line":70,"code":"  it('.prevUntil() - get all previous sibling DOM elements until el', () => {\n    // https://on.cypress.io/prevUntil\n    cy.get('.foods-list').find('#nuts').prevUntil('#veggies').should('have.length', 3);\n  });","file":"examples/traversal.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":".siblings() - get all sibling DOM elements","suites":[],"updatePoint":{"line":74,"column":48,"index":3378},"line":74,"code":"  it('.siblings() - get all sibling DOM elements', () => {\n    // https://on.cypress.io/siblings\n    cy.get('.traversal-pills .active').siblings().should('have.length', 2);\n  });","file":"examples/traversal.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"Cypress._ - call a lodash method","suites":[],"updatePoint":{"line":6,"column":38,"index":183},"line":6,"code":"  it('Cypress._ - call a lodash method', () => {\n    // https://on.cypress.io/_\n    cy.request('https://jsonplaceholder.cypress.io/users').then(response => {\n      let ids = Cypress._.chain(response.body).map('id').take(3).value();\n\n      expect(ids).to.deep.eq([1, 2, 3]);\n    });\n  });","file":"examples/utilities.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"Cypress.$ - call a jQuery method","suites":[],"updatePoint":{"line":14,"column":38,"index":471},"line":14,"code":"  it('Cypress.$ - call a jQuery method', () => {\n    // https://on.cypress.io/$\n    let $li = Cypress.$('.utility-jquery li:first');\n    cy.wrap($li).should('not.have.class', 'active').click().should('have.class', 'active');\n  });","file":"examples/utilities.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"Cypress.Blob - blob utilities and base64 string conversion","suites":[],"updatePoint":{"line":19,"column":64,"index":728},"line":19,"code":"  it('Cypress.Blob - blob utilities and base64 string conversion', () => {\n    // https://on.cypress.io/blob\n    cy.get('.utility-blob').then($div => // https://github.com/nolanlawson/blob-util#imgSrcToDataURL\n    // get the dataUrl string for the javascript-logo\n    Cypress.Blob.imgSrcToDataURL('https://example.cypress.io/assets/img/javascript-logo.png', undefined, 'anonymous').then(dataUrl => {\n      // create an <img> element and set its src to the dataUrl\n      let img = Cypress.$('<img />', {\n        src: dataUrl\n      }); // need to explicitly return cy here since we are initially returning\n      // the Cypress.Blob.imgSrcToDataURL promise to our test\n      // append the image\n\n      $div.append(img);\n      cy.get('.utility-blob img').click().should('have.attr', 'src', dataUrl);\n    }));\n  });","file":"examples/utilities.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"Cypress.minimatch - test out glob patterns against strings","suites":[],"updatePoint":{"line":35,"column":64,"index":1539},"line":35,"code":"  it('Cypress.minimatch - test out glob patterns against strings', () => {\n    // https://on.cypress.io/minimatch\n    let matching = Cypress.minimatch('/users/1/comments', '/users/*/comments', {\n      matchBase: true\n    });\n    expect(matching, 'matching wildcard').to.be.true;\n    matching = Cypress.minimatch('/users/1/comments/2', '/users/*/comments', {\n      matchBase: true\n    });\n    expect(matching, 'comments').to.be.false; // ** matches against all downstream path segments\n\n    matching = Cypress.minimatch('/foo/bar/baz/123/quux?a=b&c=2', '/foo/**', {\n      matchBase: true\n    });\n    expect(matching, 'comments').to.be.true; // whereas * matches only the next path segment\n\n    matching = Cypress.minimatch('/foo/bar/baz/123/quux?a=b&c=2', '/foo/*', {\n      matchBase: false\n    });\n    expect(matching, 'comments').to.be.false;\n  });","file":"examples/utilities.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"Cypress.moment() - format or parse dates using a moment method","suites":[],"updatePoint":{"line":56,"column":68,"index":2393},"line":56,"code":"  it('Cypress.moment() - format or parse dates using a moment method', () => {\n    // https://on.cypress.io/moment\n    const time = Cypress.moment('2014-04-25T19:38:53.196Z').utc().format('h:mm A');\n    expect(time).to.be.a('string');\n    cy.get('.utility-moment').contains('3:38 PM').should('have.class', 'badge'); // the time in the element should be between 3pm and 5pm\n\n    const start = Cypress.moment('3:00 PM', 'LT');\n    const end = Cypress.moment('5:00 PM', 'LT');\n    cy.get('.utility-moment .badge').should($el => {\n      // parse American time like \"3:38 PM\"\n      const m = Cypress.moment($el.text().trim(), 'LT'); // display hours + minutes + AM|PM\n\n      const f = 'h:mm A';\n      expect(m.isBetween(start, end), `${m.format(f)} should be between ${start.format(f)} and ${end.format(f)}`).to.be.true;\n    });\n  });","file":"examples/utilities.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"Cypress.Promise - instantiate a bluebird promise","suites":[],"updatePoint":{"line":72,"column":54,"index":3209},"line":72,"code":"  it('Cypress.Promise - instantiate a bluebird promise', () => {\n    // https://on.cypress.io/promise\n    let waited = false;\n    /**\n     * @return Bluebird<string>\n     */\n\n    function waitOneSecond() {\n      // return a promise that resolves after 1 second\n      // @ts-ignore TS2351 (new Cypress.Promise)\n      return new Cypress.Promise((resolve, reject) => {\n        setTimeout(() => {\n          // set waited to true\n          waited = true; // resolve with 'foo' string\n\n          resolve('foo');\n        }, 1000);\n      });\n    }\n\n    cy.then(() => // return a promise to cy.then() that\n    // is awaited until it resolves\n    // @ts-ignore TS7006\n    waitOneSecond().then(str => {\n      expect(str).to.eq('foo');\n      expect(waited).to.be.true;\n    }));\n  });","file":"examples/utilities.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"cy.viewport() - set the viewport size and dimension","suites":[],"updatePoint":{"line":6,"column":57,"index":209},"line":6,"code":"  it('cy.viewport() - set the viewport size and dimension', () => {\n    // https://on.cypress.io/viewport\n    cy.get('#navbar').should('be.visible');\n    cy.viewport(320, 480); // the navbar should have collapse since our screen is smaller\n\n    cy.get('#navbar').should('not.be.visible');\n    cy.get('.navbar-toggle').should('be.visible').click();\n    cy.get('.nav').find('a').should('be.visible'); // lets see what our app looks like on a super large screen\n\n    cy.viewport(2999, 2999); // cy.viewport() accepts a set of preset sizes\n    // to easily set the screen to a device's width and height\n    // We added a cy.wait() between each viewport change so you can see\n    // the change otherwise it is a little too fast to see :)\n\n    cy.viewport('macbook-15');\n    cy.wait(200);\n    cy.viewport('macbook-13');\n    cy.wait(200);\n    cy.viewport('macbook-11');\n    cy.wait(200);\n    cy.viewport('ipad-2');\n    cy.wait(200);\n    cy.viewport('ipad-mini');\n    cy.wait(200);\n    cy.viewport('iphone-6+');\n    cy.wait(200);\n    cy.viewport('iphone-6');\n    cy.wait(200);\n    cy.viewport('iphone-5');\n    cy.wait(200);\n    cy.viewport('iphone-4');\n    cy.wait(200);\n    cy.viewport('iphone-3');\n    cy.wait(200); // cy.viewport() accepts an orientation for all presets\n    // the default orientation is 'portrait'\n\n    cy.viewport('ipad-2', 'portrait');\n    cy.wait(200);\n    cy.viewport('iphone-4', 'landscape');\n    cy.wait(200); // The viewport will be reset back to the default dimensions\n    // in between tests (the  default can be set in cypress.json)\n  });","file":"examples/viewport.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"cy.wait() - wait for a specific amount of time","suites":[],"updatePoint":{"line":9,"column":52,"index":345},"line":9,"code":"  it('cy.wait() - wait for a specific amount of time', () => {\n    cy.get('.wait-input1').type('Wait 1000ms after typing');\n    cy.wait(1000);\n    cy.get('.wait-input2').type('Wait 1000ms after typing');\n    cy.wait(1000);\n    cy.get('.wait-input3').type('Wait 1000ms after typing');\n    cy.wait(1000);\n  });","file":"examples/waiting.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"cy.wait() - wait for a specific route","suites":[],"updatePoint":{"line":17,"column":43,"index":645},"line":17,"code":"  it('cy.wait() - wait for a specific route', () => {\n    cy.server(); // Listen to GET to comments/1\n\n    cy.route('GET', 'comments/*').as('getComment'); // we have code that gets a comment when\n    // the button is clicked in scripts.js\n\n    cy.get('.network-btn').click(); // wait for GET comments/1\n\n    cy.wait('@getComment').its('status').should('eq', 200);\n  });","file":"examples/waiting.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"cy.window() - get the global window object","suites":[],"updatePoint":{"line":6,"column":48,"index":196},"line":6,"code":"  it('cy.window() - get the global window object', () => {\n    // https://on.cypress.io/window\n    cy.window().should('have.property', 'top');\n  });","file":"examples/window.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"cy.document() - get the document object","suites":[],"updatePoint":{"line":10,"column":45,"index":342},"line":10,"code":"  it('cy.document() - get the document object', () => {\n    // https://on.cypress.io/document\n    cy.document().should('have.property', 'charset').and('eq', 'UTF-8');\n  });","file":"examples/window.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"cy.title() - get the title","suites":[],"updatePoint":{"line":14,"column":32,"index":502},"line":14,"code":"  it('cy.title() - get the title', () => {\n    // https://on.cypress.io/title\n    cy.title().should('include', 'Kitchen Sink');\n  });","file":"examples/window.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"/dynamic-routes, when adding a dynamic route, we should be able to navigate to it","suites":["Dynamic Routes"],"updatePoint":{"line":8,"column":87,"index":291},"line":8,"code":"  it('/dynamic-routes, when adding a dynamic route, we should be able to navigate to it', () => {\n    cy.visit(`http://localhost:${port}/dynamic-routes`);\n    cy.ionPageVisible('dynamic-routes-home');\n    cy.get('button').contains('Add Route').click();\n    cy.get('a').contains('Take me to the newRoute').click();\n    cy.ionPageVisible('dynamic-routes-newroute');\n  });","file":"integration/dynamic-routes.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"/dynamic-routes, when trying to navigate to a route that has not been added, it should fail","suites":["Dynamic Routes"],"updatePoint":{"line":15,"column":97,"index":671},"line":15,"code":"  it('/dynamic-routes, when trying to navigate to a route that has not been added, it should fail', () => {\n    cy.visit(`http://localhost:${port}/dynamic-routes`);\n    cy.ionPageVisible('dynamic-routes-home');\n    cy.get('a').contains('Take me to the newRoute').click();\n    cy.ionPageVisible('dynamic-routes-failed');\n  });","file":"integration/dynamic-routes.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"/dynamic-tabs > Tab 1 should be visible","suites":["Dynamic Tabs"],"updatePoint":{"line":7,"column":45,"index":253},"line":7,"code":"  it('/dynamic-tabs > Tab 1 should be visible', () => {\n    cy.visit(`http://localhost:${port}/dynamic-tabs`);\n    cy.ionPageVisible('Tab1');\n  });","file":"integration/dynamic-tabs.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"/dynamic-tabs > Add Tab 2 Button Click > Tab2 Tab, Tab2 should be visible","suites":["Dynamic Tabs"],"updatePoint":{"line":11,"column":79,"index":435},"line":11,"code":"  it('/dynamic-tabs > Add Tab 2 Button Click > Tab2 Tab, Tab2 should be visible', () => {\n    cy.visit(`http://localhost:${port}/dynamic-tabs`);\n    cy.ionPageVisible('Tab1');\n    cy.get('ion-button').contains('Add Tab 2').click();\n    cy.ionTabClick('Tab 2');\n    cy.ionPageVisible('Tab2');\n  });","file":"integration/dynamic-tabs.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"/dynamic-tabs/tab2 > Default route should kick back to Tab 1","suites":["Dynamic Tabs"],"updatePoint":{"line":18,"column":66,"index":720},"line":18,"code":"  it('/dynamic-tabs/tab2 > Default route should kick back to Tab 1', () => {\n    cy.visit(`http://localhost:${port}/dynamic-tabs/tab2`);\n    cy.ionPageVisible('Tab1');\n  });","file":"integration/dynamic-tabs.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"/multiple-tabs > PageA should be visible","suites":["Multiple Tabs"],"updatePoint":{"line":7,"column":46,"index":238},"line":7,"code":"  it('/multiple-tabs > PageA should be visible', () => {\n    cy.visit(`http://localhost:${port}/multiple-tabs`);\n    cy.ionPageVisible('PageA');\n  });","file":"integration/multiple-tabs.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"/multiple-tabs > Page B Tab, PageB should be visible","suites":["Multiple Tabs"],"updatePoint":{"line":11,"column":58,"index":401},"line":11,"code":"  it('/multiple-tabs > Page B Tab, PageB should be visible', () => {\n    cy.visit(`http://localhost:${port}/multiple-tabs`);\n    cy.ionPageVisible('PageA');\n    cy.ionTabClick('Page B');\n    cy.ionPageVisible('PageB');\n  });","file":"integration/multiple-tabs.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"/multiple-tabs > Menu > Tab 2, Page C should be visible","suites":["Multiple Tabs"],"updatePoint":{"line":17,"column":61,"index":629},"line":17,"code":"  it('/multiple-tabs > Menu > Tab 2, Page C should be visible', () => {\n    cy.visit(`http://localhost:${port}/multiple-tabs`);\n    cy.ionPageVisible('PageA');\n    cy.ionMenuClick();\n    cy.ionMenuNav('Tab 2');\n    cy.ionPageVisible('PageC');\n  });","file":"integration/multiple-tabs.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"/multiple-tabs > Page B Tab > Menu > Tab 2, Page D, Menu > Tab 1, Page A should be visible","suites":["Multiple Tabs"],"updatePoint":{"line":24,"column":96,"index":913},"line":24,"code":"  it('/multiple-tabs > Page B Tab > Menu > Tab 2, Page D, Menu > Tab 1, Page A should be visible', () => {\n    cy.visit(`http://localhost:${port}/multiple-tabs`);\n    cy.ionPageVisible('PageA');\n    cy.ionTabClick('Page B');\n    cy.ionPageVisible('PageB');\n    cy.ionMenuClick();\n    cy.ionMenuNav('Tab 2');\n    cy.ionPageVisible('PageC');\n    cy.ionTabClick('Page D');\n    cy.ionPageVisible('PageD');\n    cy.ionMenuClick();\n    cy.ionMenuNav('Tab 1');\n    cy.ionPageVisible('PageA');\n  });","file":"integration/multiple-tabs.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"/nested-outlet > First Page should be visible","suites":["Nested Outlets"],"updatePoint":{"line":10,"column":51,"index":405},"line":10,"code":"  it('/nested-outlet > First Page should be visible', () => {\n    cy.visit(`http://localhost:${port}/nested-outlet`);\n    cy.ionPageVisible('firstpage');\n  });","file":"integration/nested-outlets.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"/nested-outlet > Go to second page Button click, Second Page should be visible","suites":["Nested Outlets"],"updatePoint":{"line":14,"column":84,"index":598},"line":14,"code":"  it('/nested-outlet > Go to second page Button click, Second Page should be visible', () => {\n    cy.visit(`http://localhost:${port}/nested-outlet`);\n    cy.ionPageVisible('firstpage');\n    cy.ionNav('ion-button', 'Go to second page');\n    cy.ionPageVisible('secondpage');\n  });","file":"integration/nested-outlets.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"/nested-outlet > Go to second page Button click, Back with direction \"back\" Button click, FirstPage should be visible","suites":["Nested Outlets"],"updatePoint":{"line":20,"column":123,"index":917},"line":20,"code":"  it('/nested-outlet > Go to second page Button click, Back with direction \"back\" Button click, FirstPage should be visible', () => {\n    cy.visit(`http://localhost:${port}/nested-outlet`);\n    cy.ionPageVisible('firstpage');\n    cy.ionNav('ion-button', 'Go to second page');\n    cy.ionPageVisible('secondpage');\n    cy.ionNav('ion-button', 'Back with direction \"back\"');\n    cy.ionPageVisible('firstpage');\n  });","file":"integration/nested-outlets.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"/nested-outlet > Go to second page Button click, Back with direction \"root\" Button click, FirstPage should be visible","suites":["Nested Outlets"],"updatePoint":{"line":28,"column":123,"index":1331},"line":28,"code":"  it('/nested-outlet > Go to second page Button click, Back with direction \"root\" Button click, FirstPage should be visible', () => {\n    cy.visit(`http://localhost:${port}/nested-outlet`);\n    cy.ionPageVisible('firstpage');\n    cy.ionNav('ion-button', 'Go to second page');\n    cy.ionPageVisible('secondpage');\n    cy.ionNav('ion-button', 'Back with direction \"root\"');\n    cy.ionPageVisible('firstpage');\n  });","file":"integration/nested-outlets.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"/nested-outlet/secondpage > Back with direction \"root\" Button click, FirstPage should be visible","suites":["Nested Outlets"],"updatePoint":{"line":36,"column":102,"index":1724},"line":36,"code":"  it('/nested-outlet/secondpage > Back with direction \"root\" Button click, FirstPage should be visible', () => {\n    cy.visit(`http://localhost:${port}/nested-outlet/secondpage`);\n    cy.ionPageVisible('secondpage');\n    cy.ionNav('ion-button', 'Back with direction \"root\"');\n    cy.ionPageVisible('firstpage');\n  });","file":"integration/nested-outlets.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"/nested-outlet2 > First Page should be visible","suites":["Nested Outlets 2"],"updatePoint":{"line":57,"column":52,"index":2784},"line":57,"code":"  it('/nested-outlet2 > First Page should be visible', () => {\n    cy.visit(`http://localhost:${port}/nested-outlet2`);\n    cy.ionPageVisible('home');\n  });","file":"integration/nested-outlets.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"/nested-outlet2 > Go to Welcome IonItem click > Welcome page should be visible","suites":["Nested Outlets 2"],"updatePoint":{"line":61,"column":84,"index":2973},"line":61,"code":"  it('/nested-outlet2 > Go to Welcome IonItem click > Welcome page should be visible', () => {\n    cy.visit(`http://localhost:${port}/nested-outlet2`);\n    cy.ionPageVisible('home');\n    cy.ionNav('ion-item', 'Go to Welcome');\n    cy.ionPageVisible('welcome');\n  });","file":"integration/nested-outlets.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"/nested-outlet2 > Go to Welcome IonItem click > Go to list from Welcome IonItem click > List page should be visible","suites":["Nested Outlets 2"],"updatePoint":{"line":67,"column":121,"index":3277},"line":67,"code":"  it('/nested-outlet2 > Go to Welcome IonItem click > Go to list from Welcome IonItem click > List page should be visible', () => {\n    cy.visit(`http://localhost:${port}/nested-outlet2`);\n    cy.ionPageVisible('home');\n    cy.ionNav('ion-item', 'Go to Welcome');\n    cy.ionPageVisible('welcome');\n    cy.ionNav('ion-item', 'Go to list from Welcome');\n    cy.ionPageVisible('list');\n  });","file":"integration/nested-outlets.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"/nested-outlet2 >\n    Go to Welcome IonItem click >\n    Go to list from Welcome IonItem click >\n    Item#1 IonItem Click >\n    Item page should be visible\n","suites":["Nested Outlets 2"],"updatePoint":{"line":80,"column":0,"index":3706},"line":75,"code":"  it(`/nested-outlet2 >\n    Go to Welcome IonItem click >\n    Go to list from Welcome IonItem click >\n    Item#1 IonItem Click >\n    Item page should be visible\n`, () => {\n    cy.visit(`http://localhost:${port}/nested-outlet2`);\n    cy.ionPageVisible('home');\n    cy.ionNav('ion-item', 'Go to Welcome');\n    cy.ionPageVisible('welcome');\n    cy.ionNav('ion-item', 'Go to list from Welcome');\n    cy.ionPageVisible('list');\n    cy.ionNav('ion-item', 'Item #1');\n    cy.ionPageVisible('item');\n  });","file":"integration/nested-outlets.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"/nested-outlet2 >\n    Go to list from Home IonItem click >\n    Item#1 IonItem Click >\n    Item page should be visible >\n    Back >\n    List page should be visible\n","suites":["Nested Outlets 2"],"updatePoint":{"line":96,"column":0,"index":4212},"line":90,"code":"  it(`/nested-outlet2 >\n    Go to list from Home IonItem click >\n    Item#1 IonItem Click >\n    Item page should be visible >\n    Back >\n    List page should be visible\n`, () => {\n    cy.visit(`http://localhost:${port}/nested-outlet2`);\n    cy.ionPageVisible('home');\n    cy.ionNav('ion-item', 'Go to list from Home');\n    cy.ionPageVisible('list');\n    cy.ionNav('ion-item', 'Item #1');\n    cy.ionPageVisible('item');\n    cy.ionBackClick('item');\n    cy.ionPageVisible('list');\n  });","file":"integration/nested-outlets.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"/nested-outlet2 >\n    Go to list from Home IonItem click >\n    Item#1 IonItem Click >\n    Item page should be visible >\n    Back >\n    List page should be visible\n    Back >\n    Home page should be visible\n","suites":["Nested Outlets 2"],"updatePoint":{"line":114,"column":0,"index":4740},"line":106,"code":"  it(`/nested-outlet2 >\n    Go to list from Home IonItem click >\n    Item#1 IonItem Click >\n    Item page should be visible >\n    Back >\n    List page should be visible\n    Back >\n    Home page should be visible\n`, () => {\n    cy.visit(`http://localhost:${port}/nested-outlet2`);\n    cy.ionPageVisible('home');\n    cy.ionNav('ion-item', 'Go to list from Home');\n    cy.ionPageVisible('list');\n    cy.ionNav('ion-item', 'Item #1');\n    cy.ionPageVisible('item');\n    cy.ionBackClick('item');\n    cy.ionPageVisible('list');\n    cy.ionBackClick('list');\n    cy.ionPageVisible('home');\n  });","file":"integration/nested-outlets.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"/outlet-ref, page should contain the id of the ion-router-outlet","suites":["IonRouterOutlet Ref"],"updatePoint":{"line":6,"column":70,"index":207},"line":6,"code":"  it('/outlet-ref, page should contain the id of the ion-router-outlet', () => {\n    cy.visit(`http://localhost:${port}/outlet-ref`);\n    cy.get('div').contains('main-outlet');\n    cy.ionPageVisible('main');\n  });","file":"integration/outlet-ref.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"/refs, when ref is used on an FC, className should be added to ionic component","suites":["Refs"],"updatePoint":{"line":6,"column":84,"index":217},"line":6,"code":"  it(\"/refs, when ref is used on an FC, className should be added to ionic component\", () => {\n    cy.visit(`http://localhost:${port}/refs`);\n    cy.ionPageVisible(\"refs-fc\");\n    cy.get(\".ref-test\");\n  });","file":"integration/refs.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"/refs/class, when ref is used on a Class, className should be added to ionic component","suites":["Refs"],"updatePoint":{"line":11,"column":92,"index":432},"line":11,"code":"  it(\"/refs/class, when ref is used on a Class, className should be added to ionic component\", () => {\n    cy.visit(`http://localhost:${port}/refs/class`);\n    cy.ionPageVisible(\"refs-class\");\n    cy.get(\".ref-test\");\n  });","file":"integration/refs.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"/replace-action > Goto Page2 > Goto Page3 > Browser Back > Page1 should be visible and Page2 should be gone","suites":["Replace Action"],"updatePoint":{"line":7,"column":113,"index":307},"line":7,"code":"  it('/replace-action > Goto Page2 > Goto Page3 > Browser Back > Page1 should be visible and Page2 should be gone', () => {\n    cy.visit(`http://localhost:${port}/replace-action`);\n    cy.ionPageVisible('page1');\n    cy.ionNav('ion-button', 'Goto Page2');\n    cy.ionPageVisible('page2');\n    cy.ionNav('ion-button', 'Goto Page3');\n    cy.ionPageVisible('page3');\n    cy.go('back');\n    cy.ionPageVisible('page1');\n    cy.ionPageDoesNotExist('page2');\n  });","file":"integration/replace-actions.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"/ > Details 1, the details screen should appear","suites":["Routing Tests"],"updatePoint":{"line":6,"column":53,"index":314},"line":6,"code":"  it('/ > Details 1, the details screen should appear', () => {\n    cy.visit(`http://localhost:${port}/routing`);\n    cy.ionPageVisible('home-page');\n    cy.ionNav('ion-item', 'Details 1');\n    cy.contains('[data-pageid=home-details-page-1] ion-label', 'Details 1');\n  });","file":"integration/routing.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"/ > Details 1 > Back, should go back to home","suites":["Routing Tests"],"updatePoint":{"line":12,"column":50,"index":584},"line":12,"code":"  it('/ > Details 1 > Back, should go back to home', () => {\n    cy.visit(`http://localhost:${port}/routing`);\n    cy.ionNav('ion-item', 'Details 1');\n    cy.contains('[data-pageid=home-details-page-1] ion-label', 'Details 1');\n    cy.ionBackClick('home-details-page-1');\n    cy.contains('[data-pageid=home-page] ion-title', 'Home');\n  });","file":"integration/routing.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"/ > Details 1 > Settings Tab > Home Tab, should go back to details 1 on home tab","suites":["Routing Tests"],"updatePoint":{"line":19,"column":86,"index":960},"line":19,"code":"  it('/ > Details 1 > Settings Tab > Home Tab, should go back to details 1 on home tab', () => {\n    cy.visit(`http://localhost:${port}/routing`);\n    cy.ionNav('ion-item', 'Details 1');\n    cy.ionPageVisible('home-details-page-1');\n    cy.ionTabClick('Settings');\n    cy.ionPageVisible('settings-page');\n    cy.ionTabClick('Home');\n    cy.ionPageVisible('home-details-page-1');\n  });","file":"integration/routing.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"/ > Details 1 > Settings Tab > Home Tab > Home Tab, should go back to home","suites":["Routing Tests"],"updatePoint":{"line":28,"column":80,"index":1339},"line":28,"code":"  it('/ > Details 1 > Settings Tab > Home Tab > Home Tab, should go back to home', () => {\n    cy.visit(`http://localhost:${port}/routing`);\n    cy.ionNav('ion-item', 'Details 1');\n    cy.contains('[data-pageid=home-details-page-1] ion-label', 'Details 1');\n    cy.ionTabClick('Settings');\n    cy.ionPageVisible('settings-page');\n    cy.ionTabClick('Home');\n    cy.ionPageVisible('home-details-page-1');\n    cy.ionTabClick('Home');\n    cy.ionPageVisible('home-page');\n  });","file":"integration/routing.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"When going directly to /tabs, it should load home page","suites":["Routing Tests"],"updatePoint":{"line":39,"column":60,"index":1793},"line":39,"code":"  it('When going directly to /tabs, it should load home page', () => {\n    cy.visit(`http://localhost:${port}/routing/tabs`);\n    cy.ionPageVisible('home-page');\n  });","file":"integration/routing.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"When going directly to /tabs/home, it should load home page","suites":["Routing Tests"],"updatePoint":{"line":43,"column":65,"index":1966},"line":43,"code":"  it('When going directly to /tabs/home, it should load home page', () => {\n    cy.visit(`http://localhost:${port}/routing/tabs/home`);\n    cy.ionPageVisible('home-page');\n  });","file":"integration/routing.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"When going directly to /tabs/settings, it should load settings page","suites":["Routing Tests"],"updatePoint":{"line":47,"column":73,"index":2152},"line":47,"code":"  it('When going directly to /tabs/settings, it should load settings page', () => {\n    cy.visit(`http://localhost:${port}/routing/tabs/settings`);\n    cy.ionPageVisible('settings-page');\n  });","file":"integration/routing.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"Home Details 1 > Settings Tab > Home Tab, details 1 page should still be active","suites":["Routing Tests"],"updatePoint":{"line":51,"column":85,"index":2358},"line":51,"code":"  it('Home Details 1 > Settings Tab > Home Tab, details 1 page should still be active', () => {\n    cy.visit(`http://localhost:${port}/routing/tabs/home/details/1`);\n    cy.ionTabClick('Settings');\n    cy.ionPageVisible('settings-page');\n    cy.ionTabClick('Home');\n    cy.ionPageVisible('home-details-page-1');\n  });","file":"integration/routing.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"/ > Home Details 1+2+3 > Settings Tab > Setting Details 1+2+3 > Home Tab > Back * 3 > Settings Tab > Back * 3, should be at settings page","suites":["Routing Tests"],"updatePoint":{"line":58,"column":143,"index":2734},"line":58,"code":"  it('/ > Home Details 1+2+3 > Settings Tab > Setting Details 1+2+3 > Home Tab > Back * 3 > Settings Tab > Back * 3, should be at settings page', () => {\n    // This was a bug when loading the root of the app and not going directly to the home tab\n    cy.visit(`http://localhost:${port}/routing/`);\n    cy.ionNav('ion-item', 'Details 1');\n    cy.ionNav('ion-button', 'Go to Details 2');\n    cy.ionNav('ion-button', 'Go to Details 3');\n    cy.contains('[data-pageid=home-details-page-3] ion-label', 'Details 3');\n    cy.ionTabClick('Settings');\n    cy.ionNav('ion-item', 'Settings Details 1');\n    cy.ionNav('ion-button', 'Go to Settings Details 2');\n    cy.ionNav('ion-button', 'Go to Settings Details 3');\n    cy.contains('[data-pageid=settings-details-page-3] ion-label', 'Details 3');\n    cy.ionTabClick('Home');\n    cy.contains('[data-pageid=home-details-page-3] ion-label', 'Details 3');\n    cy.ionBackClick('home-details-page-3');\n    cy.contains('[data-pageid=home-details-page-2] ion-label', 'Details 2');\n    cy.ionBackClick('home-details-page-2');\n    cy.contains('[data-pageid=home-details-page-1] ion-label', 'Details 1');\n    cy.ionBackClick('home-details-page-1');\n    cy.ionPageVisible('home-page');\n  });","file":"integration/routing.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"/ > Details 1 with Query Param > Details 2 > Back,  Query param should show on screen","suites":["Routing Tests"],"updatePoint":{"line":79,"column":91,"index":3903},"line":79,"code":"  it('/ > Details 1 with Query Param > Details 2 > Back,  Query param should show on screen', () => {\n    cy.visit(`http://localhost:${port}/routing/`);\n    cy.ionNav('ion-item', 'Details 1 with Query Params');\n    cy.contains('[data-pageid=home-details-page-1] ion-label', 'Query Params: ');\n    cy.ionNav('ion-button', 'Go to Details 2');\n    cy.contains('[data-pageid=home-details-page-2] ion-label', 'Details 2');\n    cy.ionBackClick('home-details-page-2');\n    cy.contains('[data-pageid=home-details-page-1] ion-label', 'Query Params: ');\n  });","file":"integration/routing.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"/ > Details 1 with Query Param > Settings Tab > Home Tab > Query param should show on screen","suites":["Routing Tests"],"updatePoint":{"line":88,"column":98,"index":4460},"line":88,"code":"  it('/ > Details 1 with Query Param > Settings Tab > Home Tab > Query param should show on screen', () => {\n    cy.visit(`http://localhost:${port}/routing/`);\n    cy.ionNav('ion-item', 'Details 1 with Query Params');\n    cy.contains('[data-pageid=home-details-page-1] ion-label', 'Query Params: ');\n    cy.ionTabClick('Settings');\n    cy.ionPageVisible('settings-page');\n    cy.ionTabClick('Home');\n    cy.contains('[data-pageid=home-details-page-1] ion-label', 'Query Params: ');\n  });","file":"integration/routing.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"Home Details 1 > Home Tab > Details 1 > Home Tab, should be on home page","suites":["Routing Tests"],"updatePoint":{"line":97,"column":78,"index":4928},"line":97,"code":"  it('Home Details 1 > Home Tab > Details 1 > Home Tab, should be on home page', () => {\n    // Tests a bug when landing directly on a page thats not the originalHref and going back to home\n    cy.visit(`http://localhost:${port}/routing/tabs/home/details/1`);\n    cy.ionTabClick('Home');\n    cy.ionPageVisible('home-page');\n    cy.ionNav('ion-item', 'Details 1');\n    cy.ionPageVisible('home-details-page-1');\n    cy.ionTabClick('Home');\n    cy.ionPageVisible('home-page');\n  });","file":"integration/routing.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"Home > Session Details Link > Session Details 2 > Back > Back, should be at home page","suites":["Routing Tests"],"updatePoint":{"line":107,"column":91,"index":5421},"line":107,"code":"  it('Home > Session Details Link > Session Details 2 > Back > Back, should be at home page', () => {\n    // Tests a bug when landing directly on a page thats not the originalHref and going back to home\n    cy.visit(`http://localhost:${port}/routing/tabs/home`);\n    cy.ionNav('a', 'Go to details 1 on settings');\n    cy.ionPageVisible('settings-details-page-1');\n    cy.ionNav('ion-button', 'Go to Settings Details 2');\n    cy.ionPageVisible('settings-details-page-2');\n    cy.ionBackClick('settings-details-page-2');\n    cy.ionPageVisible('settings-details-page-1');\n    cy.ionBackClick('settings-details-page-1');\n    cy.ionPageVisible('home-page');\n  });","file":"integration/routing.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"Tab 3 > Other Page > Back, should be back on Tab 3","suites":["Routing Tests"],"updatePoint":{"line":119,"column":56,"index":6045},"line":119,"code":"  it('Tab 3 > Other Page > Back, should be back on Tab 3', () => {\n    // Tests transferring from one outlet to another and back again with animation\n    // TODO: how to test the transition animation happens?\n    cy.visit(`http://localhost:${port}/routing/tabs/tab3`);\n    cy.ionNav('ion-button', 'Go to Other Page');\n    cy.ionPageVisible('other-page');\n    cy.ionBackClick('other-page');\n    cy.ionPageVisible('tab3-page');\n  });","file":"integration/routing.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"/ > Menu > Favorites > Menu > Tabs, should be back on Home","suites":["Routing Tests"],"updatePoint":{"line":128,"column":64,"index":6485},"line":128,"code":"  it('/ > Menu > Favorites > Menu > Tabs, should be back on Home', () => {\n    // Tests transferring from one outlet to another and back again via menu\n    cy.visit(`http://localhost:${port}/routing`);\n    cy.ionMenuClick();\n    cy.ionMenuNav('Favorites');\n    cy.ionPageVisible('favorites-page');\n    cy.ionMenuClick();\n    cy.ionMenuNav('Tabs');\n    cy.ionPageVisible('home-page');\n  });","file":"integration/routing.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"/ > Session Details > Details 2 > Details 3 > Browser Back * 3, should be back on home","suites":["Routing Tests"],"updatePoint":{"line":138,"column":92,"index":6903},"line":138,"code":"  it('/ > Session Details > Details 2 > Details 3 > Browser Back * 3, should be back on home', () => {\n    // Tests browser back button\n    cy.visit(`http://localhost:${port}/routing/`);\n    cy.ionNav('ion-item', 'Details 1');\n    cy.ionPageVisible('home-details-page-1');\n    cy.ionNav('ion-button', 'Go to Details 2');\n    cy.ionPageVisible('home-details-page-2');\n    cy.ionNav('ion-button', 'Go to Details 3');\n    cy.ionPageVisible('home-details-page-3');\n    cy.go('back');\n    cy.ionPageVisible('home-details-page-2');\n    cy.go('back');\n    cy.ionPageVisible('home-details-page-1');\n    cy.go('back');\n    cy.ionPageVisible('home-page');\n  });","file":"integration/routing.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"/ > Details 1 > Details 2 > Details 3 > Settings Tab > Home Tab > Browser Back, should be back on home","suites":["Routing Tests"],"updatePoint":{"line":154,"column":108,"index":7571},"line":154,"code":"  it('/ > Details 1 > Details 2 > Details 3 > Settings Tab > Home Tab > Browser Back, should be back on home', () => {\n    // Tests browser back button with a tab switch\n    cy.visit(`http://localhost:${port}/routing/`);\n    cy.ionNav('ion-item', 'Details 1');\n    cy.ionPageVisible('home-details-page-1');\n    cy.ionNav('ion-button', 'Go to Details 2');\n    cy.ionPageVisible('home-details-page-2');\n    cy.ionNav('ion-button', 'Go to Details 3');\n    cy.ionPageVisible('home-details-page-3');\n    cy.ionTabClick('Settings');\n    cy.ionPageVisible('settings-page');\n    cy.ionTabClick('Home');\n    cy.ionPageVisible('home-details-page-3');\n    cy.go('back');\n    cy.ionPageVisible('home-details-page-2');\n    cy.get('ion-tab-button.tab-selected').contains('Home');\n  });","file":"integration/routing.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"/ > Details 1 > Details 2 > Details 3 > Browser Back > Back > Back, should be back on home","suites":["Routing Tests"],"updatePoint":{"line":171,"column":96,"index":8331},"line":171,"code":"  it('/ > Details 1 > Details 2 > Details 3 > Browser Back > Back > Back, should be back on home', () => {\n    // Tests browser back button with a tab switch\n    cy.visit(`http://localhost:${port}/routing/`);\n    cy.ionNav('ion-item', 'Details 1');\n    cy.ionPageVisible('home-details-page-1');\n    cy.ionNav('ion-button', 'Go to Details 2');\n    cy.ionPageVisible('home-details-page-2');\n    cy.ionNav('ion-button', 'Go to Details 3');\n    cy.ionPageVisible('home-details-page-3');\n    cy.go('back');\n    cy.ionPageVisible('home-details-page-2');\n    cy.ionBackClick('home-details-page-2');\n    cy.ionPageVisible('home-details-page-1');\n    cy.ionBackClick('home-details-page-1');\n    cy.ionPageVisible('home-page');\n  });","file":"integration/routing.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"when props get passed into a route render, the component should update","suites":["Routing Tests"],"updatePoint":{"line":187,"column":76,"index":9035},"line":187,"code":"  it('when props get passed into a route render, the component should update', () => {\n    cy.visit(`http://localhost:${port}/routing/propstest`);\n    cy.ionPageVisible('props-test');\n    cy.get('div[data-testid=count-label]').contains('1');\n    cy.contains('Increment').click();\n    cy.get('div[data-testid=count-label]').contains('2');\n    cy.contains('Increment').click();\n    cy.get('div[data-testid=count-label]').contains('3');\n  });","file":"integration/routing.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"/routing/asdf, when accessing a route not defined from root outlet, should show not found page","suites":["Routing Tests"],"updatePoint":{"line":196,"column":100,"index":9499},"line":196,"code":"  it('/routing/asdf, when accessing a route not defined from root outlet, should show not found page', () => {\n    cy.visit(`http://localhost:${port}/routing/asdf`, {\n      failOnStatusCode: false\n    });\n    cy.ionPageVisible('not-found');\n    cy.get('div').contains('Not found');\n  });","file":"integration/routing.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"/tabs/home > Details 1 on settings > Home Tab, should be back on home page","suites":["Routing Tests"],"updatePoint":{"line":203,"column":80,"index":9767},"line":203,"code":"  it('/tabs/home > Details 1 on settings > Home Tab, should be back on home page', () => {\n    cy.visit(`http://localhost:${port}/routing/tabs/home`);\n    cy.ionNav('ion-item', 'Details 1 on settings');\n    cy.ionPageVisible('settings-details-page-1');\n    cy.ionTabClick('Home');\n    cy.ionPageVisible('home-page');\n  });","file":"integration/routing.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"/ > Details 1 on settings > Back > Settings Tab, should be on setting home","suites":["Routing Tests"],"updatePoint":{"line":210,"column":80,"index":10090},"line":210,"code":"  it('/ > Details 1 on settings > Back > Settings Tab, should be on setting home', () => {\n    // For bug https://github.com/ionic-team/ionic/issues/21031\n    cy.visit(`http://localhost:${port}/routing/`);\n    cy.ionNav('ion-item', 'Details 1 on settings');\n    cy.ionPageVisible('settings-details-page-1');\n    cy.ionBackClick('settings-details-page-1');\n    cy.ionPageVisible('home-page');\n    cy.ionTabClick('Settings');\n    cy.ionPageVisible('settings-page');\n  });","file":"integration/routing.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"/routing/tabs/redirect > Should be on settings page > Home Tab > Should be on home page","suites":["Routing Tests"],"updatePoint":{"line":220,"column":93,"index":10573},"line":220,"code":"  it('/routing/tabs/redirect > Should be on settings page > Home Tab > Should be on home page', () => {\n    // tests that a redirect going to a tab other than the first tab works\n    // fixes bug https://github.com/ionic-team/ionic-framework/issues/21830\n    cy.visit(`http://localhost:${port}/routing/tabs/redirect`);\n    cy.ionPageVisible('settings-page');\n    cy.ionTabClick('Home');\n    cy.ionPageVisible('home-page');\n  });","file":"integration/routing.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"/routing/ > Details 1 > Details 2 > Details 3 > Back > Settings Tab > Home Tab > Should be at details 2 page","suites":["Routing Tests"],"updatePoint":{"line":228,"column":114,"index":11023},"line":228,"code":"  it('/routing/ > Details 1 > Details 2 > Details 3 > Back > Settings Tab > Home Tab > Should be at details 2 page', () => {\n    // fixes an issue where route history was being lost after starting to go back, switching tabs\n    // and switching back to the same tab again\n    // for bug https://github.com/ionic-team/ionic-framework/issues/21834\n    cy.visit(`http://localhost:${port}/routing`);\n    cy.ionPageVisible('home-page');\n    cy.ionNav('ion-item', 'Details 1');\n    cy.ionPageVisible('home-details-page-1');\n    cy.ionNav('ion-button', 'Go to Details 2');\n    cy.ionPageVisible('home-details-page-2');\n    cy.ionNav('ion-button', 'Go to Details 3');\n    cy.ionPageVisible('home-details-page-3');\n    cy.ionBackClick('home-details-page-3');\n    cy.ionPageVisible('home-details-page-2');\n    cy.ionTabClick('Settings');\n    cy.ionPageVisible('settings-page');\n    cy.ionTabClick('Home');\n    cy.ionPageVisible('home-details-page-2');\n  });","file":"integration/routing.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"/routing/tabs/home Menu > Favorites > Menu > Home with redirect, Home page should be visible, and Favorites should be hidden","suites":["Routing Tests"],"updatePoint":{"line":247,"column":130,"index":11987},"line":247,"code":"  it('/routing/tabs/home Menu > Favorites > Menu > Home with redirect, Home page should be visible, and Favorites should be hidden', () => {\n    cy.visit(`http://localhost:${port}/routing/tabs/home`);\n    cy.ionMenuClick();\n    cy.ionMenuNav('Favorites');\n    cy.ionPageVisible('favorites-page');\n    cy.ionMenuClick();\n    cy.ionMenuNav('Home with redirect');\n    cy.ionPageVisible('home-page');\n    cy.ionPageDoesNotExist('favorites-page');\n  });","file":"integration/routing.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"/routing/tabs/home Menu > Favorites > Menu > Home with router, Home page should be visible, and Favorites should be hidden","suites":["Routing Tests"],"updatePoint":{"line":257,"column":128,"index":12434},"line":257,"code":"  it('/routing/tabs/home Menu > Favorites > Menu > Home with router, Home page should be visible, and Favorites should be hidden', () => {\n    cy.visit(`http://localhost:${port}/routing/tabs/home`);\n    cy.ionMenuClick();\n    cy.ionMenuNav('Favorites');\n    cy.ionPageVisible('favorites-page');\n    cy.ionMenuClick();\n    cy.ionMenuNav('Home with router');\n    cy.ionPageVisible('home-page');\n    cy.ionPageHidden('favorites-page');\n  });","file":"integration/routing.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"should show back button when going back to a pushed page","suites":["Routing Tests"],"updatePoint":{"line":267,"column":62,"index":12807},"line":267,"code":"  it('should show back button when going back to a pushed page', () => {\n    cy.visit(`http://localhost:${port}/routing/tabs/home`);\n    cy.ionNav('ion-item', 'Details 1');\n    cy.ionPageHidden('home-page');\n    cy.ionPageVisible('home-details-page-1');\n    cy.get('ion-tab-button#tab-button-settings').click();\n    cy.ionPageHidden('home-details-page-1');\n    cy.ionPageVisible('settings-page');\n    cy.get('ion-tab-button#tab-button-home').click();\n    cy.ionPageHidden('settings-page');\n    cy.ionPageVisible('home-details-page-1');\n    cy.ionBackClick('home-details-page-1');\n    cy.ionPageDoesNotExist('home-details-page-1');\n    cy.ionPageVisible('home-page');\n  });","file":"integration/routing.spec.js","skipped":false,"dir":"packages/react-router/test-app/cypress"},{"name":"then should be at /page2 canGoBack should be true","suites":["LocationHistory","Popping history","page1 > page2"],"updatePoint":{"line":25,"column":59},"line":25,"code":"      it('then should be at /page2 canGoBack should be true', () => {\n        expect(currentRoute().pathname).toEqual('/page2');\n        expect(locationHistory.canGoBack()).toBeTruthy();\n      });","file":"LocationHistory.spec.ts","skipped":false,"dir":"packages/react/src/routing/__tests__"},{"name":"when going back, should be on /page1 and canGoBack should be false","suites":["LocationHistory","Popping history","page1 > page2"],"updatePoint":{"line":30,"column":76},"line":30,"code":"      it('when going back, should be on /page1 and canGoBack should be false', () => {\n        popRoute();\n        expect(currentRoute().pathname).toEqual('/page1');\n        expect(locationHistory.canGoBack()).toBeFalsy();\n      });","file":"LocationHistory.spec.ts","skipped":false,"dir":"packages/react/src/routing/__tests__"},{"name":"then should be on tab1 and should not be able to go back","suites":["LocationHistory","Popping history","tab1 > tab2 > Back"],"updatePoint":{"line":46,"column":66},"line":46,"code":"      it('then should be on tab1 and should not be able to go back', () => {\n        expect(currentRoute().pathname).toEqual('/tab1');\n        expect(locationHistory.canGoBack()).toBeFalsy();\n      });","file":"LocationHistory.spec.ts","skipped":false,"dir":"packages/react/src/routing/__tests__"},{"name":"when back once, then should be on tab2 and should be able to go back","suites":["LocationHistory","Popping history","tab1 > tab2 > tab3"],"updatePoint":{"line":62,"column":78},"line":62,"code":"      it('when back once, then should be on tab2 and should be able to go back', () => {\n        popRoute();\n        expect(currentRoute().pathname).toEqual('/tab2');\n        expect(locationHistory.canGoBack).toBeTruthy();\n      });","file":"LocationHistory.spec.ts","skipped":false,"dir":"packages/react/src/routing/__tests__"},{"name":"when going back twice, should be on tab1 and not be able to go back","suites":["LocationHistory","Popping history","tab1 > tab2 > tab3"],"updatePoint":{"line":68,"column":77},"line":68,"code":"      it('when going back twice, should be on tab1 and not be able to go back', () => {\n        popRoute();\n        popRoute();\n        expect(currentRoute().pathname).toEqual('/tab1');\n        expect(locationHistory.canGoBack()).toBeFalsy();\n      });","file":"LocationHistory.spec.ts","skipped":false,"dir":"packages/react/src/routing/__tests__"},{"name":"then should be at details2 and able to go back","suites":["LocationHistory","Popping history","tab1 > tab1/details/1, then tab1/details/2"],"updatePoint":{"line":86,"column":56},"line":86,"code":"      it('then should be at details2 and able to go back', () => {\n        expect(currentRoute().pathname).toEqual('/tab1/details/2');\n        expect(locationHistory.canGoBack()).toBeTruthy();\n      });","file":"LocationHistory.spec.ts","skipped":false,"dir":"packages/react/src/routing/__tests__"},{"name":"when going back, should be at details1 and able to go back","suites":["LocationHistory","Popping history","tab1 > tab1/details/1, then tab1/details/2"],"updatePoint":{"line":91,"column":68},"line":91,"code":"      it('when going back, should be at details1 and able to go back', () => {\n        popRoute();\n        expect(currentRoute().pathname).toEqual('/tab1/details/1');\n        expect(locationHistory.canGoBack()).toBeTruthy();\n      });","file":"LocationHistory.spec.ts","skipped":false,"dir":"packages/react/src/routing/__tests__"},{"name":"when going back twice, should be at home and not able to go back","suites":["LocationHistory","Popping history","tab1 > tab1/details/1, then tab1/details/2"],"updatePoint":{"line":97,"column":74},"line":97,"code":"      it('when going back twice, should be at home and not able to go back', () => {\n        popRoute();\n        popRoute();\n        expect(currentRoute().pathname).toEqual('/tab1');\n        expect(locationHistory.canGoBack()).toBeFalsy();\n      });","file":"LocationHistory.spec.ts","skipped":false,"dir":"packages/react/src/routing/__tests__"},{"name":"then locationHistory should have 3 entries","suites":["LocationHistory","Switching tabs","tab1 > tab2 > tab1"],"updatePoint":{"line":117,"column":52},"line":117,"code":"      it('then locationHistory should have 3 entries', () =>\n        expect((locationHistory as any).locationHistory.length).toEqual(3));","file":"LocationHistory.spec.ts","skipped":false,"dir":"packages/react/src/routing/__tests__"},{"name":"then tab1 and tab2 should have one entry","suites":["LocationHistory","Switching tabs","tab1 > tab2 > tab1"],"updatePoint":{"line":120,"column":50},"line":120,"code":"      it('then tab1 and tab2 should have one entry', () => {\n        expect((locationHistory as any).tabHistory['tab1'].length).toEqual(1);\n        expect((locationHistory as any).tabHistory['tab2'].length).toEqual(1);\n      });","file":"LocationHistory.spec.ts","skipped":false,"dir":"packages/react/src/routing/__tests__"},{"name":"when going back, then locationHistory should have 2 entries","suites":["LocationHistory","Switching tabs","tab1 > tab2 > tab3 > Back"],"updatePoint":{"line":137,"column":69},"line":137,"code":"      it('when going back, then locationHistory should have 2 entries', () => {\n        expect((locationHistory as any).locationHistory.length).toEqual(2);\n      });","file":"LocationHistory.spec.ts","skipped":false,"dir":"packages/react/src/routing/__tests__"},{"name":"when going back, then tab1, tab2, and tab3 should have one entry","suites":["LocationHistory","Switching tabs","tab1 > tab2 > tab3 > Back"],"updatePoint":{"line":141,"column":74},"line":141,"code":"      it('when going back, then tab1, tab2, and tab3 should have one entry', () => {\n        expect((locationHistory as any).tabHistory['tab1'].length).toEqual(1);\n        expect((locationHistory as any).tabHistory['tab2'].length).toEqual(1);\n        expect((locationHistory as any).tabHistory['tab3'].length).toEqual(1);\n      });","file":"LocationHistory.spec.ts","skipped":false,"dir":"packages/react/src/routing/__tests__"},{"name":"then should be at details3","suites":["LocationHistory","Replacing history","tab1 > tab1/details/1, tab1/details/2, Replace to tab1/details/3"],"updatePoint":{"line":162,"column":36},"line":162,"code":"      it('then should be at details3', () => {\n        expect(currentRoute().pathname).toEqual('/tab1/details/3');\n      });","file":"LocationHistory.spec.ts","skipped":false,"dir":"packages/react/src/routing/__tests__"},{"name":"tab1 history should have 3 entries and they should have correct paths","suites":["LocationHistory","Replacing history","tab1 > tab1/details/1, tab1/details/2, Replace to tab1/details/3"],"updatePoint":{"line":166,"column":79},"line":166,"code":"      it('tab1 history should have 3 entries and they should have correct paths', () => {\n        expect((locationHistory as any).tabHistory['tab1'].length).toEqual(3);\n        expect((locationHistory as any).tabHistory['tab1'][0].pathname).toEqual('/tab1');\n        expect((locationHistory as any).tabHistory['tab1'][1].pathname).toEqual('/tab1/details/1');\n        expect((locationHistory as any).tabHistory['tab1'][2].pathname).toEqual('/tab1/details/3');\n      });","file":"LocationHistory.spec.ts","skipped":false,"dir":"packages/react/src/routing/__tests__"},{"name":"locationHistory should have 3 entries and they should have correct paths","suites":["LocationHistory","Replacing history","tab1 > tab1/details/1, tab1/details/2, Replace to tab1/details/3"],"updatePoint":{"line":173,"column":82},"line":173,"code":"      it('locationHistory should have 3 entries and they should have correct paths', () => {\n        expect((locationHistory as any).locationHistory.length).toEqual(3);\n        expect((locationHistory as any).locationHistory[0].pathname).toEqual('/tab1');\n        expect((locationHistory as any).locationHistory[1].pathname).toEqual('/tab1/details/1');\n        expect((locationHistory as any).locationHistory[2].pathname).toEqual('/tab1/details/3');\n      });","file":"LocationHistory.spec.ts","skipped":false,"dir":"packages/react/src/routing/__tests__"},{"name":"should render the root page","suites":["IonNav"],"updatePoint":{"line":5,"column":33,"index":117},"line":5,"code":"  it('should render the root page', () => {\n    cy.get('ion-nav').contains('Page one content');\n  });","file":"integration/navigation/IonNav.spec.ts","skipped":false,"dir":"packages/react/test-app/cypress"},{"name":"should push a page","suites":["IonNav"],"updatePoint":{"line":8,"column":24,"index":210},"line":8,"code":"  it('should push a page', () => {\n    cy.get('ion-button').contains('Go to Page Two').click();\n    cy.get('#pageTwoContent').should('be.visible');\n    cy.get('ion-nav').contains('Page two content');\n  });","file":"integration/navigation/IonNav.spec.ts","skipped":false,"dir":"packages/react/test-app/cypress"},{"name":"should pop a page","suites":["IonNav"],"updatePoint":{"line":13,"column":23,"index":415},"line":13,"code":"  it('should pop a page', () => {\n    cy.get('ion-button').contains('Go to Page Two').click();\n    cy.get('#pageTwoContent').should('be.visible');\n    cy.get('ion-nav').contains('Page two content');\n    cy.get('.ion-page.can-go-back ion-back-button').click();\n    cy.get('#pageOneContent').should('be.visible');\n    cy.get('ion-nav').contains('Page one content');\n  });","file":"integration/navigation/IonNav.spec.ts","skipped":false,"dir":"packages/react/test-app/cypress"},{"name":"display action sheet","suites":["IonActionSheet"],"updatePoint":{"line":5,"column":26,"index":138},"line":5,"code":"  it('display action sheet', () => {\n    //show action sheet\n    cy.get('ion-button').contains('Show ActionSheet').click();\n    cy.get('ion-action-sheet').contains('Action Sheet');\n    cy.get('ion-action-sheet').get('button').contains('Ok');\n    cy.get('ion-action-sheet').get('button').contains('Cancel'); //click ok\n\n    cy.get('ion-action-sheet').get('button:contains(\"Ok\")').click();\n    cy.get('div').contains('Ok clicked');\n    cy.get('ion-action-sheet').should('not.exist');\n  });","file":"integration/overlay-components/IonActionSheet.spec.ts","skipped":false,"dir":"packages/react/test-app/cypress"},{"name":"display action and call dismiss to close it","suites":["IonActionSheet"],"updatePoint":{"line":16,"column":49,"index":649},"line":16,"code":"  it('display action and call dismiss to close it', () => {\n    //show action sheet\n    cy.get('ion-button').contains('Show ActionSheet, hide after 250 ms').click();\n    cy.get('ion-action-sheet').contains('Action Sheet'); //verify action sheet is gone\n\n    cy.get('ion-action-sheet').should('not.exist');\n  });","file":"integration/overlay-components/IonActionSheet.spec.ts","skipped":false,"dir":"packages/react/test-app/cypress"},{"name":"display alert","suites":["IonAlert"],"updatePoint":{"line":5,"column":19,"index":119},"line":5,"code":"  it('display alert', () => {\n    //show alert\n    cy.get('ion-button').contains('Show Alert').click();\n    cy.get('ion-alert').contains('Alert');\n    cy.get('ion-alert').get('button').contains('Ok');\n    cy.get('ion-alert').get('button').contains('Cancel'); //click ok\n\n    cy.get('ion-alert').get('button:contains(\"Ok\")').click();\n    cy.get('div').contains('Ok clicked');\n    cy.get('ion-alert').should('not.exist');\n  });","file":"integration/overlay-components/IonAlert.spec.ts","skipped":false,"dir":"packages/react/test-app/cypress"},{"name":"display alert and call dismiss to close it","suites":["IonAlert"],"updatePoint":{"line":16,"column":48,"index":574},"line":16,"code":"  it('display alert and call dismiss to close it', () => {\n    //show alert\n    cy.get('ion-button').contains('Show Alert, hide after 250 ms').click();\n    cy.get('ion-alert').contains('Alert'); //verify alert is gone\n\n    cy.get('ion-alert').should('not.exist');\n  });","file":"integration/overlay-components/IonAlert.spec.ts","skipped":false,"dir":"packages/react/test-app/cypress"},{"name":"display loading","suites":["IonLoading"],"updatePoint":{"line":5,"column":21,"index":125},"line":5,"code":"  it('display loading', () => {\n    //show loading\n    cy.get('ion-button').contains('Show Loading').click();\n    cy.get('ion-loading').contains('Loading'); //loading goes away after 1s\n\n    cy.get('ion-loading').should('not.exist');\n  });","file":"integration/overlay-components/IonLoading.spec.ts","skipped":false,"dir":"packages/react/test-app/cypress"},{"name":"display loading and call dismiss to close it","suites":["IonLoading"],"updatePoint":{"line":12,"column":50,"index":394},"line":12,"code":"  it('display loading and call dismiss to close it', () => {\n    //show loading\n    cy.get('ion-button').contains('Show Loading, hide after 250 ms').click();\n    cy.get('ion-loading').contains('Loading'); //verify loading is gone\n\n    cy.get('ion-loading').should('not.exist');\n  });","file":"integration/overlay-components/IonLoading.spec.ts","skipped":false,"dir":"packages/react/test-app/cypress"},{"name":"display modal","suites":["IonModal"],"updatePoint":{"line":5,"column":19,"index":119},"line":5,"code":"  it('display modal', () => {\n    //show modal\n    cy.get('ion-button').contains('Show Modal').click();\n    cy.get('ion-modal ion-title').contains('My Modal'); //increment count\n\n    cy.get('ion-button').contains('Increment Count').click();\n    cy.get('ion-button').contains('Increment Count').click();\n    cy.get('ion-modal').contains('Count in modal: 2'); //close modal\n\n    cy.get('ion-button').contains('Close').click(); //verify count on main page was updated\n\n    cy.contains('Count: 2');\n  });","file":"integration/overlay-components/IonModal.spec.ts","skipped":false,"dir":"packages/react/test-app/cypress"},{"name":"display modal and call dismiss to close it","suites":["IonModal"],"updatePoint":{"line":18,"column":48,"index":649},"line":18,"code":"  it('display modal and call dismiss to close it', () => {\n    //show modal\n    cy.get('ion-button').contains('Show Modal, hide after 250 ms').click();\n    cy.get('ion-modal ion-title').contains('My Modal');\n  });","file":"integration/overlay-components/IonModal.spec.ts","skipped":false,"dir":"packages/react/test-app/cypress"},{"name":"display modal with context","suites":["IonModal"],"updatePoint":{"line":23,"column":32,"index":847},"line":23,"code":"  it('display modal with context', () => {\n    //show modal\n    cy.get('ion-button').contains('Show Modal with Context').click(); //verify context value is overriden value\n\n    cy.get('ion-modal div').contains('overriden value');\n  });","file":"integration/overlay-components/IonModal.spec.ts","skipped":false,"dir":"packages/react/test-app/cypress"},{"name":"display picker","suites":["IonPicker"],"updatePoint":{"line":10,"column":20,"index":290},"line":10,"code":"  it('display picker', () => {\n    //show picker\n    cy.get('ion-button').contains('Show Picker').click();\n    cy.get('ion-picker').contains('Bird').click();\n    cy.get('ion-picker').contains('Bike').click();\n    cy.get('ion-picker button').contains('Confirm').click();\n    cy.get('ion-picker').should('not.exist'); //confirm value\n\n    cy.get('div').contains('Selected Value: bird, bike');\n  });","file":"integration/overlay-components/IonPicker.spec.ts","skipped":true,"dir":"packages/react/test-app/cypress"},{"name":"display picker and call dismiss to close it","suites":["IonPicker"],"updatePoint":{"line":20,"column":49,"index":716},"line":20,"code":"  it('display picker and call dismiss to close it', () => {\n    //show picker\n    cy.get('ion-button').contains('Show Picker, hide after 250 ms').click();\n    cy.get('ion-picker').contains('Cat'); //verify picker is gone\n\n    cy.get('ion-picker').should('not.exist');\n  });","file":"integration/overlay-components/IonPicker.spec.ts","skipped":true,"dir":"packages/react/test-app/cypress"},{"name":"display popover","suites":["IonPopover"],"updatePoint":{"line":5,"column":21,"index":125},"line":5,"code":"  it('display popover', () => {\n    //show popover\n    cy.get('ion-button').contains('Show Popover').click();\n    cy.get('ion-popover ion-list-header').contains('Ionic'); //close popover\n\n    cy.get('ion-item').contains('Close').click();\n  });","file":"integration/overlay-components/IonPopover.spec.ts","skipped":false,"dir":"packages/react/test-app/cypress"},{"name":"display popover and call dismiss to close it","suites":["IonPopover"],"updatePoint":{"line":12,"column":50,"index":398},"line":12,"code":"  it('display popover and call dismiss to close it', () => {\n    //show popover\n    cy.get('ion-button').contains('Show Popover, hide after 250 ms').click();\n    cy.get('ion-popover ion-list-header').contains('Ionic');\n  });","file":"integration/overlay-components/IonPopover.spec.ts","skipped":false,"dir":"packages/react/test-app/cypress"},{"name":"display popover and remove containing element","suites":["IonPopover"],"updatePoint":{"line":17,"column":51,"index":624},"line":17,"code":"  it('display popover and remove containing element', () => {\n    //show popover, remove containing item\n    cy.get('#openPopover').click();\n    cy.get('#removeItem').click(); //verify popover is gone\n\n    cy.get('#popoverInItem').should('not.exist');\n  });","file":"integration/overlay-components/IonPopover.spec.ts","skipped":false,"dir":"packages/react/test-app/cypress"},{"name":"display toast","suites":["IonToast"],"updatePoint":{"line":5,"column":19,"index":119},"line":5,"code":"  it('display toast', () => {\n    //show toast\n    cy.get('ion-button').contains('Show Toast').click();\n    cy.get('ion-toast');\n    cy.get('ion-toast').shadow().contains('Hello from a toast!');\n    cy.get('ion-toast').shadow().find('button').contains('hide').click();\n    cy.get('ion-toast').should('not.exist');\n  });","file":"integration/overlay-components/IonToast.spec.ts","skipped":false,"dir":"packages/react/test-app/cypress"},{"name":"display toast and call dismiss to close it","suites":["IonToast"],"updatePoint":{"line":13,"column":48,"index":468},"line":13,"code":"  it('display toast and call dismiss to close it', () => {\n    //show toast\n    cy.get('ion-button').contains('Show Toast, call dismiss in 250 ms').click();\n    cy.get('ion-toast');\n    cy.get('ion-toast').shadow().contains('Hello from a toast!');\n    cy.get('ion-toast').should('not.exist');\n  });","file":"integration/overlay-components/IonToast.spec.ts","skipped":false,"dir":"packages/react/test-app/cypress"},{"name":"display action sheet using options","suites":["useIonActionSheet"],"updatePoint":{"line":5,"column":40,"index":150},"line":5,"code":"  it('display action sheet using options', () => {\n    //show action sheet\n    cy.get('ion-button').contains('Show ActionSheet with options').click();\n    cy.get('ion-action-sheet').contains('Action Sheet');\n    cy.get('ion-action-sheet').get('button').contains('Ok');\n    cy.get('ion-action-sheet').get('button').contains('Cancel'); //click ok\n\n    cy.get('ion-action-sheet').get('button:contains(\"Ok\")').click();\n    cy.get('div').contains('Ok clicked');\n    cy.get('ion-action-sheet').should('not.exist');\n  });","file":"integration/overlay-hooks/useIonActionSheet.spec.ts","skipped":false,"dir":"packages/react/test-app/cypress"},{"name":"display action sheet using params","suites":["useIonActionSheet"],"updatePoint":{"line":16,"column":39,"index":664},"line":16,"code":"  it('display action sheet using params', () => {\n    //show action sheet\n    cy.get('ion-button').contains('Show ActionSheet with params').click();\n    cy.get('ion-action-sheet').contains('Action Sheet');\n    cy.get('ion-action-sheet').get('button').contains('Ok');\n    cy.get('ion-action-sheet').get('button').contains('Cancel'); //click ok\n\n    cy.get('ion-action-sheet').get('button:contains(\"Ok\")').click();\n    cy.get('div').contains('Ok clicked');\n    cy.get('ion-action-sheet').should('not.exist');\n  });","file":"integration/overlay-hooks/useIonActionSheet.spec.ts","skipped":false,"dir":"packages/react/test-app/cypress"},{"name":"display action and call dismiss to close it","suites":["useIonActionSheet"],"updatePoint":{"line":27,"column":49,"index":1187},"line":27,"code":"  it('display action and call dismiss to close it', () => {\n    //show action sheet\n    cy.get('ion-button').contains('Show ActionSheet, hide after 250 ms').click();\n    cy.get('ion-action-sheet').contains('Action Sheet'); //verify action sheet is gone\n\n    cy.get('ion-action-sheet').should('not.exist');\n  });","file":"integration/overlay-hooks/useIonActionSheet.spec.ts","skipped":false,"dir":"packages/react/test-app/cypress"},{"name":"display alert using options","suites":["useIonAlert"],"updatePoint":{"line":5,"column":33,"index":131},"line":5,"code":"  it('display alert using options', () => {\n    //show alert\n    cy.get('ion-button').contains('Show Alert with options').click();\n    cy.get('ion-alert').contains('Alert');\n    cy.get('ion-alert').get('button').contains('Ok');\n    cy.get('ion-alert').get('button').contains('Cancel'); //click ok\n\n    cy.get('ion-alert').get('button:contains(\"Ok\")').click();\n    cy.get('div').contains('Ok clicked');\n    cy.get('ion-alert').should('not.exist');\n  });","file":"integration/overlay-hooks/useIonAlert.spec.ts","skipped":false,"dir":"packages/react/test-app/cypress"},{"name":"display alert using params","suites":["useIonAlert"],"updatePoint":{"line":16,"column":32,"index":583},"line":16,"code":"  it('display alert using params', () => {\n    //show alert\n    cy.get('ion-button').contains('Show Alert with params').click();\n    cy.get('ion-alert').contains('Hello!');\n    cy.get('ion-alert').get('button').contains('Ok'); //click ok\n\n    cy.get('ion-alert').get('button:contains(\"Ok\")').click();\n    cy.get('div').contains('Ok clicked');\n    cy.get('ion-alert').should('not.exist');\n  });","file":"integration/overlay-hooks/useIonAlert.spec.ts","skipped":false,"dir":"packages/react/test-app/cypress"},{"name":"display alert and call dismiss to close it","suites":["useIonAlert"],"updatePoint":{"line":26,"column":48,"index":993},"line":26,"code":"  it('display alert and call dismiss to close it', () => {\n    //show alert\n    cy.get('ion-button').contains('Show Alert, hide after 250 ms').click();\n    cy.get('ion-alert').contains('Hello!'); //verify alert is gone\n\n    cy.get('ion-alert').should('not.exist');\n  });","file":"integration/overlay-hooks/useIonAlert.spec.ts","skipped":false,"dir":"packages/react/test-app/cypress"},{"name":"display loading using options","suites":["useIonLoading"],"updatePoint":{"line":5,"column":35,"index":137},"line":5,"code":"  it('display loading using options', () => {\n    //show loading\n    cy.get('ion-button').contains('Show Loading with options').click();\n    cy.get('ion-loading').contains('Loading'); //loading goes away after 1s\n\n    cy.get('ion-loading').should('not.exist');\n  });","file":"integration/overlay-hooks/useIonLoading.spec.ts","skipped":false,"dir":"packages/react/test-app/cypress"},{"name":"display loading using params","suites":["useIonLoading"],"updatePoint":{"line":12,"column":34,"index":403},"line":12,"code":"  it('display loading using params', () => {\n    //show loading\n    cy.get('ion-button').contains('Show Loading with params').click();\n    cy.get('ion-loading').contains('Loading'); //loading goes away after 1s\n\n    cy.get('ion-loading').should('not.exist');\n  });","file":"integration/overlay-hooks/useIonLoading.spec.ts","skipped":false,"dir":"packages/react/test-app/cypress"},{"name":"display loading and call dismiss to close it","suites":["useIonLoading"],"updatePoint":{"line":19,"column":50,"index":684},"line":19,"code":"  it('display loading and call dismiss to close it', () => {\n    //show loading\n    cy.get('ion-button').contains('Show Loading, hide after 250 ms').click();\n    cy.get('ion-loading').contains('Loading'); //verify loading is gone\n\n    cy.get('ion-loading').should('not.exist');\n  });","file":"integration/overlay-hooks/useIonLoading.spec.ts","skipped":false,"dir":"packages/react/test-app/cypress"},{"name":"display modal using component param","suites":["useIonModal"],"updatePoint":{"line":5,"column":41,"index":139},"line":5,"code":"  it('display modal using component param', () => {\n    //show modal\n    cy.get('ion-button').contains('Show Modal using component param').click();\n    cy.get('ion-modal ion-title').contains('My Component Modal'); //increment count\n\n    cy.get('ion-button').contains('Increment Count').click();\n    cy.get('ion-button').contains('Increment Count').click();\n    cy.get('ion-modal').contains('Count in modal: 2'); //close modal\n\n    cy.get('ion-button').contains('Close').click();\n    cy.get('ion-modal').should('not.exist'); //verify count on main page was updated\n\n    cy.contains('Count: 2');\n  });","file":"integration/overlay-hooks/useIonModal.spec.ts","skipped":false,"dir":"packages/react/test-app/cypress"},{"name":"display modal using element param","suites":["useIonModal"],"updatePoint":{"line":19,"column":39,"index":737},"line":19,"code":"  it('display modal using element param', () => {\n    //show modal\n    cy.get('ion-button').contains('Show Modal using element param').click();\n    cy.get('ion-modal ion-title').contains('My Element Modal'); //increment count\n\n    cy.get('ion-button').contains('Increment Count').click();\n    cy.get('ion-button').contains('Increment Count').click();\n    cy.get('ion-modal').contains('Count in modal: 2'); //close modal\n\n    cy.get('ion-button').contains('Close').click();\n    cy.get('ion-modal').should('not.exist'); //verify count on main page was updated\n\n    cy.contains('Count: 2');\n  });","file":"integration/overlay-hooks/useIonModal.spec.ts","skipped":false,"dir":"packages/react/test-app/cypress"},{"name":"display modal and call dismiss to close it","suites":["useIonModal"],"updatePoint":{"line":33,"column":48,"index":1340},"line":33,"code":"  it('display modal and call dismiss to close it', () => {\n    //show modal\n    cy.get('ion-button').contains('Show Modal, hide after 250 ms').click();\n    cy.get('ion-modal ion-title').contains('My Element Modal'); //verify modal is gone\n\n    cy.get('ion-modal').should('not.exist');\n  });","file":"integration/overlay-hooks/useIonModal.spec.ts","skipped":false,"dir":"packages/react/test-app/cypress"},{"name":"display modal and dismiss with data and role","suites":["useIonModal"],"updatePoint":{"line":40,"column":50,"index":1633},"line":40,"code":"  it('display modal and dismiss with data and role', () => {\n    //show modal\n    cy.get('ion-button').contains('Show Modal using component param').click(); //close modal\n\n    cy.get('ion-button').contains('Close').click();\n    cy.get('ion-modal').should('not.exist'); //verify role and data on main page was updated\n\n    cy.contains('Dismissed with role: close');\n    cy.contains('Data: {\"test\":true}');\n  }); // This test should pass in v6, skipping until merged with v6","file":"integration/overlay-hooks/useIonModal.spec.ts","skipped":false,"dir":"packages/react/test-app/cypress"},{"name":"display modal with context","suites":["useIonModal"],"line":51,"code":"  it.skip('display modal with context', () => {","file":"integration/overlay-hooks/useIonModal.spec.ts","skipped":true,"dir":"packages/react/test-app/cypress"},{"name":"display picker using options","suites":["useIonPicker"],"updatePoint":{"line":10,"column":34,"index":302},"line":10,"code":"  it('display picker using options', () => {\n    //show picker\n    cy.get('ion-button').contains('Show Picker with options').click();\n    cy.get('ion-picker').contains('Cat').click();\n    cy.get('ion-picker button').contains('Confirm').click();\n    cy.get('ion-picker').should('not.exist'); //confirm value\n\n    cy.get('div').contains('Selected Value: cat');\n  });","file":"integration/overlay-hooks/useIonPicker.spec.ts","skipped":true,"dir":"packages/react/test-app/cypress"},{"name":"display picker using params","suites":["useIonPicker"],"updatePoint":{"line":19,"column":33,"index":666},"line":19,"code":"  it('display picker using params', () => {\n    //show picker\n    cy.get('ion-button').contains('Show Picker with params').click();\n    cy.get('ion-picker').contains('Bird').click();\n    cy.get('ion-picker').contains('Bike').click();\n    cy.get('ion-picker button').contains('Confirm').click();\n    cy.get('ion-picker').should('not.exist'); //confirm value\n\n    cy.get('div').contains('Selected Value: bird, bike');\n  });","file":"integration/overlay-hooks/useIonPicker.spec.ts","skipped":true,"dir":"packages/react/test-app/cypress"},{"name":"display picker and call dismiss to close it","suites":["useIonPicker"],"updatePoint":{"line":29,"column":49,"index":1104},"line":29,"code":"  it('display picker and call dismiss to close it', () => {\n    //show picker\n    cy.get('ion-button').contains('Show Picker, hide after 250 ms').click();\n    cy.get('ion-picker').contains('Cat'); //verify picker is gone\n\n    cy.get('ion-picker').should('not.exist');\n  });","file":"integration/overlay-hooks/useIonPicker.spec.ts","skipped":true,"dir":"packages/react/test-app/cypress"},{"name":"display popover using component param","suites":["useIonPopover"],"updatePoint":{"line":5,"column":43,"index":145},"line":5,"code":"  it('display popover using component param', () => {\n    //show popover\n    cy.get('ion-button').contains('Show Popover with component param').click();\n    cy.get('ion-popover ion-list-header').contains('Ionic'); //close popover\n\n    cy.get('ion-item').contains('Close').click();\n    cy.get('ion-popover').should('not.exist');\n  });","file":"integration/overlay-hooks/useIonPopover.spec.ts","skipped":false,"dir":"packages/react/test-app/cypress"},{"name":"display popover using element param","suites":["useIonPopover"],"updatePoint":{"line":13,"column":41,"index":477},"line":13,"code":"  it('display popover using element param', () => {\n    //show popover\n    cy.get('ion-button').contains('Show Popover with element param').click();\n    cy.get('ion-popover ion-list-header').contains('Ionic'); //close popover\n\n    cy.get('ion-item').contains('Close').click();\n    cy.get('ion-popover').should('not.exist');\n  });","file":"integration/overlay-hooks/useIonPopover.spec.ts","skipped":false,"dir":"packages/react/test-app/cypress"},{"name":"display popover and call dismiss to close it","suites":["useIonPopover"],"updatePoint":{"line":21,"column":50,"index":816},"line":21,"code":"  it('display popover and call dismiss to close it', () => {\n    //show popover\n    cy.get('ion-button').contains('Show Popover, hide after 250 ms').click();\n    cy.get('ion-popover ion-list-header').contains('Ionic'); //verify popover is gone\n\n    cy.get('ion-popover').should('not.exist');\n  });","file":"integration/overlay-hooks/useIonPopover.spec.ts","skipped":false,"dir":"packages/react/test-app/cypress"},{"name":"display toast using options","suites":["useIonToast"],"updatePoint":{"line":5,"column":33,"index":131},"line":5,"code":"  it('display toast using options', () => {\n    //show toast\n    cy.get('ion-button').contains('Show Toast with options').click();\n    cy.get('ion-toast');\n    cy.get('ion-toast').shadow().contains('toast from hook, click hide to dismiss');\n    cy.get('ion-toast').shadow().find('button').contains('hide').click();\n    cy.get('ion-toast').should('not.exist');\n  });","file":"integration/overlay-hooks/useIonToast.spec.ts","skipped":false,"dir":"packages/react/test-app/cypress"},{"name":"display toast using params","suites":["useIonToast"],"updatePoint":{"line":13,"column":32,"index":496},"line":13,"code":"  it('display toast using params', () => {\n    cy.get('ion-button').contains('Show Toast Hook with params, closes in 250 ms').click();\n    cy.get('ion-toast');\n    cy.get('ion-toast').shadow().contains('Hello from a toast!');\n    cy.get('ion-toast').should('not.exist');\n  });","file":"integration/overlay-hooks/useIonToast.spec.ts","skipped":false,"dir":"packages/react/test-app/cypress"},{"name":"display toast and call dismiss to close it","suites":["useIonToast"],"updatePoint":{"line":19,"column":48,"index":789},"line":19,"code":"  it('display toast and call dismiss to close it', () => {\n    //show toast\n    cy.get('ion-button').contains('Show Toast Hook with params, call dismiss in 250 ms').click();\n    cy.get('ion-toast');\n    cy.get('ion-toast').shadow().contains('Hello from a toast!');\n    cy.get('ion-toast').should('not.exist');\n  });","file":"integration/overlay-hooks/useIonToast.spec.ts","skipped":false,"dir":"packages/react/test-app/cypress"},{"name":"should handle onClick handlers on IonTabButton","suites":["IonTabs"],"updatePoint":{"line":5,"column":52,"index":136},"line":5,"code":"  it('should handle onClick handlers on IonTabButton', () => {\n    const stub = cy.stub();\n    cy.on('window:alert', stub);\n    cy.get('ion-tab-button[tab=\"tab1\"]').click().then(() => {\n      expect(stub.getCall(0)).to.be.calledWith('Tab was clicked');\n    });\n  });","file":"integration/tabs/tabs.spec.ts","skipped":false,"dir":"packages/react/test-app/cypress"},{"name":"should correctly add an item to location history","suites":["Location History"],"updatePoint":{"line":9,"column":54},"line":9,"code":"  it('should correctly add an item to location history', () => {\n    locationHistory.add({ pathname: '/' });\n    expect(locationHistory.canGoBack(1)).toEqual(false);\n  });","file":"locationHistory.spec.ts","skipped":false,"dir":"packages/vue-router/__tests__"},{"name":"should correctly replace an item to location history","suites":["Location History"],"updatePoint":{"line":14,"column":58},"line":14,"code":"  it('should correctly replace an item to location history', () => {\n    locationHistory.add({ pathname: '/home' });\n    locationHistory.add({ pathname: '/login', routerAction: 'replace' });\n\n    const current = locationHistory.last();\n    expect(current.pathname).toEqual('/login');\n  });","file":"locationHistory.spec.ts","skipped":false,"dir":"packages/vue-router/__tests__"},{"name":"should correctly pop an item from location history","suites":["Location History"],"updatePoint":{"line":22,"column":56},"line":22,"code":"  it('should correctly pop an item from location history', () => {\n    locationHistory.add({ pathname: '/home' });\n    locationHistory.add({ pathname: '/login', routerAction: 'pop' });\n\n    const current = locationHistory.last();\n    expect(current.pathname).toEqual('/login');\n    expect(locationHistory.canGoBack(1)).toEqual(false);\n  });","file":"locationHistory.spec.ts","skipped":false,"dir":"packages/vue-router/__tests__"},{"name":"should correctly wipe location history when routerDirection is root","suites":["Location History"],"updatePoint":{"line":31,"column":73},"line":31,"code":"  it('should correctly wipe location history when routerDirection is root', () => {\n    locationHistory.add({ pathname: '/home' });\n    locationHistory.add({ pathname: '/login' });\n    locationHistory.add({ pathname: '/logout', routerDirection: 'root' });\n\n    const current = locationHistory.last();\n    expect(current.pathname).toEqual('/logout');\n    expect(locationHistory.canGoBack(1)).toEqual(false);\n  });","file":"locationHistory.spec.ts","skipped":false,"dir":"packages/vue-router/__tests__"},{"name":"should correctly update a route","suites":["Location History"],"updatePoint":{"line":41,"column":37},"line":41,"code":"  it('should correctly update a route', () => {\n    locationHistory.add({ id: '1', pathname: '/tabs/tab1', tab: 'tab1' });\n    locationHistory.add({ id: '2', pathname: '/tabs/tab2' });\n\n    const current = { ...locationHistory.last() };\n    current.tab = 'tab2';\n\n    locationHistory.update(current);\n\n    const getCurrentAgain = locationHistory.last();\n    expect(getCurrentAgain.tab).toEqual('tab2');\n  });","file":"locationHistory.spec.ts","skipped":false,"dir":"packages/vue-router/__tests__"},{"name":"should correctly get the first route for a tab","suites":["Location History"],"updatePoint":{"line":54,"column":52},"line":54,"code":"  it('should correctly get the first route for a tab', () => {\n    locationHistory.add({ id: '1', pathname: '/tabs/tab1', tab: 'tab1' });\n    locationHistory.add({ id: '2', pathname: '/tabs/tab1/child', tab: 'tab1' });\n    locationHistory.add({ id: '2', pathname: '/tabs/tab1/child/1', tab: 'tab1' });\n\n    const first = locationHistory.getFirstRouteInfoForTab('tab1');\n    expect(first.pathname).toEqual('/tabs/tab1');\n  });","file":"locationHistory.spec.ts","skipped":false,"dir":"packages/vue-router/__tests__"},{"name":"should correctly get the current route for a tab","suites":["Location History"],"updatePoint":{"line":63,"column":54},"line":63,"code":"  it('should correctly get the current route for a tab', () => {\n    locationHistory.add({ id: '1', pathname: '/tabs/tab1', tab: 'tab1' });\n    locationHistory.add({ id: '2', pathname: '/tabs/tab1/child', tab: 'tab1' });\n    locationHistory.add({ id: '2', pathname: '/tabs/tab1/child/1', tab: 'tab1' });\n\n    const first = locationHistory.getCurrentRouteInfoForTab('tab1');\n    expect(first.pathname).toEqual('/tabs/tab1/child/1');\n  });","file":"locationHistory.spec.ts","skipped":false,"dir":"packages/vue-router/__tests__"},{"name":"should correctly get last route","suites":["Location History"],"updatePoint":{"line":72,"column":37},"line":72,"code":"  it('should correctly get last route', () => {\n    locationHistory.add({ pathname: '/home' });\n    locationHistory.add({ pathname: '/login' });\n\n    const current = locationHistory.last();\n    expect(current.pathname).toEqual('/login');\n  });","file":"locationHistory.spec.ts","skipped":false,"dir":"packages/vue-router/__tests__"},{"name":"should correctly determine if we can go back","suites":["Location History"],"updatePoint":{"line":80,"column":50},"line":80,"code":"  it('should correctly determine if we can go back', () => {\n    locationHistory.add({ pathname: '/home' });\n    locationHistory.add({ pathname: '/login' });\n\n    expect(locationHistory.canGoBack(1, 0, 1)).toEqual(true);\n    expect(locationHistory.canGoBack(2, 0, 1)).toEqual(false);\n  });","file":"locationHistory.spec.ts","skipped":false,"dir":"packages/vue-router/__tests__"},{"name":"should create a view item","suites":["View Stacks"],"updatePoint":{"line":15,"column":31},"line":15,"code":"  it('should create a view item', () => {\n    const item = viewStacks.createViewItem(\n      '1',\n      () => {},\n      { path: '/mockMatchedRoute' },\n      { pathname: '/home' }\n    );\n\n    expect(item.outletId).toEqual('1');\n    expect(item.matchedRoute).toEqual({ path: '/mockMatchedRoute' });\n    expect(item.pathname).toEqual('/home');\n  });","file":"viewStacks.spec.ts","skipped":false,"dir":"packages/vue-router/__tests__"},{"name":"should add a view item","suites":["View Stacks"],"updatePoint":{"line":28,"column":28},"line":28,"code":"  it('should add a view item', () => {\n    const item = viewStacks.createViewItem(\n      '1',\n      () => {},\n      { path: '/mockMatchedRoute' },\n      { pathname: '/home' }\n    );\n\n    viewStacks.add(item);\n    const viewItem = viewStacks.findViewItemByRouteInfo({ pathname: '/home' }, '1');\n    expect(viewItem).toEqual(item);\n  });","file":"viewStacks.spec.ts","skipped":false,"dir":"packages/vue-router/__tests__"},{"name":"should register an ion page","suites":["View Stacks"],"updatePoint":{"line":41,"column":33},"line":41,"code":"  it('should register an ion page', () => {\n    const item = viewStacks.createViewItem(\n      '1',\n      () => {},\n      { path: '/mockMatchedRoute' },\n      { pathname: '/home' }\n    );\n\n    viewStacks.add(item);\n\n    const ionPage = document.createElement('div');\n    ionPage.classList.add('ion-page');\n\n    viewStacks.registerIonPage(item, ionPage);\n\n    const viewItem = viewStacks.findViewItemByRouteInfo({ pathname: '/home' }, '1');\n    expect(viewItem.ionPageElement).toEqual(ionPage);\n  });","file":"viewStacks.spec.ts","skipped":false,"dir":"packages/vue-router/__tests__"},{"name":"should get view item by route info","suites":["View Stacks"],"updatePoint":{"line":60,"column":40},"line":60,"code":"  it('should get view item by route info', () => {\n    const itemA = createRegisteredViewItem(viewStacks, '1', '/home');\n    const itemB = createRegisteredViewItem(viewStacks, '2', '/dashboard');\n\n    const getViewItem = viewStacks.findViewItemByRouteInfo({ pathname: '/dashboard', outletId: '2' });\n    expect(getViewItem.id).toEqual(itemB.id);\n\n    const getViewItemAgain = viewStacks.findViewItemByRouteInfo({ pathname: '/dashboard' });\n    expect(getViewItemAgain.id).toEqual(itemB.id);\n  });","file":"viewStacks.spec.ts","skipped":false,"dir":"packages/vue-router/__tests__"},{"name":"should get leaving view by route info","suites":["View Stacks"],"updatePoint":{"line":71,"column":43},"line":71,"code":"  it('should get leaving view by route info', () => {\n    const itemA = createRegisteredViewItem(viewStacks, '1', '/home');\n    const itemB = createRegisteredViewItem(viewStacks, '2', '/dashboard');\n\n    const getLeavingView = viewStacks.findLeavingViewItemByRouteInfo({ pathname: '/home', lastPathname: '/dashboard', matchedRoute: { path: '/home' } });\n\n    expect(getLeavingView).toEqual(itemB);\n  });","file":"viewStacks.spec.ts","skipped":false,"dir":"packages/vue-router/__tests__"},{"name":"should get children to render","suites":["View Stacks"],"updatePoint":{"line":80,"column":35},"line":80,"code":"  it('should get children to render', () => {\n    const itemA = createRegisteredViewItem(viewStacks);\n    const itemB = createRegisteredViewItem(viewStacks);\n    const itemC = createRegisteredViewItem(viewStacks);\n\n    itemA.mount = itemC.mount = true;\n\n    const routes = viewStacks.getChildrenToRender(1);\n    expect(routes).toEqual([\n      itemA,\n      itemC\n    ]);\n  });","file":"viewStacks.spec.ts","skipped":false,"dir":"packages/vue-router/__tests__"},{"name":"should clear a stack","suites":["View Stacks"],"updatePoint":{"line":94,"column":26},"line":94,"code":"  it('should clear a stack', () => {\n    const itemA = createRegisteredViewItem(viewStacks, 2);\n    const itemB = createRegisteredViewItem(viewStacks, 2);\n\n    const viewItems = viewStacks.getViewStack(2);\n    expect(viewItems.length).toEqual(2);\n\n    viewStacks.clear('2');\n\n    const viewItemsAgain = viewStacks.getViewStack(2);\n    expect(viewItemsAgain).toEqual(undefined);\n  });","file":"viewStacks.spec.ts","skipped":false,"dir":"packages/vue-router/__tests__"},{"name":"should unmount orphaned views","suites":["View Stacks"],"updatePoint":{"line":107,"column":35},"line":107,"code":"  it('should unmount orphaned views', () => {\n    const itemA = createRegisteredViewItem(viewStacks, 1, '/home/1', true);\n    const itemB = createRegisteredViewItem(viewStacks, 1, '/home/2', true);\n    const itemC = createRegisteredViewItem(viewStacks, 1, '/home/3', true);\n    const itemD = createRegisteredViewItem(viewStacks, 1, '/home/4', true);\n\n    viewStacks.unmountLeavingViews(1, itemA, -3);\n\n    expect(itemB.mount).toEqual(false);\n    expect(itemB.ionPageElement).toEqual(undefined);\n    expect(itemB.ionRoute).toEqual(false);\n\n    expect(itemC.mount).toEqual(false);\n    expect(itemC.ionPageElement).toEqual(undefined);\n    expect(itemC.ionRoute).toEqual(false);\n  });","file":"viewStacks.spec.ts","skipped":false,"dir":"packages/vue-router/__tests__"},{"name":"should remount intermediary views","suites":["View Stacks"],"updatePoint":{"line":124,"column":39},"line":124,"code":"  it('should remount intermediary views', () => {\n    const itemA = createRegisteredViewItem(viewStacks);\n    const itemB = createRegisteredViewItem(viewStacks);\n    const itemC = createRegisteredViewItem(viewStacks);\n    const itemD = createRegisteredViewItem(viewStacks);\n\n    viewStacks.mountIntermediaryViews(1, itemA, 3);\n\n    expect(itemB.mount).toEqual(true);\n    expect(itemC.mount).toEqual(true);\n  });","file":"viewStacks.spec.ts","skipped":false,"dir":"packages/vue-router/__tests__"}]}