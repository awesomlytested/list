{"repo":"segmentio/nightmare","url":"https://github.com/segmentio/nightmare","branch":"master","configs":[{"package":"nightmare","lang":"js","dir":"test","framework":"mocha","pattern":"**/*.{js,ts}"}],"tests":[{"name":"should be constructable","suites":["Nightmare"],"updatePoint":{"line":51,"column":29,"index":1116},"line":51,"code":"  it('should be constructable', function* () {\n    var nightmare = Nightmare();\n    nightmare.should.be.ok;\n    yield nightmare.end();\n  });","file":"index.js","skipped":false,"dir":"test"},{"name":"should have version information","suites":["Nightmare"],"updatePoint":{"line":56,"column":37,"index":1265},"line":56,"code":"  it('should have version information', function* () {\n    var nightmare = Nightmare();\n    var versions = yield nightmare.engineVersions();\n    nightmare.engineVersions.electron.should.be.ok;\n    nightmare.engineVersions.chrome.should.be.ok;\n    versions.electron.should.be.ok;\n    versions.chrome.should.be.ok;\n    Nightmare.version.should.be.ok;\n    yield nightmare.end();\n  });","file":"index.js","skipped":false,"dir":"test"},{"name":"should kill its electron process when it is killed","suites":["Nightmare"],"updatePoint":{"line":66,"column":56,"index":1666},"line":66,"code":"  it('should kill its electron process when it is killed', function (done) {\n    var child = child_process.fork(path.join(__dirname, 'files', 'nightmare-unended.js'));\n    child.once('message', function (electronPid) {\n      child.once('exit', function () {\n        try {\n          electronPid.should.not.be.a.process;\n        } catch (error) {\n          // if the test failed, clean up the still-running process\n          process.kill(electronPid, 'SIGINT');\n          throw error;\n        }\n        done();\n      });\n      child.kill();\n    });\n  });","file":"index.js","skipped":false,"dir":"test"},{"name":"should gracefully handle electron being killed","suites":["Nightmare"],"updatePoint":{"line":82,"column":52,"index":2215},"line":82,"code":"  it('should gracefully handle electron being killed', function (done) {\n    var child = child_process.fork(path.join(__dirname, 'files', 'nightmare-unended.js'));\n    child.once('message', function (electronPid) {\n      process.kill(electronPid, 'SIGINT');\n      child.once('exit', function () {\n        electronPid.should.not.be.a.process;\n        done();\n      });\n    });\n  });","file":"index.js","skipped":false,"dir":"test"},{"name":"should end gracefully if the chain has not been started","suites":["Nightmare"],"updatePoint":{"line":92,"column":61,"index":2606},"line":92,"code":"  it('should end gracefully if the chain has not been started', function (done) {\n    var child = child_process.fork(path.join(__dirname, 'files', 'nightmare-created.js'));\n    child.once('message', function () {\n      child.once('exit', function (code) {\n        code.should.equal(0);\n        done();\n      });\n      child.kill();\n    });\n  });","file":"index.js","skipped":false,"dir":"test"},{"name":"should exit with a non-zero code on uncaughtExecption","suites":["Nightmare"],"updatePoint":{"line":102,"column":59,"index":2950},"line":102,"code":"  it('should exit with a non-zero code on uncaughtExecption', function (done) {\n    var child = child_process.fork(path.join(__dirname, 'files', 'nightmare-error.js'), [], {\n      silent: true\n    });\n    child.once('exit', function (code) {\n      code.should.not.equal(0);\n      done();\n    });\n  });","file":"index.js","skipped":false,"dir":"test"},{"name":"should provide a .catch function","suites":["Nightmare"],"updatePoint":{"line":111,"column":38,"index":3231},"line":111,"code":"  it('should provide a .catch function', function (done) {\n    var nightmare = Nightmare();\n    nightmare.goto('about:blank').evaluate(function () {\n      throw new Error('Test');\n    }).catch(function (err) {\n      assert.equal(err instanceof Error, true);\n      assert.equal(err.message, 'Test');\n      done();\n    });\n  });","file":"index.js","skipped":false,"dir":"test"},{"name":"should allow ending more than once","suites":["Nightmare"],"updatePoint":{"line":121,"column":40,"index":3560},"line":121,"code":"  it('should allow ending more than once', function (done) {\n    var nightmare = Nightmare();\n    nightmare.goto(fixture('navigation')).end().then(() => nightmare.end()).then(() => done());\n  });","file":"index.js","skipped":false,"dir":"test"},{"name":"should allow end with a callback","suites":["Nightmare"],"updatePoint":{"line":125,"column":38,"index":3754},"line":125,"code":"  it('should allow end with a callback', function (done) {\n    var nightmare = Nightmare();\n    nightmare.goto(fixture('navigation')).end(() => done());\n  });","file":"index.js","skipped":false,"dir":"test"},{"name":"should allow end with a callback to be thenable","suites":["Nightmare"],"updatePoint":{"line":129,"column":53,"index":3928},"line":129,"code":"  it('should allow end with a callback to be thenable', function (done) {\n    var nightmare = Nightmare();\n    nightmare.goto(fixture('navigation')).end(() => 'nightmare').then(str => {\n      str.should.equal('nightmare');\n      done();\n    });\n  });","file":"index.js","skipped":false,"dir":"test"},{"name":"should kill electron process when halted","suites":["Nightmare"],"updatePoint":{"line":136,"column":46,"index":4172},"line":136,"code":"  it('should kill electron process when halted', function () {\n    var nightmare = Nightmare();\n    const check1 = nightmare.goto(fixture('navigation')).wait(1000).wait(500).end().then(() => {}).should.be.rejectedWith('Nightmare Halted');\n    const electronPid = nightmare.proc.pid;\n    const check2 = new Promise((resolve, _reject) => {\n      nightmare.halt('Nightmare Halted', () => {\n        electronPid.should.not.be.a.process;\n        resolve();\n      });\n    });\n    return Promise.all([check1, check2]);\n  });","file":"index.js","skipped":false,"dir":"test"},{"name":"should successfully end on pages setting onunload or onbeforeunload","suites":["Nightmare"],"updatePoint":{"line":148,"column":73,"index":4716},"line":148,"code":"  it('should successfully end on pages setting onunload or onbeforeunload', function (done) {\n    var nightmare = Nightmare();\n    nightmare.goto(fixture('unload')).end().then(() => done());\n  });","file":"index.js","skipped":false,"dir":"test"},{"name":"should successfully end on pages binding unload or beforeunload","suites":["Nightmare"],"updatePoint":{"line":152,"column":69,"index":4909},"line":152,"code":"  it('should successfully end on pages binding unload or beforeunload', function (done) {\n    var nightmare = Nightmare();\n    nightmare.goto(fixture('unload/add-event-listener.html')).end().then(() => done());\n  });","file":"index.js","skipped":false,"dir":"test"},{"name":"should provide useful errors for .click","suites":["Nightmare"],"updatePoint":{"line":156,"column":45,"index":5102},"line":156,"code":"  it('should provide useful errors for .click', function (done) {\n    var nightmare = Nightmare();\n    nightmare.goto('about:blank').click('a.not-here').catch(function (err) {\n      assert.equal(err instanceof Error, true);\n      err.message.should.include('a.not-here');\n      done();\n    });\n  });","file":"index.js","skipped":false,"dir":"test"},{"name":"should provide useful errors for .mousedown","suites":["Nightmare"],"updatePoint":{"line":164,"column":49,"index":5406},"line":164,"code":"  it('should provide useful errors for .mousedown', function (done) {\n    var nightmare = Nightmare();\n    nightmare.goto('about:blank').mousedown('a.not-here').catch(function (err) {\n      assert.equal(err instanceof Error, true);\n      err.message.should.include('a.not-here');\n      done();\n    });\n  });","file":"index.js","skipped":false,"dir":"test"},{"name":"should provide useful errors for .mouseup","suites":["Nightmare"],"updatePoint":{"line":172,"column":47,"index":5712},"line":172,"code":"  it('should provide useful errors for .mouseup', function (done) {\n    var nightmare = Nightmare();\n    nightmare.goto('about:blank').mouseup('a.not-here').catch(function (err) {\n      assert.equal(err instanceof Error, true);\n      err.message.should.include('a.not-here');\n      done();\n    });\n  });","file":"index.js","skipped":false,"dir":"test"},{"name":"should provide useful errors for .mouseover","suites":["Nightmare"],"updatePoint":{"line":180,"column":49,"index":6018},"line":180,"code":"  it('should provide useful errors for .mouseover', function (done) {\n    var nightmare = Nightmare();\n    nightmare.goto('about:blank').mouseover('a.not-here').catch(function (err) {\n      assert.equal(err instanceof Error, true);\n      err.message.should.include('a.not-here');\n      done();\n    });\n  });","file":"index.js","skipped":false,"dir":"test"},{"name":"should return data about the response","suites":["Nightmare","navigation"],"updatePoint":{"line":203,"column":45,"index":6708},"line":203,"code":"    it('should return data about the response', function* () {\n      var data = yield nightmare.goto(fixture('navigation'));\n      data.should.contain.keys('url', 'code', 'method', 'referrer', 'headers');\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should reject with a useful message when no URL","suites":["Nightmare","navigation"],"updatePoint":{"line":207,"column":55,"index":6931},"line":207,"code":"    it('should reject with a useful message when no URL', function () {\n      return nightmare.goto(undefined).then(function () {\n        throw new Error('goto(undefined) didnâ€™t cause an error');\n      }, function (err) {\n        assert.equal(err instanceof Error, true);\n        err.message.should.include('url');\n      });\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should reject with a useful message for an empty URL","suites":["Nightmare","navigation"],"updatePoint":{"line":215,"column":60,"index":7269},"line":215,"code":"    it('should reject with a useful message for an empty URL', function () {\n      return nightmare.goto('').then(function () {\n        throw new Error('goto(undefined) didnâ€™t cause an error');\n      }, function (err) {\n        assert.equal(err instanceof Error, true);\n        err.message.should.include('url');\n      });\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should click on a link and then go back","suites":["Nightmare","navigation"],"updatePoint":{"line":223,"column":47,"index":7587},"line":223,"code":"    it('should click on a link and then go back', function* () {\n      var title = yield nightmare.goto(fixture('navigation')).click('a').title();\n      title.should.equal('A');\n      title = yield nightmare.back().title();\n      title.should.equal('Navigation');\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should work for links that dont go anywhere","suites":["Nightmare","navigation"],"updatePoint":{"line":229,"column":51,"index":7863},"line":229,"code":"    it('should work for links that dont go anywhere', function* () {\n      var title = yield nightmare.goto(fixture('navigation')).click('a').title();\n      title.should.equal('A');\n      title = yield nightmare.click('.d').title();\n      title.should.equal('A');\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should click on a link, go back, and then go forward","suites":["Nightmare","navigation"],"updatePoint":{"line":235,"column":60,"index":8144},"line":235,"code":"    it('should click on a link, go back, and then go forward', function* () {\n      yield nightmare.goto(fixture('navigation')).click('a').back().forward();\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should refresh the page","suites":["Nightmare","navigation"],"updatePoint":{"line":238,"column":31,"index":8280},"line":238,"code":"    it('should refresh the page', function* () {\n      yield nightmare.goto(fixture('navigation')).refresh();\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should wait until element is present","suites":["Nightmare","navigation"],"updatePoint":{"line":241,"column":44,"index":8411},"line":241,"code":"    it('should wait until element is present', function* () {\n      yield nightmare.goto(fixture('navigation')).wait('a');\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should soft timeout if element does not appear","suites":["Nightmare","navigation"],"updatePoint":{"line":244,"column":54,"index":8552},"line":244,"code":"    it('should soft timeout if element does not appear', function* () {\n      yield nightmare.goto(fixture('navigation')).wait('ul', 150);\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should wait until element is present with a modified poll interval","suites":["Nightmare","navigation"],"updatePoint":{"line":247,"column":74,"index":8719},"line":247,"code":"    it('should wait until element is present with a modified poll interval', function* () {\n      nightmare = Nightmare({\n        pollInterval: 50\n      });\n      yield nightmare.goto(fixture('navigation')).wait('a');\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should escape the css selector correctly when waiting for an element","suites":["Nightmare","navigation"],"updatePoint":{"line":253,"column":76,"index":8947},"line":253,"code":"    it('should escape the css selector correctly when waiting for an element', function* () {\n      yield nightmare.goto(fixture('navigation')).wait('#escaping\\\\:test');\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should wait until the evaluate fn returns true","suites":["Nightmare","navigation"],"updatePoint":{"line":256,"column":54,"index":9103},"line":256,"code":"    it('should wait until the evaluate fn returns true', function* () {\n      yield nightmare.goto(fixture('navigation')).wait(function () {\n        var text = document.querySelector('a').textContent;\n        return text === 'A';\n      });\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should wait until the evaluate fn with arguments returns true","suites":["Nightmare","navigation"],"updatePoint":{"line":262,"column":69,"index":9366},"line":262,"code":"    it('should wait until the evaluate fn with arguments returns true', function* () {\n      yield nightmare.goto(fixture('navigation')).wait(function (expectedA, expectedB) {\n        var textA = document.querySelector('a.a').textContent;\n        var textB = document.querySelector('a.b').textContent;\n        return expectedA === textA && expectedB === textB;\n      }, 'A', 'B');\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should wait until the evaluate fn with arguments returns true with a callback","suites":["Nightmare","navigation","asynchronous wait"],"updatePoint":{"line":270,"column":87,"index":9821},"line":270,"code":"      it('should wait until the evaluate fn with arguments returns true with a callback', function* () {\n        yield nightmare.goto(fixture('navigation')).wait(function (expectedA, expectedB, done) {\n          setTimeout(() => {\n            var textA = document.querySelector('a.a').textContent;\n            var textB = document.querySelector('a.b').textContent;\n            done(null, expectedA === textA && expectedB === textB);\n          }, 2000);\n        }, 'A', 'B');\n      });","file":"index.js","skipped":false,"dir":"test"},{"name":"should wait until the evaluate fn with arguments returns true with a promise","suites":["Nightmare","navigation","asynchronous wait"],"updatePoint":{"line":279,"column":86,"index":10305},"line":279,"code":"      it('should wait until the evaluate fn with arguments returns true with a promise', function* () {\n        yield nightmare.goto(fixture('navigation')).wait(function (expectedA, expectedB) {\n          return new Promise(function (resolve) {\n            setTimeout(() => {\n              var textA = document.querySelector('a.a').textContent;\n              var textB = document.querySelector('a.b').textContent;\n              resolve(expectedA === textA && expectedB === textB);\n            }, 2000);\n          });\n        }, 'A', 'B');\n      });","file":"index.js","skipped":false,"dir":"test"},{"name":"should reject timeout on wait","suites":["Nightmare","navigation","asynchronous wait"],"updatePoint":{"line":290,"column":39,"index":10807},"line":290,"code":"      it('should reject timeout on wait', function* () {\n        yield nightmare.goto(fixture('navigation')).wait(function (_done) {\n          //never call done\n        }).should.be.rejected;\n      });","file":"index.js","skipped":false,"dir":"test"},{"name":"should reject timeout on wait with selector","suites":["Nightmare","navigation","asynchronous wait"],"updatePoint":{"line":295,"column":53,"index":11023},"line":295,"code":"      it('should reject timeout on wait with selector', function* () {\n        yield nightmare.goto(fixture('navigation')).wait('#non-existent').should.be.rejected.then(function (error) {\n          error.message.should.include('#non-existent');\n        });\n      });","file":"index.js","skipped":false,"dir":"test"},{"name":"should run multiple times before timeout on wait","suites":["Nightmare","navigation","asynchronous wait"],"updatePoint":{"line":300,"column":58,"index":11295},"line":300,"code":"      it('should run multiple times before timeout on wait', function* () {\n        yield nightmare.goto(fixture('navigation')).wait(function (done) {\n          setTimeout(() => done(null, false), 500);\n        }).should.be.rejected;\n      });","file":"index.js","skipped":false,"dir":"test"},{"name":"should fail if navigation target is invalid","suites":["Nightmare","navigation","asynchronous wait"],"updatePoint":{"line":306,"column":51,"index":11540},"line":306,"code":"    it('should fail if navigation target is invalid', function () {\n      return nightmare.goto('http://this-is-not-a-real-domain.tld').then(function () {\n        throw new Error('Navigation to an invalid domain succeeded');\n      }, function (err) {\n        assert.equal(err instanceof Error, true);\n        assert.equal(err.message, 'navigation error');\n        assert.equal(err.details, 'ERR_NAME_NOT_RESOLVED');\n        assert.equal(err.code, -105);\n        assert.equal(err.url, 'http://this-is-not-a-real-domain.tld/');\n      });\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should fail if navigation target is a malformed URL","suites":["Nightmare","navigation","asynchronous wait"],"updatePoint":{"line":317,"column":59,"index":12092},"line":317,"code":"    it('should fail if navigation target is a malformed URL', function (done) {\n      nightmare.goto('somewhere out there').then(function () {\n        done(new Error('Navigation to an invalid domain succeeded'));\n      }).catch(function (_error) {\n        done();\n      });\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should fail if navigating to an unknown protocol","suites":["Nightmare","navigation","asynchronous wait"],"updatePoint":{"line":324,"column":56,"index":12371},"line":324,"code":"    it('should fail if navigating to an unknown protocol', function (done) {\n      nightmare.goto('fake-protocol://blahblahblah').then(function () {\n        done(new Error('Navigation to an invalid protocol succeeded'));\n      }).catch(function (_error) {\n        done();\n      });\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should not fail if the URL loads but a resource fails","suites":["Nightmare","navigation","asynchronous wait"],"updatePoint":{"line":331,"column":61,"index":12666},"line":331,"code":"    it('should not fail if the URL loads but a resource fails', function () {\n      return nightmare.goto(fixture('navigation/invalid-image'));\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should not fail if a child frame fails","suites":["Nightmare","navigation","asynchronous wait"],"updatePoint":{"line":334,"column":46,"index":12803},"line":334,"code":"    it('should not fail if a child frame fails', function () {\n      return nightmare.goto(fixture('navigation/invalid-frame'));\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should return correct data when child frames are present","suites":["Nightmare","navigation","asynchronous wait"],"updatePoint":{"line":337,"column":64,"index":12958},"line":337,"code":"    it('should return correct data when child frames are present', function* () {\n      var data = yield nightmare.goto(fixture('navigation/valid-frame'));\n      data.should.have.property('url');\n      data.url.should.equal(fixture('navigation/valid-frame'));\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should not fail if response was a valid error (e.g. 404)","suites":["Nightmare","navigation","asynchronous wait"],"updatePoint":{"line":342,"column":64,"index":13226},"line":342,"code":"    it('should not fail if response was a valid error (e.g. 404)', function () {\n      return nightmare.goto(fixture('navigation/not-a-real-page'));\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should fail if the response dies in flight","suites":["Nightmare","navigation","asynchronous wait"],"updatePoint":{"line":345,"column":50,"index":13369},"line":345,"code":"    it('should fail if the response dies in flight', function (done) {\n      nightmare.goto(fixture('do-not-respond')).then(function () {\n        done(new Error('Navigation succeeded but server connection died'));\n      }).catch(function (_error) {\n        done();\n      });\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should not fail for a redirect","suites":["Nightmare","navigation","asynchronous wait"],"updatePoint":{"line":352,"column":38,"index":13640},"line":352,"code":"    it('should not fail for a redirect', function () {\n      return nightmare.goto(fixture('redirect?url=%2Fnavigation'));\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should fail for a redirect to an invalid URL","suites":["Nightmare","navigation","asynchronous wait"],"updatePoint":{"line":355,"column":52,"index":13785},"line":355,"code":"    it('should fail for a redirect to an invalid URL', function (done) {\n      nightmare.goto(fixture('redirect?url=http%3A%2F%2Fthis-is-not-a-real-domain.tld')).then(function () {\n        done(new Error('Navigation succeeded with redirect to bad location'));\n      }).catch(function (_error) {\n        done();\n      });\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should succeed properly if request handler is present","suites":["Nightmare","navigation","asynchronous wait"],"updatePoint":{"line":362,"column":61,"index":14123},"line":362,"code":"    it('should succeed properly if request handler is present', function () {\n      Nightmare.action('monitorRequest', function (name, options, parent, win, renderer, done) {\n        win.webContents.session.webRequest.onBeforeRequest(['*://localhost:*'], function (details, callback) {\n          callback({\n            cancel: false\n          });\n        });\n        done();\n      }, function (done) {\n        done();\n        return this;\n      });\n      return Nightmare({\n        webPreferences: {\n          partition: 'test-partition'\n        }\n      }).goto(fixture('navigation')).end();\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should fail properly if request handler is present","suites":["Nightmare","navigation","asynchronous wait"],"updatePoint":{"line":380,"column":58,"index":14720},"line":380,"code":"    it('should fail properly if request handler is present', function (done) {\n      Nightmare.action('monitorRequest', function (name, options, parent, win, renderer, done) {\n        win.webContents.session.webRequest.onBeforeRequest(['*://localhost:*'], function (details, callback) {\n          callback({\n            cancel: false\n          });\n        });\n        done();\n      }, function (done) {\n        done();\n        return this;\n      });\n      Nightmare({\n        webPreferences: {\n          partition: 'test-partition'\n        }\n      }).goto('http://this-is-not-a-real-domain.tld').then(function () {\n        done(new Error('Navigation to an invalid domain succeeded'));\n      }).catch(function (_error) {\n        done();\n      });\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should support javascript URLs","suites":["Nightmare","navigation","asynchronous wait"],"updatePoint":{"line":402,"column":38,"index":15454},"line":402,"code":"    it('should support javascript URLs', function* () {\n      var gotoResult = yield nightmare.goto(fixture('navigation')).goto('javascript:void(document.querySelector(\".a\").textContent=\"LINK\");');\n      gotoResult.should.be.an('object');\n      var linkText = yield nightmare.evaluate(function () {\n        return document.querySelector('.a').textContent;\n      });\n      linkText.should.equal('LINK');\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should support javascript URLs that load pages","suites":["Nightmare","navigation","asynchronous wait"],"updatePoint":{"line":410,"column":54,"index":15881},"line":410,"code":"    it('should support javascript URLs that load pages', function* () {\n      var data = yield nightmare.goto(fixture('navigation')).goto(`javascript:window.location='${fixture('navigation/a.html')}'`);\n      data.should.contain.keys('url', 'code', 'method', 'referrer', 'headers');\n      data.url.should.equal(fixture('navigation/a.html'));\n      var linkText = yield nightmare.evaluate(function () {\n        return document.querySelector('.d').textContent;\n      });\n      linkText.should.equal('D');\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should fail immediately/not time out for 304 statuses","suites":["Nightmare","navigation","asynchronous wait"],"updatePoint":{"line":419,"column":61,"index":16399},"line":419,"code":"    it('should fail immediately/not time out for 304 statuses', function () {\n      return Nightmare({\n        gotoTimeout: 500\n      }).goto(fixture('not-modified')).end().then(function () {\n        throw new Error('Navigating to a 304 should return an error');\n      }, function (error) {\n        if (error.code === -7) {\n          throw new Error('Navigating to a 304 should not time out');\n        }\n      });\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should not time out for aborted loads","suites":["Nightmare","navigation","asynchronous wait"],"updatePoint":{"line":430,"column":45,"index":16805},"line":430,"code":"    it('should not time out for aborted loads', function () {\n      Nightmare.action('abortRequests', function (name, options, parent, win, renderer, done) {\n        win.webContents.session.webRequest.onBeforeRequest(['*://localhost:*'], function (details, callback) {\n          setTimeout(() => win.webContents.stop(), 0);\n          callback({\n            cancel: false\n          });\n        });\n        done();\n      }, function () {});\n      return Nightmare({\n        gotoTimeout: 500\n      }).goto(fixture('navigation')).end().then(function () {\n        throw new Error('An aborted page load should return an error');\n      }, function (error) {\n        if (error.code === -7) {\n          throw new Error('Aborting a page load should not time out');\n        }\n      });\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should time out after 30 seconds of loading","suites":["Nightmare","navigation","timeouts"],"updatePoint":{"line":451,"column":53,"index":17635},"line":451,"code":"      it('should time out after 30 seconds of loading', function () {\n        // allow this test to go particularly long\n        this.timeout(40000);\n        return nightmare.goto(fixture('wait')).should.be.rejected.then(function (error) {\n          error.code.should.equal(-7);\n        });\n      });","file":"index.js","skipped":false,"dir":"test"},{"name":"should allow custom goto timeout on the constructor","suites":["Nightmare","navigation","timeouts"],"updatePoint":{"line":458,"column":61,"index":17944},"line":458,"code":"      it('should allow custom goto timeout on the constructor', function () {\n        var startTime = Date.now();\n        return Nightmare({\n          gotoTimeout: 1000\n        }).goto(fixture('wait')).end().should.be.rejected.then(function (_error) {\n          // allow a few extra seconds for browser startup\n          ;\n          (startTime - Date.now()).should.be.below(3000);\n        });\n      });","file":"index.js","skipped":false,"dir":"test"},{"name":"should allow a timeout to succeed if DOM loaded","suites":["Nightmare","navigation","timeouts"],"updatePoint":{"line":468,"column":57,"index":18343},"line":468,"code":"      it('should allow a timeout to succeed if DOM loaded', function () {\n        return Nightmare({\n          gotoTimeout: 1000\n        }).goto(fixture('navigation/hanging-resources.html')).end().then(function (data) {\n          data.details.should.include('1000 ms');\n        });\n      });","file":"index.js","skipped":false,"dir":"test"},{"name":"should allow actions on a hanging page","suites":["Nightmare","navigation","timeouts"],"updatePoint":{"line":475,"column":48,"index":18626},"line":475,"code":"      it('should allow actions on a hanging page', function () {\n        return Nightmare({\n          gotoTimeout: 500\n        }).goto(fixture('navigation/hanging-resources.html')).evaluate(() => document.title).end().then(function (title) {\n          title.should.equal('Hanging resource load');\n        });\n      });","file":"index.js","skipped":false,"dir":"test"},{"name":"should allow loading a new page after timing out","suites":["Nightmare","navigation","timeouts"],"updatePoint":{"line":482,"column":58,"index":18955},"line":482,"code":"      it('should allow loading a new page after timing out', function () {\n        nightmare.end().then();\n        nightmare = Nightmare({\n          gotoTimeout: 1000\n        });\n        return nightmare.goto(fixture('wait')).should.be.rejected.then(function () {\n          return nightmare.goto(fixture('navigation'));\n        });\n      });","file":"index.js","skipped":false,"dir":"test"},{"name":"should allow for timeouts for non-goto loads","suites":["Nightmare","navigation","timeouts"],"updatePoint":{"line":491,"column":54,"index":19293},"line":491,"code":"      it('should allow for timeouts for non-goto loads', function* () {\n        // ###\n        this.timeout(40000);\n        var nightmare = Nightmare({\n          loadTimeout: 30000\n        });\n        yield nightmare.goto(fixture('navigation')).click('#never-ends');\n        yield nightmare.end();\n      });","file":"index.js","skipped":false,"dir":"test"},{"name":"should get the title","suites":["Nightmare","evaluation"],"updatePoint":{"line":510,"column":28,"index":19781},"line":510,"code":"    it('should get the title', function* () {\n      var title = yield nightmare.goto(fixture('evaluation')).title();\n      title.should.eql('Evaluation');\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should get the url","suites":["Nightmare","evaluation"],"updatePoint":{"line":514,"column":26,"index":19942},"line":514,"code":"    it('should get the url', function* () {\n      var url = yield nightmare.goto(fixture('evaluation')).url();\n      url.should.have.string(fixture('evaluation'));\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should get the path","suites":["Nightmare","evaluation"],"updatePoint":{"line":518,"column":27,"index":20115},"line":518,"code":"    it('should get the path', function* () {\n      var path = yield nightmare.goto(fixture('evaluation')).path();\n      var formalUrl = fixture('evaluation') + '/';\n      formalUrl.should.have.string(path);\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should check if the selector exists","suites":["Nightmare","evaluation"],"updatePoint":{"line":523,"column":43,"index":20346},"line":523,"code":"    it('should check if the selector exists', function* () {\n      // existent element\n      var exists = yield nightmare.goto(fixture('evaluation')).exists('h1.title');\n      exists.should.be.true;\n\n      // non-existent element\n      exists = yield nightmare.exists('a.blahblahblah');\n      exists.should.be.false;\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should check if an element is visible","suites":["Nightmare","evaluation"],"updatePoint":{"line":532,"column":45,"index":20673},"line":532,"code":"    it('should check if an element is visible', function* () {\n      // visible element\n      var visible = yield nightmare.goto(fixture('evaluation')).visible('h1.title');\n      visible.should.be.true;\n\n      // hidden element\n      visible = yield nightmare.visible('.hidden');\n      visible.should.be.false;\n\n      // non-existent element\n      visible = yield nightmare.visible('#asdfasdfasdf');\n      visible.should.be.false;\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should evaluate javascript on the page, with parameters","suites":["Nightmare","evaluation"],"updatePoint":{"line":545,"column":63,"index":21130},"line":545,"code":"    it('should evaluate javascript on the page, with parameters', function* () {\n      var title = yield nightmare.goto(fixture('evaluation')).evaluate(function (parameter) {\n        return document.title + ' -- ' + parameter;\n      }, 'testparameter');\n      title.should.equal('Evaluation -- testparameter');\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should capture invalid evaluate fn","suites":["Nightmare","evaluation"],"updatePoint":{"line":551,"column":42,"index":21428},"line":551,"code":"    it('should capture invalid evaluate fn', function () {\n      return nightmare.goto(fixture('evaluation')).evaluate('not_a_function').should.be.rejected;\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should allow for asynchronous evaluation with a callback","suites":["Nightmare","evaluation","asynchronous"],"updatePoint":{"line":555,"column":66,"index":21660},"line":555,"code":"      it('should allow for asynchronous evaluation with a callback', function* () {\n        var asyncValue = yield nightmare.goto(fixture('evaluation')).evaluate(function (done) {\n          setTimeout(() => done(null, 'nightmare'), 1000);\n        });\n        asyncValue.should.equal('nightmare');\n      });","file":"index.js","skipped":false,"dir":"test"},{"name":"should allow for arguments with asynchronous evaluation with a callback","suites":["Nightmare","evaluation","asynchronous"],"updatePoint":{"line":561,"column":81,"index":21982},"line":561,"code":"      it('should allow for arguments with asynchronous evaluation with a callback', function* () {\n        var asyncValue = yield nightmare.goto(fixture('evaluation')).evaluate(function (str, done) {\n          setTimeout(() => done(null, str), 1000);\n        }, 'nightmare');\n        asyncValue.should.equal('nightmare');\n      });","file":"index.js","skipped":false,"dir":"test"},{"name":"should allow for errors in asynchronous evaluation with a callback","suites":["Nightmare","evaluation","asynchronous"],"updatePoint":{"line":567,"column":76,"index":22309},"line":567,"code":"      it('should allow for errors in asynchronous evaluation with a callback', function* () {\n        yield nightmare.goto(fixture('evaluation')).evaluate(function (done) {\n          setTimeout(() => done(new Error('nightmare')), 1000);\n        }).should.be.rejected;\n      });","file":"index.js","skipped":false,"dir":"test"},{"name":"should allow for timeouts in asynchronous evaluation with a callback","suites":["Nightmare","evaluation","asynchronous"],"updatePoint":{"line":572,"column":78,"index":22589},"line":572,"code":"      it('should allow for timeouts in asynchronous evaluation with a callback', function* () {\n        this.timeout(40000);\n        yield nightmare.goto(fixture('evaluation')).evaluate(function (_done) {\n          //don't call done\n        }).should.be.rejected;\n      });","file":"index.js","skipped":false,"dir":"test"},{"name":"should allow for asynchronous evaluation with a promise","suites":["Nightmare","evaluation","asynchronous"],"updatePoint":{"line":578,"column":65,"index":22850},"line":578,"code":"      it('should allow for asynchronous evaluation with a promise', function* () {\n        var asyncValue = yield nightmare.goto(fixture('evaluation')).evaluate(function () {\n          return new Promise(resolve => {\n            setTimeout(() => resolve('nightmare'), 1000);\n          });\n        });\n        asyncValue.should.equal('nightmare');\n      });","file":"index.js","skipped":false,"dir":"test"},{"name":"should allow for arguments with asynchronous evaluation with a promise","suites":["Nightmare","evaluation","asynchronous"],"updatePoint":{"line":586,"column":80,"index":23222},"line":586,"code":"      it('should allow for arguments with asynchronous evaluation with a promise', function* () {\n        var asyncValue = yield nightmare.goto(fixture('evaluation')).evaluate(function (str) {\n          return new Promise(resolve => {\n            setTimeout(() => resolve(str), 1000);\n          });\n        }, 'nightmare');\n        asyncValue.should.equal('nightmare');\n      });","file":"index.js","skipped":false,"dir":"test"},{"name":"should allow for errors in asynchronous evaluation with a promise","suites":["Nightmare","evaluation","asynchronous"],"updatePoint":{"line":594,"column":75,"index":23597},"line":594,"code":"      it('should allow for errors in asynchronous evaluation with a promise', function* () {\n        yield nightmare.goto(fixture('evaluation')).evaluate(function () {\n          return new Promise((resolve, reject) => {\n            setTimeout(() => reject(new Error('nightmare')), 1000);\n          });\n        }).should.be.rejected;\n      });","file":"index.js","skipped":false,"dir":"test"},{"name":"should allow for timeouts in asynchronous evaluation with a promise","suites":["Nightmare","evaluation","asynchronous"],"updatePoint":{"line":601,"column":77,"index":23942},"line":601,"code":"      it('should allow for timeouts in asynchronous evaluation with a promise', function* () {\n        this.timeout(40000);\n        yield nightmare.goto(fixture('evaluation')).evaluate(function () {\n          return new Promise((_resolve, _reject) => {\n            return 'nightmare';\n          });\n        }).should.be.rejected;\n      });","file":"index.js","skipped":false,"dir":"test"},{"name":"should inject javascript onto the page","suites":["Nightmare","manipulation"],"updatePoint":{"line":619,"column":46,"index":24459},"line":619,"code":"    it('should inject javascript onto the page', function* () {\n      var globalNumber = yield nightmare.goto(fixture('manipulation')).inject('js', 'test/files/globals.js').evaluate(function () {\n        return globalNumber;\n      });\n      globalNumber.should.equal(7);\n      var numAnchors = yield nightmare.goto(fixture('manipulation')).inject('js', 'test/files/jquery-2.1.1.min.js').evaluate(function () {\n        return window.$('h1').length;\n      });\n      numAnchors.should.equal(1);\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should inject javascript onto the page ending with a comment","suites":["Nightmare","manipulation"],"updatePoint":{"line":629,"column":68,"index":24981},"line":629,"code":"    it('should inject javascript onto the page ending with a comment', function* () {\n      var globalNumber = yield nightmare.goto(fixture('manipulation')).inject('js', 'test/files/globals.js').evaluate(function () {\n        return globalNumber;\n      });\n      globalNumber.should.equal(7);\n      var numAnchors = yield nightmare.goto(fixture('manipulation')).inject('js', 'test/files/jquery-1.9.0.min.js').evaluate(function () {\n        return window.$('h1').length;\n      });\n      numAnchors.should.equal(1);\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should inject css onto the page","suites":["Nightmare","manipulation"],"updatePoint":{"line":639,"column":39,"index":25474},"line":639,"code":"    it('should inject css onto the page', function* () {\n      var color = yield nightmare.goto(fixture('manipulation')).inject('js', 'test/files/jquery-2.1.1.min.js').inject('css', 'test/files/test.css').evaluate(function () {\n        return window.$('body').css('background-color');\n      });\n      color.should.equal('rgb(255, 0, 0)');\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should not inject unsupported types onto the page","suites":["Nightmare","manipulation"],"updatePoint":{"line":645,"column":57,"index":25839},"line":645,"code":"    it('should not inject unsupported types onto the page', function* () {\n      var color = yield nightmare.goto(fixture('manipulation')).inject('js', 'test/files/jquery-2.1.1.min.js').inject('pdf', 'test/files/test.css').evaluate(function () {\n        return window.$('body').css('background-color');\n      });\n      color.should.not.equal('rgb(255, 0, 0)');\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should type","suites":["Nightmare","manipulation"],"updatePoint":{"line":651,"column":19,"index":26170},"line":651,"code":"    it('should type', function* () {\n      var input = 'nightmare';\n      var events = input.length * 3;\n      var value = yield nightmare.on('console', function (type, _input, _message) {\n        if (type === 'log') events--;\n      }).goto(fixture('manipulation')).type('input[type=search]', input).evaluate(function () {\n        return document.querySelector('input[type=search]').value;\n      });\n      value.should.equal('nightmare');\n      events.should.equal(0);\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should type integer","suites":["Nightmare","manipulation"],"updatePoint":{"line":662,"column":27,"index":26655},"line":662,"code":"    it('should type integer', function* () {\n      var input = 10;\n      var events = input.toString().length * 3;\n      var value = yield nightmare.on('console', function (type, _input, _message) {\n        if (type === 'log') events--;\n      }).goto(fixture('manipulation')).type('input[type=search]', input).evaluate(function () {\n        return document.querySelector('input[type=search]').value;\n      });\n      value.should.equal('10');\n      events.should.equal(0);\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should type object","suites":["Nightmare","manipulation"],"updatePoint":{"line":673,"column":26,"index":27134},"line":673,"code":"    it('should type object', function* () {\n      var input = {\n        foo: 'bar'\n      };\n      var events = input.toString().length * 3;\n      var value = yield nightmare.on('console', function (type, _input, _message) {\n        if (type === 'log') events--;\n      }).goto(fixture('manipulation')).type('input[type=search]', input).evaluate(function () {\n        return document.querySelector('input[type=search]').value;\n      });\n      value.should.equal('[object Object]');\n      events.should.equal(0);\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should clear inputs","suites":["Nightmare","manipulation"],"updatePoint":{"line":686,"column":27,"index":27653},"line":686,"code":"    it('should clear inputs', function* () {\n      var input = 'nightmare';\n      var events = input.length * 3;\n      var value = yield nightmare.on('console', function (type, _input, _message) {\n        if (type === 'log') events--;\n      }).goto(fixture('manipulation')).type('input[type=search]', input).type('input[type=search]').evaluate(function () {\n        return document.querySelector('input[type=search]').value;\n      });\n      value.should.equal('');\n      events.should.equal(0);\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should support inserting text","suites":["Nightmare","manipulation"],"updatePoint":{"line":697,"column":37,"index":28166},"line":697,"code":"    it('should support inserting text', function* () {\n      var input = 'nightmare insert typing';\n      var value = yield nightmare.goto(fixture('manipulation')).insert('input[type=search]', input).evaluate(function () {\n        return document.querySelector('input[type=search]').value;\n      });\n      value.should.equal('nightmare insert typing');\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should support clearing inserted text","suites":["Nightmare","manipulation"],"updatePoint":{"line":704,"column":45,"index":28535},"line":704,"code":"    it('should support clearing inserted text', function* () {\n      var value = yield nightmare.goto(fixture('manipulation')).insert('input[type=search]').evaluate(function () {\n        return document.querySelector('input[type=search]').value;\n      });\n      value.should.equal('');\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should not type in a nonexistent selector","suites":["Nightmare","manipulation"],"updatePoint":{"line":710,"column":49,"index":28833},"line":710,"code":"    it('should not type in a nonexistent selector', function () {\n      return nightmare.goto(fixture('manipulation')).type('does-not-exist', 'nightmare').should.be.rejected;\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should not insert in a nonexistent selector","suites":["Nightmare","manipulation"],"updatePoint":{"line":713,"column":51,"index":29018},"line":713,"code":"    it('should not insert in a nonexistent selector', function () {\n      return nightmare.goto(fixture('manipulation')).insert('does-not-exist', 'nightmare').should.be.rejected;\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should blur the active element when something is clicked","suites":["Nightmare","manipulation"],"updatePoint":{"line":716,"column":64,"index":29218},"line":716,"code":"    it('should blur the active element when something is clicked', function* () {\n      var isBody = yield nightmare.goto(fixture('manipulation')).type('input[type=search]', 'test').click('p').evaluate(function () {\n        return document.activeElement === document.body;\n      });\n      isBody.should.be.true;\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should allow for clicking on elements with attribute selectors","suites":["Nightmare","manipulation"],"updatePoint":{"line":722,"column":70,"index":29544},"line":722,"code":"    it('should allow for clicking on elements with attribute selectors', function* () {\n      yield nightmare.goto(fixture('manipulation')).click('div[data-test=\"test\"]');\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should not allow for code injection with .click()","suites":["Nightmare","manipulation"],"updatePoint":{"line":725,"column":57,"index":29711},"line":725,"code":"    it('should not allow for code injection with .click()', function (done) {\n      var exception;\n      nightmare.goto(fixture('manipulation')).click(\"\\\"]'); document.title = 'injected title'; ('\\\"\").catch(e => exception = e).then(() => nightmare.title()).then(title => {\n        exception.should.exist;\n        title.should.equal('Manipulation');\n        done();\n      });\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should not fail if selector no longer exists to blur after typing","suites":["Nightmare","manipulation"],"updatePoint":{"line":733,"column":73,"index":30110},"line":733,"code":"    it('should not fail if selector no longer exists to blur after typing', function* () {\n      yield nightmare.on('console', function () {\n        // console.log(arguments)\n      }).goto(fixture('manipulation')).type('input#disappears', 'nightmare');\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should type and click","suites":["Nightmare","manipulation"],"updatePoint":{"line":738,"column":29,"index":30327},"line":738,"code":"    it('should type and click', function* () {\n      var title = yield nightmare.goto(fixture('manipulation')).type('input[type=search]', 'nightmare').click('button[type=submit]').wait(500).title();\n      title.should.equal('Manipulation - Results');\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should type and click several times","suites":["Nightmare","manipulation"],"updatePoint":{"line":742,"column":43,"index":30600},"line":742,"code":"    it('should type and click several times', function* () {\n      var title = yield nightmare.goto(fixture('manipulation')).type('input[type=search]', 'github nightmare').click('button[type=submit]').wait(500).click('a').wait(500).title();\n      title.should.equal('Manipulation - Result - Nightmare');\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should checkbox","suites":["Nightmare","manipulation"],"updatePoint":{"line":746,"column":23,"index":30892},"line":746,"code":"    it('should checkbox', function* () {\n      var checkbox = yield nightmare.goto(fixture('manipulation')).check('input[type=checkbox]').evaluate(function () {\n        return document.querySelector('input[type=checkbox]').checked;\n      });\n      checkbox.should.be.true;\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should uncheck","suites":["Nightmare","manipulation"],"updatePoint":{"line":752,"column":22,"index":31172},"line":752,"code":"    it('should uncheck', function* () {\n      var checkbox = yield nightmare.goto(fixture('manipulation')).check('input[type=checkbox]').uncheck('input[type=checkbox]').evaluate(function () {\n        return document.querySelector('input[type=checkbox]').checked;\n      });\n      checkbox.should.be.false;\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should select","suites":["Nightmare","manipulation"],"updatePoint":{"line":758,"column":21,"index":31484},"line":758,"code":"    it('should select', function* () {\n      var select = yield nightmare.goto(fixture('manipulation')).select('select', 'b').evaluate(function () {\n        return document.querySelector('select').value;\n      });\n      select.should.equal('b');\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should scroll to specified position","suites":["Nightmare","manipulation"],"updatePoint":{"line":764,"column":43,"index":31760},"line":764,"code":"    it('should scroll to specified position', function* () {\n      // start at the top\n      var coordinates = yield nightmare.viewport(320, 320).goto(fixture('manipulation')).evaluate(function () {\n        return {\n          top: document.scrollingElement.scrollTop,\n          left: document.scrollingElement.scrollLeft\n        };\n      });\n      coordinates.top.should.equal(0);\n      coordinates.left.should.equal(0);\n\n      // scroll down a bit\n      coordinates = yield nightmare.scrollTo(100, 50).evaluate(function () {\n        return {\n          top: document.scrollingElement.scrollTop,\n          left: document.scrollingElement.scrollLeft\n        };\n      });\n      coordinates.top.should.equal(100);\n      coordinates.left.should.equal(50);\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should hover over an element","suites":["Nightmare","manipulation"],"updatePoint":{"line":785,"column":36,"index":32512},"line":785,"code":"    it('should hover over an element', function* () {\n      var color = yield nightmare.goto(fixture('manipulation')).mouseover('h1').evaluate(function () {\n        var element = document.querySelector('h1');\n        return element.style.background;\n      });\n      color.should.equal('rgb(102, 255, 102)');\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should release hover from an element","suites":["Nightmare","manipulation"],"updatePoint":{"line":792,"column":44,"index":32836},"line":792,"code":"    it('should release hover from an element', function* () {\n      var hoverColor = 'rgb(0, 255, 255)';\n      var hoveredColor = yield nightmare.goto(fixture('manipulation')).mouseover('h2').evaluate(function () {\n        var element = document.querySelector('h2');\n        return element.style.background;\n      });\n      hoveredColor.should.equal(hoverColor);\n      var nonHoveredColor = yield nightmare.mouseout('h2').evaluate(function () {\n        var element = document.querySelector('h2');\n        return element.style.background;\n      });\n      nonHoveredColor.should.not.equal(hoverColor);\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should mousedown on an element","suites":["Nightmare","manipulation"],"updatePoint":{"line":805,"column":38,"index":33438},"line":805,"code":"    it('should mousedown on an element', function* () {\n      var color = yield nightmare.goto(fixture('manipulation')).mousedown('h1').evaluate(function () {\n        var element = document.querySelector('h1');\n        return element.style.background;\n      });\n      color.should.equal('rgb(255, 0, 0)');\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":".set(name, value) & .get(name)","suites":["Nightmare","cookies"],"updatePoint":{"line":825,"column":38,"index":34054},"line":825,"code":"    it('.set(name, value) & .get(name)', function* () {\n      var cookies = nightmare.cookies;\n      yield cookies.set('hi', 'hello');\n      var cookie = yield cookies.get('hi');\n      cookie.name.should.equal('hi');\n      cookie.value.should.equal('hello');\n      cookie.path.should.equal('/');\n      cookie.secure.should.equal(false);\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":".set(obj) & .get(name)","suites":["Nightmare","cookies"],"updatePoint":{"line":834,"column":30,"index":34391},"line":834,"code":"    it('.set(obj) & .get(name)', function* () {\n      var cookies = nightmare.cookies;\n      yield cookies.set({\n        name: 'nightmare',\n        value: 'rocks',\n        path: '/cookie'\n      });\n      var cookie = yield cookies.get('nightmare');\n      cookie.name.should.equal('nightmare');\n      cookie.value.should.equal('rocks');\n      cookie.path.should.equal('/cookie');\n      cookie.secure.should.equal(false);\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":".set([cookie1, cookie2]) & .get()","suites":["Nightmare","cookies"],"updatePoint":{"line":847,"column":41,"index":34830},"line":847,"code":"    it('.set([cookie1, cookie2]) & .get()', function* () {\n      var cookies = nightmare.cookies;\n      yield cookies.set([{\n        name: 'hi',\n        value: 'hello',\n        path: '/'\n      }, {\n        name: 'nightmare',\n        value: 'rocks',\n        path: '/cookie'\n      }]);\n      cookies = yield cookies.get();\n      cookies.length.should.equal(2);\n\n      // sort in case they come in a different order\n      cookies = cookies.sort(function (a, b) {\n        if (a.name > b.name) return 1;\n        if (a.name < b.name) return -1;\n        return 0;\n      });\n      cookies[0].name.should.equal('hi');\n      cookies[0].value.should.equal('hello');\n      cookies[0].path.should.equal('/');\n      cookies[0].secure.should.equal(false);\n      cookies[1].name.should.equal('nightmare');\n      cookies[1].value.should.equal('rocks');\n      cookies[1].path.should.equal('/cookie');\n      cookies[1].secure.should.equal(false);\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":".set([cookie1, cookie2]) & .get(query)","suites":["Nightmare","cookies"],"updatePoint":{"line":876,"column":46,"index":35771},"line":876,"code":"    it('.set([cookie1, cookie2]) & .get(query)', function* () {\n      var cookies = nightmare.cookies;\n      yield cookies.set([{\n        name: 'hi',\n        value: 'hello',\n        path: '/'\n      }, {\n        name: 'nightmare',\n        value: 'rocks',\n        path: '/cookie'\n      }]);\n      cookies = yield cookies.get({\n        path: '/cookie'\n      });\n      cookies.length.should.equal(1);\n      cookies[0].name.should.equal('nightmare');\n      cookies[0].value.should.equal('rocks');\n      cookies[0].path.should.equal('/cookie');\n      cookies[0].secure.should.equal(false);\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":".set([cookie]) & .clear(name) & .get(query)","suites":["Nightmare","cookies"],"updatePoint":{"line":896,"column":51,"index":36368},"line":896,"code":"    it('.set([cookie]) & .clear(name) & .get(query)', function* () {\n      var cookies = nightmare.cookies;\n      yield cookies.set([{\n        name: 'hi',\n        value: 'hello',\n        path: '/'\n      }, {\n        name: 'nightmare',\n        value: 'rocks',\n        path: '/cookie'\n      }]);\n      yield cookies.clear('nightmare');\n      cookies = yield cookies.get({\n        path: '/cookie'\n      });\n      cookies.length.should.equal(0);\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":".set([cookie]) & .clear() & .get()","suites":["Nightmare","cookies"],"updatePoint":{"line":913,"column":42,"index":36809},"line":913,"code":"    it('.set([cookie]) & .clear() & .get()', function* () {\n      var cookies = nightmare.cookies;\n      yield cookies.set([{\n        name: 'hi',\n        value: 'hello',\n        path: '/'\n      }, {\n        name: 'nightmare',\n        value: 'rocks',\n        path: '/cookie'\n      }]);\n      yield cookies.clear();\n      cookies = yield cookies.get();\n      cookies.length.should.equal(0);\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":".set([cookie]) & .clearAll() & .get()","suites":["Nightmare","cookies"],"updatePoint":{"line":928,"column":45,"index":37209},"line":928,"code":"    it('.set([cookie]) & .clearAll() & .get()', function* () {\n      yield nightmare.cookies.set([{\n        name: 'hi',\n        value: 'hello',\n        path: '/'\n      }, {\n        name: 'nightmare',\n        value: 'rocks',\n        path: '/cookie'\n      }]);\n      yield nightmare.goto(fixture('simple'));\n      yield nightmare.cookies.set([{\n        name: 'hi',\n        value: 'hello',\n        path: '/'\n      }, {\n        name: 'nightmare',\n        value: 'rocks',\n        path: '/cookie'\n      }]);\n      yield nightmare.cookies.clearAll();\n      var cookies = yield nightmare.cookies.get();\n      cookies.length.should.equal(0);\n      yield nightmare.goto(fixture('cookie'));\n      cookies = yield nightmare.cookies.get();\n      cookies.length.should.equal(0);\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should return a proper error","suites":["Nightmare","cookies"],"updatePoint":{"line":955,"column":36,"index":37973},"line":955,"code":"    it('should return a proper error', function* () {\n      try {\n        yield nightmare.goto(fixture('cookie')).cookies.set({\n          name: 'hi',\n          value: 'there',\n          domain: 'https://www.google.com'\n        });\n        assert.fail(\"shouldn't have got here\");\n      } catch (e) {\n        assert.equal(e.message, 'Setting cookie failed');\n      }\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should take a screenshot","suites":["Nightmare","rendering"],"updatePoint":{"line":983,"column":32,"index":38695},"line":983,"code":"    it('should take a screenshot', function* () {\n      yield nightmare.goto('https://github.com/').screenshot(tmp_dir + '/test.png');\n      var stats = fs.statSync(tmp_dir + '/test.png');\n      stats.size.should.be.at.least(1000);\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should buffer a screenshot","suites":["Nightmare","rendering"],"updatePoint":{"line":988,"column":34,"index":38937},"line":988,"code":"    it('should buffer a screenshot', function* () {\n      var image = yield nightmare.goto('https://github.com').screenshot();\n      Buffer.isBuffer(image).should.be.true;\n      image.length.should.be.at.least(1000);\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should take a clipped screenshot","suites":["Nightmare","rendering"],"updatePoint":{"line":993,"column":40,"index":39168},"line":993,"code":"    it('should take a clipped screenshot', function* () {\n      yield nightmare.goto('https://github.com/').screenshot(tmp_dir + '/test-clipped.png', {\n        x: 200,\n        y: 100,\n        width: 100,\n        height: 100\n      });\n      var stats = fs.statSync(tmp_dir + '/test.png');\n      var statsClipped = fs.statSync(tmp_dir + '/test-clipped.png');\n      statsClipped.size.should.be.at.least(300);\n      stats.size.should.be.at.least(10 * statsClipped.size);\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should buffer a clipped screenshot","suites":["Nightmare","rendering"],"updatePoint":{"line":1005,"column":42,"index":39645},"line":1005,"code":"    it('should buffer a clipped screenshot', function* () {\n      var image = yield nightmare.goto('https://github.com').screenshot({\n        x: 200,\n        y: 100,\n        width: 100,\n        height: 100\n      });\n      Buffer.isBuffer(image).should.be.true;\n      image.length.should.be.at.least(300);\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should screenshot an idle page","suites":["Nightmare","rendering"],"updatePoint":{"line":1039,"column":38,"index":40885},"line":1039,"code":"    it('should screenshot an idle page', function* () {\n      var image = yield nightmare.goto('about:blank').viewport(100, 100).evaluate(function () {\n        document.body.style.background = '#F0F';\n      }).evaluate(function () {\n        document.body.style.background = '#0F0';\n      }).wait(1000).screenshot();\n      var png = new PNG();\n      var imageData = yield png.parse.bind(png, image);\n      var firstPixel = Array.from(imageData.data.slice(0, 3));\n      // Since color profiles can affect the final output image depending\n      // on platform, the most we can expect is that the G channel is greater\n      // than the other two.\n      firstPixel[1].should.be.above(firstPixel[0]);\n      firstPixel[1].should.be.above(firstPixel[2]);\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should not subscribe to frames until necessary","suites":["Nightmare","rendering"],"updatePoint":{"line":1054,"column":54,"index":41656},"line":1054,"code":"    it('should not subscribe to frames until necessary', function () {\n      var didSubscribe = false;\n      var FrameManager = require('../lib/frame-manager.js');\n      FrameManager({\n        webContents: {\n          beginFrameSubscription: function () {\n            didSubscribe = true;\n          },\n          endFrameSubscription: function () {},\n          executeJavaScript: function () {}\n        }\n      });\n      didSubscribe.should.be.false;\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should subscribe to frames when requested necessary","suites":["Nightmare","rendering"],"updatePoint":{"line":1068,"column":59,"index":42119},"line":1068,"code":"    it('should subscribe to frames when requested necessary', function (done) {\n      var didSubscribe = false;\n      var didUnsubscribe = false;\n      var FrameManager = require('../lib/frame-manager.js');\n      var fn;\n      var manager = FrameManager({\n        webContents: {\n          debugger: {\n            isAttached: function () {\n              return true;\n            },\n            sendCommand: function (command) {\n              if (command === 'DOM.highlightRect') {\n                fn('mock-data');\n              }\n            }\n          },\n          beginFrameSubscription: function (_fn) {\n            didSubscribe = true;\n            fn = _fn;\n          },\n          endFrameSubscription: function () {\n            didUnsubscribe = true;\n          },\n          executeJavaScript: function () {}\n        }\n      });\n      manager.requestFrame(function (data) {\n        didSubscribe.should.be.true;\n        didUnsubscribe.should.be.true;\n        data.should.equal('mock-data');\n        done();\n      });\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should support multiple concurrent frame subscriptions","suites":["Nightmare","rendering"],"updatePoint":{"line":1102,"column":62,"index":43150},"line":1102,"code":"    it('should support multiple concurrent frame subscriptions', function (done) {\n      var subscribeCount = 0;\n      var unsubscribeCount = 0;\n      var FrameManager = require('../lib/frame-manager.js');\n      var fn = null;\n      var async = require('async');\n      var manager = FrameManager({\n        webContents: {\n          debugger: {\n            isAttached: function () {\n              return true;\n            },\n            sendCommand: function (command) {\n              if (command === 'DOM.highlightRect') {\n                setTimeout(function () {\n                  fn('mock-data');\n                }, 100);\n              }\n            }\n          },\n          beginFrameSubscription: function (_fn) {\n            subscribeCount += 1;\n            assert.strictEqual(fn, null);\n            fn = _fn;\n          },\n          endFrameSubscription: function () {\n            unsubscribeCount += 1;\n            fn = null;\n          },\n          executeJavaScript: function () {}\n        }\n      });\n      async.times(2, function requestFrameFn(i, cb) {\n        manager.requestFrame(function handleFrame(data) {\n          cb(null, data);\n        });\n      }, function handleResults(err, results) {\n        if (err) {\n          done(err);\n        }\n        subscribeCount.should.equal(1);\n        unsubscribeCount.should.equal(1);\n        results[0].should.equal('mock-data');\n        results[1].should.equal('mock-data');\n        done();\n      });\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should support multiple series frame subscriptions","suites":["Nightmare","rendering"],"updatePoint":{"line":1149,"column":58,"index":44610},"line":1149,"code":"    it('should support multiple series frame subscriptions', function (done) {\n      var subscribeCount = 0;\n      var unsubscribeCount = 0;\n      var FrameManager = require('../lib/frame-manager.js');\n      var fn = null;\n      var async = require('async');\n      var manager = FrameManager({\n        webContents: {\n          debugger: {\n            isAttached: function () {\n              return true;\n            },\n            sendCommand: function (command) {\n              if (command === 'DOM.highlightRect') {\n                setTimeout(function () {\n                  fn('mock-data');\n                }, 100);\n              }\n            }\n          },\n          beginFrameSubscription: function (_fn) {\n            subscribeCount += 1;\n            assert.strictEqual(fn, null);\n            fn = _fn;\n          },\n          endFrameSubscription: function () {\n            unsubscribeCount += 1;\n            fn = null;\n          },\n          executeJavaScript: function () {}\n        }\n      });\n      async.timesSeries(2, function requestFrameFn(i, cb) {\n        manager.requestFrame(function handleFrame(data) {\n          cb(null, data);\n        });\n      }, function handleResults(err, results) {\n        if (err) {\n          done(err);\n        }\n        subscribeCount.should.equal(2);\n        unsubscribeCount.should.equal(2);\n        results[0].should.equal('mock-data');\n        results[1].should.equal('mock-data');\n        done();\n      });\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should support multiple series timing out frame subscriptions","suites":["Nightmare","rendering"],"updatePoint":{"line":1198,"column":69,"index":46148},"line":1198,"code":"    it('should support multiple series timing out frame subscriptions', function (done) {\n      var subscribeCount = 0;\n      var unsubscribeCount = 0;\n      var FrameManager = require('../lib/frame-manager.js');\n      var fn = null;\n      var async = require('async');\n      var manager = FrameManager({\n        webContents: {\n          debugger: {\n            isAttached: function () {\n              return true;\n            },\n            sendCommand: function () {\n              /* Ignore command so it times out */\n            }\n          },\n          beginFrameSubscription: function (_fn) {\n            subscribeCount += 1;\n            assert.strictEqual(fn, null);\n            fn = _fn;\n          },\n          endFrameSubscription: function () {\n            unsubscribeCount += 1;\n            fn = null;\n          },\n          executeJavaScript: function () {}\n        }\n      });\n      async.timesSeries(2, function requestFrameFn(i, cb) {\n        manager.requestFrame(function handleFrame(data) {\n          cb(null, data);\n        }, 100);\n      }, function handleResults(err, results) {\n        if (err) {\n          done(err);\n        }\n        subscribeCount.should.equal(2);\n        unsubscribeCount.should.equal(2);\n        should.equal(results[0], null);\n        should.equal(results[1], null);\n        done();\n      });\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should load jquery correctly","suites":["Nightmare","rendering"],"updatePoint":{"line":1241,"column":36,"index":47459},"line":1241,"code":"    it('should load jquery correctly', function* () {\n      var loaded = yield nightmare.goto(fixture('rendering')).wait(2000).evaluate(function () {\n        return !!window.jQuery;\n      });\n      loaded.should.be.at.least(true);\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should render fonts correctly","suites":["Nightmare","rendering"],"updatePoint":{"line":1247,"column":37,"index":47699},"line":1247,"code":"    it('should render fonts correctly', function* () {\n      yield nightmare.goto(fixture('rendering')).wait(2000).screenshot(tmp_dir + '/font-rendering.png');\n      var stats = fs.statSync(tmp_dir + '/font-rendering.png');\n      stats.size.should.be.at.least(1000);\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should save as html","suites":["Nightmare","rendering"],"updatePoint":{"line":1252,"column":27,"index":47964},"line":1252,"code":"    it('should save as html', function* () {\n      yield nightmare.goto(fixture('manipulation')).html(tmp_dir + '/test.html');\n      var stats = fs.statSync(tmp_dir + '/test.html');\n      stats.should.be.ok;\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should render a PDF","suites":["Nightmare","rendering"],"updatePoint":{"line":1257,"column":27,"index":48180},"line":1257,"code":"    it('should render a PDF', function* () {\n      yield nightmare.goto(fixture('manipulation')).pdf(tmp_dir + '/test.pdf');\n      var stats = fs.statSync(tmp_dir + '/test.pdf');\n      stats.size.should.be.at.least(1000);\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should accept options to render a PDF","suites":["Nightmare","rendering"],"updatePoint":{"line":1262,"column":45,"index":48428},"line":1262,"code":"    it('should accept options to render a PDF', function* () {\n      yield nightmare.goto(fixture('manipulation')).pdf(tmp_dir + '/test2.pdf', {\n        printBackground: false\n      });\n      var stats = fs.statSync(tmp_dir + '/test2.pdf');\n      stats.size.should.be.at.least(1000);\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should return a buffer from a PDF with no path","suites":["Nightmare","rendering"],"updatePoint":{"line":1269,"column":54,"index":48729},"line":1269,"code":"    it('should return a buffer from a PDF with no path', function* () {\n      var buf = yield nightmare.goto(fixture('manipulation')).pdf({\n        printBackground: false\n      });\n      var isBuffer = Buffer.isBuffer(buf);\n      buf.length.should.be.at.least(1000);\n      isBuffer.should.be.true;\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should return referer from headers","suites":["Nightmare","referer"],"updatePoint":{"line":1290,"column":42,"index":49301},"line":1290,"code":"    it('should return referer from headers', function* () {\n      var referer = 'http://my-referer.tld/';\n      var returnedReferer = yield nightmare.goto(fixture('referer'), {\n        Referer: referer\n      }).evaluate(function () {\n        return document.body.innerText;\n      });\n      referer.should.be.equal(returnedReferer.trim());\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should fire an event on page load complete","suites":["Nightmare","events"],"updatePoint":{"line":1308,"column":50,"index":49850},"line":1308,"code":"    it('should fire an event on page load complete', function* () {\n      var fired = false;\n      nightmare.on('did-finish-load', function () {\n        fired = true;\n      });\n      yield nightmare.goto(fixture('events'));\n      fired.should.be.true;\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should fire an event on javascript error","suites":["Nightmare","events"],"updatePoint":{"line":1316,"column":48,"index":50108},"line":1316,"code":"    it('should fire an event on javascript error', function* () {\n      var fired = false;\n      nightmare.on('page', function (type, _errorMessage, _errorStack) {\n        if (type === 'error') {\n          fired = true;\n        }\n      });\n      yield nightmare.goto(fixture('events'));\n      fired.should.be.true;\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should fire an event on javascript console.log","suites":["Nightmare","events"],"updatePoint":{"line":1326,"column":54,"index":50437},"line":1326,"code":"    it('should fire an event on javascript console.log', function* () {\n      var log = '';\n      nightmare.on('console', function (type, str) {\n        if (type === 'log') log = str;\n      });\n      yield nightmare.goto(fixture('events'));\n      log.should.equal('my log');\n      yield nightmare.click('button');\n      log.should.equal('clicked');\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should fire an event on page load failure","suites":["Nightmare","events"],"updatePoint":{"line":1336,"column":49,"index":50789},"line":1336,"code":"    it('should fire an event on page load failure', function* () {\n      var fired = false;\n      nightmare.on('did-fail-load', function () {\n        fired = true;\n      });\n      try {\n        yield nightmare.goto('https://alskdjfasdfuuu.com');\n      } catch (_error) {\n        // do nothing\n      }\n      fired.should.be.true;\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should fire an event on javascript window.alert","suites":["Nightmare","events"],"updatePoint":{"line":1348,"column":55,"index":51132},"line":1348,"code":"    it('should fire an event on javascript window.alert', function* () {\n      var alert = '';\n      nightmare.on('page', function (type, message) {\n        if (type === 'alert') {\n          alert = message;\n        }\n      });\n      yield nightmare.goto(fixture('events')).evaluate(function () {\n        alert('my alert');\n      });\n      alert.should.equal('my alert');\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should fire an event on javascript window.prompt","suites":["Nightmare","events"],"updatePoint":{"line":1360,"column":56,"index":51513},"line":1360,"code":"    it('should fire an event on javascript window.prompt', function* () {\n      var prompt = '';\n      var response = '';\n      nightmare.on('page', function (type, message, res) {\n        if (type === 'prompt') {\n          prompt = message;\n          response = res;\n        }\n      });\n      yield nightmare.goto(fixture('events')).evaluate(function () {\n        prompt('my prompt', 'hello!');\n      });\n      prompt.should.equal('my prompt');\n      response.should.equal('hello!');\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should fire an event on javascript window.confirm","suites":["Nightmare","events"],"updatePoint":{"line":1375,"column":57,"index":52007},"line":1375,"code":"    it('should fire an event on javascript window.confirm', function* () {\n      var confirm = '';\n      var response = '';\n      nightmare.on('page', function (type, message, res) {\n        if (type === 'confirm') {\n          confirm = message;\n          response = res;\n        }\n      });\n      yield nightmare.goto(fixture('events')).evaluate(function () {\n        confirm('my confirm', 'hello!');\n      });\n      confirm.should.equal('my confirm');\n      response.should.equal('hello!');\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should only fire once when using once","suites":["Nightmare","events"],"updatePoint":{"line":1390,"column":45,"index":52496},"line":1390,"code":"    it('should only fire once when using once', function* () {\n      var events = 0;\n      nightmare.once('page', function (_type, _message) {\n        events++;\n      });\n      yield nightmare.goto(fixture('events'));\n      events.should.equal(1);\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should remove event listener","suites":["Nightmare","events"],"updatePoint":{"line":1398,"column":36,"index":52743},"line":1398,"code":"    it('should remove event listener', function* () {\n      var events = 0;\n      var handler = function (type, _message) {\n        if (type === 'alert') {\n          events++;\n        }\n      };\n      nightmare.on('page', handler);\n      yield nightmare.goto(fixture('events')).evaluate(function () {\n        alert('alert one');\n      });\n      nightmare.removeListener('page', handler);\n      yield nightmare.evaluate(function () {\n        alert('alert two');\n      });\n      events.should.equal(1);\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should set useragent","suites":["Nightmare","options"],"updatePoint":{"line":1440,"column":28,"index":54090},"line":1440,"code":"    it('should set useragent', function* () {\n      nightmare = new Nightmare();\n      var useragent = yield nightmare.useragent('firefox').goto(fixture('options')).evaluate(function () {\n        return window.navigator.userAgent;\n      });\n      useragent.should.eql('firefox');\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should wait and fail with waitTimeout","suites":["Nightmare","options"],"updatePoint":{"line":1447,"column":45,"index":54395},"line":1447,"code":"    it('should wait and fail with waitTimeout', function () {\n      nightmare = Nightmare({\n        waitTimeout: 254\n      });\n      return nightmare.goto(fixture('navigation')).wait('foobar').should.be.rejected;\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should wait and fail with waitTimeout and a ms wait time","suites":["Nightmare","options"],"updatePoint":{"line":1453,"column":64,"index":54635},"line":1453,"code":"    it('should wait and fail with waitTimeout and a ms wait time', function () {\n      nightmare = Nightmare({\n        waitTimeout: 254\n      });\n      return nightmare.goto(fixture('navigation')).wait(1000).should.be.rejected;\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should wait and fail with waitTimeout with queued functions","suites":["Nightmare","options"],"updatePoint":{"line":1459,"column":67,"index":54874},"line":1459,"code":"    it('should wait and fail with waitTimeout with queued functions', function () {\n      nightmare = Nightmare({\n        waitTimeout: 254\n      });\n      return nightmare.goto(fixture('navigation')).wait('foobar').exists('baz').should.be.rejected;\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should set authentication","suites":["Nightmare","options"],"updatePoint":{"line":1465,"column":33,"index":55097},"line":1465,"code":"    it('should set authentication', function* () {\n      nightmare = Nightmare();\n      var data = yield nightmare.authentication('my', 'auth').goto(fixture('auth')).evaluate(function () {\n        return JSON.parse(document.querySelector('pre').innerHTML);\n      });\n      data.should.eql({\n        name: 'my',\n        pass: 'auth'\n      });\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should fail on authentication failure","suites":["Nightmare","options"],"updatePoint":{"line":1475,"column":45,"index":55459},"line":1475,"code":"    it('should fail on authentication failure', function* () {\n      nightmare = Nightmare();\n      yield nightmare.authentication('my', 'wrong').goto(fixture('auth')).should.be.rejected;\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should be able to update authentication","suites":["Nightmare","options"],"updatePoint":{"line":1479,"column":47,"index":55657},"line":1479,"code":"    it('should be able to update authentication', function* () {\n      nightmare = Nightmare();\n      var data = yield nightmare.authentication('my', 'auth').goto(fixture('auth')).authentication('my2', 'auth2').goto(fixture('auth2')).evaluate(function () {\n        return JSON.parse(document.querySelector('pre').innerHTML);\n      });\n      data.should.eql({\n        name: 'my2',\n        pass: 'auth2'\n      });\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should set viewport","suites":["Nightmare","options"],"updatePoint":{"line":1489,"column":27,"index":56057},"line":1489,"code":"    it('should set viewport', function* () {\n      var size = {\n        width: 400,\n        height: 300,\n        useContentSize: true\n      };\n      nightmare = Nightmare(size);\n      var result = yield nightmare.goto(fixture('options')).evaluate(function () {\n        return {\n          width: window.innerWidth,\n          height: window.innerHeight\n        };\n      });\n      result.width.should.eql(size.width);\n      result.height.should.eql(size.height);\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should set a single header","suites":["Nightmare","options"],"updatePoint":{"line":1505,"column":34,"index":56532},"line":1505,"code":"    it('should set a single header', function* () {\n      nightmare = Nightmare();\n      var headers = yield nightmare.header('X-Nightmare-Header', 'hello world').goto(fixture('headers')).evaluate(function () {\n        return JSON.parse(document.querySelector('pre').innerHTML);\n      });\n      headers['x-nightmare-header'].should.equal('hello world');\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should set all headers","suites":["Nightmare","options"],"updatePoint":{"line":1512,"column":30,"index":56890},"line":1512,"code":"    it('should set all headers', function* () {\n      nightmare = Nightmare();\n      var headers = yield nightmare.header({\n        'X-Foo': 'foo',\n        'X-Bar': 'bar'\n      }).goto(fixture('headers')).evaluate(function () {\n        return JSON.parse(document.querySelector('pre').innerHTML);\n      });\n      headers['x-foo'].should.equal('foo');\n      headers['x-bar'].should.equal('bar');\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should set headers for that request","suites":["Nightmare","options"],"updatePoint":{"line":1523,"column":43,"index":57305},"line":1523,"code":"    it('should set headers for that request', function* () {\n      nightmare = Nightmare();\n      var headers = yield nightmare.goto(fixture('headers'), {\n        'X-Nightmare-Header': 'hello world'\n      }).evaluate(function () {\n        return JSON.parse(document.querySelector('pre').innerHTML);\n      });\n      headers['x-nightmare-header'].should.equal('hello world');\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should allow webPreferences settings","suites":["Nightmare","options"],"updatePoint":{"line":1532,"column":44,"index":57688},"line":1532,"code":"    it('should allow webPreferences settings', function* () {\n      nightmare = Nightmare({\n        webPreferences: {\n          webSecurity: false\n        }\n      });\n      var result = yield nightmare.goto(fixture('options')).evaluate(function () {\n        return document.getElementById('example-iframe').contentDocument;\n      });\n      result.should.be.ok;\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should be constructable with paths","suites":["Nightmare","options"],"updatePoint":{"line":1543,"column":42,"index":58055},"line":1543,"code":"    it('should be constructable with paths', function () {\n      nightmare = Nightmare({\n        paths: {\n          userData: __dirname\n        }\n      });\n      nightmare.should.be.ok;\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should be constructable with switches","suites":["Nightmare","options"],"updatePoint":{"line":1551,"column":45,"index":58252},"line":1551,"code":"    it('should be constructable with switches', function* () {\n      nightmare = Nightmare({\n        switches: {\n          // empty string and non-string values all represent no value\n          'ignore-certificate-errors': null,\n          'touch-events': ''\n        }\n      });\n      nightmare.should.be.ok;\n      var touchEvents = yield nightmare.goto(server.url).evaluate(function () {\n        return 'ontouchstart' in window;\n      });\n      touchEvents.should.be.true;\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should support switches with values","suites":["Nightmare","options"],"updatePoint":{"line":1565,"column":43,"index":58731},"line":1565,"code":"    it('should support switches with values', function* () {\n      nightmare = Nightmare({\n        switches: {\n          'force-device-scale-factor': '5'\n        }\n      });\n      nightmare.should.be.ok;\n      var scaleFactor = yield nightmare.goto('about:blank').evaluate(function () {\n        return window.devicePixelRatio;\n      });\n      scaleFactor.should.equal(5);\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should allow to use external Electron","suites":["Nightmare","options"],"updatePoint":{"line":1577,"column":45,"index":59113},"line":1577,"code":"    it('should allow to use external Electron', function () {\n      nightmare = Nightmare({\n        electronPath: require('electron')\n      });\n      nightmare.should.be.ok;\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should allow to use external Promise","suites":["Nightmare","options"],"updatePoint":{"line":1583,"column":44,"index":59294},"line":1583,"code":"    it('should allow to use external Promise', function* () {\n      nightmare = Nightmare({\n        Promise: require('bluebird')\n      });\n      nightmare.should.be.ok;\n      const thenPromise = nightmare.goto('about:blank').then();\n      thenPromise.should.be.an.instanceof(require('bluebird'));\n      yield thenPromise;\n      const catchPromise = nightmare.goto('about:blank').catch();\n      catchPromise.should.be.an.instanceof(require('bluebird'));\n      yield catchPromise;\n      const endPromise = nightmare.goto('about:blank').end().then();\n      endPromise.constructor.should.equal(require('bluebird'));\n      endPromise.should.be.an.instanceof(require('bluebird'));\n      yield endPromise;\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should default to native Promise","suites":["Nightmare","Nightmare.Promise"],"updatePoint":{"line":1607,"column":40,"index":60273},"line":1607,"code":"    it('should default to native Promise', function* () {\n      Nightmare.Promise.should.equal(Promise);\n      nightmare = Nightmare();\n      nightmare.should.be.ok;\n      var thenPromise = nightmare.goto('about:blank').then();\n      thenPromise.should.be.an.instanceof(Promise);\n      yield thenPromise;\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should override default Promise library","suites":["Nightmare","Nightmare.Promise"],"updatePoint":{"line":1615,"column":47,"index":60593},"line":1615,"code":"    it('should override default Promise library', function* () {\n      // `withDeprecationTracking()` messes w/ prototype constructor references\n      Nightmare.Promise = require('..').Promise = require('bluebird');\n      Nightmare.Promise.should.equal(require('bluebird'));\n      nightmare = Nightmare();\n      nightmare.should.be.ok;\n      var thenPromise = nightmare.goto('about:blank').then();\n      thenPromise.should.be.an.instanceof(require('bluebird'));\n      yield thenPromise;\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should not override per-instance Promise library","suites":["Nightmare","Nightmare.Promise"],"updatePoint":{"line":1625,"column":56,"index":61097},"line":1625,"code":"    it('should not override per-instance Promise library', function* () {\n      Nightmare.Promise.should.equal(Promise);\n      nightmare = Nightmare({\n        Promise: require('bluebird')\n      });\n      nightmare.should.be.ok;\n      var thenPromise = nightmare.goto('about:blank').then();\n      thenPromise.should.not.be.an.instanceof(Promise);\n      thenPromise.should.be.an.instanceof(require('bluebird'));\n      yield thenPromise;\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should support custom actions","suites":["Nightmare","Nightmare.action(name, fn)"],"updatePoint":{"line":1642,"column":37,"index":61667},"line":1642,"code":"    it('should support custom actions', function* () {\n      Nightmare.action('size', function (done) {\n        this.evaluate_now(function () {\n          var w = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n          var h = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n          return {\n            height: h,\n            width: w\n          };\n        }, done);\n      });\n      nightmare = new Nightmare();\n      var size = yield nightmare.goto(fixture('simple')).size();\n      size.height.should.be.a('number');\n      size.width.should.be.a('number');\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should support custom namespaces","suites":["Nightmare","Nightmare.action(name, fn)"],"updatePoint":{"line":1658,"column":40,"index":62289},"line":1658,"code":"    it('should support custom namespaces', function* () {\n      Nightmare.action('style', {\n        background: function (done) {\n          this.evaluate_now(function () {\n            return window.getComputedStyle(document.body, null).backgroundColor;\n          }, done);\n        },\n        color: function (done) {\n          this.evaluate_now(function () {\n            return window.getComputedStyle(document.body, null).color;\n          }, done);\n        }\n      });\n      nightmare = Nightmare();\n      yield nightmare.goto(fixture('simple'));\n      var background = yield nightmare.style.background();\n      var color = yield nightmare.style.color();\n      background.should.equal('rgba(0, 0, 0, 0)');\n      color.should.equal('rgb(0, 0, 0)');\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should allow env variables","suites":["Nightmare","Nightmare.action(name, fn)"],"updatePoint":{"line":1678,"column":34,"index":63040},"line":1678,"code":"    it('should allow env variables', function* () {\n      Nightmare.action('envtest', function (name, options, parent, win, renderer, done) {\n        parent.respondTo('envtest', function (done) {\n          done(null, process.env);\n        });\n        done();\n      }, function (done) {\n        this.child.call('envtest', done);\n      });\n      nightmare = Nightmare({\n        env: {\n          TZ: 'UTC'\n        }\n      });\n      nightmare.should.be.ok;\n      var envTest = yield nightmare.goto('about:bank').envtest();\n      envTest.should.be.ok;\n      envTest.should.have.property('TZ', 'UTC');\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should support extending nightmare","suites":["Nightmare","Nightmare.use"],"updatePoint":{"line":1706,"column":42,"index":63853},"line":1706,"code":"    it('should support extending nightmare', function* () {\n      var tagName = yield nightmare.goto(fixture('simple')).use(select('h1'));\n      tagName.should.equal('H1');\n      function select(tagname) {\n        return function (nightmare) {\n          nightmare.evaluate(function (tagname) {\n            return document.querySelector(tagname).tagName;\n          }, tagname);\n        };\n      }\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should support passing your own preload script in","suites":["Nightmare","custom preload script"],"updatePoint":{"line":1726,"column":57,"index":64481},"line":1726,"code":"    it('should support passing your own preload script in', function* () {\n      var nightmare = Nightmare({\n        webPreferences: {\n          preload: path.join(__dirname, 'fixtures', 'preload', 'index.js')\n        }\n      });\n      var value = yield nightmare.goto(fixture('preload')).evaluate(function () {\n        return window.preload;\n      });\n      value.should.equal('custom');\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should open devtools","suites":["Nightmare","devtools"],"updatePoint":{"line":1764,"column":28,"index":65657},"line":1764,"code":"    it('should open devtools', function* () {\n      var devToolsOpen = yield nightmare.goto(fixture('simple')).waitForDevTools();\n      devToolsOpen.should.be.true;\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should only make one IPC instance per process","suites":["Nightmare","ipc"],"updatePoint":{"line":1800,"column":53,"index":66823},"line":1800,"code":"    it('should only make one IPC instance per process', function () {\n      var processStub = {\n        send: function () {},\n        on: function () {}\n      };\n      var ipc1 = IPC(processStub);\n      var ipc2 = IPC(processStub);\n      ipc1.should.equal(ipc2);\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should support basic call-response","suites":["Nightmare","ipc"],"updatePoint":{"line":1809,"column":42,"index":67083},"line":1809,"code":"    it('should support basic call-response', function* () {\n      var result = yield nightmare.test('x');\n      result.should.equal('Got x');\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should support errors across IPC","suites":["Nightmare","ipc"],"updatePoint":{"line":1813,"column":40,"index":67231},"line":1813,"code":"    it('should support errors across IPC', function (done) {\n      nightmare.test('error').then(function () {\n        done(new Error('Action succeeded when it should have errored!'));\n      }, function () {\n        done();\n      });\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should stream progress","suites":["Nightmare","ipc"],"updatePoint":{"line":1820,"column":30,"index":67462},"line":1820,"code":"    it('should stream progress', function* () {\n      var progress = [];\n      yield nightmare.test({\n        arg: 'x',\n        onData: data => progress.push(data),\n        onEnd: (error, data) => progress.push([error, data])\n      });\n      progress.should.deep.equal(['one', 'two', [null, 'Got x']]);\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should trigger error if no responder is registered","suites":["Nightmare","ipc"],"updatePoint":{"line":1829,"column":58,"index":67801},"line":1829,"code":"    it('should trigger error if no responder is registered', function (done) {\n      nightmare.noImplementation().then(function () {\n        done(new Error('Action succeeded when it should have errored!'));\n      }, function () {\n        done();\n      });\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should log a warning when replacing a responder","suites":["Nightmare","ipc"],"updatePoint":{"line":1836,"column":55,"index":68062},"line":1836,"code":"    it('should log a warning when replacing a responder', function* () {\n      Nightmare.action('uhoh', function (_, __, parent, ___, ____, done) {\n        parent.respondTo('test', function (done) {\n          done();\n        });\n        done();\n      }, function (done) {\n        this.child.call('test', done);\n      });\n      var logged = false;\n      var instance = Nightmare();\n      instance._queue.splice(1, 0, [function (done) {\n        this.child.on('nightmare:ipc:debug', function (message) {\n          if (message.toLowerCase().indexOf('replacing') > -1) {\n            logged = true;\n          }\n        });\n        done();\n      }, []]);\n      yield instance.goto('about:blank').end();\n      logged.should.be.true;\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should not persist between instances by default","suites":["Nightmare","partitioning"],"updatePoint":{"line":1866,"column":55,"index":69012},"line":1866,"code":"    it('should not persist between instances by default', function* () {\n      nightmare = Nightmare();\n      yield nightmare.goto(fixture('simple')).evaluate(function () {\n        window.localStorage.setItem('testing', 'This string should not persist between instances.');\n      }).end();\n      nightmare = Nightmare();\n      var value = yield nightmare.goto(fixture('simple')).evaluate(function () {\n        return window.localStorage.getItem('testing') || '';\n      });\n      value.should.equal('');\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should persist between instances if partition is null","suites":["Nightmare","partitioning"],"updatePoint":{"line":1880,"column":61,"index":69674},"line":1880,"code":"    it('should persist between instances if partition is null', function* () {\n      nightmare = Nightmare({\n        webPreferences: {\n          partition: null\n        }\n      });\n      yield nightmare.goto(fixture('simple')).evaluate(function () {\n        window.localStorage.setItem('testing', 'This string should persist between instances.');\n      }).end();\n      nightmare = Nightmare({\n        webPreferences: {\n          partition: null\n        }\n      });\n      var value = yield nightmare.goto(fixture('simple')).evaluate(function () {\n        return window.localStorage.getItem('testing') || '';\n      });\n      value.should.equal('This string should persist between instances.');\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should not persist between instances if partition name doesnt start with \"persist:\"","suites":["Nightmare","partitioning"],"updatePoint":{"line":1899,"column":91,"index":70404},"line":1899,"code":"    it('should not persist between instances if partition name doesnt start with \"persist:\"', function* () {\n      nightmare = Nightmare({\n        webPreferences: {\n          partition: 'nonpersist'\n        }\n      });\n      yield nightmare.goto(fixture('simple')).evaluate(function () {\n        window.localStorage.setItem('testing', 'This string not should persist between instances.');\n      }).end();\n      nightmare = Nightmare({\n        webPreferences: {\n          partition: 'nonpersist'\n        }\n      });\n      var value = yield nightmare.goto(fixture('simple')).evaluate(function () {\n        return window.localStorage.getItem('testing') || '';\n      });\n      value.should.equal('');\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should persist between instances if partition starts with \"persist:\"","suites":["Nightmare","partitioning"],"updatePoint":{"line":1918,"column":76,"index":71094},"line":1918,"code":"    it('should persist between instances if partition starts with \"persist:\"', function* () {\n      nightmare = Nightmare({\n        webPreferences: {\n          partition: 'persist: testing'\n        }\n      });\n      yield nightmare.goto(fixture('simple')).evaluate(function () {\n        window.localStorage.setItem('testing', 'This string should persist between instances.');\n      }).end();\n      nightmare = Nightmare({\n        webPreferences: {\n          partition: 'persist: testing'\n        }\n      });\n      var value = yield nightmare.goto(fixture('simple')).evaluate(function () {\n        return window.localStorage.getItem('testing') || '';\n      });\n      value.should.equal('This string should persist between instances.');\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should not expose the ipc in evaluate","suites":["Nightmare","security"],"updatePoint":{"line":1939,"column":45,"index":71849},"line":1939,"code":"    it('should not expose the ipc in evaluate', function* () {\n      const nightmare = Nightmare();\n      const result = yield nightmare.goto(fixture('simple')).evaluate(() => {\n        return this.send || this.window.send || this.ipc || window.ipc;\n      });\n      assert.strictEqual(result, null);\n    });","file":"index.js","skipped":false,"dir":"test"},{"name":"should not expose the ipc to the 3rd party","suites":["Nightmare","security"],"updatePoint":{"line":1946,"column":50,"index":72162},"line":1946,"code":"    it('should not expose the ipc to the 3rd party', function* () {\n      const nightmare = Nightmare();\n      const deferred = new Deferred();\n      nightmare.on('console', function (_type, ipc, windowIPC, send, windowSend) {\n        // Since we cant define a Content-Security-Policy\n        // and use restrictive rules. Rely on Electron providing\n        // the warning string and making sure it clobbered these\n        // into strings\n        assert.strictEqual(typeof ipc, 'string');\n        assert.strictEqual(typeof windowIPC, 'string');\n        assert.strictEqual(typeof send, 'string');\n        windowSend || undefined;\n        deferred.resolve();\n      });\n      yield nightmare.goto(fixture('security'));\n      yield deferred;\n    });","file":"index.js","skipped":false,"dir":"test"}]}