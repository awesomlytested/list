{"repo":"expressjs/express","url":"https://github.com/expressjs/express","branch":"master","configs":[{"package":"express","lang":"js","dir":"test","framework":"mocha","pattern":"**/*.{js,ts}"}],"tests":[{"name":"should redirect to /login","suites":["auth","GET /"],"updatePoint":{"line":8,"column":33,"index":258},"line":8,"code":"    it('should redirect to /login', function (done) {\n      request(app).get('/').expect('Location', '/login').expect(302, done);\n    });","file":"acceptance/auth.js","skipped":false,"dir":"test"},{"name":"should render login form","suites":["auth","GET /login"],"updatePoint":{"line":13,"column":32,"index":440},"line":13,"code":"    it('should render login form', function (done) {\n      request(app).get('/login').expect(200, /<form/, done);\n    });","file":"acceptance/auth.js","skipped":false,"dir":"test"},{"name":"should display login error for bad user","suites":["auth","GET /login"],"updatePoint":{"line":16,"column":47,"index":577},"line":16,"code":"    it('should display login error for bad user', function (done) {\n      request(app).post('/login').type('urlencoded').send('username=not-tj&password=foobar').expect('Location', '/login').expect(302, function (err, res) {\n        if (err) return done(err);\n        request(app).get('/login').set('Cookie', getCookie(res)).expect(200, /Authentication failed/, done);\n      });\n    });","file":"acceptance/auth.js","skipped":false,"dir":"test"},{"name":"should display login error for bad password","suites":["auth","GET /login"],"updatePoint":{"line":22,"column":51,"index":967},"line":22,"code":"    it('should display login error for bad password', function (done) {\n      request(app).post('/login').type('urlencoded').send('username=tj&password=nogood').expect('Location', '/login').expect(302, function (err, res) {\n        if (err) return done(err);\n        request(app).get('/login').set('Cookie', getCookie(res)).expect(200, /Authentication failed/, done);\n      });\n    });","file":"acceptance/auth.js","skipped":false,"dir":"test"},{"name":"should redirect to /","suites":["auth","GET /logout"],"updatePoint":{"line":30,"column":28,"index":1376},"line":30,"code":"    it('should redirect to /', function (done) {\n      request(app).get('/logout').expect('Location', '/').expect(302, done);\n    });","file":"acceptance/auth.js","skipped":false,"dir":"test"},{"name":"should redirect to /login without cookie","suites":["auth","GET /restricted"],"updatePoint":{"line":35,"column":48,"index":1580},"line":35,"code":"    it('should redirect to /login without cookie', function (done) {\n      request(app).get('/restricted').expect('Location', '/login').expect(302, done);\n    });","file":"acceptance/auth.js","skipped":false,"dir":"test"},{"name":"should succeed with proper cookie","suites":["auth","GET /restricted"],"updatePoint":{"line":38,"column":41,"index":1736},"line":38,"code":"    it('should succeed with proper cookie', function (done) {\n      request(app).post('/login').type('urlencoded').send('username=tj&password=foobar').expect('Location', '/').expect(302, function (err, res) {\n        if (err) return done(err);\n        request(app).get('/restricted').set('Cookie', getCookie(res)).expect(200, done);\n      });\n    });","file":"acceptance/auth.js","skipped":false,"dir":"test"},{"name":"should fail without proper username","suites":["auth","POST /login"],"updatePoint":{"line":46,"column":43,"index":2135},"line":46,"code":"    it('should fail without proper username', function (done) {\n      request(app).post('/login').type('urlencoded').send('username=not-tj&password=foobar').expect('Location', '/login').expect(302, done);\n    });","file":"acceptance/auth.js","skipped":false,"dir":"test"},{"name":"should fail without proper password","suites":["auth","POST /login"],"updatePoint":{"line":49,"column":43,"index":2348},"line":49,"code":"    it('should fail without proper password', function (done) {\n      request(app).post('/login').type('urlencoded').send('username=tj&password=baz').expect('Location', '/login').expect(302, done);\n    });","file":"acceptance/auth.js","skipped":false,"dir":"test"},{"name":"should succeed with proper credentials","suites":["auth","POST /login"],"updatePoint":{"line":52,"column":46,"index":2557},"line":52,"code":"    it('should succeed with proper credentials', function (done) {\n      request(app).post('/login').type('urlencoded').send('username=tj&password=foobar').expect('Location', '/').expect(302, done);\n    });","file":"acceptance/auth.js","skipped":false,"dir":"test"},{"name":"should default to text/html","suites":["content-negotiation","GET /"],"updatePoint":{"line":5,"column":35,"index":207},"line":5,"code":"    it('should default to text/html', function (done) {\n      request(app).get('/').expect(200, '<ul><li>Tobi</li><li>Loki</li><li>Jane</li></ul>', done);\n    });","file":"acceptance/content-negotiation.js","skipped":false,"dir":"test"},{"name":"should accept to text/plain","suites":["content-negotiation","GET /"],"updatePoint":{"line":8,"column":35,"index":370},"line":8,"code":"    it('should accept to text/plain', function (done) {\n      request(app).get('/').set('Accept', 'text/plain').expect(200, ' - Tobi\\n - Loki\\n - Jane\\n', done);\n    });","file":"acceptance/content-negotiation.js","skipped":false,"dir":"test"},{"name":"should accept to application/json","suites":["content-negotiation","GET /"],"updatePoint":{"line":11,"column":41,"index":546},"line":11,"code":"    it('should accept to application/json', function (done) {\n      request(app).get('/').set('Accept', 'application/json').expect(200, '[{\"name\":\"Tobi\"},{\"name\":\"Loki\"},{\"name\":\"Jane\"}]', done);\n    });","file":"acceptance/content-negotiation.js","skipped":false,"dir":"test"},{"name":"should default to text/html","suites":["content-negotiation","GET /users"],"updatePoint":{"line":16,"column":35,"index":789},"line":16,"code":"    it('should default to text/html', function (done) {\n      request(app).get('/users').expect(200, '<ul><li>Tobi</li><li>Loki</li><li>Jane</li></ul>', done);\n    });","file":"acceptance/content-negotiation.js","skipped":false,"dir":"test"},{"name":"should accept to text/plain","suites":["content-negotiation","GET /users"],"updatePoint":{"line":19,"column":35,"index":957},"line":19,"code":"    it('should accept to text/plain', function (done) {\n      request(app).get('/users').set('Accept', 'text/plain').expect(200, ' - Tobi\\n - Loki\\n - Jane\\n', done);\n    });","file":"acceptance/content-negotiation.js","skipped":false,"dir":"test"},{"name":"should accept to application/json","suites":["content-negotiation","GET /users"],"updatePoint":{"line":22,"column":41,"index":1138},"line":22,"code":"    it('should accept to application/json', function (done) {\n      request(app).get('/users').set('Accept', 'application/json').expect(200, '[{\"name\":\"Tobi\"},{\"name\":\"Loki\"},{\"name\":\"Jane\"}]', done);\n    });","file":"acceptance/content-negotiation.js","skipped":false,"dir":"test"},{"name":"should display no views","suites":["cookie-sessions","GET /"],"updatePoint":{"line":5,"column":31,"index":197},"line":5,"code":"    it('should display no views', function (done) {\n      request(app).get('/').expect(200, 'viewed 1 times\\n', done);\n    });","file":"acceptance/cookie-sessions.js","skipped":false,"dir":"test"},{"name":"should set a session cookie","suites":["cookie-sessions","GET /"],"updatePoint":{"line":8,"column":35,"index":328},"line":8,"code":"    it('should set a session cookie', function (done) {\n      request(app).get('/').expect('Set-Cookie', /session=/).expect(200, done);\n    });","file":"acceptance/cookie-sessions.js","skipped":false,"dir":"test"},{"name":"should display 1 view on revisit","suites":["cookie-sessions","GET /"],"updatePoint":{"line":11,"column":40,"index":477},"line":11,"code":"    it('should display 1 view on revisit', function (done) {\n      request(app).get('/').expect(200, 'viewed 1 times\\n', function (err, res) {\n        if (err) return done(err);\n        request(app).get('/').set('Cookie', getCookies(res)).expect(200, 'viewed 2 times\\n', done);\n      });\n    });","file":"acceptance/cookie-sessions.js","skipped":false,"dir":"test"},{"name":"should have a form","suites":["cookies","GET /"],"updatePoint":{"line":6,"column":26,"index":215},"line":6,"code":"    it('should have a form', function (done) {\n      request(app).get('/').expect(/<form/, done);\n    });","file":"acceptance/cookies.js","skipped":false,"dir":"test"},{"name":"should respond with no cookies","suites":["cookies","GET /"],"updatePoint":{"line":9,"column":38,"index":333},"line":9,"code":"    it('should respond with no cookies', function (done) {\n      request(app).get('/').expect(utils.shouldNotHaveHeader('Set-Cookie')).expect(200, done);\n    });","file":"acceptance/cookies.js","skipped":false,"dir":"test"},{"name":"should respond to cookie","suites":["cookies","GET /"],"updatePoint":{"line":12,"column":32,"index":489},"line":12,"code":"    it('should respond to cookie', function (done) {\n      request(app).post('/').type('urlencoded').send({\n        remember: 1\n      }).expect(302, function (err, res) {\n        if (err) return done(err);\n        request(app).get('/').set('Cookie', res.headers['set-cookie'][0]).expect(200, /Remembered/, done);\n      });\n    });","file":"acceptance/cookies.js","skipped":false,"dir":"test"},{"name":"should clear cookie","suites":["cookies","GET /forget"],"updatePoint":{"line":22,"column":27,"index":861},"line":22,"code":"    it('should clear cookie', function (done) {\n      request(app).post('/').type('urlencoded').send({\n        remember: 1\n      }).expect(302, function (err, res) {\n        if (err) return done(err);\n        request(app).get('/forget').set('Cookie', res.headers['set-cookie'][0]).expect('Set-Cookie', /remember=;/).expect(302, done);\n      });\n    });","file":"acceptance/cookies.js","skipped":false,"dir":"test"},{"name":"should set a cookie","suites":["cookies","POST /"],"updatePoint":{"line":32,"column":27,"index":1255},"line":32,"code":"    it('should set a cookie', function (done) {\n      request(app).post('/').type('urlencoded').send({\n        remember: 1\n      }).expect('Set-Cookie', /remember=1/).expect(302, done);\n    });","file":"acceptance/cookies.js","skipped":false,"dir":"test"},{"name":"should no set cookie w/o reminder","suites":["cookies","POST /"],"updatePoint":{"line":37,"column":41,"index":1463},"line":37,"code":"    it('should no set cookie w/o reminder', function (done) {\n      request(app).post('/').send({}).expect(utils.shouldNotHaveHeader('Set-Cookie')).expect(302, done);\n    });","file":"acceptance/cookies.js","skipped":false,"dir":"test"},{"name":"should have a link to amazing.txt","suites":["downloads","GET /"],"updatePoint":{"line":5,"column":41,"index":193},"line":5,"code":"    it('should have a link to amazing.txt', function (done) {\n      request(app).get('/').expect(/href=\"\\/files\\/amazing.txt\"/, done);\n    });","file":"acceptance/downloads.js","skipped":false,"dir":"test"},{"name":"should have a download header","suites":["downloads","GET /files/notes/groceries.txt"],"updatePoint":{"line":10,"column":37,"index":397},"line":10,"code":"    it('should have a download header', function (done) {\n      request(app).get('/files/notes/groceries.txt').expect('Content-Disposition', 'attachment; filename=\"groceries.txt\"').expect(200, done);\n    });","file":"acceptance/downloads.js","skipped":false,"dir":"test"},{"name":"should have a download header","suites":["downloads","GET /files/amazing.txt"],"updatePoint":{"line":15,"column":37,"index":662},"line":15,"code":"    it('should have a download header', function (done) {\n      request(app).get('/files/amazing.txt').expect('Content-Disposition', 'attachment; filename=\"amazing.txt\"').expect(200, done);\n    });","file":"acceptance/downloads.js","skipped":false,"dir":"test"},{"name":"should respond with 404","suites":["downloads","GET /files/missing.txt"],"updatePoint":{"line":20,"column":31,"index":911},"line":20,"code":"    it('should respond with 404', function (done) {\n      request(app).get('/files/missing.txt').expect(404, done);\n    });","file":"acceptance/downloads.js","skipped":false,"dir":"test"},{"name":"should respond with 403","suites":["downloads","GET /files/../index.js"],"updatePoint":{"line":25,"column":31,"index":1092},"line":25,"code":"    it('should respond with 403', function (done) {\n      request(app).get('/files/../index.js').expect(403, done);\n    });","file":"acceptance/downloads.js","skipped":false,"dir":"test"},{"name":"should respond with html","suites":["ejs","GET /"],"updatePoint":{"line":5,"column":32,"index":172},"line":5,"code":"    it('should respond with html', function (done) {\n      request(app).get('/').expect('Content-Type', 'text/html; charset=utf-8').expect(/<li>tobi &lt;tobi@learnboost\\.com&gt;<\\/li>/).expect(/<li>loki &lt;loki@learnboost\\.com&gt;<\\/li>/).expect(/<li>jane &lt;jane@learnboost\\.com&gt;<\\/li>/).expect(200, done);\n    });","file":"acceptance/ejs.js","skipped":false,"dir":"test"},{"name":"should respond with page list","suites":["error-pages","GET /"],"updatePoint":{"line":5,"column":37,"index":193},"line":5,"code":"    it('should respond with page list', function (done) {\n      request(app).get('/').expect(/Pages Example/, done);\n    });","file":"acceptance/error-pages.js","skipped":false,"dir":"test"},{"name":"should respond with 403","suites":["error-pages","Accept: text/html","GET /403"],"updatePoint":{"line":11,"column":33,"index":405},"line":11,"code":"      it('should respond with 403', function (done) {\n        request(app).get('/403').expect(403, done);\n      });","file":"acceptance/error-pages.js","skipped":false,"dir":"test"},{"name":"should respond with 404","suites":["error-pages","Accept: text/html","GET /404"],"updatePoint":{"line":16,"column":33,"index":568},"line":16,"code":"      it('should respond with 404', function (done) {\n        request(app).get('/404').expect(404, done);\n      });","file":"acceptance/error-pages.js","skipped":false,"dir":"test"},{"name":"should respond with 500","suites":["error-pages","Accept: text/html","GET /500"],"updatePoint":{"line":21,"column":33,"index":731},"line":21,"code":"      it('should respond with 500', function (done) {\n        request(app).get('/500').expect(500, done);\n      });","file":"acceptance/error-pages.js","skipped":false,"dir":"test"},{"name":"should respond with 403","suites":["error-pages","Accept: application/json","GET /403"],"updatePoint":{"line":28,"column":33,"index":953},"line":28,"code":"      it('should respond with 403', function (done) {\n        request(app).get('/403').set('Accept', 'application/json').expect(403, done);\n      });","file":"acceptance/error-pages.js","skipped":false,"dir":"test"},{"name":"should respond with 404","suites":["error-pages","Accept: application/json","GET /404"],"updatePoint":{"line":33,"column":33,"index":1150},"line":33,"code":"      it('should respond with 404', function (done) {\n        request(app).get('/404').set('Accept', 'application/json').expect(404, {\n          error: 'Not found'\n        }, done);\n      });","file":"acceptance/error-pages.js","skipped":false,"dir":"test"},{"name":"should respond with 500","suites":["error-pages","Accept: application/json","GET /500"],"updatePoint":{"line":40,"column":33,"index":1389},"line":40,"code":"      it('should respond with 500', function (done) {\n        request(app).get('/500').set('Accept', 'application/json').expect(500, done);\n      });","file":"acceptance/error-pages.js","skipped":false,"dir":"test"},{"name":"should respond with 403","suites":["error-pages","Accept: text/plain","GET /403"],"updatePoint":{"line":47,"column":33,"index":1639},"line":47,"code":"      it('should respond with 403', function (done) {\n        request(app).get('/403').set('Accept', 'text/plain').expect(403, done);\n      });","file":"acceptance/error-pages.js","skipped":false,"dir":"test"},{"name":"should respond with 404","suites":["error-pages","Accept: text/plain","GET /404"],"updatePoint":{"line":52,"column":33,"index":1830},"line":52,"code":"      it('should respond with 404', function (done) {\n        request(app).get('/404').set('Accept', 'text/plain').expect(404).expect('Not found', done);\n      });","file":"acceptance/error-pages.js","skipped":false,"dir":"test"},{"name":"should respond with 500","suites":["error-pages","Accept: text/plain","GET /500"],"updatePoint":{"line":57,"column":33,"index":2041},"line":57,"code":"      it('should respond with 500', function (done) {\n        request(app).get('/500').set('Accept', 'text/plain').expect(500, done);\n      });","file":"acceptance/error-pages.js","skipped":false,"dir":"test"},{"name":"should respond with 500","suites":["error","GET /"],"updatePoint":{"line":5,"column":31,"index":175},"line":5,"code":"    it('should respond with 500', function (done) {\n      request(app).get('/').expect(500, done);\n    });","file":"acceptance/error.js","skipped":false,"dir":"test"},{"name":"should respond with 500","suites":["error","GET /next"],"updatePoint":{"line":10,"column":31,"index":326},"line":10,"code":"    it('should respond with 500', function (done) {\n      request(app).get('/next').expect(500, done);\n    });","file":"acceptance/error.js","skipped":false,"dir":"test"},{"name":"should respond with 404","suites":["error","GET /missing"],"updatePoint":{"line":15,"column":31,"index":484},"line":15,"code":"    it('should respond with 404', function (done) {\n      request(app).get('/missing').expect(404, done);\n    });","file":"acceptance/error.js","skipped":false,"dir":"test"},{"name":"should respond with hello world","suites":["hello-world","GET /"],"updatePoint":{"line":5,"column":39,"index":197},"line":5,"code":"    it('should respond with hello world', function (done) {\n      request(app).get('/').expect(200, 'Hello World', done);\n    });","file":"acceptance/hello-world.js","skipped":false,"dir":"test"},{"name":"should respond with 404","suites":["hello-world","GET /missing"],"updatePoint":{"line":10,"column":31,"index":366},"line":10,"code":"    it('should respond with 404', function (done) {\n      request(app).get('/missing').expect(404, done);\n    });","file":"acceptance/hello-world.js","skipped":false,"dir":"test"},{"name":"should respond with html","suites":["markdown","GET /"],"updatePoint":{"line":5,"column":32,"index":184},"line":5,"code":"    it('should respond with html', function (done) {\n      request(app).get('/').expect(/<h1[^>]*>Markdown Example<\\/h1>/, done);\n    });","file":"acceptance/markdown.js","skipped":false,"dir":"test"},{"name":"should respond with an error","suites":["markdown","GET /fail"],"updatePoint":{"line":10,"column":36,"index":370},"line":10,"code":"    it('should respond with an error', function (done) {\n      request(app).get('/fail').expect(500, done);\n    });","file":"acceptance/markdown.js","skipped":false,"dir":"test"},{"name":"should respond with root handler","suites":["multi-router","GET /"],"updatePoint":{"line":5,"column":40,"index":200},"line":5,"code":"    it('should respond with root handler', function (done) {\n      request(app).get('/').expect(200, 'Hello from root route.', done);\n    });","file":"acceptance/multi-router.js","skipped":false,"dir":"test"},{"name":"should respond with APIv1 root handler","suites":["multi-router","GET /api/v1/"],"updatePoint":{"line":10,"column":46,"index":395},"line":10,"code":"    it('should respond with APIv1 root handler', function (done) {\n      request(app).get('/api/v1/').expect(200, 'Hello from APIv1 root route.', done);\n    });","file":"acceptance/multi-router.js","skipped":false,"dir":"test"},{"name":"should respond with users from APIv1","suites":["multi-router","GET /api/v1/users"],"updatePoint":{"line":15,"column":44,"index":606},"line":15,"code":"    it('should respond with users from APIv1', function (done) {\n      request(app).get('/api/v1/users').expect(200, 'List of APIv1 users.', done);\n    });","file":"acceptance/multi-router.js","skipped":false,"dir":"test"},{"name":"should respond with APIv2 root handler","suites":["multi-router","GET /api/v2/"],"updatePoint":{"line":20,"column":46,"index":811},"line":20,"code":"    it('should respond with APIv2 root handler', function (done) {\n      request(app).get('/api/v2/').expect(200, 'Hello from APIv2 root route.', done);\n    });","file":"acceptance/multi-router.js","skipped":false,"dir":"test"},{"name":"should respond with users from APIv2","suites":["multi-router","GET /api/v2/users"],"updatePoint":{"line":25,"column":44,"index":1022},"line":25,"code":"    it('should respond with users from APIv2', function (done) {\n      request(app).get('/api/v2/users').expect(200, 'List of APIv2 users.', done);\n    });","file":"acceptance/multi-router.js","skipped":false,"dir":"test"},{"name":"should redirect to /users","suites":["mvc","GET /"],"updatePoint":{"line":5,"column":33,"index":173},"line":5,"code":"    it('should redirect to /users', function (done) {\n      request(app).get('/').expect('Location', '/users').expect(302, done);\n    });","file":"acceptance/mvc.js","skipped":false,"dir":"test"},{"name":"should get pet","suites":["mvc","GET /pet/0"],"updatePoint":{"line":10,"column":22,"index":345},"line":10,"code":"    it('should get pet', function (done) {\n      request(app).get('/pet/0').expect(200, /Tobi/, done);\n    });","file":"acceptance/mvc.js","skipped":false,"dir":"test"},{"name":"should get pet edit page","suites":["mvc","GET /pet/0/edit"],"updatePoint":{"line":15,"column":32,"index":516},"line":15,"code":"    it('should get pet edit page', function (done) {\n      request(app).get('/pet/0/edit').expect(/<form/).expect(200, /Tobi/, done);\n    });","file":"acceptance/mvc.js","skipped":false,"dir":"test"},{"name":"should update the pet","suites":["mvc","PUT /pet/2"],"updatePoint":{"line":20,"column":29,"index":700},"line":20,"code":"    it('should update the pet', function (done) {\n      request(app).put('/pet/3').set('Content-Type', 'application/x-www-form-urlencoded').send({\n        pet: {\n          name: 'Boots'\n        }\n      }).expect(302, function (err, res) {\n        if (err) return done(err);\n        request(app).get('/pet/3/edit').expect(200, /Boots/, done);\n      });\n    });","file":"acceptance/mvc.js","skipped":false,"dir":"test"},{"name":"should display a list of users","suites":["mvc","GET /users"],"updatePoint":{"line":32,"column":38,"index":1114},"line":32,"code":"    it('should display a list of users', function (done) {\n      request(app).get('/users').expect(/<h1>Users<\\/h1>/).expect(/>TJ</).expect(/>Guillermo</).expect(/>Nathan</).expect(200, done);\n    });","file":"acceptance/mvc.js","skipped":false,"dir":"test"},{"name":"should display the user","suites":["mvc","GET /user/:id","when present"],"updatePoint":{"line":38,"column":33,"index":1401},"line":38,"code":"      it('should display the user', function (done) {\n        request(app).get('/user/0').expect(200, /<h1>TJ <a href=\"\\/user\\/0\\/edit\">edit/, done);\n      });","file":"acceptance/mvc.js","skipped":false,"dir":"test"},{"name":"should display the users pets","suites":["mvc","GET /user/:id","when present"],"updatePoint":{"line":41,"column":39,"index":1567},"line":41,"code":"      it('should display the users pets', function (done) {\n        request(app).get('/user/0').expect(/\\/pet\\/0\">Tobi/).expect(/\\/pet\\/1\">Loki/).expect(/\\/pet\\/2\">Jane/).expect(200, done);\n      });","file":"acceptance/mvc.js","skipped":false,"dir":"test"},{"name":"should 404","suites":["mvc","GET /user/:id","when not present"],"updatePoint":{"line":46,"column":20,"index":1803},"line":46,"code":"      it('should 404', function (done) {\n        request(app).get('/user/123').expect(404, done);\n      });","file":"acceptance/mvc.js","skipped":false,"dir":"test"},{"name":"should display the edit form","suites":["mvc","GET /user/:id/edit"],"updatePoint":{"line":52,"column":36,"index":1988},"line":52,"code":"    it('should display the edit form', function (done) {\n      request(app).get('/user/1/edit').expect(/Guillermo/).expect(200, /<form/, done);\n    });","file":"acceptance/mvc.js","skipped":false,"dir":"test"},{"name":"should 500 on error","suites":["mvc","PUT /user/:id"],"updatePoint":{"line":57,"column":27,"index":2179},"line":57,"code":"    it('should 500 on error', function (done) {\n      request(app).put('/user/1').send({}).expect(500, done);\n    });","file":"acceptance/mvc.js","skipped":false,"dir":"test"},{"name":"should update the user","suites":["mvc","PUT /user/:id"],"updatePoint":{"line":60,"column":30,"index":2300},"line":60,"code":"    it('should update the user', function (done) {\n      request(app).put('/user/1').set('Content-Type', 'application/x-www-form-urlencoded').send({\n        user: {\n          name: 'Tobo'\n        }\n      }).expect(302, function (err, res) {\n        if (err) return done(err);\n        request(app).get('/user/1/edit').expect(200, /Tobo/, done);\n      });\n    });","file":"acceptance/mvc.js","skipped":false,"dir":"test"},{"name":"should create a pet for user","suites":["mvc","POST /user/:id/pet"],"updatePoint":{"line":72,"column":36,"index":2721},"line":72,"code":"    it('should create a pet for user', function (done) {\n      request(app).post('/user/2/pet').set('Content-Type', 'application/x-www-form-urlencoded').send({\n        pet: {\n          name: 'Snickers'\n        }\n      }).expect('Location', '/user/2').expect(302, function (err, res) {\n        if (err) return done(err);\n        request(app).get('/user/2').expect(200, /Snickers/, done);\n      });\n    });","file":"acceptance/mvc.js","skipped":false,"dir":"test"},{"name":"should respond with instructions","suites":["params","GET /"],"updatePoint":{"line":5,"column":40,"index":188},"line":5,"code":"    it('should respond with instructions', function (done) {\n      request(app).get('/').expect(/Visit/, done);\n    });","file":"acceptance/params.js","skipped":false,"dir":"test"},{"name":"should respond with a user","suites":["params","GET /user/0"],"updatePoint":{"line":10,"column":34,"index":348},"line":10,"code":"    it('should respond with a user', function (done) {\n      request(app).get('/user/0').expect(/user tj/, done);\n    });","file":"acceptance/params.js","skipped":false,"dir":"test"},{"name":"should fail to find user","suites":["params","GET /user/9"],"updatePoint":{"line":15,"column":32,"index":514},"line":15,"code":"    it('should fail to find user', function (done) {\n      request(app).get('/user/9').expect(404, /failed to find user/, done);\n    });","file":"acceptance/params.js","skipped":false,"dir":"test"},{"name":"should respond with three users","suites":["params","GET /users/0-2"],"updatePoint":{"line":20,"column":39,"index":707},"line":20,"code":"    it('should respond with three users', function (done) {\n      request(app).get('/users/0-2').expect(/users tj, tobi, loki/, done);\n    });","file":"acceptance/params.js","skipped":false,"dir":"test"},{"name":"should fail integer parsing","suites":["params","GET /users/foo-bar"],"updatePoint":{"line":25,"column":35,"index":899},"line":25,"code":"    it('should fail integer parsing', function (done) {\n      request(app).get('/users/foo-bar').expect(400, /failed to parseInt foo/, done);\n    });","file":"acceptance/params.js","skipped":false,"dir":"test"},{"name":"should respond with instructions","suites":["resource","GET /"],"updatePoint":{"line":5,"column":40,"index":192},"line":5,"code":"    it('should respond with instructions', function (done) {\n      request(app).get('/').expect(/^<h1>Examples:<\\/h1>/, done);\n    });","file":"acceptance/resource.js","skipped":false,"dir":"test"},{"name":"should respond with all users","suites":["resource","GET /users"],"updatePoint":{"line":10,"column":37,"index":369},"line":10,"code":"    it('should respond with all users', function (done) {\n      request(app).get('/users').expect(/^\\[{\"name\":\"tj\"},{\"name\":\"ciaran\"},{\"name\":\"aaron\"},{\"name\":\"guillermo\"},{\"name\":\"simon\"},{\"name\":\"tobi\"}\\]/, done);\n    });","file":"acceptance/resource.js","skipped":false,"dir":"test"},{"name":"should respond with user 1","suites":["resource","GET /users/1"],"updatePoint":{"line":15,"column":34,"index":637},"line":15,"code":"    it('should respond with user 1', function (done) {\n      request(app).get('/users/1').expect(/^{\"name\":\"ciaran\"}/, done);\n    });","file":"acceptance/resource.js","skipped":false,"dir":"test"},{"name":"should respond with error","suites":["resource","GET /users/9"],"updatePoint":{"line":20,"column":33,"index":817},"line":20,"code":"    it('should respond with error', function (done) {\n      request(app).get('/users/9').expect('{\"error\":\"Cannot find user\"}', done);\n    });","file":"acceptance/resource.js","skipped":false,"dir":"test"},{"name":"should respond with users 1 through 3","suites":["resource","GET /users/1..3"],"updatePoint":{"line":25,"column":45,"index":1022},"line":25,"code":"    it('should respond with users 1 through 3', function (done) {\n      request(app).get('/users/1..3').expect(/^<ul><li>ciaran<\\/li>\\n<li>aaron<\\/li>\\n<li>guillermo<\\/li><\\/ul>/, done);\n    });","file":"acceptance/resource.js","skipped":false,"dir":"test"},{"name":"should delete user 1","suites":["resource","DELETE /users/1"],"updatePoint":{"line":30,"column":28,"index":1250},"line":30,"code":"    it('should delete user 1', function (done) {\n      request(app).del('/users/1').expect(/^destroyed/, done);\n    });","file":"acceptance/resource.js","skipped":false,"dir":"test"},{"name":"should fail","suites":["resource","DELETE /users/9"],"updatePoint":{"line":35,"column":19,"index":1411},"line":35,"code":"    it('should fail', function (done) {\n      request(app).del('/users/9').expect('Cannot find user', done);\n    });","file":"acceptance/resource.js","skipped":false,"dir":"test"},{"name":"should respond with users 2 and 3 as json","suites":["resource","GET /users/1..3.json"],"updatePoint":{"line":40,"column":49,"index":1613},"line":40,"code":"    it('should respond with users 2 and 3 as json', function (done) {\n      request(app).get('/users/1..3.json').expect(/^\\[null,{\"name\":\"aaron\"},{\"name\":\"guillermo\"}\\]/, done);\n    });","file":"acceptance/resource.js","skipped":false,"dir":"test"},{"name":"should respond with users","suites":["route-map","GET /users"],"updatePoint":{"line":5,"column":33,"index":190},"line":5,"code":"    it('should respond with users', function (done) {\n      request(app).get('/users').expect('user list', done);\n    });","file":"acceptance/route-map.js","skipped":false,"dir":"test"},{"name":"should delete users","suites":["route-map","DELETE /users"],"updatePoint":{"line":10,"column":27,"index":354},"line":10,"code":"    it('should delete users', function (done) {\n      request(app).del('/users').expect('delete users', done);\n    });","file":"acceptance/route-map.js","skipped":false,"dir":"test"},{"name":"should get a user","suites":["route-map","GET /users/:id"],"updatePoint":{"line":15,"column":25,"index":520},"line":15,"code":"    it('should get a user', function (done) {\n      request(app).get('/users/12').expect('user 12', done);\n    });","file":"acceptance/route-map.js","skipped":false,"dir":"test"},{"name":"should get a users pets","suites":["route-map","GET /users/:id/pets"],"updatePoint":{"line":20,"column":31,"index":695},"line":20,"code":"    it('should get a users pets', function (done) {\n      request(app).get('/users/12/pets').expect('user 12\\'s pets', done);\n    });","file":"acceptance/route-map.js","skipped":false,"dir":"test"},{"name":"should get a users pet","suites":["route-map","GET /users/:id/pets/:pid"],"updatePoint":{"line":25,"column":30,"index":887},"line":25,"code":"    it('should get a users pet', function (done) {\n      request(app).del('/users/12/pets/2').expect('delete 12\\'s pet 2', done);\n    });","file":"acceptance/route-map.js","skipped":false,"dir":"test"},{"name":"should respond with index","suites":["route-separation","GET /"],"updatePoint":{"line":5,"column":33,"index":201},"line":5,"code":"    it('should respond with index', function (done) {\n      request(app).get('/').expect(200, /Route Separation Example/, done);\n    });","file":"acceptance/route-separation.js","skipped":false,"dir":"test"},{"name":"should list users","suites":["route-separation","GET /users"],"updatePoint":{"line":10,"column":25,"index":375},"line":10,"code":"    it('should list users', function (done) {\n      request(app).get('/users').expect(/TJ/).expect(/Tobi/).expect(200, done);\n    });","file":"acceptance/route-separation.js","skipped":false,"dir":"test"},{"name":"should get a user","suites":["route-separation","GET /user/:id"],"updatePoint":{"line":15,"column":25,"index":557},"line":15,"code":"    it('should get a user', function (done) {\n      request(app).get('/user/0').expect(200, /Viewing user TJ/, done);\n    });","file":"acceptance/route-separation.js","skipped":false,"dir":"test"},{"name":"should 404 on missing user","suites":["route-separation","GET /user/:id"],"updatePoint":{"line":18,"column":34,"index":692},"line":18,"code":"    it('should 404 on missing user', function (done) {\n      request(app).get('/user/10').expect(404, done);\n    });","file":"acceptance/route-separation.js","skipped":false,"dir":"test"},{"name":"should get a user","suites":["route-separation","GET /user/:id/view"],"updatePoint":{"line":23,"column":25,"index":853},"line":23,"code":"    it('should get a user', function (done) {\n      request(app).get('/user/0/view').expect(200, /Viewing user TJ/, done);\n    });","file":"acceptance/route-separation.js","skipped":false,"dir":"test"},{"name":"should 404 on missing user","suites":["route-separation","GET /user/:id/view"],"updatePoint":{"line":26,"column":34,"index":993},"line":26,"code":"    it('should 404 on missing user', function (done) {\n      request(app).get('/user/10/view').expect(404, done);\n    });","file":"acceptance/route-separation.js","skipped":false,"dir":"test"},{"name":"should get a user to edit","suites":["route-separation","GET /user/:id/edit"],"updatePoint":{"line":31,"column":33,"index":1167},"line":31,"code":"    it('should get a user to edit', function (done) {\n      request(app).get('/user/0/edit').expect(200, /Editing user TJ/, done);\n    });","file":"acceptance/route-separation.js","skipped":false,"dir":"test"},{"name":"should edit a user","suites":["route-separation","PUT /user/:id/edit"],"updatePoint":{"line":36,"column":26,"index":1352},"line":36,"code":"    it('should edit a user', function (done) {\n      request(app).put('/user/0/edit').set('Content-Type', 'application/x-www-form-urlencoded').send({\n        user: {\n          name: 'TJ',\n          email: 'tj-invalid@vision-media.ca'\n        }\n      }).expect(302, function (err) {\n        if (err) return done(err);\n        request(app).get('/user/0').expect(200, /tj-invalid@vision-media\\.ca/, done);\n      });\n    });","file":"acceptance/route-separation.js","skipped":false,"dir":"test"},{"name":"should edit a user","suites":["route-separation","POST /user/:id/edit?_method=PUT"],"updatePoint":{"line":49,"column":26,"index":1839},"line":49,"code":"    it('should edit a user', function (done) {\n      request(app).post('/user/1/edit?_method=PUT').set('Content-Type', 'application/x-www-form-urlencoded').send({\n        user: {\n          name: 'Tobi',\n          email: 'tobi-invalid@vision-media.ca'\n        }\n      }).expect(302, function (err) {\n        if (err) return done(err);\n        request(app).get('/user/1').expect(200, /tobi-invalid@vision-media\\.ca/, done);\n      });\n    });","file":"acceptance/route-separation.js","skipped":false,"dir":"test"},{"name":"should get a list of posts","suites":["route-separation","GET /posts"],"updatePoint":{"line":62,"column":34,"index":2332},"line":62,"code":"    it('should get a list of posts', function (done) {\n      request(app).get('/posts').expect(200, /Posts/, done);\n    });","file":"acceptance/route-separation.js","skipped":false,"dir":"test"},{"name":"should say hello","suites":["vhost","example.com","GET /"],"updatePoint":{"line":6,"column":26,"index":214},"line":6,"code":"      it('should say hello', function (done) {\n        request(app).get('/').set('Host', 'example.com').expect(200, /hello/i, done);\n      });","file":"acceptance/vhost.js","skipped":false,"dir":"test"},{"name":"should say foo","suites":["vhost","example.com","GET /foo"],"updatePoint":{"line":11,"column":24,"index":402},"line":11,"code":"      it('should say foo', function (done) {\n        request(app).get('/foo').set('Host', 'example.com').expect(200, 'requested foo', done);\n      });","file":"acceptance/vhost.js","skipped":false,"dir":"test"},{"name":"should redirect to /foo","suites":["vhost","foo.example.com","GET /"],"updatePoint":{"line":18,"column":33,"index":656},"line":18,"code":"      it('should redirect to /foo', function (done) {\n        request(app).get('/').set('Host', 'foo.example.com').expect(302, /Redirecting to http:\\/\\/example.com:3000\\/foo/, done);\n      });","file":"acceptance/vhost.js","skipped":false,"dir":"test"},{"name":"should redirect to /bar","suites":["vhost","bar.example.com","GET /"],"updatePoint":{"line":25,"column":33,"index":943},"line":25,"code":"      it('should redirect to /bar', function (done) {\n        request(app).get('/').set('Host', 'bar.example.com').expect(302, /Redirecting to http:\\/\\/example.com:3000\\/bar/, done);\n      });","file":"acceptance/vhost.js","skipped":false,"dir":"test"},{"name":"should respond with 400 bad request","suites":["web-service","GET /api/users","without an api key"],"updatePoint":{"line":6,"column":45,"index":259},"line":6,"code":"      it('should respond with 400 bad request', function (done) {\n        request(app).get('/api/users').expect(400, done);\n      });","file":"acceptance/web-service.js","skipped":false,"dir":"test"},{"name":"should respond with 401 unauthorized","suites":["web-service","GET /api/users","with an invalid api key"],"updatePoint":{"line":11,"column":46,"index":456},"line":11,"code":"      it('should respond with 401 unauthorized', function (done) {\n        request(app).get('/api/users?api-key=rawr').expect(401, done);\n      });","file":"acceptance/web-service.js","skipped":false,"dir":"test"},{"name":"should respond users json","suites":["web-service","GET /api/users","with a valid api key"],"updatePoint":{"line":16,"column":35,"index":652},"line":16,"code":"      it('should respond users json', function (done) {\n        request(app).get('/api/users?api-key=foo').expect('Content-Type', 'application/json; charset=utf-8').expect(200, '[{\"name\":\"tobi\"},{\"name\":\"loki\"},{\"name\":\"jane\"}]', done);\n      });","file":"acceptance/web-service.js","skipped":false,"dir":"test"},{"name":"should respond with 400 bad request","suites":["web-service","GET /api/repos","without an api key"],"updatePoint":{"line":23,"column":45,"index":1015},"line":23,"code":"      it('should respond with 400 bad request', function (done) {\n        request(app).get('/api/repos').expect(400, done);\n      });","file":"acceptance/web-service.js","skipped":false,"dir":"test"},{"name":"should respond with 401 unauthorized","suites":["web-service","GET /api/repos","with an invalid api key"],"updatePoint":{"line":28,"column":46,"index":1212},"line":28,"code":"      it('should respond with 401 unauthorized', function (done) {\n        request(app).get('/api/repos?api-key=rawr').expect(401, done);\n      });","file":"acceptance/web-service.js","skipped":false,"dir":"test"},{"name":"should respond repos json","suites":["web-service","GET /api/repos","with a valid api key"],"updatePoint":{"line":33,"column":35,"index":1408},"line":33,"code":"      it('should respond repos json', function (done) {\n        request(app).get('/api/repos?api-key=foo').expect('Content-Type', 'application/json; charset=utf-8').expect(/\"name\":\"express\"/).expect(/\"url\":\"https:\\/\\/github.com\\/expressjs\\/express\"/).expect(200, done);\n      });","file":"acceptance/web-service.js","skipped":false,"dir":"test"},{"name":"should respond with 400 bad request","suites":["web-service","GET /api/user/:name/repos","without an api key"],"updatePoint":{"line":40,"column":45,"index":1815},"line":40,"code":"      it('should respond with 400 bad request', function (done) {\n        request(app).get('/api/user/loki/repos').expect(400, done);\n      });","file":"acceptance/web-service.js","skipped":false,"dir":"test"},{"name":"should respond with 401 unauthorized","suites":["web-service","GET /api/user/:name/repos","with an invalid api key"],"updatePoint":{"line":45,"column":46,"index":2022},"line":45,"code":"      it('should respond with 401 unauthorized', function (done) {\n        request(app).get('/api/user/loki/repos?api-key=rawr').expect(401, done);\n      });","file":"acceptance/web-service.js","skipped":false,"dir":"test"},{"name":"should respond user repos json","suites":["web-service","GET /api/user/:name/repos","with a valid api key"],"updatePoint":{"line":50,"column":40,"index":2233},"line":50,"code":"      it('should respond user repos json', function (done) {\n        request(app).get('/api/user/loki/repos?api-key=foo').expect('Content-Type', 'application/json; charset=utf-8').expect(/\"name\":\"stylus\"/).expect(/\"url\":\"https:\\/\\/github.com\\/learnboost\\/stylus\"/).expect(200, done);\n      });","file":"acceptance/web-service.js","skipped":false,"dir":"test"},{"name":"should 404 with unknown user","suites":["web-service","GET /api/user/:name/repos","with a valid api key"],"updatePoint":{"line":53,"column":38,"index":2525},"line":53,"code":"      it('should 404 with unknown user', function (done) {\n        request(app).get('/api/user/bob/repos?api-key=foo').expect(404, done);\n      });","file":"acceptance/web-service.js","skipped":false,"dir":"test"},{"name":"should respond with 404 json","suites":["web-service","when requesting an invalid route"],"updatePoint":{"line":59,"column":36,"index":2746},"line":59,"code":"    it('should respond with 404 json', function (done) {\n      request(app).get('/api/something?api-key=bar').expect('Content-Type', /json/).expect(404, '{\"error\":\"Sorry, can\\'t find that\"}', done);\n    });","file":"acceptance/web-service.js","skipped":false,"dir":"test"},{"name":"should add a router per method","suites":["app.all()"],"updatePoint":{"line":7,"column":36,"index":182},"line":7,"code":"  it('should add a router per method', function (done) {\n    var app = express();\n    var cb = after(2, done);\n    app.all('/tobi', function (req, res) {\n      res.end(req.method);\n    });\n    request(app).put('/tobi').expect(200, 'PUT', cb);\n    request(app).get('/tobi').expect(200, 'GET', cb);\n  });","file":"app.all.js","skipped":false,"dir":"test"},{"name":"should run the callback for a method just once","suites":["app.all()"],"updatePoint":{"line":16,"column":52,"index":501},"line":16,"code":"  it('should run the callback for a method just once', function (done) {\n    var app = express(),\n      n = 0;\n    app.all('/*', function (req, res, next) {\n      if (n++) return done(new Error('DELETE called several times'));\n      next();\n    });\n    request(app).del('/tobi').expect(404, done);\n  });","file":"app.all.js","skipped":false,"dir":"test"},{"name":"should alias app.delete()","suites":["app.del()"],"updatePoint":{"line":6,"column":31,"index":147},"line":6,"code":"  it('should alias app.delete()', function (done) {\n    var app = express();\n    app.del('/tobi', function (req, res) {\n      res.end('deleted tobi!');\n    });\n    request(app).del('/tobi').expect('deleted tobi!', done);\n  });","file":"app.del.js","skipped":false,"dir":"test"},{"name":"should map a template engine","suites":["app",".engine(ext, fn)"],"updatePoint":{"line":16,"column":36,"index":441},"line":16,"code":"    it('should map a template engine', function (done) {\n      var app = express();\n      app.set('views', path.join(__dirname, 'fixtures'));\n      app.engine('.html', render);\n      app.locals.user = {\n        name: 'tobi'\n      };\n      app.render('user.html', function (err, str) {\n        if (err) return done(err);\n        assert.strictEqual(str, '<p>tobi</p>');\n        done();\n      });\n    });","file":"app.engine.js","skipped":false,"dir":"test"},{"name":"should throw when the callback is missing","suites":["app",".engine(ext, fn)"],"updatePoint":{"line":29,"column":49,"index":856},"line":29,"code":"    it('should throw when the callback is missing', function () {\n      var app = express();\n      assert.throws(function () {\n        app.engine('.html', null);\n      }, /callback function required/);\n    });","file":"app.engine.js","skipped":false,"dir":"test"},{"name":"should work without leading \".\"","suites":["app",".engine(ext, fn)"],"updatePoint":{"line":35,"column":39,"index":1056},"line":35,"code":"    it('should work without leading \".\"', function (done) {\n      var app = express();\n      app.set('views', path.join(__dirname, 'fixtures'));\n      app.engine('html', render);\n      app.locals.user = {\n        name: 'tobi'\n      };\n      app.render('user.html', function (err, str) {\n        if (err) return done(err);\n        assert.strictEqual(str, '<p>tobi</p>');\n        done();\n      });\n    });","file":"app.engine.js","skipped":false,"dir":"test"},{"name":"should work \"view engine\" setting","suites":["app",".engine(ext, fn)"],"updatePoint":{"line":48,"column":41,"index":1462},"line":48,"code":"    it('should work \"view engine\" setting', function (done) {\n      var app = express();\n      app.set('views', path.join(__dirname, 'fixtures'));\n      app.engine('html', render);\n      app.set('view engine', 'html');\n      app.locals.user = {\n        name: 'tobi'\n      };\n      app.render('user', function (err, str) {\n        if (err) return done(err);\n        assert.strictEqual(str, '<p>tobi</p>');\n        done();\n      });\n    });","file":"app.engine.js","skipped":false,"dir":"test"},{"name":"should work \"view engine\" with leading \".\"","suites":["app",".engine(ext, fn)"],"updatePoint":{"line":62,"column":50,"index":1910},"line":62,"code":"    it('should work \"view engine\" with leading \".\"', function (done) {\n      var app = express();\n      app.set('views', path.join(__dirname, 'fixtures'));\n      app.engine('.html', render);\n      app.set('view engine', '.html');\n      app.locals.user = {\n        name: 'tobi'\n      };\n      app.render('user', function (err, str) {\n        if (err) return done(err);\n        assert.strictEqual(str, '<p>tobi</p>');\n        done();\n      });\n    });","file":"app.engine.js","skipped":false,"dir":"test"},{"name":"should default to GET","suites":["HEAD"],"updatePoint":{"line":7,"column":27,"index":172},"line":7,"code":"  it('should default to GET', function (done) {\n    var app = express();\n    app.get('/tobi', function (req, res) {\n      // send() detects HEAD\n      res.send('tobi');\n    });\n    request(app).head('/tobi').expect(200, done);\n  });","file":"app.head.js","skipped":false,"dir":"test"},{"name":"should output the same headers as GET requests","suites":["HEAD"],"updatePoint":{"line":15,"column":52,"index":430},"line":15,"code":"  it('should output the same headers as GET requests', function (done) {\n    var app = express();\n    app.get('/tobi', function (req, res) {\n      // send() detects HEAD\n      res.send('tobi');\n    });\n    request(app).head('/tobi').expect(200, function (err, res) {\n      if (err) return done(err);\n      var headers = res.headers;\n      request(app).get('/tobi').expect(200, function (err, res) {\n        if (err) return done(err);\n        delete headers.date;\n        delete res.headers.date;\n        assert.deepEqual(res.headers, headers);\n        done();\n      });\n    });\n  });","file":"app.head.js","skipped":false,"dir":"test"},{"name":"should override","suites":["app.head()"],"updatePoint":{"line":35,"column":21,"index":1024},"line":35,"code":"  it('should override', function (done) {\n    var app = express();\n    app.head('/tobi', function (req, res) {\n      res.header('x-method', 'head');\n      res.end();\n    });\n    app.get('/tobi', function (req, res) {\n      res.header('x-method', 'get');\n      res.send('tobi');\n    });\n    request(app).head('/tobi').expect('x-method', 'head').expect(200, done);\n  });","file":"app.head.js","skipped":false,"dir":"test"},{"name":"should inherit from event emitter","suites":["app"],"updatePoint":{"line":7,"column":39,"index":182},"line":7,"code":"  it('should inherit from event emitter', function (done) {\n    var app = express();\n    app.on('foo', done);\n    app.emit('foo');\n  });","file":"app.js","skipped":false,"dir":"test"},{"name":"should be callable","suites":["app"],"updatePoint":{"line":12,"column":24,"index":304},"line":12,"code":"  it('should be callable', function () {\n    var app = express();\n    assert.equal(typeof app, 'function');\n  });","file":"app.js","skipped":false,"dir":"test"},{"name":"should 404 without routes","suites":["app"],"updatePoint":{"line":16,"column":31,"index":425},"line":16,"code":"  it('should 404 without routes', function (done) {\n    request(express()).get('/').expect(404, done);\n  });","file":"app.js","skipped":false,"dir":"test"},{"name":"should return the parent when mounted","suites":["app.parent"],"updatePoint":{"line":21,"column":43,"index":587},"line":21,"code":"  it('should return the parent when mounted', function () {\n    var app = express(),\n      blog = express(),\n      blogAdmin = express();\n    app.use('/blog', blog);\n    blog.use('/admin', blogAdmin);\n    assert(!app.parent, 'app.parent');\n    assert.strictEqual(blog.parent, app);\n    assert.strictEqual(blogAdmin.parent, blog);\n  });","file":"app.js","skipped":false,"dir":"test"},{"name":"should return the mounted path","suites":["app.mountpath"],"updatePoint":{"line":33,"column":36,"index":960},"line":33,"code":"  it('should return the mounted path', function () {\n    var admin = express();\n    var app = express();\n    var blog = express();\n    var fallback = express();\n    app.use('/blog', blog);\n    app.use(fallback);\n    blog.use('/admin', admin);\n    assert.strictEqual(admin.mountpath, '/admin');\n    assert.strictEqual(app.mountpath, '/');\n    assert.strictEqual(blog.mountpath, '/blog');\n    assert.strictEqual(fallback.mountpath, '/');\n  });","file":"app.js","skipped":false,"dir":"test"},{"name":"should throw with notice","suites":["app.router"],"updatePoint":{"line":48,"column":30,"index":1437},"line":48,"code":"  it('should throw with notice', function (done) {\n    var app = express();\n    try {\n      app.router;\n    } catch (err) {\n      done();\n    }\n  });","file":"app.js","skipped":false,"dir":"test"},{"name":"should return the canonical","suites":["app.path()"],"updatePoint":{"line":58,"column":33,"index":1631},"line":58,"code":"  it('should return the canonical', function () {\n    var app = express(),\n      blog = express(),\n      blogAdmin = express();\n    app.use('/blog', blog);\n    blog.use('/admin', blogAdmin);\n    assert.strictEqual(app.path(), '');\n    assert.strictEqual(blog.path(), '/blog');\n    assert.strictEqual(blogAdmin.path(), '/blog/admin');\n  });","file":"app.js","skipped":false,"dir":"test"},{"name":"should disable \"view cache\"","suites":["in development"],"updatePoint":{"line":77,"column":33,"index":2189},"line":77,"code":"  it('should disable \"view cache\"', function () {\n    var app = express();\n    assert.ok(!app.enabled('view cache'));\n  });","file":"app.js","skipped":false,"dir":"test"},{"name":"should enable \"view cache\"","suites":["in production"],"updatePoint":{"line":90,"column":32,"index":2528},"line":90,"code":"  it('should enable \"view cache\"', function () {\n    var app = express();\n    assert.ok(app.enabled('view cache'));\n  });","file":"app.js","skipped":false,"dir":"test"},{"name":"should default to development","suites":["without NODE_ENV"],"updatePoint":{"line":103,"column":35,"index":2862},"line":103,"code":"  it('should default to development', function () {\n    var app = express();\n    assert.strictEqual(app.get('env'), 'development');\n  });","file":"app.js","skipped":false,"dir":"test"},{"name":"should wrap with an HTTP server","suites":["app.listen()"],"updatePoint":{"line":5,"column":37,"index":122},"line":5,"code":"  it('should wrap with an HTTP server', function (done) {\n    var app = express();\n    var server = app.listen(9999, function () {\n      server.close();\n      done();\n    });\n  });","file":"app.listen.js","skipped":false,"dir":"test"},{"name":"should default object","suites":["app",".locals"],"updatePoint":{"line":7,"column":29,"index":173},"line":7,"code":"    it('should default object', function () {\n      var app = express();\n      assert.ok(app.locals);\n      assert.strictEqual(typeof app.locals, 'object');\n    });","file":"app.locals.js","skipped":false,"dir":"test"},{"name":"should contain app settings ","suites":["app",".locals",".settings"],"updatePoint":{"line":13,"column":38,"index":387},"line":13,"code":"      it('should contain app settings ', function () {\n        var app = express();\n        app.set('title', 'Express');\n        assert.ok(app.locals.settings);\n        assert.strictEqual(typeof app.locals.settings, 'object');\n        assert.strictEqual(app.locals.settings, app.settings);\n        assert.strictEqual(app.locals.settings.title, 'Express');\n      });","file":"app.locals.js","skipped":false,"dir":"test"},{"name":"should default to the routes defined","suites":["OPTIONS"],"updatePoint":{"line":6,"column":42,"index":156},"line":6,"code":"  it('should default to the routes defined', function (done) {\n    var app = express();\n    app.del('/', function () {});\n    app.get('/users', function (req, res) {});\n    app.put('/users', function (req, res) {});\n    request(app).options('/users').expect('Allow', 'GET,HEAD,PUT').expect(200, 'GET,HEAD,PUT', done);\n  });","file":"app.options.js","skipped":false,"dir":"test"},{"name":"should only include each method once","suites":["OPTIONS"],"updatePoint":{"line":13,"column":42,"index":480},"line":13,"code":"  it('should only include each method once', function (done) {\n    var app = express();\n    app.del('/', function () {});\n    app.get('/users', function (req, res) {});\n    app.put('/users', function (req, res) {});\n    app.get('/users', function (req, res) {});\n    request(app).options('/users').expect('Allow', 'GET,HEAD,PUT').expect(200, 'GET,HEAD,PUT', done);\n  });","file":"app.options.js","skipped":false,"dir":"test"},{"name":"should not be affected by app.all","suites":["OPTIONS"],"updatePoint":{"line":21,"column":39,"index":848},"line":21,"code":"  it('should not be affected by app.all', function (done) {\n    var app = express();\n    app.get('/', function () {});\n    app.get('/users', function (req, res) {});\n    app.put('/users', function (req, res) {});\n    app.all('/users', function (req, res, next) {\n      res.setHeader('x-hit', '1');\n      next();\n    });\n    request(app).options('/users').expect('x-hit', '1').expect('Allow', 'GET,HEAD,PUT').expect(200, 'GET,HEAD,PUT', done);\n  });","file":"app.options.js","skipped":false,"dir":"test"},{"name":"should not respond if the path is not defined","suites":["OPTIONS"],"updatePoint":{"line":32,"column":51,"index":1309},"line":32,"code":"  it('should not respond if the path is not defined', function (done) {\n    var app = express();\n    app.get('/users', function (req, res) {});\n    request(app).options('/other').expect(404, done);\n  });","file":"app.options.js","skipped":false,"dir":"test"},{"name":"should forward requests down the middleware chain","suites":["OPTIONS"],"updatePoint":{"line":37,"column":55,"index":1517},"line":37,"code":"  it('should forward requests down the middleware chain', function (done) {\n    var app = express();\n    var router = new express.Router();\n    router.get('/users', function (req, res) {});\n    app.use(router);\n    app.get('/other', function (req, res) {});\n    request(app).options('/other').expect('Allow', 'GET,HEAD').expect(200, 'GET,HEAD', done);\n  });","file":"app.options.js","skipped":false,"dir":"test"},{"name":"should pass error to callback","suites":["OPTIONS","when error occurs in response handler"],"updatePoint":{"line":46,"column":37,"index":1923},"line":46,"code":"    it('should pass error to callback', function (done) {\n      var app = express();\n      var router = express.Router();\n      router.get('/users', function (req, res) {});\n      app.use(function (req, res, next) {\n        res.writeHead(200);\n        next();\n      });\n      app.use(router);\n      app.use(function (err, req, res, next) {\n        res.end('true');\n      });\n      request(app).options('/users').expect(200, 'true', done);\n    });","file":"app.options.js","skipped":false,"dir":"test"},{"name":"should override the default behavior","suites":["app.options()"],"updatePoint":{"line":63,"column":42,"index":2425},"line":63,"code":"  it('should override the default behavior', function (done) {\n    var app = express();\n    app.options('/users', function (req, res) {\n      res.set('Allow', 'GET');\n      res.send('GET');\n    });\n    app.get('/users', function (req, res) {});\n    app.put('/users', function (req, res) {});\n    request(app).options('/users').expect('GET').expect('Allow', 'GET', done);\n  });","file":"app.options.js","skipped":false,"dir":"test"},{"name":"should map app.param(name, ...) logic","suites":["app",".param(fn)"],"updatePoint":{"line":8,"column":45,"index":226},"line":8,"code":"    it('should map app.param(name, ...) logic', function (done) {\n      var app = express();\n      app.param(function (name, regexp) {\n        if (Object.prototype.toString.call(regexp) === '[object RegExp]') {\n          // See #1557\n          return function (req, res, next, val) {\n            var captures;\n            if (captures = regexp.exec(String(val))) {\n              req.params[name] = captures[1];\n              next();\n            } else {\n              next('route');\n            }\n          };\n        }\n      });\n      app.param(':name', /^([a-zA-Z]+)$/);\n      app.get('/user/:name', function (req, res) {\n        res.send(req.params.name);\n      });\n      request(app).get('/user/tj').expect(200, 'tj', function (err) {\n        if (err) return done(err);\n        request(app).get('/user/123').expect(404, done);\n      });\n    });","file":"app.param.js","skipped":false,"dir":"test"},{"name":"should fail if not given fn","suites":["app",".param(fn)"],"updatePoint":{"line":33,"column":35,"index":1065},"line":33,"code":"    it('should fail if not given fn', function () {\n      var app = express();\n      assert.throws(app.param.bind(app, ':name', 'bob'));\n    });","file":"app.param.js","skipped":false,"dir":"test"},{"name":"should map the array","suites":["app",".param(names, fn)"],"updatePoint":{"line":39,"column":28,"index":1255},"line":39,"code":"    it('should map the array', function (done) {\n      var app = express();\n      app.param(['id', 'uid'], function (req, res, next, id) {\n        id = Number(id);\n        if (isNaN(id)) return next('route');\n        req.params.id = id;\n        next();\n      });\n      app.get('/post/:id', function (req, res) {\n        var id = req.params.id;\n        res.send(typeof id + ':' + id);\n      });\n      app.get('/user/:uid', function (req, res) {\n        var id = req.params.id;\n        res.send(typeof id + ':' + id);\n      });\n      request(app).get('/user/123').expect(200, 'number:123', function (err) {\n        if (err) return done(err);\n        request(app).get('/post/123').expect('number:123', done);\n      });\n    });","file":"app.param.js","skipped":false,"dir":"test"},{"name":"should map logic for a single param","suites":["app",".param(name, fn)"],"updatePoint":{"line":62,"column":43,"index":2045},"line":62,"code":"    it('should map logic for a single param', function (done) {\n      var app = express();\n      app.param('id', function (req, res, next, id) {\n        id = Number(id);\n        if (isNaN(id)) return next('route');\n        req.params.id = id;\n        next();\n      });\n      app.get('/user/:id', function (req, res) {\n        var id = req.params.id;\n        res.send(typeof id + ':' + id);\n      });\n      request(app).get('/user/123').expect(200, 'number:123', done);\n    });","file":"app.param.js","skipped":false,"dir":"test"},{"name":"should only call once per request","suites":["app",".param(name, fn)"],"updatePoint":{"line":76,"column":41,"index":2520},"line":76,"code":"    it('should only call once per request', function (done) {\n      var app = express();\n      var called = 0;\n      var count = 0;\n      app.param('user', function (req, res, next, user) {\n        called++;\n        req.user = user;\n        next();\n      });\n      app.get('/foo/:user', function (req, res, next) {\n        count++;\n        next();\n      });\n      app.get('/foo/:user', function (req, res, next) {\n        count++;\n        next();\n      });\n      app.use(function (req, res) {\n        res.end([count, called, req.user].join(' '));\n      });\n      request(app).get('/foo/bob').expect('2 1 bob', done);\n    });","file":"app.param.js","skipped":false,"dir":"test"},{"name":"should call when values differ","suites":["app",".param(name, fn)"],"updatePoint":{"line":98,"column":38,"index":3142},"line":98,"code":"    it('should call when values differ', function (done) {\n      var app = express();\n      var called = 0;\n      var count = 0;\n      app.param('user', function (req, res, next, user) {\n        called++;\n        req.users = (req.users || []).concat(user);\n        next();\n      });\n      app.get('/:user/bob', function (req, res, next) {\n        count++;\n        next();\n      });\n      app.get('/foo/:user', function (req, res, next) {\n        count++;\n        next();\n      });\n      app.use(function (req, res) {\n        res.end([count, called, req.users.join(',')].join(' '));\n      });\n      request(app).get('/foo/bob').expect('2 2 foo,bob', done);\n    });","file":"app.param.js","skipped":false,"dir":"test"},{"name":"should support altering req.params across routes","suites":["app",".param(name, fn)"],"updatePoint":{"line":120,"column":56,"index":3824},"line":120,"code":"    it('should support altering req.params across routes', function (done) {\n      var app = express();\n      app.param('user', function (req, res, next, user) {\n        req.params.user = 'loki';\n        next();\n      });\n      app.get('/:user', function (req, res, next) {\n        next('route');\n      });\n      app.get('/:user', function (req, res, next) {\n        res.send(req.params.user);\n      });\n      request(app).get('/bob').expect('loki', done);\n    });","file":"app.param.js","skipped":false,"dir":"test"},{"name":"should not invoke without route handler","suites":["app",".param(name, fn)"],"updatePoint":{"line":134,"column":47,"index":4280},"line":134,"code":"    it('should not invoke without route handler', function (done) {\n      var app = express();\n      app.param('thing', function (req, res, next, thing) {\n        req.thing = thing;\n        next();\n      });\n      app.param('user', function (req, res, next, user) {\n        next(new Error('invalid invocation'));\n      });\n      app.post('/:user', function (req, res, next) {\n        res.send(req.params.user);\n      });\n      app.get('/:thing', function (req, res, next) {\n        res.send(req.thing);\n      });\n      request(app).get('/bob').expect(200, 'bob', done);\n    });","file":"app.param.js","skipped":false,"dir":"test"},{"name":"should work with encoded values","suites":["app",".param(name, fn)"],"updatePoint":{"line":151,"column":39,"index":4850},"line":151,"code":"    it('should work with encoded values', function (done) {\n      var app = express();\n      app.param('name', function (req, res, next, name) {\n        req.params.name = name;\n        next();\n      });\n      app.get('/user/:name', function (req, res) {\n        var name = req.params.name;\n        res.send('' + name);\n      });\n      request(app).get('/user/foo%25bar').expect('foo%bar', done);\n    });","file":"app.param.js","skipped":false,"dir":"test"},{"name":"should catch thrown error","suites":["app",".param(name, fn)"],"updatePoint":{"line":163,"column":33,"index":5248},"line":163,"code":"    it('should catch thrown error', function (done) {\n      var app = express();\n      app.param('id', function (req, res, next, id) {\n        throw new Error('err!');\n      });\n      app.get('/user/:id', function (req, res) {\n        var id = req.params.id;\n        res.send('' + id);\n      });\n      request(app).get('/user/123').expect(500, done);\n    });","file":"app.param.js","skipped":false,"dir":"test"},{"name":"should catch thrown secondary error","suites":["app",".param(name, fn)"],"updatePoint":{"line":174,"column":43,"index":5617},"line":174,"code":"    it('should catch thrown secondary error', function (done) {\n      var app = express();\n      app.param('id', function (req, res, next, val) {\n        process.nextTick(next);\n      });\n      app.param('id', function (req, res, next, id) {\n        throw new Error('err!');\n      });\n      app.get('/user/:id', function (req, res) {\n        var id = req.params.id;\n        res.send('' + id);\n      });\n      request(app).get('/user/123').expect(500, done);\n    });","file":"app.param.js","skipped":false,"dir":"test"},{"name":"should defer to next route","suites":["app",".param(name, fn)"],"updatePoint":{"line":188,"column":34,"index":6074},"line":188,"code":"    it('should defer to next route', function (done) {\n      var app = express();\n      app.param('id', function (req, res, next, id) {\n        next('route');\n      });\n      app.get('/user/:id', function (req, res) {\n        var id = req.params.id;\n        res.send('' + id);\n      });\n      app.get('/:name/123', function (req, res) {\n        res.send('name');\n      });\n      request(app).get('/user/123').expect('name', done);\n    });","file":"app.param.js","skipped":false,"dir":"test"},{"name":"should defer all the param routes","suites":["app",".param(name, fn)"],"updatePoint":{"line":202,"column":41,"index":6520},"line":202,"code":"    it('should defer all the param routes', function (done) {\n      var app = express();\n      app.param('id', function (req, res, next, val) {\n        if (val === 'new') return next('route');\n        return next();\n      });\n      app.all('/user/:id', function (req, res) {\n        res.send('all.id');\n      });\n      app.get('/user/:id', function (req, res) {\n        res.send('get.id');\n      });\n      app.get('/user/new', function (req, res) {\n        res.send('get.new');\n      });\n      request(app).get('/user/new').expect('get.new', done);\n    });","file":"app.param.js","skipped":false,"dir":"test"},{"name":"should not call when values differ on error","suites":["app",".param(name, fn)"],"updatePoint":{"line":219,"column":51,"index":7087},"line":219,"code":"    it('should not call when values differ on error', function (done) {\n      var app = express();\n      var called = 0;\n      var count = 0;\n      app.param('user', function (req, res, next, user) {\n        called++;\n        if (user === 'foo') throw new Error('err!');\n        req.user = user;\n        next();\n      });\n      app.get('/:user/bob', function (req, res, next) {\n        count++;\n        next();\n      });\n      app.get('/foo/:user', function (req, res, next) {\n        count++;\n        next();\n      });\n      app.use(function (err, req, res, next) {\n        res.status(500);\n        res.send([count, called, err.message].join(' '));\n      });\n      request(app).get('/foo/bob').expect(500, '0 1 err!', done);\n    });","file":"app.param.js","skipped":false,"dir":"test"},{"name":"should call when values differ when using \"next\"","suites":["app",".param(name, fn)"],"updatePoint":{"line":243,"column":56,"index":7826},"line":243,"code":"    it('should call when values differ when using \"next\"', function (done) {\n      var app = express();\n      var called = 0;\n      var count = 0;\n      app.param('user', function (req, res, next, user) {\n        called++;\n        if (user === 'foo') return next('route');\n        req.user = user;\n        next();\n      });\n      app.get('/:user/bob', function (req, res, next) {\n        count++;\n        next();\n      });\n      app.get('/foo/:user', function (req, res, next) {\n        count++;\n        next();\n      });\n      app.use(function (req, res) {\n        res.end([count, called, req.user].join(' '));\n      });\n      request(app).get('/foo/bob').expect('1 2 bob', done);\n    });","file":"app.param.js","skipped":false,"dir":"test"},{"name":"should support absolute paths","suites":["app",".render(name, fn)"],"updatePoint":{"line":9,"column":37,"index":256},"line":9,"code":"    it('should support absolute paths', function (done) {\n      var app = createApp();\n      app.locals.user = {\n        name: 'tobi'\n      };\n      app.render(path.join(__dirname, 'fixtures', 'user.tmpl'), function (err, str) {\n        if (err) return done(err);\n        assert.strictEqual(str, '<p>tobi</p>');\n        done();\n      });\n    });","file":"app.render.js","skipped":false,"dir":"test"},{"name":"should support absolute paths with \"view engine\"","suites":["app",".render(name, fn)"],"updatePoint":{"line":20,"column":56,"index":621},"line":20,"code":"    it('should support absolute paths with \"view engine\"', function (done) {\n      var app = createApp();\n      app.set('view engine', 'tmpl');\n      app.locals.user = {\n        name: 'tobi'\n      };\n      app.render(path.join(__dirname, 'fixtures', 'user'), function (err, str) {\n        if (err) return done(err);\n        assert.strictEqual(str, '<p>tobi</p>');\n        done();\n      });\n    });","file":"app.render.js","skipped":false,"dir":"test"},{"name":"should expose app.locals","suites":["app",".render(name, fn)"],"updatePoint":{"line":32,"column":32,"index":995},"line":32,"code":"    it('should expose app.locals', function (done) {\n      var app = createApp();\n      app.set('views', path.join(__dirname, 'fixtures'));\n      app.locals.user = {\n        name: 'tobi'\n      };\n      app.render('user.tmpl', function (err, str) {\n        if (err) return done(err);\n        assert.strictEqual(str, '<p>tobi</p>');\n        done();\n      });\n    });","file":"app.render.js","skipped":false,"dir":"test"},{"name":"should support index.<engine>","suites":["app",".render(name, fn)"],"updatePoint":{"line":44,"column":37,"index":1365},"line":44,"code":"    it('should support index.<engine>', function (done) {\n      var app = createApp();\n      app.set('views', path.join(__dirname, 'fixtures'));\n      app.set('view engine', 'tmpl');\n      app.render('blog/post', function (err, str) {\n        if (err) return done(err);\n        assert.strictEqual(str, '<h1>blog post</h1>');\n        done();\n      });\n    });","file":"app.render.js","skipped":false,"dir":"test"},{"name":"should handle render error throws","suites":["app",".render(name, fn)"],"updatePoint":{"line":54,"column":41,"index":1728},"line":54,"code":"    it('should handle render error throws', function (done) {\n      var app = express();\n      function View(name, options) {\n        this.name = name;\n        this.path = 'fale';\n      }\n      View.prototype.render = function (options, fn) {\n        throw new Error('err!');\n      };\n      app.set('view', View);\n      app.render('something', function (err, str) {\n        assert.ok(err);\n        assert.strictEqual(err.message, 'err!');\n        done();\n      });\n    });","file":"app.render.js","skipped":false,"dir":"test"},{"name":"should provide a helpful error","suites":["app",".render(name, fn)","when the file does not exist"],"updatePoint":{"line":71,"column":40,"index":2259},"line":71,"code":"      it('should provide a helpful error', function (done) {\n        var app = createApp();\n        app.set('views', path.join(__dirname, 'fixtures'));\n        app.render('rawr.tmpl', function (err) {\n          assert.ok(err);\n          assert.equal(err.message, 'Failed to lookup view \"rawr.tmpl\" in views directory \"' + path.join(__dirname, 'fixtures') + '\"');\n          done();\n        });\n      });","file":"app.render.js","skipped":false,"dir":"test"},{"name":"should invoke the callback","suites":["app",".render(name, fn)","when an error occurs"],"updatePoint":{"line":82,"column":36,"index":2717},"line":82,"code":"      it('should invoke the callback', function (done) {\n        var app = createApp();\n        app.set('views', path.join(__dirname, 'fixtures'));\n        app.render('user.tmpl', function (err) {\n          assert.ok(err);\n          assert.equal(err.name, 'RenderError');\n          done();\n        });\n      });","file":"app.render.js","skipped":false,"dir":"test"},{"name":"should render the template","suites":["app",".render(name, fn)","when an extension is given"],"updatePoint":{"line":93,"column":36,"index":3094},"line":93,"code":"      it('should render the template', function (done) {\n        var app = createApp();\n        app.set('views', path.join(__dirname, 'fixtures'));\n        app.render('email.tmpl', function (err, str) {\n          if (err) return done(err);\n          assert.strictEqual(str, '<p>This is an email</p>');\n          done();\n        });\n      });","file":"app.render.js","skipped":false,"dir":"test"},{"name":"should render the template","suites":["app",".render(name, fn)","when \"view engine\" is given"],"updatePoint":{"line":104,"column":36,"index":3502},"line":104,"code":"      it('should render the template', function (done) {\n        var app = createApp();\n        app.set('view engine', 'tmpl');\n        app.set('views', path.join(__dirname, 'fixtures'));\n        app.render('email', function (err, str) {\n          if (err) return done(err);\n          assert.strictEqual(str, '<p>This is an email</p>');\n          done();\n        });\n      });","file":"app.render.js","skipped":false,"dir":"test"},{"name":"should lookup the file in the path","suites":["app",".render(name, fn)","when \"views\" is given"],"updatePoint":{"line":116,"column":44,"index":3947},"line":116,"code":"      it('should lookup the file in the path', function (done) {\n        var app = createApp();\n        app.set('views', path.join(__dirname, 'fixtures', 'default_layout'));\n        app.locals.user = {\n          name: 'tobi'\n        };\n        app.render('user.tmpl', function (err, str) {\n          if (err) return done(err);\n          assert.strictEqual(str, '<p>tobi</p>');\n          done();\n        });\n      });","file":"app.render.js","skipped":false,"dir":"test"},{"name":"should lookup the file in the path","suites":["app",".render(name, fn)","when \"views\" is given","when array of paths"],"updatePoint":{"line":129,"column":46,"index":4418},"line":129,"code":"        it('should lookup the file in the path', function (done) {\n          var app = createApp();\n          var views = [path.join(__dirname, 'fixtures', 'local_layout'), path.join(__dirname, 'fixtures', 'default_layout')];\n          app.set('views', views);\n          app.locals.user = {\n            name: 'tobi'\n          };\n          app.render('user.tmpl', function (err, str) {\n            if (err) return done(err);\n            assert.strictEqual(str, '<span>tobi</span>');\n            done();\n          });\n        });","file":"app.render.js","skipped":false,"dir":"test"},{"name":"should lookup in later paths until found","suites":["app",".render(name, fn)","when \"views\" is given","when array of paths"],"updatePoint":{"line":142,"column":52,"index":4952},"line":142,"code":"        it('should lookup in later paths until found', function (done) {\n          var app = createApp();\n          var views = [path.join(__dirname, 'fixtures', 'local_layout'), path.join(__dirname, 'fixtures', 'default_layout')];\n          app.set('views', views);\n          app.locals.name = 'tobi';\n          app.render('name.tmpl', function (err, str) {\n            if (err) return done(err);\n            assert.strictEqual(str, '<p>tobi</p>');\n            done();\n          });\n        });","file":"app.render.js","skipped":false,"dir":"test"},{"name":"should error if file does not exist","suites":["app",".render(name, fn)","when \"views\" is given","when array of paths"],"updatePoint":{"line":153,"column":47,"index":5443},"line":153,"code":"        it('should error if file does not exist', function (done) {\n          var app = createApp();\n          var views = [path.join(__dirname, 'fixtures', 'local_layout'), path.join(__dirname, 'fixtures', 'default_layout')];\n          app.set('views', views);\n          app.locals.name = 'tobi';\n          app.render('pet.tmpl', function (err, str) {\n            assert.ok(err);\n            assert.equal(err.message, 'Failed to lookup view \"pet.tmpl\" in views directories \"' + views[0] + '\" or \"' + views[1] + '\"');\n            done();\n          });\n        });","file":"app.render.js","skipped":false,"dir":"test"},{"name":"should create an instance of it","suites":["app",".render(name, fn)","when a \"view\" constructor is given"],"updatePoint":{"line":167,"column":41,"index":6084},"line":167,"code":"      it('should create an instance of it', function (done) {\n        var app = express();\n        function View(name, options) {\n          this.name = name;\n          this.path = 'path is required by application.js as a signal of success even though it is not used there.';\n        }\n        View.prototype.render = function (options, fn) {\n          fn(null, 'abstract engine');\n        };\n        app.set('view', View);\n        app.render('something', function (err, str) {\n          if (err) return done(err);\n          assert.strictEqual(str, 'abstract engine');\n          done();\n        });\n      });","file":"app.render.js","skipped":false,"dir":"test"},{"name":"should always lookup view without cache","suites":["app",".render(name, fn)","caching"],"updatePoint":{"line":185,"column":49,"index":6746},"line":185,"code":"      it('should always lookup view without cache', function (done) {\n        var app = express();\n        var count = 0;\n        function View(name, options) {\n          this.name = name;\n          this.path = 'fake';\n          count++;\n        }\n        View.prototype.render = function (options, fn) {\n          fn(null, 'abstract engine');\n        };\n        app.set('view cache', false);\n        app.set('view', View);\n        app.render('something', function (err, str) {\n          if (err) return done(err);\n          assert.strictEqual(count, 1);\n          assert.strictEqual(str, 'abstract engine');\n          app.render('something', function (err, str) {\n            if (err) return done(err);\n            assert.strictEqual(count, 2);\n            assert.strictEqual(str, 'abstract engine');\n            done();\n          });\n        });\n      });","file":"app.render.js","skipped":false,"dir":"test"},{"name":"should cache with \"view cache\" setting","suites":["app",".render(name, fn)","caching"],"updatePoint":{"line":210,"column":48,"index":7603},"line":210,"code":"      it('should cache with \"view cache\" setting', function (done) {\n        var app = express();\n        var count = 0;\n        function View(name, options) {\n          this.name = name;\n          this.path = 'fake';\n          count++;\n        }\n        View.prototype.render = function (options, fn) {\n          fn(null, 'abstract engine');\n        };\n        app.set('view cache', true);\n        app.set('view', View);\n        app.render('something', function (err, str) {\n          if (err) return done(err);\n          assert.strictEqual(count, 1);\n          assert.strictEqual(str, 'abstract engine');\n          app.render('something', function (err, str) {\n            if (err) return done(err);\n            assert.strictEqual(count, 1);\n            assert.strictEqual(str, 'abstract engine');\n            done();\n          });\n        });\n      });","file":"app.render.js","skipped":false,"dir":"test"},{"name":"should render the template","suites":["app",".render(name, options, fn)"],"updatePoint":{"line":238,"column":34,"index":8514},"line":238,"code":"    it('should render the template', function (done) {\n      var app = createApp();\n      app.set('views', path.join(__dirname, 'fixtures'));\n      var user = {\n        name: 'tobi'\n      };\n      app.render('user.tmpl', {\n        user: user\n      }, function (err, str) {\n        if (err) return done(err);\n        assert.strictEqual(str, '<p>tobi</p>');\n        done();\n      });\n    });","file":"app.render.js","skipped":false,"dir":"test"},{"name":"should expose app.locals","suites":["app",".render(name, options, fn)"],"updatePoint":{"line":252,"column":32,"index":8902},"line":252,"code":"    it('should expose app.locals', function (done) {\n      var app = createApp();\n      app.set('views', path.join(__dirname, 'fixtures'));\n      app.locals.user = {\n        name: 'tobi'\n      };\n      app.render('user.tmpl', {}, function (err, str) {\n        if (err) return done(err);\n        assert.strictEqual(str, '<p>tobi</p>');\n        done();\n      });\n    });","file":"app.render.js","skipped":false,"dir":"test"},{"name":"should give precedence to app.render() locals","suites":["app",".render(name, options, fn)"],"updatePoint":{"line":264,"column":53,"index":9292},"line":264,"code":"    it('should give precedence to app.render() locals', function (done) {\n      var app = createApp();\n      app.set('views', path.join(__dirname, 'fixtures'));\n      app.locals.user = {\n        name: 'tobi'\n      };\n      var jane = {\n        name: 'jane'\n      };\n      app.render('user.tmpl', {\n        user: jane\n      }, function (err, str) {\n        if (err) return done(err);\n        assert.strictEqual(str, '<p>jane</p>');\n        done();\n      });\n    });","file":"app.render.js","skipped":false,"dir":"test"},{"name":"should cache with cache option","suites":["app",".render(name, options, fn)","caching"],"updatePoint":{"line":282,"column":40,"index":9782},"line":282,"code":"      it('should cache with cache option', function (done) {\n        var app = express();\n        var count = 0;\n        function View(name, options) {\n          this.name = name;\n          this.path = 'fake';\n          count++;\n        }\n        View.prototype.render = function (options, fn) {\n          fn(null, 'abstract engine');\n        };\n        app.set('view cache', false);\n        app.set('view', View);\n        app.render('something', {\n          cache: true\n        }, function (err, str) {\n          if (err) return done(err);\n          assert.strictEqual(count, 1);\n          assert.strictEqual(str, 'abstract engine');\n          app.render('something', {\n            cache: true\n          }, function (err, str) {\n            if (err) return done(err);\n            assert.strictEqual(count, 1);\n            assert.strictEqual(str, 'abstract engine');\n            done();\n          });\n        });\n      });","file":"app.render.js","skipped":false,"dir":"test"},{"name":"should extend the request prototype","suites":["app",".request"],"updatePoint":{"line":8,"column":43,"index":220},"line":8,"code":"    it('should extend the request prototype', function (done) {\n      var app = express();\n      app.request.querystring = function () {\n        return require('url').parse(this.url).query;\n      };\n      app.use(function (req, res) {\n        res.end(req.querystring());\n      });\n      request(app).get('/foo?name=tobi').expect('name=tobi', done);\n    });","file":"app.request.js","skipped":false,"dir":"test"},{"name":"should only extend for the referenced app","suites":["app",".request"],"updatePoint":{"line":18,"column":49,"index":583},"line":18,"code":"    it('should only extend for the referenced app', function (done) {\n      var app1 = express();\n      var app2 = express();\n      var cb = after(2, done);\n      app1.request.foobar = function () {\n        return 'tobi';\n      };\n      app1.get('/', function (req, res) {\n        res.send(req.foobar());\n      });\n      app2.get('/', function (req, res) {\n        res.send(req.foobar());\n      });\n      request(app1).get('/').expect(200, 'tobi', cb);\n      request(app2).get('/').expect(500, /(?:not a function|has no method)/, cb);\n    });","file":"app.request.js","skipped":false,"dir":"test"},{"name":"should inherit to sub apps","suites":["app",".request"],"updatePoint":{"line":34,"column":34,"index":1111},"line":34,"code":"    it('should inherit to sub apps', function (done) {\n      var app1 = express();\n      var app2 = express();\n      var cb = after(2, done);\n      app1.request.foobar = function () {\n        return 'tobi';\n      };\n      app1.use('/sub', app2);\n      app1.get('/', function (req, res) {\n        res.send(req.foobar());\n      });\n      app2.get('/', function (req, res) {\n        res.send(req.foobar());\n      });\n      request(app1).get('/').expect(200, 'tobi', cb);\n      request(app1).get('/sub').expect(200, 'tobi', cb);\n    });","file":"app.request.js","skipped":false,"dir":"test"},{"name":"should allow sub app to override","suites":["app",".request"],"updatePoint":{"line":51,"column":40,"index":1650},"line":51,"code":"    it('should allow sub app to override', function (done) {\n      var app1 = express();\n      var app2 = express();\n      var cb = after(2, done);\n      app1.request.foobar = function () {\n        return 'tobi';\n      };\n      app2.request.foobar = function () {\n        return 'loki';\n      };\n      app1.use('/sub', app2);\n      app1.get('/', function (req, res) {\n        res.send(req.foobar());\n      });\n      app2.get('/', function (req, res) {\n        res.send(req.foobar());\n      });\n      request(app1).get('/').expect(200, 'tobi', cb);\n      request(app1).get('/sub').expect(200, 'loki', cb);\n    });","file":"app.request.js","skipped":false,"dir":"test"},{"name":"should not pollute parent app","suites":["app",".request"],"updatePoint":{"line":71,"column":37,"index":2260},"line":71,"code":"    it('should not pollute parent app', function (done) {\n      var app1 = express();\n      var app2 = express();\n      var cb = after(2, done);\n      app1.request.foobar = function () {\n        return 'tobi';\n      };\n      app2.request.foobar = function () {\n        return 'loki';\n      };\n      app1.use('/sub', app2);\n      app1.get('/sub/foo', function (req, res) {\n        res.send(req.foobar());\n      });\n      app2.get('/', function (req, res) {\n        res.send(req.foobar());\n      });\n      request(app1).get('/sub').expect(200, 'loki', cb);\n      request(app1).get('/sub/foo').expect(200, 'tobi', cb);\n    });","file":"app.request.js","skipped":false,"dir":"test"},{"name":"should extend the response prototype","suites":["app",".response"],"updatePoint":{"line":8,"column":44,"index":222},"line":8,"code":"    it('should extend the response prototype', function (done) {\n      var app = express();\n      app.response.shout = function (str) {\n        this.send(str.toUpperCase());\n      };\n      app.use(function (req, res) {\n        res.shout('hey');\n      });\n      request(app).get('/').expect('HEY', done);\n    });","file":"app.response.js","skipped":false,"dir":"test"},{"name":"should only extend for the referenced app","suites":["app",".response"],"updatePoint":{"line":18,"column":49,"index":539},"line":18,"code":"    it('should only extend for the referenced app', function (done) {\n      var app1 = express();\n      var app2 = express();\n      var cb = after(2, done);\n      app1.response.shout = function (str) {\n        this.send(str.toUpperCase());\n      };\n      app1.get('/', function (req, res) {\n        res.shout('foo');\n      });\n      app2.get('/', function (req, res) {\n        res.shout('foo');\n      });\n      request(app1).get('/').expect(200, 'FOO', cb);\n      request(app2).get('/').expect(500, /(?:not a function|has no method)/, cb);\n    });","file":"app.response.js","skipped":false,"dir":"test"},{"name":"should inherit to sub apps","suites":["app",".response"],"updatePoint":{"line":34,"column":34,"index":1072},"line":34,"code":"    it('should inherit to sub apps', function (done) {\n      var app1 = express();\n      var app2 = express();\n      var cb = after(2, done);\n      app1.response.shout = function (str) {\n        this.send(str.toUpperCase());\n      };\n      app1.use('/sub', app2);\n      app1.get('/', function (req, res) {\n        res.shout('foo');\n      });\n      app2.get('/', function (req, res) {\n        res.shout('foo');\n      });\n      request(app1).get('/').expect(200, 'FOO', cb);\n      request(app1).get('/sub').expect(200, 'FOO', cb);\n    });","file":"app.response.js","skipped":false,"dir":"test"},{"name":"should allow sub app to override","suites":["app",".response"],"updatePoint":{"line":51,"column":40,"index":1615},"line":51,"code":"    it('should allow sub app to override', function (done) {\n      var app1 = express();\n      var app2 = express();\n      var cb = after(2, done);\n      app1.response.shout = function (str) {\n        this.send(str.toUpperCase());\n      };\n      app2.response.shout = function (str) {\n        this.send(str + '!');\n      };\n      app1.use('/sub', app2);\n      app1.get('/', function (req, res) {\n        res.shout('foo');\n      });\n      app2.get('/', function (req, res) {\n        res.shout('foo');\n      });\n      request(app1).get('/').expect(200, 'FOO', cb);\n      request(app1).get('/sub').expect(200, 'foo!', cb);\n    });","file":"app.response.js","skipped":false,"dir":"test"},{"name":"should not pollute parent app","suites":["app",".response"],"updatePoint":{"line":71,"column":37,"index":2240},"line":71,"code":"    it('should not pollute parent app', function (done) {\n      var app1 = express();\n      var app2 = express();\n      var cb = after(2, done);\n      app1.response.shout = function (str) {\n        this.send(str.toUpperCase());\n      };\n      app2.response.shout = function (str) {\n        this.send(str + '!');\n      };\n      app1.use('/sub', app2);\n      app1.get('/sub/foo', function (req, res) {\n        res.shout('foo');\n      });\n      app2.get('/', function (req, res) {\n        res.shout('foo');\n      });\n      request(app1).get('/sub').expect(200, 'foo!', cb);\n      request(app1).get('/sub/foo').expect(200, 'FOO', cb);\n    });","file":"app.response.js","skipped":false,"dir":"test"},{"name":"should return a new route","suites":["app.route"],"updatePoint":{"line":6,"column":31,"index":149},"line":6,"code":"  it('should return a new route', function (done) {\n    var app = express();\n    app.route('/foo').get(function (req, res) {\n      res.send('get');\n    }).post(function (req, res) {\n      res.send('post');\n    });\n    request(app).post('/foo').expect('post', done);\n  });","file":"app.route.js","skipped":false,"dir":"test"},{"name":"should all .VERB after .all","suites":["app.route"],"updatePoint":{"line":15,"column":33,"index":423},"line":15,"code":"  it('should all .VERB after .all', function (done) {\n    var app = express();\n    app.route('/foo').all(function (req, res, next) {\n      next();\n    }).get(function (req, res) {\n      res.send('get');\n    }).post(function (req, res) {\n      res.send('post');\n    });\n    request(app).post('/foo').expect('post', done);\n  });","file":"app.route.js","skipped":false,"dir":"test"},{"name":"should support dynamic routes","suites":["app.route"],"updatePoint":{"line":26,"column":35,"index":752},"line":26,"code":"  it('should support dynamic routes', function (done) {\n    var app = express();\n    app.route('/:foo').get(function (req, res) {\n      res.send(req.params.foo);\n    });\n    request(app).get('/test').expect('test', done);\n  });","file":"app.route.js","skipped":false,"dir":"test"},{"name":"should not error on empty routes","suites":["app.route"],"updatePoint":{"line":33,"column":38,"index":983},"line":33,"code":"  it('should not error on empty routes', function (done) {\n    var app = express();\n    app.route('/:foo');\n    request(app).get('/test').expect(404, done);\n  });","file":"app.route.js","skipped":false,"dir":"test"},{"name":"should restore req.params after leaving router","suites":["app.router"],"updatePoint":{"line":9,"column":52,"index":261},"line":9,"code":"  it('should restore req.params after leaving router', function (done) {\n    var app = express();\n    var router = new express.Router();\n    function handler1(req, res, next) {\n      res.setHeader('x-user-id', String(req.params.id));\n      next();\n    }\n    function handler2(req, res) {\n      res.send(req.params.id);\n    }\n    router.use(function (req, res, next) {\n      res.setHeader('x-router', String(req.params.id));\n      next();\n    });\n    app.get('/user/:id', handler1, router, handler2);\n    request(app).get('/user/1').expect('x-router', 'undefined').expect('x-user-id', '1').expect(200, '1', done);\n  });","file":"app.router.js","skipped":false,"dir":"test"},{"name":"should re-route when method is altered","suites":["app.router","methods"],"updatePoint":{"line":41,"column":46,"index":1435},"line":41,"code":"    it('should re-route when method is altered', function (done) {\n      var app = express();\n      var cb = after(3, done);\n      app.use(function (req, res, next) {\n        if (req.method !== 'POST') return next();\n        req.method = 'DELETE';\n        res.setHeader('X-Method-Altered', '1');\n        next();\n      });\n      app.delete('/', function (req, res) {\n        res.end('deleted everything');\n      });\n      request(app).get('/').expect(404, cb);\n      request(app).delete('/').expect(200, 'deleted everything', cb);\n      request(app).post('/').expect('X-Method-Altered', '1').expect(200, 'deleted everything', cb);\n    });","file":"app.router.js","skipped":false,"dir":"test"},{"name":"should decode correct params","suites":["app.router","decode params"],"updatePoint":{"line":59,"column":36,"index":2111},"line":59,"code":"    it('should decode correct params', function (done) {\n      var app = express();\n      app.get('/:name', function (req, res, next) {\n        res.send(req.params.name);\n      });\n      request(app).get('/foo%2Fbar').expect('foo/bar', done);\n    });","file":"app.router.js","skipped":false,"dir":"test"},{"name":"should not accept params in malformed paths","suites":["app.router","decode params"],"updatePoint":{"line":66,"column":51,"index":2377},"line":66,"code":"    it('should not accept params in malformed paths', function (done) {\n      var app = express();\n      app.get('/:name', function (req, res, next) {\n        res.send(req.params.name);\n      });\n      request(app).get('/%foobar').expect(400, done);\n    });","file":"app.router.js","skipped":false,"dir":"test"},{"name":"should not decode spaces","suites":["app.router","decode params"],"updatePoint":{"line":73,"column":32,"index":2616},"line":73,"code":"    it('should not decode spaces', function (done) {\n      var app = express();\n      app.get('/:name', function (req, res, next) {\n        res.send(req.params.name);\n      });\n      request(app).get('/foo+bar').expect('foo+bar', done);\n    });","file":"app.router.js","skipped":false,"dir":"test"},{"name":"should work with unicode","suites":["app.router","decode params"],"updatePoint":{"line":80,"column":32,"index":2861},"line":80,"code":"    it('should work with unicode', function (done) {\n      var app = express();\n      app.get('/:name', function (req, res, next) {\n        res.send(req.params.name);\n      });\n      request(app).get('/%ce%b1').expect('\\u03b1', done);\n    });","file":"app.router.js","skipped":false,"dir":"test"},{"name":"should be .use()able","suites":["app.router","decode params"],"updatePoint":{"line":88,"column":26,"index":3104},"line":88,"code":"  it('should be .use()able', function (done) {\n    var app = express();\n    var calls = [];\n    app.use(function (req, res, next) {\n      calls.push('before');\n      next();\n    });\n    app.get('/', function (req, res, next) {\n      calls.push('GET /');\n      next();\n    });\n    app.use(function (req, res, next) {\n      calls.push('after');\n      res.json(calls);\n    });\n    request(app).get('/').expect(200, ['before', 'GET /', 'after'], done);\n  });","file":"app.router.js","skipped":false,"dir":"test"},{"name":"should match the pathname only","suites":["app.router","when given a regexp"],"updatePoint":{"line":106,"column":38,"index":3619},"line":106,"code":"    it('should match the pathname only', function (done) {\n      var app = express();\n      app.get(/^\\/user\\/[0-9]+$/, function (req, res) {\n        res.end('user');\n      });\n      request(app).get('/user/12?foo=bar').expect('user', done);\n    });","file":"app.router.js","skipped":false,"dir":"test"},{"name":"should populate req.params with the captures","suites":["app.router","when given a regexp"],"updatePoint":{"line":113,"column":52,"index":3883},"line":113,"code":"    it('should populate req.params with the captures', function (done) {\n      var app = express();\n      app.get(/^\\/user\\/([0-9]+)\\/(view|edit)?$/, function (req, res) {\n        var id = req.params[0],\n          op = req.params[1];\n        res.end(op + 'ing user ' + id);\n      });\n      request(app).get('/user/10/edit').expect('editing user 10', done);\n    });","file":"app.router.js","skipped":false,"dir":"test"},{"name":"should ensure regexp matches path prefix","suites":["app.router","when given a regexp"],"updatePoint":{"line":122,"column":48,"index":4244},"line":122,"code":"    it('should ensure regexp matches path prefix', function (done) {\n      var app = express();\n      var p = [];\n      app.use(/\\/api.*/, function (req, res, next) {\n        p.push('a');\n        next();\n      });\n      app.use(/api/, function (req, res, next) {\n        p.push('b');\n        next();\n      });\n      app.use(/\\/test/, function (req, res, next) {\n        p.push('c');\n        next();\n      });\n      app.use(function (req, res) {\n        res.end();\n      });\n      request(app).get('/test/api/1234').expect(200, function (err) {\n        if (err) return done(err);\n        assert.deepEqual(p, ['c']);\n        done();\n      });\n    });","file":"app.router.js","skipped":false,"dir":"test"},{"name":"should be disabled by default","suites":["app.router","case sensitivity"],"updatePoint":{"line":148,"column":37,"index":4933},"line":148,"code":"    it('should be disabled by default', function (done) {\n      var app = express();\n      app.get('/user', function (req, res) {\n        res.end('tj');\n      });\n      request(app).get('/USER').expect('tj', done);\n    });","file":"app.router.js","skipped":false,"dir":"test"},{"name":"should match identical casing","suites":["app.router","case sensitivity","when \"case sensitive routing\" is enabled"],"updatePoint":{"line":156,"column":39,"index":5229},"line":156,"code":"      it('should match identical casing', function (done) {\n        var app = express();\n        app.enable('case sensitive routing');\n        app.get('/uSer', function (req, res) {\n          res.end('tj');\n        });\n        request(app).get('/uSer').expect('tj', done);\n      });","file":"app.router.js","skipped":false,"dir":"test"},{"name":"should not match otherwise","suites":["app.router","case sensitivity","when \"case sensitive routing\" is enabled"],"updatePoint":{"line":164,"column":36,"index":5509},"line":164,"code":"      it('should not match otherwise', function (done) {\n        var app = express();\n        app.enable('case sensitive routing');\n        app.get('/uSer', function (req, res) {\n          res.end('tj');\n        });\n        request(app).get('/user').expect(404, done);\n      });","file":"app.router.js","skipped":false,"dir":"test"},{"name":"should overwrite existing req.params by default","suites":["app.router","params"],"updatePoint":{"line":175,"column":55,"index":5856},"line":175,"code":"    it('should overwrite existing req.params by default', function (done) {\n      var app = express();\n      var router = new express.Router();\n      router.get('/:action', function (req, res) {\n        res.send(req.params);\n      });\n      app.use('/user/:user', router);\n      request(app).get('/user/1/get').expect(200, '{\"action\":\"get\"}', done);\n    });","file":"app.router.js","skipped":false,"dir":"test"},{"name":"should allow merging existing req.params","suites":["app.router","params"],"updatePoint":{"line":184,"column":48,"index":6207},"line":184,"code":"    it('should allow merging existing req.params', function (done) {\n      var app = express();\n      var router = new express.Router({\n        mergeParams: true\n      });\n      router.get('/:action', function (req, res) {\n        var keys = Object.keys(req.params).sort();\n        res.send(keys.map(function (k) {\n          return [k, req.params[k]];\n        }));\n      });\n      app.use('/user/:user', router);\n      request(app).get('/user/tj/get').expect(200, '[[\"action\",\"get\"],[\"user\",\"tj\"]]', done);\n    });","file":"app.router.js","skipped":false,"dir":"test"},{"name":"should use params from router","suites":["app.router","params"],"updatePoint":{"line":198,"column":37,"index":6711},"line":198,"code":"    it('should use params from router', function (done) {\n      var app = express();\n      var router = new express.Router({\n        mergeParams: true\n      });\n      router.get('/:thing', function (req, res) {\n        var keys = Object.keys(req.params).sort();\n        res.send(keys.map(function (k) {\n          return [k, req.params[k]];\n        }));\n      });\n      app.use('/user/:thing', router);\n      request(app).get('/user/tj/get').expect(200, '[[\"thing\",\"get\"]]', done);\n    });","file":"app.router.js","skipped":false,"dir":"test"},{"name":"should merge numeric indices req.params","suites":["app.router","params"],"updatePoint":{"line":212,"column":47,"index":7210},"line":212,"code":"    it('should merge numeric indices req.params', function (done) {\n      var app = express();\n      var router = new express.Router({\n        mergeParams: true\n      });\n      router.get('/*.*', function (req, res) {\n        var keys = Object.keys(req.params).sort();\n        res.send(keys.map(function (k) {\n          return [k, req.params[k]];\n        }));\n      });\n      app.use('/user/id:(\\\\d+)', router);\n      request(app).get('/user/id:10/profile.json').expect(200, '[[\"0\",\"10\"],[\"1\",\"profile\"],[\"2\",\"json\"]]', done);\n    });","file":"app.router.js","skipped":false,"dir":"test"},{"name":"should merge numeric indices req.params when more in parent","suites":["app.router","params"],"updatePoint":{"line":226,"column":67,"index":7765},"line":226,"code":"    it('should merge numeric indices req.params when more in parent', function (done) {\n      var app = express();\n      var router = new express.Router({\n        mergeParams: true\n      });\n      router.get('/*', function (req, res) {\n        var keys = Object.keys(req.params).sort();\n        res.send(keys.map(function (k) {\n          return [k, req.params[k]];\n        }));\n      });\n      app.use('/user/id:(\\\\d+)/name:(\\\\w+)', router);\n      request(app).get('/user/id:10/name:tj/profile').expect(200, '[[\"0\",\"10\"],[\"1\",\"tj\"],[\"2\",\"profile\"]]', done);\n    });","file":"app.router.js","skipped":false,"dir":"test"},{"name":"should merge numeric indices req.params when parent has same number","suites":["app.router","params"],"updatePoint":{"line":240,"column":75,"index":8339},"line":240,"code":"    it('should merge numeric indices req.params when parent has same number', function (done) {\n      var app = express();\n      var router = new express.Router({\n        mergeParams: true\n      });\n      router.get('/name:(\\\\w+)', function (req, res) {\n        var keys = Object.keys(req.params).sort();\n        res.send(keys.map(function (k) {\n          return [k, req.params[k]];\n        }));\n      });\n      app.use('/user/id:(\\\\d+)', router);\n      request(app).get('/user/id:10/name:tj').expect(200, '[[\"0\",\"10\"],[\"1\",\"tj\"]]', done);\n    });","file":"app.router.js","skipped":false,"dir":"test"},{"name":"should ignore invalid incoming req.params","suites":["app.router","params"],"updatePoint":{"line":254,"column":49,"index":8861},"line":254,"code":"    it('should ignore invalid incoming req.params', function (done) {\n      var app = express();\n      var router = new express.Router({\n        mergeParams: true\n      });\n      router.get('/:name', function (req, res) {\n        var keys = Object.keys(req.params).sort();\n        res.send(keys.map(function (k) {\n          return [k, req.params[k]];\n        }));\n      });\n      app.use('/user/', function (req, res, next) {\n        req.params = 3; // wat?\n        router(req, res, next);\n      });\n      request(app).get('/user/tj').expect(200, '[[\"name\",\"tj\"]]', done);\n    });","file":"app.router.js","skipped":false,"dir":"test"},{"name":"should restore req.params","suites":["app.router","params"],"updatePoint":{"line":271,"column":33,"index":9426},"line":271,"code":"    it('should restore req.params', function (done) {\n      var app = express();\n      var router = new express.Router({\n        mergeParams: true\n      });\n      router.get('/user:(\\\\w+)/*', function (req, res, next) {\n        next();\n      });\n      app.use('/user/id:(\\\\d+)', function (req, res, next) {\n        router(req, res, function (err) {\n          var keys = Object.keys(req.params).sort();\n          res.send(keys.map(function (k) {\n            return [k, req.params[k]];\n          }));\n        });\n      });\n      request(app).get('/user/id:42/user:tj/profile').expect(200, '[[\"0\",\"42\"]]', done);\n    });","file":"app.router.js","skipped":false,"dir":"test"},{"name":"should be optional by default","suites":["app.router","trailing slashes"],"updatePoint":{"line":291,"column":37,"index":10099},"line":291,"code":"    it('should be optional by default', function (done) {\n      var app = express();\n      app.get('/user', function (req, res) {\n        res.end('tj');\n      });\n      request(app).get('/user/').expect('tj', done);\n    });","file":"app.router.js","skipped":false,"dir":"test"},{"name":"should match trailing slashes","suites":["app.router","trailing slashes","when \"strict routing\" is enabled"],"updatePoint":{"line":299,"column":39,"index":10388},"line":299,"code":"      it('should match trailing slashes', function (done) {\n        var app = express();\n        app.enable('strict routing');\n        app.get('/user/', function (req, res) {\n          res.end('tj');\n        });\n        request(app).get('/user/').expect('tj', done);\n      });","file":"app.router.js","skipped":false,"dir":"test"},{"name":"should pass-though middleware","suites":["app.router","trailing slashes","when \"strict routing\" is enabled"],"updatePoint":{"line":307,"column":39,"index":10665},"line":307,"code":"      it('should pass-though middleware', function (done) {\n        var app = express();\n        app.enable('strict routing');\n        app.use(function (req, res, next) {\n          res.setHeader('x-middleware', 'true');\n          next();\n        });\n        app.get('/user/', function (req, res) {\n          res.end('tj');\n        });\n        request(app).get('/user/').expect('x-middleware', 'true').expect(200, 'tj', done);\n      });","file":"app.router.js","skipped":false,"dir":"test"},{"name":"should pass-though mounted middleware","suites":["app.router","trailing slashes","when \"strict routing\" is enabled"],"updatePoint":{"line":319,"column":47,"index":11109},"line":319,"code":"      it('should pass-though mounted middleware', function (done) {\n        var app = express();\n        app.enable('strict routing');\n        app.use('/user/', function (req, res, next) {\n          res.setHeader('x-middleware', 'true');\n          next();\n        });\n        app.get('/user/test/', function (req, res) {\n          res.end('tj');\n        });\n        request(app).get('/user/test/').expect('x-middleware', 'true').expect(200, 'tj', done);\n      });","file":"app.router.js","skipped":false,"dir":"test"},{"name":"should match no slashes","suites":["app.router","trailing slashes","when \"strict routing\" is enabled"],"updatePoint":{"line":331,"column":33,"index":11559},"line":331,"code":"      it('should match no slashes', function (done) {\n        var app = express();\n        app.enable('strict routing');\n        app.get('/user', function (req, res) {\n          res.end('tj');\n        });\n        request(app).get('/user').expect('tj', done);\n      });","file":"app.router.js","skipped":false,"dir":"test"},{"name":"should match middleware when omitting the trailing slash","suites":["app.router","trailing slashes","when \"strict routing\" is enabled"],"updatePoint":{"line":339,"column":66,"index":11861},"line":339,"code":"      it('should match middleware when omitting the trailing slash', function (done) {\n        var app = express();\n        app.enable('strict routing');\n        app.use('/user/', function (req, res) {\n          res.end('tj');\n        });\n        request(app).get('/user').expect(200, 'tj', done);\n      });","file":"app.router.js","skipped":false,"dir":"test"},{"name":"should match middleware","suites":["app.router","trailing slashes","when \"strict routing\" is enabled"],"updatePoint":{"line":347,"column":33,"index":12136},"line":347,"code":"      it('should match middleware', function (done) {\n        var app = express();\n        app.enable('strict routing');\n        app.use('/user', function (req, res) {\n          res.end('tj');\n        });\n        request(app).get('/user').expect(200, 'tj', done);\n      });","file":"app.router.js","skipped":false,"dir":"test"},{"name":"should match middleware when adding the trailing slash","suites":["app.router","trailing slashes","when \"strict routing\" is enabled"],"updatePoint":{"line":355,"column":64,"index":12441},"line":355,"code":"      it('should match middleware when adding the trailing slash', function (done) {\n        var app = express();\n        app.enable('strict routing');\n        app.use('/user', function (req, res) {\n          res.end('tj');\n        });\n        request(app).get('/user/').expect(200, 'tj', done);\n      });","file":"app.router.js","skipped":false,"dir":"test"},{"name":"should fail when omitting the trailing slash","suites":["app.router","trailing slashes","when \"strict routing\" is enabled"],"updatePoint":{"line":363,"column":54,"index":12737},"line":363,"code":"      it('should fail when omitting the trailing slash', function (done) {\n        var app = express();\n        app.enable('strict routing');\n        app.get('/user/', function (req, res) {\n          res.end('tj');\n        });\n        request(app).get('/user').expect(404, done);\n      });","file":"app.router.js","skipped":false,"dir":"test"},{"name":"should fail when adding the trailing slash","suites":["app.router","trailing slashes","when \"strict routing\" is enabled"],"updatePoint":{"line":371,"column":52,"index":13025},"line":371,"code":"      it('should fail when adding the trailing slash', function (done) {\n        var app = express();\n        app.enable('strict routing');\n        app.get('/user', function (req, res) {\n          res.end('tj');\n        });\n        request(app).get('/user/').expect(404, done);\n      });","file":"app.router.js","skipped":false,"dir":"test"},{"name":"should allow escaped regexp","suites":["app.router","trailing slashes","when \"strict routing\" is enabled"],"updatePoint":{"line":381,"column":33,"index":13308},"line":381,"code":"  it('should allow escaped regexp', function (done) {\n    var app = express();\n    app.get('/user/\\\\d+', function (req, res) {\n      res.end('woot');\n    });\n    request(app).get('/user/10').expect(200, function (err) {\n      if (err) return done(err);\n      request(app).get('/user/tj').expect(404, done);\n    });\n  });","file":"app.router.js","skipped":false,"dir":"test"},{"name":"should allow literal \".\"","suites":["app.router","trailing slashes","when \"strict routing\" is enabled"],"updatePoint":{"line":391,"column":30,"index":13626},"line":391,"code":"  it('should allow literal \".\"', function (done) {\n    var app = express();\n    app.get('/api/users/:from..:to', function (req, res) {\n      var from = req.params.from,\n        to = req.params.to;\n      res.end('users from ' + from + ' to ' + to);\n    });\n    request(app).get('/api/users/1..50').expect('users from 1 to 50', done);\n  });","file":"app.router.js","skipped":false,"dir":"test"},{"name":"should capture everything","suites":["app.router","*"],"updatePoint":{"line":401,"column":33,"index":13998},"line":401,"code":"    it('should capture everything', function (done) {\n      var app = express();\n      app.get('*', function (req, res) {\n        res.end(req.params[0]);\n      });\n      request(app).get('/user/tobi.json').expect('/user/tobi.json', done);\n    });","file":"app.router.js","skipped":false,"dir":"test"},{"name":"should decode the capture","suites":["app.router","*"],"updatePoint":{"line":408,"column":33,"index":14245},"line":408,"code":"    it('should decode the capture', function (done) {\n      var app = express();\n      app.get('*', function (req, res) {\n        res.end(req.params[0]);\n      });\n      request(app).get('/user/tobi%20and%20loki.json').expect('/user/tobi and loki.json', done);\n    });","file":"app.router.js","skipped":false,"dir":"test"},{"name":"should denote a greedy capture group","suites":["app.router","*"],"updatePoint":{"line":415,"column":44,"index":14525},"line":415,"code":"    it('should denote a greedy capture group', function (done) {\n      var app = express();\n      app.get('/user/*.json', function (req, res) {\n        res.end(req.params[0]);\n      });\n      request(app).get('/user/tj.json').expect('tj', done);\n    });","file":"app.router.js","skipped":false,"dir":"test"},{"name":"should work with several","suites":["app.router","*"],"updatePoint":{"line":422,"column":32,"index":14767},"line":422,"code":"    it('should work with several', function (done) {\n      var app = express();\n      app.get('/api/*.*', function (req, res) {\n        var resource = req.params[0],\n          format = req.params[1];\n        res.end(resource + ' as ' + format);\n      });\n      request(app).get('/api/users/foo.bar.json').expect('users/foo.bar as json', done);\n    });","file":"app.router.js","skipped":false,"dir":"test"},{"name":"should work cross-segment","suites":["app.router","*"],"updatePoint":{"line":431,"column":33,"index":15120},"line":431,"code":"    it('should work cross-segment', function (done) {\n      var app = express();\n      var cb = after(2, done);\n      app.get('/api*', function (req, res) {\n        res.send(req.params[0]);\n      });\n      request(app).get('/api').expect(200, '', cb);\n      request(app).get('/api/hey').expect(200, '/hey', cb);\n    });","file":"app.router.js","skipped":false,"dir":"test"},{"name":"should allow naming","suites":["app.router","*"],"updatePoint":{"line":440,"column":27,"index":15434},"line":440,"code":"    it('should allow naming', function (done) {\n      var app = express();\n      app.get('/api/:resource(*)', function (req, res) {\n        var resource = req.params.resource;\n        res.end(resource);\n      });\n      request(app).get('/api/users/0.json').expect('users/0.json', done);\n    });","file":"app.router.js","skipped":false,"dir":"test"},{"name":"should not be greedy immediately after param","suites":["app.router","*"],"updatePoint":{"line":448,"column":52,"index":15754},"line":448,"code":"    it('should not be greedy immediately after param', function (done) {\n      var app = express();\n      app.get('/user/:user*', function (req, res) {\n        res.end(req.params.user);\n      });\n      request(app).get('/user/122').expect('122', done);\n    });","file":"app.router.js","skipped":false,"dir":"test"},{"name":"should eat everything after /","suites":["app.router","*"],"updatePoint":{"line":455,"column":37,"index":16000},"line":455,"code":"    it('should eat everything after /', function (done) {\n      var app = express();\n      app.get('/user/:user*', function (req, res) {\n        res.end(req.params.user);\n      });\n      request(app).get('/user/122/aaa').expect('122', done);\n    });","file":"app.router.js","skipped":false,"dir":"test"},{"name":"should span multiple segments","suites":["app.router","*"],"updatePoint":{"line":462,"column":37,"index":16250},"line":462,"code":"    it('should span multiple segments', function (done) {\n      var app = express();\n      app.get('/file/*', function (req, res) {\n        res.end(req.params[0]);\n      });\n      request(app).get('/file/javascripts/jquery.js').expect('javascripts/jquery.js', done);\n    });","file":"app.router.js","skipped":false,"dir":"test"},{"name":"should be optional","suites":["app.router","*"],"updatePoint":{"line":469,"column":26,"index":16514},"line":469,"code":"    it('should be optional', function (done) {\n      var app = express();\n      app.get('/file/*', function (req, res) {\n        res.end(req.params[0]);\n      });\n      request(app).get('/file/').expect('', done);\n    });","file":"app.router.js","skipped":false,"dir":"test"},{"name":"should require a preceding /","suites":["app.router","*"],"updatePoint":{"line":476,"column":36,"index":16746},"line":476,"code":"    it('should require a preceding /', function (done) {\n      var app = express();\n      app.get('/file/*', function (req, res) {\n        res.end(req.params[0]);\n      });\n      request(app).get('/file').expect(404, done);\n    });","file":"app.router.js","skipped":false,"dir":"test"},{"name":"should keep correct parameter indexes","suites":["app.router","*"],"updatePoint":{"line":483,"column":45,"index":16987},"line":483,"code":"    it('should keep correct parameter indexes', function (done) {\n      var app = express();\n      app.get('/*/user/:id', function (req, res) {\n        res.send(req.params);\n      });\n      request(app).get('/1/user/2').expect(200, '{\"0\":\"1\",\"id\":\"2\"}', done);\n    });","file":"app.router.js","skipped":false,"dir":"test"},{"name":"should work within arrays","suites":["app.router","*"],"updatePoint":{"line":490,"column":33,"index":17244},"line":490,"code":"    it('should work within arrays', function (done) {\n      var app = express();\n      app.get(['/user/:id', '/foo/*', '/:bar'], function (req, res) {\n        res.send(req.params.bar);\n      });\n      request(app).get('/test').expect(200, 'test', done);\n    });","file":"app.router.js","skipped":false,"dir":"test"},{"name":"should denote a capture group","suites":["app.router",":name"],"updatePoint":{"line":499,"column":37,"index":17550},"line":499,"code":"    it('should denote a capture group', function (done) {\n      var app = express();\n      app.get('/user/:user', function (req, res) {\n        res.end(req.params.user);\n      });\n      request(app).get('/user/tj').expect('tj', done);\n    });","file":"app.router.js","skipped":false,"dir":"test"},{"name":"should match a single segment only","suites":["app.router",":name"],"updatePoint":{"line":506,"column":42,"index":17798},"line":506,"code":"    it('should match a single segment only', function (done) {\n      var app = express();\n      app.get('/user/:user', function (req, res) {\n        res.end(req.params.user);\n      });\n      request(app).get('/user/tj/edit').expect(404, done);\n    });","file":"app.router.js","skipped":false,"dir":"test"},{"name":"should allow several capture groups","suites":["app.router",":name"],"updatePoint":{"line":513,"column":43,"index":18051},"line":513,"code":"    it('should allow several capture groups', function (done) {\n      var app = express();\n      app.get('/user/:user/:op', function (req, res) {\n        res.end(req.params.op + 'ing ' + req.params.user);\n      });\n      request(app).get('/user/tj/edit').expect('editing tj', done);\n    });","file":"app.router.js","skipped":false,"dir":"test"},{"name":"should work following a partial capture group","suites":["app.router",":name"],"updatePoint":{"line":520,"column":53,"index":18352},"line":520,"code":"    it('should work following a partial capture group', function (done) {\n      var app = express();\n      var cb = after(2, done);\n      app.get('/user(s)?/:user/:op', function (req, res) {\n        res.end(req.params.op + 'ing ' + req.params.user + (req.params[0] ? ' (old)' : ''));\n      });\n      request(app).get('/user/tj/edit').expect('editing tj', cb);\n      request(app).get('/users/tj/edit').expect('editing tj (old)', cb);\n    });","file":"app.router.js","skipped":false,"dir":"test"},{"name":"should work inside literal parenthesis","suites":["app.router",":name"],"updatePoint":{"line":529,"column":46,"index":18786},"line":529,"code":"    it('should work inside literal parenthesis', function (done) {\n      var app = express();\n      app.get('/:user\\\\(:op\\\\)', function (req, res) {\n        res.end(req.params.op + 'ing ' + req.params.user);\n      });\n      request(app).get('/tj(edit)').expect('editing tj', done);\n    });","file":"app.router.js","skipped":false,"dir":"test"},{"name":"should work in array of paths","suites":["app.router",":name"],"updatePoint":{"line":536,"column":37,"index":19067},"line":536,"code":"    it('should work in array of paths', function (done) {\n      var app = express();\n      var cb = after(2, done);\n      app.get(['/user/:user/poke', '/user/:user/pokes'], function (req, res) {\n        res.end('poking ' + req.params.user);\n      });\n      request(app).get('/user/tj/poke').expect('poking tj', cb);\n      request(app).get('/user/tj/pokes').expect('poking tj', cb);\n    });","file":"app.router.js","skipped":false,"dir":"test"},{"name":"should denote an optional capture group","suites":["app.router",":name?"],"updatePoint":{"line":547,"column":47,"index":19508},"line":547,"code":"    it('should denote an optional capture group', function (done) {\n      var app = express();\n      app.get('/user/:user/:op?', function (req, res) {\n        var op = req.params.op || 'view';\n        res.end(op + 'ing ' + req.params.user);\n      });\n      request(app).get('/user/tj').expect('viewing tj', done);\n    });","file":"app.router.js","skipped":false,"dir":"test"},{"name":"should populate the capture group","suites":["app.router",":name?"],"updatePoint":{"line":555,"column":41,"index":19824},"line":555,"code":"    it('should populate the capture group', function (done) {\n      var app = express();\n      app.get('/user/:user/:op?', function (req, res) {\n        var op = req.params.op || 'view';\n        res.end(op + 'ing ' + req.params.user);\n      });\n      request(app).get('/user/tj/edit').expect('editing tj', done);\n    });","file":"app.router.js","skipped":false,"dir":"test"},{"name":"should denote a format","suites":["app.router",".:name"],"updatePoint":{"line":565,"column":30,"index":20175},"line":565,"code":"    it('should denote a format', function (done) {\n      var app = express();\n      var cb = after(2, done);\n      app.get('/:name.:format', function (req, res) {\n        res.end(req.params.name + ' as ' + req.params.format);\n      });\n      request(app).get('/foo.json').expect(200, 'foo as json', cb);\n      request(app).get('/foo').expect(404, cb);\n    });","file":"app.router.js","skipped":false,"dir":"test"},{"name":"should denote an optional format","suites":["app.router",".:name?"],"updatePoint":{"line":576,"column":40,"index":20587},"line":576,"code":"    it('should denote an optional format', function (done) {\n      var app = express();\n      var cb = after(2, done);\n      app.get('/:name.:format?', function (req, res) {\n        res.end(req.params.name + ' as ' + (req.params.format || 'html'));\n      });\n      request(app).get('/foo').expect(200, 'foo as html', cb);\n      request(app).get('/foo.json').expect(200, 'foo as json', done);\n    });","file":"app.router.js","skipped":false,"dir":"test"},{"name":"should continue lookup","suites":["app.router","when next() is called"],"updatePoint":{"line":587,"column":30,"index":21033},"line":587,"code":"    it('should continue lookup', function (done) {\n      var app = express(),\n        calls = [];\n      app.get('/foo/:bar?', function (req, res, next) {\n        calls.push('/foo/:bar?');\n        next();\n      });\n      app.get('/bar', function (req, res) {\n        assert(0);\n      });\n      app.get('/foo', function (req, res, next) {\n        calls.push('/foo');\n        next();\n      });\n      app.get('/foo', function (req, res, next) {\n        calls.push('/foo 2');\n        res.json(calls);\n      });\n      request(app).get('/foo').expect(200, ['/foo/:bar?', '/foo', '/foo 2'], done);\n    });","file":"app.router.js","skipped":false,"dir":"test"},{"name":"should jump to next route","suites":["app.router","when next(\"route\") is called"],"updatePoint":{"line":609,"column":33,"index":21697},"line":609,"code":"    it('should jump to next route', function (done) {\n      var app = express();\n      function fn(req, res, next) {\n        res.set('X-Hit', '1');\n        next('route');\n      }\n      app.get('/foo', fn, function (req, res, next) {\n        res.end('failure');\n      });\n      app.get('/foo', function (req, res) {\n        res.end('success');\n      });\n      request(app).get('/foo').expect('X-Hit', '1').expect(200, 'success', done);\n    });","file":"app.router.js","skipped":false,"dir":"test"},{"name":"should jump out of router","suites":["app.router","when next(\"router\") is called"],"updatePoint":{"line":625,"column":33,"index":22204},"line":625,"code":"    it('should jump out of router', function (done) {\n      var app = express();\n      var router = express.Router();\n      function fn(req, res, next) {\n        res.set('X-Hit', '1');\n        next('router');\n      }\n      router.get('/foo', fn, function (req, res, next) {\n        res.end('failure');\n      });\n      router.get('/foo', function (req, res, next) {\n        res.end('failure');\n      });\n      app.use(router);\n      app.get('/foo', function (req, res) {\n        res.end('success');\n      });\n      request(app).get('/foo').expect('X-Hit', '1').expect(200, 'success', done);\n    });","file":"app.router.js","skipped":false,"dir":"test"},{"name":"should break out of app.router","suites":["app.router","when next(err) is called"],"updatePoint":{"line":646,"column":38,"index":22866},"line":646,"code":"    it('should break out of app.router', function (done) {\n      var app = express(),\n        calls = [];\n      app.get('/foo/:bar?', function (req, res, next) {\n        calls.push('/foo/:bar?');\n        next();\n      });\n      app.get('/bar', function (req, res) {\n        assert(0);\n      });\n      app.get('/foo', function (req, res, next) {\n        calls.push('/foo');\n        next(new Error('fail'));\n      });\n      app.get('/foo', function (req, res, next) {\n        assert(0);\n      });\n      app.use(function (err, req, res, next) {\n        res.json({\n          calls: calls,\n          error: err.message\n        });\n      });\n      request(app).get('/foo').expect(200, {\n        calls: ['/foo/:bar?', '/foo'],\n        error: 'fail'\n      }, done);\n    });","file":"app.router.js","skipped":false,"dir":"test"},{"name":"should call handler in same route, if exists","suites":["app.router","when next(err) is called"],"updatePoint":{"line":674,"column":52,"index":23646},"line":674,"code":"    it('should call handler in same route, if exists', function (done) {\n      var app = express();\n      function fn1(req, res, next) {\n        next(new Error('boom!'));\n      }\n      function fn2(req, res, next) {\n        res.send('foo here');\n      }\n      function fn3(err, req, res, next) {\n        res.send('route go ' + err.message);\n      }\n      app.get('/foo', fn1, fn2, fn3);\n      app.use(function (err, req, res, next) {\n        res.end('error!');\n      });\n      request(app).get('/foo').expect('route go boom!', done);\n    });","file":"app.router.js","skipped":false,"dir":"test"},{"name":"should allow rewriting of the url","suites":["app.router","when next(err) is called"],"updatePoint":{"line":692,"column":39,"index":24181},"line":692,"code":"  it('should allow rewriting of the url', function (done) {\n    var app = express();\n    app.get('/account/edit', function (req, res, next) {\n      req.user = {\n        id: 12\n      }; // faux authenticated user\n      req.url = '/user/' + req.user.id + '/edit';\n      next();\n    });\n    app.get('/user/:id/edit', function (req, res) {\n      res.send('editing user ' + req.params.id);\n    });\n    request(app).get('/account/edit').expect('editing user 12', done);\n  });","file":"app.router.js","skipped":false,"dir":"test"},{"name":"should run in order added","suites":["app.router","when next(err) is called"],"updatePoint":{"line":706,"column":31,"index":24643},"line":706,"code":"  it('should run in order added', function (done) {\n    var app = express();\n    var path = [];\n    app.get('*', function (req, res, next) {\n      path.push(0);\n      next();\n    });\n    app.get('/user/:id', function (req, res, next) {\n      path.push(1);\n      next();\n    });\n    app.use(function (req, res, next) {\n      path.push(2);\n      next();\n    });\n    app.all('/user/:id', function (req, res, next) {\n      path.push(3);\n      next();\n    });\n    app.get('*', function (req, res, next) {\n      path.push(4);\n      next();\n    });\n    app.use(function (req, res, next) {\n      path.push(5);\n      res.end(path.join(','));\n    });\n    request(app).get('/user/1').expect(200, '0,1,2,3,4,5', done);\n  });","file":"app.router.js","skipped":false,"dir":"test"},{"name":"should be chainable","suites":["app.router","when next(err) is called"],"updatePoint":{"line":735,"column":25,"index":25350},"line":735,"code":"  it('should be chainable', function () {\n    var app = express();\n    assert.strictEqual(app.get('/', function () {}), app);\n  });","file":"app.router.js","skipped":false,"dir":"test"},{"name":"should not get invoked without error handler on error","suites":["app",".VERB()"],"updatePoint":{"line":8,"column":61,"index":239},"line":8,"code":"    it('should not get invoked without error handler on error', function (done) {\n      var app = express();\n      app.use(function (req, res, next) {\n        next(new Error('boom!'));\n      });\n      app.get('/bar', function (req, res) {\n        res.send('hello, world!');\n      });\n      request(app).post('/bar').expect(500, /Error: boom!/, done);\n    });","file":"app.routes.error.js","skipped":false,"dir":"test"},{"name":"should only call an error handling routing callback when an error is propagated","suites":["app",".VERB()"],"updatePoint":{"line":18,"column":87,"index":624},"line":18,"code":"    it('should only call an error handling routing callback when an error is propagated', function (done) {\n      var app = express();\n      var a = false;\n      var b = false;\n      var c = false;\n      var d = false;\n      app.get('/', function (req, res, next) {\n        next(new Error('fabricated error'));\n      }, function (req, res, next) {\n        a = true;\n        next();\n      }, function (err, req, res, next) {\n        b = true;\n        assert.strictEqual(err.message, 'fabricated error');\n        next(err);\n      }, function (err, req, res, next) {\n        c = true;\n        assert.strictEqual(err.message, 'fabricated error');\n        next();\n      }, function (err, req, res, next) {\n        d = true;\n        next();\n      }, function (req, res) {\n        assert.ok(!a);\n        assert.ok(b);\n        assert.ok(c);\n        assert.ok(!d);\n        res.send(204);\n      });\n      request(app).get('/').expect(204, done);\n    });","file":"app.routes.error.js","skipped":false,"dir":"test"},{"name":"should emit \"mount\" when mounted","suites":["app"],"updatePoint":{"line":8,"column":38,"index":211},"line":8,"code":"  it('should emit \"mount\" when mounted', function (done) {\n    var blog = express(),\n      app = express();\n    blog.on('mount', function (arg) {\n      assert.strictEqual(arg, app);\n      done();\n    });\n    app.use(blog);\n  });","file":"app.use.js","skipped":false,"dir":"test"},{"name":"should mount the app","suites":["app",".use(app)"],"updatePoint":{"line":18,"column":28,"index":468},"line":18,"code":"    it('should mount the app', function (done) {\n      var blog = express(),\n        app = express();\n      blog.get('/blog', function (req, res) {\n        res.end('blog');\n      });\n      app.use(blog);\n      request(app).get('/blog').expect('blog', done);\n    });","file":"app.use.js","skipped":false,"dir":"test"},{"name":"should support mount-points","suites":["app",".use(app)"],"updatePoint":{"line":27,"column":35,"index":741},"line":27,"code":"    it('should support mount-points', function (done) {\n      var blog = express(),\n        forum = express(),\n        app = express();\n      var cb = after(2, done);\n      blog.get('/', function (req, res) {\n        res.end('blog');\n      });\n      forum.get('/', function (req, res) {\n        res.end('forum');\n      });\n      app.use('/blog', blog);\n      app.use('/forum', forum);\n      request(app).get('/blog').expect(200, 'blog', cb);\n      request(app).get('/forum').expect(200, 'forum', done);\n    });","file":"app.use.js","skipped":false,"dir":"test"},{"name":"should set the child's .parent","suites":["app",".use(app)"],"updatePoint":{"line":43,"column":39,"index":1256},"line":43,"code":"    it('should set the child\\'s .parent', function () {\n      var blog = express(),\n        app = express();\n      app.use('/blog', blog);\n      assert.strictEqual(blog.parent, app);\n    });","file":"app.use.js","skipped":false,"dir":"test"},{"name":"should support dynamic routes","suites":["app",".use(app)"],"updatePoint":{"line":49,"column":37,"index":1445},"line":49,"code":"    it('should support dynamic routes', function (done) {\n      var blog = express(),\n        app = express();\n      blog.get('/', function (req, res) {\n        res.end('success');\n      });\n      app.use('/post/:article', blog);\n      request(app).get('/post/once-upon-a-time').expect('success', done);\n    });","file":"app.use.js","skipped":false,"dir":"test"},{"name":"should support mounted app anywhere","suites":["app",".use(app)"],"updatePoint":{"line":58,"column":43,"index":1763},"line":58,"code":"    it('should support mounted app anywhere', function (done) {\n      var cb = after(3, done);\n      var blog = express(),\n        other = express(),\n        app = express();\n      function fn1(req, res, next) {\n        res.setHeader('x-fn-1', 'hit');\n        next();\n      }\n      function fn2(req, res, next) {\n        res.setHeader('x-fn-2', 'hit');\n        next();\n      }\n      blog.get('/', function (req, res) {\n        res.end('success');\n      });\n      blog.once('mount', function (parent) {\n        assert.strictEqual(parent, app);\n        cb();\n      });\n      other.once('mount', function (parent) {\n        assert.strictEqual(parent, app);\n        cb();\n      });\n      app.use('/post/:article', fn1, other, fn2, blog);\n      request(app).get('/post/once-upon-a-time').expect('x-fn-1', 'hit').expect('x-fn-2', 'hit').expect('success', cb);\n    });","file":"app.use.js","skipped":false,"dir":"test"},{"name":"should accept multiple arguments","suites":["app",".use(middleware)"],"updatePoint":{"line":87,"column":40,"index":2673},"line":87,"code":"    it('should accept multiple arguments', function (done) {\n      var app = express();\n      function fn1(req, res, next) {\n        res.setHeader('x-fn-1', 'hit');\n        next();\n      }\n      function fn2(req, res, next) {\n        res.setHeader('x-fn-2', 'hit');\n        next();\n      }\n      app.use(fn1, fn2, function fn3(req, res) {\n        res.setHeader('x-fn-3', 'hit');\n        res.end();\n      });\n      request(app).get('/').expect('x-fn-1', 'hit').expect('x-fn-2', 'hit').expect('x-fn-3', 'hit').expect(200, done);\n    });","file":"app.use.js","skipped":false,"dir":"test"},{"name":"should invoke middleware for all requests","suites":["app",".use(middleware)"],"updatePoint":{"line":103,"column":49,"index":3217},"line":103,"code":"    it('should invoke middleware for all requests', function (done) {\n      var app = express();\n      var cb = after(3, done);\n      app.use(function (req, res) {\n        res.send('saw ' + req.method + ' ' + req.url);\n      });\n      request(app).get('/').expect(200, 'saw GET /', cb);\n      request(app).options('/').expect(200, 'saw OPTIONS /', cb);\n      request(app).post('/foo').expect(200, 'saw POST /foo', cb);\n    });","file":"app.use.js","skipped":false,"dir":"test"},{"name":"should accept array of middleware","suites":["app",".use(middleware)"],"updatePoint":{"line":113,"column":41,"index":3636},"line":113,"code":"    it('should accept array of middleware', function (done) {\n      var app = express();\n      function fn1(req, res, next) {\n        res.setHeader('x-fn-1', 'hit');\n        next();\n      }\n      function fn2(req, res, next) {\n        res.setHeader('x-fn-2', 'hit');\n        next();\n      }\n      function fn3(req, res, next) {\n        res.setHeader('x-fn-3', 'hit');\n        res.end();\n      }\n      app.use([fn1, fn2, fn3]);\n      request(app).get('/').expect('x-fn-1', 'hit').expect('x-fn-2', 'hit').expect('x-fn-3', 'hit').expect(200, done);\n    });","file":"app.use.js","skipped":false,"dir":"test"},{"name":"should accept multiple arrays of middleware","suites":["app",".use(middleware)"],"updatePoint":{"line":130,"column":51,"index":4200},"line":130,"code":"    it('should accept multiple arrays of middleware', function (done) {\n      var app = express();\n      function fn1(req, res, next) {\n        res.setHeader('x-fn-1', 'hit');\n        next();\n      }\n      function fn2(req, res, next) {\n        res.setHeader('x-fn-2', 'hit');\n        next();\n      }\n      function fn3(req, res, next) {\n        res.setHeader('x-fn-3', 'hit');\n        res.end();\n      }\n      app.use([fn1, fn2], [fn3]);\n      request(app).get('/').expect('x-fn-1', 'hit').expect('x-fn-2', 'hit').expect('x-fn-3', 'hit').expect(200, done);\n    });","file":"app.use.js","skipped":false,"dir":"test"},{"name":"should accept nested arrays of middleware","suites":["app",".use(middleware)"],"updatePoint":{"line":147,"column":49,"index":4764},"line":147,"code":"    it('should accept nested arrays of middleware', function (done) {\n      var app = express();\n      function fn1(req, res, next) {\n        res.setHeader('x-fn-1', 'hit');\n        next();\n      }\n      function fn2(req, res, next) {\n        res.setHeader('x-fn-2', 'hit');\n        next();\n      }\n      function fn3(req, res, next) {\n        res.setHeader('x-fn-3', 'hit');\n        res.end();\n      }\n      app.use([[fn1], fn2], [fn3]);\n      request(app).get('/').expect('x-fn-1', 'hit').expect('x-fn-2', 'hit').expect('x-fn-3', 'hit').expect(200, done);\n    });","file":"app.use.js","skipped":false,"dir":"test"},{"name":"should require middleware","suites":["app",".use(path, middleware)"],"updatePoint":{"line":166,"column":33,"index":5371},"line":166,"code":"    it('should require middleware', function () {\n      var app = express();\n      assert.throws(function () {\n        app.use('/');\n      }, /requires a middleware function/);\n    });","file":"app.use.js","skipped":false,"dir":"test"},{"name":"should reject string as middleware","suites":["app",".use(path, middleware)"],"updatePoint":{"line":172,"column":42,"index":5565},"line":172,"code":"    it('should reject string as middleware', function () {\n      var app = express();\n      assert.throws(function () {\n        app.use('/', 'foo');\n      }, /requires a middleware function but got a string/);\n    });","file":"app.use.js","skipped":false,"dir":"test"},{"name":"should reject number as middleware","suites":["app",".use(path, middleware)"],"updatePoint":{"line":178,"column":42,"index":5783},"line":178,"code":"    it('should reject number as middleware', function () {\n      var app = express();\n      assert.throws(function () {\n        app.use('/', 42);\n      }, /requires a middleware function but got a number/);\n    });","file":"app.use.js","skipped":false,"dir":"test"},{"name":"should reject null as middleware","suites":["app",".use(path, middleware)"],"updatePoint":{"line":184,"column":40,"index":5996},"line":184,"code":"    it('should reject null as middleware', function () {\n      var app = express();\n      assert.throws(function () {\n        app.use('/', null);\n      }, /requires a middleware function but got a Null/);\n    });","file":"app.use.js","skipped":false,"dir":"test"},{"name":"should reject Date as middleware","suites":["app",".use(path, middleware)"],"updatePoint":{"line":190,"column":40,"index":6209},"line":190,"code":"    it('should reject Date as middleware', function () {\n      var app = express();\n      assert.throws(function () {\n        app.use('/', new Date());\n      }, /requires a middleware function but got a Date/);\n    });","file":"app.use.js","skipped":false,"dir":"test"},{"name":"should strip path from req.url","suites":["app",".use(path, middleware)"],"updatePoint":{"line":196,"column":38,"index":6426},"line":196,"code":"    it('should strip path from req.url', function (done) {\n      var app = express();\n      app.use('/foo', function (req, res) {\n        res.send('saw ' + req.method + ' ' + req.url);\n      });\n      request(app).get('/foo/bar').expect(200, 'saw GET /bar', done);\n    });","file":"app.use.js","skipped":false,"dir":"test"},{"name":"should accept multiple arguments","suites":["app",".use(path, middleware)"],"updatePoint":{"line":203,"column":40,"index":6701},"line":203,"code":"    it('should accept multiple arguments', function (done) {\n      var app = express();\n      function fn1(req, res, next) {\n        res.setHeader('x-fn-1', 'hit');\n        next();\n      }\n      function fn2(req, res, next) {\n        res.setHeader('x-fn-2', 'hit');\n        next();\n      }\n      app.use('/foo', fn1, fn2, function fn3(req, res) {\n        res.setHeader('x-fn-3', 'hit');\n        res.end();\n      });\n      request(app).get('/foo').expect('x-fn-1', 'hit').expect('x-fn-2', 'hit').expect('x-fn-3', 'hit').expect(200, done);\n    });","file":"app.use.js","skipped":false,"dir":"test"},{"name":"should invoke middleware for all requests starting with path","suites":["app",".use(path, middleware)"],"updatePoint":{"line":219,"column":68,"index":7275},"line":219,"code":"    it('should invoke middleware for all requests starting with path', function (done) {\n      var app = express();\n      var cb = after(3, done);\n      app.use('/foo', function (req, res) {\n        res.send('saw ' + req.method + ' ' + req.url);\n      });\n      request(app).get('/').expect(404, cb);\n      request(app).post('/foo').expect(200, 'saw POST /', cb);\n      request(app).post('/foo/bar').expect(200, 'saw POST /bar', cb);\n    });","file":"app.use.js","skipped":false,"dir":"test"},{"name":"should work if path has trailing slash","suites":["app",".use(path, middleware)"],"updatePoint":{"line":229,"column":46,"index":7695},"line":229,"code":"    it('should work if path has trailing slash', function (done) {\n      var app = express();\n      var cb = after(3, done);\n      app.use('/foo/', function (req, res) {\n        res.send('saw ' + req.method + ' ' + req.url);\n      });\n      request(app).get('/').expect(404, cb);\n      request(app).post('/foo').expect(200, 'saw POST /', cb);\n      request(app).post('/foo/bar').expect(200, 'saw POST /bar', cb);\n    });","file":"app.use.js","skipped":false,"dir":"test"},{"name":"should accept array of middleware","suites":["app",".use(path, middleware)"],"updatePoint":{"line":239,"column":41,"index":8111},"line":239,"code":"    it('should accept array of middleware', function (done) {\n      var app = express();\n      function fn1(req, res, next) {\n        res.setHeader('x-fn-1', 'hit');\n        next();\n      }\n      function fn2(req, res, next) {\n        res.setHeader('x-fn-2', 'hit');\n        next();\n      }\n      function fn3(req, res, next) {\n        res.setHeader('x-fn-3', 'hit');\n        res.end();\n      }\n      app.use('/foo', [fn1, fn2, fn3]);\n      request(app).get('/foo').expect('x-fn-1', 'hit').expect('x-fn-2', 'hit').expect('x-fn-3', 'hit').expect(200, done);\n    });","file":"app.use.js","skipped":false,"dir":"test"},{"name":"should accept multiple arrays of middleware","suites":["app",".use(path, middleware)"],"updatePoint":{"line":256,"column":51,"index":8686},"line":256,"code":"    it('should accept multiple arrays of middleware', function (done) {\n      var app = express();\n      function fn1(req, res, next) {\n        res.setHeader('x-fn-1', 'hit');\n        next();\n      }\n      function fn2(req, res, next) {\n        res.setHeader('x-fn-2', 'hit');\n        next();\n      }\n      function fn3(req, res, next) {\n        res.setHeader('x-fn-3', 'hit');\n        res.end();\n      }\n      app.use('/foo', [fn1, fn2], [fn3]);\n      request(app).get('/foo').expect('x-fn-1', 'hit').expect('x-fn-2', 'hit').expect('x-fn-3', 'hit').expect(200, done);\n    });","file":"app.use.js","skipped":false,"dir":"test"},{"name":"should accept nested arrays of middleware","suites":["app",".use(path, middleware)"],"updatePoint":{"line":273,"column":49,"index":9261},"line":273,"code":"    it('should accept nested arrays of middleware', function (done) {\n      var app = express();\n      function fn1(req, res, next) {\n        res.setHeader('x-fn-1', 'hit');\n        next();\n      }\n      function fn2(req, res, next) {\n        res.setHeader('x-fn-2', 'hit');\n        next();\n      }\n      function fn3(req, res, next) {\n        res.setHeader('x-fn-3', 'hit');\n        res.end();\n      }\n      app.use('/foo', [fn1, [fn2]], [fn3]);\n      request(app).get('/foo').expect('x-fn-1', 'hit').expect('x-fn-2', 'hit').expect('x-fn-3', 'hit').expect(200, done);\n    });","file":"app.use.js","skipped":false,"dir":"test"},{"name":"should support array of paths","suites":["app",".use(path, middleware)"],"updatePoint":{"line":290,"column":37,"index":9826},"line":290,"code":"    it('should support array of paths', function (done) {\n      var app = express();\n      var cb = after(3, done);\n      app.use(['/foo/', '/bar'], function (req, res) {\n        res.send('saw ' + req.method + ' ' + req.url + ' through ' + req.originalUrl);\n      });\n      request(app).get('/').expect(404, cb);\n      request(app).get('/foo').expect(200, 'saw GET / through /foo', cb);\n      request(app).get('/bar').expect(200, 'saw GET / through /bar', cb);\n    });","file":"app.use.js","skipped":false,"dir":"test"},{"name":"should support array of paths with middleware array","suites":["app",".use(path, middleware)"],"updatePoint":{"line":300,"column":59,"index":10317},"line":300,"code":"    it('should support array of paths with middleware array', function (done) {\n      var app = express();\n      var cb = after(2, done);\n      function fn1(req, res, next) {\n        res.setHeader('x-fn-1', 'hit');\n        next();\n      }\n      function fn2(req, res, next) {\n        res.setHeader('x-fn-2', 'hit');\n        next();\n      }\n      function fn3(req, res, next) {\n        res.setHeader('x-fn-3', 'hit');\n        res.send('saw ' + req.method + ' ' + req.url + ' through ' + req.originalUrl);\n      }\n      app.use(['/foo/', '/bar'], [[fn1], fn2], [fn3]);\n      request(app).get('/foo').expect('x-fn-1', 'hit').expect('x-fn-2', 'hit').expect('x-fn-3', 'hit').expect(200, 'saw GET / through /foo', cb);\n      request(app).get('/bar').expect('x-fn-1', 'hit').expect('x-fn-2', 'hit').expect('x-fn-3', 'hit').expect(200, 'saw GET / through /bar', cb);\n    });","file":"app.use.js","skipped":false,"dir":"test"},{"name":"should support regexp path","suites":["app",".use(path, middleware)"],"updatePoint":{"line":319,"column":34,"index":11159},"line":319,"code":"    it('should support regexp path', function (done) {\n      var app = express();\n      var cb = after(4, done);\n      app.use(/^\\/[a-z]oo/, function (req, res) {\n        res.send('saw ' + req.method + ' ' + req.url + ' through ' + req.originalUrl);\n      });\n      request(app).get('/').expect(404, cb);\n      request(app).get('/foo').expect(200, 'saw GET / through /foo', cb);\n      request(app).get('/zoo/bear').expect(200, 'saw GET /bear through /zoo/bear', cb);\n      request(app).get('/get/zoo').expect(404, cb);\n    });","file":"app.use.js","skipped":false,"dir":"test"},{"name":"should support empty string path","suites":["app",".use(path, middleware)"],"updatePoint":{"line":330,"column":40,"index":11692},"line":330,"code":"    it('should support empty string path', function (done) {\n      var app = express();\n      app.use('', function (req, res) {\n        res.send('saw ' + req.method + ' ' + req.url + ' through ' + req.originalUrl);\n      });\n      request(app).get('/').expect(200, 'saw GET / through /', done);\n    });","file":"app.use.js","skipped":false,"dir":"test"},{"name":"should set a value","suites":["config",".set()"],"updatePoint":{"line":7,"column":26,"index":171},"line":7,"code":"    it('should set a value', function () {\n      var app = express();\n      app.set('foo', 'bar');\n      assert.equal(app.get('foo'), 'bar');\n    });","file":"config.js","skipped":false,"dir":"test"},{"name":"should set prototype values","suites":["config",".set()"],"updatePoint":{"line":12,"column":35,"index":330},"line":12,"code":"    it('should set prototype values', function () {\n      var app = express();\n      app.set('hasOwnProperty', 42);\n      assert.strictEqual(app.get('hasOwnProperty'), 42);\n    });","file":"config.js","skipped":false,"dir":"test"},{"name":"should return the app","suites":["config",".set()"],"updatePoint":{"line":17,"column":29,"index":505},"line":17,"code":"    it('should return the app', function () {\n      var app = express();\n      assert.equal(app.set('foo', 'bar'), app);\n    });","file":"config.js","skipped":false,"dir":"test"},{"name":"should return the app when undefined","suites":["config",".set()"],"updatePoint":{"line":21,"column":44,"index":649},"line":21,"code":"    it('should return the app when undefined', function () {\n      var app = express();\n      assert.equal(app.set('foo', undefined), app);\n    });","file":"config.js","skipped":false,"dir":"test"},{"name":"should return set value","suites":["config",".set()"],"updatePoint":{"line":25,"column":31,"index":784},"line":25,"code":"    it('should return set value', function () {\n      var app = express();\n      app.set('foo', 'bar');\n      assert.strictEqual(app.set('foo'), 'bar');\n    });","file":"config.js","skipped":false,"dir":"test"},{"name":"should return undefined for prototype values","suites":["config",".set()"],"updatePoint":{"line":30,"column":52,"index":966},"line":30,"code":"    it('should return undefined for prototype values', function () {\n      var app = express();\n      assert.strictEqual(app.set('hasOwnProperty'), undefined);\n    });","file":"config.js","skipped":false,"dir":"test"},{"name":"should throw on bad value","suites":["config",".set()","\"etag\""],"updatePoint":{"line":35,"column":35,"index":1154},"line":35,"code":"      it('should throw on bad value', function () {\n        var app = express();\n        assert.throws(app.set.bind(app, 'etag', 42), /unknown value/);\n      });","file":"config.js","skipped":false,"dir":"test"},{"name":"should set \"etag fn\"","suites":["config",".set()","\"etag\""],"updatePoint":{"line":39,"column":30,"index":1311},"line":39,"code":"      it('should set \"etag fn\"', function () {\n        var app = express();\n        var fn = function () {};\n        app.set('etag', fn);\n        assert.equal(app.get('etag fn'), fn);\n      });","file":"config.js","skipped":false,"dir":"test"},{"name":"should set \"trust proxy fn\"","suites":["config",".set()","\"trust proxy\""],"updatePoint":{"line":47,"column":37,"index":1564},"line":47,"code":"      it('should set \"trust proxy fn\"', function () {\n        var app = express();\n        var fn = function () {};\n        app.set('trust proxy', fn);\n        assert.equal(app.get('trust proxy fn'), fn);\n      });","file":"config.js","skipped":false,"dir":"test"},{"name":"should return undefined when unset","suites":["config",".get()"],"updatePoint":{"line":56,"column":42,"index":1833},"line":56,"code":"    it('should return undefined when unset', function () {\n      var app = express();\n      assert.strictEqual(app.get('foo'), undefined);\n    });","file":"config.js","skipped":false,"dir":"test"},{"name":"should return undefined for prototype values","suites":["config",".get()"],"updatePoint":{"line":60,"column":52,"index":1990},"line":60,"code":"    it('should return undefined for prototype values', function () {\n      var app = express();\n      assert.strictEqual(app.get('hasOwnProperty'), undefined);\n    });","file":"config.js","skipped":false,"dir":"test"},{"name":"should otherwise return the value","suites":["config",".get()"],"updatePoint":{"line":64,"column":41,"index":2147},"line":64,"code":"    it('should otherwise return the value', function () {\n      var app = express();\n      app.set('foo', 'bar');\n      assert.equal(app.get('foo'), 'bar');\n    });","file":"config.js","skipped":false,"dir":"test"},{"name":"should default to the parent app","suites":["config",".get()","when mounted"],"updatePoint":{"line":70,"column":42,"index":2356},"line":70,"code":"      it('should default to the parent app', function () {\n        var app = express();\n        var blog = express();\n        app.set('title', 'Express');\n        app.use(blog);\n        assert.equal(blog.get('title'), 'Express');\n      });","file":"config.js","skipped":false,"dir":"test"},{"name":"should given precedence to the child","suites":["config",".get()","when mounted"],"updatePoint":{"line":77,"column":46,"index":2600},"line":77,"code":"      it('should given precedence to the child', function () {\n        var app = express();\n        var blog = express();\n        app.use(blog);\n        app.set('title', 'Express');\n        blog.set('title', 'Some Blog');\n        assert.equal(blog.get('title'), 'Some Blog');\n      });","file":"config.js","skipped":false,"dir":"test"},{"name":"should inherit \"trust proxy\" setting","suites":["config",".get()","when mounted"],"updatePoint":{"line":85,"column":46,"index":2886},"line":85,"code":"      it('should inherit \"trust proxy\" setting', function () {\n        var app = express();\n        var blog = express();\n        function fn() {\n          return false;\n        }\n        app.set('trust proxy', fn);\n        assert.equal(app.get('trust proxy'), fn);\n        assert.equal(app.get('trust proxy fn'), fn);\n        app.use(blog);\n        assert.equal(blog.get('trust proxy'), fn);\n        assert.equal(blog.get('trust proxy fn'), fn);\n      });","file":"config.js","skipped":false,"dir":"test"},{"name":"should prefer child \"trust proxy\" setting","suites":["config",".get()","when mounted"],"updatePoint":{"line":98,"column":51,"index":3348},"line":98,"code":"      it('should prefer child \"trust proxy\" setting', function () {\n        var app = express();\n        var blog = express();\n        function fn1() {\n          return false;\n        }\n        function fn2() {\n          return true;\n        }\n        app.set('trust proxy', fn1);\n        assert.equal(app.get('trust proxy'), fn1);\n        assert.equal(app.get('trust proxy fn'), fn1);\n        blog.set('trust proxy', fn2);\n        assert.equal(blog.get('trust proxy'), fn2);\n        assert.equal(blog.get('trust proxy fn'), fn2);\n        app.use(blog);\n        assert.equal(app.get('trust proxy'), fn1);\n        assert.equal(app.get('trust proxy fn'), fn1);\n        assert.equal(blog.get('trust proxy'), fn2);\n        assert.equal(blog.get('trust proxy fn'), fn2);\n      });","file":"config.js","skipped":false,"dir":"test"},{"name":"should set the value to true","suites":["config",".enable()"],"updatePoint":{"line":122,"column":36,"index":4161},"line":122,"code":"    it('should set the value to true', function () {\n      var app = express();\n      assert.equal(app.enable('tobi'), app);\n      assert.strictEqual(app.get('tobi'), true);\n    });","file":"config.js","skipped":false,"dir":"test"},{"name":"should set prototype values","suites":["config",".enable()"],"updatePoint":{"line":127,"column":35,"index":4342},"line":127,"code":"    it('should set prototype values', function () {\n      var app = express();\n      app.enable('hasOwnProperty');\n      assert.strictEqual(app.get('hasOwnProperty'), true);\n    });","file":"config.js","skipped":false,"dir":"test"},{"name":"should set the value to false","suites":["config",".disable()"],"updatePoint":{"line":134,"column":37,"index":4571},"line":134,"code":"    it('should set the value to false', function () {\n      var app = express();\n      assert.equal(app.disable('tobi'), app);\n      assert.strictEqual(app.get('tobi'), false);\n    });","file":"config.js","skipped":false,"dir":"test"},{"name":"should set prototype values","suites":["config",".disable()"],"updatePoint":{"line":139,"column":35,"index":4754},"line":139,"code":"    it('should set prototype values', function () {\n      var app = express();\n      app.disable('hasOwnProperty');\n      assert.strictEqual(app.get('hasOwnProperty'), false);\n    });","file":"config.js","skipped":false,"dir":"test"},{"name":"should default to false","suites":["config",".enabled()"],"updatePoint":{"line":146,"column":31,"index":4979},"line":146,"code":"    it('should default to false', function () {\n      var app = express();\n      assert.strictEqual(app.enabled('foo'), false);\n    });","file":"config.js","skipped":false,"dir":"test"},{"name":"should return true when set","suites":["config",".enabled()"],"updatePoint":{"line":150,"column":35,"index":5119},"line":150,"code":"    it('should return true when set', function () {\n      var app = express();\n      app.set('foo', 'bar');\n      assert.strictEqual(app.enabled('foo'), true);\n    });","file":"config.js","skipped":false,"dir":"test"},{"name":"should default to false for prototype values","suites":["config",".enabled()"],"updatePoint":{"line":155,"column":52,"index":5304},"line":155,"code":"    it('should default to false for prototype values', function () {\n      var app = express();\n      assert.strictEqual(app.enabled('hasOwnProperty'), false);\n    });","file":"config.js","skipped":false,"dir":"test"},{"name":"should default to true","suites":["config",".disabled()"],"updatePoint":{"line":161,"column":30,"index":5496},"line":161,"code":"    it('should default to true', function () {\n      var app = express();\n      assert.strictEqual(app.disabled('foo'), true);\n    });","file":"config.js","skipped":false,"dir":"test"},{"name":"should return false when set","suites":["config",".disabled()"],"updatePoint":{"line":165,"column":36,"index":5637},"line":165,"code":"    it('should return false when set', function () {\n      var app = express();\n      app.set('foo', 'bar');\n      assert.strictEqual(app.disabled('foo'), false);\n    });","file":"config.js","skipped":false,"dir":"test"},{"name":"should default to true for prototype values","suites":["config",".disabled()"],"updatePoint":{"line":170,"column":51,"index":5823},"line":170,"code":"    it('should default to true for prototype values', function () {\n      var app = express();\n      assert.strictEqual(app.disabled('hasOwnProperty'), true);\n    });","file":"config.js","skipped":false,"dir":"test"},{"name":"should expose Router","suites":["exports"],"updatePoint":{"line":7,"column":26,"index":174},"line":7,"code":"  it('should expose Router', function () {\n    assert.strictEqual(typeof express.Router, 'function');\n  });","file":"exports.js","skipped":false,"dir":"test"},{"name":"should expose json middleware","suites":["exports"],"updatePoint":{"line":10,"column":35,"index":291},"line":10,"code":"  it('should expose json middleware', function () {\n    assert.equal(typeof express.json, 'function');\n    assert.equal(express.json.length, 1);\n  });","file":"exports.js","skipped":false,"dir":"test"},{"name":"should expose raw middleware","suites":["exports"],"updatePoint":{"line":14,"column":34,"index":441},"line":14,"code":"  it('should expose raw middleware', function () {\n    assert.equal(typeof express.raw, 'function');\n    assert.equal(express.raw.length, 1);\n  });","file":"exports.js","skipped":false,"dir":"test"},{"name":"should expose static middleware","suites":["exports"],"updatePoint":{"line":18,"column":37,"index":592},"line":18,"code":"  it('should expose static middleware', function () {\n    assert.equal(typeof express.static, 'function');\n    assert.equal(express.static.length, 2);\n  });","file":"exports.js","skipped":false,"dir":"test"},{"name":"should expose text middleware","suites":["exports"],"updatePoint":{"line":22,"column":35,"index":747},"line":22,"code":"  it('should expose text middleware', function () {\n    assert.equal(typeof express.text, 'function');\n    assert.equal(express.text.length, 1);\n  });","file":"exports.js","skipped":false,"dir":"test"},{"name":"should expose urlencoded middleware","suites":["exports"],"updatePoint":{"line":26,"column":41,"index":904},"line":26,"code":"  it('should expose urlencoded middleware', function () {\n    assert.equal(typeof express.urlencoded, 'function');\n    assert.equal(express.urlencoded.length, 1);\n  });","file":"exports.js","skipped":false,"dir":"test"},{"name":"should expose the application prototype","suites":["exports"],"updatePoint":{"line":30,"column":45,"index":1077},"line":30,"code":"  it('should expose the application prototype', function () {\n    assert.strictEqual(typeof express.application, 'object');\n    assert.strictEqual(typeof express.application.set, 'function');\n  });","file":"exports.js","skipped":false,"dir":"test"},{"name":"should expose the request prototype","suites":["exports"],"updatePoint":{"line":34,"column":41,"index":1271},"line":34,"code":"  it('should expose the request prototype', function () {\n    assert.strictEqual(typeof express.request, 'object');\n    assert.strictEqual(typeof express.request.accepts, 'function');\n  });","file":"exports.js","skipped":false,"dir":"test"},{"name":"should expose the response prototype","suites":["exports"],"updatePoint":{"line":38,"column":42,"index":1462},"line":38,"code":"  it('should expose the response prototype', function () {\n    assert.strictEqual(typeof express.response, 'object');\n    assert.strictEqual(typeof express.response.send, 'function');\n  });","file":"exports.js","skipped":false,"dir":"test"},{"name":"should permit modifying the .application prototype","suites":["exports"],"updatePoint":{"line":42,"column":56,"index":1666},"line":42,"code":"  it('should permit modifying the .application prototype', function () {\n    express.application.foo = function () {\n      return 'bar';\n    };\n    assert.strictEqual(express().foo(), 'bar');\n  });","file":"exports.js","skipped":false,"dir":"test"},{"name":"should permit modifying the .request prototype","suites":["exports"],"updatePoint":{"line":48,"column":52,"index":1860},"line":48,"code":"  it('should permit modifying the .request prototype', function (done) {\n    express.request.foo = function () {\n      return 'bar';\n    };\n    var app = express();\n    app.use(function (req, res, next) {\n      res.end(req.foo());\n    });\n    request(app).get('/').expect('bar', done);\n  });","file":"exports.js","skipped":false,"dir":"test"},{"name":"should permit modifying the .response prototype","suites":["exports"],"updatePoint":{"line":58,"column":53,"index":2153},"line":58,"code":"  it('should permit modifying the .response prototype', function (done) {\n    express.response.foo = function () {\n      this.send('bar');\n    };\n    var app = express();\n    app.use(function (req, res, next) {\n      res.foo();\n    });\n    request(app).get('/').expect('bar', done);\n  });","file":"exports.js","skipped":false,"dir":"test"},{"name":"should throw on old middlewares","suites":["exports"],"updatePoint":{"line":68,"column":37,"index":2426},"line":68,"code":"  it('should throw on old middlewares', function () {\n    assert.throws(function () {\n      express.bodyParser();\n    }, /Error:.*middleware.*bodyParser/);\n    assert.throws(function () {\n      express.limit();\n    }, /Error:.*middleware.*limit/);\n  });","file":"exports.js","skipped":false,"dir":"test"},{"name":"should parse JSON","suites":["express.json()"],"updatePoint":{"line":10,"column":23,"index":369},"line":10,"code":"  it('should parse JSON', function (done) {\n    request(createApp()).post('/').set('Content-Type', 'application/json').send('{\"user\":\"tobi\"}').expect(200, '{\"user\":\"tobi\"}', done);\n  });","file":"express.json.js","skipped":false,"dir":"test"},{"name":"should handle Content-Length: 0","suites":["express.json()"],"updatePoint":{"line":13,"column":37,"index":570},"line":13,"code":"  it('should handle Content-Length: 0', function (done) {\n    request(createApp()).post('/').set('Content-Type', 'application/json').set('Content-Length', '0').expect(200, '{}', done);\n  });","file":"express.json.js","skipped":false,"dir":"test"},{"name":"should handle empty message-body","suites":["express.json()"],"updatePoint":{"line":16,"column":38,"index":762},"line":16,"code":"  it('should handle empty message-body', function (done) {\n    request(createApp()).post('/').set('Content-Type', 'application/json').set('Transfer-Encoding', 'chunked').expect(200, '{}', done);\n  });","file":"express.json.js","skipped":false,"dir":"test"},{"name":"should handle no message-body","suites":["express.json()"],"updatePoint":{"line":19,"column":35,"index":960},"line":19,"code":"  it('should handle no message-body', function (done) {\n    request(createApp()).post('/').set('Content-Type', 'application/json').unset('Transfer-Encoding').expect(200, '{}', done);\n  });","file":"express.json.js","skipped":false,"dir":"test"},{"name":"should 400 when only whitespace","suites":["express.json()"],"updatePoint":{"line":22,"column":37,"index":1151},"line":22,"code":"  it('should 400 when only whitespace', function (done) {\n    request(createApp()).post('/').set('Content-Type', 'application/json').send('  \\n').expect(400, '[entity.parse.failed] ' + parseError(' '), done);\n  });","file":"express.json.js","skipped":false,"dir":"test"},{"name":"should 400 when invalid content-length","suites":["express.json()"],"updatePoint":{"line":25,"column":44,"index":1373},"line":25,"code":"  it('should 400 when invalid content-length', function (done) {\n    var app = express();\n    app.use(function (req, res, next) {\n      req.headers['content-length'] = '20'; // bad length\n      next();\n    });\n    app.use(express.json());\n    app.post('/', function (req, res) {\n      res.json(req.body);\n    });\n    request(app).post('/').set('Content-Type', 'application/json').send('{\"str\":').expect(400, /content length/, done);\n  });","file":"express.json.js","skipped":false,"dir":"test"},{"name":"should 500 if stream not readable","suites":["express.json()"],"updatePoint":{"line":37,"column":39,"index":1807},"line":37,"code":"  it('should 500 if stream not readable', function (done) {\n    var app = express();\n    app.use(function (req, res, next) {\n      req.on('end', next);\n      req.resume();\n    });\n    app.use(express.json());\n    app.use(function (err, req, res, next) {\n      res.status(err.status || 500);\n      res.send('[' + err.type + '] ' + err.message);\n    });\n    app.post('/', function (req, res) {\n      res.json(req.body);\n    });\n    request(app).post('/').set('Content-Type', 'application/json').send('{\"user\":\"tobi\"}').expect(500, '[stream.not.readable] stream is not readable', done);\n  });","file":"express.json.js","skipped":false,"dir":"test"},{"name":"should handle duplicated middleware","suites":["express.json()"],"updatePoint":{"line":53,"column":41,"index":2399},"line":53,"code":"  it('should handle duplicated middleware', function (done) {\n    var app = express();\n    app.use(express.json());\n    app.use(express.json());\n    app.post('/', function (req, res) {\n      res.json(req.body);\n    });\n    request(app).post('/').set('Content-Type', 'application/json').send('{\"user\":\"tobi\"}').expect(200, '{\"user\":\"tobi\"}', done);\n  });","file":"express.json.js","skipped":false,"dir":"test"},{"name":"should 400 for bad token","suites":["express.json()","when JSON is invalid"],"updatePoint":{"line":66,"column":32,"index":2856},"line":66,"code":"    it('should 400 for bad token', function (done) {\n      request(this.app).post('/').set('Content-Type', 'application/json').send('{:').expect(400, '[entity.parse.failed] ' + parseError('{:'), done);\n    });","file":"express.json.js","skipped":false,"dir":"test"},{"name":"should 400 for incomplete","suites":["express.json()","when JSON is invalid"],"updatePoint":{"line":69,"column":33,"index":3067},"line":69,"code":"    it('should 400 for incomplete', function (done) {\n      request(this.app).post('/').set('Content-Type', 'application/json').send('{\"user\"').expect(400, '[entity.parse.failed] ' + parseError('{\"user\"'), done);\n    });","file":"express.json.js","skipped":false,"dir":"test"},{"name":"should include original body on error object","suites":["express.json()","when JSON is invalid"],"updatePoint":{"line":72,"column":52,"index":3307},"line":72,"code":"    it('should include original body on error object', function (done) {\n      request(this.app).post('/').set('Content-Type', 'application/json').set('X-Error-Property', 'body').send(' {\"user\"').expect(400, ' {\"user\"', done);\n    });","file":"express.json.js","skipped":false,"dir":"test"},{"name":"should 413 when over limit with Content-Length","suites":["express.json()","with limit option"],"updatePoint":{"line":77,"column":54,"index":3596},"line":77,"code":"    it('should 413 when over limit with Content-Length', function (done) {\n      var buf = Buffer.alloc(1024, '.');\n      request(createApp({\n        limit: '1kb'\n      })).post('/').set('Content-Type', 'application/json').set('Content-Length', '1034').send(JSON.stringify({\n        str: buf.toString()\n      })).expect(413, '[entity.too.large] request entity too large', done);\n    });","file":"express.json.js","skipped":false,"dir":"test"},{"name":"should 413 when over limit with chunked encoding","suites":["express.json()","with limit option"],"updatePoint":{"line":85,"column":56,"index":3985},"line":85,"code":"    it('should 413 when over limit with chunked encoding', function (done) {\n      var app = createApp({\n        limit: '1kb'\n      });\n      var buf = Buffer.alloc(1024, '.');\n      var test = request(app).post('/');\n      test.set('Content-Type', 'application/json');\n      test.set('Transfer-Encoding', 'chunked');\n      test.write('{\"str\":');\n      test.write('\"' + buf.toString() + '\"}');\n      test.expect(413, done);\n    });","file":"express.json.js","skipped":false,"dir":"test"},{"name":"should 413 when inflated body over limit","suites":["express.json()","with limit option"],"updatePoint":{"line":97,"column":48,"index":4409},"line":97,"code":"    it('should 413 when inflated body over limit', function (done) {\n      var app = createApp({\n        limit: '1kb'\n      });\n      var test = request(app).post('/');\n      test.set('Content-Encoding', 'gzip');\n      test.set('Content-Type', 'application/json');\n      test.write(Buffer.from('1f8b080000000000000aab562a2e2952b252d21b05a360148c58a0540b0066f7ce1e0a040000', 'hex'));\n      test.expect(413, done);\n    });","file":"express.json.js","skipped":false,"dir":"test"},{"name":"should accept number of bytes","suites":["express.json()","with limit option"],"updatePoint":{"line":107,"column":37,"index":4819},"line":107,"code":"    it('should accept number of bytes', function (done) {\n      var buf = Buffer.alloc(1024, '.');\n      request(createApp({\n        limit: 1024\n      })).post('/').set('Content-Type', 'application/json').send(JSON.stringify({\n        str: buf.toString()\n      })).expect(413, done);\n    });","file":"express.json.js","skipped":false,"dir":"test"},{"name":"should not change when options altered","suites":["express.json()","with limit option"],"updatePoint":{"line":115,"column":46,"index":5120},"line":115,"code":"    it('should not change when options altered', function (done) {\n      var buf = Buffer.alloc(1024, '.');\n      var options = {\n        limit: '1kb'\n      };\n      var app = createApp(options);\n      options.limit = '100kb';\n      request(app).post('/').set('Content-Type', 'application/json').send(JSON.stringify({\n        str: buf.toString()\n      })).expect(413, done);\n    });","file":"express.json.js","skipped":false,"dir":"test"},{"name":"should not hang response","suites":["express.json()","with limit option"],"updatePoint":{"line":126,"column":32,"index":5489},"line":126,"code":"    it('should not hang response', function (done) {\n      var buf = Buffer.alloc(10240, '.');\n      var app = createApp({\n        limit: '8kb'\n      });\n      var test = request(app).post('/');\n      test.set('Content-Type', 'application/json');\n      test.write(buf);\n      test.write(buf);\n      test.write(buf);\n      test.expect(413, done);\n    });","file":"express.json.js","skipped":false,"dir":"test"},{"name":"should not error when inflating","suites":["express.json()","with limit option"],"updatePoint":{"line":138,"column":39,"index":5850},"line":138,"code":"    it('should not error when inflating', function (done) {\n      var app = createApp({\n        limit: '1kb'\n      });\n      var test = request(app).post('/');\n      test.set('Content-Encoding', 'gzip');\n      test.set('Content-Type', 'application/json');\n      test.write(Buffer.from('1f8b080000000000000aab562a2e2952b252d21b05a360148c58a0540b0066f7ce1e0a0400', 'hex'));\n      test.expect(413, done);\n    });","file":"express.json.js","skipped":false,"dir":"test"},{"name":"should not accept content-encoding","suites":["express.json()","with inflate option","when false"],"updatePoint":{"line":156,"column":44,"index":6465},"line":156,"code":"      it('should not accept content-encoding', function (done) {\n        var test = request(this.app).post('/');\n        test.set('Content-Encoding', 'gzip');\n        test.set('Content-Type', 'application/json');\n        test.write(Buffer.from('1f8b080000000000000bab56ca4bcc4d55b2527ab16e97522d00515be1cc0e000000', 'hex'));\n        test.expect(415, '[encoding.unsupported] content encoding unsupported', done);\n      });","file":"express.json.js","skipped":false,"dir":"test"},{"name":"should accept content-encoding","suites":["express.json()","with inflate option","when true"],"updatePoint":{"line":170,"column":40,"index":7035},"line":170,"code":"      it('should accept content-encoding', function (done) {\n        var test = request(this.app).post('/');\n        test.set('Content-Encoding', 'gzip');\n        test.set('Content-Type', 'application/json');\n        test.write(Buffer.from('1f8b080000000000000bab56ca4bcc4d55b2527ab16e97522d00515be1cc0e000000', 'hex'));\n        test.expect(200, '{\"name\":\"论\"}', done);\n      });","file":"express.json.js","skipped":false,"dir":"test"},{"name":"should 400 on primitives","suites":["express.json()","with strict option","when undefined"],"updatePoint":{"line":184,"column":34,"index":7583},"line":184,"code":"      it('should 400 on primitives', function (done) {\n        request(this.app).post('/').set('Content-Type', 'application/json').send('true').expect(400, '[entity.parse.failed] ' + parseError('#rue').replace('#', 't'), done);\n      });","file":"express.json.js","skipped":false,"dir":"test"},{"name":"should parse primitives","suites":["express.json()","with strict option","when false"],"updatePoint":{"line":194,"column":33,"index":7973},"line":194,"code":"      it('should parse primitives', function (done) {\n        request(this.app).post('/').set('Content-Type', 'application/json').send('true').expect(200, 'true', done);\n      });","file":"express.json.js","skipped":false,"dir":"test"},{"name":"should not parse primitives","suites":["express.json()","with strict option","when true"],"updatePoint":{"line":204,"column":37,"index":8308},"line":204,"code":"      it('should not parse primitives', function (done) {\n        request(this.app).post('/').set('Content-Type', 'application/json').send('true').expect(400, '[entity.parse.failed] ' + parseError('#rue').replace('#', 't'), done);\n      });","file":"express.json.js","skipped":false,"dir":"test"},{"name":"should not parse primitives with leading whitespaces","suites":["express.json()","with strict option","when true"],"updatePoint":{"line":207,"column":62,"index":8574},"line":207,"code":"      it('should not parse primitives with leading whitespaces', function (done) {\n        request(this.app).post('/').set('Content-Type', 'application/json').send('    true').expect(400, '[entity.parse.failed] ' + parseError('    #rue').replace('#', 't'), done);\n      });","file":"express.json.js","skipped":false,"dir":"test"},{"name":"should allow leading whitespaces in JSON","suites":["express.json()","with strict option","when true"],"updatePoint":{"line":210,"column":50,"index":8836},"line":210,"code":"      it('should allow leading whitespaces in JSON', function (done) {\n        request(this.app).post('/').set('Content-Type', 'application/json').send('   { \"user\": \"tobi\" }').expect(200, '{\"user\":\"tobi\"}', done);\n      });","file":"express.json.js","skipped":false,"dir":"test"},{"name":"should include correct message in stack trace","suites":["express.json()","with strict option","when true"],"updatePoint":{"line":213,"column":55,"index":9066},"line":213,"code":"      it('should include correct message in stack trace', function (done) {\n        request(this.app).post('/').set('Content-Type', 'application/json').set('X-Error-Property', 'stack').send('true').expect(400).expect(shouldContainInBody(parseError('#rue').replace('#', 't'))).end(done);\n      });","file":"express.json.js","skipped":false,"dir":"test"},{"name":"should parse JSON for custom type","suites":["express.json()","with type option","when \"application/vnd.api+json\""],"updatePoint":{"line":225,"column":43,"index":9595},"line":225,"code":"      it('should parse JSON for custom type', function (done) {\n        request(this.app).post('/').set('Content-Type', 'application/vnd.api+json').send('{\"user\":\"tobi\"}').expect(200, '{\"user\":\"tobi\"}', done);\n      });","file":"express.json.js","skipped":false,"dir":"test"},{"name":"should ignore standard type","suites":["express.json()","with type option","when \"application/vnd.api+json\""],"updatePoint":{"line":228,"column":37,"index":9809},"line":228,"code":"      it('should ignore standard type', function (done) {\n        request(this.app).post('/').set('Content-Type', 'application/json').send('{\"user\":\"tobi\"}').expect(200, '{}', done);\n      });","file":"express.json.js","skipped":false,"dir":"test"},{"name":"should parse JSON for \"application/json\"","suites":["express.json()","with type option","when [\"application/json\", \"application/vnd.api+json\"]"],"updatePoint":{"line":238,"column":50,"index":10252},"line":238,"code":"      it('should parse JSON for \"application/json\"', function (done) {\n        request(this.app).post('/').set('Content-Type', 'application/json').send('{\"user\":\"tobi\"}').expect(200, '{\"user\":\"tobi\"}', done);\n      });","file":"express.json.js","skipped":false,"dir":"test"},{"name":"should parse JSON for \"application/vnd.api+json\"","suites":["express.json()","with type option","when [\"application/json\", \"application/vnd.api+json\"]"],"updatePoint":{"line":241,"column":58,"index":10479},"line":241,"code":"      it('should parse JSON for \"application/vnd.api+json\"', function (done) {\n        request(this.app).post('/').set('Content-Type', 'application/vnd.api+json').send('{\"user\":\"tobi\"}').expect(200, '{\"user\":\"tobi\"}', done);\n      });","file":"express.json.js","skipped":false,"dir":"test"},{"name":"should ignore \"application/x-json\"","suites":["express.json()","with type option","when [\"application/json\", \"application/vnd.api+json\"]"],"updatePoint":{"line":244,"column":44,"index":10700},"line":244,"code":"      it('should ignore \"application/x-json\"', function (done) {\n        request(this.app).post('/').set('Content-Type', 'application/x-json').send('{\"user\":\"tobi\"}').expect(200, '{}', done);\n      });","file":"express.json.js","skipped":false,"dir":"test"},{"name":"should parse when truthy value returned","suites":["express.json()","with type option","when a function"],"updatePoint":{"line":249,"column":49,"index":10961},"line":249,"code":"      it('should parse when truthy value returned', function (done) {\n        var app = createApp({\n          type: accept\n        });\n        function accept(req) {\n          return req.headers['content-type'] === 'application/vnd.api+json';\n        }\n        request(app).post('/').set('Content-Type', 'application/vnd.api+json').send('{\"user\":\"tobi\"}').expect(200, '{\"user\":\"tobi\"}', done);\n      });","file":"express.json.js","skipped":false,"dir":"test"},{"name":"should work without content-type","suites":["express.json()","with type option","when a function"],"updatePoint":{"line":258,"column":42,"index":11358},"line":258,"code":"      it('should work without content-type', function (done) {\n        var app = createApp({\n          type: accept\n        });\n        function accept(req) {\n          return true;\n        }\n        var test = request(app).post('/');\n        test.write('{\"user\":\"tobi\"}');\n        test.expect(200, '{\"user\":\"tobi\"}', done);\n      });","file":"express.json.js","skipped":false,"dir":"test"},{"name":"should not invoke without a body","suites":["express.json()","with type option","when a function"],"updatePoint":{"line":269,"column":42,"index":11693},"line":269,"code":"      it('should not invoke without a body', function (done) {\n        var app = createApp({\n          type: accept\n        });\n        function accept(req) {\n          throw new Error('oops!');\n        }\n        request(app).get('/').expect(404, done);\n      });","file":"express.json.js","skipped":false,"dir":"test"},{"name":"should assert value if function","suites":["express.json()","with verify option"],"updatePoint":{"line":281,"column":39,"index":12015},"line":281,"code":"    it('should assert value if function', function () {\n      assert.throws(createApp.bind(null, {\n        verify: 'lol'\n      }), /TypeError: option verify must be function/);\n    });","file":"express.json.js","skipped":false,"dir":"test"},{"name":"should error from verify","suites":["express.json()","with verify option"],"updatePoint":{"line":286,"column":32,"index":12193},"line":286,"code":"    it('should error from verify', function (done) {\n      var app = createApp({\n        verify: function (req, res, buf) {\n          if (buf[0] === 0x5b) throw new Error('no arrays');\n        }\n      });\n      request(app).post('/').set('Content-Type', 'application/json').send('[\"tobi\"]').expect(403, '[entity.verify.failed] no arrays', done);\n    });","file":"express.json.js","skipped":false,"dir":"test"},{"name":"should allow custom codes","suites":["express.json()","with verify option"],"updatePoint":{"line":294,"column":33,"index":12548},"line":294,"code":"    it('should allow custom codes', function (done) {\n      var app = createApp({\n        verify: function (req, res, buf) {\n          if (buf[0] !== 0x5b) return;\n          var err = new Error('no arrays');\n          err.status = 400;\n          throw err;\n        }\n      });\n      request(app).post('/').set('Content-Type', 'application/json').send('[\"tobi\"]').expect(400, '[entity.verify.failed] no arrays', done);\n    });","file":"express.json.js","skipped":false,"dir":"test"},{"name":"should allow custom type","suites":["express.json()","with verify option"],"updatePoint":{"line":305,"column":32,"index":12973},"line":305,"code":"    it('should allow custom type', function (done) {\n      var app = createApp({\n        verify: function (req, res, buf) {\n          if (buf[0] !== 0x5b) return;\n          var err = new Error('no arrays');\n          err.type = 'foo.bar';\n          throw err;\n        }\n      });\n      request(app).post('/').set('Content-Type', 'application/json').send('[\"tobi\"]').expect(403, '[foo.bar] no arrays', done);\n    });","file":"express.json.js","skipped":false,"dir":"test"},{"name":"should include original body on error object","suites":["express.json()","with verify option"],"updatePoint":{"line":316,"column":52,"index":13409},"line":316,"code":"    it('should include original body on error object', function (done) {\n      var app = createApp({\n        verify: function (req, res, buf) {\n          if (buf[0] === 0x5b) throw new Error('no arrays');\n        }\n      });\n      request(app).post('/').set('Content-Type', 'application/json').set('X-Error-Property', 'body').send('[\"tobi\"]').expect(403, '[\"tobi\"]', done);\n    });","file":"express.json.js","skipped":false,"dir":"test"},{"name":"should allow pass-through","suites":["express.json()","with verify option"],"updatePoint":{"line":324,"column":33,"index":13772},"line":324,"code":"    it('should allow pass-through', function (done) {\n      var app = createApp({\n        verify: function (req, res, buf) {\n          if (buf[0] === 0x5b) throw new Error('no arrays');\n        }\n      });\n      request(app).post('/').set('Content-Type', 'application/json').send('{\"user\":\"tobi\"}').expect(200, '{\"user\":\"tobi\"}', done);\n    });","file":"express.json.js","skipped":false,"dir":"test"},{"name":"should work with different charsets","suites":["express.json()","with verify option"],"updatePoint":{"line":332,"column":43,"index":14127},"line":332,"code":"    it('should work with different charsets', function (done) {\n      var app = createApp({\n        verify: function (req, res, buf) {\n          if (buf[0] === 0x5b) throw new Error('no arrays');\n        }\n      });\n      var test = request(app).post('/');\n      test.set('Content-Type', 'application/json; charset=utf-16');\n      test.write(Buffer.from('feff007b0022006e0061006d00650022003a00228bba0022007d', 'hex'));\n      test.expect(200, '{\"name\":\"论\"}', done);\n    });","file":"express.json.js","skipped":false,"dir":"test"},{"name":"should 415 on unknown charset prior to verify","suites":["express.json()","with verify option"],"updatePoint":{"line":343,"column":53,"index":14610},"line":343,"code":"    it('should 415 on unknown charset prior to verify', function (done) {\n      var app = createApp({\n        verify: function (req, res, buf) {\n          throw new Error('unexpected verify call');\n        }\n      });\n      var test = request(app).post('/');\n      test.set('Content-Type', 'application/json; charset=x-bogus');\n      test.write(Buffer.from('00000000', 'hex'));\n      test.expect(415, '[charset.unsupported] unsupported charset \"X-BOGUS\"', done);\n    });","file":"express.json.js","skipped":false,"dir":"test"},{"name":"should presist store","suites":["express.json()","with verify option"],"updatePoint":{"line":386,"column":28,"index":16036},"line":386,"code":"    it('should presist store', function (done) {\n      request(this.app).post('/').set('Content-Type', 'application/json').send('{\"user\":\"tobi\"}').expect(200).expect('x-store-foo', 'bar').expect('{\"user\":\"tobi\"}').end(done);\n    });","file":"express.json.js","skipped":false,"dir":"test"},{"name":"should presist store when unmatched content-type","suites":["express.json()","with verify option"],"updatePoint":{"line":389,"column":56,"index":16297},"line":389,"code":"    it('should presist store when unmatched content-type', function (done) {\n      request(this.app).post('/').set('Content-Type', 'application/fizzbuzz').send('buzz').expect(200).expect('x-store-foo', 'bar').expect('{}').end(done);\n    });","file":"express.json.js","skipped":false,"dir":"test"},{"name":"should presist store when inflated","suites":["express.json()","with verify option"],"updatePoint":{"line":392,"column":42,"index":16524},"line":392,"code":"    it('should presist store when inflated', function (done) {\n      var test = request(this.app).post('/');\n      test.set('Content-Encoding', 'gzip');\n      test.set('Content-Type', 'application/json');\n      test.write(Buffer.from('1f8b080000000000000bab56ca4bcc4d55b2527ab16e97522d00515be1cc0e000000', 'hex'));\n      test.expect(200);\n      test.expect('x-store-foo', 'bar');\n      test.expect('{\"name\":\"论\"}');\n      test.end(done);\n    });","file":"express.json.js","skipped":false,"dir":"test"},{"name":"should presist store when inflate error","suites":["express.json()","with verify option"],"updatePoint":{"line":402,"column":47,"index":16974},"line":402,"code":"    it('should presist store when inflate error', function (done) {\n      var test = request(this.app).post('/');\n      test.set('Content-Encoding', 'gzip');\n      test.set('Content-Type', 'application/json');\n      test.write(Buffer.from('1f8b080000000000000bab56cc4d55b2527ab16e97522d00515be1cc0e000000', 'hex'));\n      test.expect(400);\n      test.expect('x-store-foo', 'bar');\n      test.end(done);\n    });","file":"express.json.js","skipped":false,"dir":"test"},{"name":"should presist store when parse error","suites":["express.json()","with verify option"],"updatePoint":{"line":411,"column":45,"index":17383},"line":411,"code":"    it('should presist store when parse error', function (done) {\n      request(this.app).post('/').set('Content-Type', 'application/json').send('{\"user\":').expect(400).expect('x-store-foo', 'bar').end(done);\n    });","file":"express.json.js","skipped":false,"dir":"test"},{"name":"should presist store when limit exceeded","suites":["express.json()","with verify option"],"updatePoint":{"line":414,"column":48,"index":17603},"line":414,"code":"    it('should presist store when limit exceeded', function (done) {\n      request(this.app).post('/').set('Content-Type', 'application/json').send('{\"user\":\"' + Buffer.alloc(1024 * 100, '.').toString() + '\"}').expect(413).expect('x-store-foo', 'bar').end(done);\n    });","file":"express.json.js","skipped":false,"dir":"test"},{"name":"should parse utf-8","suites":["express.json()","charset"],"updatePoint":{"line":422,"column":26,"index":17957},"line":422,"code":"    it('should parse utf-8', function (done) {\n      var test = request(this.app).post('/');\n      test.set('Content-Type', 'application/json; charset=utf-8');\n      test.write(Buffer.from('7b226e616d65223a22e8aeba227d', 'hex'));\n      test.expect(200, '{\"name\":\"论\"}', done);\n    });","file":"express.json.js","skipped":false,"dir":"test"},{"name":"should parse utf-16","suites":["express.json()","charset"],"updatePoint":{"line":428,"column":27,"index":18242},"line":428,"code":"    it('should parse utf-16', function (done) {\n      var test = request(this.app).post('/');\n      test.set('Content-Type', 'application/json; charset=utf-16');\n      test.write(Buffer.from('feff007b0022006e0061006d00650022003a00228bba0022007d', 'hex'));\n      test.expect(200, '{\"name\":\"论\"}', done);\n    });","file":"express.json.js","skipped":false,"dir":"test"},{"name":"should parse when content-length != char length","suites":["express.json()","charset"],"updatePoint":{"line":434,"column":55,"index":18580},"line":434,"code":"    it('should parse when content-length != char length', function (done) {\n      var test = request(this.app).post('/');\n      test.set('Content-Type', 'application/json; charset=utf-8');\n      test.set('Content-Length', '13');\n      test.write(Buffer.from('7b2274657374223a22c3a5227d', 'hex'));\n      test.expect(200, '{\"test\":\"å\"}', done);\n    });","file":"express.json.js","skipped":false,"dir":"test"},{"name":"should default to utf-8","suites":["express.json()","charset"],"updatePoint":{"line":441,"column":31,"index":18907},"line":441,"code":"    it('should default to utf-8', function (done) {\n      var test = request(this.app).post('/');\n      test.set('Content-Type', 'application/json');\n      test.write(Buffer.from('7b226e616d65223a22e8aeba227d', 'hex'));\n      test.expect(200, '{\"name\":\"论\"}', done);\n    });","file":"express.json.js","skipped":false,"dir":"test"},{"name":"should fail on unknown charset","suites":["express.json()","charset"],"updatePoint":{"line":447,"column":38,"index":19188},"line":447,"code":"    it('should fail on unknown charset', function (done) {\n      var test = request(this.app).post('/');\n      test.set('Content-Type', 'application/json; charset=koi8-r');\n      test.write(Buffer.from('7b226e616d65223a22cec5d4227d', 'hex'));\n      test.expect(415, '[charset.unsupported] unsupported charset \"KOI8-R\"', done);\n    });","file":"express.json.js","skipped":false,"dir":"test"},{"name":"should parse without encoding","suites":["express.json()","encoding"],"updatePoint":{"line":460,"column":37,"index":19658},"line":460,"code":"    it('should parse without encoding', function (done) {\n      var test = request(this.app).post('/');\n      test.set('Content-Type', 'application/json');\n      test.write(Buffer.from('7b226e616d65223a22e8aeba227d', 'hex'));\n      test.expect(200, '{\"name\":\"论\"}', done);\n    });","file":"express.json.js","skipped":false,"dir":"test"},{"name":"should support identity encoding","suites":["express.json()","encoding"],"updatePoint":{"line":466,"column":40,"index":19941},"line":466,"code":"    it('should support identity encoding', function (done) {\n      var test = request(this.app).post('/');\n      test.set('Content-Encoding', 'identity');\n      test.set('Content-Type', 'application/json');\n      test.write(Buffer.from('7b226e616d65223a22e8aeba227d', 'hex'));\n      test.expect(200, '{\"name\":\"论\"}', done);\n    });","file":"express.json.js","skipped":false,"dir":"test"},{"name":"should support gzip encoding","suites":["express.json()","encoding"],"updatePoint":{"line":473,"column":36,"index":20268},"line":473,"code":"    it('should support gzip encoding', function (done) {\n      var test = request(this.app).post('/');\n      test.set('Content-Encoding', 'gzip');\n      test.set('Content-Type', 'application/json');\n      test.write(Buffer.from('1f8b080000000000000bab56ca4bcc4d55b2527ab16e97522d00515be1cc0e000000', 'hex'));\n      test.expect(200, '{\"name\":\"论\"}', done);\n    });","file":"express.json.js","skipped":false,"dir":"test"},{"name":"should support deflate encoding","suites":["express.json()","encoding"],"updatePoint":{"line":480,"column":39,"index":20634},"line":480,"code":"    it('should support deflate encoding', function (done) {\n      var test = request(this.app).post('/');\n      test.set('Content-Encoding', 'deflate');\n      test.set('Content-Type', 'application/json');\n      test.write(Buffer.from('789cab56ca4bcc4d55b2527ab16e97522d00274505ac', 'hex'));\n      test.expect(200, '{\"name\":\"论\"}', done);\n    });","file":"express.json.js","skipped":false,"dir":"test"},{"name":"should be case-insensitive","suites":["express.json()","encoding"],"updatePoint":{"line":487,"column":34,"index":20974},"line":487,"code":"    it('should be case-insensitive', function (done) {\n      var test = request(this.app).post('/');\n      test.set('Content-Encoding', 'GZIP');\n      test.set('Content-Type', 'application/json');\n      test.write(Buffer.from('1f8b080000000000000bab56ca4bcc4d55b2527ab16e97522d00515be1cc0e000000', 'hex'));\n      test.expect(200, '{\"name\":\"论\"}', done);\n    });","file":"express.json.js","skipped":false,"dir":"test"},{"name":"should 415 on unknown encoding","suites":["express.json()","encoding"],"updatePoint":{"line":494,"column":38,"index":21339},"line":494,"code":"    it('should 415 on unknown encoding', function (done) {\n      var test = request(this.app).post('/');\n      test.set('Content-Encoding', 'nulls');\n      test.set('Content-Type', 'application/json');\n      test.write(Buffer.from('000000000000', 'hex'));\n      test.expect(415, '[encoding.unsupported] unsupported content encoding \"nulls\"', done);\n    });","file":"express.json.js","skipped":false,"dir":"test"},{"name":"should 400 on malformed encoding","suites":["express.json()","encoding"],"updatePoint":{"line":501,"column":40,"index":21698},"line":501,"code":"    it('should 400 on malformed encoding', function (done) {\n      var test = request(this.app).post('/');\n      test.set('Content-Encoding', 'gzip');\n      test.set('Content-Type', 'application/json');\n      test.write(Buffer.from('1f8b080000000000000bab56cc4d55b2527ab16e97522d00515be1cc0e000000', 'hex'));\n      test.expect(400, done);\n    });","file":"express.json.js","skipped":false,"dir":"test"},{"name":"should 413 when inflated value exceeds limit","suites":["express.json()","encoding"],"updatePoint":{"line":508,"column":52,"index":22057},"line":508,"code":"    it('should 413 when inflated value exceeds limit', function (done) {\n      // gzip'd data exceeds 1kb, but deflated below 1kb\n      var test = request(this.app).post('/');\n      test.set('Content-Encoding', 'gzip');\n      test.set('Content-Type', 'application/json');\n      test.write(Buffer.from('1f8b080000000000000bedc1010d000000c2a0f74f6d0f071400000000000000', 'hex'));\n      test.write(Buffer.from('0000000000000000000000000000000000000000000000000000000000000000', 'hex'));\n      test.write(Buffer.from('0000000000000000004f0625b3b71650c30000', 'hex'));\n      test.expect(413, done);\n    });","file":"express.json.js","skipped":false,"dir":"test"},{"name":"should parse application/octet-stream","suites":["express.raw()"],"updatePoint":{"line":13,"column":43,"index":445},"line":13,"code":"  it('should parse application/octet-stream', function (done) {\n    request(this.app).post('/').set('Content-Type', 'application/octet-stream').send('the user is tobi').expect(200, {\n      buf: '746865207573657220697320746f6269'\n    }, done);\n  });","file":"express.raw.js","skipped":false,"dir":"test"},{"name":"should 400 when invalid content-length","suites":["express.raw()"],"updatePoint":{"line":18,"column":44,"index":695},"line":18,"code":"  it('should 400 when invalid content-length', function (done) {\n    var app = express();\n    app.use(function (req, res, next) {\n      req.headers['content-length'] = '20'; // bad length\n      next();\n    });\n    app.use(express.raw());\n    app.post('/', function (req, res) {\n      if (Buffer.isBuffer(req.body)) {\n        res.json({\n          buf: req.body.toString('hex')\n        });\n      } else {\n        res.json(req.body);\n      }\n    });\n    request(app).post('/').set('Content-Type', 'application/octet-stream').send('stuff').expect(400, /content length/, done);\n  });","file":"express.raw.js","skipped":false,"dir":"test"},{"name":"should handle Content-Length: 0","suites":["express.raw()"],"updatePoint":{"line":36,"column":37,"index":1267},"line":36,"code":"  it('should handle Content-Length: 0', function (done) {\n    request(this.app).post('/').set('Content-Type', 'application/octet-stream').set('Content-Length', '0').expect(200, {\n      buf: ''\n    }, done);\n  });","file":"express.raw.js","skipped":false,"dir":"test"},{"name":"should handle empty message-body","suites":["express.raw()"],"updatePoint":{"line":41,"column":38,"index":1481},"line":41,"code":"  it('should handle empty message-body', function (done) {\n    request(this.app).post('/').set('Content-Type', 'application/octet-stream').set('Transfer-Encoding', 'chunked').send('').expect(200, {\n      buf: ''\n    }, done);\n  });","file":"express.raw.js","skipped":false,"dir":"test"},{"name":"should 500 if stream not readable","suites":["express.raw()"],"updatePoint":{"line":46,"column":39,"index":1714},"line":46,"code":"  it('should 500 if stream not readable', function (done) {\n    var app = express();\n    app.use(function (req, res, next) {\n      req.on('end', next);\n      req.resume();\n    });\n    app.use(express.raw());\n    app.use(function (err, req, res, next) {\n      res.status(err.status || 500);\n      res.send('[' + err.type + '] ' + err.message);\n    });\n    app.post('/', function (req, res) {\n      if (Buffer.isBuffer(req.body)) {\n        res.json({\n          buf: req.body.toString('hex')\n        });\n      } else {\n        res.json(req.body);\n      }\n    });\n    request(app).post('/').set('Content-Type', 'application/octet-stream').send('the user is tobi').expect(500, '[stream.not.readable] stream is not readable', done);\n  });","file":"express.raw.js","skipped":false,"dir":"test"},{"name":"should handle duplicated middleware","suites":["express.raw()"],"updatePoint":{"line":68,"column":41,"index":2449},"line":68,"code":"  it('should handle duplicated middleware', function (done) {\n    var app = express();\n    app.use(express.raw());\n    app.use(express.raw());\n    app.post('/', function (req, res) {\n      if (Buffer.isBuffer(req.body)) {\n        res.json({\n          buf: req.body.toString('hex')\n        });\n      } else {\n        res.json(req.body);\n      }\n    });\n    request(app).post('/').set('Content-Type', 'application/octet-stream').send('the user is tobi').expect(200, {\n      buf: '746865207573657220697320746f6269'\n    }, done);\n  });","file":"express.raw.js","skipped":false,"dir":"test"},{"name":"should 413 when over limit with Content-Length","suites":["express.raw()","with limit option"],"updatePoint":{"line":86,"column":54,"index":3040},"line":86,"code":"    it('should 413 when over limit with Content-Length', function (done) {\n      var buf = Buffer.alloc(1028, '.');\n      var app = createApp({\n        limit: '1kb'\n      });\n      var test = request(app).post('/');\n      test.set('Content-Type', 'application/octet-stream');\n      test.set('Content-Length', '1028');\n      test.write(buf);\n      test.expect(413, done);\n    });","file":"express.raw.js","skipped":false,"dir":"test"},{"name":"should 413 when over limit with chunked encoding","suites":["express.raw()","with limit option"],"updatePoint":{"line":97,"column":56,"index":3421},"line":97,"code":"    it('should 413 when over limit with chunked encoding', function (done) {\n      var buf = Buffer.alloc(1028, '.');\n      var app = createApp({\n        limit: '1kb'\n      });\n      var test = request(app).post('/');\n      test.set('Content-Type', 'application/octet-stream');\n      test.set('Transfer-Encoding', 'chunked');\n      test.write(buf);\n      test.expect(413, done);\n    });","file":"express.raw.js","skipped":false,"dir":"test"},{"name":"should 413 when inflated body over limit","suites":["express.raw()","with limit option"],"updatePoint":{"line":108,"column":48,"index":3800},"line":108,"code":"    it('should 413 when inflated body over limit', function (done) {\n      var app = createApp({\n        limit: '1kb'\n      });\n      var test = request(app).post('/');\n      test.set('Content-Encoding', 'gzip');\n      test.set('Content-Type', 'application/octet-stream');\n      test.write(Buffer.from('1f8b080000000000000ad3d31b05a360148c64000087e5a14704040000', 'hex'));\n      test.expect(413, done);\n    });","file":"express.raw.js","skipped":false,"dir":"test"},{"name":"should accept number of bytes","suites":["express.raw()","with limit option"],"updatePoint":{"line":118,"column":37,"index":4200},"line":118,"code":"    it('should accept number of bytes', function (done) {\n      var buf = Buffer.alloc(1028, '.');\n      var app = createApp({\n        limit: 1024\n      });\n      var test = request(app).post('/');\n      test.set('Content-Type', 'application/octet-stream');\n      test.write(buf);\n      test.expect(413, done);\n    });","file":"express.raw.js","skipped":false,"dir":"test"},{"name":"should not change when options altered","suites":["express.raw()","with limit option"],"updatePoint":{"line":128,"column":46,"index":4528},"line":128,"code":"    it('should not change when options altered', function (done) {\n      var buf = Buffer.alloc(1028, '.');\n      var options = {\n        limit: '1kb'\n      };\n      var app = createApp(options);\n      options.limit = '100kb';\n      var test = request(app).post('/');\n      test.set('Content-Type', 'application/octet-stream');\n      test.write(buf);\n      test.expect(413, done);\n    });","file":"express.raw.js","skipped":false,"dir":"test"},{"name":"should not hang response","suites":["express.raw()","with limit option"],"updatePoint":{"line":140,"column":32,"index":4903},"line":140,"code":"    it('should not hang response', function (done) {\n      var buf = Buffer.alloc(10240, '.');\n      var app = createApp({\n        limit: '8kb'\n      });\n      var test = request(app).post('/');\n      test.set('Content-Type', 'application/octet-stream');\n      test.write(buf);\n      test.write(buf);\n      test.write(buf);\n      test.expect(413, done);\n    });","file":"express.raw.js","skipped":false,"dir":"test"},{"name":"should not error when inflating","suites":["express.raw()","with limit option"],"updatePoint":{"line":152,"column":39,"index":5272},"line":152,"code":"    it('should not error when inflating', function (done) {\n      var app = createApp({\n        limit: '1kb'\n      });\n      var test = request(app).post('/');\n      test.set('Content-Encoding', 'gzip');\n      test.set('Content-Type', 'application/octet-stream');\n      test.write(Buffer.from('1f8b080000000000000ad3d31b05a360148c64000087e5a147040400', 'hex'));\n      test.expect(413, done);\n    });","file":"express.raw.js","skipped":false,"dir":"test"},{"name":"should not accept content-encoding","suites":["express.raw()","with inflate option","when false"],"updatePoint":{"line":170,"column":44,"index":5877},"line":170,"code":"      it('should not accept content-encoding', function (done) {\n        var test = request(this.app).post('/');\n        test.set('Content-Encoding', 'gzip');\n        test.set('Content-Type', 'application/octet-stream');\n        test.write(Buffer.from('1f8b080000000000000bcb4bcc4db57db16e170099a4bad608000000', 'hex'));\n        test.expect(415, '[encoding.unsupported] content encoding unsupported', done);\n      });","file":"express.raw.js","skipped":false,"dir":"test"},{"name":"should accept content-encoding","suites":["express.raw()","with inflate option","when true"],"updatePoint":{"line":184,"column":40,"index":6443},"line":184,"code":"      it('should accept content-encoding', function (done) {\n        var test = request(this.app).post('/');\n        test.set('Content-Encoding', 'gzip');\n        test.set('Content-Type', 'application/octet-stream');\n        test.write(Buffer.from('1f8b080000000000000bcb4bcc4db57db16e170099a4bad608000000', 'hex'));\n        test.expect(200, {\n          buf: '6e616d653de8aeba'\n        }, done);\n      });","file":"express.raw.js","skipped":false,"dir":"test"},{"name":"should parse for custom type","suites":["express.raw()","with type option","when \"application/vnd+octets\""],"updatePoint":{"line":202,"column":38,"index":7087},"line":202,"code":"      it('should parse for custom type', function (done) {\n        var test = request(this.app).post('/');\n        test.set('Content-Type', 'application/vnd+octets');\n        test.write(Buffer.from('000102', 'hex'));\n        test.expect(200, {\n          buf: '000102'\n        }, done);\n      });","file":"express.raw.js","skipped":false,"dir":"test"},{"name":"should ignore standard type","suites":["express.raw()","with type option","when \"application/vnd+octets\""],"updatePoint":{"line":210,"column":37,"index":7382},"line":210,"code":"      it('should ignore standard type', function (done) {\n        var test = request(this.app).post('/');\n        test.set('Content-Type', 'application/octet-stream');\n        test.write(Buffer.from('000102', 'hex'));\n        test.expect(200, '{}', done);\n      });","file":"express.raw.js","skipped":false,"dir":"test"},{"name":"should parse \"application/octet-stream\"","suites":["express.raw()","with type option","when [\"application/octet-stream\", \"application/vnd+octets\"]"],"updatePoint":{"line":223,"column":49,"index":7909},"line":223,"code":"      it('should parse \"application/octet-stream\"', function (done) {\n        var test = request(this.app).post('/');\n        test.set('Content-Type', 'application/octet-stream');\n        test.write(Buffer.from('000102', 'hex'));\n        test.expect(200, {\n          buf: '000102'\n        }, done);\n      });","file":"express.raw.js","skipped":false,"dir":"test"},{"name":"should parse \"application/vnd+octets\"","suites":["express.raw()","with type option","when [\"application/octet-stream\", \"application/vnd+octets\"]"],"updatePoint":{"line":231,"column":47,"index":8216},"line":231,"code":"      it('should parse \"application/vnd+octets\"', function (done) {\n        var test = request(this.app).post('/');\n        test.set('Content-Type', 'application/vnd+octets');\n        test.write(Buffer.from('000102', 'hex'));\n        test.expect(200, {\n          buf: '000102'\n        }, done);\n      });","file":"express.raw.js","skipped":false,"dir":"test"},{"name":"should ignore \"application/x-foo\"","suites":["express.raw()","with type option","when [\"application/octet-stream\", \"application/vnd+octets\"]"],"updatePoint":{"line":239,"column":43,"index":8517},"line":239,"code":"      it('should ignore \"application/x-foo\"', function (done) {\n        var test = request(this.app).post('/');\n        test.set('Content-Type', 'application/x-foo');\n        test.write(Buffer.from('000102', 'hex'));\n        test.expect(200, '{}', done);\n      });","file":"express.raw.js","skipped":false,"dir":"test"},{"name":"should parse when truthy value returned","suites":["express.raw()","with type option","when a function"],"updatePoint":{"line":247,"column":49,"index":8842},"line":247,"code":"      it('should parse when truthy value returned', function (done) {\n        var app = createApp({\n          type: accept\n        });\n        function accept(req) {\n          return req.headers['content-type'] === 'application/vnd.octet';\n        }\n        var test = request(app).post('/');\n        test.set('Content-Type', 'application/vnd.octet');\n        test.write(Buffer.from('000102', 'hex'));\n        test.expect(200, {\n          buf: '000102'\n        }, done);\n      });","file":"express.raw.js","skipped":false,"dir":"test"},{"name":"should work without content-type","suites":["express.raw()","with type option","when a function"],"updatePoint":{"line":261,"column":42,"index":9316},"line":261,"code":"      it('should work without content-type', function (done) {\n        var app = createApp({\n          type: accept\n        });\n        function accept(req) {\n          return true;\n        }\n        var test = request(app).post('/');\n        test.write(Buffer.from('000102', 'hex'));\n        test.expect(200, {\n          buf: '000102'\n        }, done);\n      });","file":"express.raw.js","skipped":false,"dir":"test"},{"name":"should not invoke without a body","suites":["express.raw()","with type option","when a function"],"updatePoint":{"line":274,"column":42,"index":9680},"line":274,"code":"      it('should not invoke without a body', function (done) {\n        var app = createApp({\n          type: accept\n        });\n        function accept(req) {\n          throw new Error('oops!');\n        }\n        request(app).get('/').expect(404, done);\n      });","file":"express.raw.js","skipped":false,"dir":"test"},{"name":"should assert value is function","suites":["express.raw()","with verify option"],"updatePoint":{"line":286,"column":39,"index":10002},"line":286,"code":"    it('should assert value is function', function () {\n      assert.throws(createApp.bind(null, {\n        verify: 'lol'\n      }), /TypeError: option verify must be function/);\n    });","file":"express.raw.js","skipped":false,"dir":"test"},{"name":"should error from verify","suites":["express.raw()","with verify option"],"updatePoint":{"line":291,"column":32,"index":10180},"line":291,"code":"    it('should error from verify', function (done) {\n      var app = createApp({\n        verify: function (req, res, buf) {\n          if (buf[0] === 0x00) throw new Error('no leading null');\n        }\n      });\n      var test = request(app).post('/');\n      test.set('Content-Type', 'application/octet-stream');\n      test.write(Buffer.from('000102', 'hex'));\n      test.expect(403, '[entity.verify.failed] no leading null', done);\n    });","file":"express.raw.js","skipped":false,"dir":"test"},{"name":"should allow custom codes","suites":["express.raw()","with verify option"],"updatePoint":{"line":302,"column":33,"index":10621},"line":302,"code":"    it('should allow custom codes', function (done) {\n      var app = createApp({\n        verify: function (req, res, buf) {\n          if (buf[0] !== 0x00) return;\n          var err = new Error('no leading null');\n          err.status = 400;\n          throw err;\n        }\n      });\n      var test = request(app).post('/');\n      test.set('Content-Type', 'application/octet-stream');\n      test.write(Buffer.from('000102', 'hex'));\n      test.expect(400, '[entity.verify.failed] no leading null', done);\n    });","file":"express.raw.js","skipped":false,"dir":"test"},{"name":"should allow pass-through","suites":["express.raw()","with verify option"],"updatePoint":{"line":316,"column":33,"index":11133},"line":316,"code":"    it('should allow pass-through', function (done) {\n      var app = createApp({\n        verify: function (req, res, buf) {\n          if (buf[0] === 0x00) throw new Error('no leading null');\n        }\n      });\n      var test = request(app).post('/');\n      test.set('Content-Type', 'application/octet-stream');\n      test.write(Buffer.from('0102', 'hex'));\n      test.expect(200, {\n        buf: '0102'\n      }, done);\n    });","file":"express.raw.js","skipped":false,"dir":"test"},{"name":"should presist store","suites":["express.raw()","with verify option"],"updatePoint":{"line":367,"column":28,"index":12682},"line":367,"code":"    it('should presist store', function (done) {\n      request(this.app).post('/').set('Content-Type', 'application/octet-stream').send('the user is tobi').expect(200).expect('x-store-foo', 'bar').expect({\n        buf: '746865207573657220697320746f6269'\n      }).end(done);\n    });","file":"express.raw.js","skipped":false,"dir":"test"},{"name":"should presist store when unmatched content-type","suites":["express.raw()","with verify option"],"updatePoint":{"line":372,"column":56,"index":12992},"line":372,"code":"    it('should presist store when unmatched content-type', function (done) {\n      request(this.app).post('/').set('Content-Type', 'application/fizzbuzz').send('buzz').expect(200).expect('x-store-foo', 'bar').expect('{}').end(done);\n    });","file":"express.raw.js","skipped":false,"dir":"test"},{"name":"should presist store when inflated","suites":["express.raw()","with verify option"],"updatePoint":{"line":375,"column":42,"index":13219},"line":375,"code":"    it('should presist store when inflated', function (done) {\n      var test = request(this.app).post('/');\n      test.set('Content-Encoding', 'gzip');\n      test.set('Content-Type', 'application/octet-stream');\n      test.write(Buffer.from('1f8b080000000000000bcb4bcc4db57db16e170099a4bad608000000', 'hex'));\n      test.expect(200);\n      test.expect('x-store-foo', 'bar');\n      test.expect({\n        buf: '6e616d653de8aeba'\n      });\n      test.end(done);\n    });","file":"express.raw.js","skipped":false,"dir":"test"},{"name":"should presist store when inflate error","suites":["express.raw()","with verify option"],"updatePoint":{"line":387,"column":47,"index":13692},"line":387,"code":"    it('should presist store when inflate error', function (done) {\n      var test = request(this.app).post('/');\n      test.set('Content-Encoding', 'gzip');\n      test.set('Content-Type', 'application/octet-stream');\n      test.write(Buffer.from('1f8b080000000000000bcb4bcc4db57db16e170099a4bad6080000', 'hex'));\n      test.expect(400);\n      test.expect('x-store-foo', 'bar');\n      test.end(done);\n    });","file":"express.raw.js","skipped":false,"dir":"test"},{"name":"should presist store when limit exceeded","suites":["express.raw()","with verify option"],"updatePoint":{"line":396,"column":48,"index":14102},"line":396,"code":"    it('should presist store when limit exceeded', function (done) {\n      request(this.app).post('/').set('Content-Type', 'application/octet-stream').send('the user is ' + Buffer.alloc(1024 * 100, '.').toString()).expect(413).expect('x-store-foo', 'bar').end(done);\n    });","file":"express.raw.js","skipped":false,"dir":"test"},{"name":"should ignore charset","suites":["express.raw()","charset"],"updatePoint":{"line":404,"column":29,"index":14463},"line":404,"code":"    it('should ignore charset', function (done) {\n      var test = request(this.app).post('/');\n      test.set('Content-Type', 'application/octet-stream; charset=utf-8');\n      test.write(Buffer.from('6e616d6520697320e8aeba', 'hex'));\n      test.expect(200, {\n        buf: '6e616d6520697320e8aeba'\n      }, done);\n    });","file":"express.raw.js","skipped":false,"dir":"test"},{"name":"should parse without encoding","suites":["express.raw()","encoding"],"updatePoint":{"line":419,"column":37,"index":14930},"line":419,"code":"    it('should parse without encoding', function (done) {\n      var test = request(this.app).post('/');\n      test.set('Content-Type', 'application/octet-stream');\n      test.write(Buffer.from('6e616d653de8aeba', 'hex'));\n      test.expect(200, {\n        buf: '6e616d653de8aeba'\n      }, done);\n    });","file":"express.raw.js","skipped":false,"dir":"test"},{"name":"should support identity encoding","suites":["express.raw()","encoding"],"updatePoint":{"line":427,"column":40,"index":15236},"line":427,"code":"    it('should support identity encoding', function (done) {\n      var test = request(this.app).post('/');\n      test.set('Content-Encoding', 'identity');\n      test.set('Content-Type', 'application/octet-stream');\n      test.write(Buffer.from('6e616d653de8aeba', 'hex'));\n      test.expect(200, {\n        buf: '6e616d653de8aeba'\n      }, done);\n    });","file":"express.raw.js","skipped":false,"dir":"test"},{"name":"should support gzip encoding","suites":["express.raw()","encoding"],"updatePoint":{"line":436,"column":36,"index":15586},"line":436,"code":"    it('should support gzip encoding', function (done) {\n      var test = request(this.app).post('/');\n      test.set('Content-Encoding', 'gzip');\n      test.set('Content-Type', 'application/octet-stream');\n      test.write(Buffer.from('1f8b080000000000000bcb4bcc4db57db16e170099a4bad608000000', 'hex'));\n      test.expect(200, {\n        buf: '6e616d653de8aeba'\n      }, done);\n    });","file":"express.raw.js","skipped":false,"dir":"test"},{"name":"should support deflate encoding","suites":["express.raw()","encoding"],"updatePoint":{"line":445,"column":39,"index":15975},"line":445,"code":"    it('should support deflate encoding', function (done) {\n      var test = request(this.app).post('/');\n      test.set('Content-Encoding', 'deflate');\n      test.set('Content-Type', 'application/octet-stream');\n      test.write(Buffer.from('789ccb4bcc4db57db16e17001068042f', 'hex'));\n      test.expect(200, {\n        buf: '6e616d653de8aeba'\n      }, done);\n    });","file":"express.raw.js","skipped":false,"dir":"test"},{"name":"should be case-insensitive","suites":["express.raw()","encoding"],"updatePoint":{"line":454,"column":34,"index":16338},"line":454,"code":"    it('should be case-insensitive', function (done) {\n      var test = request(this.app).post('/');\n      test.set('Content-Encoding', 'GZIP');\n      test.set('Content-Type', 'application/octet-stream');\n      test.write(Buffer.from('1f8b080000000000000bcb4bcc4db57db16e170099a4bad608000000', 'hex'));\n      test.expect(200, {\n        buf: '6e616d653de8aeba'\n      }, done);\n    });","file":"express.raw.js","skipped":false,"dir":"test"},{"name":"should 415 on unknown encoding","suites":["express.raw()","encoding"],"updatePoint":{"line":463,"column":38,"index":16726},"line":463,"code":"    it('should 415 on unknown encoding', function (done) {\n      var test = request(this.app).post('/');\n      test.set('Content-Encoding', 'nulls');\n      test.set('Content-Type', 'application/octet-stream');\n      test.write(Buffer.from('000000000000', 'hex'));\n      test.expect(415, '[encoding.unsupported] unsupported content encoding \"nulls\"', done);\n    });","file":"express.raw.js","skipped":false,"dir":"test"},{"name":"should require root path","suites":["express.static()","basic operations"],"updatePoint":{"line":17,"column":32,"index":596},"line":17,"code":"    it('should require root path', function () {\n      assert.throws(express.static.bind(), /root path required/);\n    });","file":"express.static.js","skipped":false,"dir":"test"},{"name":"should require root path to be string","suites":["express.static()","basic operations"],"updatePoint":{"line":20,"column":45,"index":732},"line":20,"code":"    it('should require root path to be string', function () {\n      assert.throws(express.static.bind(null, 42), /root path.*string/);\n    });","file":"express.static.js","skipped":false,"dir":"test"},{"name":"should serve static files","suites":["express.static()","basic operations"],"updatePoint":{"line":23,"column":33,"index":863},"line":23,"code":"    it('should serve static files', function (done) {\n      request(this.app).get('/todo.txt').expect(200, '- groceries', done);\n    });","file":"express.static.js","skipped":false,"dir":"test"},{"name":"should support nesting","suites":["express.static()","basic operations"],"updatePoint":{"line":26,"column":30,"index":997},"line":26,"code":"    it('should support nesting', function (done) {\n      request(this.app).get('/users/tobi.txt').expect(200, 'ferret', done);\n    });","file":"express.static.js","skipped":false,"dir":"test"},{"name":"should set Content-Type","suites":["express.static()","basic operations"],"updatePoint":{"line":29,"column":31,"index":1133},"line":29,"code":"    it('should set Content-Type', function (done) {\n      request(this.app).get('/todo.txt').expect('Content-Type', 'text/plain; charset=UTF-8').expect(200, done);\n    });","file":"express.static.js","skipped":false,"dir":"test"},{"name":"should set Last-Modified","suites":["express.static()","basic operations"],"updatePoint":{"line":32,"column":32,"index":1306},"line":32,"code":"    it('should set Last-Modified', function (done) {\n      request(this.app).get('/todo.txt').expect('Last-Modified', /\\d{2} \\w{3} \\d{4}/).expect(200, done);\n    });","file":"express.static.js","skipped":false,"dir":"test"},{"name":"should default max-age=0","suites":["express.static()","basic operations"],"updatePoint":{"line":35,"column":32,"index":1472},"line":35,"code":"    it('should default max-age=0', function (done) {\n      request(this.app).get('/todo.txt').expect('Cache-Control', 'public, max-age=0').expect(200, done);\n    });","file":"express.static.js","skipped":false,"dir":"test"},{"name":"should support urlencoded pathnames","suites":["express.static()","basic operations"],"updatePoint":{"line":38,"column":43,"index":1649},"line":38,"code":"    it('should support urlencoded pathnames', function (done) {\n      request(this.app).get('/%25%20of%20dogs.txt').expect(200, '20%', done);\n    });","file":"express.static.js","skipped":false,"dir":"test"},{"name":"should not choke on auth-looking URL","suites":["express.static()","basic operations"],"updatePoint":{"line":41,"column":44,"index":1800},"line":41,"code":"    it('should not choke on auth-looking URL', function (done) {\n      request(this.app).get('//todo@txt').expect(404, 'Not Found', done);\n    });","file":"express.static.js","skipped":false,"dir":"test"},{"name":"should support index.html","suites":["express.static()","basic operations"],"updatePoint":{"line":44,"column":33,"index":1936},"line":44,"code":"    it('should support index.html', function (done) {\n      request(this.app).get('/users/').expect(200).expect('Content-Type', /html/).expect('<p>tobi, loki, jane</p>', done);\n    });","file":"express.static.js","skipped":false,"dir":"test"},{"name":"should support ../","suites":["express.static()","basic operations"],"updatePoint":{"line":47,"column":26,"index":2114},"line":47,"code":"    it('should support ../', function (done) {\n      request(this.app).get('/users/../todo.txt').expect(200, '- groceries', done);\n    });","file":"express.static.js","skipped":false,"dir":"test"},{"name":"should support HEAD","suites":["express.static()","basic operations"],"updatePoint":{"line":50,"column":27,"index":2254},"line":50,"code":"    it('should support HEAD', function (done) {\n      request(this.app).head('/todo.txt').expect(200).expect(utils.shouldNotHaveBody()).end(done);\n    });","file":"express.static.js","skipped":false,"dir":"test"},{"name":"should skip POST requests","suites":["express.static()","basic operations"],"updatePoint":{"line":53,"column":33,"index":2415},"line":53,"code":"    it('should skip POST requests', function (done) {\n      request(this.app).post('/todo.txt').expect(404, 'Not Found', done);\n    });","file":"express.static.js","skipped":false,"dir":"test"},{"name":"should support conditional requests","suites":["express.static()","basic operations"],"updatePoint":{"line":56,"column":43,"index":2561},"line":56,"code":"    it('should support conditional requests', function (done) {\n      var app = this.app;\n      request(app).get('/todo.txt').end(function (err, res) {\n        if (err) throw err;\n        request(app).get('/todo.txt').set('If-None-Match', res.headers.etag).expect(304, done);\n      });\n    });","file":"express.static.js","skipped":false,"dir":"test"},{"name":"should support precondition checks","suites":["express.static()","basic operations"],"updatePoint":{"line":63,"column":42,"index":2854},"line":63,"code":"    it('should support precondition checks', function (done) {\n      request(this.app).get('/todo.txt').set('If-Match', '\"foo\"').expect(412, done);\n    });","file":"express.static.js","skipped":false,"dir":"test"},{"name":"should serve zero-length files","suites":["express.static()","basic operations"],"updatePoint":{"line":66,"column":38,"index":3006},"line":66,"code":"    it('should serve zero-length files', function (done) {\n      request(this.app).get('/empty.txt').expect(200, '', done);\n    });","file":"express.static.js","skipped":false,"dir":"test"},{"name":"should ignore hidden files","suites":["express.static()","basic operations"],"updatePoint":{"line":69,"column":34,"index":3134},"line":69,"code":"    it('should ignore hidden files', function (done) {\n      request(this.app).get('/.name').expect(404, 'Not Found', done);\n    });","file":"express.static.js","skipped":false,"dir":"test"},{"name":"should be served with \".\"","suites":["express.static()","basic operations"],"updatePoint":{"line":77,"column":33,"index":3411},"line":77,"code":"    it('should be served with \".\"', function (done) {\n      var dest = relative.split(path.sep).join('/');\n      request(this.app).get('/' + dest + '/todo.txt').expect(200, '- groceries', done);\n    });","file":"express.static.js","skipped":false,"dir":"test"},{"name":"should not include Accept-Ranges","suites":["express.static()","acceptRanges","when false"],"updatePoint":{"line":84,"column":42,"index":3711},"line":84,"code":"      it('should not include Accept-Ranges', function (done) {\n        request(createApp(fixtures, {\n          'acceptRanges': false\n        })).get('/nums.txt').expect(utils.shouldNotHaveHeader('Accept-Ranges')).expect(200, '123456789', done);\n      });","file":"express.static.js","skipped":false,"dir":"test"},{"name":"should ignore Rage request header","suites":["express.static()","acceptRanges","when false"],"updatePoint":{"line":89,"column":43,"index":3967},"line":89,"code":"      it('should ignore Rage request header', function (done) {\n        request(createApp(fixtures, {\n          'acceptRanges': false\n        })).get('/nums.txt').set('Range', 'bytes=0-3').expect(utils.shouldNotHaveHeader('Accept-Ranges')).expect(utils.shouldNotHaveHeader('Content-Range')).expect(200, '123456789', done);\n      });","file":"express.static.js","skipped":false,"dir":"test"},{"name":"should include Accept-Ranges","suites":["express.static()","acceptRanges","when true"],"updatePoint":{"line":96,"column":38,"index":4343},"line":96,"code":"      it('should include Accept-Ranges', function (done) {\n        request(createApp(fixtures, {\n          'acceptRanges': true\n        })).get('/nums.txt').expect('Accept-Ranges', 'bytes').expect(200, '123456789', done);\n      });","file":"express.static.js","skipped":false,"dir":"test"},{"name":"should obey Rage request header","suites":["express.static()","acceptRanges","when true"],"updatePoint":{"line":101,"column":41,"index":4578},"line":101,"code":"      it('should obey Rage request header', function (done) {\n        request(createApp(fixtures, {\n          'acceptRanges': true\n        })).get('/nums.txt').set('Range', 'bytes=0-3').expect('Accept-Ranges', 'bytes').expect('Content-Range', 'bytes 0-3/9').expect(206, '1234', done);\n      });","file":"express.static.js","skipped":false,"dir":"test"},{"name":"should not include Cache-Control","suites":["express.static()","cacheControl","when false"],"updatePoint":{"line":110,"column":42,"index":4970},"line":110,"code":"      it('should not include Cache-Control', function (done) {\n        request(createApp(fixtures, {\n          'cacheControl': false\n        })).get('/nums.txt').expect(utils.shouldNotHaveHeader('Cache-Control')).expect(200, '123456789', done);\n      });","file":"express.static.js","skipped":false,"dir":"test"},{"name":"should ignore maxAge","suites":["express.static()","cacheControl","when false"],"updatePoint":{"line":115,"column":30,"index":5213},"line":115,"code":"      it('should ignore maxAge', function (done) {\n        request(createApp(fixtures, {\n          'cacheControl': false,\n          'maxAge': 12000\n        })).get('/nums.txt').expect(utils.shouldNotHaveHeader('Cache-Control')).expect(200, '123456789', done);\n      });","file":"express.static.js","skipped":false,"dir":"test"},{"name":"should include Cache-Control","suites":["express.static()","cacheControl","when true"],"updatePoint":{"line":123,"column":38,"index":5539},"line":123,"code":"      it('should include Cache-Control', function (done) {\n        request(createApp(fixtures, {\n          'cacheControl': true\n        })).get('/nums.txt').expect('Cache-Control', 'public, max-age=0').expect(200, '123456789', done);\n      });","file":"express.static.js","skipped":false,"dir":"test"},{"name":"should be not be enabled by default","suites":["express.static()","extensions"],"updatePoint":{"line":131,"column":43,"index":5841},"line":131,"code":"    it('should be not be enabled by default', function (done) {\n      request(createApp(fixtures)).get('/todo').expect(404, done);\n    });","file":"express.static.js","skipped":false,"dir":"test"},{"name":"should be configurable","suites":["express.static()","extensions"],"updatePoint":{"line":134,"column":30,"index":5967},"line":134,"code":"    it('should be configurable', function (done) {\n      request(createApp(fixtures, {\n        'extensions': 'txt'\n      })).get('/todo').expect(200, '- groceries', done);\n    });","file":"express.static.js","skipped":false,"dir":"test"},{"name":"should support disabling extensions","suites":["express.static()","extensions"],"updatePoint":{"line":139,"column":43,"index":6160},"line":139,"code":"    it('should support disabling extensions', function (done) {\n      request(createApp(fixtures, {\n        'extensions': false\n      })).get('/todo').expect(404, done);\n    });","file":"express.static.js","skipped":false,"dir":"test"},{"name":"should support fallbacks","suites":["express.static()","extensions"],"updatePoint":{"line":144,"column":32,"index":6327},"line":144,"code":"    it('should support fallbacks', function (done) {\n      request(createApp(fixtures, {\n        'extensions': ['htm', 'html', 'txt']\n      })).get('/todo').expect(200, '<li>groceries</li>', done);\n    });","file":"express.static.js","skipped":false,"dir":"test"},{"name":"should 404 if nothing found","suites":["express.static()","extensions"],"updatePoint":{"line":149,"column":35,"index":6536},"line":149,"code":"    it('should 404 if nothing found', function (done) {\n      request(createApp(fixtures, {\n        'extensions': ['htm', 'html', 'txt']\n      })).get('/bob').expect(404, done);\n    });","file":"express.static.js","skipped":false,"dir":"test"},{"name":"should default to true","suites":["express.static()","fallthrough"],"updatePoint":{"line":156,"column":30,"index":6763},"line":156,"code":"    it('should default to true', function (done) {\n      request(createApp()).get('/does-not-exist').expect(404, 'Not Found', done);\n    });","file":"express.static.js","skipped":false,"dir":"test"},{"name":"should fall-through when OPTIONS request","suites":["express.static()","fallthrough","when true"],"updatePoint":{"line":165,"column":50,"index":7084},"line":165,"code":"      it('should fall-through when OPTIONS request', function (done) {\n        request(this.app).options('/todo.txt').expect(404, 'Not Found', done);\n      });","file":"express.static.js","skipped":false,"dir":"test"},{"name":"should fall-through when URL malformed","suites":["express.static()","fallthrough","when true"],"updatePoint":{"line":168,"column":48,"index":7242},"line":168,"code":"      it('should fall-through when URL malformed', function (done) {\n        request(this.app).get('/%').expect(404, 'Not Found', done);\n      });","file":"express.static.js","skipped":false,"dir":"test"},{"name":"should fall-through when traversing past root","suites":["express.static()","fallthrough","when true"],"updatePoint":{"line":171,"column":55,"index":7396},"line":171,"code":"      it('should fall-through when traversing past root', function (done) {\n        request(this.app).get('/users/../../todo.txt').expect(404, 'Not Found', done);\n      });","file":"express.static.js","skipped":false,"dir":"test"},{"name":"should fall-through when URL too long","suites":["express.static()","fallthrough","when true"],"updatePoint":{"line":174,"column":47,"index":7561},"line":174,"code":"      it('should fall-through when URL too long', function (done) {\n        var app = express();\n        var root = fixtures + Array(10000).join('/foobar');\n        app.use(express.static(root, {\n          'fallthrough': true\n        }));\n        app.use(function (req, res, next) {\n          res.sendStatus(404);\n        });\n        request(app).get('/').expect(404, 'Not Found', done);\n      });","file":"express.static.js","skipped":false,"dir":"test"},{"name":"should fall-through when directory","suites":["express.static()","fallthrough","when true","with redirect: true"],"updatePoint":{"line":192,"column":46,"index":8170},"line":192,"code":"        it('should fall-through when directory', function (done) {\n          request(this.app).get('/pets/').expect(404, 'Not Found', done);\n        });","file":"express.static.js","skipped":false,"dir":"test"},{"name":"should redirect when directory without slash","suites":["express.static()","fallthrough","when true","with redirect: true"],"updatePoint":{"line":195,"column":56,"index":8333},"line":195,"code":"        it('should redirect when directory without slash', function (done) {\n          request(this.app).get('/pets').expect(301, /Redirecting/, done);\n        });","file":"express.static.js","skipped":false,"dir":"test"},{"name":"should fall-through when directory","suites":["express.static()","fallthrough","when true","with redirect: false"],"updatePoint":{"line":206,"column":46,"index":8711},"line":206,"code":"        it('should fall-through when directory', function (done) {\n          request(this.app).get('/pets/').expect(404, 'Not Found', done);\n        });","file":"express.static.js","skipped":false,"dir":"test"},{"name":"should fall-through when directory without slash","suites":["express.static()","fallthrough","when true","with redirect: false"],"updatePoint":{"line":209,"column":60,"index":8878},"line":209,"code":"        it('should fall-through when directory without slash', function (done) {\n          request(this.app).get('/pets').expect(404, 'Not Found', done);\n        });","file":"express.static.js","skipped":false,"dir":"test"},{"name":"should 405 when OPTIONS request","suites":["express.static()","fallthrough","when false"],"updatePoint":{"line":220,"column":41,"index":9205},"line":220,"code":"      it('should 405 when OPTIONS request', function (done) {\n        request(this.app).options('/todo.txt').expect('Allow', 'GET, HEAD').expect(405, done);\n      });","file":"express.static.js","skipped":false,"dir":"test"},{"name":"should 400 when URL malformed","suites":["express.static()","fallthrough","when false"],"updatePoint":{"line":223,"column":39,"index":9370},"line":223,"code":"      it('should 400 when URL malformed', function (done) {\n        request(this.app).get('/%').expect(400, /BadRequestError/, done);\n      });","file":"express.static.js","skipped":false,"dir":"test"},{"name":"should 403 when traversing past root","suites":["express.static()","fallthrough","when false"],"updatePoint":{"line":226,"column":46,"index":9521},"line":226,"code":"      it('should 403 when traversing past root', function (done) {\n        request(this.app).get('/users/../../todo.txt').expect(403, /ForbiddenError/, done);\n      });","file":"express.static.js","skipped":false,"dir":"test"},{"name":"should 404 when URL too long","suites":["express.static()","fallthrough","when false"],"updatePoint":{"line":229,"column":38,"index":9682},"line":229,"code":"      it('should 404 when URL too long', function (done) {\n        var app = express();\n        var root = fixtures + Array(10000).join('/foobar');\n        app.use(express.static(root, {\n          'fallthrough': false\n        }));\n        app.use(function (req, res, next) {\n          res.sendStatus(404);\n        });\n        request(app).get('/').expect(404, /ENAMETOOLONG/, done);\n      });","file":"express.static.js","skipped":false,"dir":"test"},{"name":"should 404 when directory","suites":["express.static()","fallthrough","when false","with redirect: true"],"updatePoint":{"line":247,"column":37,"index":10287},"line":247,"code":"        it('should 404 when directory', function (done) {\n          request(this.app).get('/pets/').expect(404, /NotFoundError|ENOENT/, done);\n        });","file":"express.static.js","skipped":false,"dir":"test"},{"name":"should redirect when directory without slash","suites":["express.static()","fallthrough","when false","with redirect: true"],"updatePoint":{"line":250,"column":56,"index":10461},"line":250,"code":"        it('should redirect when directory without slash', function (done) {\n          request(this.app).get('/pets').expect(301, /Redirecting/, done);\n        });","file":"express.static.js","skipped":false,"dir":"test"},{"name":"should 404 when directory","suites":["express.static()","fallthrough","when false","with redirect: false"],"updatePoint":{"line":261,"column":37,"index":10831},"line":261,"code":"        it('should 404 when directory', function (done) {\n          request(this.app).get('/pets/').expect(404, /NotFoundError|ENOENT/, done);\n        });","file":"express.static.js","skipped":false,"dir":"test"},{"name":"should 404 when directory without slash","suites":["express.static()","fallthrough","when false","with redirect: false"],"updatePoint":{"line":264,"column":51,"index":11000},"line":264,"code":"        it('should 404 when directory without slash', function (done) {\n          request(this.app).get('/pets').expect(404, /NotFoundError|ENOENT/, done);\n        });","file":"express.static.js","skipped":false,"dir":"test"},{"name":"should be served when dotfiles: \"allow\" is given","suites":["express.static()","hidden files"],"updatePoint":{"line":276,"column":56,"index":11348},"line":276,"code":"    it('should be served when dotfiles: \"allow\" is given', function (done) {\n      request(this.app).get('/.name').expect(200).expect(utils.shouldHaveBody(Buffer.from('tobi'))).end(done);\n    });","file":"express.static.js","skipped":false,"dir":"test"},{"name":"should default to false","suites":["express.static()","immutable"],"updatePoint":{"line":281,"column":31,"index":11563},"line":281,"code":"    it('should default to false', function (done) {\n      request(createApp(fixtures)).get('/nums.txt').expect('Cache-Control', 'public, max-age=0', done);\n    });","file":"express.static.js","skipped":false,"dir":"test"},{"name":"should set immutable directive in Cache-Control","suites":["express.static()","immutable"],"updatePoint":{"line":284,"column":55,"index":11751},"line":284,"code":"    it('should set immutable directive in Cache-Control', function (done) {\n      request(createApp(fixtures, {\n        'immutable': true,\n        'maxAge': '1h'\n      })).get('/nums.txt').expect('Cache-Control', 'public, max-age=3600, immutable', done);\n    });","file":"express.static.js","skipped":false,"dir":"test"},{"name":"should not include Last-Modified","suites":["express.static()","lastModified","when false"],"updatePoint":{"line":293,"column":42,"index":12089},"line":293,"code":"      it('should not include Last-Modified', function (done) {\n        request(createApp(fixtures, {\n          'lastModified': false\n        })).get('/nums.txt').expect(utils.shouldNotHaveHeader('Last-Modified')).expect(200, '123456789', done);\n      });","file":"express.static.js","skipped":false,"dir":"test"},{"name":"should include Last-Modified","suites":["express.static()","lastModified","when true"],"updatePoint":{"line":300,"column":38,"index":12388},"line":300,"code":"      it('should include Last-Modified', function (done) {\n        request(createApp(fixtures, {\n          'lastModified': true\n        })).get('/nums.txt').expect('Last-Modified', /^\\w{3}, \\d+ \\w+ \\d+ \\d+:\\d+:\\d+ \\w+$/).expect(200, '123456789', done);\n      });","file":"express.static.js","skipped":false,"dir":"test"},{"name":"should accept string","suites":["express.static()","maxAge"],"updatePoint":{"line":308,"column":28,"index":12690},"line":308,"code":"    it('should accept string', function (done) {\n      request(createApp(fixtures, {\n        'maxAge': '30d'\n      })).get('/todo.txt').expect('cache-control', 'public, max-age=' + 60 * 60 * 24 * 30).expect(200, done);\n    });","file":"express.static.js","skipped":false,"dir":"test"},{"name":"should be reasonable when infinite","suites":["express.static()","maxAge"],"updatePoint":{"line":313,"column":42,"index":12931},"line":313,"code":"    it('should be reasonable when infinite', function (done) {\n      request(createApp(fixtures, {\n        'maxAge': Infinity\n      })).get('/todo.txt').expect('cache-control', 'public, max-age=' + 60 * 60 * 24 * 365).expect(200, done);\n    });","file":"express.static.js","skipped":false,"dir":"test"},{"name":"should redirect directories","suites":["express.static()","redirect"],"updatePoint":{"line":328,"column":35,"index":13487},"line":328,"code":"    it('should redirect directories', function (done) {\n      request(this.app).get('/users').expect('Location', '/users/').expect(301, done);\n    });","file":"express.static.js","skipped":false,"dir":"test"},{"name":"should include HTML link","suites":["express.static()","redirect"],"updatePoint":{"line":331,"column":32,"index":13635},"line":331,"code":"    it('should include HTML link', function (done) {\n      request(this.app).get('/users').expect('Location', '/users/').expect(301, /<a href=\"\\/users\\/\">/, done);\n    });","file":"express.static.js","skipped":false,"dir":"test"},{"name":"should redirect directories with query string","suites":["express.static()","redirect"],"updatePoint":{"line":334,"column":53,"index":13828},"line":334,"code":"    it('should redirect directories with query string', function (done) {\n      request(this.app).get('/users?name=john').expect('Location', '/users/?name=john').expect(301, done);\n    });","file":"express.static.js","skipped":false,"dir":"test"},{"name":"should not redirect to protocol-relative locations","suites":["express.static()","redirect"],"updatePoint":{"line":337,"column":58,"index":14022},"line":337,"code":"    it('should not redirect to protocol-relative locations', function (done) {\n      request(this.app).get('//users').expect('Location', '/users/').expect(301, done);\n    });","file":"express.static.js","skipped":false,"dir":"test"},{"name":"should ensure redirect URL is properly encoded","suites":["express.static()","redirect"],"updatePoint":{"line":340,"column":54,"index":14193},"line":340,"code":"    it('should ensure redirect URL is properly encoded', function (done) {\n      request(this.app).get('/snow').expect('Location', '/snow%20%E2%98%83/').expect('Content-Type', /html/).expect(301, />Redirecting to <a href=\"\\/snow%20%E2%98%83\\/\">\\/snow%20%E2%98%83\\/<\\/a></, done);\n    });","file":"express.static.js","skipped":false,"dir":"test"},{"name":"should respond with default Content-Security-Policy","suites":["express.static()","redirect"],"updatePoint":{"line":343,"column":59,"index":14486},"line":343,"code":"    it('should respond with default Content-Security-Policy', function (done) {\n      request(this.app).get('/users').expect('Content-Security-Policy', \"default-src 'none'\").expect(301, done);\n    });","file":"express.static.js","skipped":false,"dir":"test"},{"name":"should not redirect incorrectly","suites":["express.static()","redirect"],"updatePoint":{"line":346,"column":39,"index":14667},"line":346,"code":"    it('should not redirect incorrectly', function (done) {\n      request(this.app).get('/').expect(404, done);\n    });","file":"express.static.js","skipped":false,"dir":"test"},{"name":"should disable redirect","suites":["express.static()","redirect","when false"],"updatePoint":{"line":355,"column":33,"index":14940},"line":355,"code":"      it('should disable redirect', function (done) {\n        request(this.app).get('/users').expect(404, done);\n      });","file":"express.static.js","skipped":false,"dir":"test"},{"name":"should reject non-functions","suites":["express.static()","setHeaders"],"updatePoint":{"line":369,"column":35,"index":15329},"line":369,"code":"    it('should reject non-functions', function () {\n      assert.throws(express.static.bind(null, fixtures, {\n        'setHeaders': 3\n      }), /setHeaders.*function/);\n    });","file":"express.static.js","skipped":false,"dir":"test"},{"name":"should get called when sending file","suites":["express.static()","setHeaders"],"updatePoint":{"line":374,"column":43,"index":15514},"line":374,"code":"    it('should get called when sending file', function (done) {\n      request(this.app).get('/nums.txt').expect('x-custom', 'set').expect(200, done);\n    });","file":"express.static.js","skipped":false,"dir":"test"},{"name":"should not get called on 404","suites":["express.static()","setHeaders"],"updatePoint":{"line":377,"column":36,"index":15665},"line":377,"code":"    it('should not get called on 404', function (done) {\n      request(this.app).get('/bogus').expect(utils.shouldNotHaveHeader('x-custom')).expect(404, done);\n    });","file":"express.static.js","skipped":false,"dir":"test"},{"name":"should not get called on redirect","suites":["express.static()","setHeaders"],"updatePoint":{"line":380,"column":41,"index":15838},"line":380,"code":"    it('should not get called on redirect', function (done) {\n      request(this.app).get('/users').expect(utils.shouldNotHaveHeader('x-custom')).expect(301, done);\n    });","file":"express.static.js","skipped":false,"dir":"test"},{"name":"should catch urlencoded ../","suites":["express.static()","when traversing past root"],"updatePoint":{"line":390,"column":35,"index":16176},"line":390,"code":"    it('should catch urlencoded ../', function (done) {\n      request(this.app).get('/users/%2e%2e/%2e%2e/todo.txt').expect(403, done);\n    });","file":"express.static.js","skipped":false,"dir":"test"},{"name":"should not allow root path disclosure","suites":["express.static()","when traversing past root"],"updatePoint":{"line":393,"column":45,"index":16330},"line":393,"code":"    it('should not allow root path disclosure', function (done) {\n      request(this.app).get('/users/../../fixtures/todo.txt').expect(403, done);\n    });","file":"express.static.js","skipped":false,"dir":"test"},{"name":"should support byte ranges","suites":["express.static()","when request has \"Range\" header"],"updatePoint":{"line":401,"column":34,"index":16603},"line":401,"code":"    it('should support byte ranges', function (done) {\n      request(this.app).get('/nums.txt').set('Range', 'bytes=0-4').expect('12345', done);\n    });","file":"express.static.js","skipped":false,"dir":"test"},{"name":"should be inclusive","suites":["express.static()","when request has \"Range\" header"],"updatePoint":{"line":404,"column":27,"index":16749},"line":404,"code":"    it('should be inclusive', function (done) {\n      request(this.app).get('/nums.txt').set('Range', 'bytes=0-0').expect('1', done);\n    });","file":"express.static.js","skipped":false,"dir":"test"},{"name":"should set Content-Range","suites":["express.static()","when request has \"Range\" header"],"updatePoint":{"line":407,"column":32,"index":16896},"line":407,"code":"    it('should set Content-Range', function (done) {\n      request(this.app).get('/nums.txt').set('Range', 'bytes=2-5').expect('Content-Range', 'bytes 2-5/9', done);\n    });","file":"express.static.js","skipped":false,"dir":"test"},{"name":"should support -n","suites":["express.static()","when request has \"Range\" header"],"updatePoint":{"line":410,"column":25,"index":17063},"line":410,"code":"    it('should support -n', function (done) {\n      request(this.app).get('/nums.txt').set('Range', 'bytes=-3').expect('789', done);\n    });","file":"express.static.js","skipped":false,"dir":"test"},{"name":"should support n-","suites":["express.static()","when request has \"Range\" header"],"updatePoint":{"line":413,"column":25,"index":17204},"line":413,"code":"    it('should support n-', function (done) {\n      request(this.app).get('/nums.txt').set('Range', 'bytes=3-').expect('456789', done);\n    });","file":"express.static.js","skipped":false,"dir":"test"},{"name":"should respond with 206 \"Partial Content\"","suites":["express.static()","when request has \"Range\" header"],"updatePoint":{"line":416,"column":49,"index":17372},"line":416,"code":"    it('should respond with 206 \"Partial Content\"', function (done) {\n      request(this.app).get('/nums.txt').set('Range', 'bytes=0-4').expect(206, done);\n    });","file":"express.static.js","skipped":false,"dir":"test"},{"name":"should set Content-Length to the # of octets transferred","suites":["express.static()","when request has \"Range\" header"],"updatePoint":{"line":419,"column":64,"index":17551},"line":419,"code":"    it('should set Content-Length to the # of octets transferred', function (done) {\n      request(this.app).get('/nums.txt').set('Range', 'bytes=2-3').expect('Content-Length', '2').expect(206, '34', done);\n    });","file":"express.static.js","skipped":false,"dir":"test"},{"name":"is taken to be equal to one less than the current length","suites":["express.static()","when request has \"Range\" header","when last-byte-pos of the range is greater than current length"],"updatePoint":{"line":423,"column":66,"index":17861},"line":423,"code":"      it('is taken to be equal to one less than the current length', function (done) {\n        request(this.app).get('/nums.txt').set('Range', 'bytes=2-50').expect('Content-Range', 'bytes 2-8/9', done);\n      });","file":"express.static.js","skipped":false,"dir":"test"},{"name":"should adapt the Content-Length accordingly","suites":["express.static()","when request has \"Range\" header","when last-byte-pos of the range is greater than current length"],"updatePoint":{"line":426,"column":53,"index":18061},"line":426,"code":"      it('should adapt the Content-Length accordingly', function (done) {\n        request(this.app).get('/nums.txt').set('Range', 'bytes=2-50').expect('Content-Length', '7').expect(206, done);\n      });","file":"express.static.js","skipped":false,"dir":"test"},{"name":"should respond with 416","suites":["express.static()","when request has \"Range\" header","when the first- byte-pos of the range is greater than the current length"],"updatePoint":{"line":431,"column":33,"index":18355},"line":431,"code":"      it('should respond with 416', function (done) {\n        request(this.app).get('/nums.txt').set('Range', 'bytes=9-50').expect(416, done);\n      });","file":"express.static.js","skipped":false,"dir":"test"},{"name":"should include a Content-Range header of complete length","suites":["express.static()","when request has \"Range\" header","when the first- byte-pos of the range is greater than the current length"],"updatePoint":{"line":434,"column":66,"index":18541},"line":434,"code":"      it('should include a Content-Range header of complete length', function (done) {\n        request(this.app).get('/nums.txt').set('Range', 'bytes=9-50').expect('Content-Range', 'bytes */9').expect(416, done);\n      });","file":"express.static.js","skipped":false,"dir":"test"},{"name":"should respond with 200 and the entire contents","suites":["express.static()","when request has \"Range\" header","when syntactically invalid"],"updatePoint":{"line":439,"column":57,"index":18820},"line":439,"code":"      it('should respond with 200 and the entire contents', function (done) {\n        request(this.app).get('/nums.txt').set('Range', 'asdf').expect('123456789', done);\n      });","file":"express.static.js","skipped":false,"dir":"test"},{"name":"should redirect correctly","suites":["express.static()","when index at mount point"],"updatePoint":{"line":449,"column":33,"index":19171},"line":449,"code":"    it('should redirect correctly', function (done) {\n      request(this.app).get('/users').expect('Location', '/users/').expect(301, done);\n    });","file":"express.static.js","skipped":false,"dir":"test"},{"name":"should redirect relative to the originalUrl","suites":["express.static()","when mounted"],"updatePoint":{"line":458,"column":51,"index":19503},"line":458,"code":"    it('should redirect relative to the originalUrl', function (done) {\n      request(this.app).get('/static/users').expect('Location', '/static/users/').expect(301, done);\n    });","file":"express.static.js","skipped":false,"dir":"test"},{"name":"should not choke on auth-looking URL","suites":["express.static()","when mounted"],"updatePoint":{"line":461,"column":44,"index":19677},"line":461,"code":"    it('should not choke on auth-looking URL', function (done) {\n      request(this.app).get('//todo@txt').expect(404, done);\n    });","file":"express.static.js","skipped":false,"dir":"test"},{"name":"should load the file when on trailing slash","suites":["express.static()","when mounted \"root\" as a file"],"updatePoint":{"line":477,"column":51,"index":20226},"line":477,"code":"    it('should load the file when on trailing slash', function (done) {\n      request(this.app).get('/todo.txt').expect(200, '- groceries', done);\n    });","file":"express.static.js","skipped":false,"dir":"test"},{"name":"should 404 when trailing slash","suites":["express.static()","when mounted \"root\" as a file"],"updatePoint":{"line":480,"column":38,"index":20368},"line":480,"code":"    it('should 404 when trailing slash', function (done) {\n      request(this.app).get('/todo.txt/').expect(404, done);\n    });","file":"express.static.js","skipped":false,"dir":"test"},{"name":"should not alter the status","suites":["express.static()","when responding non-2xx or 304"],"updatePoint":{"line":485,"column":35,"index":20558},"line":485,"code":"    it('should not alter the status', function (done) {\n      var app = express();\n      app.use(function (req, res, next) {\n        res.status(501);\n        next();\n      });\n      app.use(express.static(fixtures));\n      request(app).get('/todo.txt').expect(501, '- groceries', done);\n    });","file":"express.static.js","skipped":false,"dir":"test"},{"name":"should next() on directory","suites":["express.static()","when index file serving disabled"],"updatePoint":{"line":505,"column":34,"index":21157},"line":505,"code":"    it('should next() on directory', function (done) {\n      request(this.app).get('/static/users/').expect(404, 'Not Found', done);\n    });","file":"express.static.js","skipped":false,"dir":"test"},{"name":"should redirect to trailing slash","suites":["express.static()","when index file serving disabled"],"updatePoint":{"line":508,"column":41,"index":21305},"line":508,"code":"    it('should redirect to trailing slash', function (done) {\n      request(this.app).get('/static/users').expect('Location', '/static/users/').expect(301, done);\n    });","file":"express.static.js","skipped":false,"dir":"test"},{"name":"should next() on mount point","suites":["express.static()","when index file serving disabled"],"updatePoint":{"line":511,"column":36,"index":21471},"line":511,"code":"    it('should next() on mount point', function (done) {\n      request(this.app).get('/static/').expect(404, 'Not Found', done);\n    });","file":"express.static.js","skipped":false,"dir":"test"},{"name":"should redirect to trailing slash mount point","suites":["express.static()","when index file serving disabled"],"updatePoint":{"line":514,"column":53,"index":21625},"line":514,"code":"    it('should redirect to trailing slash mount point', function (done) {\n      request(this.app).get('/static').expect('Location', '/static/').expect(301, done);\n    });","file":"express.static.js","skipped":false,"dir":"test"},{"name":"should parse text/plain","suites":["express.text()"],"updatePoint":{"line":13,"column":29,"index":432},"line":13,"code":"  it('should parse text/plain', function (done) {\n    request(this.app).post('/').set('Content-Type', 'text/plain').send('user is tobi').expect(200, '\"user is tobi\"', done);\n  });","file":"express.text.js","skipped":false,"dir":"test"},{"name":"should 400 when invalid content-length","suites":["express.text()"],"updatePoint":{"line":16,"column":44,"index":627},"line":16,"code":"  it('should 400 when invalid content-length', function (done) {\n    var app = express();\n    app.use(function (req, res, next) {\n      req.headers['content-length'] = '20'; // bad length\n      next();\n    });\n    app.use(express.text());\n    app.post('/', function (req, res) {\n      res.json(req.body);\n    });\n    request(app).post('/').set('Content-Type', 'text/plain').send('user').expect(400, /content length/, done);\n  });","file":"express.text.js","skipped":false,"dir":"test"},{"name":"should handle Content-Length: 0","suites":["express.text()"],"updatePoint":{"line":28,"column":37,"index":1050},"line":28,"code":"  it('should handle Content-Length: 0', function (done) {\n    request(createApp({\n      limit: '1kb'\n    })).post('/').set('Content-Type', 'text/plain').set('Content-Length', '0').expect(200, '\"\"', done);\n  });","file":"express.text.js","skipped":false,"dir":"test"},{"name":"should handle empty message-body","suites":["express.text()"],"updatePoint":{"line":33,"column":38,"index":1262},"line":33,"code":"  it('should handle empty message-body', function (done) {\n    request(createApp({\n      limit: '1kb'\n    })).post('/').set('Content-Type', 'text/plain').set('Transfer-Encoding', 'chunked').send('').expect(200, '\"\"', done);\n  });","file":"express.text.js","skipped":false,"dir":"test"},{"name":"should 500 if stream not readable","suites":["express.text()"],"updatePoint":{"line":38,"column":39,"index":1493},"line":38,"code":"  it('should 500 if stream not readable', function (done) {\n    var app = express();\n    app.use(function (req, res, next) {\n      req.on('end', next);\n      req.resume();\n    });\n    app.use(express.text());\n    app.use(function (err, req, res, next) {\n      res.status(err.status || 500);\n      res.send('[' + err.type + '] ' + err.message);\n    });\n    app.post('/', function (req, res) {\n      res.json(req.body);\n    });\n    request(app).post('/').set('Content-Type', 'text/plain').send('user is tobi').expect(500, '[stream.not.readable] stream is not readable', done);\n  });","file":"express.text.js","skipped":false,"dir":"test"},{"name":"should handle duplicated middleware","suites":["express.text()"],"updatePoint":{"line":54,"column":41,"index":2076},"line":54,"code":"  it('should handle duplicated middleware', function (done) {\n    var app = express();\n    app.use(express.text());\n    app.use(express.text());\n    app.post('/', function (req, res) {\n      res.json(req.body);\n    });\n    request(app).post('/').set('Content-Type', 'text/plain').send('user is tobi').expect(200, '\"user is tobi\"', done);\n  });","file":"express.text.js","skipped":false,"dir":"test"},{"name":"should change default charset","suites":["express.text()","with defaultCharset option"],"updatePoint":{"line":64,"column":37,"index":2471},"line":64,"code":"    it('should change default charset', function (done) {\n      var server = createApp({\n        defaultCharset: 'koi8-r'\n      });\n      var test = request(server).post('/');\n      test.set('Content-Type', 'text/plain');\n      test.write(Buffer.from('6e616d6520697320cec5d4', 'hex'));\n      test.expect(200, '\"name is нет\"', done);\n    });","file":"express.text.js","skipped":false,"dir":"test"},{"name":"should honor content-type charset","suites":["express.text()","with defaultCharset option"],"updatePoint":{"line":73,"column":41,"index":2816},"line":73,"code":"    it('should honor content-type charset', function (done) {\n      var server = createApp({\n        defaultCharset: 'koi8-r'\n      });\n      var test = request(server).post('/');\n      test.set('Content-Type', 'text/plain; charset=utf-8');\n      test.write(Buffer.from('6e616d6520697320e8aeba', 'hex'));\n      test.expect(200, '\"name is 论\"', done);\n    });","file":"express.text.js","skipped":false,"dir":"test"},{"name":"should 413 when over limit with Content-Length","suites":["express.text()","with limit option"],"updatePoint":{"line":84,"column":54,"index":3239},"line":84,"code":"    it('should 413 when over limit with Content-Length', function (done) {\n      var buf = Buffer.alloc(1028, '.');\n      request(createApp({\n        limit: '1kb'\n      })).post('/').set('Content-Type', 'text/plain').set('Content-Length', '1028').send(buf.toString()).expect(413, done);\n    });","file":"express.text.js","skipped":false,"dir":"test"},{"name":"should 413 when over limit with chunked encoding","suites":["express.text()","with limit option"],"updatePoint":{"line":90,"column":56,"index":3536},"line":90,"code":"    it('should 413 when over limit with chunked encoding', function (done) {\n      var app = createApp({\n        limit: '1kb'\n      });\n      var buf = Buffer.alloc(1028, '.');\n      var test = request(app).post('/');\n      test.set('Content-Type', 'text/plain');\n      test.set('Transfer-Encoding', 'chunked');\n      test.write(buf.toString());\n      test.expect(413, done);\n    });","file":"express.text.js","skipped":false,"dir":"test"},{"name":"should 413 when inflated body over limit","suites":["express.text()","with limit option"],"updatePoint":{"line":101,"column":48,"index":3912},"line":101,"code":"    it('should 413 when inflated body over limit', function (done) {\n      var app = createApp({\n        limit: '1kb'\n      });\n      var test = request(app).post('/');\n      test.set('Content-Encoding', 'gzip');\n      test.set('Content-Type', 'text/plain');\n      test.write(Buffer.from('1f8b080000000000000ad3d31b05a360148c64000087e5a14704040000', 'hex'));\n      test.expect(413, done);\n    });","file":"express.text.js","skipped":false,"dir":"test"},{"name":"should accept number of bytes","suites":["express.text()","with limit option"],"updatePoint":{"line":111,"column":37,"index":4298},"line":111,"code":"    it('should accept number of bytes', function (done) {\n      var buf = Buffer.alloc(1028, '.');\n      request(createApp({\n        limit: 1024\n      })).post('/').set('Content-Type', 'text/plain').send(buf.toString()).expect(413, done);\n    });","file":"express.text.js","skipped":false,"dir":"test"},{"name":"should not change when options altered","suites":["express.text()","with limit option"],"updatePoint":{"line":117,"column":46,"index":4554},"line":117,"code":"    it('should not change when options altered', function (done) {\n      var buf = Buffer.alloc(1028, '.');\n      var options = {\n        limit: '1kb'\n      };\n      var app = createApp(options);\n      options.limit = '100kb';\n      request(app).post('/').set('Content-Type', 'text/plain').send(buf.toString()).expect(413, done);\n    });","file":"express.text.js","skipped":false,"dir":"test"},{"name":"should not hang response","suites":["express.text()","with limit option"],"updatePoint":{"line":126,"column":32,"index":4878},"line":126,"code":"    it('should not hang response', function (done) {\n      var app = createApp({\n        limit: '8kb'\n      });\n      var buf = Buffer.alloc(10240, '.');\n      var test = request(app).post('/');\n      test.set('Content-Type', 'text/plain');\n      test.write(buf);\n      test.write(buf);\n      test.write(buf);\n      test.expect(413, done);\n    });","file":"express.text.js","skipped":false,"dir":"test"},{"name":"should not error when inflating","suites":["express.text()","with limit option"],"updatePoint":{"line":138,"column":39,"index":5233},"line":138,"code":"    it('should not error when inflating', function (done) {\n      var app = createApp({\n        limit: '1kb'\n      });\n      var test = request(app).post('/');\n      test.set('Content-Encoding', 'gzip');\n      test.set('Content-Type', 'text/plain');\n      test.write(Buffer.from('1f8b080000000000000ad3d31b05a360148c64000087e5a1470404', 'hex'));\n      setTimeout(function () {\n        test.expect(413, done);\n      }, 100);\n    });","file":"express.text.js","skipped":false,"dir":"test"},{"name":"should not accept content-encoding","suites":["express.text()","with inflate option","when false"],"updatePoint":{"line":158,"column":44,"index":5870},"line":158,"code":"      it('should not accept content-encoding', function (done) {\n        var test = request(this.app).post('/');\n        test.set('Content-Encoding', 'gzip');\n        test.set('Content-Type', 'text/plain');\n        test.write(Buffer.from('1f8b080000000000000bcb4bcc4d55c82c5678b16e170072b3e0200b000000', 'hex'));\n        test.expect(415, '[encoding.unsupported] content encoding unsupported', done);\n      });","file":"express.text.js","skipped":false,"dir":"test"},{"name":"should accept content-encoding","suites":["express.text()","with inflate option","when true"],"updatePoint":{"line":172,"column":40,"index":6428},"line":172,"code":"      it('should accept content-encoding', function (done) {\n        var test = request(this.app).post('/');\n        test.set('Content-Encoding', 'gzip');\n        test.set('Content-Type', 'text/plain');\n        test.write(Buffer.from('1f8b080000000000000bcb4bcc4d55c82c5678b16e170072b3e0200b000000', 'hex'));\n        test.expect(200, '\"name is 论\"', done);\n      });","file":"express.text.js","skipped":false,"dir":"test"},{"name":"should parse for custom type","suites":["express.text()","with type option","when \"text/html\""],"updatePoint":{"line":188,"column":38,"index":7006},"line":188,"code":"      it('should parse for custom type', function (done) {\n        request(this.app).post('/').set('Content-Type', 'text/html').send('<b>tobi</b>').expect(200, '\"<b>tobi</b>\"', done);\n      });","file":"express.text.js","skipped":false,"dir":"test"},{"name":"should ignore standard type","suites":["express.text()","with type option","when \"text/html\""],"updatePoint":{"line":191,"column":37,"index":7199},"line":191,"code":"      it('should ignore standard type', function (done) {\n        request(this.app).post('/').set('Content-Type', 'text/plain').send('user is tobi').expect(200, '{}', done);\n      });","file":"express.text.js","skipped":false,"dir":"test"},{"name":"should parse \"text/html\"","suites":["express.text()","with type option","when [\"text/html\", \"text/plain\"]"],"updatePoint":{"line":201,"column":34,"index":7575},"line":201,"code":"      it('should parse \"text/html\"', function (done) {\n        request(this.app).post('/').set('Content-Type', 'text/html').send('<b>tobi</b>').expect(200, '\"<b>tobi</b>\"', done);\n      });","file":"express.text.js","skipped":false,"dir":"test"},{"name":"should parse \"text/plain\"","suites":["express.text()","with type option","when [\"text/html\", \"text/plain\"]"],"updatePoint":{"line":204,"column":35,"index":7766},"line":204,"code":"      it('should parse \"text/plain\"', function (done) {\n        request(this.app).post('/').set('Content-Type', 'text/plain').send('tobi').expect(200, '\"tobi\"', done);\n      });","file":"express.text.js","skipped":false,"dir":"test"},{"name":"should ignore \"text/xml\"","suites":["express.text()","with type option","when [\"text/html\", \"text/plain\"]"],"updatePoint":{"line":207,"column":34,"index":7943},"line":207,"code":"      it('should ignore \"text/xml\"', function (done) {\n        request(this.app).post('/').set('Content-Type', 'text/xml').send('<user>tobi</user>').expect(200, '{}', done);\n      });","file":"express.text.js","skipped":false,"dir":"test"},{"name":"should parse when truthy value returned","suites":["express.text()","with type option","when a function"],"updatePoint":{"line":212,"column":49,"index":8196},"line":212,"code":"      it('should parse when truthy value returned', function (done) {\n        var app = createApp({\n          type: accept\n        });\n        function accept(req) {\n          return req.headers['content-type'] === 'text/vnd.something';\n        }\n        request(app).post('/').set('Content-Type', 'text/vnd.something').send('user is tobi').expect(200, '\"user is tobi\"', done);\n      });","file":"express.text.js","skipped":false,"dir":"test"},{"name":"should work without content-type","suites":["express.text()","with type option","when a function"],"updatePoint":{"line":221,"column":42,"index":8577},"line":221,"code":"      it('should work without content-type', function (done) {\n        var app = createApp({\n          type: accept\n        });\n        function accept(req) {\n          return true;\n        }\n        var test = request(app).post('/');\n        test.write('user is tobi');\n        test.expect(200, '\"user is tobi\"', done);\n      });","file":"express.text.js","skipped":false,"dir":"test"},{"name":"should not invoke without a body","suites":["express.text()","with type option","when a function"],"updatePoint":{"line":232,"column":42,"index":8908},"line":232,"code":"      it('should not invoke without a body', function (done) {\n        var app = createApp({\n          type: accept\n        });\n        function accept(req) {\n          throw new Error('oops!');\n        }\n        request(app).get('/').expect(404, done);\n      });","file":"express.text.js","skipped":false,"dir":"test"},{"name":"should assert value is function","suites":["express.text()","with verify option"],"updatePoint":{"line":244,"column":39,"index":9230},"line":244,"code":"    it('should assert value is function', function () {\n      assert.throws(createApp.bind(null, {\n        verify: 'lol'\n      }), /TypeError: option verify must be function/);\n    });","file":"express.text.js","skipped":false,"dir":"test"},{"name":"should error from verify","suites":["express.text()","with verify option"],"updatePoint":{"line":249,"column":32,"index":9408},"line":249,"code":"    it('should error from verify', function (done) {\n      var app = createApp({\n        verify: function (req, res, buf) {\n          if (buf[0] === 0x20) throw new Error('no leading space');\n        }\n      });\n      request(app).post('/').set('Content-Type', 'text/plain').send(' user is tobi').expect(403, '[entity.verify.failed] no leading space', done);\n    });","file":"express.text.js","skipped":false,"dir":"test"},{"name":"should allow custom codes","suites":["express.text()","with verify option"],"updatePoint":{"line":257,"column":33,"index":9776},"line":257,"code":"    it('should allow custom codes', function (done) {\n      var app = createApp({\n        verify: function (req, res, buf) {\n          if (buf[0] !== 0x20) return;\n          var err = new Error('no leading space');\n          err.status = 400;\n          throw err;\n        }\n      });\n      request(app).post('/').set('Content-Type', 'text/plain').send(' user is tobi').expect(400, '[entity.verify.failed] no leading space', done);\n    });","file":"express.text.js","skipped":false,"dir":"test"},{"name":"should allow pass-through","suites":["express.text()","with verify option"],"updatePoint":{"line":268,"column":33,"index":10215},"line":268,"code":"    it('should allow pass-through', function (done) {\n      var app = createApp({\n        verify: function (req, res, buf) {\n          if (buf[0] === 0x20) throw new Error('no leading space');\n        }\n      });\n      request(app).post('/').set('Content-Type', 'text/plain').send('user is tobi').expect(200, '\"user is tobi\"', done);\n    });","file":"express.text.js","skipped":false,"dir":"test"},{"name":"should 415 on unknown charset prior to verify","suites":["express.text()","with verify option"],"updatePoint":{"line":276,"column":53,"index":10577},"line":276,"code":"    it('should 415 on unknown charset prior to verify', function (done) {\n      var app = createApp({\n        verify: function (req, res, buf) {\n          throw new Error('unexpected verify call');\n        }\n      });\n      var test = request(app).post('/');\n      test.set('Content-Type', 'text/plain; charset=x-bogus');\n      test.write(Buffer.from('00000000', 'hex'));\n      test.expect(415, '[charset.unsupported] unsupported charset \"X-BOGUS\"', done);\n    });","file":"express.text.js","skipped":false,"dir":"test"},{"name":"should presist store","suites":["express.text()","with verify option"],"updatePoint":{"line":319,"column":28,"index":11997},"line":319,"code":"    it('should presist store', function (done) {\n      request(this.app).post('/').set('Content-Type', 'text/plain').send('user is tobi').expect(200).expect('x-store-foo', 'bar').expect('\"user is tobi\"').end(done);\n    });","file":"express.text.js","skipped":false,"dir":"test"},{"name":"should presist store when unmatched content-type","suites":["express.text()","with verify option"],"updatePoint":{"line":322,"column":56,"index":12248},"line":322,"code":"    it('should presist store when unmatched content-type', function (done) {\n      request(this.app).post('/').set('Content-Type', 'application/fizzbuzz').send('buzz').expect(200).expect('x-store-foo', 'bar').expect('{}').end(done);\n    });","file":"express.text.js","skipped":false,"dir":"test"},{"name":"should presist store when inflated","suites":["express.text()","with verify option"],"updatePoint":{"line":325,"column":42,"index":12475},"line":325,"code":"    it('should presist store when inflated', function (done) {\n      var test = request(this.app).post('/');\n      test.set('Content-Encoding', 'gzip');\n      test.set('Content-Type', 'text/plain');\n      test.write(Buffer.from('1f8b080000000000000bcb4bcc4d55c82c5678b16e170072b3e0200b000000', 'hex'));\n      test.expect(200);\n      test.expect('x-store-foo', 'bar');\n      test.expect('\"name is 论\"');\n      test.end(done);\n    });","file":"express.text.js","skipped":false,"dir":"test"},{"name":"should presist store when inflate error","suites":["express.text()","with verify option"],"updatePoint":{"line":335,"column":47,"index":12912},"line":335,"code":"    it('should presist store when inflate error', function (done) {\n      var test = request(this.app).post('/');\n      test.set('Content-Encoding', 'gzip');\n      test.set('Content-Type', 'text/plain');\n      test.write(Buffer.from('1f8b080000000000000bcb4bcc4d55c82c5678b16e170072b3e0200b0000', 'hex'));\n      test.expect(400);\n      test.expect('x-store-foo', 'bar');\n      test.end(done);\n    });","file":"express.text.js","skipped":false,"dir":"test"},{"name":"should presist store when limit exceeded","suites":["express.text()","with verify option"],"updatePoint":{"line":344,"column":48,"index":13314},"line":344,"code":"    it('should presist store when limit exceeded', function (done) {\n      request(this.app).post('/').set('Content-Type', 'text/plain').send('user is ' + Buffer.alloc(1024 * 100, '.').toString()).expect(413).expect('x-store-foo', 'bar').end(done);\n    });","file":"express.text.js","skipped":false,"dir":"test"},{"name":"should parse utf-8","suites":["express.text()","charset"],"updatePoint":{"line":352,"column":26,"index":13654},"line":352,"code":"    it('should parse utf-8', function (done) {\n      var test = request(this.app).post('/');\n      test.set('Content-Type', 'text/plain; charset=utf-8');\n      test.write(Buffer.from('6e616d6520697320e8aeba', 'hex'));\n      test.expect(200, '\"name is 论\"', done);\n    });","file":"express.text.js","skipped":false,"dir":"test"},{"name":"should parse codepage charsets","suites":["express.text()","charset"],"updatePoint":{"line":358,"column":38,"index":13937},"line":358,"code":"    it('should parse codepage charsets', function (done) {\n      var test = request(this.app).post('/');\n      test.set('Content-Type', 'text/plain; charset=koi8-r');\n      test.write(Buffer.from('6e616d6520697320cec5d4', 'hex'));\n      test.expect(200, '\"name is нет\"', done);\n    });","file":"express.text.js","skipped":false,"dir":"test"},{"name":"should parse when content-length != char length","suites":["express.text()","charset"],"updatePoint":{"line":364,"column":55,"index":14240},"line":364,"code":"    it('should parse when content-length != char length', function (done) {\n      var test = request(this.app).post('/');\n      test.set('Content-Type', 'text/plain; charset=utf-8');\n      test.set('Content-Length', '11');\n      test.write(Buffer.from('6e616d6520697320e8aeba', 'hex'));\n      test.expect(200, '\"name is 论\"', done);\n    });","file":"express.text.js","skipped":false,"dir":"test"},{"name":"should default to utf-8","suites":["express.text()","charset"],"updatePoint":{"line":371,"column":31,"index":14556},"line":371,"code":"    it('should default to utf-8', function (done) {\n      var test = request(this.app).post('/');\n      test.set('Content-Type', 'text/plain');\n      test.write(Buffer.from('6e616d6520697320e8aeba', 'hex'));\n      test.expect(200, '\"name is 论\"', done);\n    });","file":"express.text.js","skipped":false,"dir":"test"},{"name":"should 415 on unknown charset","suites":["express.text()","charset"],"updatePoint":{"line":377,"column":37,"index":14823},"line":377,"code":"    it('should 415 on unknown charset', function (done) {\n      var test = request(this.app).post('/');\n      test.set('Content-Type', 'text/plain; charset=x-bogus');\n      test.write(Buffer.from('00000000', 'hex'));\n      test.expect(415, '[charset.unsupported] unsupported charset \"X-BOGUS\"', done);\n    });","file":"express.text.js","skipped":false,"dir":"test"},{"name":"should parse without encoding","suites":["express.text()","encoding"],"updatePoint":{"line":390,"column":37,"index":15270},"line":390,"code":"    it('should parse without encoding', function (done) {\n      var test = request(this.app).post('/');\n      test.set('Content-Type', 'text/plain');\n      test.write(Buffer.from('6e616d6520697320e8aeba', 'hex'));\n      test.expect(200, '\"name is 论\"', done);\n    });","file":"express.text.js","skipped":false,"dir":"test"},{"name":"should support identity encoding","suites":["express.text()","encoding"],"updatePoint":{"line":396,"column":40,"index":15540},"line":396,"code":"    it('should support identity encoding', function (done) {\n      var test = request(this.app).post('/');\n      test.set('Content-Encoding', 'identity');\n      test.set('Content-Type', 'text/plain');\n      test.write(Buffer.from('6e616d6520697320e8aeba', 'hex'));\n      test.expect(200, '\"name is 论\"', done);\n    });","file":"express.text.js","skipped":false,"dir":"test"},{"name":"should support gzip encoding","suites":["express.text()","encoding"],"updatePoint":{"line":403,"column":36,"index":15854},"line":403,"code":"    it('should support gzip encoding', function (done) {\n      var test = request(this.app).post('/');\n      test.set('Content-Encoding', 'gzip');\n      test.set('Content-Type', 'text/plain');\n      test.write(Buffer.from('1f8b080000000000000bcb4bcc4d55c82c5678b16e170072b3e0200b000000', 'hex'));\n      test.expect(200, '\"name is 论\"', done);\n    });","file":"express.text.js","skipped":false,"dir":"test"},{"name":"should support deflate encoding","suites":["express.text()","encoding"],"updatePoint":{"line":410,"column":39,"index":16207},"line":410,"code":"    it('should support deflate encoding', function (done) {\n      var test = request(this.app).post('/');\n      test.set('Content-Encoding', 'deflate');\n      test.set('Content-Type', 'text/plain');\n      test.write(Buffer.from('789ccb4bcc4d55c82c5678b16e17001a6f050e', 'hex'));\n      test.expect(200, '\"name is 论\"', done);\n    });","file":"express.text.js","skipped":false,"dir":"test"},{"name":"should be case-insensitive","suites":["express.text()","encoding"],"updatePoint":{"line":417,"column":34,"index":16534},"line":417,"code":"    it('should be case-insensitive', function (done) {\n      var test = request(this.app).post('/');\n      test.set('Content-Encoding', 'GZIP');\n      test.set('Content-Type', 'text/plain');\n      test.write(Buffer.from('1f8b080000000000000bcb4bcc4d55c82c5678b16e170072b3e0200b000000', 'hex'));\n      test.expect(200, '\"name is 论\"', done);\n    });","file":"express.text.js","skipped":false,"dir":"test"},{"name":"should 415 on unknown encoding","suites":["express.text()","encoding"],"updatePoint":{"line":424,"column":38,"index":16886},"line":424,"code":"    it('should 415 on unknown encoding', function (done) {\n      var test = request(this.app).post('/');\n      test.set('Content-Encoding', 'nulls');\n      test.set('Content-Type', 'text/plain');\n      test.write(Buffer.from('000000000000', 'hex'));\n      test.expect(415, '[encoding.unsupported] unsupported content encoding \"nulls\"', done);\n    });","file":"express.text.js","skipped":false,"dir":"test"},{"name":"should parse x-www-form-urlencoded","suites":["express.urlencoded()"],"updatePoint":{"line":13,"column":40,"index":449},"line":13,"code":"  it('should parse x-www-form-urlencoded', function (done) {\n    request(this.app).post('/').set('Content-Type', 'application/x-www-form-urlencoded').send('user=tobi').expect(200, '{\"user\":\"tobi\"}', done);\n  });","file":"express.urlencoded.js","skipped":false,"dir":"test"},{"name":"should 400 when invalid content-length","suites":["express.urlencoded()"],"updatePoint":{"line":16,"column":44,"index":665},"line":16,"code":"  it('should 400 when invalid content-length', function (done) {\n    var app = express();\n    app.use(function (req, res, next) {\n      req.headers['content-length'] = '20'; // bad length\n      next();\n    });\n    app.use(express.urlencoded());\n    app.post('/', function (req, res) {\n      res.json(req.body);\n    });\n    request(app).post('/').set('Content-Type', 'application/x-www-form-urlencoded').send('str=').expect(400, /content length/, done);\n  });","file":"express.urlencoded.js","skipped":false,"dir":"test"},{"name":"should handle Content-Length: 0","suites":["express.urlencoded()"],"updatePoint":{"line":28,"column":37,"index":1117},"line":28,"code":"  it('should handle Content-Length: 0', function (done) {\n    request(this.app).post('/').set('Content-Type', 'application/x-www-form-urlencoded').set('Content-Length', '0').send('').expect(200, '{}', done);\n  });","file":"express.urlencoded.js","skipped":false,"dir":"test"},{"name":"should handle empty message-body","suites":["express.urlencoded()"],"updatePoint":{"line":31,"column":38,"index":1332},"line":31,"code":"  it('should handle empty message-body', function (done) {\n    request(createApp({\n      limit: '1kb'\n    })).post('/').set('Content-Type', 'application/x-www-form-urlencoded').set('Transfer-Encoding', 'chunked').send('').expect(200, '{}', done);\n  });","file":"express.urlencoded.js","skipped":false,"dir":"test"},{"name":"should 500 if stream not readable","suites":["express.urlencoded()"],"updatePoint":{"line":36,"column":39,"index":1586},"line":36,"code":"  it('should 500 if stream not readable', function (done) {\n    var app = express();\n    app.use(function (req, res, next) {\n      req.on('end', next);\n      req.resume();\n    });\n    app.use(express.urlencoded());\n    app.use(function (err, req, res, next) {\n      res.status(err.status || 500);\n      res.send('[' + err.type + '] ' + err.message);\n    });\n    app.post('/', function (req, res) {\n      res.json(req.body);\n    });\n    request(app).post('/').set('Content-Type', 'application/x-www-form-urlencoded').send('user=tobi').expect(500, '[stream.not.readable] stream is not readable', done);\n  });","file":"express.urlencoded.js","skipped":false,"dir":"test"},{"name":"should handle duplicated middleware","suites":["express.urlencoded()"],"updatePoint":{"line":52,"column":41,"index":2195},"line":52,"code":"  it('should handle duplicated middleware', function (done) {\n    var app = express();\n    app.use(express.urlencoded());\n    app.use(express.urlencoded());\n    app.post('/', function (req, res) {\n      res.json(req.body);\n    });\n    request(app).post('/').set('Content-Type', 'application/x-www-form-urlencoded').send('user=tobi').expect(200, '{\"user\":\"tobi\"}', done);\n  });","file":"express.urlencoded.js","skipped":false,"dir":"test"},{"name":"should parse extended syntax","suites":["express.urlencoded()"],"updatePoint":{"line":61,"column":34,"index":2565},"line":61,"code":"  it('should parse extended syntax', function (done) {\n    request(this.app).post('/').set('Content-Type', 'application/x-www-form-urlencoded').send('user[name][first]=Tobi').expect(200, '{\"user\":{\"name\":{\"first\":\"Tobi\"}}}', done);\n  });","file":"express.urlencoded.js","skipped":false,"dir":"test"},{"name":"should not parse extended syntax","suites":["express.urlencoded()","with extended option","when false"],"updatePoint":{"line":71,"column":42,"index":3007},"line":71,"code":"      it('should not parse extended syntax', function (done) {\n        request(this.app).post('/').set('Content-Type', 'application/x-www-form-urlencoded').send('user[name][first]=Tobi').expect(200, '{\"user[name][first]\":\"Tobi\"}', done);\n      });","file":"express.urlencoded.js","skipped":false,"dir":"test"},{"name":"should parse multiple key instances","suites":["express.urlencoded()","with extended option","when false"],"updatePoint":{"line":74,"column":45,"index":3258},"line":74,"code":"      it('should parse multiple key instances', function (done) {\n        request(this.app).post('/').set('Content-Type', 'application/x-www-form-urlencoded').send('user=Tobi&user=Loki').expect(200, '{\"user\":[\"Tobi\",\"Loki\"]}', done);\n      });","file":"express.urlencoded.js","skipped":false,"dir":"test"},{"name":"should parse multiple key instances","suites":["express.urlencoded()","with extended option","when true"],"updatePoint":{"line":84,"column":45,"index":3655},"line":84,"code":"      it('should parse multiple key instances', function (done) {\n        request(this.app).post('/').set('Content-Type', 'application/x-www-form-urlencoded').send('user=Tobi&user=Loki').expect(200, '{\"user\":[\"Tobi\",\"Loki\"]}', done);\n      });","file":"express.urlencoded.js","skipped":false,"dir":"test"},{"name":"should parse extended syntax","suites":["express.urlencoded()","with extended option","when true"],"updatePoint":{"line":87,"column":38,"index":3892},"line":87,"code":"      it('should parse extended syntax', function (done) {\n        request(this.app).post('/').set('Content-Type', 'application/x-www-form-urlencoded').send('user[name][first]=Tobi').expect(200, '{\"user\":{\"name\":{\"first\":\"Tobi\"}}}', done);\n      });","file":"express.urlencoded.js","skipped":false,"dir":"test"},{"name":"should parse parameters with dots","suites":["express.urlencoded()","with extended option","when true"],"updatePoint":{"line":90,"column":43,"index":4147},"line":90,"code":"      it('should parse parameters with dots', function (done) {\n        request(this.app).post('/').set('Content-Type', 'application/x-www-form-urlencoded').send('user.name=Tobi').expect(200, '{\"user.name\":\"Tobi\"}', done);\n      });","file":"express.urlencoded.js","skipped":false,"dir":"test"},{"name":"should parse fully-encoded extended syntax","suites":["express.urlencoded()","with extended option","when true"],"updatePoint":{"line":93,"column":52,"index":4389},"line":93,"code":"      it('should parse fully-encoded extended syntax', function (done) {\n        request(this.app).post('/').set('Content-Type', 'application/x-www-form-urlencoded').send('user%5Bname%5D%5Bfirst%5D=Tobi').expect(200, '{\"user\":{\"name\":{\"first\":\"Tobi\"}}}', done);\n      });","file":"express.urlencoded.js","skipped":false,"dir":"test"},{"name":"should parse array index notation","suites":["express.urlencoded()","with extended option","when true"],"updatePoint":{"line":96,"column":43,"index":4652},"line":96,"code":"      it('should parse array index notation', function (done) {\n        request(this.app).post('/').set('Content-Type', 'application/x-www-form-urlencoded').send('foo[0]=bar&foo[1]=baz').expect(200, '{\"foo\":[\"bar\",\"baz\"]}', done);\n      });","file":"express.urlencoded.js","skipped":false,"dir":"test"},{"name":"should parse array index notation with large array","suites":["express.urlencoded()","with extended option","when true"],"updatePoint":{"line":99,"column":60,"index":4910},"line":99,"code":"      it('should parse array index notation with large array', function (done) {\n        var str = 'f[0]=0';\n        for (var i = 1; i < 500; i++) {\n          str += '&f[' + i + ']=' + i.toString(16);\n        }\n        request(this.app).post('/').set('Content-Type', 'application/x-www-form-urlencoded').send(str).expect(function (res) {\n          var obj = JSON.parse(res.text);\n          assert.strictEqual(Object.keys(obj).length, 1);\n          assert.strictEqual(Array.isArray(obj.f), true);\n          assert.strictEqual(obj.f.length, 500);\n        }).expect(200, done);\n      });","file":"express.urlencoded.js","skipped":false,"dir":"test"},{"name":"should parse array of objects syntax","suites":["express.urlencoded()","with extended option","when true"],"updatePoint":{"line":111,"column":46,"index":5481},"line":111,"code":"      it('should parse array of objects syntax', function (done) {\n        request(this.app).post('/').set('Content-Type', 'application/x-www-form-urlencoded').send('foo[0][bar]=baz&foo[0][fizz]=buzz&foo[]=done!').expect(200, '{\"foo\":[{\"bar\":\"baz\",\"fizz\":\"buzz\"},\"done!\"]}', done);\n      });","file":"express.urlencoded.js","skipped":false,"dir":"test"},{"name":"should parse deep object","suites":["express.urlencoded()","with extended option","when true"],"updatePoint":{"line":114,"column":34,"index":5761},"line":114,"code":"      it('should parse deep object', function (done) {\n        var str = 'foo';\n        for (var i = 0; i < 500; i++) {\n          str += '[p]';\n        }\n        str += '=bar';\n        request(this.app).post('/').set('Content-Type', 'application/x-www-form-urlencoded').send(str).expect(function (res) {\n          var obj = JSON.parse(res.text);\n          assert.strictEqual(Object.keys(obj).length, 1);\n          assert.strictEqual(typeof obj.foo, 'object');\n          var depth = 0;\n          var ref = obj.foo;\n          while (ref = ref.p) {\n            depth++;\n          }\n          assert.strictEqual(depth, 500);\n        }).expect(200, done);\n      });","file":"express.urlencoded.js","skipped":false,"dir":"test"},{"name":"should not accept content-encoding","suites":["express.urlencoded()","with inflate option","when false"],"updatePoint":{"line":141,"column":44,"index":6640},"line":141,"code":"      it('should not accept content-encoding', function (done) {\n        var test = request(this.app).post('/');\n        test.set('Content-Encoding', 'gzip');\n        test.set('Content-Type', 'application/x-www-form-urlencoded');\n        test.write(Buffer.from('1f8b080000000000000bcb4bcc4db57db16e170099a4bad608000000', 'hex'));\n        test.expect(415, '[encoding.unsupported] content encoding unsupported', done);\n      });","file":"express.urlencoded.js","skipped":false,"dir":"test"},{"name":"should accept content-encoding","suites":["express.urlencoded()","with inflate option","when true"],"updatePoint":{"line":155,"column":40,"index":7215},"line":155,"code":"      it('should accept content-encoding', function (done) {\n        var test = request(this.app).post('/');\n        test.set('Content-Encoding', 'gzip');\n        test.set('Content-Type', 'application/x-www-form-urlencoded');\n        test.write(Buffer.from('1f8b080000000000000bcb4bcc4db57db16e170099a4bad608000000', 'hex'));\n        test.expect(200, '{\"name\":\"论\"}', done);\n      });","file":"express.urlencoded.js","skipped":false,"dir":"test"},{"name":"should 413 when over limit with Content-Length","suites":["express.urlencoded()","with limit option"],"updatePoint":{"line":165,"column":54,"index":7673},"line":165,"code":"    it('should 413 when over limit with Content-Length', function (done) {\n      var buf = Buffer.alloc(1024, '.');\n      request(createApp({\n        limit: '1kb'\n      })).post('/').set('Content-Type', 'application/x-www-form-urlencoded').set('Content-Length', '1028').send('str=' + buf.toString()).expect(413, done);\n    });","file":"express.urlencoded.js","skipped":false,"dir":"test"},{"name":"should 413 when over limit with chunked encoding","suites":["express.urlencoded()","with limit option"],"updatePoint":{"line":171,"column":56,"index":8002},"line":171,"code":"    it('should 413 when over limit with chunked encoding', function (done) {\n      var app = createApp({\n        limit: '1kb'\n      });\n      var buf = Buffer.alloc(1024, '.');\n      var test = request(app).post('/');\n      test.set('Content-Type', 'application/x-www-form-urlencoded');\n      test.set('Transfer-Encoding', 'chunked');\n      test.write('str=');\n      test.write(buf.toString());\n      test.expect(413, done);\n    });","file":"express.urlencoded.js","skipped":false,"dir":"test"},{"name":"should 413 when inflated body over limit","suites":["express.urlencoded()","with limit option"],"updatePoint":{"line":183,"column":48,"index":8427},"line":183,"code":"    it('should 413 when inflated body over limit', function (done) {\n      var app = createApp({\n        limit: '1kb'\n      });\n      var test = request(app).post('/');\n      test.set('Content-Encoding', 'gzip');\n      test.set('Content-Type', 'application/x-www-form-urlencoded');\n      test.write(Buffer.from('1f8b080000000000000a2b2e29b2d51b05a360148c580000a0351f9204040000', 'hex'));\n      test.expect(413, done);\n    });","file":"express.urlencoded.js","skipped":false,"dir":"test"},{"name":"should accept number of bytes","suites":["express.urlencoded()","with limit option"],"updatePoint":{"line":193,"column":37,"index":8842},"line":193,"code":"    it('should accept number of bytes', function (done) {\n      var buf = Buffer.alloc(1024, '.');\n      request(createApp({\n        limit: 1024\n      })).post('/').set('Content-Type', 'application/x-www-form-urlencoded').send('str=' + buf.toString()).expect(413, done);\n    });","file":"express.urlencoded.js","skipped":false,"dir":"test"},{"name":"should not change when options altered","suites":["express.urlencoded()","with limit option"],"updatePoint":{"line":199,"column":46,"index":9130},"line":199,"code":"    it('should not change when options altered', function (done) {\n      var buf = Buffer.alloc(1024, '.');\n      var options = {\n        limit: '1kb'\n      };\n      var app = createApp(options);\n      options.limit = '100kb';\n      request(app).post('/').set('Content-Type', 'application/x-www-form-urlencoded').send('str=' + buf.toString()).expect(413, done);\n    });","file":"express.urlencoded.js","skipped":false,"dir":"test"},{"name":"should not hang response","suites":["express.urlencoded()","with limit option"],"updatePoint":{"line":208,"column":32,"index":9486},"line":208,"code":"    it('should not hang response', function (done) {\n      var app = createApp({\n        limit: '8kb'\n      });\n      var buf = Buffer.alloc(10240, '.');\n      var test = request(app).post('/');\n      test.set('Content-Type', 'application/x-www-form-urlencoded');\n      test.write(buf);\n      test.write(buf);\n      test.write(buf);\n      test.expect(413, done);\n    });","file":"express.urlencoded.js","skipped":false,"dir":"test"},{"name":"should not error when inflating","suites":["express.urlencoded()","with limit option"],"updatePoint":{"line":220,"column":39,"index":9864},"line":220,"code":"    it('should not error when inflating', function (done) {\n      var app = createApp({\n        limit: '1kb'\n      });\n      var test = request(app).post('/');\n      test.set('Content-Encoding', 'gzip');\n      test.set('Content-Type', 'application/x-www-form-urlencoded');\n      test.write(Buffer.from('1f8b080000000000000a2b2e29b2d51b05a360148c580000a0351f92040400', 'hex'));\n      test.expect(413, done);\n    });","file":"express.urlencoded.js","skipped":false,"dir":"test"},{"name":"should reject 0","suites":["express.urlencoded()","with parameterLimit option","with extended: false"],"updatePoint":{"line":233,"column":25,"index":10377},"line":233,"code":"      it('should reject 0', function () {\n        assert.throws(createApp.bind(null, {\n          extended: false,\n          parameterLimit: 0\n        }), /TypeError: option parameterLimit must be a positive number/);\n      });","file":"express.urlencoded.js","skipped":false,"dir":"test"},{"name":"should reject string","suites":["express.urlencoded()","with parameterLimit option","with extended: false"],"updatePoint":{"line":239,"column":30,"index":10609},"line":239,"code":"      it('should reject string', function () {\n        assert.throws(createApp.bind(null, {\n          extended: false,\n          parameterLimit: 'beep'\n        }), /TypeError: option parameterLimit must be a positive number/);\n      });","file":"express.urlencoded.js","skipped":false,"dir":"test"},{"name":"should 413 if over limit","suites":["express.urlencoded()","with parameterLimit option","with extended: false"],"updatePoint":{"line":245,"column":34,"index":10850},"line":245,"code":"      it('should 413 if over limit', function (done) {\n        request(createApp({\n          extended: false,\n          parameterLimit: 10\n        })).post('/').set('Content-Type', 'application/x-www-form-urlencoded').send(createManyParams(11)).expect(413, '[parameters.too.many] too many parameters', done);\n      });","file":"express.urlencoded.js","skipped":false,"dir":"test"},{"name":"should work when at the limit","suites":["express.urlencoded()","with parameterLimit option","with extended: false"],"updatePoint":{"line":251,"column":39,"index":11174},"line":251,"code":"      it('should work when at the limit', function (done) {\n        request(createApp({\n          extended: false,\n          parameterLimit: 10\n        })).post('/').set('Content-Type', 'application/x-www-form-urlencoded').send(createManyParams(10)).expect(expectKeyCount(10)).expect(200, done);\n      });","file":"express.urlencoded.js","skipped":false,"dir":"test"},{"name":"should work if number is floating point","suites":["express.urlencoded()","with parameterLimit option","with extended: false"],"updatePoint":{"line":257,"column":49,"index":11490},"line":257,"code":"      it('should work if number is floating point', function (done) {\n        request(createApp({\n          extended: false,\n          parameterLimit: 10.1\n        })).post('/').set('Content-Type', 'application/x-www-form-urlencoded').send(createManyParams(11)).expect(413, /too many parameters/, done);\n      });","file":"express.urlencoded.js","skipped":false,"dir":"test"},{"name":"should work with large limit","suites":["express.urlencoded()","with parameterLimit option","with extended: false"],"updatePoint":{"line":263,"column":38,"index":11793},"line":263,"code":"      it('should work with large limit', function (done) {\n        request(createApp({\n          extended: false,\n          parameterLimit: 5000\n        })).post('/').set('Content-Type', 'application/x-www-form-urlencoded').send(createManyParams(5000)).expect(expectKeyCount(5000)).expect(200, done);\n      });","file":"express.urlencoded.js","skipped":false,"dir":"test"},{"name":"should work with Infinity limit","suites":["express.urlencoded()","with parameterLimit option","with extended: false"],"updatePoint":{"line":269,"column":41,"index":12107},"line":269,"code":"      it('should work with Infinity limit', function (done) {\n        request(createApp({\n          extended: false,\n          parameterLimit: Infinity\n        })).post('/').set('Content-Type', 'application/x-www-form-urlencoded').send(createManyParams(10000)).expect(expectKeyCount(10000)).expect(200, done);\n      });","file":"express.urlencoded.js","skipped":false,"dir":"test"},{"name":"should reject 0","suites":["express.urlencoded()","with parameterLimit option","with extended: true"],"updatePoint":{"line":277,"column":25,"index":12469},"line":277,"code":"      it('should reject 0', function () {\n        assert.throws(createApp.bind(null, {\n          extended: true,\n          parameterLimit: 0\n        }), /TypeError: option parameterLimit must be a positive number/);\n      });","file":"express.urlencoded.js","skipped":false,"dir":"test"},{"name":"should reject string","suites":["express.urlencoded()","with parameterLimit option","with extended: true"],"updatePoint":{"line":283,"column":30,"index":12700},"line":283,"code":"      it('should reject string', function () {\n        assert.throws(createApp.bind(null, {\n          extended: true,\n          parameterLimit: 'beep'\n        }), /TypeError: option parameterLimit must be a positive number/);\n      });","file":"express.urlencoded.js","skipped":false,"dir":"test"},{"name":"should 413 if over limit","suites":["express.urlencoded()","with parameterLimit option","with extended: true"],"updatePoint":{"line":289,"column":34,"index":12940},"line":289,"code":"      it('should 413 if over limit', function (done) {\n        request(createApp({\n          extended: true,\n          parameterLimit: 10\n        })).post('/').set('Content-Type', 'application/x-www-form-urlencoded').send(createManyParams(11)).expect(413, '[parameters.too.many] too many parameters', done);\n      });","file":"express.urlencoded.js","skipped":false,"dir":"test"},{"name":"should work when at the limit","suites":["express.urlencoded()","with parameterLimit option","with extended: true"],"updatePoint":{"line":295,"column":39,"index":13263},"line":295,"code":"      it('should work when at the limit', function (done) {\n        request(createApp({\n          extended: true,\n          parameterLimit: 10\n        })).post('/').set('Content-Type', 'application/x-www-form-urlencoded').send(createManyParams(10)).expect(expectKeyCount(10)).expect(200, done);\n      });","file":"express.urlencoded.js","skipped":false,"dir":"test"},{"name":"should work if number is floating point","suites":["express.urlencoded()","with parameterLimit option","with extended: true"],"updatePoint":{"line":301,"column":49,"index":13578},"line":301,"code":"      it('should work if number is floating point', function (done) {\n        request(createApp({\n          extended: true,\n          parameterLimit: 10.1\n        })).post('/').set('Content-Type', 'application/x-www-form-urlencoded').send(createManyParams(11)).expect(413, /too many parameters/, done);\n      });","file":"express.urlencoded.js","skipped":false,"dir":"test"},{"name":"should work with large limit","suites":["express.urlencoded()","with parameterLimit option","with extended: true"],"updatePoint":{"line":307,"column":38,"index":13880},"line":307,"code":"      it('should work with large limit', function (done) {\n        request(createApp({\n          extended: true,\n          parameterLimit: 5000\n        })).post('/').set('Content-Type', 'application/x-www-form-urlencoded').send(createManyParams(5000)).expect(expectKeyCount(5000)).expect(200, done);\n      });","file":"express.urlencoded.js","skipped":false,"dir":"test"},{"name":"should work with Infinity limit","suites":["express.urlencoded()","with parameterLimit option","with extended: true"],"updatePoint":{"line":313,"column":41,"index":14193},"line":313,"code":"      it('should work with Infinity limit', function (done) {\n        request(createApp({\n          extended: true,\n          parameterLimit: Infinity\n        })).post('/').set('Content-Type', 'application/x-www-form-urlencoded').send(createManyParams(10000)).expect(expectKeyCount(10000)).expect(200, done);\n      });","file":"express.urlencoded.js","skipped":false,"dir":"test"},{"name":"should parse for custom type","suites":["express.urlencoded()","with type option","when \"application/vnd.x-www-form-urlencoded\""],"updatePoint":{"line":328,"column":38,"index":14779},"line":328,"code":"      it('should parse for custom type', function (done) {\n        request(this.app).post('/').set('Content-Type', 'application/vnd.x-www-form-urlencoded').send('user=tobi').expect(200, '{\"user\":\"tobi\"}', done);\n      });","file":"express.urlencoded.js","skipped":false,"dir":"test"},{"name":"should ignore standard type","suites":["express.urlencoded()","with type option","when \"application/vnd.x-www-form-urlencoded\""],"updatePoint":{"line":331,"column":37,"index":15000},"line":331,"code":"      it('should ignore standard type', function (done) {\n        request(this.app).post('/').set('Content-Type', 'application/x-www-form-urlencoded').send('user=tobi').expect(200, '{}', done);\n      });","file":"express.urlencoded.js","skipped":false,"dir":"test"},{"name":"should parse \"application/x-www-form-urlencoded\"","suites":["express.urlencoded()","with type option","when [\"urlencoded\", \"application/x-pairs\"]"],"updatePoint":{"line":341,"column":58,"index":15440},"line":341,"code":"      it('should parse \"application/x-www-form-urlencoded\"', function (done) {\n        request(this.app).post('/').set('Content-Type', 'application/x-www-form-urlencoded').send('user=tobi').expect(200, '{\"user\":\"tobi\"}', done);\n      });","file":"express.urlencoded.js","skipped":false,"dir":"test"},{"name":"should parse \"application/x-pairs\"","suites":["express.urlencoded()","with type option","when [\"urlencoded\", \"application/x-pairs\"]"],"updatePoint":{"line":344,"column":44,"index":15664},"line":344,"code":"      it('should parse \"application/x-pairs\"', function (done) {\n        request(this.app).post('/').set('Content-Type', 'application/x-pairs').send('user=tobi').expect(200, '{\"user\":\"tobi\"}', done);\n      });","file":"express.urlencoded.js","skipped":false,"dir":"test"},{"name":"should ignore application/x-foo","suites":["express.urlencoded()","with type option","when [\"urlencoded\", \"application/x-pairs\"]"],"updatePoint":{"line":347,"column":41,"index":15871},"line":347,"code":"      it('should ignore application/x-foo', function (done) {\n        request(this.app).post('/').set('Content-Type', 'application/x-foo').send('user=tobi').expect(200, '{}', done);\n      });","file":"express.urlencoded.js","skipped":false,"dir":"test"},{"name":"should parse when truthy value returned","suites":["express.urlencoded()","with type option","when a function"],"updatePoint":{"line":352,"column":49,"index":16125},"line":352,"code":"      it('should parse when truthy value returned', function (done) {\n        var app = createApp({\n          type: accept\n        });\n        function accept(req) {\n          return req.headers['content-type'] === 'application/vnd.something';\n        }\n        request(app).post('/').set('Content-Type', 'application/vnd.something').send('user=tobi').expect(200, '{\"user\":\"tobi\"}', done);\n      });","file":"express.urlencoded.js","skipped":false,"dir":"test"},{"name":"should work without content-type","suites":["express.urlencoded()","with type option","when a function"],"updatePoint":{"line":361,"column":42,"index":16518},"line":361,"code":"      it('should work without content-type', function (done) {\n        var app = createApp({\n          type: accept\n        });\n        function accept(req) {\n          return true;\n        }\n        var test = request(app).post('/');\n        test.write('user=tobi');\n        test.expect(200, '{\"user\":\"tobi\"}', done);\n      });","file":"express.urlencoded.js","skipped":false,"dir":"test"},{"name":"should not invoke without a body","suites":["express.urlencoded()","with type option","when a function"],"updatePoint":{"line":372,"column":42,"index":16847},"line":372,"code":"      it('should not invoke without a body', function (done) {\n        var app = createApp({\n          type: accept\n        });\n        function accept(req) {\n          throw new Error('oops!');\n        }\n        request(app).get('/').expect(404, done);\n      });","file":"express.urlencoded.js","skipped":false,"dir":"test"},{"name":"should assert value if function","suites":["express.urlencoded()","with verify option"],"updatePoint":{"line":384,"column":39,"index":17169},"line":384,"code":"    it('should assert value if function', function () {\n      assert.throws(createApp.bind(null, {\n        verify: 'lol'\n      }), /TypeError: option verify must be function/);\n    });","file":"express.urlencoded.js","skipped":false,"dir":"test"},{"name":"should error from verify","suites":["express.urlencoded()","with verify option"],"updatePoint":{"line":389,"column":32,"index":17347},"line":389,"code":"    it('should error from verify', function (done) {\n      var app = createApp({\n        verify: function (req, res, buf) {\n          if (buf[0] === 0x20) throw new Error('no leading space');\n        }\n      });\n      request(app).post('/').set('Content-Type', 'application/x-www-form-urlencoded').send(' user=tobi').expect(403, '[entity.verify.failed] no leading space', done);\n    });","file":"express.urlencoded.js","skipped":false,"dir":"test"},{"name":"should allow custom codes","suites":["express.urlencoded()","with verify option"],"updatePoint":{"line":397,"column":33,"index":17735},"line":397,"code":"    it('should allow custom codes', function (done) {\n      var app = createApp({\n        verify: function (req, res, buf) {\n          if (buf[0] !== 0x20) return;\n          var err = new Error('no leading space');\n          err.status = 400;\n          throw err;\n        }\n      });\n      request(app).post('/').set('Content-Type', 'application/x-www-form-urlencoded').send(' user=tobi').expect(400, '[entity.verify.failed] no leading space', done);\n    });","file":"express.urlencoded.js","skipped":false,"dir":"test"},{"name":"should allow custom type","suites":["express.urlencoded()","with verify option"],"updatePoint":{"line":408,"column":32,"index":18193},"line":408,"code":"    it('should allow custom type', function (done) {\n      var app = createApp({\n        verify: function (req, res, buf) {\n          if (buf[0] !== 0x20) return;\n          var err = new Error('no leading space');\n          err.type = 'foo.bar';\n          throw err;\n        }\n      });\n      request(app).post('/').set('Content-Type', 'application/x-www-form-urlencoded').send(' user=tobi').expect(403, '[foo.bar] no leading space', done);\n    });","file":"express.urlencoded.js","skipped":false,"dir":"test"},{"name":"should allow pass-through","suites":["express.urlencoded()","with verify option"],"updatePoint":{"line":419,"column":33,"index":18643},"line":419,"code":"    it('should allow pass-through', function (done) {\n      var app = createApp({\n        verify: function (req, res, buf) {\n          if (buf[0] === 0x5b) throw new Error('no arrays');\n        }\n      });\n      request(app).post('/').set('Content-Type', 'application/x-www-form-urlencoded').send('user=tobi').expect(200, '{\"user\":\"tobi\"}', done);\n    });","file":"express.urlencoded.js","skipped":false,"dir":"test"},{"name":"should 415 on unknown charset prior to verify","suites":["express.urlencoded()","with verify option"],"updatePoint":{"line":427,"column":53,"index":19019},"line":427,"code":"    it('should 415 on unknown charset prior to verify', function (done) {\n      var app = createApp({\n        verify: function (req, res, buf) {\n          throw new Error('unexpected verify call');\n        }\n      });\n      var test = request(app).post('/');\n      test.set('Content-Type', 'application/x-www-form-urlencoded; charset=x-bogus');\n      test.write(Buffer.from('00000000', 'hex'));\n      test.expect(415, '[charset.unsupported] unsupported charset \"X-BOGUS\"', done);\n    });","file":"express.urlencoded.js","skipped":false,"dir":"test"},{"name":"should presist store","suites":["express.urlencoded()","with verify option"],"updatePoint":{"line":470,"column":28,"index":20468},"line":470,"code":"    it('should presist store', function (done) {\n      request(this.app).post('/').set('Content-Type', 'application/x-www-form-urlencoded').send('user=tobi').expect(200).expect('x-store-foo', 'bar').expect('{\"user\":\"tobi\"}').end(done);\n    });","file":"express.urlencoded.js","skipped":false,"dir":"test"},{"name":"should presist store when unmatched content-type","suites":["express.urlencoded()","with verify option"],"updatePoint":{"line":473,"column":56,"index":20740},"line":473,"code":"    it('should presist store when unmatched content-type', function (done) {\n      request(this.app).post('/').set('Content-Type', 'application/fizzbuzz').send('buzz').expect(200).expect('x-store-foo', 'bar').expect('{}').end(done);\n    });","file":"express.urlencoded.js","skipped":false,"dir":"test"},{"name":"should presist store when inflated","suites":["express.urlencoded()","with verify option"],"updatePoint":{"line":476,"column":42,"index":20967},"line":476,"code":"    it('should presist store when inflated', function (done) {\n      var test = request(this.app).post('/');\n      test.set('Content-Encoding', 'gzip');\n      test.set('Content-Type', 'application/x-www-form-urlencoded');\n      test.write(Buffer.from('1f8b080000000000000bcb4bcc4db57db16e170099a4bad608000000', 'hex'));\n      test.expect(200);\n      test.expect('x-store-foo', 'bar');\n      test.expect('{\"name\":\"论\"}');\n      test.end(done);\n    });","file":"express.urlencoded.js","skipped":false,"dir":"test"},{"name":"should presist store when inflate error","suites":["express.urlencoded()","with verify option"],"updatePoint":{"line":486,"column":47,"index":21422},"line":486,"code":"    it('should presist store when inflate error', function (done) {\n      var test = request(this.app).post('/');\n      test.set('Content-Encoding', 'gzip');\n      test.set('Content-Type', 'application/x-www-form-urlencoded');\n      test.write(Buffer.from('1f8b080000000000000bcb4bcc4db57db16e170099a4bad6080000', 'hex'));\n      test.expect(400);\n      test.expect('x-store-foo', 'bar');\n      test.end(done);\n    });","file":"express.urlencoded.js","skipped":false,"dir":"test"},{"name":"should presist store when limit exceeded","suites":["express.urlencoded()","with verify option"],"updatePoint":{"line":495,"column":48,"index":21841},"line":495,"code":"    it('should presist store when limit exceeded', function (done) {\n      request(this.app).post('/').set('Content-Type', 'application/x-www-form-urlencoded').send('user=' + Buffer.alloc(1024 * 100, '.').toString()).expect(413).expect('x-store-foo', 'bar').end(done);\n    });","file":"express.urlencoded.js","skipped":false,"dir":"test"},{"name":"should parse utf-8","suites":["express.urlencoded()","charset"],"updatePoint":{"line":503,"column":26,"index":22201},"line":503,"code":"    it('should parse utf-8', function (done) {\n      var test = request(this.app).post('/');\n      test.set('Content-Type', 'application/x-www-form-urlencoded; charset=utf-8');\n      test.write(Buffer.from('6e616d653de8aeba', 'hex'));\n      test.expect(200, '{\"name\":\"论\"}', done);\n    });","file":"express.urlencoded.js","skipped":false,"dir":"test"},{"name":"should parse when content-length != char length","suites":["express.urlencoded()","charset"],"updatePoint":{"line":509,"column":55,"index":22519},"line":509,"code":"    it('should parse when content-length != char length', function (done) {\n      var test = request(this.app).post('/');\n      test.set('Content-Type', 'application/x-www-form-urlencoded; charset=utf-8');\n      test.set('Content-Length', '7');\n      test.write(Buffer.from('746573743dc3a5', 'hex'));\n      test.expect(200, '{\"test\":\"å\"}', done);\n    });","file":"express.urlencoded.js","skipped":false,"dir":"test"},{"name":"should default to utf-8","suites":["express.urlencoded()","charset"],"updatePoint":{"line":516,"column":31,"index":22850},"line":516,"code":"    it('should default to utf-8', function (done) {\n      var test = request(this.app).post('/');\n      test.set('Content-Type', 'application/x-www-form-urlencoded');\n      test.write(Buffer.from('6e616d653de8aeba', 'hex'));\n      test.expect(200, '{\"name\":\"论\"}', done);\n    });","file":"express.urlencoded.js","skipped":false,"dir":"test"},{"name":"should fail on unknown charset","suites":["express.urlencoded()","charset"],"updatePoint":{"line":522,"column":38,"index":23136},"line":522,"code":"    it('should fail on unknown charset', function (done) {\n      var test = request(this.app).post('/');\n      test.set('Content-Type', 'application/x-www-form-urlencoded; charset=koi8-r');\n      test.write(Buffer.from('6e616d653dcec5d4', 'hex'));\n      test.expect(415, '[charset.unsupported] unsupported charset \"KOI8-R\"', done);\n    });","file":"express.urlencoded.js","skipped":false,"dir":"test"},{"name":"should parse without encoding","suites":["express.urlencoded()","encoding"],"updatePoint":{"line":535,"column":37,"index":23612},"line":535,"code":"    it('should parse without encoding', function (done) {\n      var test = request(this.app).post('/');\n      test.set('Content-Type', 'application/x-www-form-urlencoded');\n      test.write(Buffer.from('6e616d653de8aeba', 'hex'));\n      test.expect(200, '{\"name\":\"论\"}', done);\n    });","file":"express.urlencoded.js","skipped":false,"dir":"test"},{"name":"should support identity encoding","suites":["express.urlencoded()","encoding"],"updatePoint":{"line":541,"column":40,"index":23900},"line":541,"code":"    it('should support identity encoding', function (done) {\n      var test = request(this.app).post('/');\n      test.set('Content-Encoding', 'identity');\n      test.set('Content-Type', 'application/x-www-form-urlencoded');\n      test.write(Buffer.from('6e616d653de8aeba', 'hex'));\n      test.expect(200, '{\"name\":\"论\"}', done);\n    });","file":"express.urlencoded.js","skipped":false,"dir":"test"},{"name":"should support gzip encoding","suites":["express.urlencoded()","encoding"],"updatePoint":{"line":548,"column":36,"index":24232},"line":548,"code":"    it('should support gzip encoding', function (done) {\n      var test = request(this.app).post('/');\n      test.set('Content-Encoding', 'gzip');\n      test.set('Content-Type', 'application/x-www-form-urlencoded');\n      test.write(Buffer.from('1f8b080000000000000bcb4bcc4db57db16e170099a4bad608000000', 'hex'));\n      test.expect(200, '{\"name\":\"论\"}', done);\n    });","file":"express.urlencoded.js","skipped":false,"dir":"test"},{"name":"should support deflate encoding","suites":["express.urlencoded()","encoding"],"updatePoint":{"line":555,"column":39,"index":24603},"line":555,"code":"    it('should support deflate encoding', function (done) {\n      var test = request(this.app).post('/');\n      test.set('Content-Encoding', 'deflate');\n      test.set('Content-Type', 'application/x-www-form-urlencoded');\n      test.write(Buffer.from('789ccb4bcc4db57db16e17001068042f', 'hex'));\n      test.expect(200, '{\"name\":\"论\"}', done);\n    });","file":"express.urlencoded.js","skipped":false,"dir":"test"},{"name":"should be case-insensitive","suites":["express.urlencoded()","encoding"],"updatePoint":{"line":562,"column":34,"index":24948},"line":562,"code":"    it('should be case-insensitive', function (done) {\n      var test = request(this.app).post('/');\n      test.set('Content-Encoding', 'GZIP');\n      test.set('Content-Type', 'application/x-www-form-urlencoded');\n      test.write(Buffer.from('1f8b080000000000000bcb4bcc4db57db16e170099a4bad608000000', 'hex'));\n      test.expect(200, '{\"name\":\"论\"}', done);\n    });","file":"express.urlencoded.js","skipped":false,"dir":"test"},{"name":"should 415 on unknown encoding","suites":["express.urlencoded()","encoding"],"updatePoint":{"line":569,"column":38,"index":25318},"line":569,"code":"    it('should 415 on unknown encoding', function (done) {\n      var test = request(this.app).post('/');\n      test.set('Content-Encoding', 'nulls');\n      test.set('Content-Type', 'application/x-www-form-urlencoded');\n      test.write(Buffer.from('000000000000', 'hex'));\n      test.expect(415, '[encoding.unsupported] unsupported content encoding \"nulls\"', done);\n    });","file":"express.urlencoded.js","skipped":false,"dir":"test"},{"name":"should behave like connect","suites":["middleware",".next()"],"updatePoint":{"line":8,"column":34,"index":221},"line":8,"code":"    it('should behave like connect', function (done) {\n      var app = express(),\n        calls = [];\n      app.use(function (req, res, next) {\n        calls.push('one');\n        next();\n      });\n      app.use(function (req, res, next) {\n        calls.push('two');\n        next();\n      });\n      app.use(function (req, res) {\n        var buf = '';\n        res.setHeader('Content-Type', 'application/json');\n        req.setEncoding('utf8');\n        req.on('data', function (chunk) {\n          buf += chunk;\n        });\n        req.on('end', function () {\n          res.end(buf);\n        });\n      });\n      request(app).get('/').set('Content-Type', 'application/json').send('{\"foo\":\"bar\"}').expect('Content-Type', 'application/json').expect(function () {\n        assert.deepEqual(calls, ['one', 'two']);\n      }).expect(200, '{\"foo\":\"bar\"}', done);\n    });","file":"middleware.basic.js","skipped":false,"dir":"test"},{"name":"should fail gracefully","suites":["throw after .end()"],"updatePoint":{"line":6,"column":28,"index":153},"line":6,"code":"  it('should fail gracefully', function (done) {\n    var app = express();\n    app.get('/', function (req, res) {\n      res.end('yay');\n      throw new Error('boom');\n    });\n    request(app).get('/').expect('yay').expect(200, done);\n  });","file":"regression.js","skipped":false,"dir":"test"},{"name":"should return true when Accept is not present","suites":["req",".accepts(type)"],"updatePoint":{"line":7,"column":53,"index":206},"line":7,"code":"    it('should return true when Accept is not present', function (done) {\n      var app = express();\n      app.use(function (req, res, next) {\n        res.end(req.accepts('json') ? 'yes' : 'no');\n      });\n      request(app).get('/').expect('yes', done);\n    });","file":"req.accepts.js","skipped":false,"dir":"test"},{"name":"should return true when present","suites":["req",".accepts(type)"],"updatePoint":{"line":14,"column":39,"index":455},"line":14,"code":"    it('should return true when present', function (done) {\n      var app = express();\n      app.use(function (req, res, next) {\n        res.end(req.accepts('json') ? 'yes' : 'no');\n      });\n      request(app).get('/').set('Accept', 'application/json').expect('yes', done);\n    });","file":"req.accepts.js","skipped":false,"dir":"test"},{"name":"should return false otherwise","suites":["req",".accepts(type)"],"updatePoint":{"line":21,"column":37,"index":736},"line":21,"code":"    it('should return false otherwise', function (done) {\n      var app = express();\n      app.use(function (req, res, next) {\n        res.end(req.accepts('json') ? 'yes' : 'no');\n      });\n      request(app).get('/').set('Accept', 'text/html').expect('no', done);\n    });","file":"req.accepts.js","skipped":false,"dir":"test"},{"name":"should accept an argument list of type names","suites":["req",".accepts(type)"],"updatePoint":{"line":29,"column":50,"index":1028},"line":29,"code":"  it('should accept an argument list of type names', function (done) {\n    var app = express();\n    app.use(function (req, res, next) {\n      res.end(req.accepts('json', 'html'));\n    });\n    request(app).get('/').set('Accept', 'application/json').expect('json', done);\n  });","file":"req.accepts.js","skipped":false,"dir":"test"},{"name":"should return the first when Accept is not present","suites":["req",".accepts(types)"],"updatePoint":{"line":37,"column":58,"index":1356},"line":37,"code":"    it('should return the first when Accept is not present', function (done) {\n      var app = express();\n      app.use(function (req, res, next) {\n        res.end(req.accepts(['json', 'html']));\n      });\n      request(app).get('/').expect('json', done);\n    });","file":"req.accepts.js","skipped":false,"dir":"test"},{"name":"should return the first acceptable type","suites":["req",".accepts(types)"],"updatePoint":{"line":44,"column":47,"index":1609},"line":44,"code":"    it('should return the first acceptable type', function (done) {\n      var app = express();\n      app.use(function (req, res, next) {\n        res.end(req.accepts(['json', 'html']));\n      });\n      request(app).get('/').set('Accept', 'text/html').expect('html', done);\n    });","file":"req.accepts.js","skipped":false,"dir":"test"},{"name":"should return false when no match is made","suites":["req",".accepts(types)"],"updatePoint":{"line":51,"column":49,"index":1891},"line":51,"code":"    it('should return false when no match is made', function (done) {\n      var app = express();\n      app.use(function (req, res, next) {\n        res.end(req.accepts(['text/html', 'application/json']) ? 'yup' : 'nope');\n      });\n      request(app).get('/').set('Accept', 'foo/bar, bar/baz').expect('nope', done);\n    });","file":"req.accepts.js","skipped":false,"dir":"test"},{"name":"should take quality into account","suites":["req",".accepts(types)"],"updatePoint":{"line":58,"column":40,"index":2205},"line":58,"code":"    it('should take quality into account', function (done) {\n      var app = express();\n      app.use(function (req, res, next) {\n        res.end(req.accepts(['text/html', 'application/json']));\n      });\n      request(app).get('/').set('Accept', '*/html; q=.5, application/json').expect('application/json', done);\n    });","file":"req.accepts.js","skipped":false,"dir":"test"},{"name":"should return the first acceptable type with canonical mime types","suites":["req",".accepts(types)"],"updatePoint":{"line":65,"column":73,"index":2561},"line":65,"code":"    it('should return the first acceptable type with canonical mime types', function (done) {\n      var app = express();\n      app.use(function (req, res, next) {\n        res.end(req.accepts(['application/json', 'text/html']));\n      });\n      request(app).get('/').set('Accept', '*/html').expect('text/html', done);\n    });","file":"req.accepts.js","skipped":false,"dir":"test"},{"name":"should return true","suites":["req",".acceptsCharset(type)","when Accept-Charset is not present"],"updatePoint":{"line":8,"column":28,"index":253},"line":8,"code":"      it('should return true', function (done) {\n        var app = express();\n        app.use(function (req, res, next) {\n          res.end(req.acceptsCharset('utf-8') ? 'yes' : 'no');\n        });\n        request(app).get('/').expect('yes', done);\n      });","file":"req.acceptsCharset.js","skipped":false,"dir":"test"},{"name":"should return true","suites":["req",".acceptsCharset(type)","when Accept-Charset is present"],"updatePoint":{"line":17,"column":28,"index":580},"line":17,"code":"      it('should return true', function (done) {\n        var app = express();\n        app.use(function (req, res, next) {\n          res.end(req.acceptsCharset('utf-8') ? 'yes' : 'no');\n        });\n        request(app).get('/').set('Accept-Charset', 'foo, bar, utf-8').expect('yes', done);\n      });","file":"req.acceptsCharset.js","skipped":false,"dir":"test"},{"name":"should return false otherwise","suites":["req",".acceptsCharset(type)","when Accept-Charset is present"],"updatePoint":{"line":24,"column":39,"index":890},"line":24,"code":"      it('should return false otherwise', function (done) {\n        var app = express();\n        app.use(function (req, res, next) {\n          res.end(req.acceptsCharset('utf-8') ? 'yes' : 'no');\n        });\n        request(app).get('/').set('Accept-Charset', 'foo, bar').expect('no', done);\n      });","file":"req.acceptsCharset.js","skipped":false,"dir":"test"},{"name":"should return true","suites":["req",".acceptsCharsets(type)","when Accept-Charset is not present"],"updatePoint":{"line":8,"column":28,"index":254},"line":8,"code":"      it('should return true', function (done) {\n        var app = express();\n        app.use(function (req, res, next) {\n          res.end(req.acceptsCharsets('utf-8') ? 'yes' : 'no');\n        });\n        request(app).get('/').expect('yes', done);\n      });","file":"req.acceptsCharsets.js","skipped":false,"dir":"test"},{"name":"should return true","suites":["req",".acceptsCharsets(type)","when Accept-Charset is present"],"updatePoint":{"line":17,"column":28,"index":582},"line":17,"code":"      it('should return true', function (done) {\n        var app = express();\n        app.use(function (req, res, next) {\n          res.end(req.acceptsCharsets('utf-8') ? 'yes' : 'no');\n        });\n        request(app).get('/').set('Accept-Charset', 'foo, bar, utf-8').expect('yes', done);\n      });","file":"req.acceptsCharsets.js","skipped":false,"dir":"test"},{"name":"should return false otherwise","suites":["req",".acceptsCharsets(type)","when Accept-Charset is present"],"updatePoint":{"line":24,"column":39,"index":893},"line":24,"code":"      it('should return false otherwise', function (done) {\n        var app = express();\n        app.use(function (req, res, next) {\n          res.end(req.acceptsCharsets('utf-8') ? 'yes' : 'no');\n        });\n        request(app).get('/').set('Accept-Charset', 'foo, bar').expect('no', done);\n      });","file":"req.acceptsCharsets.js","skipped":false,"dir":"test"},{"name":"should return encoding if accepted","suites":["req",".acceptsEncoding"],"updatePoint":{"line":7,"column":42,"index":197},"line":7,"code":"    it('should return encoding if accepted', function (done) {\n      var app = express();\n      app.get('/', function (req, res) {\n        res.send({\n          gzip: req.acceptsEncoding('gzip'),\n          deflate: req.acceptsEncoding('deflate')\n        });\n      });\n      request(app).get('/').set('Accept-Encoding', ' gzip, deflate').expect(200, {\n        gzip: 'gzip',\n        deflate: 'deflate'\n      }, done);\n    });","file":"req.acceptsEncoding.js","skipped":false,"dir":"test"},{"name":"should be false if encoding not accepted","suites":["req",".acceptsEncoding"],"updatePoint":{"line":20,"column":48,"index":626},"line":20,"code":"    it('should be false if encoding not accepted', function (done) {\n      var app = express();\n      app.get('/', function (req, res) {\n        res.send({\n          bogus: req.acceptsEncoding('bogus')\n        });\n      });\n      request(app).get('/').set('Accept-Encoding', ' gzip, deflate').expect(200, {\n        bogus: false\n      }, done);\n    });","file":"req.acceptsEncoding.js","skipped":false,"dir":"test"},{"name":"should return encoding if accepted","suites":["req",".acceptsEncodings"],"updatePoint":{"line":7,"column":42,"index":198},"line":7,"code":"    it('should return encoding if accepted', function (done) {\n      var app = express();\n      app.get('/', function (req, res) {\n        res.send({\n          gzip: req.acceptsEncodings('gzip'),\n          deflate: req.acceptsEncodings('deflate')\n        });\n      });\n      request(app).get('/').set('Accept-Encoding', ' gzip, deflate').expect(200, {\n        gzip: 'gzip',\n        deflate: 'deflate'\n      }, done);\n    });","file":"req.acceptsEncodings.js","skipped":false,"dir":"test"},{"name":"should be false if encoding not accepted","suites":["req",".acceptsEncodings"],"updatePoint":{"line":20,"column":48,"index":629},"line":20,"code":"    it('should be false if encoding not accepted', function (done) {\n      var app = express();\n      app.get('/', function (req, res) {\n        res.send({\n          bogus: req.acceptsEncodings('bogus')\n        });\n      });\n      request(app).get('/').set('Accept-Encoding', ' gzip, deflate').expect(200, {\n        bogus: false\n      }, done);\n    });","file":"req.acceptsEncodings.js","skipped":false,"dir":"test"},{"name":"should return language if accepted","suites":["req",".acceptsLanguage"],"updatePoint":{"line":7,"column":42,"index":197},"line":7,"code":"    it('should return language if accepted', function (done) {\n      var app = express();\n      app.get('/', function (req, res) {\n        res.send({\n          'en-us': req.acceptsLanguage('en-us'),\n          en: req.acceptsLanguage('en')\n        });\n      });\n      request(app).get('/').set('Accept-Language', 'en;q=.5, en-us').expect(200, {\n        'en-us': 'en-us',\n        en: 'en'\n      }, done);\n    });","file":"req.acceptsLanguage.js","skipped":false,"dir":"test"},{"name":"should be false if language not accepted","suites":["req",".acceptsLanguage"],"updatePoint":{"line":20,"column":48,"index":614},"line":20,"code":"    it('should be false if language not accepted', function (done) {\n      var app = express();\n      app.get('/', function (req, res) {\n        res.send({\n          es: req.acceptsLanguage('es')\n        });\n      });\n      request(app).get('/').set('Accept-Language', 'en;q=.5, en-us').expect(200, {\n        es: false\n      }, done);\n    });","file":"req.acceptsLanguage.js","skipped":false,"dir":"test"},{"name":"should always return language","suites":["req",".acceptsLanguage","when Accept-Language is not present"],"updatePoint":{"line":32,"column":39,"index":1014},"line":32,"code":"      it('should always return language', function (done) {\n        var app = express();\n        app.get('/', function (req, res) {\n          res.send({\n            en: req.acceptsLanguage('en'),\n            es: req.acceptsLanguage('es'),\n            jp: req.acceptsLanguage('jp')\n          });\n        });\n        request(app).get('/').expect(200, {\n          en: 'en',\n          es: 'es',\n          jp: 'jp'\n        }, done);\n      });","file":"req.acceptsLanguage.js","skipped":false,"dir":"test"},{"name":"should return language if accepted","suites":["req",".acceptsLanguages"],"updatePoint":{"line":7,"column":42,"index":198},"line":7,"code":"    it('should return language if accepted', function (done) {\n      var app = express();\n      app.get('/', function (req, res) {\n        res.send({\n          'en-us': req.acceptsLanguages('en-us'),\n          en: req.acceptsLanguages('en')\n        });\n      });\n      request(app).get('/').set('Accept-Language', 'en;q=.5, en-us').expect(200, {\n        'en-us': 'en-us',\n        en: 'en'\n      }, done);\n    });","file":"req.acceptsLanguages.js","skipped":false,"dir":"test"},{"name":"should be false if language not accepted","suites":["req",".acceptsLanguages"],"updatePoint":{"line":20,"column":48,"index":617},"line":20,"code":"    it('should be false if language not accepted', function (done) {\n      var app = express();\n      app.get('/', function (req, res) {\n        res.send({\n          es: req.acceptsLanguages('es')\n        });\n      });\n      request(app).get('/').set('Accept-Language', 'en;q=.5, en-us').expect(200, {\n        es: false\n      }, done);\n    });","file":"req.acceptsLanguages.js","skipped":false,"dir":"test"},{"name":"should always return language","suites":["req",".acceptsLanguages","when Accept-Language is not present"],"updatePoint":{"line":32,"column":39,"index":1018},"line":32,"code":"      it('should always return language', function (done) {\n        var app = express();\n        app.get('/', function (req, res) {\n          res.send({\n            en: req.acceptsLanguages('en'),\n            es: req.acceptsLanguages('es'),\n            jp: req.acceptsLanguages('jp')\n          });\n        });\n        request(app).get('/').expect(200, {\n          en: 'en',\n          es: 'es',\n          jp: 'jp'\n        }, done);\n      });","file":"req.acceptsLanguages.js","skipped":false,"dir":"test"},{"name":"should be empty for top-level route","suites":["req",".baseUrl"],"updatePoint":{"line":7,"column":43,"index":191},"line":7,"code":"    it('should be empty for top-level route', function (done) {\n      var app = express();\n      app.get('/:a', function (req, res) {\n        res.end(req.baseUrl);\n      });\n      request(app).get('/foo').expect(200, '', done);\n    });","file":"req.baseUrl.js","skipped":false,"dir":"test"},{"name":"should contain lower path","suites":["req",".baseUrl"],"updatePoint":{"line":14,"column":33,"index":417},"line":14,"code":"    it('should contain lower path', function (done) {\n      var app = express();\n      var sub = express.Router();\n      sub.get('/:b', function (req, res) {\n        res.end(req.baseUrl);\n      });\n      app.use('/:a', sub);\n      request(app).get('/foo/bar').expect(200, '/foo', done);\n    });","file":"req.baseUrl.js","skipped":false,"dir":"test"},{"name":"should contain full lower path","suites":["req",".baseUrl"],"updatePoint":{"line":23,"column":38,"index":717},"line":23,"code":"    it('should contain full lower path', function (done) {\n      var app = express();\n      var sub1 = express.Router();\n      var sub2 = express.Router();\n      var sub3 = express.Router();\n      sub3.get('/:d', function (req, res) {\n        res.end(req.baseUrl);\n      });\n      sub2.use('/:c', sub3);\n      sub1.use('/:b', sub2);\n      app.use('/:a', sub1);\n      request(app).get('/foo/bar/baz/zed').expect(200, '/foo/bar/baz', done);\n    });","file":"req.baseUrl.js","skipped":false,"dir":"test"},{"name":"should travel through routers correctly","suites":["req",".baseUrl"],"updatePoint":{"line":36,"column":47,"index":1173},"line":36,"code":"    it('should travel through routers correctly', function (done) {\n      var urls = [];\n      var app = express();\n      var sub1 = express.Router();\n      var sub2 = express.Router();\n      var sub3 = express.Router();\n      sub3.get('/:d', function (req, res, next) {\n        urls.push('0@' + req.baseUrl);\n        next();\n      });\n      sub2.use('/:c', sub3);\n      sub1.use('/', function (req, res, next) {\n        urls.push('1@' + req.baseUrl);\n        next();\n      });\n      sub1.use('/bar', sub2);\n      sub1.use('/bar', function (req, res, next) {\n        urls.push('2@' + req.baseUrl);\n        next();\n      });\n      app.use(function (req, res, next) {\n        urls.push('3@' + req.baseUrl);\n        next();\n      });\n      app.use('/:a', sub1);\n      app.use(function (req, res, next) {\n        urls.push('4@' + req.baseUrl);\n        res.end(urls.join(','));\n      });\n      request(app).get('/foo/bar/baz/zed').expect(200, '3@,1@/foo,0@/foo/bar/baz,2@/foo/bar,4@', done);\n    });","file":"req.baseUrl.js","skipped":false,"dir":"test"},{"name":"should return true when the resource is not modified","suites":["req",".fresh"],"updatePoint":{"line":7,"column":60,"index":205},"line":7,"code":"    it('should return true when the resource is not modified', function (done) {\n      var app = express();\n      var etag = '\"12345\"';\n      app.use(function (req, res) {\n        res.set('ETag', etag);\n        res.send(req.fresh);\n      });\n      request(app).get('/').set('If-None-Match', etag).expect(304, done);\n    });","file":"req.fresh.js","skipped":false,"dir":"test"},{"name":"should return false when the resource is modified","suites":["req",".fresh"],"updatePoint":{"line":16,"column":57,"index":526},"line":16,"code":"    it('should return false when the resource is modified', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.set('ETag', '\"123\"');\n        res.send(req.fresh);\n      });\n      request(app).get('/').set('If-None-Match', '\"12345\"').expect(200, 'false', done);\n    });","file":"req.fresh.js","skipped":false,"dir":"test"},{"name":"should return false without response headers","suites":["req",".fresh"],"updatePoint":{"line":24,"column":52,"index":831},"line":24,"code":"    it('should return false without response headers', function (done) {\n      var app = express();\n      app.disable('x-powered-by');\n      app.use(function (req, res) {\n        res.send(req.fresh);\n      });\n      request(app).get('/').expect(200, 'false', done);\n    });","file":"req.fresh.js","skipped":false,"dir":"test"},{"name":"should return the header field value","suites":["req",".get(field)"],"updatePoint":{"line":8,"column":44,"index":224},"line":8,"code":"    it('should return the header field value', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        assert(req.get('Something-Else') === undefined);\n        res.end(req.get('Content-Type'));\n      });\n      request(app).post('/').set('Content-Type', 'application/json').expect('application/json', done);\n    });","file":"req.get.js","skipped":false,"dir":"test"},{"name":"should special-case Referer","suites":["req",".get(field)"],"updatePoint":{"line":16,"column":35,"index":563},"line":16,"code":"    it('should special-case Referer', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.end(req.get('Referer'));\n      });\n      request(app).post('/').set('Referrer', 'http://foobar.com').expect('http://foobar.com', done);\n    });","file":"req.get.js","skipped":false,"dir":"test"},{"name":"should throw missing header name","suites":["req",".get(field)"],"updatePoint":{"line":23,"column":40,"index":843},"line":23,"code":"    it('should throw missing header name', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.end(req.get());\n      });\n      request(app).get('/').expect(500, /TypeError: name argument is required to req.get/, done);\n    });","file":"req.get.js","skipped":false,"dir":"test"},{"name":"should throw for non-string header name","suites":["req",".get(field)"],"updatePoint":{"line":30,"column":47,"index":1118},"line":30,"code":"    it('should throw for non-string header name', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.end(req.get(42));\n      });\n      request(app).get('/').expect(500, /TypeError: name must be a string to req.get/, done);\n    });","file":"req.get.js","skipped":false,"dir":"test"},{"name":"should return the Host when present","suites":["req",".host"],"updatePoint":{"line":7,"column":43,"index":187},"line":7,"code":"    it('should return the Host when present', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.end(req.host);\n      });\n      request(app).post('/').set('Host', 'example.com').expect('example.com', done);\n    });","file":"req.host.js","skipped":false,"dir":"test"},{"name":"should strip port number","suites":["req",".host"],"updatePoint":{"line":14,"column":32,"index":433},"line":14,"code":"    it('should strip port number', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.end(req.host);\n      });\n      request(app).post('/').set('Host', 'example.com:3000').expect('example.com', done);\n    });","file":"req.host.js","skipped":false,"dir":"test"},{"name":"should return undefined otherwise","suites":["req",".host"],"updatePoint":{"line":21,"column":41,"index":693},"line":21,"code":"    it('should return undefined otherwise', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        req.headers.host = null;\n        res.end(String(req.host));\n      });\n      request(app).post('/').expect('undefined', done);\n    });","file":"req.host.js","skipped":false,"dir":"test"},{"name":"should work with IPv6 Host","suites":["req",".host"],"updatePoint":{"line":29,"column":34,"index":953},"line":29,"code":"    it('should work with IPv6 Host', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.end(req.host);\n      });\n      request(app).post('/').set('Host', '[::1]').expect('[::1]', done);\n    });","file":"req.host.js","skipped":false,"dir":"test"},{"name":"should work with IPv6 Host and port","suites":["req",".host"],"updatePoint":{"line":36,"column":43,"index":1198},"line":36,"code":"    it('should work with IPv6 Host and port', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.end(req.host);\n      });\n      request(app).post('/').set('Host', '[::1]:3000').expect('[::1]', done);\n    });","file":"req.host.js","skipped":false,"dir":"test"},{"name":"should respect X-Forwarded-Host","suites":["req",".host","when \"trust proxy\" is enabled"],"updatePoint":{"line":44,"column":41,"index":1506},"line":44,"code":"      it('should respect X-Forwarded-Host', function (done) {\n        var app = express();\n        app.enable('trust proxy');\n        app.use(function (req, res) {\n          res.end(req.host);\n        });\n        request(app).get('/').set('Host', 'localhost').set('X-Forwarded-Host', 'example.com').expect('example.com', done);\n      });","file":"req.host.js","skipped":false,"dir":"test"},{"name":"should ignore X-Forwarded-Host if socket addr not trusted","suites":["req",".host","when \"trust proxy\" is enabled"],"updatePoint":{"line":52,"column":67,"index":1870},"line":52,"code":"      it('should ignore X-Forwarded-Host if socket addr not trusted', function (done) {\n        var app = express();\n        app.set('trust proxy', '10.0.0.1');\n        app.use(function (req, res) {\n          res.end(req.host);\n        });\n        request(app).get('/').set('Host', 'localhost').set('X-Forwarded-Host', 'example.com').expect('localhost', done);\n      });","file":"req.host.js","skipped":false,"dir":"test"},{"name":"should default to Host","suites":["req",".host","when \"trust proxy\" is enabled"],"updatePoint":{"line":60,"column":32,"index":2206},"line":60,"code":"      it('should default to Host', function (done) {\n        var app = express();\n        app.enable('trust proxy');\n        app.use(function (req, res) {\n          res.end(req.host);\n        });\n        request(app).get('/').set('Host', 'example.com').expect('example.com', done);\n      });","file":"req.host.js","skipped":false,"dir":"test"},{"name":"should respect X-Forwarded-Host","suites":["req",".host","when \"trust proxy\" is enabled","when trusting hop count"],"updatePoint":{"line":69,"column":43,"index":2565},"line":69,"code":"        it('should respect X-Forwarded-Host', function (done) {\n          var app = express();\n          app.set('trust proxy', 1);\n          app.use(function (req, res) {\n            res.end(req.host);\n          });\n          request(app).get('/').set('Host', 'localhost').set('X-Forwarded-Host', 'example.com').expect('example.com', done);\n        });","file":"req.host.js","skipped":false,"dir":"test"},{"name":"should ignore X-Forwarded-Host","suites":["req",".host","when \"trust proxy\" is disabled"],"updatePoint":{"line":80,"column":40,"index":2995},"line":80,"code":"      it('should ignore X-Forwarded-Host', function (done) {\n        var app = express();\n        app.use(function (req, res) {\n          res.end(req.host);\n        });\n        request(app).get('/').set('Host', 'localhost').set('X-Forwarded-Host', 'evil').expect('localhost', done);\n      });","file":"req.host.js","skipped":false,"dir":"test"},{"name":"should return the Host when present","suites":["req",".hostname"],"updatePoint":{"line":7,"column":43,"index":191},"line":7,"code":"    it('should return the Host when present', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.end(req.hostname);\n      });\n      request(app).post('/').set('Host', 'example.com').expect('example.com', done);\n    });","file":"req.hostname.js","skipped":false,"dir":"test"},{"name":"should strip port number","suites":["req",".hostname"],"updatePoint":{"line":14,"column":32,"index":441},"line":14,"code":"    it('should strip port number', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.end(req.hostname);\n      });\n      request(app).post('/').set('Host', 'example.com:3000').expect('example.com', done);\n    });","file":"req.hostname.js","skipped":false,"dir":"test"},{"name":"should return undefined otherwise","suites":["req",".hostname"],"updatePoint":{"line":21,"column":41,"index":705},"line":21,"code":"    it('should return undefined otherwise', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        req.headers.host = null;\n        res.end(String(req.hostname));\n      });\n      request(app).post('/').expect('undefined', done);\n    });","file":"req.hostname.js","skipped":false,"dir":"test"},{"name":"should work with IPv6 Host","suites":["req",".hostname"],"updatePoint":{"line":29,"column":34,"index":969},"line":29,"code":"    it('should work with IPv6 Host', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.end(req.hostname);\n      });\n      request(app).post('/').set('Host', '[::1]').expect('[::1]', done);\n    });","file":"req.hostname.js","skipped":false,"dir":"test"},{"name":"should work with IPv6 Host and port","suites":["req",".hostname"],"updatePoint":{"line":36,"column":43,"index":1218},"line":36,"code":"    it('should work with IPv6 Host and port', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.end(req.hostname);\n      });\n      request(app).post('/').set('Host', '[::1]:3000').expect('[::1]', done);\n    });","file":"req.hostname.js","skipped":false,"dir":"test"},{"name":"should respect X-Forwarded-Host","suites":["req",".hostname","when \"trust proxy\" is enabled"],"updatePoint":{"line":44,"column":41,"index":1530},"line":44,"code":"      it('should respect X-Forwarded-Host', function (done) {\n        var app = express();\n        app.enable('trust proxy');\n        app.use(function (req, res) {\n          res.end(req.hostname);\n        });\n        request(app).get('/').set('Host', 'localhost').set('X-Forwarded-Host', 'example.com:3000').expect('example.com', done);\n      });","file":"req.hostname.js","skipped":false,"dir":"test"},{"name":"should ignore X-Forwarded-Host if socket addr not trusted","suites":["req",".hostname","when \"trust proxy\" is enabled"],"updatePoint":{"line":52,"column":67,"index":1903},"line":52,"code":"      it('should ignore X-Forwarded-Host if socket addr not trusted', function (done) {\n        var app = express();\n        app.set('trust proxy', '10.0.0.1');\n        app.use(function (req, res) {\n          res.end(req.hostname);\n        });\n        request(app).get('/').set('Host', 'localhost').set('X-Forwarded-Host', 'example.com').expect('localhost', done);\n      });","file":"req.hostname.js","skipped":false,"dir":"test"},{"name":"should default to Host","suites":["req",".hostname","when \"trust proxy\" is enabled"],"updatePoint":{"line":60,"column":32,"index":2243},"line":60,"code":"      it('should default to Host', function (done) {\n        var app = express();\n        app.enable('trust proxy');\n        app.use(function (req, res) {\n          res.end(req.hostname);\n        });\n        request(app).get('/').set('Host', 'example.com').expect('example.com', done);\n      });","file":"req.hostname.js","skipped":false,"dir":"test"},{"name":"should use the first value","suites":["req",".hostname","when \"trust proxy\" is enabled","when multiple X-Forwarded-Host"],"updatePoint":{"line":69,"column":38,"index":2608},"line":69,"code":"        it('should use the first value', function (done) {\n          var app = express();\n          app.enable('trust proxy');\n          app.use(function (req, res) {\n            res.send(req.hostname);\n          });\n          request(app).get('/').set('Host', 'localhost').set('X-Forwarded-Host', 'example.com, foobar.com').expect(200, 'example.com', done);\n        });","file":"req.hostname.js","skipped":false,"dir":"test"},{"name":"should remove OWS around comma","suites":["req",".hostname","when \"trust proxy\" is enabled","when multiple X-Forwarded-Host"],"updatePoint":{"line":77,"column":42,"index":2983},"line":77,"code":"        it('should remove OWS around comma', function (done) {\n          var app = express();\n          app.enable('trust proxy');\n          app.use(function (req, res) {\n            res.send(req.hostname);\n          });\n          request(app).get('/').set('Host', 'localhost').set('X-Forwarded-Host', 'example.com , foobar.com').expect(200, 'example.com', done);\n        });","file":"req.hostname.js","skipped":false,"dir":"test"},{"name":"should strip port number","suites":["req",".hostname","when \"trust proxy\" is enabled","when multiple X-Forwarded-Host"],"updatePoint":{"line":85,"column":36,"index":3353},"line":85,"code":"        it('should strip port number', function (done) {\n          var app = express();\n          app.enable('trust proxy');\n          app.use(function (req, res) {\n            res.send(req.hostname);\n          });\n          request(app).get('/').set('Host', 'localhost').set('X-Forwarded-Host', 'example.com:8080 , foobar.com:8888').expect(200, 'example.com', done);\n        });","file":"req.hostname.js","skipped":false,"dir":"test"},{"name":"should ignore X-Forwarded-Host","suites":["req",".hostname","when \"trust proxy\" is disabled"],"updatePoint":{"line":96,"column":40,"index":3816},"line":96,"code":"      it('should ignore X-Forwarded-Host', function (done) {\n        var app = express();\n        app.use(function (req, res) {\n          res.end(req.hostname);\n        });\n        request(app).get('/').set('Host', 'localhost').set('X-Forwarded-Host', 'evil').expect('localhost', done);\n      });","file":"req.hostname.js","skipped":false,"dir":"test"},{"name":"should return the client addr","suites":["req",".ip","when X-Forwarded-For is present","when \"trust proxy\" is enabled"],"updatePoint":{"line":9,"column":41,"index":307},"line":9,"code":"        it('should return the client addr', function (done) {\n          var app = express();\n          app.enable('trust proxy');\n          app.use(function (req, res, next) {\n            res.send(req.ip);\n          });\n          request(app).get('/').set('X-Forwarded-For', 'client, p1, p2').expect('client', done);\n        });","file":"req.ip.js","skipped":false,"dir":"test"},{"name":"should return the addr after trusted proxy based on count","suites":["req",".ip","when X-Forwarded-For is present","when \"trust proxy\" is enabled"],"updatePoint":{"line":17,"column":69,"index":664},"line":17,"code":"        it('should return the addr after trusted proxy based on count', function (done) {\n          var app = express();\n          app.set('trust proxy', 2);\n          app.use(function (req, res, next) {\n            res.send(req.ip);\n          });\n          request(app).get('/').set('X-Forwarded-For', 'client, p1, p2').expect('p1', done);\n        });","file":"req.ip.js","skipped":false,"dir":"test"},{"name":"should return the addr after trusted proxy based on list","suites":["req",".ip","when X-Forwarded-For is present","when \"trust proxy\" is enabled"],"updatePoint":{"line":25,"column":68,"index":1016},"line":25,"code":"        it('should return the addr after trusted proxy based on list', function (done) {\n          var app = express();\n          app.set('trust proxy', '10.0.0.1, 10.0.0.2, 127.0.0.1, ::1');\n          app.get('/', function (req, res) {\n            res.send(req.ip);\n          });\n          request(app).get('/').set('X-Forwarded-For', '10.0.0.2, 10.0.0.3, 10.0.0.1', '10.0.0.4').expect('10.0.0.3', done);\n        });","file":"req.ip.js","skipped":false,"dir":"test"},{"name":"should return the addr after trusted proxy, from sub app","suites":["req",".ip","when X-Forwarded-For is present","when \"trust proxy\" is enabled"],"updatePoint":{"line":33,"column":68,"index":1434},"line":33,"code":"        it('should return the addr after trusted proxy, from sub app', function (done) {\n          var app = express();\n          var sub = express();\n          app.set('trust proxy', 2);\n          app.use(sub);\n          sub.use(function (req, res, next) {\n            res.send(req.ip);\n          });\n          request(app).get('/').set('X-Forwarded-For', 'client, p1, p2').expect(200, 'p1', done);\n        });","file":"req.ip.js","skipped":false,"dir":"test"},{"name":"should return the remote address","suites":["req",".ip","when X-Forwarded-For is present","when \"trust proxy\" is disabled"],"updatePoint":{"line":45,"column":44,"index":1895},"line":45,"code":"        it('should return the remote address', function (done) {\n          var app = express();\n          app.use(function (req, res, next) {\n            res.send(req.ip);\n          });\n          var test = request(app).get('/');\n          test.set('X-Forwarded-For', 'client, p1, p2');\n          test.expect(200, getExpectedClientAddress(test._server), done);\n        });","file":"req.ip.js","skipped":false,"dir":"test"},{"name":"should return the remote address","suites":["req",".ip","when X-Forwarded-For is not present"],"updatePoint":{"line":57,"column":42,"index":2350},"line":57,"code":"      it('should return the remote address', function (done) {\n        var app = express();\n        app.enable('trust proxy');\n        app.use(function (req, res, next) {\n          res.send(req.ip);\n        });\n        var test = request(app).get('/');\n        test.expect(200, getExpectedClientAddress(test._server), done);\n      });","file":"req.ip.js","skipped":false,"dir":"test"},{"name":"should return an array of the specified addresses","suites":["req",".ips","when X-Forwarded-For is present","when \"trust proxy\" is enabled"],"updatePoint":{"line":9,"column":61,"index":328},"line":9,"code":"        it('should return an array of the specified addresses', function (done) {\n          var app = express();\n          app.enable('trust proxy');\n          app.use(function (req, res, next) {\n            res.send(req.ips);\n          });\n          request(app).get('/').set('X-Forwarded-For', 'client, p1, p2').expect('[\"client\",\"p1\",\"p2\"]', done);\n        });","file":"req.ips.js","skipped":false,"dir":"test"},{"name":"should stop at first untrusted","suites":["req",".ips","when X-Forwarded-For is present","when \"trust proxy\" is enabled"],"updatePoint":{"line":17,"column":42,"index":673},"line":17,"code":"        it('should stop at first untrusted', function (done) {\n          var app = express();\n          app.set('trust proxy', 2);\n          app.use(function (req, res, next) {\n            res.send(req.ips);\n          });\n          request(app).get('/').set('X-Forwarded-For', 'client, p1, p2').expect('[\"p1\",\"p2\"]', done);\n        });","file":"req.ips.js","skipped":false,"dir":"test"},{"name":"should return an empty array","suites":["req",".ips","when X-Forwarded-For is present","when \"trust proxy\" is disabled"],"updatePoint":{"line":27,"column":40,"index":1080},"line":27,"code":"        it('should return an empty array', function (done) {\n          var app = express();\n          app.use(function (req, res, next) {\n            res.send(req.ips);\n          });\n          request(app).get('/').set('X-Forwarded-For', 'client, p1, p2').expect('[]', done);\n        });","file":"req.ips.js","skipped":false,"dir":"test"},{"name":"should return []","suites":["req",".ips","when X-Forwarded-For is not present"],"updatePoint":{"line":37,"column":26,"index":1438},"line":37,"code":"      it('should return []', function (done) {\n        var app = express();\n        app.use(function (req, res, next) {\n          res.send(req.ips);\n        });\n        request(app).get('/').expect('[]', done);\n      });","file":"req.ips.js","skipped":false,"dir":"test"},{"name":"should return the type when matching","suites":["req.is()","when given a mime type"],"updatePoint":{"line":7,"column":44,"index":211},"line":7,"code":"    it('should return the type when matching', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.json(req.is('application/json'));\n      });\n      request(app).post('/').type('application/json').send('{}').expect(200, '\"application/json\"', done);\n    });","file":"req.is.js","skipped":false,"dir":"test"},{"name":"should return false when not matching","suites":["req.is()","when given a mime type"],"updatePoint":{"line":14,"column":45,"index":510},"line":14,"code":"    it('should return false when not matching', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.json(req.is('image/jpeg'));\n      });\n      request(app).post('/').type('application/json').send('{}').expect(200, 'false', done);\n    });","file":"req.is.js","skipped":false,"dir":"test"},{"name":"should ignore charset","suites":["req.is()","when given a mime type"],"updatePoint":{"line":21,"column":29,"index":774},"line":21,"code":"    it('should ignore charset', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.json(req.is('application/json'));\n      });\n      request(app).post('/').type('application/json; charset=UTF-8').send('{}').expect(200, '\"application/json\"', done);\n    });","file":"req.is.js","skipped":false,"dir":"test"},{"name":"should return false","suites":["req.is()","when content-type is not present"],"updatePoint":{"line":30,"column":27,"index":1137},"line":30,"code":"    it('should return false', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.json(req.is('application/json'));\n      });\n      request(app).post('/').send('{}').expect(200, 'false', done);\n    });","file":"req.is.js","skipped":false,"dir":"test"},{"name":"should lookup the mime type","suites":["req.is()","when given an extension"],"updatePoint":{"line":39,"column":35,"index":1446},"line":39,"code":"    it('should lookup the mime type', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.json(req.is('json'));\n      });\n      request(app).post('/').type('application/json').send('{}').expect(200, '\"json\"', done);\n    });","file":"req.is.js","skipped":false,"dir":"test"},{"name":"should return the full type when matching","suites":["req.is()","when given */subtype"],"updatePoint":{"line":48,"column":49,"index":1780},"line":48,"code":"    it('should return the full type when matching', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.json(req.is('*/json'));\n      });\n      request(app).post('/').type('application/json').send('{}').expect(200, '\"application/json\"', done);\n    });","file":"req.is.js","skipped":false,"dir":"test"},{"name":"should return false when not matching","suites":["req.is()","when given */subtype"],"updatePoint":{"line":55,"column":45,"index":2069},"line":55,"code":"    it('should return false when not matching', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.json(req.is('*/html'));\n      });\n      request(app).post('/').type('application/json').send('{}').expect(200, 'false', done);\n    });","file":"req.is.js","skipped":false,"dir":"test"},{"name":"should ignore charset","suites":["req.is()","when given */subtype"],"updatePoint":{"line":62,"column":29,"index":2329},"line":62,"code":"    it('should ignore charset', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.json(req.is('*/json'));\n      });\n      request(app).post('/').type('application/json; charset=UTF-8').send('{}').expect(200, '\"application/json\"', done);\n    });","file":"req.is.js","skipped":false,"dir":"test"},{"name":"should return the full type when matching","suites":["req.is()","when given type/*"],"updatePoint":{"line":71,"column":49,"index":2689},"line":71,"code":"    it('should return the full type when matching', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.json(req.is('application/*'));\n      });\n      request(app).post('/').type('application/json').send('{}').expect(200, '\"application/json\"', done);\n    });","file":"req.is.js","skipped":false,"dir":"test"},{"name":"should return false when not matching","suites":["req.is()","when given type/*"],"updatePoint":{"line":78,"column":45,"index":2985},"line":78,"code":"    it('should return false when not matching', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.json(req.is('text/*'));\n      });\n      request(app).post('/').type('application/json').send('{}').expect(200, 'false', done);\n    });","file":"req.is.js","skipped":false,"dir":"test"},{"name":"should ignore charset","suites":["req.is()","when given type/*"],"updatePoint":{"line":85,"column":29,"index":3245},"line":85,"code":"    it('should ignore charset', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.json(req.is('application/*'));\n      });\n      request(app).post('/').type('application/json; charset=UTF-8').send('{}').expect(200, '\"application/json\"', done);\n    });","file":"req.is.js","skipped":false,"dir":"test"},{"name":"should use the default value unless defined","suites":["req",".param(name, default)"],"updatePoint":{"line":7,"column":51,"index":211},"line":7,"code":"    it('should use the default value unless defined', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.end(req.param('name', 'tj'));\n      });\n      request(app).get('/').expect('tj', done);\n    });","file":"req.param.js","skipped":false,"dir":"test"},{"name":"should check req.query","suites":["req",".param(name)"],"updatePoint":{"line":16,"column":30,"index":480},"line":16,"code":"    it('should check req.query', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.end(req.param('name'));\n      });\n      request(app).get('/?name=tj').expect('tj', done);\n    });","file":"req.param.js","skipped":false,"dir":"test"},{"name":"should check req.body","suites":["req",".param(name)"],"updatePoint":{"line":23,"column":29,"index":703},"line":23,"code":"    it('should check req.body', function (done) {\n      var app = express();\n      app.use(express.json());\n      app.use(function (req, res) {\n        res.end(req.param('name'));\n      });\n      request(app).post('/').send({\n        name: 'tj'\n      }).expect('tj', done);\n    });","file":"req.param.js","skipped":false,"dir":"test"},{"name":"should check req.params","suites":["req",".param(name)"],"updatePoint":{"line":33,"column":31,"index":987},"line":33,"code":"    it('should check req.params', function (done) {\n      var app = express();\n      app.get('/user/:name', function (req, res) {\n        res.end(req.param('filter') + req.param('name'));\n      });\n      request(app).get('/user/tj').expect('undefinedtj', done);\n    });","file":"req.param.js","skipped":false,"dir":"test"},{"name":"should return the parsed pathname","suites":["req",".path"],"updatePoint":{"line":7,"column":41,"index":185},"line":7,"code":"    it('should return the parsed pathname', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.end(req.path);\n      });\n      request(app).get('/login?redirect=/post/1/comments').expect('/login', done);\n    });","file":"req.path.js","skipped":false,"dir":"test"},{"name":"should return the protocol string","suites":["req",".protocol"],"updatePoint":{"line":7,"column":41,"index":189},"line":7,"code":"    it('should return the protocol string', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.end(req.protocol);\n      });\n      request(app).get('/').expect('http', done);\n    });","file":"req.protocol.js","skipped":false,"dir":"test"},{"name":"should respect X-Forwarded-Proto","suites":["req",".protocol","when \"trust proxy\" is enabled"],"updatePoint":{"line":15,"column":42,"index":474},"line":15,"code":"      it('should respect X-Forwarded-Proto', function (done) {\n        var app = express();\n        app.enable('trust proxy');\n        app.use(function (req, res) {\n          res.end(req.protocol);\n        });\n        request(app).get('/').set('X-Forwarded-Proto', 'https').expect('https', done);\n      });","file":"req.protocol.js","skipped":false,"dir":"test"},{"name":"should default to the socket addr if X-Forwarded-Proto not present","suites":["req",".protocol","when \"trust proxy\" is enabled"],"updatePoint":{"line":23,"column":76,"index":815},"line":23,"code":"      it('should default to the socket addr if X-Forwarded-Proto not present', function (done) {\n        var app = express();\n        app.enable('trust proxy');\n        app.use(function (req, res) {\n          req.connection.encrypted = true;\n          res.end(req.protocol);\n        });\n        request(app).get('/').expect('https', done);\n      });","file":"req.protocol.js","skipped":false,"dir":"test"},{"name":"should ignore X-Forwarded-Proto if socket addr not trusted","suites":["req",".protocol","when \"trust proxy\" is enabled"],"updatePoint":{"line":32,"column":68,"index":1157},"line":32,"code":"      it('should ignore X-Forwarded-Proto if socket addr not trusted', function (done) {\n        var app = express();\n        app.set('trust proxy', '10.0.0.1');\n        app.use(function (req, res) {\n          res.end(req.protocol);\n        });\n        request(app).get('/').set('X-Forwarded-Proto', 'https').expect('http', done);\n      });","file":"req.protocol.js","skipped":false,"dir":"test"},{"name":"should default to http","suites":["req",".protocol","when \"trust proxy\" is enabled"],"updatePoint":{"line":40,"column":32,"index":1462},"line":40,"code":"      it('should default to http', function (done) {\n        var app = express();\n        app.enable('trust proxy');\n        app.use(function (req, res) {\n          res.end(req.protocol);\n        });\n        request(app).get('/').expect('http', done);\n      });","file":"req.protocol.js","skipped":false,"dir":"test"},{"name":"should respect X-Forwarded-Proto","suites":["req",".protocol","when \"trust proxy\" is enabled","when trusting hop count"],"updatePoint":{"line":49,"column":44,"index":1792},"line":49,"code":"        it('should respect X-Forwarded-Proto', function (done) {\n          var app = express();\n          app.set('trust proxy', 1);\n          app.use(function (req, res) {\n            res.end(req.protocol);\n          });\n          request(app).get('/').set('X-Forwarded-Proto', 'https').expect('https', done);\n        });","file":"req.protocol.js","skipped":false,"dir":"test"},{"name":"should ignore X-Forwarded-Proto","suites":["req",".protocol","when \"trust proxy\" is disabled"],"updatePoint":{"line":60,"column":41,"index":2191},"line":60,"code":"      it('should ignore X-Forwarded-Proto', function (done) {\n        var app = express();\n        app.use(function (req, res) {\n          res.end(req.protocol);\n        });\n        request(app).get('/').set('X-Forwarded-Proto', 'https').expect('http', done);\n      });","file":"req.protocol.js","skipped":false,"dir":"test"},{"name":"should default to {}","suites":["req",".query"],"updatePoint":{"line":8,"column":28,"index":205},"line":8,"code":"    it('should default to {}', function (done) {\n      var app = createApp();\n      request(app).get('/').expect(200, '{}', done);\n    });","file":"req.query.js","skipped":false,"dir":"test"},{"name":"should default to parse complex keys","suites":["req",".query"],"updatePoint":{"line":12,"column":44,"index":360},"line":12,"code":"    it('should default to parse complex keys', function (done) {\n      var app = createApp();\n      request(app).get('/?user[name]=tj').expect(200, '{\"user\":{\"name\":\"tj\"}}', done);\n    });","file":"req.query.js","skipped":false,"dir":"test"},{"name":"should parse complex keys","suites":["req",".query","when \"query parser\" is extended"],"updatePoint":{"line":17,"column":35,"index":602},"line":17,"code":"      it('should parse complex keys', function (done) {\n        var app = createApp('extended');\n        request(app).get('/?foo[0][bar]=baz&foo[0][fizz]=buzz&foo[]=done!').expect(200, '{\"foo\":[{\"bar\":\"baz\",\"fizz\":\"buzz\"},\"done!\"]}', done);\n      });","file":"req.query.js","skipped":false,"dir":"test"},{"name":"should parse parameters with dots","suites":["req",".query","when \"query parser\" is extended"],"updatePoint":{"line":21,"column":43,"index":861},"line":21,"code":"      it('should parse parameters with dots', function (done) {\n        var app = createApp('extended');\n        request(app).get('/?user.name=tj').expect(200, '{\"user.name\":\"tj\"}', done);\n      });","file":"req.query.js","skipped":false,"dir":"test"},{"name":"should not parse complex keys","suites":["req",".query","when \"query parser\" is simple"],"updatePoint":{"line":27,"column":39,"index":1124},"line":27,"code":"      it('should not parse complex keys', function (done) {\n        var app = createApp('simple');\n        request(app).get('/?user%5Bname%5D=tj').expect(200, '{\"user[name]\":\"tj\"}', done);\n      });","file":"req.query.js","skipped":false,"dir":"test"},{"name":"should parse using function","suites":["req",".query","when \"query parser\" is a function"],"updatePoint":{"line":33,"column":37,"index":1393},"line":33,"code":"      it('should parse using function', function (done) {\n        var app = createApp(function (str) {\n          return {\n            'length': (str || '').length\n          };\n        });\n        request(app).get('/?user%5Bname%5D=tj').expect(200, '{\"length\":17}', done);\n      });","file":"req.query.js","skipped":false,"dir":"test"},{"name":"should not parse query","suites":["req",".query","when \"query parser\" disabled"],"updatePoint":{"line":43,"column":32,"index":1737},"line":43,"code":"      it('should not parse query', function (done) {\n        var app = createApp(false);\n        request(app).get('/?user%5Bname%5D=tj').expect(200, '{}', done);\n      });","file":"req.query.js","skipped":false,"dir":"test"},{"name":"should not parse complex keys","suites":["req",".query","when \"query parser\" enabled"],"updatePoint":{"line":49,"column":39,"index":1982},"line":49,"code":"      it('should not parse complex keys', function (done) {\n        var app = createApp(true);\n        request(app).get('/?user%5Bname%5D=tj').expect(200, '{\"user[name]\":\"tj\"}', done);\n      });","file":"req.query.js","skipped":false,"dir":"test"},{"name":"should act like \"extended\"","suites":["req",".query","when \"query parser fn\" is missing"],"updatePoint":{"line":55,"column":36,"index":2246},"line":55,"code":"      it('should act like \"extended\"', function (done) {\n        var app = express();\n        delete app.settings['query parser'];\n        delete app.settings['query parser fn'];\n        app.use(function (req, res) {\n          res.send(req.query);\n        });\n        request(app).get('/?user[name]=tj&user.name=tj').expect(200, '{\"user\":{\"name\":\"tj\"},\"user.name\":\"tj\"}', done);\n      });","file":"req.query.js","skipped":false,"dir":"test"},{"name":"should throw","suites":["req",".query","when \"query parser\" an unknown value"],"updatePoint":{"line":66,"column":22,"index":2696},"line":66,"code":"      it('should throw', function () {\n        assert.throws(createApp.bind(null, 'bogus'), /unknown value.*query parser/);\n      });","file":"req.query.js","skipped":false,"dir":"test"},{"name":"should return parsed ranges","suites":["req",".range(size)"],"updatePoint":{"line":7,"column":35,"index":187},"line":7,"code":"    it('should return parsed ranges', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.json(req.range(120));\n      });\n      request(app).get('/').set('Range', 'bytes=0-50,51-100').expect(200, '[{\"start\":0,\"end\":50},{\"start\":51,\"end\":100}]', done);\n    });","file":"req.range.js","skipped":false,"dir":"test"},{"name":"should cap to the given size","suites":["req",".range(size)"],"updatePoint":{"line":14,"column":36,"index":489},"line":14,"code":"    it('should cap to the given size', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.json(req.range(75));\n      });\n      request(app).get('/').set('Range', 'bytes=0-100').expect(200, '[{\"start\":0,\"end\":74}]', done);\n    });","file":"req.range.js","skipped":false,"dir":"test"},{"name":"should cap to the given size when open-ended","suites":["req",".range(size)"],"updatePoint":{"line":21,"column":52,"index":777},"line":21,"code":"    it('should cap to the given size when open-ended', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.json(req.range(75));\n      });\n      request(app).get('/').set('Range', 'bytes=0-').expect(200, '[{\"start\":0,\"end\":74}]', done);\n    });","file":"req.range.js","skipped":false,"dir":"test"},{"name":"should have a .type","suites":["req",".range(size)"],"updatePoint":{"line":28,"column":27,"index":1037},"line":28,"code":"    it('should have a .type', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.json(req.range(120).type);\n      });\n      request(app).get('/').set('Range', 'bytes=0-100').expect(200, '\"bytes\"', done);\n    });","file":"req.range.js","skipped":false,"dir":"test"},{"name":"should accept any type","suites":["req",".range(size)"],"updatePoint":{"line":35,"column":30,"index":1294},"line":35,"code":"    it('should accept any type', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.json(req.range(120).type);\n      });\n      request(app).get('/').set('Range', 'users=0-2').expect(200, '\"users\"', done);\n    });","file":"req.range.js","skipped":false,"dir":"test"},{"name":"should return undefined if no range","suites":["req",".range(size)"],"updatePoint":{"line":42,"column":43,"index":1562},"line":42,"code":"    it('should return undefined if no range', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.send(String(req.range(120)));\n      });\n      request(app).get('/').expect(200, 'undefined', done);\n    });","file":"req.range.js","skipped":false,"dir":"test"},{"name":"should return combined ranges","suites":["req",".range(size, options)","with \"combine: true\" option"],"updatePoint":{"line":52,"column":39,"index":1919},"line":52,"code":"      it('should return combined ranges', function (done) {\n        var app = express();\n        app.use(function (req, res) {\n          res.json(req.range(120, {\n            combine: true\n          }));\n        });\n        request(app).get('/').set('Range', 'bytes=0-50,51-100').expect(200, '[{\"start\":0,\"end\":100}]', done);\n      });","file":"req.range.js","skipped":false,"dir":"test"},{"name":"should be the executed Route","suites":["req",".route"],"updatePoint":{"line":7,"column":36,"index":181},"line":7,"code":"    it('should be the executed Route', function (done) {\n      var app = express();\n      app.get('/user/:id/:op?', function (req, res, next) {\n        res.header('path-1', req.route.path);\n        next();\n      });\n      app.get('/user/:id/edit', function (req, res) {\n        res.header('path-2', req.route.path);\n        res.end();\n      });\n      request(app).get('/user/12/edit').expect('path-1', '/user/:id/:op?').expect('path-2', '/user/:id/edit').expect(200, done);\n    });","file":"req.route.js","skipped":false,"dir":"test"},{"name":"should return false when http","suites":["req",".secure","when X-Forwarded-Proto is missing"],"updatePoint":{"line":8,"column":39,"index":249},"line":8,"code":"      it('should return false when http', function (done) {\n        var app = express();\n        app.get('/', function (req, res) {\n          res.send(req.secure ? 'yes' : 'no');\n        });\n        request(app).get('/').expect('no', done);\n      });","file":"req.secure.js","skipped":false,"dir":"test"},{"name":"should return false when http","suites":["req",".secure","when X-Forwarded-Proto is present"],"updatePoint":{"line":19,"column":39,"index":614},"line":19,"code":"      it('should return false when http', function (done) {\n        var app = express();\n        app.get('/', function (req, res) {\n          res.send(req.secure ? 'yes' : 'no');\n        });\n        request(app).get('/').set('X-Forwarded-Proto', 'https').expect('no', done);\n      });","file":"req.secure.js","skipped":false,"dir":"test"},{"name":"should return true when \"trust proxy\" is enabled","suites":["req",".secure","when X-Forwarded-Proto is present"],"updatePoint":{"line":26,"column":58,"index":918},"line":26,"code":"      it('should return true when \"trust proxy\" is enabled', function (done) {\n        var app = express();\n        app.enable('trust proxy');\n        app.get('/', function (req, res) {\n          res.send(req.secure ? 'yes' : 'no');\n        });\n        request(app).get('/').set('X-Forwarded-Proto', 'https').expect('yes', done);\n      });","file":"req.secure.js","skipped":false,"dir":"test"},{"name":"should return false when initial proxy is http","suites":["req",".secure","when X-Forwarded-Proto is present"],"updatePoint":{"line":34,"column":56,"index":1256},"line":34,"code":"      it('should return false when initial proxy is http', function (done) {\n        var app = express();\n        app.enable('trust proxy');\n        app.get('/', function (req, res) {\n          res.send(req.secure ? 'yes' : 'no');\n        });\n        request(app).get('/').set('X-Forwarded-Proto', 'http, https').expect('no', done);\n      });","file":"req.secure.js","skipped":false,"dir":"test"},{"name":"should return true when initial proxy is https","suites":["req",".secure","when X-Forwarded-Proto is present"],"updatePoint":{"line":42,"column":56,"index":1599},"line":42,"code":"      it('should return true when initial proxy is https', function (done) {\n        var app = express();\n        app.enable('trust proxy');\n        app.get('/', function (req, res) {\n          res.send(req.secure ? 'yes' : 'no');\n        });\n        request(app).get('/').set('X-Forwarded-Proto', 'https, http').expect('yes', done);\n      });","file":"req.secure.js","skipped":false,"dir":"test"},{"name":"should respect X-Forwarded-Proto","suites":["req",".secure","when X-Forwarded-Proto is present","when \"trust proxy\" trusting hop count"],"updatePoint":{"line":51,"column":44,"index":2001},"line":51,"code":"        it('should respect X-Forwarded-Proto', function (done) {\n          var app = express();\n          app.set('trust proxy', 1);\n          app.get('/', function (req, res) {\n            res.send(req.secure ? 'yes' : 'no');\n          });\n          request(app).get('/').set('X-Forwarded-Proto', 'https').expect('yes', done);\n        });","file":"req.secure.js","skipped":false,"dir":"test"},{"name":"should return a signed JSON cookie","suites":["req",".signedCookies"],"updatePoint":{"line":8,"column":42,"index":238},"line":8,"code":"    it('should return a signed JSON cookie', function (done) {\n      var app = express();\n      app.use(cookieParser('secret'));\n      app.use(function (req, res) {\n        if (req.path === '/set') {\n          res.cookie('obj', {\n            foo: 'bar'\n          }, {\n            signed: true\n          });\n          res.end();\n        } else {\n          res.send(req.signedCookies);\n        }\n      });\n      request(app).get('/set').end(function (err, res) {\n        if (err) return done(err);\n        var cookie = res.header['set-cookie'];\n        request(app).get('/').set('Cookie', cookie).expect(200, {\n          obj: {\n            foo: 'bar'\n          }\n        }, done);\n      });\n    });","file":"req.signedCookies.js","skipped":false,"dir":"test"},{"name":"should return false when the resource is not modified","suites":["req",".stale"],"updatePoint":{"line":7,"column":61,"index":206},"line":7,"code":"    it('should return false when the resource is not modified', function (done) {\n      var app = express();\n      var etag = '\"12345\"';\n      app.use(function (req, res) {\n        res.set('ETag', etag);\n        res.send(req.stale);\n      });\n      request(app).get('/').set('If-None-Match', etag).expect(304, done);\n    });","file":"req.stale.js","skipped":false,"dir":"test"},{"name":"should return true when the resource is modified","suites":["req",".stale"],"updatePoint":{"line":16,"column":56,"index":526},"line":16,"code":"    it('should return true when the resource is modified', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.set('ETag', '\"123\"');\n        res.send(req.stale);\n      });\n      request(app).get('/').set('If-None-Match', '\"12345\"').expect(200, 'true', done);\n    });","file":"req.stale.js","skipped":false,"dir":"test"},{"name":"should return true without response headers","suites":["req",".stale"],"updatePoint":{"line":24,"column":51,"index":829},"line":24,"code":"    it('should return true without response headers', function (done) {\n      var app = express();\n      app.disable('x-powered-by');\n      app.use(function (req, res) {\n        res.send(req.stale);\n      });\n      request(app).get('/').expect(200, 'true', done);\n    });","file":"req.stale.js","skipped":false,"dir":"test"},{"name":"should return an array","suites":["req",".subdomains","when present"],"updatePoint":{"line":8,"column":32,"index":225},"line":8,"code":"      it('should return an array', function (done) {\n        var app = express();\n        app.use(function (req, res) {\n          res.send(req.subdomains);\n        });\n        request(app).get('/').set('Host', 'tobi.ferrets.example.com').expect(200, ['ferrets', 'tobi'], done);\n      });","file":"req.subdomains.js","skipped":false,"dir":"test"},{"name":"should work with IPv4 address","suites":["req",".subdomains","when present"],"updatePoint":{"line":15,"column":39,"index":520},"line":15,"code":"      it('should work with IPv4 address', function (done) {\n        var app = express();\n        app.use(function (req, res) {\n          res.send(req.subdomains);\n        });\n        request(app).get('/').set('Host', '127.0.0.1').expect(200, [], done);\n      });","file":"req.subdomains.js","skipped":false,"dir":"test"},{"name":"should work with IPv6 address","suites":["req",".subdomains","when present"],"updatePoint":{"line":22,"column":39,"index":783},"line":22,"code":"      it('should work with IPv6 address', function (done) {\n        var app = express();\n        app.use(function (req, res) {\n          res.send(req.subdomains);\n        });\n        request(app).get('/').set('Host', '[::1]').expect(200, [], done);\n      });","file":"req.subdomains.js","skipped":false,"dir":"test"},{"name":"should return an empty array","suites":["req",".subdomains","otherwise"],"updatePoint":{"line":31,"column":38,"index":1089},"line":31,"code":"      it('should return an empty array', function (done) {\n        var app = express();\n        app.use(function (req, res) {\n          res.send(req.subdomains);\n        });\n        request(app).get('/').set('Host', 'example.com').expect(200, [], done);\n      });","file":"req.subdomains.js","skipped":false,"dir":"test"},{"name":"should return an empty array","suites":["req",".subdomains","with no host"],"updatePoint":{"line":40,"column":38,"index":1404},"line":40,"code":"      it('should return an empty array', function (done) {\n        var app = express();\n        app.use(function (req, res) {\n          req.headers.host = null;\n          res.send(req.subdomains);\n        });\n        request(app).get('/').expect(200, [], done);\n      });","file":"req.subdomains.js","skipped":false,"dir":"test"},{"name":"should return an array","suites":["req",".subdomains","with trusted X-Forwarded-Host"],"updatePoint":{"line":50,"column":32,"index":1738},"line":50,"code":"      it('should return an array', function (done) {\n        var app = express();\n        app.set('trust proxy', true);\n        app.use(function (req, res) {\n          res.send(req.subdomains);\n        });\n        request(app).get('/').set('X-Forwarded-Host', 'tobi.ferrets.example.com').expect(200, ['ferrets', 'tobi'], done);\n      });","file":"req.subdomains.js","skipped":false,"dir":"test"},{"name":"should return an array with the whole domain","suites":["req",".subdomains","when subdomain offset is set","when subdomain offset is zero"],"updatePoint":{"line":61,"column":56,"index":2229},"line":61,"code":"        it('should return an array with the whole domain', function (done) {\n          var app = express();\n          app.set('subdomain offset', 0);\n          app.use(function (req, res) {\n            res.send(req.subdomains);\n          });\n          request(app).get('/').set('Host', 'tobi.ferrets.sub.example.com').expect(200, ['com', 'example', 'sub', 'ferrets', 'tobi'], done);\n        });","file":"req.subdomains.js","skipped":false,"dir":"test"},{"name":"should return an array with the whole IPv4","suites":["req",".subdomains","when subdomain offset is set","when subdomain offset is zero"],"updatePoint":{"line":69,"column":54,"index":2622},"line":69,"code":"        it('should return an array with the whole IPv4', function (done) {\n          var app = express();\n          app.set('subdomain offset', 0);\n          app.use(function (req, res) {\n            res.send(req.subdomains);\n          });\n          request(app).get('/').set('Host', '127.0.0.1').expect(200, ['127.0.0.1'], done);\n        });","file":"req.subdomains.js","skipped":false,"dir":"test"},{"name":"should return an array with the whole IPv6","suites":["req",".subdomains","when subdomain offset is set","when subdomain offset is zero"],"updatePoint":{"line":77,"column":54,"index":2965},"line":77,"code":"        it('should return an array with the whole IPv6', function (done) {\n          var app = express();\n          app.set('subdomain offset', 0);\n          app.use(function (req, res) {\n            res.send(req.subdomains);\n          });\n          request(app).get('/').set('Host', '[::1]').expect(200, ['[::1]'], done);\n        });","file":"req.subdomains.js","skipped":false,"dir":"test"},{"name":"should return an array","suites":["req",".subdomains","when subdomain offset is set","when present"],"updatePoint":{"line":87,"column":34,"index":3335},"line":87,"code":"        it('should return an array', function (done) {\n          var app = express();\n          app.set('subdomain offset', 3);\n          app.use(function (req, res) {\n            res.send(req.subdomains);\n          });\n          request(app).get('/').set('Host', 'tobi.ferrets.sub.example.com').expect(200, ['ferrets', 'tobi'], done);\n        });","file":"req.subdomains.js","skipped":false,"dir":"test"},{"name":"should return an empty array","suites":["req",".subdomains","when subdomain offset is set","otherwise"],"updatePoint":{"line":97,"column":40,"index":3741},"line":97,"code":"        it('should return an empty array', function (done) {\n          var app = express();\n          app.set('subdomain offset', 3);\n          app.use(function (req, res) {\n            res.send(req.subdomains);\n          });\n          request(app).get('/').set('Host', 'sub.example.com').expect(200, [], done);\n        });","file":"req.subdomains.js","skipped":false,"dir":"test"},{"name":"should return true when X-Requested-With is xmlhttprequest","suites":["req",".xhr"],"updatePoint":{"line":13,"column":66,"index":353},"line":13,"code":"    it('should return true when X-Requested-With is xmlhttprequest', function (done) {\n      request(this.app).get('/').set('X-Requested-With', 'xmlhttprequest').expect(200, 'true', done);\n    });","file":"req.xhr.js","skipped":false,"dir":"test"},{"name":"should case-insensitive","suites":["req",".xhr"],"updatePoint":{"line":16,"column":31,"index":515},"line":16,"code":"    it('should case-insensitive', function (done) {\n      request(this.app).get('/').set('X-Requested-With', 'XMLHttpRequest').expect(200, 'true', done);\n    });","file":"req.xhr.js","skipped":false,"dir":"test"},{"name":"should return false otherwise","suites":["req",".xhr"],"updatePoint":{"line":19,"column":37,"index":683},"line":19,"code":"    it('should return false otherwise', function (done) {\n      request(this.app).get('/').set('X-Requested-With', 'blahblah').expect(200, 'false', done);\n    });","file":"req.xhr.js","skipped":false,"dir":"test"},{"name":"should return false when not present","suites":["req",".xhr"],"updatePoint":{"line":22,"column":44,"index":853},"line":22,"code":"    it('should return false when not present', function (done) {\n      request(this.app).get('/').expect(200, 'false', done);\n    });","file":"req.xhr.js","skipped":false,"dir":"test"},{"name":"should append multiple headers","suites":["res",".append(field, val)"],"updatePoint":{"line":8,"column":38,"index":229},"line":8,"code":"    it('should append multiple headers', function (done) {\n      var app = express();\n      app.use(function (req, res, next) {\n        res.append('Set-Cookie', 'foo=bar');\n        next();\n      });\n      app.use(function (req, res) {\n        res.append('Set-Cookie', 'fizz=buzz');\n        res.end();\n      });\n      request(app).get('/').expect(200).expect(shouldHaveHeaderValues('Set-Cookie', ['foo=bar', 'fizz=buzz'])).end(done);\n    });","file":"res.append.js","skipped":false,"dir":"test"},{"name":"should accept array of values","suites":["res",".append(field, val)"],"updatePoint":{"line":20,"column":37,"index":669},"line":20,"code":"    it('should accept array of values', function (done) {\n      var app = express();\n      app.use(function (req, res, next) {\n        res.append('Set-Cookie', ['foo=bar', 'fizz=buzz']);\n        res.end();\n      });\n      request(app).get('/').expect(200).expect(shouldHaveHeaderValues('Set-Cookie', ['foo=bar', 'fizz=buzz'])).end(done);\n    });","file":"res.append.js","skipped":false,"dir":"test"},{"name":"should get reset by res.set(field, val)","suites":["res",".append(field, val)"],"updatePoint":{"line":28,"column":47,"index":1025},"line":28,"code":"    it('should get reset by res.set(field, val)', function (done) {\n      var app = express();\n      app.use(function (req, res, next) {\n        res.append('Set-Cookie', 'foo=bar');\n        res.append('Set-Cookie', 'fizz=buzz');\n        next();\n      });\n      app.use(function (req, res) {\n        res.set('Set-Cookie', 'pet=tobi');\n        res.end();\n      });\n      request(app).get('/').expect(200).expect(shouldHaveHeaderValues('Set-Cookie', ['pet=tobi'])).end(done);\n    });","file":"res.append.js","skipped":false,"dir":"test"},{"name":"should work with res.set(field, val) first","suites":["res",".append(field, val)"],"updatePoint":{"line":41,"column":50,"index":1509},"line":41,"code":"    it('should work with res.set(field, val) first', function (done) {\n      var app = express();\n      app.use(function (req, res, next) {\n        res.set('Set-Cookie', 'foo=bar');\n        next();\n      });\n      app.use(function (req, res) {\n        res.append('Set-Cookie', 'fizz=buzz');\n        res.end();\n      });\n      request(app).get('/').expect(200).expect(shouldHaveHeaderValues('Set-Cookie', ['foo=bar', 'fizz=buzz'])).end(done);\n    });","file":"res.append.js","skipped":false,"dir":"test"},{"name":"should work together with res.cookie","suites":["res",".append(field, val)"],"updatePoint":{"line":53,"column":44,"index":1953},"line":53,"code":"    it('should work together with res.cookie', function (done) {\n      var app = express();\n      app.use(function (req, res, next) {\n        res.cookie('foo', 'bar');\n        next();\n      });\n      app.use(function (req, res) {\n        res.append('Set-Cookie', 'fizz=buzz');\n        res.end();\n      });\n      request(app).get('/').expect(200).expect(shouldHaveHeaderValues('Set-Cookie', ['foo=bar; Path=/', 'fizz=buzz'])).end(done);\n    });","file":"res.append.js","skipped":false,"dir":"test"},{"name":"should Content-Disposition to attachment","suites":["res",".attachment()"],"updatePoint":{"line":8,"column":48,"index":244},"line":8,"code":"    it('should Content-Disposition to attachment', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.attachment().send('foo');\n      });\n      request(app).get('/').expect('Content-Disposition', 'attachment', done);\n    });","file":"res.attachment.js","skipped":false,"dir":"test"},{"name":"should add the filename param","suites":["res",".attachment(filename)"],"updatePoint":{"line":17,"column":37,"index":556},"line":17,"code":"    it('should add the filename param', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.attachment('/path/to/image.png');\n        res.send('foo');\n      });\n      request(app).get('/').expect('Content-Disposition', 'attachment; filename=\"image.png\"', done);\n    });","file":"res.attachment.js","skipped":false,"dir":"test"},{"name":"should set the Content-Type","suites":["res",".attachment(filename)"],"updatePoint":{"line":25,"column":35,"index":865},"line":25,"code":"    it('should set the Content-Type', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.attachment('/path/to/image.png');\n        res.send(Buffer.alloc(4, '.'));\n      });\n      request(app).get('/').expect('Content-Type', 'image/png', done);\n    });","file":"res.attachment.js","skipped":false,"dir":"test"},{"name":"should add the filename and filename* params","suites":["res",".attachment(utf8filename)"],"updatePoint":{"line":35,"column":52,"index":1236},"line":35,"code":"    it('should add the filename and filename* params', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.attachment('/locales/日本語.txt');\n        res.send('japanese');\n      });\n      request(app).get('/').expect('Content-Disposition', 'attachment; filename=\"???.txt\"; filename*=UTF-8\\'\\'%E6%97%A5%E6%9C%AC%E8%AA%9E.txt').expect(200, done);\n    });","file":"res.attachment.js","skipped":false,"dir":"test"},{"name":"should set the Content-Type","suites":["res",".attachment(utf8filename)"],"updatePoint":{"line":43,"column":35,"index":1610},"line":43,"code":"    it('should set the Content-Type', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.attachment('/locales/日本語.txt');\n        res.send('japanese');\n      });\n      request(app).get('/').expect('Content-Type', 'text/plain; charset=utf-8', done);\n    });","file":"res.attachment.js","skipped":false,"dir":"test"},{"name":"should set a cookie passed expiry","suites":["res",".clearCookie(name)"],"updatePoint":{"line":7,"column":41,"index":198},"line":7,"code":"    it('should set a cookie passed expiry', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.clearCookie('sid').end();\n      });\n      request(app).get('/').expect('Set-Cookie', 'sid=; Path=/; Expires=Thu, 01 Jan 1970 00:00:00 GMT').expect(200, done);\n    });","file":"res.clearCookie.js","skipped":false,"dir":"test"},{"name":"should set the given params","suites":["res",".clearCookie(name, options)"],"updatePoint":{"line":16,"column":35,"index":558},"line":16,"code":"    it('should set the given params', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.clearCookie('sid', {\n          path: '/admin'\n        }).end();\n      });\n      request(app).get('/').expect('Set-Cookie', 'sid=; Path=/admin; Expires=Thu, 01 Jan 1970 00:00:00 GMT').expect(200, done);\n    });","file":"res.clearCookie.js","skipped":false,"dir":"test"},{"name":"should generate a JSON cookie","suites":["res",".cookie(name, object)"],"updatePoint":{"line":9,"column":37,"index":276},"line":9,"code":"    it('should generate a JSON cookie', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.cookie('user', {\n          name: 'tobi'\n        }).end();\n      });\n      request(app).get('/').expect('Set-Cookie', 'user=j%3A%7B%22name%22%3A%22tobi%22%7D; Path=/').expect(200, done);\n    });","file":"res.cookie.js","skipped":false,"dir":"test"},{"name":"should set a cookie","suites":["res",".cookie(name, string)"],"updatePoint":{"line":20,"column":27,"index":649},"line":20,"code":"    it('should set a cookie', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.cookie('name', 'tobi').end();\n      });\n      request(app).get('/').expect('Set-Cookie', 'name=tobi; Path=/').expect(200, done);\n    });","file":"res.cookie.js","skipped":false,"dir":"test"},{"name":"should allow multiple calls","suites":["res",".cookie(name, string)"],"updatePoint":{"line":27,"column":35,"index":917},"line":27,"code":"    it('should allow multiple calls', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.cookie('name', 'tobi');\n        res.cookie('age', 1);\n        res.cookie('gender', '?');\n        res.end();\n      });\n      request(app).get('/').expect('Set-Cookie', 'name=tobi; Path=/,age=1; Path=/,gender=%3F; Path=/').expect(200, done);\n    });","file":"res.cookie.js","skipped":false,"dir":"test"},{"name":"should set params","suites":["res",".cookie(name, string, options)"],"updatePoint":{"line":39,"column":25,"index":1351},"line":39,"code":"    it('should set params', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.cookie('name', 'tobi', {\n          httpOnly: true,\n          secure: true\n        });\n        res.end();\n      });\n      request(app).get('/').expect('Set-Cookie', 'name=tobi; Path=/; HttpOnly; Secure').expect(200, done);\n    });","file":"res.cookie.js","skipped":false,"dir":"test"},{"name":"should throw on invalid date","suites":["res",".cookie(name, string, options)","expires"],"updatePoint":{"line":51,"column":38,"index":1753},"line":51,"code":"      it('should throw on invalid date', function (done) {\n        var app = express();\n        app.use(function (req, res) {\n          res.cookie('name', 'tobi', {\n            expires: new Date(NaN)\n          });\n          res.end();\n        });\n        request(app).get('/').expect(500, /option expires is invalid/, done);\n      });","file":"res.cookie.js","skipped":false,"dir":"test"},{"name":"should set relative expires","suites":["res",".cookie(name, string, options)","maxAge"],"updatePoint":{"line":63,"column":37,"index":2132},"line":63,"code":"      it('should set relative expires', function (done) {\n        var app = express();\n        app.use(function (req, res) {\n          res.cookie('name', 'tobi', {\n            maxAge: 1000\n          });\n          res.end();\n        });\n        request(app).get('/').expect('Set-Cookie', /name=tobi; Max-Age=1; Path=\\/; Expires=/).expect(200, done);\n      });","file":"res.cookie.js","skipped":false,"dir":"test"},{"name":"should set max-age","suites":["res",".cookie(name, string, options)","maxAge"],"updatePoint":{"line":73,"column":28,"index":2482},"line":73,"code":"      it('should set max-age', function (done) {\n        var app = express();\n        app.use(function (req, res) {\n          res.cookie('name', 'tobi', {\n            maxAge: 1000\n          });\n          res.end();\n        });\n        request(app).get('/').expect('Set-Cookie', /Max-Age=1/, done);\n      });","file":"res.cookie.js","skipped":false,"dir":"test"},{"name":"should not mutate the options object","suites":["res",".cookie(name, string, options)","maxAge"],"updatePoint":{"line":83,"column":46,"index":2808},"line":83,"code":"      it('should not mutate the options object', function (done) {\n        var app = express();\n        var options = {\n          maxAge: 1000\n        };\n        var optionsCopy = merge({}, options);\n        app.use(function (req, res) {\n          res.cookie('name', 'tobi', options);\n          res.json(options);\n        });\n        request(app).get('/').expect(200, optionsCopy, done);\n      });","file":"res.cookie.js","skipped":false,"dir":"test"},{"name":"should not throw on null","suites":["res",".cookie(name, string, options)","maxAge"],"updatePoint":{"line":95,"column":34,"index":3194},"line":95,"code":"      it('should not throw on null', function (done) {\n        var app = express();\n        app.use(function (req, res) {\n          res.cookie('name', 'tobi', {\n            maxAge: null\n          });\n          res.end();\n        });\n        request(app).get('/').expect(200).expect('Set-Cookie', 'name=tobi; Path=/').end(done);\n      });","file":"res.cookie.js","skipped":false,"dir":"test"},{"name":"should not throw on undefined","suites":["res",".cookie(name, string, options)","maxAge"],"updatePoint":{"line":105,"column":39,"index":3537},"line":105,"code":"      it('should not throw on undefined', function (done) {\n        var app = express();\n        app.use(function (req, res) {\n          res.cookie('name', 'tobi', {\n            maxAge: undefined\n          });\n          res.end();\n        });\n        request(app).get('/').expect(200).expect('Set-Cookie', 'name=tobi; Path=/').end(done);\n      });","file":"res.cookie.js","skipped":false,"dir":"test"},{"name":"should throw an error with invalid maxAge","suites":["res",".cookie(name, string, options)","maxAge"],"updatePoint":{"line":115,"column":51,"index":3897},"line":115,"code":"      it('should throw an error with invalid maxAge', function (done) {\n        var app = express();\n        app.use(function (req, res) {\n          res.cookie('name', 'tobi', {\n            maxAge: 'foobar'\n          });\n          res.end();\n        });\n        request(app).get('/').expect(500, /option maxAge is invalid/, done);\n      });","file":"res.cookie.js","skipped":false,"dir":"test"},{"name":"should set low priority","suites":["res",".cookie(name, string, options)","priority"],"updatePoint":{"line":127,"column":33,"index":4267},"line":127,"code":"      it('should set low priority', function (done) {\n        var app = express();\n        app.use(function (req, res) {\n          res.cookie('name', 'tobi', {\n            priority: 'low'\n          });\n          res.end();\n        });\n        request(app).get('/').expect('Set-Cookie', /Priority=Low/).expect(200, done);\n      });","file":"res.cookie.js","skipped":false,"dir":"test"},{"name":"should set medium priority","suites":["res",".cookie(name, string, options)","priority"],"updatePoint":{"line":137,"column":36,"index":4601},"line":137,"code":"      it('should set medium priority', function (done) {\n        var app = express();\n        app.use(function (req, res) {\n          res.cookie('name', 'tobi', {\n            priority: 'medium'\n          });\n          res.end();\n        });\n        request(app).get('/').expect('Set-Cookie', /Priority=Medium/).expect(200, done);\n      });","file":"res.cookie.js","skipped":false,"dir":"test"},{"name":"should set high priority","suites":["res",".cookie(name, string, options)","priority"],"updatePoint":{"line":147,"column":34,"index":4939},"line":147,"code":"      it('should set high priority', function (done) {\n        var app = express();\n        app.use(function (req, res) {\n          res.cookie('name', 'tobi', {\n            priority: 'high'\n          });\n          res.end();\n        });\n        request(app).get('/').expect('Set-Cookie', /Priority=High/).expect(200, done);\n      });","file":"res.cookie.js","skipped":false,"dir":"test"},{"name":"should throw with invalid priority","suites":["res",".cookie(name, string, options)","priority"],"updatePoint":{"line":157,"column":44,"index":5283},"line":157,"code":"      it('should throw with invalid priority', function (done) {\n        var app = express();\n        app.use(function (req, res) {\n          res.cookie('name', 'tobi', {\n            priority: 'foobar'\n          });\n          res.end();\n        });\n        request(app).get('/').expect(500, /option priority is invalid/, done);\n      });","file":"res.cookie.js","skipped":false,"dir":"test"},{"name":"should generate a signed JSON cookie","suites":["res",".cookie(name, string, options)","signed"],"updatePoint":{"line":169,"column":46,"index":5668},"line":169,"code":"      it('should generate a signed JSON cookie', function (done) {\n        var app = express();\n        app.use(cookieParser('foo bar baz'));\n        app.use(function (req, res) {\n          res.cookie('user', {\n            name: 'tobi'\n          }, {\n            signed: true\n          }).end();\n        });\n        request(app).get('/').expect('Set-Cookie', 'user=s%3Aj%3A%7B%22name%22%3A%22tobi%22%7D.K20xcwmDS%2BPb1rsD95o5Jm5SqWs1KteqdnynnB7jkTE; Path=/').expect(200, done);\n      });","file":"res.cookie.js","skipped":false,"dir":"test"},{"name":"should throw an error","suites":["res",".cookie(name, string, options)","signed without secret"],"updatePoint":{"line":183,"column":31,"index":6201},"line":183,"code":"      it('should throw an error', function (done) {\n        var app = express();\n        app.use(cookieParser());\n        app.use(function (req, res) {\n          res.cookie('name', 'tobi', {\n            signed: true\n          }).end();\n        });\n        request(app).get('/').expect(500, /secret\\S+ required for signed cookies/, done);\n      });","file":"res.cookie.js","skipped":false,"dir":"test"},{"name":"should set a signed cookie","suites":["res",".cookie(name, string, options)",".signedCookie(name, string)"],"updatePoint":{"line":195,"column":36,"index":6620},"line":195,"code":"      it('should set a signed cookie', function (done) {\n        var app = express();\n        app.use(cookieParser('foo bar baz'));\n        app.use(function (req, res) {\n          res.cookie('name', 'tobi', {\n            signed: true\n          }).end();\n        });\n        request(app).get('/').expect('Set-Cookie', 'name=s%3Atobi.xJjV2iZ6EI7C8E5kzwbfA9PVLl1ZR07UTnuTgQQ4EnQ; Path=/').expect(200, done);\n      });","file":"res.cookie.js","skipped":false,"dir":"test"},{"name":"should transfer as an attachment","suites":["res",".download(path)"],"updatePoint":{"line":15,"column":40,"index":571},"line":15,"code":"    it('should transfer as an attachment', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.download('test/fixtures/user.html');\n      });\n      request(app).get('/').expect('Content-Type', 'text/html; charset=UTF-8').expect('Content-Disposition', 'attachment; filename=\"user.html\"').expect(200, '<p>{{user.name}}</p>', done);\n    });","file":"res.download.js","skipped":false,"dir":"test"},{"name":"should accept range requests","suites":["res",".download(path)"],"updatePoint":{"line":22,"column":36,"index":946},"line":22,"code":"    it('should accept range requests', function (done) {\n      var app = express();\n      app.get('/', function (req, res) {\n        res.download('test/fixtures/user.html');\n      });\n      request(app).get('/').expect('Accept-Ranges', 'bytes').expect(200, '<p>{{user.name}}</p>', done);\n    });","file":"res.download.js","skipped":false,"dir":"test"},{"name":"should respond with requested byte range","suites":["res",".download(path)"],"updatePoint":{"line":29,"column":48,"index":1254},"line":29,"code":"    it('should respond with requested byte range', function (done) {\n      var app = express();\n      app.get('/', function (req, res) {\n        res.download('test/fixtures/user.html');\n      });\n      request(app).get('/').set('Range', 'bytes=0-2').expect('Content-Range', 'bytes 0-2/20').expect(206, '<p>', done);\n    });","file":"res.download.js","skipped":false,"dir":"test"},{"name":"should provide an alternate filename","suites":["res",".download(path, filename)"],"updatePoint":{"line":38,"column":44,"index":1634},"line":38,"code":"    it('should provide an alternate filename', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.download('test/fixtures/user.html', 'document');\n      });\n      request(app).get('/').expect('Content-Type', 'text/html; charset=UTF-8').expect('Content-Disposition', 'attachment; filename=\"document\"').expect(200, done);\n    });","file":"res.download.js","skipped":false,"dir":"test"},{"name":"should invoke the callback","suites":["res",".download(path, fn)"],"updatePoint":{"line":47,"column":34,"index":2048},"line":47,"code":"    it('should invoke the callback', function (done) {\n      var app = express();\n      var cb = after(2, done);\n      app.use(function (req, res) {\n        res.download('test/fixtures/user.html', cb);\n      });\n      request(app).get('/').expect('Content-Type', 'text/html; charset=UTF-8').expect('Content-Disposition', 'attachment; filename=\"user.html\"').expect(200, cb);\n    });","file":"res.download.js","skipped":false,"dir":"test"},{"name":"should presist store","suites":["res",".download(path, fn)"],"updatePoint":{"line":56,"column":30,"index":2486},"line":56,"code":"      it('should presist store', function (done) {\n        var app = express();\n        var cb = after(2, done);\n        var store = {\n          foo: 'bar'\n        };\n        app.use(function (req, res, next) {\n          req.asyncLocalStorage = new asyncHooks.AsyncLocalStorage();\n          req.asyncLocalStorage.run(store, next);\n        });\n        app.use(function (req, res) {\n          res.download('test/fixtures/name.txt', function (err) {\n            if (err) return cb(err);\n            var local = req.asyncLocalStorage.getStore();\n            assert.strictEqual(local.foo, 'bar');\n            cb();\n          });\n        });\n        request(app).get('/').expect('Content-Type', 'text/plain; charset=UTF-8').expect('Content-Disposition', 'attachment; filename=\"name.txt\"').expect(200, 'tobi', cb);\n      });","file":"res.download.js","skipped":false,"dir":"test"},{"name":"should presist store on error","suites":["res",".download(path, fn)"],"updatePoint":{"line":76,"column":39,"index":3313},"line":76,"code":"      it('should presist store on error', function (done) {\n        var app = express();\n        var store = {\n          foo: 'bar'\n        };\n        app.use(function (req, res, next) {\n          req.asyncLocalStorage = new asyncHooks.AsyncLocalStorage();\n          req.asyncLocalStorage.run(store, next);\n        });\n        app.use(function (req, res) {\n          res.download('test/fixtures/does-not-exist', function (err) {\n            var local = req.asyncLocalStorage.getStore();\n            if (local) {\n              res.setHeader('x-store-foo', String(local.foo));\n            }\n            res.send(err ? 'got ' + err.status + ' error' : 'no error');\n          });\n        });\n        request(app).get('/').expect(200).expect('x-store-foo', 'bar').expect('got 404 error').end(done);\n      });","file":"res.download.js","skipped":false,"dir":"test"},{"name":"should allow options to res.sendFile()","suites":["res",".download(path, options)"],"updatePoint":{"line":99,"column":46,"index":4191},"line":99,"code":"    it('should allow options to res.sendFile()', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.download('test/fixtures/.name', {\n          dotfiles: 'allow',\n          maxAge: '4h'\n        });\n      });\n      request(app).get('/').expect(200).expect('Content-Disposition', 'attachment; filename=\".name\"').expect('Cache-Control', 'public, max-age=14400').expect(utils.shouldHaveBody(Buffer.from('tobi'))).end(done);\n    });","file":"res.download.js","skipped":false,"dir":"test"},{"name":"should set headers on response","suites":["res",".download(path, options)","with \"headers\" option"],"updatePoint":{"line":110,"column":40,"index":4707},"line":110,"code":"      it('should set headers on response', function (done) {\n        var app = express();\n        app.use(function (req, res) {\n          res.download('test/fixtures/user.html', {\n            headers: {\n              'X-Foo': 'Bar',\n              'X-Bar': 'Foo'\n            }\n          });\n        });\n        request(app).get('/').expect(200).expect('X-Foo', 'Bar').expect('X-Bar', 'Foo').end(done);\n      });","file":"res.download.js","skipped":false,"dir":"test"},{"name":"should use last header when duplicated","suites":["res",".download(path, options)","with \"headers\" option"],"updatePoint":{"line":122,"column":48,"index":5126},"line":122,"code":"      it('should use last header when duplicated', function (done) {\n        var app = express();\n        app.use(function (req, res) {\n          res.download('test/fixtures/user.html', {\n            headers: {\n              'X-Foo': 'Bar',\n              'x-foo': 'bar'\n            }\n          });\n        });\n        request(app).get('/').expect(200).expect('X-Foo', 'bar').end(done);\n      });","file":"res.download.js","skipped":false,"dir":"test"},{"name":"should override Content-Type","suites":["res",".download(path, options)","with \"headers\" option"],"updatePoint":{"line":134,"column":38,"index":5512},"line":134,"code":"      it('should override Content-Type', function (done) {\n        var app = express();\n        app.use(function (req, res) {\n          res.download('test/fixtures/user.html', {\n            headers: {\n              'Content-Type': 'text/x-custom'\n            }\n          });\n        });\n        request(app).get('/').expect(200).expect('Content-Type', 'text/x-custom').end(done);\n      });","file":"res.download.js","skipped":false,"dir":"test"},{"name":"should not set headers on 404","suites":["res",".download(path, options)","with \"headers\" option"],"updatePoint":{"line":145,"column":39,"index":5903},"line":145,"code":"      it('should not set headers on 404', function (done) {\n        var app = express();\n        app.use(function (req, res) {\n          res.download('test/fixtures/does-not-exist', {\n            headers: {\n              'X-Foo': 'Bar'\n            }\n          });\n        });\n        request(app).get('/').expect(404).expect(utils.shouldNotHaveHeader('X-Foo')).end(done);\n      });","file":"res.download.js","skipped":false,"dir":"test"},{"name":"should be ignored","suites":["res",".download(path, options)","with \"headers\" option","when headers contains Content-Disposition"],"updatePoint":{"line":157,"column":29,"index":6349},"line":157,"code":"        it('should be ignored', function (done) {\n          var app = express();\n          app.use(function (req, res) {\n            res.download('test/fixtures/user.html', {\n              headers: {\n                'Content-Disposition': 'inline'\n              }\n            });\n          });\n          request(app).get('/').expect(200).expect('Content-Disposition', 'attachment; filename=\"user.html\"').end(done);\n        });","file":"res.download.js","skipped":false,"dir":"test"},{"name":"should be ignored case-insensitively","suites":["res",".download(path, options)","with \"headers\" option","when headers contains Content-Disposition"],"updatePoint":{"line":168,"column":48,"index":6795},"line":168,"code":"        it('should be ignored case-insensitively', function (done) {\n          var app = express();\n          app.use(function (req, res) {\n            res.download('test/fixtures/user.html', {\n              headers: {\n                'content-disposition': 'inline'\n              }\n            });\n          });\n          request(app).get('/').expect(200).expect('Content-Disposition', 'attachment; filename=\"user.html\"').end(done);\n        });","file":"res.download.js","skipped":false,"dir":"test"},{"name":"should allow relative path","suites":["res",".download(path, options)","with \"root\" option"],"updatePoint":{"line":182,"column":36,"index":7296},"line":182,"code":"      it('should allow relative path', function (done) {\n        var app = express();\n        app.use(function (req, res) {\n          res.download('name.txt', {\n            root: FIXTURES_PATH\n          });\n        });\n        request(app).get('/').expect(200).expect('Content-Disposition', 'attachment; filename=\"name.txt\"').expect(utils.shouldHaveBody(Buffer.from('tobi'))).end(done);\n      });","file":"res.download.js","skipped":false,"dir":"test"},{"name":"should allow up within root","suites":["res",".download(path, options)","with \"root\" option"],"updatePoint":{"line":191,"column":37,"index":7694},"line":191,"code":"      it('should allow up within root', function (done) {\n        var app = express();\n        app.use(function (req, res) {\n          res.download('fake/../name.txt', {\n            root: FIXTURES_PATH\n          });\n        });\n        request(app).get('/').expect(200).expect('Content-Disposition', 'attachment; filename=\"name.txt\"').expect(utils.shouldHaveBody(Buffer.from('tobi'))).end(done);\n      });","file":"res.download.js","skipped":false,"dir":"test"},{"name":"should reject up outside root","suites":["res",".download(path, options)","with \"root\" option"],"updatePoint":{"line":200,"column":39,"index":8102},"line":200,"code":"      it('should reject up outside root', function (done) {\n        var app = express();\n        app.use(function (req, res) {\n          var p = '..' + path.sep + path.relative(path.dirname(FIXTURES_PATH), path.join(FIXTURES_PATH, 'name.txt'));\n          res.download(p, {\n            root: FIXTURES_PATH\n          });\n        });\n        request(app).get('/').expect(403).expect(utils.shouldNotHaveHeader('Content-Disposition')).end(done);\n      });","file":"res.download.js","skipped":false,"dir":"test"},{"name":"should reject reading outside root","suites":["res",".download(path, options)","with \"root\" option"],"updatePoint":{"line":210,"column":44,"index":8558},"line":210,"code":"      it('should reject reading outside root', function (done) {\n        var app = express();\n        app.use(function (req, res) {\n          res.download('../name.txt', {\n            root: FIXTURES_PATH\n          });\n        });\n        request(app).get('/').expect(403).expect(utils.shouldNotHaveHeader('Content-Disposition')).end(done);\n      });","file":"res.download.js","skipped":false,"dir":"test"},{"name":"should invoke the callback","suites":["res",".download(path, filename, fn)"],"updatePoint":{"line":222,"column":34,"index":8970},"line":222,"code":"    it('should invoke the callback', function (done) {\n      var app = express();\n      var cb = after(2, done);\n      app.use(function (req, res) {\n        res.download('test/fixtures/user.html', 'document', cb);\n      });\n      request(app).get('/').expect('Content-Type', 'text/html; charset=UTF-8').expect('Content-Disposition', 'attachment; filename=\"document\"').expect(200, cb);\n    });","file":"res.download.js","skipped":false,"dir":"test"},{"name":"should invoke the callback","suites":["res",".download(path, filename, options, fn)"],"updatePoint":{"line":232,"column":34,"index":9436},"line":232,"code":"    it('should invoke the callback', function (done) {\n      var app = express();\n      var cb = after(2, done);\n      var options = {};\n      app.use(function (req, res) {\n        res.download('test/fixtures/user.html', 'document', options, cb);\n      });\n      request(app).get('/').expect(200).expect('Content-Type', 'text/html; charset=UTF-8').expect('Content-Disposition', 'attachment; filename=\"document\"').end(cb);\n    });","file":"res.download.js","skipped":false,"dir":"test"},{"name":"should allow options to res.sendFile()","suites":["res",".download(path, filename, options, fn)"],"updatePoint":{"line":241,"column":46,"index":9878},"line":241,"code":"    it('should allow options to res.sendFile()', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.download('test/fixtures/.name', 'document', {\n          dotfiles: 'allow',\n          maxAge: '4h'\n        });\n      });\n      request(app).get('/').expect(200).expect('Content-Disposition', 'attachment; filename=\"document\"').expect('Cache-Control', 'public, max-age=14400').expect(utils.shouldHaveBody(Buffer.from('tobi'))).end(done);\n    });","file":"res.download.js","skipped":false,"dir":"test"},{"name":"should be ignored","suites":["res",".download(path, filename, options, fn)","when options.headers contains Content-Disposition"],"updatePoint":{"line":252,"column":27,"index":10424},"line":252,"code":"      it('should be ignored', function (done) {\n        var app = express();\n        app.use(function (req, res) {\n          res.download('test/fixtures/user.html', 'document', {\n            headers: {\n              'Content-Type': 'text/x-custom',\n              'Content-Disposition': 'inline'\n            }\n          });\n        });\n        request(app).get('/').expect(200).expect('Content-Type', 'text/x-custom').expect('Content-Disposition', 'attachment; filename=\"document\"').end(done);\n      });","file":"res.download.js","skipped":false,"dir":"test"},{"name":"should be ignored case-insensitively","suites":["res",".download(path, filename, options, fn)","when options.headers contains Content-Disposition"],"updatePoint":{"line":264,"column":46,"index":10946},"line":264,"code":"      it('should be ignored case-insensitively', function (done) {\n        var app = express();\n        app.use(function (req, res) {\n          res.download('test/fixtures/user.html', 'document', {\n            headers: {\n              'content-type': 'text/x-custom',\n              'content-disposition': 'inline'\n            }\n          });\n        });\n        request(app).get('/').expect(200).expect('Content-Type', 'text/x-custom').expect('Content-Disposition', 'attachment; filename=\"document\"').end(done);\n      });","file":"res.download.js","skipped":false,"dir":"test"},{"name":"should invoke the callback","suites":["res","on failure"],"updatePoint":{"line":279,"column":34,"index":11509},"line":279,"code":"    it('should invoke the callback', function (done) {\n      var app = express();\n      app.use(function (req, res, next) {\n        res.download('test/fixtures/foobar.html', function (err) {\n          if (!err) return next(new Error('expected error'));\n          res.send('got ' + err.status + ' ' + err.code);\n        });\n      });\n      request(app).get('/').expect(200, 'got 404 ENOENT', done);\n    });","file":"res.download.js","skipped":false,"dir":"test"},{"name":"should remove Content-Disposition","suites":["res","on failure"],"updatePoint":{"line":289,"column":41,"index":11922},"line":289,"code":"    it('should remove Content-Disposition', function (done) {\n      var app = express();\n      app.use(function (req, res, next) {\n        res.download('test/fixtures/foobar.html', function (err) {\n          if (!err) return next(new Error('expected error'));\n          res.end('failed');\n        });\n      });\n      request(app).get('/').expect(utils.shouldNotHaveHeader('Content-Disposition')).expect(200, 'failed', done);\n    });","file":"res.download.js","skipped":false,"dir":"test"},{"name":"should be invoked instead of auto-responding","suites":["res",".format(obj)","given .default"],"updatePoint":{"line":121,"column":54,"index":2828},"line":121,"code":"      it('should be invoked instead of auto-responding', function (done) {\n        request(app3).get('/').set('Accept', 'text/html').expect('default', done);\n      });","file":"res.format.js","skipped":false,"dir":"test"},{"name":"should work when only .default is provided","suites":["res",".format(obj)","given .default"],"updatePoint":{"line":124,"column":52,"index":2994},"line":124,"code":"      it('should work when only .default is provided', function (done) {\n        request(app5).get('/').set('Accept', '*/*').expect('hey', done);\n      });","file":"res.format.js","skipped":false,"dir":"test"},{"name":"should be able to invoke other formatter","suites":["res",".format(obj)","given .default"],"updatePoint":{"line":127,"column":50,"index":3148},"line":127,"code":"      it('should be able to invoke other formatter', function (done) {\n        var app = express();\n        app.use(function (req, res, next) {\n          res.format({\n            json: function () {\n              res.send('json');\n            },\n            default: function () {\n              res.header('x-default', '1');\n              this.json();\n            }\n          });\n        });\n        request(app).get('/').set('Accept', 'text/plain').expect(200).expect('x-default', '1').expect('json').end(done);\n      });","file":"res.format.js","skipped":false,"dir":"test"},{"name":"should utilize qvalues in negotiation","suites":["res",".format(obj)","in router"],"updatePoint":{"line":173,"column":43,"index":4402},"line":173,"code":"  it('should utilize qvalues in negotiation', function (done) {\n    request(app).get('/').set('Accept', 'text/html; q=.5, application/json, */*; q=.1').expect({\n      \"message\": \"hey\"\n    }, done);\n  });","file":"res.format.js","skipped":false,"dir":"test"},{"name":"should allow wildcard type/subtypes","suites":["res",".format(obj)","in router"],"updatePoint":{"line":178,"column":41,"index":4604},"line":178,"code":"  it('should allow wildcard type/subtypes', function (done) {\n    request(app).get('/').set('Accept', 'text/html; q=.5, application/*, */*; q=.1').expect({\n      \"message\": \"hey\"\n    }, done);\n  });","file":"res.format.js","skipped":false,"dir":"test"},{"name":"should default the Content-Type","suites":["res",".format(obj)","in router"],"updatePoint":{"line":183,"column":37,"index":4799},"line":183,"code":"  it('should default the Content-Type', function (done) {\n    request(app).get('/').set('Accept', 'text/html; q=.5, text/plain').expect('Content-Type', 'text/plain; charset=utf-8').expect('hey', done);\n  });","file":"res.format.js","skipped":false,"dir":"test"},{"name":"should set the correct charset for the Content-Type","suites":["res",".format(obj)","in router"],"updatePoint":{"line":186,"column":57,"index":5027},"line":186,"code":"  it('should set the correct charset for the Content-Type', function (done) {\n    var cb = after(3, done);\n    request(app).get('/').set('Accept', 'text/html').expect('Content-Type', 'text/html; charset=utf-8', cb);\n    request(app).get('/').set('Accept', 'text/plain').expect('Content-Type', 'text/plain; charset=utf-8', cb);\n    request(app).get('/').set('Accept', 'application/json').expect('Content-Type', 'application/json; charset=utf-8', cb);\n  });","file":"res.format.js","skipped":false,"dir":"test"},{"name":"should Vary: Accept","suites":["res",".format(obj)","in router"],"updatePoint":{"line":192,"column":25,"index":5451},"line":192,"code":"  it('should Vary: Accept', function (done) {\n    request(app).get('/').set('Accept', 'text/html; q=.5, text/plain').expect('Vary', 'Accept', done);\n  });","file":"res.format.js","skipped":false,"dir":"test"},{"name":"should invoke the first callback","suites":["when Accept is not present"],"updatePoint":{"line":196,"column":40,"index":5676},"line":196,"code":"    it('should invoke the first callback', function (done) {\n      request(app).get('/').expect('hey', done);\n    });","file":"res.format.js","skipped":false,"dir":"test"},{"name":"should should respond with 406 not acceptable","suites":["when no match is made"],"updatePoint":{"line":201,"column":53,"index":5863},"line":201,"code":"    it('should should respond with 406 not acceptable', function (done) {\n      request(app).get('/').set('Accept', 'foo/bar').expect('Supports: text/plain, text/html, application/json').expect(406, done);\n    });","file":"res.format.js","skipped":false,"dir":"test"},{"name":"should get the response header field","suites":["res",".get(field)"],"updatePoint":{"line":7,"column":44,"index":195},"line":7,"code":"    it('should get the response header field', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.setHeader('Content-Type', 'text/x-foo');\n        res.send(res.get('Content-Type'));\n      });\n      request(app).get('/').expect(200, 'text/x-foo', done);\n    });","file":"res.get.js","skipped":false,"dir":"test"},{"name":"should not support jsonp callbacks","suites":["res",".json(object)"],"updatePoint":{"line":8,"column":42,"index":224},"line":8,"code":"    it('should not support jsonp callbacks', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.json({\n          foo: 'bar'\n        });\n      });\n      request(app).get('/?callback=foo').expect('{\"foo\":\"bar\"}', done);\n    });","file":"res.json.js","skipped":false,"dir":"test"},{"name":"should not override previous Content-Types","suites":["res",".json(object)"],"updatePoint":{"line":17,"column":50,"index":500},"line":17,"code":"    it('should not override previous Content-Types', function (done) {\n      var app = express();\n      app.get('/', function (req, res) {\n        res.type('application/vnd.example+json');\n        res.json({\n          hello: 'world'\n        });\n      });\n      request(app).get('/').expect('Content-Type', 'application/vnd.example+json; charset=utf-8').expect(200, '{\"hello\":\"world\"}', done);\n    });","file":"res.json.js","skipped":false,"dir":"test"},{"name":"should respond with json for null","suites":["res",".json(object)","when given primitives"],"updatePoint":{"line":28,"column":43,"index":946},"line":28,"code":"      it('should respond with json for null', function (done) {\n        var app = express();\n        app.use(function (req, res) {\n          res.json(null);\n        });\n        request(app).get('/').expect('Content-Type', 'application/json; charset=utf-8').expect(200, 'null', done);\n      });","file":"res.json.js","skipped":false,"dir":"test"},{"name":"should respond with json for Number","suites":["res",".json(object)","when given primitives"],"updatePoint":{"line":35,"column":45,"index":1242},"line":35,"code":"      it('should respond with json for Number', function (done) {\n        var app = express();\n        app.use(function (req, res) {\n          res.json(300);\n        });\n        request(app).get('/').expect('Content-Type', 'application/json; charset=utf-8').expect(200, '300', done);\n      });","file":"res.json.js","skipped":false,"dir":"test"},{"name":"should respond with json for String","suites":["res",".json(object)","when given primitives"],"updatePoint":{"line":42,"column":45,"index":1536},"line":42,"code":"      it('should respond with json for String', function (done) {\n        var app = express();\n        app.use(function (req, res) {\n          res.json('str');\n        });\n        request(app).get('/').expect('Content-Type', 'application/json; charset=utf-8').expect(200, '\"str\"', done);\n      });","file":"res.json.js","skipped":false,"dir":"test"},{"name":"should respond with json","suites":["res",".json(object)","when given an array"],"updatePoint":{"line":51,"column":34,"index":1881},"line":51,"code":"      it('should respond with json', function (done) {\n        var app = express();\n        app.use(function (req, res) {\n          res.json(['foo', 'bar', 'baz']);\n        });\n        request(app).get('/').expect('Content-Type', 'application/json; charset=utf-8').expect(200, '[\"foo\",\"bar\",\"baz\"]', done);\n      });","file":"res.json.js","skipped":false,"dir":"test"},{"name":"should respond with json","suites":["res",".json(object)","when given an object"],"updatePoint":{"line":60,"column":34,"index":2257},"line":60,"code":"      it('should respond with json', function (done) {\n        var app = express();\n        app.use(function (req, res) {\n          res.json({\n            name: 'tobi'\n          });\n        });\n        request(app).get('/').expect('Content-Type', 'application/json; charset=utf-8').expect(200, '{\"name\":\"tobi\"}', done);\n      });","file":"res.json.js","skipped":false,"dir":"test"},{"name":"should be undefined by default","suites":["res",".json(object)","\"json escape\" setting"],"updatePoint":{"line":71,"column":40,"index":2653},"line":71,"code":"      it('should be undefined by default', function () {\n        var app = express();\n        assert.strictEqual(app.get('json escape'), undefined);\n      });","file":"res.json.js","skipped":false,"dir":"test"},{"name":"should unicode escape HTML-sniffing characters","suites":["res",".json(object)","\"json escape\" setting"],"updatePoint":{"line":75,"column":56,"index":2828},"line":75,"code":"      it('should unicode escape HTML-sniffing characters', function (done) {\n        var app = express();\n        app.enable('json escape');\n        app.use(function (req, res) {\n          res.json({\n            '&': '<script>'\n          });\n        });\n        request(app).get('/').expect('Content-Type', 'application/json; charset=utf-8').expect(200, '{\"\\\\u0026\":\"\\\\u003cscript\\\\u003e\"}', done);\n      });","file":"res.json.js","skipped":false,"dir":"test"},{"name":"should not break undefined escape","suites":["res",".json(object)","\"json escape\" setting"],"updatePoint":{"line":85,"column":43,"index":3224},"line":85,"code":"      it('should not break undefined escape', function (done) {\n        var app = express();\n        app.enable('json escape');\n        app.use(function (req, res) {\n          res.json(undefined);\n        });\n        request(app).get('/').expect('Content-Type', 'application/json; charset=utf-8').expect(200, '', done);\n      });","file":"res.json.js","skipped":false,"dir":"test"},{"name":"should be passed to JSON.stringify()","suites":["res",".json(object)","\"json replacer\" setting"],"updatePoint":{"line":95,"column":46,"index":3619},"line":95,"code":"      it('should be passed to JSON.stringify()', function (done) {\n        var app = express();\n        app.set('json replacer', function (key, val) {\n          return key[0] === '_' ? undefined : val;\n        });\n        app.use(function (req, res) {\n          res.json({\n            name: 'tobi',\n            _id: 12345\n          });\n        });\n        request(app).get('/').expect('Content-Type', 'application/json; charset=utf-8').expect(200, '{\"name\":\"tobi\"}', done);\n      });","file":"res.json.js","skipped":false,"dir":"test"},{"name":"should be undefined by default","suites":["res",".json(object)","\"json spaces\" setting"],"updatePoint":{"line":110,"column":40,"index":4157},"line":110,"code":"      it('should be undefined by default', function () {\n        var app = express();\n        assert(undefined === app.get('json spaces'));\n      });","file":"res.json.js","skipped":false,"dir":"test"},{"name":"should be passed to JSON.stringify()","suites":["res",".json(object)","\"json spaces\" setting"],"updatePoint":{"line":114,"column":46,"index":4313},"line":114,"code":"      it('should be passed to JSON.stringify()', function (done) {\n        var app = express();\n        app.set('json spaces', 2);\n        app.use(function (req, res) {\n          res.json({\n            name: 'tobi',\n            age: 2\n          });\n        });\n        request(app).get('/').expect('Content-Type', 'application/json; charset=utf-8').expect(200, '{\\n  \"name\": \"tobi\",\\n  \"age\": 2\\n}', done);\n      });","file":"res.json.js","skipped":false,"dir":"test"},{"name":"should respond with json and set the .statusCode","suites":["res",".json(status, object)"],"updatePoint":{"line":128,"column":56,"index":4804},"line":128,"code":"    it('should respond with json and set the .statusCode', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.json(201, {\n          id: 1\n        });\n      });\n      request(app).get('/').expect('Content-Type', 'application/json; charset=utf-8').expect(201, '{\"id\":1}', done);\n    });","file":"res.json.js","skipped":false,"dir":"test"},{"name":"should respond with json and set the .statusCode for backwards compat","suites":["res",".json(object, status)"],"updatePoint":{"line":139,"column":77,"index":5208},"line":139,"code":"    it('should respond with json and set the .statusCode for backwards compat', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.json({\n          id: 1\n        }, 201);\n      });\n      request(app).get('/').expect('Content-Type', 'application/json; charset=utf-8').expect(201, '{\"id\":1}', done);\n    });","file":"res.json.js","skipped":false,"dir":"test"},{"name":"should use status as second number for backwards compat","suites":["res",".json(object, status)"],"updatePoint":{"line":148,"column":63,"index":5542},"line":148,"code":"    it('should use status as second number for backwards compat', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.json(200, 201);\n      });\n      request(app).get('/').expect('Content-Type', 'application/json; charset=utf-8').expect(201, '200', done);\n    });","file":"res.json.js","skipped":false,"dir":"test"},{"name":"should respond with jsonp","suites":["res",".jsonp(object)"],"updatePoint":{"line":9,"column":33,"index":256},"line":9,"code":"    it('should respond with jsonp', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.jsonp({\n          count: 1\n        });\n      });\n      request(app).get('/?callback=something').expect('Content-Type', 'text/javascript; charset=utf-8').expect(200, /something\\(\\{\"count\":1\\}\\);/, done);\n    });","file":"res.jsonp.js","skipped":false,"dir":"test"},{"name":"should use first callback parameter with jsonp","suites":["res",".jsonp(object)"],"updatePoint":{"line":18,"column":54,"index":617},"line":18,"code":"    it('should use first callback parameter with jsonp', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.jsonp({\n          count: 1\n        });\n      });\n      request(app).get('/?callback=something&callback=somethingelse').expect('Content-Type', 'text/javascript; charset=utf-8').expect(200, /something\\(\\{\"count\":1\\}\\);/, done);\n    });","file":"res.jsonp.js","skipped":false,"dir":"test"},{"name":"should ignore object callback parameter with jsonp","suites":["res",".jsonp(object)"],"updatePoint":{"line":27,"column":58,"index":1005},"line":27,"code":"    it('should ignore object callback parameter with jsonp', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.jsonp({\n          count: 1\n        });\n      });\n      request(app).get('/?callback[a]=something').expect('Content-Type', 'application/json; charset=utf-8').expect(200, '{\"count\":1}', done);\n    });","file":"res.jsonp.js","skipped":false,"dir":"test"},{"name":"should allow renaming callback","suites":["res",".jsonp(object)"],"updatePoint":{"line":36,"column":38,"index":1338},"line":36,"code":"    it('should allow renaming callback', function (done) {\n      var app = express();\n      app.set('jsonp callback name', 'clb');\n      app.use(function (req, res) {\n        res.jsonp({\n          count: 1\n        });\n      });\n      request(app).get('/?clb=something').expect('Content-Type', 'text/javascript; charset=utf-8').expect(200, /something\\(\\{\"count\":1\\}\\);/, done);\n    });","file":"res.jsonp.js","skipped":false,"dir":"test"},{"name":"should allow []","suites":["res",".jsonp(object)"],"updatePoint":{"line":46,"column":23,"index":1708},"line":46,"code":"    it('should allow []', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.jsonp({\n          count: 1\n        });\n      });\n      request(app).get('/?callback=callbacks[123]').expect('Content-Type', 'text/javascript; charset=utf-8').expect(200, /callbacks\\[123\\]\\(\\{\"count\":1\\}\\);/, done);\n    });","file":"res.jsonp.js","skipped":false,"dir":"test"},{"name":"should disallow arbitrary js","suites":["res",".jsonp(object)"],"updatePoint":{"line":55,"column":36,"index":2063},"line":55,"code":"    it('should disallow arbitrary js', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.jsonp({});\n      });\n      request(app).get('/?callback=foo;bar()').expect('Content-Type', 'text/javascript; charset=utf-8').expect(200, /foobar\\(\\{\\}\\);/, done);\n    });","file":"res.jsonp.js","skipped":false,"dir":"test"},{"name":"should escape utf whitespace","suites":["res",".jsonp(object)"],"updatePoint":{"line":62,"column":36,"index":2366},"line":62,"code":"    it('should escape utf whitespace', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.jsonp({\n          str: '\\u2028 \\u2029 woot'\n        });\n      });\n      request(app).get('/?callback=foo').expect('Content-Type', 'text/javascript; charset=utf-8').expect(200, /foo\\(\\{\"str\":\"\\\\u2028 \\\\u2029 woot\"\\}\\);/, done);\n    });","file":"res.jsonp.js","skipped":false,"dir":"test"},{"name":"should not escape utf whitespace for json fallback","suites":["res",".jsonp(object)"],"updatePoint":{"line":71,"column":58,"index":2755},"line":71,"code":"    it('should not escape utf whitespace for json fallback', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.jsonp({\n          str: '\\u2028 \\u2029 woot'\n        });\n      });\n      request(app).get('/').expect('Content-Type', 'application/json; charset=utf-8').expect(200, '{\"str\":\"\\u2028 \\u2029 woot\"}', done);\n    });","file":"res.jsonp.js","skipped":false,"dir":"test"},{"name":"should include security header and prologue","suites":["res",".jsonp(object)"],"updatePoint":{"line":80,"column":51,"index":3113},"line":80,"code":"    it('should include security header and prologue', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.jsonp({\n          count: 1\n        });\n      });\n      request(app).get('/?callback=something').expect('Content-Type', 'text/javascript; charset=utf-8').expect('X-Content-Type-Options', 'nosniff').expect(200, /^\\/\\*\\*\\//, done);\n    });","file":"res.jsonp.js","skipped":false,"dir":"test"},{"name":"should not override previous Content-Types with no callback","suites":["res",".jsonp(object)"],"updatePoint":{"line":89,"column":67,"index":3513},"line":89,"code":"    it('should not override previous Content-Types with no callback', function (done) {\n      var app = express();\n      app.get('/', function (req, res) {\n        res.type('application/vnd.example+json');\n        res.jsonp({\n          hello: 'world'\n        });\n      });\n      request(app).get('/').expect('Content-Type', 'application/vnd.example+json; charset=utf-8').expect(utils.shouldNotHaveHeader('X-Content-Type-Options')).expect(200, '{\"hello\":\"world\"}', done);\n    });","file":"res.jsonp.js","skipped":false,"dir":"test"},{"name":"should override previous Content-Types with callback","suites":["res",".jsonp(object)"],"updatePoint":{"line":99,"column":60,"index":3985},"line":99,"code":"    it('should override previous Content-Types with callback', function (done) {\n      var app = express();\n      app.get('/', function (req, res) {\n        res.type('application/vnd.example+json');\n        res.jsonp({\n          hello: 'world'\n        });\n      });\n      request(app).get('/?callback=cb').expect('Content-Type', 'text/javascript; charset=utf-8').expect('X-Content-Type-Options', 'nosniff').expect(200, /cb\\(\\{\"hello\":\"world\"\\}\\);$/, done);\n    });","file":"res.jsonp.js","skipped":false,"dir":"test"},{"name":"should invoke callback with no arguments","suites":["res",".jsonp(object)","when given undefined"],"updatePoint":{"line":110,"column":50,"index":4491},"line":110,"code":"      it('should invoke callback with no arguments', function (done) {\n        var app = express();\n        app.use(function (req, res) {\n          res.jsonp(undefined);\n        });\n        request(app).get('/?callback=cb').expect('Content-Type', 'text/javascript; charset=utf-8').expect(200, /cb\\(\\)/, done);\n      });","file":"res.jsonp.js","skipped":false,"dir":"test"},{"name":"should invoke callback with null","suites":["res",".jsonp(object)","when given null"],"updatePoint":{"line":119,"column":42,"index":4857},"line":119,"code":"      it('should invoke callback with null', function (done) {\n        var app = express();\n        app.use(function (req, res) {\n          res.jsonp(null);\n        });\n        request(app).get('/?callback=cb').expect('Content-Type', 'text/javascript; charset=utf-8').expect(200, /cb\\(null\\)/, done);\n      });","file":"res.jsonp.js","skipped":false,"dir":"test"},{"name":"should invoke callback with a string","suites":["res",".jsonp(object)","when given a string"],"updatePoint":{"line":128,"column":46,"index":5230},"line":128,"code":"      it('should invoke callback with a string', function (done) {\n        var app = express();\n        app.use(function (req, res) {\n          res.jsonp('tobi');\n        });\n        request(app).get('/?callback=cb').expect('Content-Type', 'text/javascript; charset=utf-8').expect(200, /cb\\(\"tobi\"\\)/, done);\n      });","file":"res.jsonp.js","skipped":false,"dir":"test"},{"name":"should invoke callback with a number","suites":["res",".jsonp(object)","when given a number"],"updatePoint":{"line":137,"column":46,"index":5607},"line":137,"code":"      it('should invoke callback with a number', function (done) {\n        var app = express();\n        app.use(function (req, res) {\n          res.jsonp(42);\n        });\n        request(app).get('/?callback=cb').expect('Content-Type', 'text/javascript; charset=utf-8').expect(200, /cb\\(42\\)/, done);\n      });","file":"res.jsonp.js","skipped":false,"dir":"test"},{"name":"should invoke callback with an array","suites":["res",".jsonp(object)","when given an array"],"updatePoint":{"line":146,"column":46,"index":5976},"line":146,"code":"      it('should invoke callback with an array', function (done) {\n        var app = express();\n        app.use(function (req, res) {\n          res.jsonp(['foo', 'bar', 'baz']);\n        });\n        request(app).get('/?callback=cb').expect('Content-Type', 'text/javascript; charset=utf-8').expect(200, /cb\\(\\[\"foo\",\"bar\",\"baz\"\\]\\)/, done);\n      });","file":"res.jsonp.js","skipped":false,"dir":"test"},{"name":"should invoke callback with an object","suites":["res",".jsonp(object)","when given an object"],"updatePoint":{"line":155,"column":47,"index":6385},"line":155,"code":"      it('should invoke callback with an object', function (done) {\n        var app = express();\n        app.use(function (req, res) {\n          res.jsonp({\n            name: 'tobi'\n          });\n        });\n        request(app).get('/?callback=cb').expect('Content-Type', 'text/javascript; charset=utf-8').expect(200, /cb\\(\\{\"name\":\"tobi\"\\}\\)/, done);\n      });","file":"res.jsonp.js","skipped":false,"dir":"test"},{"name":"should be undefined by default","suites":["res",".jsonp(object)","\"json escape\" setting"],"updatePoint":{"line":166,"column":40,"index":6801},"line":166,"code":"      it('should be undefined by default', function () {\n        var app = express();\n        assert.strictEqual(app.get('json escape'), undefined);\n      });","file":"res.jsonp.js","skipped":false,"dir":"test"},{"name":"should unicode escape HTML-sniffing characters","suites":["res",".jsonp(object)","\"json escape\" setting"],"updatePoint":{"line":170,"column":56,"index":6976},"line":170,"code":"      it('should unicode escape HTML-sniffing characters', function (done) {\n        var app = express();\n        app.enable('json escape');\n        app.use(function (req, res) {\n          res.jsonp({\n            '&': '\\u2028<script>\\u2029'\n          });\n        });\n        request(app).get('/?callback=foo').expect('Content-Type', 'text/javascript; charset=utf-8').expect(200, /foo\\({\"\\\\u0026\":\"\\\\u2028\\\\u003cscript\\\\u003e\\\\u2029\"}\\)/, done);\n      });","file":"res.jsonp.js","skipped":false,"dir":"test"},{"name":"should not break undefined escape","suites":["res",".jsonp(object)","\"json escape\" setting"],"updatePoint":{"line":180,"column":43,"index":7418},"line":180,"code":"      it('should not break undefined escape', function (done) {\n        var app = express();\n        app.enable('json escape');\n        app.use(function (req, res) {\n          res.jsonp(undefined);\n        });\n        request(app).get('/?callback=cb').expect('Content-Type', 'text/javascript; charset=utf-8').expect(200, /cb\\(\\)/, done);\n      });","file":"res.jsonp.js","skipped":false,"dir":"test"},{"name":"should be passed to JSON.stringify()","suites":["res",".jsonp(object)","\"json replacer\" setting"],"updatePoint":{"line":190,"column":46,"index":7831},"line":190,"code":"      it('should be passed to JSON.stringify()', function (done) {\n        var app = express();\n        app.set('json replacer', function (key, val) {\n          return key[0] === '_' ? undefined : val;\n        });\n        app.use(function (req, res) {\n          res.jsonp({\n            name: 'tobi',\n            _id: 12345\n          });\n        });\n        request(app).get('/').expect('Content-Type', 'application/json; charset=utf-8').expect(200, '{\"name\":\"tobi\"}', done);\n      });","file":"res.jsonp.js","skipped":false,"dir":"test"},{"name":"should be undefined by default","suites":["res",".jsonp(object)","\"json spaces\" setting"],"updatePoint":{"line":205,"column":40,"index":8370},"line":205,"code":"      it('should be undefined by default', function () {\n        var app = express();\n        assert(undefined === app.get('json spaces'));\n      });","file":"res.jsonp.js","skipped":false,"dir":"test"},{"name":"should be passed to JSON.stringify()","suites":["res",".jsonp(object)","\"json spaces\" setting"],"updatePoint":{"line":209,"column":46,"index":8526},"line":209,"code":"      it('should be passed to JSON.stringify()', function (done) {\n        var app = express();\n        app.set('json spaces', 2);\n        app.use(function (req, res) {\n          res.jsonp({\n            name: 'tobi',\n            age: 2\n          });\n        });\n        request(app).get('/').expect('Content-Type', 'application/json; charset=utf-8').expect(200, '{\\n  \"name\": \"tobi\",\\n  \"age\": 2\\n}', done);\n      });","file":"res.jsonp.js","skipped":false,"dir":"test"},{"name":"should respond with json and set the .statusCode","suites":["res",".jsonp(status, object)"],"updatePoint":{"line":223,"column":56,"index":9019},"line":223,"code":"    it('should respond with json and set the .statusCode', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.jsonp(201, {\n          id: 1\n        });\n      });\n      request(app).get('/').expect('Content-Type', 'application/json; charset=utf-8').expect(201, '{\"id\":1}', done);\n    });","file":"res.jsonp.js","skipped":false,"dir":"test"},{"name":"should respond with json and set the .statusCode for backwards compat","suites":["res",".jsonp(object, status)"],"updatePoint":{"line":234,"column":77,"index":9425},"line":234,"code":"    it('should respond with json and set the .statusCode for backwards compat', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.jsonp({\n          id: 1\n        }, 201);\n      });\n      request(app).get('/').expect('Content-Type', 'application/json; charset=utf-8').expect(201, '{\"id\":1}', done);\n    });","file":"res.jsonp.js","skipped":false,"dir":"test"},{"name":"should use status as second number for backwards compat","suites":["res",".jsonp(object, status)"],"updatePoint":{"line":243,"column":63,"index":9760},"line":243,"code":"    it('should use status as second number for backwards compat', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.jsonp(200, 201);\n      });\n      request(app).get('/').expect('Content-Type', 'application/json; charset=utf-8').expect(201, '200', done);\n    });","file":"res.jsonp.js","skipped":false,"dir":"test"},{"name":"should not override previous Content-Types","suites":["res",".jsonp(object, status)"],"updatePoint":{"line":251,"column":48,"index":10057},"line":251,"code":"  it('should not override previous Content-Types', function (done) {\n    var app = express();\n    app.get('/', function (req, res) {\n      res.type('application/vnd.example+json');\n      res.jsonp({\n        hello: 'world'\n      });\n    });\n    request(app).get('/').expect('content-type', 'application/vnd.example+json; charset=utf-8').expect(200, '{\"hello\":\"world\"}', done);\n  });","file":"res.jsonp.js","skipped":false,"dir":"test"},{"name":"should set Link header field","suites":["res",".links(obj)"],"updatePoint":{"line":7,"column":36,"index":187},"line":7,"code":"    it('should set Link header field', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.links({\n          next: 'http://api.example.com/users?page=2',\n          last: 'http://api.example.com/users?page=5'\n        });\n        res.end();\n      });\n      request(app).get('/').expect('Link', '<http://api.example.com/users?page=2>; rel=\"next\", <http://api.example.com/users?page=5>; rel=\"last\"').expect(200, done);\n    });","file":"res.links.js","skipped":false,"dir":"test"},{"name":"should set Link header field for multiple calls","suites":["res",".links(obj)"],"updatePoint":{"line":18,"column":55,"index":670},"line":18,"code":"    it('should set Link header field for multiple calls', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.links({\n          next: 'http://api.example.com/users?page=2',\n          last: 'http://api.example.com/users?page=5'\n        });\n        res.links({\n          prev: 'http://api.example.com/users?page=1'\n        });\n        res.end();\n      });\n      request(app).get('/').expect('Link', '<http://api.example.com/users?page=2>; rel=\"next\", <http://api.example.com/users?page=5>; rel=\"last\", <http://api.example.com/users?page=1>; rel=\"prev\"').expect(200, done);\n    });","file":"res.links.js","skipped":false,"dir":"test"},{"name":"should be empty by default","suites":["res",".locals"],"updatePoint":{"line":7,"column":34,"index":180},"line":7,"code":"    it('should be empty by default', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.json(res.locals);\n      });\n      request(app).get('/').expect(200, {}, done);\n    });","file":"res.locals.js","skipped":false,"dir":"test"},{"name":"should work when mounted","suites":["res",".locals"],"updatePoint":{"line":15,"column":30,"index":399},"line":15,"code":"  it('should work when mounted', function (done) {\n    var app = express();\n    var blog = express();\n    app.use(blog);\n    blog.use(function (req, res, next) {\n      res.locals.foo = 'bar';\n      next();\n    });\n    app.use(function (req, res) {\n      res.json(res.locals);\n    });\n    request(app).get('/').expect(200, {\n      foo: 'bar'\n    }, done);\n  });","file":"res.locals.js","skipped":false,"dir":"test"},{"name":"should set the header","suites":["res",".location(url)"],"updatePoint":{"line":7,"column":29,"index":182},"line":7,"code":"    it('should set the header', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.location('http://google.com').end();\n      });\n      request(app).get('/').expect('Location', 'http://google.com').expect(200, done);\n    });","file":"res.location.js","skipped":false,"dir":"test"},{"name":"should encode \"url\"","suites":["res",".location(url)"],"updatePoint":{"line":14,"column":27,"index":447},"line":14,"code":"    it('should encode \"url\"', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.location('https://google.com?q=\\u2603 §10').end();\n      });\n      request(app).get('/').expect('Location', 'https://google.com?q=%E2%98%83%20%C2%A710').expect(200, done);\n    });","file":"res.location.js","skipped":false,"dir":"test"},{"name":"should not touch already-encoded sequences in \"url\"","suites":["res",".location(url)"],"updatePoint":{"line":21,"column":59,"index":782},"line":21,"code":"    it('should not touch already-encoded sequences in \"url\"', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.location('https://google.com?q=%A710').end();\n      });\n      request(app).get('/').expect('Location', 'https://google.com?q=%A710').expect(200, done);\n    });","file":"res.location.js","skipped":false,"dir":"test"},{"name":"should set location from \"Referer\" header","suites":["res",".location(url)","when url is \"back\""],"updatePoint":{"line":29,"column":51,"index":1138},"line":29,"code":"      it('should set location from \"Referer\" header', function (done) {\n        var app = express();\n        app.use(function (req, res) {\n          res.location('back').end();\n        });\n        request(app).get('/').set('Referer', '/some/page.html').expect('Location', '/some/page.html').expect(200, done);\n      });","file":"res.location.js","skipped":false,"dir":"test"},{"name":"should set location from \"Referrer\" header","suites":["res",".location(url)","when url is \"back\""],"updatePoint":{"line":36,"column":52,"index":1459},"line":36,"code":"      it('should set location from \"Referrer\" header', function (done) {\n        var app = express();\n        app.use(function (req, res) {\n          res.location('back').end();\n        });\n        request(app).get('/').set('Referrer', '/some/page.html').expect('Location', '/some/page.html').expect(200, done);\n      });","file":"res.location.js","skipped":false,"dir":"test"},{"name":"should prefer \"Referrer\" header","suites":["res",".location(url)","when url is \"back\""],"updatePoint":{"line":43,"column":41,"index":1770},"line":43,"code":"      it('should prefer \"Referrer\" header', function (done) {\n        var app = express();\n        app.use(function (req, res) {\n          res.location('back').end();\n        });\n        request(app).get('/').set('Referer', '/some/page1.html').set('Referrer', '/some/page2.html').expect('Location', '/some/page2.html').expect(200, done);\n      });","file":"res.location.js","skipped":false,"dir":"test"},{"name":"should set the header to \"/\" without referrer","suites":["res",".location(url)","when url is \"back\""],"updatePoint":{"line":50,"column":55,"index":2132},"line":50,"code":"      it('should set the header to \"/\" without referrer', function (done) {\n        var app = express();\n        app.use(function (req, res) {\n          res.location('back').end();\n        });\n        request(app).get('/').expect('Location', '/').expect(200, done);\n      });","file":"res.location.js","skipped":false,"dir":"test"},{"name":"should default to a 302 redirect","suites":["res",".redirect(url)"],"updatePoint":{"line":8,"column":40,"index":234},"line":8,"code":"    it('should default to a 302 redirect', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.redirect('http://google.com');\n      });\n      request(app).get('/').expect('location', 'http://google.com').expect(302, done);\n    });","file":"res.redirect.js","skipped":false,"dir":"test"},{"name":"should encode \"url\"","suites":["res",".redirect(url)"],"updatePoint":{"line":15,"column":27,"index":493},"line":15,"code":"    it('should encode \"url\"', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.redirect('https://google.com?q=\\u2603 §10');\n      });\n      request(app).get('/').expect('Location', 'https://google.com?q=%E2%98%83%20%C2%A710').expect(302, done);\n    });","file":"res.redirect.js","skipped":false,"dir":"test"},{"name":"should not touch already-encoded sequences in \"url\"","suites":["res",".redirect(url)"],"updatePoint":{"line":22,"column":59,"index":822},"line":22,"code":"    it('should not touch already-encoded sequences in \"url\"', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.redirect('https://google.com?q=%A710');\n      });\n      request(app).get('/').expect('Location', 'https://google.com?q=%A710').expect(302, done);\n    });","file":"res.redirect.js","skipped":false,"dir":"test"},{"name":"should set the response status","suites":["res",".redirect(status, url)"],"updatePoint":{"line":31,"column":38,"index":1167},"line":31,"code":"    it('should set the response status', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.redirect(303, 'http://google.com');\n      });\n      request(app).get('/').expect('Location', 'http://google.com').expect(303, done);\n    });","file":"res.redirect.js","skipped":false,"dir":"test"},{"name":"should set the response status","suites":["res",".redirect(url, status)"],"updatePoint":{"line":40,"column":38,"index":1499},"line":40,"code":"    it('should set the response status', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.redirect('http://google.com', 303);\n      });\n      request(app).get('/').expect('Location', 'http://google.com').expect(303, done);\n    });","file":"res.redirect.js","skipped":false,"dir":"test"},{"name":"should ignore the body","suites":["res","when the request method is HEAD"],"updatePoint":{"line":49,"column":30,"index":1832},"line":49,"code":"    it('should ignore the body', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.redirect('http://google.com');\n      });\n      request(app).head('/').expect(302).expect('Location', 'http://google.com').expect(utils.shouldNotHaveBody()).end(done);\n    });","file":"res.redirect.js","skipped":false,"dir":"test"},{"name":"should respond with html","suites":["res","when accepting html"],"updatePoint":{"line":58,"column":32,"index":2189},"line":58,"code":"    it('should respond with html', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.redirect('http://google.com');\n      });\n      request(app).get('/').set('Accept', 'text/html').expect('Content-Type', /html/).expect('Location', 'http://google.com').expect(302, '<p>Found. Redirecting to <a href=\"http://google.com\">http://google.com</a></p>', done);\n    });","file":"res.redirect.js","skipped":false,"dir":"test"},{"name":"should escape the url","suites":["res","when accepting html"],"updatePoint":{"line":65,"column":29,"index":2590},"line":65,"code":"    it('should escape the url', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.redirect('<la\\'me>');\n      });\n      request(app).get('/').set('Host', 'http://example.com').set('Accept', 'text/html').expect('Content-Type', /html/).expect('Location', '%3Cla\\'me%3E').expect(302, '<p>Found. Redirecting to <a href=\"%3Cla&#39;me%3E\">%3Cla&#39;me%3E</a></p>', done);\n    });","file":"res.redirect.js","skipped":false,"dir":"test"},{"name":"should include the redirect type","suites":["res","when accepting html"],"updatePoint":{"line":72,"column":40,"index":3018},"line":72,"code":"    it('should include the redirect type', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.redirect(301, 'http://google.com');\n      });\n      request(app).get('/').set('Accept', 'text/html').expect('Content-Type', /html/).expect('Location', 'http://google.com').expect(301, '<p>Moved Permanently. Redirecting to <a href=\"http://google.com\">http://google.com</a></p>', done);\n    });","file":"res.redirect.js","skipped":false,"dir":"test"},{"name":"should respond with text","suites":["res","when accepting text"],"updatePoint":{"line":81,"column":32,"index":3493},"line":81,"code":"    it('should respond with text', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.redirect('http://google.com');\n      });\n      request(app).get('/').set('Accept', 'text/plain, */*').expect('Content-Type', /plain/).expect('Location', 'http://google.com').expect(302, 'Found. Redirecting to http://google.com', done);\n    });","file":"res.redirect.js","skipped":false,"dir":"test"},{"name":"should encode the url","suites":["res","when accepting text"],"updatePoint":{"line":88,"column":29,"index":3862},"line":88,"code":"    it('should encode the url', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.redirect('http://example.com/?param=<script>alert(\"hax\");</script>');\n      });\n      request(app).get('/').set('Host', 'http://example.com').set('Accept', 'text/plain, */*').expect('Content-Type', /plain/).expect('Location', 'http://example.com/?param=%3Cscript%3Ealert(%22hax%22);%3C/script%3E').expect(302, 'Found. Redirecting to http://example.com/?param=%3Cscript%3Ealert(%22hax%22);%3C/script%3E', done);\n    });","file":"res.redirect.js","skipped":false,"dir":"test"},{"name":"should include the redirect type","suites":["res","when accepting text"],"updatePoint":{"line":95,"column":40,"index":4417},"line":95,"code":"    it('should include the redirect type', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.redirect(301, 'http://google.com');\n      });\n      request(app).get('/').set('Accept', 'text/plain, */*').expect('Content-Type', /plain/).expect('Location', 'http://google.com').expect(301, 'Moved Permanently. Redirecting to http://google.com', done);\n    });","file":"res.redirect.js","skipped":false,"dir":"test"},{"name":"should respond with an empty body","suites":["res","when accepting neither text or html"],"updatePoint":{"line":104,"column":41,"index":4885},"line":104,"code":"    it('should respond with an empty body', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.redirect('http://google.com');\n      });\n      request(app).get('/').set('Accept', 'application/octet-stream').expect(302).expect('location', 'http://google.com').expect('content-length', '0').expect(utils.shouldNotHaveHeader('Content-Type')).expect(utils.shouldNotHaveBody()).end(done);\n    });","file":"res.redirect.js","skipped":false,"dir":"test"},{"name":"should support absolute paths","suites":["res",".render(name)"],"updatePoint":{"line":9,"column":37,"index":256},"line":9,"code":"    it('should support absolute paths', function (done) {\n      var app = createApp();\n      app.locals.user = {\n        name: 'tobi'\n      };\n      app.use(function (req, res) {\n        res.render(path.join(__dirname, 'fixtures', 'user.tmpl'));\n      });\n      request(app).get('/').expect('<p>tobi</p>', done);\n    });","file":"res.render.js","skipped":false,"dir":"test"},{"name":"should support absolute paths with \"view engine\"","suites":["res",".render(name)"],"updatePoint":{"line":19,"column":56,"index":596},"line":19,"code":"    it('should support absolute paths with \"view engine\"', function (done) {\n      var app = createApp();\n      app.locals.user = {\n        name: 'tobi'\n      };\n      app.set('view engine', 'tmpl');\n      app.use(function (req, res) {\n        res.render(path.join(__dirname, 'fixtures', 'user'));\n      });\n      request(app).get('/').expect('<p>tobi</p>', done);\n    });","file":"res.render.js","skipped":false,"dir":"test"},{"name":"should error without \"view engine\" set and file extension to a non-engine module","suites":["res",".render(name)"],"updatePoint":{"line":30,"column":88,"index":1001},"line":30,"code":"    it('should error without \"view engine\" set and file extension to a non-engine module', function (done) {\n      var app = createApp();\n      app.locals.user = {\n        name: 'tobi'\n      };\n      app.use(function (req, res) {\n        res.render(path.join(__dirname, 'fixtures', 'broken.send'));\n      });\n      request(app).get('/').expect(500, /does not provide a view engine/, done);\n    });","file":"res.render.js","skipped":false,"dir":"test"},{"name":"should error without \"view engine\" set and no file extension","suites":["res",".render(name)"],"updatePoint":{"line":40,"column":68,"index":1379},"line":40,"code":"    it('should error without \"view engine\" set and no file extension', function (done) {\n      var app = createApp();\n      app.locals.user = {\n        name: 'tobi'\n      };\n      app.use(function (req, res) {\n        res.render(path.join(__dirname, 'fixtures', 'user'));\n      });\n      request(app).get('/').expect(500, /No default engine was specified/, done);\n    });","file":"res.render.js","skipped":false,"dir":"test"},{"name":"should expose app.locals","suites":["res",".render(name)"],"updatePoint":{"line":50,"column":32,"index":1715},"line":50,"code":"    it('should expose app.locals', function (done) {\n      var app = createApp();\n      app.set('views', path.join(__dirname, 'fixtures'));\n      app.locals.user = {\n        name: 'tobi'\n      };\n      app.use(function (req, res) {\n        res.render('user.tmpl');\n      });\n      request(app).get('/').expect('<p>tobi</p>', done);\n    });","file":"res.render.js","skipped":false,"dir":"test"},{"name":"should expose app.locals with `name` property","suites":["res",".render(name)"],"updatePoint":{"line":61,"column":53,"index":2076},"line":61,"code":"    it('should expose app.locals with `name` property', function (done) {\n      var app = createApp();\n      app.set('views', path.join(__dirname, 'fixtures'));\n      app.locals.name = 'tobi';\n      app.use(function (req, res) {\n        res.render('name.tmpl');\n      });\n      request(app).get('/').expect('<p>tobi</p>', done);\n    });","file":"res.render.js","skipped":false,"dir":"test"},{"name":"should support index.<engine>","suites":["res",".render(name)"],"updatePoint":{"line":70,"column":37,"index":2397},"line":70,"code":"    it('should support index.<engine>', function (done) {\n      var app = createApp();\n      app.set('views', path.join(__dirname, 'fixtures'));\n      app.set('view engine', 'tmpl');\n      app.use(function (req, res) {\n        res.render('blog/post');\n      });\n      request(app).get('/').expect('<h1>blog post</h1>', done);\n    });","file":"res.render.js","skipped":false,"dir":"test"},{"name":"should next(err)","suites":["res",".render(name)","when an error occurs"],"updatePoint":{"line":80,"column":26,"index":2771},"line":80,"code":"      it('should next(err)', function (done) {\n        var app = createApp();\n        app.set('views', path.join(__dirname, 'fixtures'));\n        app.use(function (req, res) {\n          res.render('user.tmpl');\n        });\n        app.use(function (err, req, res, next) {\n          res.status(500).send('got error: ' + err.name);\n        });\n        request(app).get('/').expect(500, 'got error: RenderError', done);\n      });","file":"res.render.js","skipped":false,"dir":"test"},{"name":"should render the template","suites":["res",".render(name)","when \"view engine\" is given"],"updatePoint":{"line":93,"column":36,"index":3274},"line":93,"code":"      it('should render the template', function (done) {\n        var app = createApp();\n        app.set('view engine', 'tmpl');\n        app.set('views', path.join(__dirname, 'fixtures'));\n        app.use(function (req, res) {\n          res.render('email');\n        });\n        request(app).get('/').expect('<p>This is an email</p>', done);\n      });","file":"res.render.js","skipped":false,"dir":"test"},{"name":"should lookup the file in the path","suites":["res",".render(name)","when \"views\" is given"],"updatePoint":{"line":104,"column":44,"index":3692},"line":104,"code":"      it('should lookup the file in the path', function (done) {\n        var app = createApp();\n        app.set('views', path.join(__dirname, 'fixtures', 'default_layout'));\n        app.use(function (req, res) {\n          res.render('user.tmpl', {\n            user: {\n              name: 'tobi'\n            }\n          });\n        });\n        request(app).get('/').expect('<p>tobi</p>', done);\n      });","file":"res.render.js","skipped":false,"dir":"test"},{"name":"should lookup the file in the path","suites":["res",".render(name)","when \"views\" is given","when array of paths"],"updatePoint":{"line":117,"column":46,"index":4150},"line":117,"code":"        it('should lookup the file in the path', function (done) {\n          var app = createApp();\n          var views = [path.join(__dirname, 'fixtures', 'local_layout'), path.join(__dirname, 'fixtures', 'default_layout')];\n          app.set('views', views);\n          app.use(function (req, res) {\n            res.render('user.tmpl', {\n              user: {\n                name: 'tobi'\n              }\n            });\n          });\n          request(app).get('/').expect('<span>tobi</span>', done);\n        });","file":"res.render.js","skipped":false,"dir":"test"},{"name":"should lookup in later paths until found","suites":["res",".render(name)","when \"views\" is given","when array of paths"],"updatePoint":{"line":130,"column":52,"index":4671},"line":130,"code":"        it('should lookup in later paths until found', function (done) {\n          var app = createApp();\n          var views = [path.join(__dirname, 'fixtures', 'local_layout'), path.join(__dirname, 'fixtures', 'default_layout')];\n          app.set('views', views);\n          app.use(function (req, res) {\n            res.render('name.tmpl', {\n              name: 'tobi'\n            });\n          });\n          request(app).get('/').expect('<p>tobi</p>', done);\n        });","file":"res.render.js","skipped":false,"dir":"test"},{"name":"should render the template","suites":["res",".render(name, option)"],"updatePoint":{"line":145,"column":34,"index":5202},"line":145,"code":"    it('should render the template', function (done) {\n      var app = createApp();\n      app.set('views', path.join(__dirname, 'fixtures'));\n      var user = {\n        name: 'tobi'\n      };\n      app.use(function (req, res) {\n        res.render('user.tmpl', {\n          user: user\n        });\n      });\n      request(app).get('/').expect('<p>tobi</p>', done);\n    });","file":"res.render.js","skipped":false,"dir":"test"},{"name":"should expose app.locals","suites":["res",".render(name, option)"],"updatePoint":{"line":158,"column":32,"index":5569},"line":158,"code":"    it('should expose app.locals', function (done) {\n      var app = createApp();\n      app.set('views', path.join(__dirname, 'fixtures'));\n      app.locals.user = {\n        name: 'tobi'\n      };\n      app.use(function (req, res) {\n        res.render('user.tmpl');\n      });\n      request(app).get('/').expect('<p>tobi</p>', done);\n    });","file":"res.render.js","skipped":false,"dir":"test"},{"name":"should expose res.locals","suites":["res",".render(name, option)"],"updatePoint":{"line":169,"column":32,"index":5909},"line":169,"code":"    it('should expose res.locals', function (done) {\n      var app = createApp();\n      app.set('views', path.join(__dirname, 'fixtures'));\n      app.use(function (req, res) {\n        res.locals.user = {\n          name: 'tobi'\n        };\n        res.render('user.tmpl');\n      });\n      request(app).get('/').expect('<p>tobi</p>', done);\n    });","file":"res.render.js","skipped":false,"dir":"test"},{"name":"should give precedence to res.locals over app.locals","suites":["res",".render(name, option)"],"updatePoint":{"line":180,"column":60,"index":6283},"line":180,"code":"    it('should give precedence to res.locals over app.locals', function (done) {\n      var app = createApp();\n      app.set('views', path.join(__dirname, 'fixtures'));\n      app.locals.user = {\n        name: 'tobi'\n      };\n      app.use(function (req, res) {\n        res.locals.user = {\n          name: 'jane'\n        };\n        res.render('user.tmpl', {});\n      });\n      request(app).get('/').expect('<p>jane</p>', done);\n    });","file":"res.render.js","skipped":false,"dir":"test"},{"name":"should give precedence to res.render() locals over res.locals","suites":["res",".render(name, option)"],"updatePoint":{"line":194,"column":69,"index":6726},"line":194,"code":"    it('should give precedence to res.render() locals over res.locals', function (done) {\n      var app = createApp();\n      app.set('views', path.join(__dirname, 'fixtures'));\n      var jane = {\n        name: 'jane'\n      };\n      app.use(function (req, res) {\n        res.locals.user = {\n          name: 'tobi'\n        };\n        res.render('user.tmpl', {\n          user: jane\n        });\n      });\n      request(app).get('/').expect('<p>jane</p>', done);\n    });","file":"res.render.js","skipped":false,"dir":"test"},{"name":"should give precedence to res.render() locals over app.locals","suites":["res",".render(name, option)"],"updatePoint":{"line":210,"column":69,"index":7192},"line":210,"code":"    it('should give precedence to res.render() locals over app.locals', function (done) {\n      var app = createApp();\n      app.set('views', path.join(__dirname, 'fixtures'));\n      app.locals.user = {\n        name: 'tobi'\n      };\n      var jane = {\n        name: 'jane'\n      };\n      app.use(function (req, res) {\n        res.render('user.tmpl', {\n          user: jane\n        });\n      });\n      request(app).get('/').expect('<p>jane</p>', done);\n    });","file":"res.render.js","skipped":false,"dir":"test"},{"name":"should pass the resulting string","suites":["res",".render(name, options, fn)"],"updatePoint":{"line":228,"column":40,"index":7684},"line":228,"code":"    it('should pass the resulting string', function (done) {\n      var app = createApp();\n      app.set('views', path.join(__dirname, 'fixtures'));\n      app.use(function (req, res) {\n        var tobi = {\n          name: 'tobi'\n        };\n        res.render('user.tmpl', {\n          user: tobi\n        }, function (err, html) {\n          html = html.replace('tobi', 'loki');\n          res.end(html);\n        });\n      });\n      request(app).get('/').expect('<p>loki</p>', done);\n    });","file":"res.render.js","skipped":false,"dir":"test"},{"name":"should pass the resulting string","suites":["res",".render(name, fn)"],"updatePoint":{"line":246,"column":40,"index":8223},"line":246,"code":"    it('should pass the resulting string', function (done) {\n      var app = createApp();\n      app.set('views', path.join(__dirname, 'fixtures'));\n      app.use(function (req, res) {\n        res.locals.user = {\n          name: 'tobi'\n        };\n        res.render('user.tmpl', function (err, html) {\n          html = html.replace('tobi', 'loki');\n          res.end(html);\n        });\n      });\n      request(app).get('/').expect('<p>loki</p>', done);\n    });","file":"res.render.js","skipped":false,"dir":"test"},{"name":"should pass it to the callback","suites":["res",".render(name, fn)","when an error occurs"],"updatePoint":{"line":261,"column":40,"index":8734},"line":261,"code":"      it('should pass it to the callback', function (done) {\n        var app = createApp();\n        app.set('views', path.join(__dirname, 'fixtures'));\n        app.use(function (req, res) {\n          res.render('user.tmpl', function (err) {\n            if (err) {\n              res.status(500).send('got error: ' + err.name);\n            }\n          });\n        });\n        request(app).get('/').expect(500, 'got error: RenderError', done);\n      });","file":"res.render.js","skipped":false,"dir":"test"},{"name":"should set body to \"\"","suites":["res",".send()"],"updatePoint":{"line":11,"column":29,"index":326},"line":11,"code":"    it('should set body to \"\"', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.send();\n      });\n      request(app).get('/').expect(200, '', done);\n    });","file":"res.send.js","skipped":false,"dir":"test"},{"name":"should set body to \"\"","suites":["res",".send(null)"],"updatePoint":{"line":20,"column":29,"index":574},"line":20,"code":"    it('should set body to \"\"', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.send(null);\n      });\n      request(app).get('/').expect('Content-Length', '0').expect(200, '', done);\n    });","file":"res.send.js","skipped":false,"dir":"test"},{"name":"should set body to \"\"","suites":["res",".send(undefined)"],"updatePoint":{"line":29,"column":29,"index":861},"line":29,"code":"    it('should set body to \"\"', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.send(undefined);\n      });\n      request(app).get('/').expect(200, '', done);\n    });","file":"res.send.js","skipped":false,"dir":"test"},{"name":"should set .statusCode","suites":["res",".send(code)"],"updatePoint":{"line":38,"column":30,"index":1119},"line":38,"code":"    it('should set .statusCode', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.send(201);\n      });\n      request(app).get('/').expect('Created').expect(201, done);\n    });","file":"res.send.js","skipped":false,"dir":"test"},{"name":"should set .statusCode and body","suites":["res",".send(code, body)"],"updatePoint":{"line":47,"column":39,"index":1400},"line":47,"code":"    it('should set .statusCode and body', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.send(201, 'Created :)');\n      });\n      request(app).get('/').expect('Created :)').expect(201, done);\n    });","file":"res.send.js","skipped":false,"dir":"test"},{"name":"should be supported for backwards compat","suites":["res",".send(body, code)"],"updatePoint":{"line":56,"column":48,"index":1707},"line":56,"code":"    it('should be supported for backwards compat', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.send('Bad!', 400);\n      });\n      request(app).get('/').expect('Bad!').expect(400, done);\n    });","file":"res.send.js","skipped":false,"dir":"test"},{"name":"should send number as json","suites":["res",".send(code, number)"],"updatePoint":{"line":65,"column":34,"index":1990},"line":65,"code":"    it('should send number as json', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.send(200, 0.123);\n      });\n      request(app).get('/').expect('Content-Type', 'application/json; charset=utf-8').expect(200, '0.123', done);\n    });","file":"res.send.js","skipped":false,"dir":"test"},{"name":"should send as html","suites":["res",".send(String)"],"updatePoint":{"line":74,"column":27,"index":2311},"line":74,"code":"    it('should send as html', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.send('<p>hey</p>');\n      });\n      request(app).get('/').expect('Content-Type', 'text/html; charset=utf-8').expect(200, '<p>hey</p>', done);\n    });","file":"res.send.js","skipped":false,"dir":"test"},{"name":"should set ETag","suites":["res",".send(String)"],"updatePoint":{"line":81,"column":23,"index":2580},"line":81,"code":"    it('should set ETag', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        var str = Array(1000).join('-');\n        res.send(str);\n      });\n      request(app).get('/').expect('ETag', 'W/\"3e7-qPnkJ3CVdVhFJQvUBfF10TmVA7g\"').expect(200, done);\n    });","file":"res.send.js","skipped":false,"dir":"test"},{"name":"should not override Content-Type","suites":["res",".send(String)"],"updatePoint":{"line":89,"column":40,"index":2887},"line":89,"code":"    it('should not override Content-Type', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.set('Content-Type', 'text/plain').send('hey');\n      });\n      request(app).get('/').expect('Content-Type', 'text/plain; charset=utf-8').expect(200, 'hey', done);\n    });","file":"res.send.js","skipped":false,"dir":"test"},{"name":"should override charset in Content-Type","suites":["res",".send(String)"],"updatePoint":{"line":96,"column":47,"index":3201},"line":96,"code":"    it('should override charset in Content-Type', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.set('Content-Type', 'text/plain; charset=iso-8859-1').send('hey');\n      });\n      request(app).get('/').expect('Content-Type', 'text/plain; charset=utf-8').expect(200, 'hey', done);\n    });","file":"res.send.js","skipped":false,"dir":"test"},{"name":"should keep charset in Content-Type for Buffers","suites":["res",".send(String)"],"updatePoint":{"line":103,"column":55,"index":3543},"line":103,"code":"    it('should keep charset in Content-Type for Buffers', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.set('Content-Type', 'text/plain; charset=iso-8859-1').send(Buffer.from('hi'));\n      });\n      request(app).get('/').expect('Content-Type', 'text/plain; charset=iso-8859-1').expect(200, 'hi', done);\n    });","file":"res.send.js","skipped":false,"dir":"test"},{"name":"should send as octet-stream","suites":["res",".send(Buffer)"],"updatePoint":{"line":112,"column":35,"index":3929},"line":112,"code":"    it('should send as octet-stream', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.send(Buffer.from('hello'));\n      });\n      request(app).get('/').expect(200).expect('Content-Type', 'application/octet-stream').expect(utils.shouldHaveBody(Buffer.from('hello'))).end(done);\n    });","file":"res.send.js","skipped":false,"dir":"test"},{"name":"should set ETag","suites":["res",".send(Buffer)"],"updatePoint":{"line":119,"column":23,"index":4247},"line":119,"code":"    it('should set ETag', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.send(Buffer.alloc(999, '-'));\n      });\n      request(app).get('/').expect('ETag', 'W/\"3e7-qPnkJ3CVdVhFJQvUBfF10TmVA7g\"').expect(200, done);\n    });","file":"res.send.js","skipped":false,"dir":"test"},{"name":"should not override Content-Type","suites":["res",".send(Buffer)"],"updatePoint":{"line":126,"column":40,"index":4532},"line":126,"code":"    it('should not override Content-Type', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.set('Content-Type', 'text/plain').send(Buffer.from('hey'));\n      });\n      request(app).get('/').expect('Content-Type', 'text/plain; charset=utf-8').expect(200, 'hey', done);\n    });","file":"res.send.js","skipped":false,"dir":"test"},{"name":"should not override ETag","suites":["res",".send(Buffer)"],"updatePoint":{"line":133,"column":32,"index":4844},"line":133,"code":"    it('should not override ETag', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.type('text/plain').set('ETag', '\"foo\"').send(Buffer.from('hey'));\n      });\n      request(app).get('/').expect('ETag', '\"foo\"').expect(200, 'hey', done);\n    });","file":"res.send.js","skipped":false,"dir":"test"},{"name":"should send as application/json","suites":["res",".send(Object)"],"updatePoint":{"line":142,"column":39,"index":5189},"line":142,"code":"    it('should send as application/json', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.send({\n          name: 'tobi'\n        });\n      });\n      request(app).get('/').expect('Content-Type', 'application/json; charset=utf-8').expect(200, '{\"name\":\"tobi\"}', done);\n    });","file":"res.send.js","skipped":false,"dir":"test"},{"name":"should ignore the body","suites":["res","when the request method is HEAD"],"updatePoint":{"line":153,"column":30,"index":5565},"line":153,"code":"    it('should ignore the body', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.send('yay');\n      });\n      request(app).head('/').expect(200).expect(utils.shouldNotHaveBody()).end(done);\n    });","file":"res.send.js","skipped":false,"dir":"test"},{"name":"should strip Content-* fields, Transfer-Encoding field, and body","suites":["res","when .statusCode is 204"],"updatePoint":{"line":162,"column":72,"index":5908},"line":162,"code":"    it('should strip Content-* fields, Transfer-Encoding field, and body', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.status(204).set('Transfer-Encoding', 'chunked').send('foo');\n      });\n      request(app).get('/').expect(utils.shouldNotHaveHeader('Content-Type')).expect(utils.shouldNotHaveHeader('Content-Length')).expect(utils.shouldNotHaveHeader('Transfer-Encoding')).expect(204, '', done);\n    });","file":"res.send.js","skipped":false,"dir":"test"},{"name":"should strip Transfer-Encoding field and body, set Content-Length","suites":["res","when .statusCode is 205"],"updatePoint":{"line":171,"column":73,"index":6422},"line":171,"code":"    it('should strip Transfer-Encoding field and body, set Content-Length', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.status(205).set('Transfer-Encoding', 'chunked').send('foo');\n      });\n      request(app).get('/').expect(utils.shouldNotHaveHeader('Transfer-Encoding')).expect('Content-Length', '0').expect(205, '', done);\n    });","file":"res.send.js","skipped":false,"dir":"test"},{"name":"should strip Content-* fields, Transfer-Encoding field, and body","suites":["res","when .statusCode is 304"],"updatePoint":{"line":180,"column":72,"index":6863},"line":180,"code":"    it('should strip Content-* fields, Transfer-Encoding field, and body', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.status(304).set('Transfer-Encoding', 'chunked').send('foo');\n      });\n      request(app).get('/').expect(utils.shouldNotHaveHeader('Content-Type')).expect(utils.shouldNotHaveHeader('Content-Length')).expect(utils.shouldNotHaveHeader('Transfer-Encoding')).expect(304, '', done);\n    });","file":"res.send.js","skipped":false,"dir":"test"},{"name":"should always check regardless of length","suites":["res","when .statusCode is 304"],"updatePoint":{"line":188,"column":46,"index":7298},"line":188,"code":"  it('should always check regardless of length', function (done) {\n    var app = express();\n    var etag = '\"asdf\"';\n    app.use(function (req, res, next) {\n      res.set('ETag', etag);\n      res.send('hey');\n    });\n    request(app).get('/').set('If-None-Match', etag).expect(304, done);\n  });","file":"res.send.js","skipped":false,"dir":"test"},{"name":"should respond with 304 Not Modified when fresh","suites":["res","when .statusCode is 304"],"updatePoint":{"line":197,"column":53,"index":7600},"line":197,"code":"  it('should respond with 304 Not Modified when fresh', function (done) {\n    var app = express();\n    var etag = '\"asdf\"';\n    app.use(function (req, res) {\n      var str = Array(1000).join('-');\n      res.set('ETag', etag);\n      res.send(str);\n    });\n    request(app).get('/').set('If-None-Match', etag).expect(304, done);\n  });","file":"res.send.js","skipped":false,"dir":"test"},{"name":"should not perform freshness check unless 2xx or 304","suites":["res","when .statusCode is 304"],"updatePoint":{"line":207,"column":58,"index":7938},"line":207,"code":"  it('should not perform freshness check unless 2xx or 304', function (done) {\n    var app = express();\n    var etag = '\"asdf\"';\n    app.use(function (req, res, next) {\n      res.status(500);\n      res.set('ETag', etag);\n      res.send('hey');\n    });\n    request(app).get('/').set('If-None-Match', etag).expect('hey').expect(500, done);\n  });","file":"res.send.js","skipped":false,"dir":"test"},{"name":"should not support jsonp callbacks","suites":["res","when .statusCode is 304"],"updatePoint":{"line":217,"column":40,"index":8264},"line":217,"code":"  it('should not support jsonp callbacks', function (done) {\n    var app = express();\n    app.use(function (req, res) {\n      res.send({\n        foo: 'bar'\n      });\n    });\n    request(app).get('/?callback=foo').expect('{\"foo\":\"bar\"}', done);\n  });","file":"res.send.js","skipped":false,"dir":"test"},{"name":"should be chainable","suites":["res","when .statusCode is 304"],"updatePoint":{"line":226,"column":25,"index":8499},"line":226,"code":"  it('should be chainable', function (done) {\n    var app = express();\n    app.use(function (req, res) {\n      assert.equal(res.send('hey'), res);\n    });\n    request(app).get('/').expect(200, 'hey', done);\n  });","file":"res.send.js","skipped":false,"dir":"test"},{"name":"should send ETag","suites":["res","\"etag\" setting","when enabled"],"updatePoint":{"line":235,"column":26,"index":8799},"line":235,"code":"      it('should send ETag', function (done) {\n        var app = express();\n        app.use(function (req, res) {\n          res.send('kajdslfkasdf');\n        });\n        app.enable('etag');\n        request(app).get('/').expect('ETag', 'W/\"c-IgR/L5SF7CJQff4wxKGF/vfPuZ0\"').expect(200, done);\n      });","file":"res.send.js","skipped":false,"dir":"test"},{"name":"should send ETag for empty string response","suites":["res","\"etag\" setting","when enabled"],"updatePoint":{"line":253,"column":52,"index":9572},"line":253,"code":"      it('should send ETag for empty string response', function (done) {\n        var app = express();\n        app.use(function (req, res) {\n          res.send('');\n        });\n        app.enable('etag');\n        request(app).get('/').expect('ETag', 'W/\"0-2jmj7l5rSw0yVb/vlWAYkK/YBwk\"').expect(200, done);\n      });","file":"res.send.js","skipped":false,"dir":"test"},{"name":"should send ETag for long response","suites":["res","\"etag\" setting","when enabled"],"updatePoint":{"line":261,"column":44,"index":9879},"line":261,"code":"      it('should send ETag for long response', function (done) {\n        var app = express();\n        app.use(function (req, res) {\n          var str = Array(1000).join('-');\n          res.send(str);\n        });\n        app.enable('etag');\n        request(app).get('/').expect('ETag', 'W/\"3e7-qPnkJ3CVdVhFJQvUBfF10TmVA7g\"').expect(200, done);\n      });","file":"res.send.js","skipped":false,"dir":"test"},{"name":"should not override ETag when manually set","suites":["res","\"etag\" setting","when enabled"],"updatePoint":{"line":270,"column":52,"index":10240},"line":270,"code":"      it('should not override ETag when manually set', function (done) {\n        var app = express();\n        app.use(function (req, res) {\n          res.set('etag', '\"asdf\"');\n          res.send(200);\n        });\n        app.enable('etag');\n        request(app).get('/').expect('ETag', '\"asdf\"').expect(200, done);\n      });","file":"res.send.js","skipped":false,"dir":"test"},{"name":"should not send ETag for res.send()","suites":["res","\"etag\" setting","when enabled"],"updatePoint":{"line":279,"column":45,"index":10559},"line":279,"code":"      it('should not send ETag for res.send()', function (done) {\n        var app = express();\n        app.use(function (req, res) {\n          res.send();\n        });\n        app.enable('etag');\n        request(app).get('/').expect(utils.shouldNotHaveHeader('ETag')).expect(200, done);\n      });","file":"res.send.js","skipped":false,"dir":"test"},{"name":"should send no ETag","suites":["res","\"etag\" setting","when disabled"],"updatePoint":{"line":289,"column":29,"index":10891},"line":289,"code":"      it('should send no ETag', function (done) {\n        var app = express();\n        app.use(function (req, res) {\n          var str = Array(1000).join('-');\n          res.send(str);\n        });\n        app.disable('etag');\n        request(app).get('/').expect(utils.shouldNotHaveHeader('ETag')).expect(200, done);\n      });","file":"res.send.js","skipped":false,"dir":"test"},{"name":"should send ETag when manually set","suites":["res","\"etag\" setting","when disabled"],"updatePoint":{"line":298,"column":44,"index":11233},"line":298,"code":"      it('should send ETag when manually set', function (done) {\n        var app = express();\n        app.disable('etag');\n        app.use(function (req, res) {\n          res.set('etag', '\"asdf\"');\n          res.send(200);\n        });\n        request(app).get('/').expect('ETag', '\"asdf\"').expect(200, done);\n      });","file":"res.send.js","skipped":false,"dir":"test"},{"name":"should send strong ETag","suites":["res","\"etag\" setting","when \"strong\""],"updatePoint":{"line":309,"column":33,"index":11593},"line":309,"code":"      it('should send strong ETag', function (done) {\n        var app = express();\n        app.set('etag', 'strong');\n        app.use(function (req, res) {\n          res.send('hello, world!');\n        });\n        request(app).get('/').expect('ETag', '\"d-HwnTDHB9U/PRbFMN1z1wps51lqk\"').expect(200, done);\n      });","file":"res.send.js","skipped":false,"dir":"test"},{"name":"should send weak ETag","suites":["res","\"etag\" setting","when \"weak\""],"updatePoint":{"line":319,"column":31,"index":11955},"line":319,"code":"      it('should send weak ETag', function (done) {\n        var app = express();\n        app.set('etag', 'weak');\n        app.use(function (req, res) {\n          res.send('hello, world!');\n        });\n        request(app).get('/').expect('ETag', 'W/\"d-HwnTDHB9U/PRbFMN1z1wps51lqk\"').expect(200, done);\n      });","file":"res.send.js","skipped":false,"dir":"test"},{"name":"should send custom ETag","suites":["res","\"etag\" setting","when a function"],"updatePoint":{"line":329,"column":33,"index":12323},"line":329,"code":"      it('should send custom ETag', function (done) {\n        var app = express();\n        app.set('etag', function (body, encoding) {\n          var chunk = !Buffer.isBuffer(body) ? Buffer.from(body, encoding) : body;\n          assert.strictEqual(chunk.toString(), 'hello, world!');\n          return '\"custom\"';\n        });\n        app.use(function (req, res) {\n          res.send('hello, world!');\n        });\n        request(app).get('/').expect('ETag', '\"custom\"').expect(200, done);\n      });","file":"res.send.js","skipped":false,"dir":"test"},{"name":"should not send falsy ETag","suites":["res","\"etag\" setting","when a function"],"updatePoint":{"line":341,"column":36,"index":12823},"line":341,"code":"      it('should not send falsy ETag', function (done) {\n        var app = express();\n        app.set('etag', function (body, encoding) {\n          return undefined;\n        });\n        app.use(function (req, res) {\n          res.send('hello, world!');\n        });\n        request(app).get('/').expect(utils.shouldNotHaveHeader('ETag')).expect(200, done);\n      });","file":"res.send.js","skipped":false,"dir":"test"},{"name":"should error missing path","suites":["res",".sendFile(path)"],"updatePoint":{"line":16,"column":33,"index":597},"line":16,"code":"    it('should error missing path', function (done) {\n      var app = createApp();\n      request(app).get('/').expect(500, /path.*required/, done);\n    });","file":"res.sendFile.js","skipped":false,"dir":"test"},{"name":"should error for non-string path","suites":["res",".sendFile(path)"],"updatePoint":{"line":20,"column":40,"index":760},"line":20,"code":"    it('should error for non-string path', function (done) {\n      var app = createApp(42);\n      request(app).get('/').expect(500, /TypeError: path must be a string to res.sendFile/, done);\n    });","file":"res.sendFile.js","skipped":false,"dir":"test"},{"name":"should error for non-absolute path","suites":["res",".sendFile(path)"],"updatePoint":{"line":24,"column":42,"index":961},"line":24,"code":"    it('should error for non-absolute path', function (done) {\n      var app = createApp('name.txt');\n      request(app).get('/').expect(500, /TypeError: path must be absolute/, done);\n    });","file":"res.sendFile.js","skipped":false,"dir":"test"},{"name":"should transfer a file","suites":["res",".sendFile(path)"],"updatePoint":{"line":28,"column":30,"index":1142},"line":28,"code":"    it('should transfer a file', function (done) {\n      var app = createApp(path.resolve(fixtures, 'name.txt'));\n      request(app).get('/').expect(200, 'tobi', done);\n    });","file":"res.sendFile.js","skipped":false,"dir":"test"},{"name":"should transfer a file with special characters in string","suites":["res",".sendFile(path)"],"updatePoint":{"line":32,"column":64,"index":1353},"line":32,"code":"    it('should transfer a file with special characters in string', function (done) {\n      var app = createApp(path.resolve(fixtures, '% of dogs.txt'));\n      request(app).get('/').expect(200, '20%', done);\n    });","file":"res.sendFile.js","skipped":false,"dir":"test"},{"name":"should include ETag","suites":["res",".sendFile(path)"],"updatePoint":{"line":36,"column":27,"index":1531},"line":36,"code":"    it('should include ETag', function (done) {\n      var app = createApp(path.resolve(fixtures, 'name.txt'));\n      request(app).get('/').expect('ETag', /^(?:W\\/)?\"[^\"]+\"$/).expect(200, 'tobi', done);\n    });","file":"res.sendFile.js","skipped":false,"dir":"test"},{"name":"should 304 when ETag matches","suites":["res",".sendFile(path)"],"updatePoint":{"line":40,"column":36,"index":1750},"line":40,"code":"    it('should 304 when ETag matches', function (done) {\n      var app = createApp(path.resolve(fixtures, 'name.txt'));\n      request(app).get('/').expect('ETag', /^(?:W\\/)?\"[^\"]+\"$/).expect(200, 'tobi', function (err, res) {\n        if (err) return done(err);\n        var etag = res.headers.etag;\n        request(app).get('/').set('If-None-Match', etag).expect(304, done);\n      });\n    });","file":"res.sendFile.js","skipped":false,"dir":"test"},{"name":"should 404 for directory","suites":["res",".sendFile(path)"],"updatePoint":{"line":48,"column":32,"index":2138},"line":48,"code":"    it('should 404 for directory', function (done) {\n      var app = createApp(path.resolve(fixtures, 'blog'));\n      request(app).get('/').expect(404, done);\n    });","file":"res.sendFile.js","skipped":false,"dir":"test"},{"name":"should 404 when not found","suites":["res",".sendFile(path)"],"updatePoint":{"line":52,"column":33,"index":2306},"line":52,"code":"    it('should 404 when not found', function (done) {\n      var app = createApp(path.resolve(fixtures, 'does-no-exist'));\n      app.use(function (req, res) {\n        res.statusCode = 200;\n        res.send('no!');\n      });\n      request(app).get('/').expect(404, done);\n    });","file":"res.sendFile.js","skipped":false,"dir":"test"},{"name":"should send cache-control by default","suites":["res",".sendFile(path)"],"updatePoint":{"line":60,"column":44,"index":2595},"line":60,"code":"    it('should send cache-control by default', function (done) {\n      var app = createApp(path.resolve(__dirname, 'fixtures/name.txt'));\n      request(app).get('/').expect('Cache-Control', 'public, max-age=0').expect(200, done);\n    });","file":"res.sendFile.js","skipped":false,"dir":"test"},{"name":"should not serve dotfiles by default","suites":["res",".sendFile(path)"],"updatePoint":{"line":64,"column":44,"index":2833},"line":64,"code":"    it('should not serve dotfiles by default', function (done) {\n      var app = createApp(path.resolve(__dirname, 'fixtures/.name'));\n      request(app).get('/').expect(404, done);\n    });","file":"res.sendFile.js","skipped":false,"dir":"test"},{"name":"should not override manual content-types","suites":["res",".sendFile(path)"],"updatePoint":{"line":68,"column":48,"index":3027},"line":68,"code":"    it('should not override manual content-types', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.contentType('application/x-bogus');\n        res.sendFile(path.resolve(fixtures, 'name.txt'));\n      });\n      request(app).get('/').expect('Content-Type', 'application/x-bogus').end(done);\n    });","file":"res.sendFile.js","skipped":false,"dir":"test"},{"name":"should not error if the client aborts","suites":["res",".sendFile(path)"],"updatePoint":{"line":76,"column":45,"index":3365},"line":76,"code":"    it('should not error if the client aborts', function (done) {\n      var app = express();\n      var cb = after(2, done);\n      var error = null;\n      app.use(function (req, res) {\n        setImmediate(function () {\n          res.sendFile(path.resolve(fixtures, 'name.txt'));\n          setTimeout(function () {\n            cb(error);\n          }, 10);\n        });\n        test.req.abort();\n      });\n      app.use(function (err, req, res, next) {\n        error = err;\n        next(err);\n      });\n      var server = app.listen();\n      var test = request(server).get('/');\n      test.end(function (err) {\n        assert.ok(err);\n        server.close(cb);\n      });\n    });","file":"res.sendFile.js","skipped":false,"dir":"test"},{"name":"should invoke the callback when complete","suites":["res",".sendFile(path, fn)"],"updatePoint":{"line":102,"column":48,"index":4098},"line":102,"code":"    it('should invoke the callback when complete', function (done) {\n      var cb = after(2, done);\n      var app = createApp(path.resolve(fixtures, 'name.txt'), cb);\n      request(app).get('/').expect(200, cb);\n    });","file":"res.sendFile.js","skipped":false,"dir":"test"},{"name":"should invoke the callback when client aborts","suites":["res",".sendFile(path, fn)"],"updatePoint":{"line":107,"column":53,"index":4323},"line":107,"code":"    it('should invoke the callback when client aborts', function (done) {\n      var cb = after(2, done);\n      var app = express();\n      app.use(function (req, res) {\n        setImmediate(function () {\n          res.sendFile(path.resolve(fixtures, 'name.txt'), function (err) {\n            assert.ok(err);\n            assert.strictEqual(err.code, 'ECONNABORTED');\n            cb();\n          });\n        });\n        test.req.abort();\n      });\n      var server = app.listen();\n      var test = request(server).get('/');\n      test.end(function (err) {\n        assert.ok(err);\n        server.close(cb);\n      });\n    });","file":"res.sendFile.js","skipped":false,"dir":"test"},{"name":"should invoke the callback when client already aborted","suites":["res",".sendFile(path, fn)"],"updatePoint":{"line":127,"column":62,"index":4953},"line":127,"code":"    it('should invoke the callback when client already aborted', function (done) {\n      var cb = after(2, done);\n      var app = express();\n      app.use(function (req, res) {\n        onFinished(res, function () {\n          res.sendFile(path.resolve(fixtures, 'name.txt'), function (err) {\n            assert.ok(err);\n            assert.strictEqual(err.code, 'ECONNABORTED');\n            cb();\n          });\n        });\n        test.req.abort();\n      });\n      var server = app.listen();\n      var test = request(server).get('/');\n      test.end(function (err) {\n        assert.ok(err);\n        server.close(cb);\n      });\n    });","file":"res.sendFile.js","skipped":false,"dir":"test"},{"name":"should invoke the callback without error when HEAD","suites":["res",".sendFile(path, fn)"],"updatePoint":{"line":147,"column":58,"index":5582},"line":147,"code":"    it('should invoke the callback without error when HEAD', function (done) {\n      var app = express();\n      var cb = after(2, done);\n      app.use(function (req, res) {\n        res.sendFile(path.resolve(fixtures, 'name.txt'), cb);\n      });\n      request(app).head('/').expect(200, cb);\n    });","file":"res.sendFile.js","skipped":false,"dir":"test"},{"name":"should invoke the callback without error when 304","suites":["res",".sendFile(path, fn)"],"updatePoint":{"line":155,"column":57,"index":5880},"line":155,"code":"    it('should invoke the callback without error when 304', function (done) {\n      var app = express();\n      var cb = after(3, done);\n      app.use(function (req, res) {\n        res.sendFile(path.resolve(fixtures, 'name.txt'), cb);\n      });\n      request(app).get('/').expect('ETag', /^(?:W\\/)?\"[^\"]+\"$/).expect(200, 'tobi', function (err, res) {\n        if (err) return cb(err);\n        var etag = res.headers.etag;\n        request(app).get('/').set('If-None-Match', etag).expect(304, cb);\n      });\n    });","file":"res.sendFile.js","skipped":false,"dir":"test"},{"name":"should invoke the callback on 404","suites":["res",".sendFile(path, fn)"],"updatePoint":{"line":167,"column":41,"index":6376},"line":167,"code":"    it('should invoke the callback on 404', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.sendFile(path.resolve(fixtures, 'does-not-exist'), function (err) {\n          res.send(err ? 'got ' + err.status + ' error' : 'no error');\n        });\n      });\n      request(app).get('/').expect(200, 'got 404 error', done);\n    });","file":"res.sendFile.js","skipped":false,"dir":"test"},{"name":"should presist store","suites":["res",".sendFile(path, fn)"],"updatePoint":{"line":177,"column":30,"index":6795},"line":177,"code":"      it('should presist store', function (done) {\n        var app = express();\n        var cb = after(2, done);\n        var store = {\n          foo: 'bar'\n        };\n        app.use(function (req, res, next) {\n          req.asyncLocalStorage = new asyncHooks.AsyncLocalStorage();\n          req.asyncLocalStorage.run(store, next);\n        });\n        app.use(function (req, res) {\n          res.sendFile(path.resolve(fixtures, 'name.txt'), function (err) {\n            if (err) return cb(err);\n            var local = req.asyncLocalStorage.getStore();\n            assert.strictEqual(local.foo, 'bar');\n            cb();\n          });\n        });\n        request(app).get('/').expect('Content-Type', 'text/plain; charset=UTF-8').expect(200, 'tobi', cb);\n      });","file":"res.sendFile.js","skipped":false,"dir":"test"},{"name":"should presist store on error","suites":["res",".sendFile(path, fn)"],"updatePoint":{"line":197,"column":39,"index":7567},"line":197,"code":"      it('should presist store on error', function (done) {\n        var app = express();\n        var store = {\n          foo: 'bar'\n        };\n        app.use(function (req, res, next) {\n          req.asyncLocalStorage = new asyncHooks.AsyncLocalStorage();\n          req.asyncLocalStorage.run(store, next);\n        });\n        app.use(function (req, res) {\n          res.sendFile(path.resolve(fixtures, 'does-not-exist'), function (err) {\n            var local = req.asyncLocalStorage.getStore();\n            if (local) {\n              res.setHeader('x-store-foo', String(local.foo));\n            }\n            res.send(err ? 'got ' + err.status + ' error' : 'no error');\n          });\n        });\n        request(app).get('/').expect(200).expect('x-store-foo', 'bar').expect('got 404 error').end(done);\n      });","file":"res.sendFile.js","skipped":false,"dir":"test"},{"name":"should pass options to send module","suites":["res",".sendFile(path, options)"],"updatePoint":{"line":220,"column":42,"index":8451},"line":220,"code":"    it('should pass options to send module', function (done) {\n      request(createApp(path.resolve(fixtures, 'name.txt'), {\n        start: 0,\n        end: 1\n      })).get('/').expect(200, 'to', done);\n    });","file":"res.sendFile.js","skipped":false,"dir":"test"},{"name":"should advertise byte range accepted","suites":["res",".sendFile(path, options)","with \"acceptRanges\" option","when true"],"updatePoint":{"line":228,"column":48,"index":8766},"line":228,"code":"        it('should advertise byte range accepted', function (done) {\n          var app = express();\n          app.use(function (req, res) {\n            res.sendFile(path.resolve(fixtures, 'nums.txt'), {\n              acceptRanges: true\n            });\n          });\n          request(app).get('/').expect(200).expect('Accept-Ranges', 'bytes').expect('123456789').end(done);\n        });","file":"res.sendFile.js","skipped":false,"dir":"test"},{"name":"should respond to range request","suites":["res",".sendFile(path, options)","with \"acceptRanges\" option","when true"],"updatePoint":{"line":237,"column":43,"index":9147},"line":237,"code":"        it('should respond to range request', function (done) {\n          var app = express();\n          app.use(function (req, res) {\n            res.sendFile(path.resolve(fixtures, 'nums.txt'), {\n              acceptRanges: true\n            });\n          });\n          request(app).get('/').set('Range', 'bytes=0-4').expect(206, '12345', done);\n        });","file":"res.sendFile.js","skipped":false,"dir":"test"},{"name":"should not advertise accept-ranges","suites":["res",".sendFile(path, options)","with \"acceptRanges\" option","when false"],"updatePoint":{"line":248,"column":46,"index":9562},"line":248,"code":"        it('should not advertise accept-ranges', function (done) {\n          var app = express();\n          app.use(function (req, res) {\n            res.sendFile(path.resolve(fixtures, 'nums.txt'), {\n              acceptRanges: false\n            });\n          });\n          request(app).get('/').expect(200).expect(utils.shouldNotHaveHeader('Accept-Ranges')).end(done);\n        });","file":"res.sendFile.js","skipped":false,"dir":"test"},{"name":"should not honor range requests","suites":["res",".sendFile(path, options)","with \"acceptRanges\" option","when false"],"updatePoint":{"line":257,"column":43,"index":9942},"line":257,"code":"        it('should not honor range requests', function (done) {\n          var app = express();\n          app.use(function (req, res) {\n            res.sendFile(path.resolve(fixtures, 'nums.txt'), {\n              acceptRanges: false\n            });\n          });\n          request(app).get('/').set('Range', 'bytes=0-4').expect(200, '123456789', done);\n        });","file":"res.sendFile.js","skipped":false,"dir":"test"},{"name":"should send cache-control header","suites":["res",".sendFile(path, options)","with \"cacheControl\" option","when true"],"updatePoint":{"line":270,"column":44,"index":10424},"line":270,"code":"        it('should send cache-control header', function (done) {\n          var app = express();\n          app.use(function (req, res) {\n            res.sendFile(path.resolve(fixtures, 'user.html'), {\n              cacheControl: true\n            });\n          });\n          request(app).get('/').expect(200).expect('Cache-Control', 'public, max-age=0').end(done);\n        });","file":"res.sendFile.js","skipped":false,"dir":"test"},{"name":"should not send cache-control header","suites":["res",".sendFile(path, options)","with \"cacheControl\" option","when false"],"updatePoint":{"line":281,"column":48,"index":10856},"line":281,"code":"        it('should not send cache-control header', function (done) {\n          var app = express();\n          app.use(function (req, res) {\n            res.sendFile(path.resolve(fixtures, 'user.html'), {\n              cacheControl: false\n            });\n          });\n          request(app).get('/').expect(200).expect(utils.shouldNotHaveHeader('Cache-Control')).end(done);\n        });","file":"res.sendFile.js","skipped":false,"dir":"test"},{"name":"should allow dotfiles","suites":["res",".sendFile(path, options)","with \"dotfiles\" option","when \"allow\""],"updatePoint":{"line":294,"column":33,"index":11343},"line":294,"code":"        it('should allow dotfiles', function (done) {\n          var app = express();\n          app.use(function (req, res) {\n            res.sendFile(path.resolve(fixtures, '.name'), {\n              dotfiles: 'allow'\n            });\n          });\n          request(app).get('/').expect(200).expect(utils.shouldHaveBody(Buffer.from('tobi'))).end(done);\n        });","file":"res.sendFile.js","skipped":false,"dir":"test"},{"name":"should deny dotfiles","suites":["res",".sendFile(path, options)","with \"dotfiles\" option","when \"deny\""],"updatePoint":{"line":305,"column":32,"index":11760},"line":305,"code":"        it('should deny dotfiles', function (done) {\n          var app = express();\n          app.use(function (req, res) {\n            res.sendFile(path.resolve(fixtures, '.name'), {\n              dotfiles: 'deny'\n            });\n          });\n          request(app).get('/').expect(403).expect(/Forbidden/).end(done);\n        });","file":"res.sendFile.js","skipped":false,"dir":"test"},{"name":"should ignore dotfiles","suites":["res",".sendFile(path, options)","with \"dotfiles\" option","when \"ignore\""],"updatePoint":{"line":316,"column":34,"index":12150},"line":316,"code":"        it('should ignore dotfiles', function (done) {\n          var app = express();\n          app.use(function (req, res) {\n            res.sendFile(path.resolve(fixtures, '.name'), {\n              dotfiles: 'ignore'\n            });\n          });\n          request(app).get('/').expect(404).expect(/Not Found/).end(done);\n        });","file":"res.sendFile.js","skipped":false,"dir":"test"},{"name":"should set headers on response","suites":["res",".sendFile(path, options)","with \"headers\" option"],"updatePoint":{"line":328,"column":40,"index":12562},"line":328,"code":"      it('should set headers on response', function (done) {\n        var app = express();\n        app.use(function (req, res) {\n          res.sendFile(path.resolve(fixtures, 'user.html'), {\n            headers: {\n              'X-Foo': 'Bar',\n              'X-Bar': 'Foo'\n            }\n          });\n        });\n        request(app).get('/').expect(200).expect('X-Foo', 'Bar').expect('X-Bar', 'Foo').end(done);\n      });","file":"res.sendFile.js","skipped":false,"dir":"test"},{"name":"should use last header when duplicated","suites":["res",".sendFile(path, options)","with \"headers\" option"],"updatePoint":{"line":340,"column":48,"index":12991},"line":340,"code":"      it('should use last header when duplicated', function (done) {\n        var app = express();\n        app.use(function (req, res) {\n          res.sendFile(path.resolve(fixtures, 'user.html'), {\n            headers: {\n              'X-Foo': 'Bar',\n              'x-foo': 'bar'\n            }\n          });\n        });\n        request(app).get('/').expect(200).expect('X-Foo', 'bar').end(done);\n      });","file":"res.sendFile.js","skipped":false,"dir":"test"},{"name":"should override Content-Type","suites":["res",".sendFile(path, options)","with \"headers\" option"],"updatePoint":{"line":352,"column":38,"index":13387},"line":352,"code":"      it('should override Content-Type', function (done) {\n        var app = express();\n        app.use(function (req, res) {\n          res.sendFile(path.resolve(fixtures, 'user.html'), {\n            headers: {\n              'Content-Type': 'text/x-custom'\n            }\n          });\n        });\n        request(app).get('/').expect(200).expect('Content-Type', 'text/x-custom').end(done);\n      });","file":"res.sendFile.js","skipped":false,"dir":"test"},{"name":"should not set headers on 404","suites":["res",".sendFile(path, options)","with \"headers\" option"],"updatePoint":{"line":363,"column":39,"index":13788},"line":363,"code":"      it('should not set headers on 404', function (done) {\n        var app = express();\n        app.use(function (req, res) {\n          res.sendFile(path.resolve(fixtures, 'does-not-exist'), {\n            headers: {\n              'X-Foo': 'Bar'\n            }\n          });\n        });\n        request(app).get('/').expect(404).expect(utils.shouldNotHaveHeader('X-Foo')).end(done);\n      });","file":"res.sendFile.js","skipped":false,"dir":"test"},{"name":"should send cache-control header with immutable","suites":["res",".sendFile(path, options)","with \"immutable\" option","when true"],"updatePoint":{"line":377,"column":59,"index":14304},"line":377,"code":"        it('should send cache-control header with immutable', function (done) {\n          var app = express();\n          app.use(function (req, res) {\n            res.sendFile(path.resolve(fixtures, 'user.html'), {\n              immutable: true\n            });\n          });\n          request(app).get('/').expect(200).expect('Cache-Control', 'public, max-age=0, immutable').end(done);\n        });","file":"res.sendFile.js","skipped":false,"dir":"test"},{"name":"should not send cache-control header with immutable","suites":["res",".sendFile(path, options)","with \"immutable\" option","when false"],"updatePoint":{"line":388,"column":63,"index":14759},"line":388,"code":"        it('should not send cache-control header with immutable', function (done) {\n          var app = express();\n          app.use(function (req, res) {\n            res.sendFile(path.resolve(fixtures, 'user.html'), {\n              immutable: false\n            });\n          });\n          request(app).get('/').expect(200).expect('Cache-Control', 'public, max-age=0').end(done);\n        });","file":"res.sendFile.js","skipped":false,"dir":"test"},{"name":"should send last-modified header","suites":["res",".sendFile(path, options)","with \"lastModified\" option","when true"],"updatePoint":{"line":401,"column":44,"index":15249},"line":401,"code":"        it('should send last-modified header', function (done) {\n          var app = express();\n          app.use(function (req, res) {\n            res.sendFile(path.resolve(fixtures, 'user.html'), {\n              lastModified: true\n            });\n          });\n          request(app).get('/').expect(200).expect(utils.shouldHaveHeader('Last-Modified')).end(done);\n        });","file":"res.sendFile.js","skipped":false,"dir":"test"},{"name":"should conditionally respond with if-modified-since","suites":["res",".sendFile(path, options)","with \"lastModified\" option","when true"],"updatePoint":{"line":410,"column":63,"index":15646},"line":410,"code":"        it('should conditionally respond with if-modified-since', function (done) {\n          var app = express();\n          app.use(function (req, res) {\n            res.sendFile(path.resolve(fixtures, 'user.html'), {\n              lastModified: true\n            });\n          });\n          request(app).get('/').set('If-Modified-Since', new Date(Date.now() + 99999).toUTCString()).expect(304, done);\n        });","file":"res.sendFile.js","skipped":false,"dir":"test"},{"name":"should not have last-modified header","suites":["res",".sendFile(path, options)","with \"lastModified\" option","when false"],"updatePoint":{"line":421,"column":48,"index":16098},"line":421,"code":"        it('should not have last-modified header', function (done) {\n          var app = express();\n          app.use(function (req, res) {\n            res.sendFile(path.resolve(fixtures, 'user.html'), {\n              lastModified: false\n            });\n          });\n          request(app).get('/').expect(200).expect(utils.shouldNotHaveHeader('Last-Modified')).end(done);\n        });","file":"res.sendFile.js","skipped":false,"dir":"test"},{"name":"should not honor if-modified-since","suites":["res",".sendFile(path, options)","with \"lastModified\" option","when false"],"updatePoint":{"line":430,"column":46,"index":16482},"line":430,"code":"        it('should not honor if-modified-since', function (done) {\n          var app = express();\n          app.use(function (req, res) {\n            res.sendFile(path.resolve(fixtures, 'user.html'), {\n              lastModified: false\n            });\n          });\n          request(app).get('/').set('If-Modified-Since', new Date(Date.now() + 99999).toUTCString()).expect(200).expect(utils.shouldNotHaveHeader('Last-Modified')).end(done);\n        });","file":"res.sendFile.js","skipped":false,"dir":"test"},{"name":"should set cache-control max-age to milliseconds","suites":["res",".sendFile(path, options)","with \"maxAge\" option"],"updatePoint":{"line":442,"column":58,"index":17016},"line":442,"code":"      it('should set cache-control max-age to milliseconds', function (done) {\n        var app = express();\n        app.use(function (req, res) {\n          res.sendFile(path.resolve(fixtures, 'user.html'), {\n            maxAge: 20000\n          });\n        });\n        request(app).get('/').expect(200).expect('Cache-Control', 'public, max-age=20').end(done);\n      });","file":"res.sendFile.js","skipped":false,"dir":"test"},{"name":"should cap cache-control max-age to 1 year","suites":["res",".sendFile(path, options)","with \"maxAge\" option"],"updatePoint":{"line":451,"column":52,"index":17379},"line":451,"code":"      it('should cap cache-control max-age to 1 year', function (done) {\n        var app = express();\n        app.use(function (req, res) {\n          res.sendFile(path.resolve(fixtures, 'user.html'), {\n            maxAge: 99999999999\n          });\n        });\n        request(app).get('/').expect(200).expect('Cache-Control', 'public, max-age=31536000').end(done);\n      });","file":"res.sendFile.js","skipped":false,"dir":"test"},{"name":"should min cache-control max-age to 0","suites":["res",".sendFile(path, options)","with \"maxAge\" option"],"updatePoint":{"line":460,"column":47,"index":17749},"line":460,"code":"      it('should min cache-control max-age to 0', function (done) {\n        var app = express();\n        app.use(function (req, res) {\n          res.sendFile(path.resolve(fixtures, 'user.html'), {\n            maxAge: -20000\n          });\n        });\n        request(app).get('/').expect(200).expect('Cache-Control', 'public, max-age=0').end(done);\n      });","file":"res.sendFile.js","skipped":false,"dir":"test"},{"name":"should floor cache-control max-age","suites":["res",".sendFile(path, options)","with \"maxAge\" option"],"updatePoint":{"line":469,"column":44,"index":18104},"line":469,"code":"      it('should floor cache-control max-age', function (done) {\n        var app = express();\n        app.use(function (req, res) {\n          res.sendFile(path.resolve(fixtures, 'user.html'), {\n            maxAge: 21911.23\n          });\n        });\n        request(app).get('/').expect(200).expect('Cache-Control', 'public, max-age=21').end(done);\n      });","file":"res.sendFile.js","skipped":false,"dir":"test"},{"name":"should not send cache-control","suites":["res",".sendFile(path, options)","with \"maxAge\" option","when cacheControl: false"],"updatePoint":{"line":479,"column":41,"index":18516},"line":479,"code":"        it('should not send cache-control', function (done) {\n          var app = express();\n          app.use(function (req, res) {\n            res.sendFile(path.resolve(fixtures, 'user.html'), {\n              cacheControl: false,\n              maxAge: 20000\n            });\n          });\n          request(app).get('/').expect(200).expect(utils.shouldNotHaveHeader('Cache-Control')).end(done);\n        });","file":"res.sendFile.js","skipped":false,"dir":"test"},{"name":"should accept plain number as milliseconds","suites":["res",".sendFile(path, options)","with \"maxAge\" option","when string"],"updatePoint":{"line":491,"column":54,"index":18991},"line":491,"code":"        it('should accept plain number as milliseconds', function (done) {\n          var app = express();\n          app.use(function (req, res) {\n            res.sendFile(path.resolve(fixtures, 'user.html'), {\n              maxAge: '20000'\n            });\n          });\n          request(app).get('/').expect(200).expect('Cache-Control', 'public, max-age=20').end(done);\n        });","file":"res.sendFile.js","skipped":false,"dir":"test"},{"name":"should accept suffix \"s\" for seconds","suites":["res",".sendFile(path, options)","with \"maxAge\" option","when string"],"updatePoint":{"line":500,"column":48,"index":19368},"line":500,"code":"        it('should accept suffix \"s\" for seconds', function (done) {\n          var app = express();\n          app.use(function (req, res) {\n            res.sendFile(path.resolve(fixtures, 'user.html'), {\n              maxAge: '20s'\n            });\n          });\n          request(app).get('/').expect(200).expect('Cache-Control', 'public, max-age=20').end(done);\n        });","file":"res.sendFile.js","skipped":false,"dir":"test"},{"name":"should accept suffix \"m\" for minutes","suites":["res",".sendFile(path, options)","with \"maxAge\" option","when string"],"updatePoint":{"line":509,"column":48,"index":19743},"line":509,"code":"        it('should accept suffix \"m\" for minutes', function (done) {\n          var app = express();\n          app.use(function (req, res) {\n            res.sendFile(path.resolve(fixtures, 'user.html'), {\n              maxAge: '20m'\n            });\n          });\n          request(app).get('/').expect(200).expect('Cache-Control', 'public, max-age=1200').end(done);\n        });","file":"res.sendFile.js","skipped":false,"dir":"test"},{"name":"should accept suffix \"d\" for days","suites":["res",".sendFile(path, options)","with \"maxAge\" option","when string"],"updatePoint":{"line":518,"column":45,"index":20117},"line":518,"code":"        it('should accept suffix \"d\" for days', function (done) {\n          var app = express();\n          app.use(function (req, res) {\n            res.sendFile(path.resolve(fixtures, 'user.html'), {\n              maxAge: '20d'\n            });\n          });\n          request(app).get('/').expect(200).expect('Cache-Control', 'public, max-age=1728000').end(done);\n        });","file":"res.sendFile.js","skipped":false,"dir":"test"},{"name":"should allow relative path","suites":["res",".sendFile(path, options)","with \"root\" option"],"updatePoint":{"line":530,"column":36,"index":20552},"line":530,"code":"      it('should allow relative path', function (done) {\n        var app = express();\n        app.use(function (req, res) {\n          res.sendFile('name.txt', {\n            root: fixtures\n          });\n        });\n        request(app).get('/').expect(200, 'tobi', done);\n      });","file":"res.sendFile.js","skipped":false,"dir":"test"},{"name":"should allow up within root","suites":["res",".sendFile(path, options)","with \"root\" option"],"updatePoint":{"line":539,"column":37,"index":20834},"line":539,"code":"      it('should allow up within root', function (done) {\n        var app = express();\n        app.use(function (req, res) {\n          res.sendFile('fake/../name.txt', {\n            root: fixtures\n          });\n        });\n        request(app).get('/').expect(200, 'tobi', done);\n      });","file":"res.sendFile.js","skipped":false,"dir":"test"},{"name":"should reject up outside root","suites":["res",".sendFile(path, options)","with \"root\" option"],"updatePoint":{"line":548,"column":39,"index":21126},"line":548,"code":"      it('should reject up outside root', function (done) {\n        var app = express();\n        app.use(function (req, res) {\n          res.sendFile('..' + path.sep + path.relative(path.dirname(fixtures), path.join(fixtures, 'name.txt')), {\n            root: fixtures\n          });\n        });\n        request(app).get('/').expect(403, done);\n      });","file":"res.sendFile.js","skipped":false,"dir":"test"},{"name":"should reject reading outside root","suites":["res",".sendFile(path, options)","with \"root\" option"],"updatePoint":{"line":557,"column":44,"index":21485},"line":557,"code":"      it('should reject reading outside root', function (done) {\n        var app = express();\n        app.use(function (req, res) {\n          res.sendFile('../name.txt', {\n            root: fixtures\n          });\n        });\n        request(app).get('/').expect(403, done);\n      });","file":"res.sendFile.js","skipped":false,"dir":"test"},{"name":"should invoke the callback when complete","suites":["res",".sendfile(path, fn)"],"updatePoint":{"line":569,"column":48,"index":21835},"line":569,"code":"    it('should invoke the callback when complete', function (done) {\n      var app = express();\n      var cb = after(2, done);\n      app.use(function (req, res) {\n        res.sendfile('test/fixtures/user.html', cb);\n      });\n      request(app).get('/').expect(200, cb);\n    });","file":"res.sendFile.js","skipped":false,"dir":"test"},{"name":"should utilize the same options as express.static()","suites":["res",".sendfile(path, fn)"],"updatePoint":{"line":577,"column":59,"index":22125},"line":577,"code":"    it('should utilize the same options as express.static()', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.sendfile('test/fixtures/user.html', {\n          maxAge: 60000\n        });\n      });\n      request(app).get('/').expect('Cache-Control', 'public, max-age=60').end(done);\n    });","file":"res.sendFile.js","skipped":false,"dir":"test"},{"name":"should invoke the callback when client aborts","suites":["res",".sendfile(path, fn)"],"updatePoint":{"line":586,"column":53,"index":22451},"line":586,"code":"    it('should invoke the callback when client aborts', function (done) {\n      var cb = after(2, done);\n      var app = express();\n      app.use(function (req, res) {\n        setImmediate(function () {\n          res.sendfile('test/fixtures/name.txt', function (err) {\n            assert.ok(err);\n            assert.strictEqual(err.code, 'ECONNABORTED');\n            cb();\n          });\n        });\n        test.req.abort();\n      });\n      var server = app.listen();\n      var test = request(server).get('/');\n      test.end(function (err) {\n        assert.ok(err);\n        server.close(cb);\n      });\n    });","file":"res.sendFile.js","skipped":false,"dir":"test"},{"name":"should invoke the callback when client already aborted","suites":["res",".sendfile(path, fn)"],"updatePoint":{"line":606,"column":62,"index":23071},"line":606,"code":"    it('should invoke the callback when client already aborted', function (done) {\n      var cb = after(2, done);\n      var app = express();\n      app.use(function (req, res) {\n        onFinished(res, function () {\n          res.sendfile('test/fixtures/name.txt', function (err) {\n            assert.ok(err);\n            assert.strictEqual(err.code, 'ECONNABORTED');\n            cb();\n          });\n        });\n        test.req.abort();\n      });\n      var server = app.listen();\n      var test = request(server).get('/');\n      test.end(function (err) {\n        assert.ok(err);\n        server.close(cb);\n      });\n    });","file":"res.sendFile.js","skipped":false,"dir":"test"},{"name":"should invoke the callback without error when HEAD","suites":["res",".sendfile(path, fn)"],"updatePoint":{"line":626,"column":58,"index":23690},"line":626,"code":"    it('should invoke the callback without error when HEAD', function (done) {\n      var app = express();\n      var cb = after(2, done);\n      app.use(function (req, res) {\n        res.sendfile('test/fixtures/name.txt', cb);\n      });\n      request(app).head('/').expect(200, cb);\n    });","file":"res.sendFile.js","skipped":false,"dir":"test"},{"name":"should invoke the callback without error when 304","suites":["res",".sendfile(path, fn)"],"updatePoint":{"line":634,"column":57,"index":23978},"line":634,"code":"    it('should invoke the callback without error when 304', function (done) {\n      var app = express();\n      var cb = after(3, done);\n      app.use(function (req, res) {\n        res.sendfile('test/fixtures/name.txt', cb);\n      });\n      request(app).get('/').expect('ETag', /^(?:W\\/)?\"[^\"]+\"$/).expect(200, 'tobi', function (err, res) {\n        if (err) return cb(err);\n        var etag = res.headers.etag;\n        request(app).get('/').set('If-None-Match', etag).expect(304, cb);\n      });\n    });","file":"res.sendFile.js","skipped":false,"dir":"test"},{"name":"should invoke the callback on 404","suites":["res",".sendfile(path, fn)"],"updatePoint":{"line":646,"column":41,"index":24464},"line":646,"code":"    it('should invoke the callback on 404', function (done) {\n      var app = express();\n      var calls = 0;\n      app.use(function (req, res) {\n        res.sendfile('test/fixtures/nope.html', function (err) {\n          assert.equal(calls++, 0);\n          assert(!res.headersSent);\n          res.send(err.message);\n        });\n      });\n      request(app).get('/').expect(200, /^ENOENT.*?, stat/, done);\n    });","file":"res.sendFile.js","skipped":false,"dir":"test"},{"name":"should not override manual content-types","suites":["res",".sendfile(path, fn)"],"updatePoint":{"line":658,"column":48,"index":24884},"line":658,"code":"    it('should not override manual content-types', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.contentType('txt');\n        res.sendfile('test/fixtures/user.html');\n      });\n      request(app).get('/').expect('Content-Type', 'text/plain; charset=utf-8').end(done);\n    });","file":"res.sendFile.js","skipped":false,"dir":"test"},{"name":"should invoke the callback on 403","suites":["res",".sendfile(path, fn)"],"updatePoint":{"line":666,"column":41,"index":25199},"line":666,"code":"    it('should invoke the callback on 403', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.sendfile('test/fixtures/foo/../user.html', function (err) {\n          assert(!res.headersSent);\n          res.send(err.message);\n        });\n      });\n      request(app).get('/').expect('Forbidden').expect(200, done);\n    });","file":"res.sendFile.js","skipped":false,"dir":"test"},{"name":"should invoke the callback on socket error","suites":["res",".sendfile(path, fn)"],"updatePoint":{"line":676,"column":50,"index":25571},"line":676,"code":"    it('should invoke the callback on socket error', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.sendfile('test/fixtures/user.html', function (err) {\n          assert.ok(err);\n          assert.ok(!res.headersSent);\n          assert.strictEqual(err.message, 'broken!');\n          done();\n        });\n        req.socket.destroy(new Error('broken!'));\n      });\n      request(app).get('/').end(function () {});\n    });","file":"res.sendFile.js","skipped":false,"dir":"test"},{"name":"should presist store","suites":["res",".sendfile(path, fn)"],"updatePoint":{"line":690,"column":30,"index":26076},"line":690,"code":"      it('should presist store', function (done) {\n        var app = express();\n        var cb = after(2, done);\n        var store = {\n          foo: 'bar'\n        };\n        app.use(function (req, res, next) {\n          req.asyncLocalStorage = new asyncHooks.AsyncLocalStorage();\n          req.asyncLocalStorage.run(store, next);\n        });\n        app.use(function (req, res) {\n          res.sendfile('test/fixtures/name.txt', function (err) {\n            if (err) return cb(err);\n            var local = req.asyncLocalStorage.getStore();\n            assert.strictEqual(local.foo, 'bar');\n            cb();\n          });\n        });\n        request(app).get('/').expect('Content-Type', 'text/plain; charset=UTF-8').expect(200, 'tobi', cb);\n      });","file":"res.sendFile.js","skipped":false,"dir":"test"},{"name":"should presist store on error","suites":["res",".sendfile(path, fn)"],"updatePoint":{"line":710,"column":39,"index":26838},"line":710,"code":"      it('should presist store on error', function (done) {\n        var app = express();\n        var store = {\n          foo: 'bar'\n        };\n        app.use(function (req, res, next) {\n          req.asyncLocalStorage = new asyncHooks.AsyncLocalStorage();\n          req.asyncLocalStorage.run(store, next);\n        });\n        app.use(function (req, res) {\n          res.sendfile('test/fixtures/does-not-exist', function (err) {\n            var local = req.asyncLocalStorage.getStore();\n            if (local) {\n              res.setHeader('x-store-foo', String(local.foo));\n            }\n            res.send(err ? 'got ' + err.status + ' error' : 'no error');\n          });\n        });\n        request(app).get('/').expect(200).expect('x-store-foo', 'bar').expect('got 404 error').end(done);\n      });","file":"res.sendFile.js","skipped":false,"dir":"test"},{"name":"should not serve dotfiles","suites":["res",".sendfile(path)"],"updatePoint":{"line":733,"column":33,"index":27694},"line":733,"code":"    it('should not serve dotfiles', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.sendfile('test/fixtures/.name');\n      });\n      request(app).get('/').expect(404, done);\n    });","file":"res.sendFile.js","skipped":false,"dir":"test"},{"name":"should accept dotfiles option","suites":["res",".sendfile(path)"],"updatePoint":{"line":740,"column":37,"index":27925},"line":740,"code":"    it('should accept dotfiles option', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.sendfile('test/fixtures/.name', {\n          dotfiles: 'allow'\n        });\n      });\n      request(app).get('/').expect(200).expect(utils.shouldHaveBody(Buffer.from('tobi'))).end(done);\n    });","file":"res.sendFile.js","skipped":false,"dir":"test"},{"name":"should accept headers option","suites":["res",".sendfile(path)"],"updatePoint":{"line":749,"column":36,"index":28250},"line":749,"code":"    it('should accept headers option', function (done) {\n      var app = express();\n      var headers = {\n        'x-success': 'sent',\n        'x-other': 'done'\n      };\n      app.use(function (req, res) {\n        res.sendfile('test/fixtures/user.html', {\n          headers: headers\n        });\n      });\n      request(app).get('/').expect('x-success', 'sent').expect('x-other', 'done').expect(200, done);\n    });","file":"res.sendFile.js","skipped":false,"dir":"test"},{"name":"should ignore headers option on 404","suites":["res",".sendfile(path)"],"updatePoint":{"line":762,"column":43,"index":28671},"line":762,"code":"    it('should ignore headers option on 404', function (done) {\n      var app = express();\n      var headers = {\n        'x-success': 'sent'\n      };\n      app.use(function (req, res) {\n        res.sendfile('test/fixtures/user.nothing', {\n          headers: headers\n        });\n      });\n      request(app).get('/').expect(utils.shouldNotHaveHeader('X-Success')).expect(404, done);\n    });","file":"res.sendFile.js","skipped":false,"dir":"test"},{"name":"should transfer a file","suites":["res",".sendfile(path)"],"updatePoint":{"line":774,"column":30,"index":29048},"line":774,"code":"    it('should transfer a file', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.sendfile('test/fixtures/name.txt');\n      });\n      request(app).get('/').expect(200, 'tobi', done);\n    });","file":"res.sendFile.js","skipped":false,"dir":"test"},{"name":"should transfer a directory index file","suites":["res",".sendfile(path)"],"updatePoint":{"line":781,"column":46,"index":29299},"line":781,"code":"    it('should transfer a directory index file', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.sendfile('test/fixtures/blog/');\n      });\n      request(app).get('/').expect(200, '<b>index</b>', done);\n    });","file":"res.sendFile.js","skipped":false,"dir":"test"},{"name":"should 404 for directory without trailing slash","suites":["res",".sendfile(path)"],"updatePoint":{"line":788,"column":55,"index":29564},"line":788,"code":"    it('should 404 for directory without trailing slash', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.sendfile('test/fixtures/blog');\n      });\n      request(app).get('/').expect(404, done);\n    });","file":"res.sendFile.js","skipped":false,"dir":"test"},{"name":"should transfer a file with urlencoded name","suites":["res",".sendfile(path)"],"updatePoint":{"line":795,"column":51,"index":29808},"line":795,"code":"    it('should transfer a file with urlencoded name', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.sendfile('test/fixtures/%25%20of%20dogs.txt');\n      });\n      request(app).get('/').expect(200, '20%', done);\n    });","file":"res.sendFile.js","skipped":false,"dir":"test"},{"name":"should not error if the client aborts","suites":["res",".sendfile(path)"],"updatePoint":{"line":802,"column":45,"index":30068},"line":802,"code":"    it('should not error if the client aborts', function (done) {\n      var app = express();\n      var cb = after(2, done);\n      var error = null;\n      app.use(function (req, res) {\n        setImmediate(function () {\n          res.sendfile(path.resolve(fixtures, 'name.txt'));\n          setTimeout(function () {\n            cb(error);\n          }, 10);\n        });\n        test.req.abort();\n      });\n      app.use(function (err, req, res, next) {\n        error = err;\n        next(err);\n      });\n      var server = app.listen();\n      var test = request(server).get('/');\n      test.end(function (err) {\n        assert.ok(err);\n        server.close(cb);\n      });\n    });","file":"res.sendFile.js","skipped":false,"dir":"test"},{"name":"should transfer the file","suites":["res",".sendfile(path)","with an absolute path"],"updatePoint":{"line":827,"column":34,"index":30785},"line":827,"code":"      it('should transfer the file', function (done) {\n        var app = express();\n        app.use(function (req, res) {\n          res.sendfile(path.join(__dirname, '/fixtures/user.html'));\n        });\n        request(app).get('/').expect('Content-Type', 'text/html; charset=UTF-8').expect(200, '<p>{{user.name}}</p>', done);\n      });","file":"res.sendFile.js","skipped":false,"dir":"test"},{"name":"should transfer the file","suites":["res",".sendfile(path)","with a relative path"],"updatePoint":{"line":836,"column":34,"index":31181},"line":836,"code":"      it('should transfer the file', function (done) {\n        var app = express();\n        app.use(function (req, res) {\n          res.sendfile('test/fixtures/user.html');\n        });\n        request(app).get('/').expect('Content-Type', 'text/html; charset=UTF-8').expect(200, '<p>{{user.name}}</p>', done);\n      });","file":"res.sendFile.js","skipped":false,"dir":"test"},{"name":"should serve relative to \"root\"","suites":["res",".sendfile(path)","with a relative path"],"updatePoint":{"line":843,"column":41,"index":31507},"line":843,"code":"      it('should serve relative to \"root\"', function (done) {\n        var app = express();\n        app.use(function (req, res) {\n          res.sendfile('user.html', {\n            root: 'test/fixtures/'\n          });\n        });\n        request(app).get('/').expect('Content-Type', 'text/html; charset=UTF-8').expect(200, '<p>{{user.name}}</p>', done);\n      });","file":"res.sendFile.js","skipped":false,"dir":"test"},{"name":"should consider ../ malicious when \"root\" is not set","suites":["res",".sendfile(path)","with a relative path"],"updatePoint":{"line":852,"column":62,"index":31890},"line":852,"code":"      it('should consider ../ malicious when \"root\" is not set', function (done) {\n        var app = express();\n        app.use(function (req, res) {\n          res.sendfile('test/fixtures/foo/../user.html');\n        });\n        request(app).get('/').expect(403, done);\n      });","file":"res.sendFile.js","skipped":false,"dir":"test"},{"name":"should allow ../ when \"root\" is set","suites":["res",".sendfile(path)","with a relative path"],"updatePoint":{"line":859,"column":45,"index":32152},"line":859,"code":"      it('should allow ../ when \"root\" is set', function (done) {\n        var app = express();\n        app.use(function (req, res) {\n          res.sendfile('foo/../user.html', {\n            root: 'test/fixtures'\n          });\n        });\n        request(app).get('/').expect(200, done);\n      });","file":"res.sendFile.js","skipped":false,"dir":"test"},{"name":"should disallow requesting out of \"root\"","suites":["res",".sendfile(path)","with a relative path"],"updatePoint":{"line":868,"column":50,"index":32454},"line":868,"code":"      it('should disallow requesting out of \"root\"', function (done) {\n        var app = express();\n        app.use(function (req, res) {\n          res.sendfile('foo/../../user.html', {\n            root: 'test/fixtures'\n          });\n        });\n        request(app).get('/').expect(403, done);\n      });","file":"res.sendFile.js","skipped":false,"dir":"test"},{"name":"should next(404) when not found","suites":["res",".sendfile(path)","with a relative path"],"updatePoint":{"line":877,"column":41,"index":32750},"line":877,"code":"      it('should next(404) when not found', function (done) {\n        var app = express(),\n          calls = 0;\n        app.use(function (req, res) {\n          res.sendfile('user.html');\n        });\n        app.use(function (req, res) {\n          assert(0, 'this should not be called');\n        });\n        app.use(function (err, req, res, next) {\n          ++calls;\n          next(err);\n        });\n        request(app).get('/').expect(404, function (err) {\n          if (err) return done(err);\n          assert.strictEqual(calls, 1);\n          done();\n        });\n      });","file":"res.sendFile.js","skipped":false,"dir":"test"},{"name":"should still serve","suites":["res",".sendfile(path)","with a relative path","with non-GET"],"updatePoint":{"line":897,"column":30,"index":33360},"line":897,"code":"        it('should still serve', function (done) {\n          var app = express();\n          app.use(function (req, res) {\n            res.sendfile(path.join(__dirname, '/fixtures/name.txt'));\n          });\n          request(app).get('/').expect('tobi', done);\n        });","file":"res.sendFile.js","skipped":false,"dir":"test"},{"name":"should pass options to send module","suites":["res",".sendfile(path, options)"],"updatePoint":{"line":908,"column":42,"index":33721},"line":908,"code":"    it('should pass options to send module', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.sendfile(path.resolve(fixtures, 'name.txt'), {\n          start: 0,\n          end: 1\n        });\n      });\n      request(app).get('/').expect(200, 'to', done);\n    });","file":"res.sendFile.js","skipped":false,"dir":"test"},{"name":"should send the status code and message as body","suites":["res",".sendStatus(statusCode)"],"updatePoint":{"line":7,"column":55,"index":218},"line":7,"code":"    it('should send the status code and message as body', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.sendStatus(201);\n      });\n      request(app).get('/').expect(201, 'Created', done);\n    });","file":"res.sendStatus.js","skipped":false,"dir":"test"},{"name":"should work with unknown code","suites":["res",".sendStatus(statusCode)"],"updatePoint":{"line":14,"column":37,"index":444},"line":14,"code":"    it('should work with unknown code', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.sendStatus(599);\n      });\n      request(app).get('/').expect(599, '599', done);\n    });","file":"res.sendStatus.js","skipped":false,"dir":"test"},{"name":"should set the response header field","suites":["res",".set(field, value)"],"updatePoint":{"line":7,"column":44,"index":202},"line":7,"code":"    it('should set the response header field', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.set('Content-Type', 'text/x-foo; charset=utf-8').end();\n      });\n      request(app).get('/').expect('Content-Type', 'text/x-foo; charset=utf-8').end(done);\n    });","file":"res.set.js","skipped":false,"dir":"test"},{"name":"should coerce to a string","suites":["res",".set(field, value)"],"updatePoint":{"line":14,"column":33,"index":496},"line":14,"code":"    it('should coerce to a string', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.set('X-Number', 123);\n        res.end(typeof res.get('X-Number'));\n      });\n      request(app).get('/').expect('X-Number', '123').expect(200, 'string', done);\n    });","file":"res.set.js","skipped":false,"dir":"test"},{"name":"should set multiple response header fields","suites":["res",".set(field, values)"],"updatePoint":{"line":24,"column":50,"index":864},"line":24,"code":"    it('should set multiple response header fields', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.set('Set-Cookie', [\"type=ninja\", \"language=javascript\"]);\n        res.send(res.get('Set-Cookie'));\n      });\n      request(app).get('/').expect('[\"type=ninja\",\"language=javascript\"]', done);\n    });","file":"res.set.js","skipped":false,"dir":"test"},{"name":"should coerce to an array of strings","suites":["res",".set(field, values)"],"updatePoint":{"line":32,"column":44,"index":1203},"line":32,"code":"    it('should coerce to an array of strings', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.set('X-Numbers', [123, 456]);\n        res.end(JSON.stringify(res.get('X-Numbers')));\n      });\n      request(app).get('/').expect('X-Numbers', '123, 456').expect(200, '[\"123\",\"456\"]', done);\n    });","file":"res.set.js","skipped":false,"dir":"test"},{"name":"should not set a charset of one is already set","suites":["res",".set(field, values)"],"updatePoint":{"line":40,"column":54,"index":1552},"line":40,"code":"    it('should not set a charset of one is already set', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.set('Content-Type', 'text/html; charset=lol');\n        res.end();\n      });\n      request(app).get('/').expect('Content-Type', 'text/html; charset=lol').expect(200, done);\n    });","file":"res.set.js","skipped":false,"dir":"test"},{"name":"should throw when Content-Type is an array","suites":["res",".set(field, values)"],"updatePoint":{"line":48,"column":50,"index":1878},"line":48,"code":"    it('should throw when Content-Type is an array', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.set('Content-Type', ['text/html']);\n        res.end();\n      });\n      request(app).get('/').expect(500, /TypeError: Content-Type cannot be set to an Array/, done);\n    });","file":"res.set.js","skipped":false,"dir":"test"},{"name":"should set multiple fields","suites":["res",".set(object)"],"updatePoint":{"line":58,"column":34,"index":2228},"line":58,"code":"    it('should set multiple fields', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.set({\n          'X-Foo': 'bar',\n          'X-Bar': 'baz'\n        }).end();\n      });\n      request(app).get('/').expect('X-Foo', 'bar').expect('X-Bar', 'baz').end(done);\n    });","file":"res.set.js","skipped":false,"dir":"test"},{"name":"should coerce to a string","suites":["res",".set(object)"],"updatePoint":{"line":68,"column":33,"index":2535},"line":68,"code":"    it('should coerce to a string', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.set({\n          'X-Number': 123\n        });\n        res.end(typeof res.get('X-Number'));\n      });\n      request(app).get('/').expect('X-Number', '123').expect(200, 'string', done);\n    });","file":"res.set.js","skipped":false,"dir":"test"},{"name":"should raise error for invalid status code","suites":["res",".status(code)","when \"code\" is undefined"],"updatePoint":{"line":9,"column":52,"index":394},"line":9,"code":"      it('should raise error for invalid status code', function (done) {\n        var app = express();\n        app.use(function (req, res) {\n          res.status(undefined).end();\n        });\n        request(app).get('/').expect(500, /Invalid status code/, function (err) {\n          if (isIoJs) {\n            done(err ? null : new Error('expected error'));\n          } else {\n            done(err);\n          }\n        });\n      });","file":"res.status.js","skipped":false,"dir":"test"},{"name":"should raise error for invalid status code","suites":["res",".status(code)","when \"code\" is null"],"updatePoint":{"line":24,"column":52,"index":885},"line":24,"code":"      it('should raise error for invalid status code', function (done) {\n        var app = express();\n        app.use(function (req, res) {\n          res.status(null).end();\n        });\n        request(app).get('/').expect(500, /Invalid status code/, function (err) {\n          if (isIoJs) {\n            done(err ? null : new Error('expected error'));\n          } else {\n            done(err);\n          }\n        });\n      });","file":"res.status.js","skipped":false,"dir":"test"},{"name":"should set the response status code to 201","suites":["res",".status(code)","when \"code\" is 201"],"updatePoint":{"line":39,"column":52,"index":1370},"line":39,"code":"      it('should set the response status code to 201', function (done) {\n        var app = express();\n        app.use(function (req, res) {\n          res.status(201).end();\n        });\n        request(app).get('/').expect(201, done);\n      });","file":"res.status.js","skipped":false,"dir":"test"},{"name":"should set the response status code to 302","suites":["res",".status(code)","when \"code\" is 302"],"updatePoint":{"line":48,"column":52,"index":1671},"line":48,"code":"      it('should set the response status code to 302', function (done) {\n        var app = express();\n        app.use(function (req, res) {\n          res.status(302).end();\n        });\n        request(app).get('/').expect(302, done);\n      });","file":"res.status.js","skipped":false,"dir":"test"},{"name":"should set the response status code to 403","suites":["res",".status(code)","when \"code\" is 403"],"updatePoint":{"line":57,"column":52,"index":1972},"line":57,"code":"      it('should set the response status code to 403', function (done) {\n        var app = express();\n        app.use(function (req, res) {\n          res.status(403).end();\n        });\n        request(app).get('/').expect(403, done);\n      });","file":"res.status.js","skipped":false,"dir":"test"},{"name":"should set the response status code to 501","suites":["res",".status(code)","when \"code\" is 501"],"updatePoint":{"line":66,"column":52,"index":2273},"line":66,"code":"      it('should set the response status code to 501', function (done) {\n        var app = express();\n        app.use(function (req, res) {\n          res.status(501).end();\n        });\n        request(app).get('/').expect(501, done);\n      });","file":"res.status.js","skipped":false,"dir":"test"},{"name":"should set the response status code to 410","suites":["res",".status(code)","when \"code\" is \"410\""],"updatePoint":{"line":75,"column":52,"index":2576},"line":75,"code":"      it('should set the response status code to 410', function (done) {\n        var app = express();\n        app.use(function (req, res) {\n          res.status('410').end();\n        });\n        request(app).get('/').expect(410, done);\n      });","file":"res.status.js","skipped":false,"dir":"test"},{"name":"should set the response status code to 410","suites":["res",".status(code)","when \"code\" is 410.1"],"updatePoint":{"line":84,"column":52,"index":2881},"line":84,"code":"      it('should set the response status code to 410', function (done) {\n        var app = express();\n        app.use(function (req, res) {\n          res.status(410.1).end();\n        });\n        request(app).get('/').expect(410, function (err) {\n          if (isIoJs) {\n            done(err ? null : new Error('expected error'));\n          } else {\n            done(err);\n          }\n        });\n      });","file":"res.status.js","skipped":false,"dir":"test"},{"name":"should raise error for invalid status code","suites":["res",".status(code)","when \"code\" is 1000"],"updatePoint":{"line":99,"column":52,"index":3345},"line":99,"code":"      it('should raise error for invalid status code', function (done) {\n        var app = express();\n        app.use(function (req, res) {\n          res.status(1000).end();\n        });\n        request(app).get('/').expect(500, /Invalid status code/, function (err) {\n          if (isIoJs) {\n            done(err ? null : new Error('expected error'));\n          } else {\n            done(err);\n          }\n        });\n      });","file":"res.status.js","skipped":false,"dir":"test"},{"name":"should raise error for invalid status code","suites":["res",".status(code)","when \"code\" is 99"],"updatePoint":{"line":114,"column":52,"index":3829},"line":114,"code":"      it('should raise error for invalid status code', function (done) {\n        var app = express();\n        app.use(function (req, res) {\n          res.status(99).end();\n        });\n        request(app).get('/').expect(500, /Invalid status code/, function (err) {\n          if (isIoJs) {\n            done(err ? null : new Error('expected error'));\n          } else {\n            done(err);\n          }\n        });\n      });","file":"res.status.js","skipped":false,"dir":"test"},{"name":"should raise error for invalid status code","suites":["res",".status(code)","when \"code\" is -401"],"updatePoint":{"line":129,"column":52,"index":4313},"line":129,"code":"      it('should raise error for invalid status code', function (done) {\n        var app = express();\n        app.use(function (req, res) {\n          res.status(-401).end();\n        });\n        request(app).get('/').expect(500, /Invalid status code/, function (err) {\n          if (isIoJs) {\n            done(err ? null : new Error('expected error'));\n          } else {\n            done(err);\n          }\n        });\n      });","file":"res.status.js","skipped":false,"dir":"test"},{"name":"should set the Content-Type based on a filename","suites":["res",".type(str)"],"updatePoint":{"line":7,"column":55,"index":204},"line":7,"code":"    it('should set the Content-Type based on a filename', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.type('foo.js').end('var name = \"tj\";');\n      });\n      request(app).get('/').expect('Content-Type', 'application/javascript; charset=utf-8').end(done);\n    });","file":"res.type.js","skipped":false,"dir":"test"},{"name":"should default to application/octet-stream","suites":["res",".type(str)"],"updatePoint":{"line":14,"column":50,"index":511},"line":14,"code":"    it('should default to application/octet-stream', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.type('rawr').end('var name = \"tj\";');\n      });\n      request(app).get('/').expect('Content-Type', 'application/octet-stream', done);\n    });","file":"res.type.js","skipped":false,"dir":"test"},{"name":"should set the Content-Type with type/subtype","suites":["res",".type(str)"],"updatePoint":{"line":21,"column":53,"index":802},"line":21,"code":"    it('should set the Content-Type with type/subtype', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.type('application/vnd.amazon.ebook').end('var name = \"tj\";');\n      });\n      request(app).get('/').expect('Content-Type', 'application/vnd.amazon.ebook', done);\n    });","file":"res.type.js","skipped":false,"dir":"test"},{"name":"should not set Vary","suites":["res.vary()","with no arguments"],"updatePoint":{"line":8,"column":27,"index":231},"line":8,"code":"    it('should not set Vary', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.vary();\n        res.end();\n      });\n      request(app).get('/').expect(utils.shouldNotHaveHeader('Vary')).expect(200, done);\n    });","file":"res.vary.js","skipped":false,"dir":"test"},{"name":"should not set Vary","suites":["res.vary()","with an empty array"],"updatePoint":{"line":18,"column":27,"index":542},"line":18,"code":"    it('should not set Vary', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.vary([]);\n        res.end();\n      });\n      request(app).get('/').expect(utils.shouldNotHaveHeader('Vary')).expect(200, done);\n    });","file":"res.vary.js","skipped":false,"dir":"test"},{"name":"should set the values","suites":["res.vary()","with an array"],"updatePoint":{"line":28,"column":29,"index":851},"line":28,"code":"    it('should set the values', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.vary(['Accept', 'Accept-Language', 'Accept-Encoding']);\n        res.end();\n      });\n      request(app).get('/').expect('Vary', 'Accept, Accept-Language, Accept-Encoding').expect(200, done);\n    });","file":"res.vary.js","skipped":false,"dir":"test"},{"name":"should set the value","suites":["res.vary()","with a string"],"updatePoint":{"line":38,"column":28,"index":1222},"line":38,"code":"    it('should set the value', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.vary('Accept');\n        res.end();\n      });\n      request(app).get('/').expect('Vary', 'Accept').expect(200, done);\n    });","file":"res.vary.js","skipped":false,"dir":"test"},{"name":"should not add it again","suites":["res.vary()","when the value is present"],"updatePoint":{"line":48,"column":31,"index":1534},"line":48,"code":"    it('should not add it again', function (done) {\n      var app = express();\n      app.use(function (req, res) {\n        res.vary('Accept');\n        res.vary('Accept-Encoding');\n        res.vary('Accept-Encoding');\n        res.vary('Accept-Encoding');\n        res.vary('Accept');\n        res.end();\n      });\n      request(app).get('/').expect('Vary', 'Accept, Accept-Encoding').expect(200, done);\n    });","file":"res.vary.js","skipped":false,"dir":"test"},{"name":"should work without handlers","suites":["Route"],"updatePoint":{"line":9,"column":34,"index":231},"line":9,"code":"  it('should work without handlers', function (done) {\n    var req = {\n      method: 'GET',\n      url: '/'\n    };\n    var route = new Route('/foo');\n    route.dispatch(req, {}, done);\n  });","file":"Route.js","skipped":false,"dir":"test"},{"name":"should not stack overflow with a large sync stack","suites":["Route"],"updatePoint":{"line":17,"column":55,"index":442},"line":17,"code":"  it('should not stack overflow with a large sync stack', function (done) {\n    this.timeout(5000); // long-running test\n\n    var req = {\n      method: 'GET',\n      url: '/'\n    };\n    var route = new Route('/foo');\n    route.get(function (req, res, next) {\n      req.counter = 0;\n      next();\n    });\n    for (var i = 0; i < 6000; i++) {\n      route.all(function (req, res, next) {\n        req.counter++;\n        next();\n      });\n    }\n    route.get(function (req, res, next) {\n      req.called = true;\n      next();\n    });\n    route.dispatch(req, {}, function (err) {\n      if (err) return done(err);\n      assert.ok(req.called);\n      assert.strictEqual(req.counter, 6000);\n      done();\n    });\n  });","file":"Route.js","skipped":false,"dir":"test"},{"name":"should add handler","suites":["Route",".all"],"updatePoint":{"line":47,"column":26,"index":1154},"line":47,"code":"    it('should add handler', function (done) {\n      var req = {\n        method: 'GET',\n        url: '/'\n      };\n      var route = new Route('/foo');\n      route.all(function (req, res, next) {\n        req.called = true;\n        next();\n      });\n      route.dispatch(req, {}, function (err) {\n        if (err) return done(err);\n        assert.ok(req.called);\n        done();\n      });\n    });","file":"Route.js","skipped":false,"dir":"test"},{"name":"should handle VERBS","suites":["Route",".all"],"updatePoint":{"line":63,"column":27,"index":1550},"line":63,"code":"    it('should handle VERBS', function (done) {\n      var count = 0;\n      var route = new Route('/foo');\n      var cb = after(methods.length, function (err) {\n        if (err) return done(err);\n        assert.strictEqual(count, methods.length);\n        done();\n      });\n      route.all(function (req, res, next) {\n        count++;\n        next();\n      });\n      methods.forEach(function testMethod(method) {\n        var req = {\n          method: method,\n          url: '/'\n        };\n        route.dispatch(req, {}, cb);\n      });\n    });","file":"Route.js","skipped":false,"dir":"test"},{"name":"should stack","suites":["Route",".all"],"updatePoint":{"line":83,"column":20,"index":2085},"line":83,"code":"    it('should stack', function (done) {\n      var req = {\n        count: 0,\n        method: 'GET',\n        url: '/'\n      };\n      var route = new Route('/foo');\n      route.all(function (req, res, next) {\n        req.count++;\n        next();\n      });\n      route.all(function (req, res, next) {\n        req.count++;\n        next();\n      });\n      route.dispatch(req, {}, function (err) {\n        if (err) return done(err);\n        assert.strictEqual(req.count, 2);\n        done();\n      });\n    });","file":"Route.js","skipped":false,"dir":"test"},{"name":"should support .get","suites":["Route",".VERB"],"updatePoint":{"line":106,"column":27,"index":2635},"line":106,"code":"    it('should support .get', function (done) {\n      var req = {\n        method: 'GET',\n        url: '/'\n      };\n      var route = new Route('');\n      route.get(function (req, res, next) {\n        req.called = true;\n        next();\n      });\n      route.dispatch(req, {}, function (err) {\n        if (err) return done(err);\n        assert.ok(req.called);\n        done();\n      });\n    });","file":"Route.js","skipped":false,"dir":"test"},{"name":"should limit to just .VERB","suites":["Route",".VERB"],"updatePoint":{"line":122,"column":34,"index":3034},"line":122,"code":"    it('should limit to just .VERB', function (done) {\n      var req = {\n        method: 'POST',\n        url: '/'\n      };\n      var route = new Route('');\n      route.get(function (req, res, next) {\n        throw new Error('not me!');\n      });\n      route.post(function (req, res, next) {\n        req.called = true;\n        next();\n      });\n      route.dispatch(req, {}, function (err) {\n        if (err) return done(err);\n        assert.ok(req.called);\n        done();\n      });\n    });","file":"Route.js","skipped":false,"dir":"test"},{"name":"should allow fallthrough","suites":["Route",".VERB"],"updatePoint":{"line":141,"column":32,"index":3523},"line":141,"code":"    it('should allow fallthrough', function (done) {\n      var req = {\n        order: '',\n        method: 'GET',\n        url: '/'\n      };\n      var route = new Route('');\n      route.get(function (req, res, next) {\n        req.order += 'a';\n        next();\n      });\n      route.all(function (req, res, next) {\n        req.order += 'b';\n        next();\n      });\n      route.get(function (req, res, next) {\n        req.order += 'c';\n        next();\n      });\n      route.dispatch(req, {}, function (err) {\n        if (err) return done(err);\n        assert.strictEqual(req.order, 'abc');\n        done();\n      });\n    });","file":"Route.js","skipped":false,"dir":"test"},{"name":"should handle errors via arity 4 functions","suites":["Route","errors"],"updatePoint":{"line":168,"column":50,"index":4204},"line":168,"code":"    it('should handle errors via arity 4 functions', function (done) {\n      var req = {\n        order: '',\n        method: 'GET',\n        url: '/'\n      };\n      var route = new Route('');\n      route.all(function (req, res, next) {\n        next(new Error('foobar'));\n      });\n      route.all(function (req, res, next) {\n        req.order += '0';\n        next();\n      });\n      route.all(function (err, req, res, next) {\n        req.order += 'a';\n        next(err);\n      });\n      route.dispatch(req, {}, function (err) {\n        assert.ok(err);\n        assert.strictEqual(err.message, 'foobar');\n        assert.strictEqual(req.order, 'a');\n        done();\n      });\n    });","file":"Route.js","skipped":false,"dir":"test"},{"name":"should handle throw","suites":["Route","errors"],"updatePoint":{"line":193,"column":27,"index":4860},"line":193,"code":"    it('should handle throw', function (done) {\n      var req = {\n        order: '',\n        method: 'GET',\n        url: '/'\n      };\n      var route = new Route('');\n      route.all(function (req, res, next) {\n        throw new Error('foobar');\n      });\n      route.all(function (req, res, next) {\n        req.order += '0';\n        next();\n      });\n      route.all(function (err, req, res, next) {\n        req.order += 'a';\n        next(err);\n      });\n      route.dispatch(req, {}, function (err) {\n        assert.ok(err);\n        assert.strictEqual(err.message, 'foobar');\n        assert.strictEqual(req.order, 'a');\n        done();\n      });\n    });","file":"Route.js","skipped":false,"dir":"test"},{"name":"should handle throwing inside error handlers","suites":["Route","errors"],"updatePoint":{"line":218,"column":52,"index":5541},"line":218,"code":"    it('should handle throwing inside error handlers', function (done) {\n      var req = {\n        method: 'GET',\n        url: '/'\n      };\n      var route = new Route('');\n      route.get(function (req, res, next) {\n        throw new Error('boom!');\n      });\n      route.get(function (err, req, res, next) {\n        throw new Error('oops');\n      });\n      route.get(function (err, req, res, next) {\n        req.message = err.message;\n        next();\n      });\n      route.dispatch(req, {}, function (err) {\n        if (err) return done(err);\n        assert.strictEqual(req.message, 'oops');\n        done();\n      });\n    });","file":"Route.js","skipped":false,"dir":"test"},{"name":"should handle throw in .all","suites":["Route","errors"],"updatePoint":{"line":240,"column":35,"index":6152},"line":240,"code":"    it('should handle throw in .all', function (done) {\n      var req = {\n        method: 'GET',\n        url: '/'\n      };\n      var route = new Route('');\n      route.all(function (req, res, next) {\n        throw new Error('boom!');\n      });\n      route.dispatch(req, {}, function (err) {\n        assert.ok(err);\n        assert.strictEqual(err.message, 'boom!');\n        done();\n      });\n    });","file":"Route.js","skipped":false,"dir":"test"},{"name":"should handle single error handler","suites":["Route","errors"],"updatePoint":{"line":255,"column":42,"index":6558},"line":255,"code":"    it('should handle single error handler', function (done) {\n      var req = {\n        method: 'GET',\n        url: '/'\n      };\n      var route = new Route('');\n      route.all(function (err, req, res, next) {\n        // this should not execute\n        throw new Error('should not be called');\n      });\n      route.dispatch(req, {}, done);\n    });","file":"Route.js","skipped":false,"dir":"test"},{"name":"should return a function with router methods","suites":["Router"],"updatePoint":{"line":9,"column":50,"index":248},"line":9,"code":"  it('should return a function with router methods', function () {\n    var router = new Router();\n    assert(typeof router === 'function');\n    assert(typeof router.get === 'function');\n    assert(typeof router.handle === 'function');\n    assert(typeof router.use === 'function');\n  });","file":"Router.js","skipped":false,"dir":"test"},{"name":"should support .use of other routers","suites":["Router"],"updatePoint":{"line":16,"column":42,"index":527},"line":16,"code":"  it('should support .use of other routers', function (done) {\n    var router = new Router();\n    var another = new Router();\n    another.get('/bar', function (req, res) {\n      res.end();\n    });\n    router.use('/foo', another);\n    router.handle({\n      url: '/foo/bar',\n      method: 'GET'\n    }, {\n      end: done\n    });\n  });","file":"Router.js","skipped":false,"dir":"test"},{"name":"should support dynamic routes","suites":["Router"],"updatePoint":{"line":30,"column":35,"index":852},"line":30,"code":"  it('should support dynamic routes', function (done) {\n    var router = new Router();\n    var another = new Router();\n    another.get('/:bar', function (req, res) {\n      assert.strictEqual(req.params.bar, 'route');\n      res.end();\n    });\n    router.use('/:foo', another);\n    router.handle({\n      url: '/test/route',\n      method: 'GET'\n    }, {\n      end: done\n    });\n  });","file":"Router.js","skipped":false,"dir":"test"},{"name":"should handle blank URL","suites":["Router"],"updatePoint":{"line":45,"column":29,"index":1227},"line":45,"code":"  it('should handle blank URL', function (done) {\n    var router = new Router();\n    router.use(function (req, res) {\n      throw new Error('should not be called');\n    });\n    router.handle({\n      url: '',\n      method: 'GET'\n    }, {}, done);\n  });","file":"Router.js","skipped":false,"dir":"test"},{"name":"should handle missing URL","suites":["Router"],"updatePoint":{"line":55,"column":31,"index":1481},"line":55,"code":"  it('should handle missing URL', function (done) {\n    var router = new Router();\n    router.use(function (req, res) {\n      throw new Error('should not be called');\n    });\n    router.handle({\n      method: 'GET'\n    }, {}, done);\n  });","file":"Router.js","skipped":false,"dir":"test"},{"name":"should not stack overflow with many registered routes","suites":["Router"],"updatePoint":{"line":64,"column":59,"index":1748},"line":64,"code":"  it('should not stack overflow with many registered routes', function (done) {\n    this.timeout(5000); // long-running test\n\n    var handler = function (req, res) {\n      res.end(new Error('wrong handler'));\n    };\n    var router = new Router();\n    for (var i = 0; i < 6000; i++) {\n      router.get('/thing' + i, handler);\n    }\n    router.get('/', function (req, res) {\n      res.end();\n    });\n    router.handle({\n      url: '/',\n      method: 'GET'\n    }, {\n      end: done\n    });\n  });","file":"Router.js","skipped":false,"dir":"test"},{"name":"should not stack overflow with a large sync route stack","suites":["Router"],"updatePoint":{"line":84,"column":61,"index":2243},"line":84,"code":"  it('should not stack overflow with a large sync route stack', function (done) {\n    this.timeout(5000); // long-running test\n\n    var router = new Router();\n    router.get('/foo', function (req, res, next) {\n      req.counter = 0;\n      next();\n    });\n    for (var i = 0; i < 6000; i++) {\n      router.get('/foo', function (req, res, next) {\n        req.counter++;\n        next();\n      });\n    }\n    router.get('/foo', function (req, res) {\n      assert.strictEqual(req.counter, 6000);\n      res.end();\n    });\n    router.handle({\n      url: '/foo',\n      method: 'GET'\n    }, {\n      end: done\n    });\n  });","file":"Router.js","skipped":false,"dir":"test"},{"name":"should not stack overflow with a large sync middleware stack","suites":["Router"],"updatePoint":{"line":109,"column":66,"index":2861},"line":109,"code":"  it('should not stack overflow with a large sync middleware stack', function (done) {\n    this.timeout(5000); // long-running test\n\n    var router = new Router();\n    router.use(function (req, res, next) {\n      req.counter = 0;\n      next();\n    });\n    for (var i = 0; i < 6000; i++) {\n      router.use(function (req, res, next) {\n        req.counter++;\n        next();\n      });\n    }\n    router.use(function (req, res) {\n      assert.strictEqual(req.counter, 6000);\n      res.end();\n    });\n    router.handle({\n      url: '/',\n      method: 'GET'\n    }, {\n      end: done\n    });\n  });","file":"Router.js","skipped":false,"dir":"test"},{"name":"should dispatch","suites":["Router",".handle"],"updatePoint":{"line":135,"column":23,"index":3445},"line":135,"code":"    it('should dispatch', function (done) {\n      var router = new Router();\n      router.route('/foo').get(function (req, res) {\n        res.send('foo');\n      });\n      var res = {\n        send: function (val) {\n          assert.strictEqual(val, 'foo');\n          done();\n        }\n      };\n      router.handle({\n        url: '/foo',\n        method: 'GET'\n      }, res);\n    });","file":"Router.js","skipped":false,"dir":"test"},{"name":"should throw if a callback is null","suites":["Router",".multiple callbacks"],"updatePoint":{"line":153,"column":42,"index":3899},"line":153,"code":"    it('should throw if a callback is null', function () {\n      assert.throws(function () {\n        var router = new Router();\n        router.route('/foo').all(null);\n      });\n    });","file":"Router.js","skipped":false,"dir":"test"},{"name":"should throw if a callback is undefined","suites":["Router",".multiple callbacks"],"updatePoint":{"line":159,"column":47,"index":4090},"line":159,"code":"    it('should throw if a callback is undefined', function () {\n      assert.throws(function () {\n        var router = new Router();\n        router.route('/foo').all(undefined);\n      });\n    });","file":"Router.js","skipped":false,"dir":"test"},{"name":"should throw if a callback is not a function","suites":["Router",".multiple callbacks"],"updatePoint":{"line":165,"column":52,"index":4291},"line":165,"code":"    it('should throw if a callback is not a function', function () {\n      assert.throws(function () {\n        var router = new Router();\n        router.route('/foo').all('not a function');\n      });\n    });","file":"Router.js","skipped":false,"dir":"test"},{"name":"should not throw if all callbacks are functions","suites":["Router",".multiple callbacks"],"updatePoint":{"line":171,"column":55,"index":4502},"line":171,"code":"    it('should not throw if all callbacks are functions', function () {\n      var router = new Router();\n      router.route('/foo').all(function () {}).all(function () {});\n    });","file":"Router.js","skipped":false,"dir":"test"},{"name":"should skip non error middleware","suites":["Router","error"],"updatePoint":{"line":177,"column":40,"index":4708},"line":177,"code":"    it('should skip non error middleware', function (done) {\n      var router = new Router();\n      router.get('/foo', function (req, res, next) {\n        next(new Error('foo'));\n      });\n      router.get('/bar', function (req, res, next) {\n        next(new Error('bar'));\n      });\n      router.use(function (req, res, next) {\n        assert(false);\n      });\n      router.use(function (err, req, res, next) {\n        assert.equal(err.message, 'foo');\n        done();\n      });\n      router.handle({\n        url: '/foo',\n        method: 'GET'\n      }, {}, done);\n    });","file":"Router.js","skipped":false,"dir":"test"},{"name":"should handle throwing inside routes with params","suites":["Router","error"],"updatePoint":{"line":197,"column":56,"index":5297},"line":197,"code":"    it('should handle throwing inside routes with params', function (done) {\n      var router = new Router();\n      router.get('/foo/:id', function (req, res, next) {\n        throw new Error('foo');\n      });\n      router.use(function (req, res, next) {\n        assert(false);\n      });\n      router.use(function (err, req, res, next) {\n        assert.equal(err.message, 'foo');\n        done();\n      });\n      router.handle({\n        url: '/foo/2',\n        method: 'GET'\n      }, {}, function () {});\n    });","file":"Router.js","skipped":false,"dir":"test"},{"name":"should handle throwing in handler after async param","suites":["Router","error"],"updatePoint":{"line":214,"column":59,"index":5810},"line":214,"code":"    it('should handle throwing in handler after async param', function (done) {\n      var router = new Router();\n      router.param('user', function (req, res, next, val) {\n        process.nextTick(function () {\n          req.user = val;\n          next();\n        });\n      });\n      router.use('/:user', function (req, res, next) {\n        throw new Error('oh no!');\n      });\n      router.use(function (err, req, res, next) {\n        assert.equal(err.message, 'oh no!');\n        done();\n      });\n      router.handle({\n        url: '/bob',\n        method: 'GET'\n      }, {}, function () {});\n    });","file":"Router.js","skipped":false,"dir":"test"},{"name":"should handle throwing inside error handlers","suites":["Router","error"],"updatePoint":{"line":234,"column":52,"index":6405},"line":234,"code":"    it('should handle throwing inside error handlers', function (done) {\n      var router = new Router();\n      router.use(function (req, res, next) {\n        throw new Error('boom!');\n      });\n      router.use(function (err, req, res, next) {\n        throw new Error('oops');\n      });\n      router.use(function (err, req, res, next) {\n        assert.equal(err.message, 'oops');\n        done();\n      });\n      router.handle({\n        url: '/',\n        method: 'GET'\n      }, {}, done);\n    });","file":"Router.js","skipped":false,"dir":"test"},{"name":"should not obscure FQDNs","suites":["Router","FQDN"],"updatePoint":{"line":253,"column":32,"index":6921},"line":253,"code":"    it('should not obscure FQDNs', function (done) {\n      var request = {\n        hit: 0,\n        url: 'http://example.com/foo',\n        method: 'GET'\n      };\n      var router = new Router();\n      router.use(function (req, res, next) {\n        assert.equal(req.hit++, 0);\n        assert.equal(req.url, 'http://example.com/foo');\n        next();\n      });\n      router.handle(request, {}, function (err) {\n        if (err) return done(err);\n        assert.equal(request.hit, 1);\n        done();\n      });\n    });","file":"Router.js","skipped":false,"dir":"test"},{"name":"should ignore FQDN in search","suites":["Router","FQDN"],"updatePoint":{"line":271,"column":36,"index":7440},"line":271,"code":"    it('should ignore FQDN in search', function (done) {\n      var request = {\n        hit: 0,\n        url: '/proxy?url=http://example.com/blog/post/1',\n        method: 'GET'\n      };\n      var router = new Router();\n      router.use('/proxy', function (req, res, next) {\n        assert.equal(req.hit++, 0);\n        assert.equal(req.url, '/?url=http://example.com/blog/post/1');\n        next();\n      });\n      router.handle(request, {}, function (err) {\n        if (err) return done(err);\n        assert.equal(request.hit, 1);\n        done();\n      });\n    });","file":"Router.js","skipped":false,"dir":"test"},{"name":"should ignore FQDN in path","suites":["Router","FQDN"],"updatePoint":{"line":289,"column":34,"index":8000},"line":289,"code":"    it('should ignore FQDN in path', function (done) {\n      var request = {\n        hit: 0,\n        url: '/proxy/http://example.com/blog/post/1',\n        method: 'GET'\n      };\n      var router = new Router();\n      router.use('/proxy', function (req, res, next) {\n        assert.equal(req.hit++, 0);\n        assert.equal(req.url, '/http://example.com/blog/post/1');\n        next();\n      });\n      router.handle(request, {}, function (err) {\n        if (err) return done(err);\n        assert.equal(request.hit, 1);\n        done();\n      });\n    });","file":"Router.js","skipped":false,"dir":"test"},{"name":"should adjust FQDN req.url","suites":["Router","FQDN"],"updatePoint":{"line":307,"column":34,"index":8551},"line":307,"code":"    it('should adjust FQDN req.url', function (done) {\n      var request = {\n        hit: 0,\n        url: 'http://example.com/blog/post/1',\n        method: 'GET'\n      };\n      var router = new Router();\n      router.use('/blog', function (req, res, next) {\n        assert.equal(req.hit++, 0);\n        assert.equal(req.url, 'http://example.com/post/1');\n        next();\n      });\n      router.handle(request, {}, function (err) {\n        if (err) return done(err);\n        assert.equal(request.hit, 1);\n        done();\n      });\n    });","file":"Router.js","skipped":false,"dir":"test"},{"name":"should adjust FQDN req.url with multiple handlers","suites":["Router","FQDN"],"updatePoint":{"line":325,"column":57,"index":9111},"line":325,"code":"    it('should adjust FQDN req.url with multiple handlers', function (done) {\n      var request = {\n        hit: 0,\n        url: 'http://example.com/blog/post/1',\n        method: 'GET'\n      };\n      var router = new Router();\n      router.use(function (req, res, next) {\n        assert.equal(req.hit++, 0);\n        assert.equal(req.url, 'http://example.com/blog/post/1');\n        next();\n      });\n      router.use('/blog', function (req, res, next) {\n        assert.equal(req.hit++, 1);\n        assert.equal(req.url, 'http://example.com/post/1');\n        next();\n      });\n      router.handle(request, {}, function (err) {\n        if (err) return done(err);\n        assert.equal(request.hit, 2);\n        done();\n      });\n    });","file":"Router.js","skipped":false,"dir":"test"},{"name":"should adjust FQDN req.url with multiple routed handlers","suites":["Router","FQDN"],"updatePoint":{"line":348,"column":64,"index":9850},"line":348,"code":"    it('should adjust FQDN req.url with multiple routed handlers', function (done) {\n      var request = {\n        hit: 0,\n        url: 'http://example.com/blog/post/1',\n        method: 'GET'\n      };\n      var router = new Router();\n      router.use('/blog', function (req, res, next) {\n        assert.equal(req.hit++, 0);\n        assert.equal(req.url, 'http://example.com/post/1');\n        next();\n      });\n      router.use('/blog', function (req, res, next) {\n        assert.equal(req.hit++, 1);\n        assert.equal(req.url, 'http://example.com/post/1');\n        next();\n      });\n      router.use(function (req, res, next) {\n        assert.equal(req.hit++, 2);\n        assert.equal(req.url, 'http://example.com/blog/post/1');\n        next();\n      });\n      router.handle(request, {}, function (err) {\n        if (err) return done(err);\n        assert.equal(request.hit, 3);\n        done();\n      });\n    });","file":"Router.js","skipped":false,"dir":"test"},{"name":"should support using .all to capture all http verbs","suites":["Router",".all"],"updatePoint":{"line":378,"column":59,"index":10799},"line":378,"code":"    it('should support using .all to capture all http verbs', function (done) {\n      var router = new Router();\n      var count = 0;\n      router.all('/foo', function () {\n        count++;\n      });\n      var url = '/foo?bar=baz';\n      methods.forEach(function testMethod(method) {\n        router.handle({\n          url: url,\n          method: method\n        }, {}, function () {});\n      });\n      assert.equal(count, methods.length);\n      done();\n    });","file":"Router.js","skipped":false,"dir":"test"},{"name":"should be called for any URL when \"*\"","suites":["Router",".all"],"updatePoint":{"line":394,"column":45,"index":11245},"line":394,"code":"    it('should be called for any URL when \"*\"', function (done) {\n      var cb = after(4, done);\n      var router = new Router();\n      function no() {\n        throw new Error('should not be called');\n      }\n      router.all('*', function (req, res) {\n        res.end();\n      });\n      router.handle({\n        url: '/',\n        method: 'GET'\n      }, {\n        end: cb\n      }, no);\n      router.handle({\n        url: '/foo',\n        method: 'GET'\n      }, {\n        end: cb\n      }, no);\n      router.handle({\n        url: 'foo',\n        method: 'GET'\n      }, {\n        end: cb\n      }, no);\n      router.handle({\n        url: '*',\n        method: 'GET'\n      }, {\n        end: cb\n      }, no);\n    });","file":"Router.js","skipped":false,"dir":"test"},{"name":"should require middleware","suites":["Router",".use"],"updatePoint":{"line":430,"column":33,"index":11979},"line":430,"code":"    it('should require middleware', function () {\n      var router = new Router();\n      assert.throws(function () {\n        router.use('/');\n      }, /requires a middleware function/);\n    });","file":"Router.js","skipped":false,"dir":"test"},{"name":"should reject string as middleware","suites":["Router",".use"],"updatePoint":{"line":436,"column":42,"index":12182},"line":436,"code":"    it('should reject string as middleware', function () {\n      var router = new Router();\n      assert.throws(function () {\n        router.use('/', 'foo');\n      }, /requires a middleware function but got a string/);\n    });","file":"Router.js","skipped":false,"dir":"test"},{"name":"should reject number as middleware","suites":["Router",".use"],"updatePoint":{"line":442,"column":42,"index":12409},"line":442,"code":"    it('should reject number as middleware', function () {\n      var router = new Router();\n      assert.throws(function () {\n        router.use('/', 42);\n      }, /requires a middleware function but got a number/);\n    });","file":"Router.js","skipped":false,"dir":"test"},{"name":"should reject null as middleware","suites":["Router",".use"],"updatePoint":{"line":448,"column":40,"index":12631},"line":448,"code":"    it('should reject null as middleware', function () {\n      var router = new Router();\n      assert.throws(function () {\n        router.use('/', null);\n      }, /requires a middleware function but got a Null/);\n    });","file":"Router.js","skipped":false,"dir":"test"},{"name":"should reject Date as middleware","suites":["Router",".use"],"updatePoint":{"line":454,"column":40,"index":12853},"line":454,"code":"    it('should reject Date as middleware', function () {\n      var router = new Router();\n      assert.throws(function () {\n        router.use('/', new Date());\n      }, /requires a middleware function but got a Date/);\n    });","file":"Router.js","skipped":false,"dir":"test"},{"name":"should be called for any URL","suites":["Router",".use"],"updatePoint":{"line":460,"column":36,"index":13077},"line":460,"code":"    it('should be called for any URL', function (done) {\n      var cb = after(4, done);\n      var router = new Router();\n      function no() {\n        throw new Error('should not be called');\n      }\n      router.use(function (req, res) {\n        res.end();\n      });\n      router.handle({\n        url: '/',\n        method: 'GET'\n      }, {\n        end: cb\n      }, no);\n      router.handle({\n        url: '/foo',\n        method: 'GET'\n      }, {\n        end: cb\n      }, no);\n      router.handle({\n        url: 'foo',\n        method: 'GET'\n      }, {\n        end: cb\n      }, no);\n      router.handle({\n        url: '*',\n        method: 'GET'\n      }, {\n        end: cb\n      }, no);\n    });","file":"Router.js","skipped":false,"dir":"test"},{"name":"should accept array of middleware","suites":["Router",".use"],"updatePoint":{"line":494,"column":41,"index":13775},"line":494,"code":"    it('should accept array of middleware', function (done) {\n      var count = 0;\n      var router = new Router();\n      function fn1(req, res, next) {\n        assert.equal(++count, 1);\n        next();\n      }\n      function fn2(req, res, next) {\n        assert.equal(++count, 2);\n        next();\n      }\n      router.use([fn1, fn2], function (req, res) {\n        assert.equal(++count, 3);\n        done();\n      });\n      router.handle({\n        url: '/foo',\n        method: 'GET'\n      }, {}, function () {});\n    });","file":"Router.js","skipped":false,"dir":"test"},{"name":"should call param function when routing VERBS","suites":["Router",".param"],"updatePoint":{"line":516,"column":53,"index":14348},"line":516,"code":"    it('should call param function when routing VERBS', function (done) {\n      var router = new Router();\n      router.param('id', function (req, res, next, id) {\n        assert.equal(id, '123');\n        next();\n      });\n      router.get('/foo/:id/bar', function (req, res, next) {\n        assert.equal(req.params.id, '123');\n        next();\n      });\n      router.handle({\n        url: '/foo/123/bar',\n        method: 'get'\n      }, {}, done);\n    });","file":"Router.js","skipped":false,"dir":"test"},{"name":"should call param function when routing middleware","suites":["Router",".param"],"updatePoint":{"line":531,"column":58,"index":14808},"line":531,"code":"    it('should call param function when routing middleware', function (done) {\n      var router = new Router();\n      router.param('id', function (req, res, next, id) {\n        assert.equal(id, '123');\n        next();\n      });\n      router.use('/foo/:id/bar', function (req, res, next) {\n        assert.equal(req.params.id, '123');\n        assert.equal(req.url, '/baz');\n        next();\n      });\n      router.handle({\n        url: '/foo/123/bar/baz',\n        method: 'get'\n      }, {}, done);\n    });","file":"Router.js","skipped":false,"dir":"test"},{"name":"should only call once per request","suites":["Router",".param"],"updatePoint":{"line":547,"column":41,"index":15294},"line":547,"code":"    it('should only call once per request', function (done) {\n      var count = 0;\n      var req = {\n        url: '/foo/bob/bar',\n        method: 'get'\n      };\n      var router = new Router();\n      var sub = new Router();\n      sub.get('/bar', function (req, res, next) {\n        next();\n      });\n      router.param('user', function (req, res, next, user) {\n        count++;\n        req.user = user;\n        next();\n      });\n      router.use('/foo/:user/', new Router());\n      router.use('/foo/:user/', sub);\n      router.handle(req, {}, function (err) {\n        if (err) return done(err);\n        assert.equal(count, 1);\n        assert.equal(req.user, 'bob');\n        done();\n      });\n    });","file":"Router.js","skipped":false,"dir":"test"},{"name":"should call when values differ","suites":["Router",".param"],"updatePoint":{"line":572,"column":38,"index":15991},"line":572,"code":"    it('should call when values differ', function (done) {\n      var count = 0;\n      var req = {\n        url: '/foo/bob/bar',\n        method: 'get'\n      };\n      var router = new Router();\n      var sub = new Router();\n      sub.get('/bar', function (req, res, next) {\n        next();\n      });\n      router.param('user', function (req, res, next, user) {\n        count++;\n        req.user = user;\n        next();\n      });\n      router.use('/foo/:user/', new Router());\n      router.use('/:user/bob/', sub);\n      router.handle(req, {}, function (err) {\n        if (err) return done(err);\n        assert.equal(count, 2);\n        assert.equal(req.user, 'foo');\n        done();\n      });\n    });","file":"Router.js","skipped":false,"dir":"test"},{"name":"should not mix requests","suites":["Router","parallel requests"],"updatePoint":{"line":599,"column":31,"index":16733},"line":599,"code":"    it('should not mix requests', function (done) {\n      var req1 = {\n        url: '/foo/50/bar',\n        method: 'get'\n      };\n      var req2 = {\n        url: '/foo/10/bar',\n        method: 'get'\n      };\n      var router = new Router();\n      var sub = new Router();\n      done = after(2, done);\n      sub.get('/bar', function (req, res, next) {\n        next();\n      });\n      router.param('ms', function (req, res, next, ms) {\n        ms = parseInt(ms, 10);\n        req.ms = ms;\n        setTimeout(next, ms);\n      });\n      router.use('/foo/:ms/', new Router());\n      router.use('/foo/:ms/', sub);\n      router.handle(req1, {}, function (err) {\n        assert.ifError(err);\n        assert.equal(req1.ms, 50);\n        assert.equal(req1.originalUrl, '/foo/50/bar');\n        done();\n      });\n      router.handle(req2, {}, function (err) {\n        assert.ifError(err);\n        assert.equal(req2.ms, 10);\n        assert.equal(req2.originalUrl, '/foo/10/bar');\n        done();\n      });\n    });","file":"Router.js","skipped":false,"dir":"test"},{"name":"should support strings","suites":["utils.etag(body, encoding)"],"updatePoint":{"line":7,"column":28,"index":210},"line":7,"code":"  it('should support strings', function () {\n    assert.strictEqual(utils.etag('express!'), '\"8-O2uVAFaQ1rZvlKLT14RnuvjPIdg\"');\n  });","file":"utils.js","skipped":false,"dir":"test"},{"name":"should support utf8 strings","suites":["utils.etag(body, encoding)"],"updatePoint":{"line":10,"column":33,"index":349},"line":10,"code":"  it('should support utf8 strings', function () {\n    assert.strictEqual(utils.etag('express❤', 'utf8'), '\"a-JBiXf7GyzxwcrxY4hVXUwa7tmks\"');\n  });","file":"utils.js","skipped":false,"dir":"test"},{"name":"should support buffer","suites":["utils.etag(body, encoding)"],"updatePoint":{"line":13,"column":27,"index":490},"line":13,"code":"  it('should support buffer', function () {\n    assert.strictEqual(utils.etag(Buffer.from('express!')), '\"8-O2uVAFaQ1rZvlKLT14RnuvjPIdg\"');\n  });","file":"utils.js","skipped":false,"dir":"test"},{"name":"should support empty string","suites":["utils.etag(body, encoding)"],"updatePoint":{"line":16,"column":33,"index":642},"line":16,"code":"  it('should support empty string', function () {\n    assert.strictEqual(utils.etag(''), '\"0-2jmj7l5rSw0yVb/vlWAYkK/YBwk\"');\n  });","file":"utils.js","skipped":false,"dir":"test"},{"name":"should do anything without type","suites":["utils.setCharset(type, charset)"],"updatePoint":{"line":21,"column":37,"index":839},"line":21,"code":"  it('should do anything without type', function () {\n    assert.strictEqual(utils.setCharset(), undefined);\n  });","file":"utils.js","skipped":false,"dir":"test"},{"name":"should return type if not given charset","suites":["utils.setCharset(type, charset)"],"updatePoint":{"line":24,"column":45,"index":962},"line":24,"code":"  it('should return type if not given charset', function () {\n    assert.strictEqual(utils.setCharset('text/html'), 'text/html');\n  });","file":"utils.js","skipped":false,"dir":"test"},{"name":"should keep charset if not given charset","suites":["utils.setCharset(type, charset)"],"updatePoint":{"line":27,"column":46,"index":1099},"line":27,"code":"  it('should keep charset if not given charset', function () {\n    assert.strictEqual(utils.setCharset('text/html; charset=utf-8'), 'text/html; charset=utf-8');\n  });","file":"utils.js","skipped":false,"dir":"test"},{"name":"should set charset","suites":["utils.setCharset(type, charset)"],"updatePoint":{"line":30,"column":24,"index":1244},"line":30,"code":"  it('should set charset', function () {\n    assert.strictEqual(utils.setCharset('text/html', 'utf-8'), 'text/html; charset=utf-8');\n  });","file":"utils.js","skipped":false,"dir":"test"},{"name":"should override charset","suites":["utils.setCharset(type, charset)"],"updatePoint":{"line":33,"column":29,"index":1388},"line":33,"code":"  it('should override charset', function () {\n    assert.strictEqual(utils.setCharset('text/html; charset=iso-8859-1', 'utf-8'), 'text/html; charset=utf-8');\n  });","file":"utils.js","skipped":false,"dir":"test"},{"name":"should support strings","suites":["utils.wetag(body, encoding)"],"updatePoint":{"line":38,"column":28,"index":1609},"line":38,"code":"  it('should support strings', function () {\n    assert.strictEqual(utils.wetag('express!'), 'W/\"8-O2uVAFaQ1rZvlKLT14RnuvjPIdg\"');\n  });","file":"utils.js","skipped":false,"dir":"test"},{"name":"should support utf8 strings","suites":["utils.wetag(body, encoding)"],"updatePoint":{"line":41,"column":33,"index":1751},"line":41,"code":"  it('should support utf8 strings', function () {\n    assert.strictEqual(utils.wetag('express❤', 'utf8'), 'W/\"a-JBiXf7GyzxwcrxY4hVXUwa7tmks\"');\n  });","file":"utils.js","skipped":false,"dir":"test"},{"name":"should support buffer","suites":["utils.wetag(body, encoding)"],"updatePoint":{"line":44,"column":27,"index":1895},"line":44,"code":"  it('should support buffer', function () {\n    assert.strictEqual(utils.wetag(Buffer.from('express!')), 'W/\"8-O2uVAFaQ1rZvlKLT14RnuvjPIdg\"');\n  });","file":"utils.js","skipped":false,"dir":"test"},{"name":"should support empty string","suites":["utils.wetag(body, encoding)"],"updatePoint":{"line":47,"column":33,"index":2050},"line":47,"code":"  it('should support empty string', function () {\n    assert.strictEqual(utils.wetag(''), 'W/\"0-2jmj7l5rSw0yVb/vlWAYkK/YBwk\"');\n  });","file":"utils.js","skipped":false,"dir":"test"},{"name":"should support windows","suites":["utils.isAbsolute()"],"updatePoint":{"line":52,"column":28,"index":2228},"line":52,"code":"  it('should support windows', function () {\n    assert(utils.isAbsolute('c:\\\\'));\n    assert(utils.isAbsolute('c:/'));\n    assert(!utils.isAbsolute(':\\\\'));\n  });","file":"utils.js","skipped":false,"dir":"test"},{"name":"should support windows unc","suites":["utils.isAbsolute()"],"updatePoint":{"line":57,"column":32,"index":2396},"line":57,"code":"  it('should support windows unc', function () {\n    assert(utils.isAbsolute('\\\\\\\\foo\\\\bar'));\n  });","file":"utils.js","skipped":false,"dir":"test"},{"name":"should support unices","suites":["utils.isAbsolute()"],"updatePoint":{"line":60,"column":27,"index":2492},"line":60,"code":"  it('should support unices', function () {\n    assert(utils.isAbsolute('/foo/bar'));\n    assert(!utils.isAbsolute('foo/bar'));\n  });","file":"utils.js","skipped":false,"dir":"test"},{"name":"should flatten an array","suites":["utils.flatten(arr)"],"updatePoint":{"line":66,"column":29,"index":2677},"line":66,"code":"  it('should flatten an array', function () {\n    var arr = ['one', ['two', ['three', 'four'], 'five']];\n    var flat = utils.flatten(arr);\n    assert.strictEqual(flat.length, 5);\n    assert.strictEqual(flat[0], 'one');\n    assert.strictEqual(flat[1], 'two');\n    assert.strictEqual(flat[2], 'three');\n    assert.strictEqual(flat[3], 'four');\n    assert.strictEqual(flat[4], 'five');\n    assert.ok(flat.every(function (v) {\n      return typeof v === 'string';\n    }));\n  });","file":"utils.js","skipped":false,"dir":"test"}]}