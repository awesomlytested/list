{"repo":"callstack/linaria","url":"https://github.com/callstack/linaria","branch":"master","configs":[{"package":"preact-example","lang":"js","dir":"examples/Preact/preact-example/tests","framework":"jest","pattern":"**/*[._-]{test,spec,unittest,unit}.{ts,js}"},{"package":"@linaria/babel-preset","lang":"ts","dir":"packages/babel/__tests__","framework":"jest","pattern":"**/*[._-]{test,spec,unittest,unit}.{ts,js}"},{"package":"@linaria/core","lang":"js","dir":"packages/core/__tests__","framework":"jest","pattern":"**/*[._-]{test,spec,unittest,unit}.{ts,js}"},{"package":"@linaria/extractor","lang":"ts","dir":"packages/extractor/__tests__","framework":"jest","pattern":"**/*[._-]{test,spec,unittest,unit}.{ts,js}"},{"package":"@linaria/babel-plugin-interop","lang":"js","dir":"packages/interop/__tests__","framework":"jest","pattern":"**/*[._-]{test,spec,unittest,unit}.{ts,js}"},{"package":"@linaria/react","lang":"js","dir":"packages/react/__tests__","framework":"jest","pattern":"**/*[._-]{test,spec,unittest,unit}.{ts,js}"},{"package":"@linaria/server","lang":"ts","dir":"packages/server/__tests__","framework":"jest","pattern":"**/*[._-]{test,spec,unittest,unit}.{ts,js}"},{"package":"@linaria/shaker","lang":"ts","dir":"packages/shaker/__tests__","framework":"jest","pattern":"**/*[._-]{test,spec,unittest,unit}.{ts,js}"},{"package":"@linaria/utils","lang":"ts","dir":"packages/utils/__tests__","framework":"jest","pattern":"**/*[._-]{test,spec,unittest,unit}.{ts,js}"}],"tests":[{"name":"should filter falsy values","suites":[],"updatePoint":{"line":2,"column":30,"index":59},"line":2,"code":"it('should filter falsy values', () => {\n  expect(cx('1', 'test', false, '2', 0, '', null, undefined, '3')).toBe('1 test 2 3');\n});","file":"cx.test.ts","skipped":false,"dir":"packages/core/__tests__"},{"name":"should join atoms together, de-duplicating by property and joining the values","suites":[],"updatePoint":{"line":5,"column":81,"index":242},"line":5,"code":"it('should join atoms together, de-duplicating by property and joining the values', () => {\n  expect(cx('atm_a_class1 atm_b_class2', 'atm_a_class3')).toBe('atm_a_class3 atm_b_class2');\n});","file":"cx.test.ts","skipped":false,"dir":"packages/core/__tests__"},{"name":"should join atoms and non atoms together at the same time","suites":[],"updatePoint":{"line":8,"column":61,"index":411},"line":8,"code":"it('should join atoms and non atoms together at the same time', () => {\n  expect(cx('atm_a_1', 'atm_b_2', false, '2', 0, '', null, undefined, '3', 'atm_b_3')).toBe('atm_a_1 atm_b_3 2 3');\n});","file":"cx.test.ts","skipped":false,"dir":"packages/core/__tests__"},{"name":"Ensures that package do not include core-js dependency after build","suites":[],"updatePoint":{"line":13,"column":70,"index":356},"line":13,"code":"it('Ensures that package do not include core-js dependency after build', async () => {\n  // eslint-disable-next-line import/no-extraneous-dependencies\n  const packageJSON = require('@linaria/core/package.json');\n  const buildScript = packageJSON.scripts['build:corejs-test'];\n  const proc = cp.exec(buildScript, {\n    env: {\n      ...process.env,\n      DEBUG_CORE_JS: 'true'\n    }\n  });\n  const result = await waitForProcess(proc);\n  // run `DEBUG_CORE_JS=true yarn build:lib` to debug issues with introduced core-js dependency\n  expect(result).not.toContain('The corejs3 polyfill added the following polyfills');\n  expect(result).toContain('Based on your code and targets, the corejs3 polyfill did not add any polyfill');\n}, 15000);","file":"detect-core-js.test.ts","skipped":false,"dir":"packages/core/__tests__"},{"name":"keeps linaria","suites":["styled-components"],"updatePoint":{"line":15,"column":19,"index":336},"line":15,"code":"  it('keeps linaria', () => {\n    const code = getCode(`\n    import styled from \"linaria/react\";\n    import Title from \"./Title\";\n\n    export default styled.h1\\`\n      & > ${'${Title}'} {\n        color: red;\n      }\n    \\`;\n  `);\n    expect(code).toMatchSnapshot();\n  });","file":"index.test.ts","skipped":false,"dir":"packages/interop/__tests__"},{"name":"css","suites":["styled-components"],"updatePoint":{"line":28,"column":9,"index":598},"line":28,"code":"  it('css', () => {\n    const code = getCode(`\n    import { css } from \"styled-components\";\n    import Title from \"./Title\";\n\n    export default css\\`\n      & > ${'${Title}'} {\n        color: red;\n      }\n    \\`;\n  `);\n    expect(code).toMatchSnapshot();\n  });","file":"index.test.ts","skipped":false,"dir":"packages/interop/__tests__"},{"name":"styled.h1","suites":["styled-components"],"updatePoint":{"line":41,"column":15,"index":865},"line":41,"code":"  it('styled.h1', () => {\n    const code = getCode(`\n    import styled from \"styled-components\";\n    import Title from \"./Title\";\n\n    export default styled.h1\\`\n      & > ${'${Title}'} {\n        color: red;\n      }\n    \\`;\n  `);\n    expect(code).toMatchSnapshot();\n  });","file":"index.test.ts","skipped":false,"dir":"packages/interop/__tests__"},{"name":"member expression as selector","suites":["styled-components"],"updatePoint":{"line":54,"column":35,"index":1157},"line":54,"code":"  it('member expression as selector', () => {\n    const code = getCode(`\n    import styled from \"styled-components\";\n    import Title from \"./Title\";\n\n    export default styled.h1\\`\n      & > ${'${Title.Small}'} {\n        color: red;\n      }\n    \\`;\n  `);\n    expect(code).toMatchSnapshot();\n  });","file":"index.test.ts","skipped":false,"dir":"packages/interop/__tests__"},{"name":"styled(Cmp)","suites":["styled-components"],"updatePoint":{"line":67,"column":17,"index":1437},"line":67,"code":"  it('styled(Cmp)', () => {\n    const code = getCode(`\n    import styled from \"styled-components\";\n    import Cmp from \"./Cmp\";\n    import Title from \"./Title\";\n\n    export default styled(Cmp)\\`\n      & > ${'${Title}'} {\n        color: red;\n      }\n    \\`;\n  `);\n    expect(code).toMatchSnapshot();\n  });","file":"index.test.ts","skipped":false,"dir":"packages/interop/__tests__"},{"name":"styled(Cmp).attrs({})","suites":["styled-components"],"updatePoint":{"line":81,"column":27,"index":1752},"line":81,"code":"  it('styled(Cmp).attrs({})', () => {\n    const code = getCode(`\n    import styled from \"styled-components\";\n    import Cmp from \"./Cmp\";\n    import Title from \"./Title\";\n\n    export default styled(Cmp).attrs(() => ({}))\\`\n      & > ${'${Title}'} {\n        color: red;\n      }\n    \\`;\n  `);\n    expect(code).toMatchSnapshot();\n  });","file":"index.test.ts","skipped":false,"dir":"packages/interop/__tests__"},{"name":"styled.h1.attrs({})","suites":["styled-components"],"updatePoint":{"line":95,"column":25,"index":2083},"line":95,"code":"  it('styled.h1.attrs({})', () => {\n    const code = getCode(`\n    import styled from \"styled-components\";\n    import Title from \"./Title\";\n\n    export default styled.h1.attrs(() => ({}))\\`\n      & > ${'${Title}'} {\n        color: red;\n      }\n    \\`;\n  `);\n    expect(code).toMatchSnapshot();\n  });","file":"index.test.ts","skipped":false,"dir":"packages/interop/__tests__"},{"name":"Ensures that package do not include core-js dependency after build","suites":[],"updatePoint":{"line":13,"column":70,"index":355},"line":13,"code":"it('Ensures that package do not include core-js dependency after build', async () => {\n  // eslint-disable-next-line import/no-extraneous-dependencies\n  const packageJSON = require('@linaria/react/package.json');\n  const buildScript = packageJSON.scripts['build:corejs-test'];\n  const proc = cp.exec(buildScript, {\n    stdio: 'ignore',\n    env: {\n      ...process.env,\n      DEBUG_CORE_JS: 'true'\n    }\n  });\n  const result = await waitForProcess(proc);\n  // run `DEBUG_CORE_JS=true yarn build:lib` to debug issues with introduced core-js dependency\n  expect(result).not.toContain('The corejs3 polyfill added the following polyfills');\n  expect(result).toContain('Based on your code and targets, the corejs3 polyfill did not add any polyfill');\n}, 15000);","file":"detect-core-js.test.ts","skipped":false,"dir":"packages/react/__tests__"},{"name":"critical","suites":[],"updatePoint":{"line":10,"column":16},"line":10,"code":"  test('critical', () => expect(prettyPrint(critical)).toMatchSnapshot());","file":"collect.test.ts","skipped":false,"dir":"packages/server/__tests__"},{"name":"other","suites":[],"updatePoint":{"line":11,"column":13},"line":11,"code":"  test('other', () => expect(prettyPrint(other)).toMatchSnapshot());","file":"collect.test.ts","skipped":false,"dir":"packages/server/__tests__"},{"name":"critical","suites":["works with global css"],"updatePoint":{"line":198,"column":16},"line":198,"code":"  test('critical', () => expect(prettyPrint(critical)).toMatchSnapshot());","file":"collect.test.ts","skipped":false,"dir":"packages/server/__tests__"},{"name":"other","suites":["works with global css"],"updatePoint":{"line":199,"column":13},"line":199,"code":"  test('other', () => expect(prettyPrint(other)).toMatchSnapshot());","file":"collect.test.ts","skipped":false,"dir":"packages/server/__tests__"},{"name":"critical","suites":["handles top-level @font-face"],"updatePoint":{"line":213,"column":16},"line":213,"code":"  test('critical', () => expect(prettyPrint(critical)).toMatchSnapshot());","file":"collect.test.ts","skipped":false,"dir":"packages/server/__tests__"},{"name":"other","suites":["handles top-level @font-face"],"updatePoint":{"line":214,"column":13},"line":214,"code":"  test('other', () => expect(prettyPrint(other)).toMatchSnapshot());","file":"collect.test.ts","skipped":false,"dir":"packages/server/__tests__"},{"name":"critical","suites":["include atrule once"],"updatePoint":{"line":234,"column":16},"line":234,"code":"  test('critical', () => expect(prettyPrint(critical)).toMatchSnapshot());","file":"collect.test.ts","skipped":false,"dir":"packages/server/__tests__"},{"name":"other","suites":["include atrule once"],"updatePoint":{"line":235,"column":13},"line":235,"code":"  test('other', () => expect(prettyPrint(other)).toMatchSnapshot());","file":"collect.test.ts","skipped":false,"dir":"packages/server/__tests__"},{"name":"critical should be empty","suites":["ignore empty class attribute"],"updatePoint":{"line":252,"column":32},"line":252,"code":"  test('critical should be empty', () => expect(critical).toEqual(''));","file":"collect.test.ts","skipped":false,"dir":"packages/server/__tests__"},{"name":"does not match selectors in ignoredClasses list","suites":["ignore empty class attribute"],"updatePoint":{"line":255,"column":53},"line":255,"code":"test('does not match selectors in ignoredClasses list', () => {\n  const code = dedent`\n    <div class=\"lily ltr dir\"></div>\n  `;\n\n  const css = dedent`\n    .linaria.dir {}\n    .linaria.ltr {}\n    .lily {}\n  `;\n\n  const { critical, other } = collect(code, css, {\n    ignoredClasses: ['ltr', 'dir'],\n  });\n  expect(critical).toMatchInlineSnapshot(`\".lily {}\"`);\n  expect(other).toMatchInlineSnapshot(`\".linaria.dir {}.linaria.ltr {}\"`);\n});","file":"collect.test.ts","skipped":false,"dir":"packages/server/__tests__"},{"name":"does not match selectors in blockedClasses list","suites":["ignore empty class attribute"],"updatePoint":{"line":273,"column":53},"line":273,"code":"test('does not match selectors in blockedClasses list', () => {\n  const code = dedent`\n    <div class=\"lily linaria ltr dir\"></div>\n  `;\n\n  const css = dedent`\n    .linaria.ltr {}\n    .linaria.rtl {}\n    .lily {}\n  `;\n\n  const { critical, other } = collect(code, css, { blockedClasses: ['rtl'] });\n  expect(critical).toMatchInlineSnapshot(`\".linaria.ltr {}.lily {}\"`);\n  expect(other).toMatchInlineSnapshot(`\".linaria.rtl {}\"`);\n});","file":"collect.test.ts","skipped":false,"dir":"packages/server/__tests__"},{"name":"does not match child selectors in blockedClasses list for media queries","suites":["ignore empty class attribute"],"updatePoint":{"line":289,"column":77},"line":289,"code":"test('does not match child selectors in blockedClasses list for media queries', () => {\n  const code = dedent`\n    <div class=\"lily linaria ltr dir\"></div>\n  `;\n\n  const css = dedent`\n  @media only screen and (max-width:561.5px) {\n    .dir-ltr.left_6_3_l9xil3s {\n      padding-left: 24px !important;\n    }\n\n    .dir-rtl.left_6_3_l9xil3s {\n      padding-right: 24px !important;\n    }\n  }\n  `;\n\n  const { critical, other } = collect(code, css, {\n    blockedClasses: ['dir-rtl'],\n  });\n\n  expect(critical).toMatchInlineSnapshot(`\n    \"@media only screen and (max-width:561.5px) {\n      .dir-ltr.left_6_3_l9xil3s {\n        padding-left: 24px !important;\n      }\n    }\"\n  `);\n  expect(other).toMatchInlineSnapshot(`\n    \"@media only screen and (max-width:561.5px) {\n\n      .dir-rtl.left_6_3_l9xil3s {\n        padding-right: 24px !important;\n      }\n    }\"\n  `);\n});","file":"collect.test.ts","skipped":false,"dir":"packages/server/__tests__"}]}