{"repo":"mermaid-js/mermaid","url":"https://github.com/mermaid-js/mermaid","branch":"develop","configs":[{"package":"mermaid","lang":"js","dir":"cypress","framework":"jest","pattern":"**/*[._-]{test,spec,unittest,unit}.{ts,js}"}],"tests":[{"name":"should handle default value false of arrowMarkerAbsolute","suites":["Configuration","arrowMarkerAbsolute"],"updatePoint":{"line":4,"column":64,"index":191},"line":4,"code":"    it('should handle default value false of arrowMarkerAbsolute', () => {\n      renderGraph(`graph TD\n        A[Christmas] -->|Get money| B(Go shopping)\n        B --> C{Let me think}\n        C -->|One| D[Laptop]\n        C -->|Two| E[iPhone]\n        C -->|Three| F[fa:fa-car Car]\n        `, {});\n\n      // Check the marker-end property to make sure it is properly set to\n      // start with #\n      cy.get('.edgePaths').within(() => {\n        cy.get('path').first().should('have.attr', 'marker-end').should('exist').and('include', 'url(#');\n      });\n    });","file":"integration/other/configuration.spec.js","skipped":false,"dir":"cypress"},{"name":"should handle default value false of arrowMarkerAbsolute","suites":["Configuration","arrowMarkerAbsolute"],"updatePoint":{"line":19,"column":64,"index":750},"line":19,"code":"    it('should handle default value false of arrowMarkerAbsolute', () => {\n      renderGraph(`graph TD\n        A[Christmas] -->|Get money| B(Go shopping)\n        B --> C{Let me think}\n        C -->|One| D[Laptop]\n        C -->|Two| E[iPhone]\n        C -->|Three| F[fa:fa-car Car]\n        `, {});\n\n      // Check the marker-end property to make sure it is properly set to\n      // start with #\n      cy.get('.edgePaths').within(() => {\n        cy.get('path').first().should('have.attr', 'marker-end').should('exist').and('include', 'url(#');\n      });\n    });","file":"integration/other/configuration.spec.js","skipped":false,"dir":"cypress"},{"name":"should handle arrowMarkerAbsolute explicitly set to false","suites":["Configuration","arrowMarkerAbsolute"],"updatePoint":{"line":34,"column":65,"index":1310},"line":34,"code":"    it('should handle arrowMarkerAbsolute explicitly set to false', () => {\n      renderGraph(`graph TD\n        A[Christmas] -->|Get money| B(Go shopping)\n        B --> C{Let me think}\n        C -->|One| D[Laptop]\n        C -->|Two| E[iPhone]\n        C -->|Three| F[fa:fa-car Car]\n        `, {\n        arrowMarkerAbsolute: false\n      });\n\n      // Check the marker-end property to make sure it is properly set to\n      // start with #\n      cy.get('.edgePaths').within(() => {\n        cy.get('path').first().should('have.attr', 'marker-end').should('exist').and('include', 'url(#');\n      });\n    });","file":"integration/other/configuration.spec.js","skipped":false,"dir":"cypress"},{"name":"should handle arrowMarkerAbsolute explicitly set to \"false\" as false","suites":["Configuration","arrowMarkerAbsolute"],"updatePoint":{"line":51,"column":76,"index":1923},"line":51,"code":"    it('should handle arrowMarkerAbsolute explicitly set to \"false\" as false', () => {\n      renderGraph(`graph TD\n        A[Christmas] -->|Get money| B(Go shopping)\n        B --> C{Let me think}\n        C -->|One| D[Laptop]\n        C -->|Two| E[iPhone]\n        C -->|Three| F[fa:fa-car Car]\n        `, {\n        arrowMarkerAbsolute: 'false'\n      });\n\n      // Check the marker-end property to make sure it is properly set to\n      // start with #\n      cy.get('.edgePaths').within(() => {\n        cy.get('path').first().should('have.attr', 'marker-end').should('exist').and('include', 'url(#');\n      });\n    });","file":"integration/other/configuration.spec.js","skipped":false,"dir":"cypress"},{"name":"should handle arrowMarkerAbsolute set to true","suites":["Configuration","arrowMarkerAbsolute"],"updatePoint":{"line":68,"column":53,"index":2515},"line":68,"code":"    it('should handle arrowMarkerAbsolute set to true', () => {\n      renderGraph(`flowchart TD\n        A[Christmas] -->|Get money| B(Go shopping)\n        B --> C{Let me think}\n        C -->|One| D[Laptop]\n        C -->|Two| E[iPhone]\n        C -->|Three| F[fa:fa-car Car]\n        `, {\n        arrowMarkerAbsolute: true\n      });\n      cy.get('.edgePaths').within(() => {\n        cy.get('path').first().should('have.attr', 'marker-end').should('exist').and('include', 'url(http://localhost');\n      });\n    });","file":"integration/other/configuration.spec.js","skipped":false,"dir":"cypress"},{"name":"should not taint the initial configuration when using multiple directives","suites":["Configuration","arrowMarkerAbsolute"],"updatePoint":{"line":82,"column":81,"index":3054},"line":82,"code":"    it('should not taint the initial configuration when using multiple directives', () => {\n      const url = 'http://localhost:9000/regression/issue-1874.html';\n      cy.viewport(1440, 1024);\n      cy.visit(url);\n      cy.get('svg');\n      cy.matchImageSnapshot('configuration.spec-should-not-taint-initial-configuration-when-using-multiple-directives');\n    });","file":"integration/other/configuration.spec.js","skipped":false,"dir":"cypress"},{"name":"should work on @mermaid-js/mermaid-mindmap and mermaid-example-diagram","suites":["mermaid","registerDiagram"],"updatePoint":{"line":4,"column":78,"index":199},"line":4,"code":"    it('should work on @mermaid-js/mermaid-mindmap and mermaid-example-diagram', () => {\n      const url = 'http://localhost:9000/external-diagrams-mindmap.html';\n      urlSnapshotTest(url, {}, false, false);\n    });","file":"integration/other/external-diagrams.spec.js","skipped":false,"dir":"cypress"},{"name":"should not allow CSS injections outside of the diagram","suites":["CSS injections"],"updatePoint":{"line":3,"column":60,"index":150},"line":3,"code":"  it('should not allow CSS injections outside of the diagram', () => {\n    urlSnapshotTest('http://localhost:9000/ghsa1.html', {\n      logLevel: 1,\n      flowchart: {\n        htmlLabels: false\n      }\n    });\n  });","file":"integration/other/ghsa.spec.js","skipped":false,"dir":"cypress"},{"name":"should not allow adding styletags affecting the page","suites":["CSS injections"],"updatePoint":{"line":11,"column":58,"index":363},"line":11,"code":"  it('should not allow adding styletags affecting the page', () => {\n    urlSnapshotTest('http://localhost:9000/ghsa3.html', {\n      logLevel: 1,\n      flowchart: {\n        htmlLabels: false\n      }\n    });\n  });","file":"integration/other/ghsa.spec.js","skipped":false,"dir":"cypress"},{"name":"Graph: should handle a click on a node with a bound function","suites":["Interaction","Security level loose"],"updatePoint":{"line":6,"column":68,"index":242},"line":6,"code":"    it('Graph: should handle a click on a node with a bound function', () => {\n      cy.contains('FunctionTest1').parents('.node').click();\n      cy.get('.created-by-click').should('have.text', 'Clicked By Flow');\n    });","file":"integration/other/interaction.spec.js","skipped":false,"dir":"cypress"},{"name":"Graph: should handle a click on a node with a bound function with args","suites":["Interaction","Security level loose"],"updatePoint":{"line":10,"column":78,"index":474},"line":10,"code":"    it('Graph: should handle a click on a node with a bound function with args', () => {\n      cy.contains('FunctionArgTest2').parents('.node').click();\n      cy.get('.created-by-click-2').should('have.text', 'Clicked By Flow: ARGUMENT');\n    });","file":"integration/other/interaction.spec.js","skipped":false,"dir":"cypress"},{"name":"Flowchart: should handle a click on a node with a bound function where the node starts with a number","suites":["Interaction","Security level loose"],"updatePoint":{"line":14,"column":108,"index":751},"line":14,"code":"    it('Flowchart: should handle a click on a node with a bound function where the node starts with a number', () => {\n      cy.contains('2FunctionArg').parents('.node').click();\n      cy.get('.created-by-click-2').should('have.text', 'Clicked By Flow: ARGUMENT');\n    });","file":"integration/other/interaction.spec.js","skipped":false,"dir":"cypress"},{"name":"Graph: should handle a click on a node with a bound url","suites":["Interaction","Security level loose"],"updatePoint":{"line":18,"column":63,"index":979},"line":18,"code":"    it('Graph: should handle a click on a node with a bound url', () => {\n      // When there is a URL, cy.contains selects the a tag instead of the span. The .node is a child of a, so we have to use find instead of parent.\n      cy.contains('URLTest1').find('.node').click();\n      cy.location().should(({\n        href\n      }) => {\n        expect(href).to.eq('http://localhost:9000/empty.html');\n      });\n    });","file":"integration/other/interaction.spec.js","skipped":false,"dir":"cypress"},{"name":"Graph: should handle a click on a node with a bound url where the node starts with a number","suites":["Interaction","Security level loose"],"updatePoint":{"line":27,"column":99,"index":1431},"line":27,"code":"    it('Graph: should handle a click on a node with a bound url where the node starts with a number', () => {\n      cy.contains('2URL').find('.node').click();\n      cy.location().should(({\n        href\n      }) => {\n        expect(href).to.eq('http://localhost:9000/empty.html');\n      });\n    });","file":"integration/other/interaction.spec.js","skipped":false,"dir":"cypress"},{"name":"Flowchart-v2: should handle a click on a node with a bound function","suites":["Interaction","Security level loose"],"updatePoint":{"line":35,"column":75,"index":1705},"line":35,"code":"    it('Flowchart-v2: should handle a click on a node with a bound function', () => {\n      cy.contains('FunctionTest2').parents('.node').click();\n      cy.get('.created-by-click').should('have.text', 'Clicked By Flow');\n    });","file":"integration/other/interaction.spec.js","skipped":false,"dir":"cypress"},{"name":"Flowchart-v2: should handle a click on a node with a bound function where the node starts with a number","suites":["Interaction","Security level loose"],"updatePoint":{"line":39,"column":111,"index":1970},"line":39,"code":"    it('Flowchart-v2: should handle a click on a node with a bound function where the node starts with a number', () => {\n      cy.contains('10Function').parents('.node').click();\n      cy.get('.created-by-click').should('have.text', 'Clicked By Flow');\n    });","file":"integration/other/interaction.spec.js","skipped":false,"dir":"cypress"},{"name":"Flowchart-v2: should handle a click on a node with a bound url","suites":["Interaction","Security level loose"],"updatePoint":{"line":43,"column":70,"index":2191},"line":43,"code":"    it('Flowchart-v2: should handle a click on a node with a bound url', () => {\n      cy.contains('URLTest2').find('.node').click();\n      cy.location().should(({\n        href\n      }) => {\n        expect(href).to.eq('http://localhost:9000/empty.html');\n      });\n    });","file":"integration/other/interaction.spec.js","skipped":false,"dir":"cypress"},{"name":"Flowchart-v2: should handle a click on a node with a bound url where the node starts with a number","suites":["Interaction","Security level loose"],"updatePoint":{"line":51,"column":106,"index":2500},"line":51,"code":"    it('Flowchart-v2: should handle a click on a node with a bound url where the node starts with a number', () => {\n      cy.contains('20URL').find('.node').click();\n      cy.location().should(({\n        href\n      }) => {\n        expect(href).to.eq('http://localhost:9000/empty.html');\n      });\n    });","file":"integration/other/interaction.spec.js","skipped":false,"dir":"cypress"},{"name":"should handle a click on a task with a bound URL clicking on the rect","suites":["Interaction","Security level loose"],"updatePoint":{"line":59,"column":77,"index":2777},"line":59,"code":"    it('should handle a click on a task with a bound URL clicking on the rect', () => {\n      cy.get('rect#cl1').click({\n        force: true\n      });\n      cy.location().should(({\n        href\n      }) => {\n        expect(href).to.eq('http://localhost:9000/empty.html');\n      });\n    });","file":"integration/other/interaction.spec.js","skipped":false,"dir":"cypress"},{"name":"should handle a click on a task with a bound URL clicking on the text","suites":["Interaction","Security level loose"],"updatePoint":{"line":69,"column":77,"index":3067},"line":69,"code":"    it('should handle a click on a task with a bound URL clicking on the text', () => {\n      cy.get('text#cl1-text').click({\n        force: true\n      });\n      cy.location().should(({\n        href\n      }) => {\n        expect(href).to.eq('http://localhost:9000/empty.html');\n      });\n    });","file":"integration/other/interaction.spec.js","skipped":false,"dir":"cypress"},{"name":"should handle a click on a task with a bound function without args","suites":["Interaction","Security level loose"],"updatePoint":{"line":79,"column":74,"index":3359},"line":79,"code":"    it('should handle a click on a task with a bound function without args', () => {\n      cy.get('rect#cl2').click({\n        force: true\n      });\n      cy.get('.created-by-gant-click').should('have.text', 'Clicked By Gant cl2');\n    });","file":"integration/other/interaction.spec.js","skipped":false,"dir":"cypress"},{"name":"should handle a click on a task with a bound function with args","suites":["Interaction","Security level loose"],"updatePoint":{"line":85,"column":71,"index":3595},"line":85,"code":"    it('should handle a click on a task with a bound function with args', () => {\n      cy.get('rect#cl3').click({\n        force: true\n      });\n      cy.get('.created-by-gant-click').should('have.text', 'Clicked By Gant test1 test2 test3');\n    });","file":"integration/other/interaction.spec.js","skipped":false,"dir":"cypress"},{"name":"should handle a click on a task with a bound function without args","suites":["Interaction","Security level loose"],"updatePoint":{"line":91,"column":74,"index":3848},"line":91,"code":"    it('should handle a click on a task with a bound function without args', () => {\n      cy.get('text#cl2-text').click({\n        force: true\n      });\n      cy.get('.created-by-gant-click').should('have.text', 'Clicked By Gant cl2');\n    });","file":"integration/other/interaction.spec.js","skipped":false,"dir":"cypress"},{"name":"should handle a click on a task with a bound function with args ","suites":["Interaction","Security level loose"],"updatePoint":{"line":97,"column":72,"index":4090},"line":97,"code":"    it('should handle a click on a task with a bound function with args ', () => {\n      cy.get('text#cl3-text').click({\n        force: true\n      });\n      cy.get('.created-by-gant-click').should('have.text', 'Clicked By Gant test1 test2 test3');\n    });","file":"integration/other/interaction.spec.js","skipped":false,"dir":"cypress"},{"name":"should handle a click on a node without a bound function","suites":["Interaction","Interaction - security level tight"],"updatePoint":{"line":108,"column":64,"index":4500},"line":108,"code":"    it('should handle a click on a node without a bound function', () => {\n      cy.contains('Function1').parents('.node').click();\n      cy.get('.created-by-click').should('not.exist');\n    });","file":"integration/other/interaction.spec.js","skipped":false,"dir":"cypress"},{"name":"should handle a click on a node with a bound function where the node starts with a number","suites":["Interaction","Interaction - security level tight"],"updatePoint":{"line":112,"column":97,"index":4728},"line":112,"code":"    it('should handle a click on a node with a bound function where the node starts with a number', () => {\n      cy.contains('1Function').parents('.node').click();\n      cy.get('.created-by-click').should('not.exist');\n    });","file":"integration/other/interaction.spec.js","skipped":false,"dir":"cypress"},{"name":"should handle a click on a node with a bound url","suites":["Interaction","Interaction - security level tight"],"updatePoint":{"line":116,"column":56,"index":4915},"line":116,"code":"    it('should handle a click on a node with a bound url', () => {\n      cy.contains('URL1').find('.node').click();\n      cy.location().should(({\n        href\n      }) => {\n        expect(href).to.eq('http://localhost:9000/empty.html');\n      });\n    });","file":"integration/other/interaction.spec.js","skipped":false,"dir":"cypress"},{"name":"should handle a click on a node with a bound url where the node starts with a number","suites":["Interaction","Interaction - security level tight"],"updatePoint":{"line":124,"column":92,"index":5206},"line":124,"code":"    it('should handle a click on a node with a bound url where the node starts with a number', () => {\n      cy.contains('2URL').find('.node').click();\n      cy.location().should(({\n        href\n      }) => {\n        expect(href).to.eq('http://localhost:9000/empty.html');\n      });\n    });","file":"integration/other/interaction.spec.js","skipped":false,"dir":"cypress"},{"name":"should handle a click on a task with a bound URL clicking on the rect","suites":["Interaction","Interaction - security level tight"],"updatePoint":{"line":132,"column":77,"index":5482},"line":132,"code":"    it('should handle a click on a task with a bound URL clicking on the rect', () => {\n      cy.get('rect#cl1').click({\n        force: true\n      });\n      cy.location().should(({\n        href\n      }) => {\n        expect(href).to.eq('http://localhost:9000/empty.html');\n      });\n    });","file":"integration/other/interaction.spec.js","skipped":false,"dir":"cypress"},{"name":"should handle a click on a task with a bound URL clicking on the text","suites":["Interaction","Interaction - security level tight"],"updatePoint":{"line":142,"column":77,"index":5772},"line":142,"code":"    it('should handle a click on a task with a bound URL clicking on the text', () => {\n      cy.get('text#cl1-text').click({\n        force: true\n      });\n      cy.location().should(({\n        href\n      }) => {\n        expect(href).to.eq('http://localhost:9000/empty.html');\n      });\n    });","file":"integration/other/interaction.spec.js","skipped":false,"dir":"cypress"},{"name":"should handle a click on a task with a bound function","suites":["Interaction","Interaction - security level tight"],"updatePoint":{"line":152,"column":61,"index":6051},"line":152,"code":"    it('should handle a click on a task with a bound function', () => {\n      cy.get('rect#cl2').click({\n        force: true\n      });\n      cy.get('.created-by-gant-click').should('not.exist');\n    });","file":"integration/other/interaction.spec.js","skipped":false,"dir":"cypress"},{"name":"should handle a click on a task with a bound function","suites":["Interaction","Interaction - security level tight"],"updatePoint":{"line":158,"column":61,"index":6254},"line":158,"code":"    it('should handle a click on a task with a bound function', () => {\n      cy.get('text#cl2-text').click({\n        force: true\n      });\n      cy.get('.created-by-gant-click').should('not.exist');\n    });","file":"integration/other/interaction.spec.js","skipped":false,"dir":"cypress"},{"name":"should handle a click on a node with a bound function","suites":["Interaction","Interaction - security level other, missspelling"],"updatePoint":{"line":169,"column":61,"index":6637},"line":169,"code":"    it('should handle a click on a node with a bound function', () => {\n      cy.contains('Function1').parents('.node').click();\n      cy.get('.created-by-click').should('not.exist');\n    });","file":"integration/other/interaction.spec.js","skipped":false,"dir":"cypress"},{"name":"should handle a click on a node with a bound function where the node starts with a number","suites":["Interaction","Interaction - security level other, missspelling"],"updatePoint":{"line":173,"column":97,"index":6865},"line":173,"code":"    it('should handle a click on a node with a bound function where the node starts with a number', () => {\n      cy.contains('1Function').parents('.node').click();\n      cy.get('.created-by-click').should('not.exist');\n    });","file":"integration/other/interaction.spec.js","skipped":false,"dir":"cypress"},{"name":"should handle a click on a node with a bound url","suites":["Interaction","Interaction - security level other, missspelling"],"updatePoint":{"line":177,"column":56,"index":7052},"line":177,"code":"    it('should handle a click on a node with a bound url', () => {\n      cy.contains('URL1').find('.node').click();\n      cy.location().should(({\n        href\n      }) => {\n        expect(href).to.eq('http://localhost:9000/empty.html');\n      });\n    });","file":"integration/other/interaction.spec.js","skipped":false,"dir":"cypress"},{"name":"should handle a click on a task with a bound function","suites":["Interaction","Interaction - security level other, missspelling"],"updatePoint":{"line":185,"column":61,"index":7312},"line":185,"code":"    it('should handle a click on a task with a bound function', () => {\n      cy.get('rect#cl2').click({\n        force: true\n      });\n      cy.get('.created-by-gant-click').should('not.exist');\n    });","file":"integration/other/interaction.spec.js","skipped":false,"dir":"cypress"},{"name":"should handle a click on a task with a bound function","suites":["Interaction","Interaction - security level other, missspelling"],"updatePoint":{"line":191,"column":61,"index":7515},"line":191,"code":"    it('should handle a click on a task with a bound function', () => {\n      cy.get('text#cl2-text').click({\n        force: true\n      });\n      cy.get('.created-by-gant-click').should('not.exist');\n    });","file":"integration/other/interaction.spec.js","skipped":false,"dir":"cypress"},{"name":"should be able to render after an error has occurred","suites":["Rerendering"],"updatePoint":{"line":2,"column":58,"index":91},"line":2,"code":"  it('should be able to render after an error has occurred', () => {\n    const url = 'http://localhost:9000/render-after-error.html';\n    cy.viewport(1440, 1024);\n    cy.visit(url);\n    cy.get('#graphDiv').should('exist');\n  });","file":"integration/other/rerender.spec.js","skipped":false,"dir":"cypress"},{"name":"should be able to render and rerender a graph via API","suites":["Rerendering"],"updatePoint":{"line":8,"column":59,"index":321},"line":8,"code":"  it('should be able to render and rerender a graph via API', () => {\n    const url = 'http://localhost:9000/rerender.html';\n    cy.viewport(1440, 1024);\n    cy.visit(url);\n    cy.get('#graph [id^=flowchart-A]').should('have.text', 'XMas');\n    cy.get('body').find('#rerender').click({\n      force: true\n    });\n    cy.get('#graph [id^=flowchart-A]').should('have.text', 'Saturday');\n  });","file":"integration/other/rerender.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a simple sequence diagrams","suites":["Sequencediagram"],"updatePoint":{"line":2,"column":46,"index":83},"line":2,"code":"  it('should render a simple sequence diagrams', () => {\n    const url = 'http://localhost:9000/webpackUsage.html';\n    cy.visit(url);\n    cy.get('body').find('svg').should('have.length', 1);\n  });","file":"integration/other/webpackUsage.spec.js","skipped":false,"dir":"cypress"},{"name":"should handle html escapings properly","suites":["Sequencediagram"],"updatePoint":{"line":7,"column":43,"index":278},"line":7,"code":"  it('should handle html escapings properly', () => {\n    const url = 'http://localhost:9000/webpackUsage.html?test-html-escaping=true';\n    cy.visit(url);\n    cy.get('body').find('svg').should('have.length', 1);\n    cy.get('g.label > foreignobject > div').should('not.contain.text', '<b>');\n  });","file":"integration/other/webpackUsage.spec.js","skipped":false,"dir":"cypress"},{"name":"should handle xss in tags","suites":["XSS"],"updatePoint":{"line":3,"column":31,"index":108},"line":3,"code":"  it('should handle xss in tags', () => {\n    const str = 'eyJjb2RlIjoiXG5ncmFwaCBMUlxuICAgICAgQi0tPkQoPGltZyBvbmVycm9yPWxvY2F0aW9uPWBqYXZhc2NyaXB0XFx1MDAzYXhzc0F0dGFja1xcdTAwMjhkb2N1bWVudC5kb21haW5cXHUwMDI5YCBzcmM9eD4pOyIsIm1lcm1haWQiOnsidGhlbWUiOiJkZWZhdWx0In19';\n    const url = mermaidUrl(str, {}, true);\n    cy.visit(url);\n    cy.wait(1000).then(() => {\n      cy.get('.mermaid').should('exist');\n    });\n    cy.get('svg');\n  });","file":"integration/other/xss.spec.js","skipped":false,"dir":"cypress"},{"name":"should not allow tags in the css","suites":["XSS"],"updatePoint":{"line":12,"column":38,"index":549},"line":12,"code":"  it('should not allow tags in the css', () => {\n    const str = 'eyJjb2RlIjoiJSV7aW5pdDogeyAnZm9udEZhbWlseSc6ICdcXFwiPjwvc3R5bGU+PGltZyBzcmM9eCBvbmVycm9yPXhzc0F0dGFjaygpPid9IH0lJVxuZ3JhcGggTFJcbiAgICAgQSAtLT4gQiIsIm1lcm1haWQiOnsidGhlbWUiOiJkZWZhdWx0IiwiZmxvd2NoYXJ0Ijp7Imh0bWxMYWJlbHMiOmZhbHNlfX0sInVwZGF0ZUVkaXRvciI6ZmFsc2V9';\n    const url = mermaidUrl(str, {\n      theme: 'default',\n      flowchart: {\n        htmlMode: false\n      }\n    }, true);\n    cy.visit(url);\n    cy.wait(1000).then(() => {\n      cy.get('#the-malware').should('not.exist');\n    });\n  });","file":"integration/other/xss.spec.js","skipped":false,"dir":"cypress"},{"name":"should handle xss in tags in non-html mode","suites":["XSS"],"updatePoint":{"line":25,"column":48,"index":1125},"line":25,"code":"  it('should handle xss in tags in non-html mode', () => {\n    const str = 'eyJjb2RlIjoiXG5ncmFwaCBMUlxuICAgICAgQi0tPkQoPGltZyBvbmVycm9yPWxvY2F0aW9uPWBqYXZhc2NyaXB0XFx1MDAzYXhzc0F0dGFja1xcdTAwMjhkb2N1bWVudC5kb21haW5cXHUwMDI5YCBzcmM9eD4pOyIsIm1lcm1haWQiOnsidGhlbWUiOiJkZWZhdWx0IiwiZmxvd2NoYXJ0Ijp7Imh0bWxMYWJlbHMiOmZhbHNlfX19';\n    const url = mermaidUrl(str, {\n      theme: 'default',\n      flowchart: {\n        htmlMode: false\n      }\n    }, true);\n    cy.visit(url);\n    cy.wait(1000);\n    cy.get('#the-malware').should('not.exist');\n  });","file":"integration/other/xss.spec.js","skipped":false,"dir":"cypress"},{"name":"should not allow changing the __proto__ attribute using config","suites":["XSS"],"updatePoint":{"line":37,"column":68,"index":1687},"line":37,"code":"  it('should not allow changing the __proto__ attribute using config', () => {\n    cy.visit('http://localhost:9000/xss2.html');\n    cy.wait(1000);\n    cy.get('#the-malware').should('not.exist');\n  });","file":"integration/other/xss.spec.js","skipped":false,"dir":"cypress"},{"name":"should not allow manipulating htmlLabels into a false positive","suites":["XSS"],"updatePoint":{"line":42,"column":68,"index":1888},"line":42,"code":"  it('should not allow manipulating htmlLabels into a false positive', () => {\n    cy.visit('http://localhost:9000/xss4.html');\n    cy.wait(1000);\n    cy.get('#the-malware').should('not.exist');\n  });","file":"integration/other/xss.spec.js","skipped":false,"dir":"cypress"},{"name":"should not allow manipulating antiscript to run javascript","suites":["XSS"],"updatePoint":{"line":47,"column":64,"index":2085},"line":47,"code":"  it('should not allow manipulating antiscript to run javascript', () => {\n    cy.visit('http://localhost:9000/xss5.html');\n    cy.wait(1000);\n    cy.get('#the-malware').should('not.exist');\n  });","file":"integration/other/xss.spec.js","skipped":false,"dir":"cypress"},{"name":"should not allow manipulating antiscript to run javascript using onerror","suites":["XSS"],"updatePoint":{"line":52,"column":78,"index":2296},"line":52,"code":"  it('should not allow manipulating antiscript to run javascript using onerror', () => {\n    cy.visit('http://localhost:9000/xss6.html');\n    cy.wait(1000);\n    cy.get('#the-malware').should('not.exist');\n  });","file":"integration/other/xss.spec.js","skipped":false,"dir":"cypress"},{"name":"should not allow manipulating antiscript to run javascript using onerror in state diagrams with dagre wrapper","suites":["XSS"],"updatePoint":{"line":57,"column":115,"index":2544},"line":57,"code":"  it('should not allow manipulating antiscript to run javascript using onerror in state diagrams with dagre wrapper', () => {\n    cy.visit('http://localhost:9000/xss8.html');\n    cy.wait(1000);\n    cy.get('#the-malware').should('not.exist');\n  });","file":"integration/other/xss.spec.js","skipped":false,"dir":"cypress"},{"name":"should not allow manipulating antiscript to run javascript using onerror in state diagrams with dagre d3","suites":["XSS"],"updatePoint":{"line":62,"column":110,"index":2787},"line":62,"code":"  it('should not allow manipulating antiscript to run javascript using onerror in state diagrams with dagre d3', () => {\n    cy.on('uncaught:exception', (_err, _runnable) => {\n      return false; // continue rendering even if there if mermaid throws an error\n    });\n\n    cy.visit('http://localhost:9000/xss9.html');\n    cy.wait(1000);\n    cy.get('#the-malware').should('not.exist');\n  });","file":"integration/other/xss.spec.js","skipped":false,"dir":"cypress"},{"name":"should not allow manipulating antiscript to run javascript using onerror in state diagrams with dagre d3","suites":["XSS"],"updatePoint":{"line":71,"column":110,"index":3177},"line":71,"code":"  it('should not allow manipulating antiscript to run javascript using onerror in state diagrams with dagre d3', () => {\n    cy.visit('http://localhost:9000/xss10.html');\n    cy.wait(1000);\n    cy.get('#the-malware').should('not.exist');\n  });","file":"integration/other/xss.spec.js","skipped":false,"dir":"cypress"},{"name":"should not allow manipulating antiscript to run javascript using onerror in state diagrams with dagre d3","suites":["XSS"],"updatePoint":{"line":76,"column":110,"index":3421},"line":76,"code":"  it('should not allow manipulating antiscript to run javascript using onerror in state diagrams with dagre d3', () => {\n    cy.visit('http://localhost:9000/xss11.html');\n    cy.wait(1000);\n    cy.get('#the-malware').should('not.exist');\n  });","file":"integration/other/xss.spec.js","skipped":false,"dir":"cypress"},{"name":"should not allow manipulating antiscript to run javascript using onerror in state diagrams with dagre d3","suites":["XSS"],"updatePoint":{"line":81,"column":110,"index":3665},"line":81,"code":"  it('should not allow manipulating antiscript to run javascript using onerror in state diagrams with dagre d3', () => {\n    cy.visit('http://localhost:9000/xss12.html');\n    cy.wait(1000);\n    cy.get('#the-malware').should('not.exist');\n  });","file":"integration/other/xss.spec.js","skipped":false,"dir":"cypress"},{"name":"should not allow manipulating antiscript to run javascript using onerror in state diagrams with dagre d3","suites":["XSS"],"updatePoint":{"line":86,"column":110,"index":3909},"line":86,"code":"  it('should not allow manipulating antiscript to run javascript using onerror in state diagrams with dagre d3', () => {\n    cy.visit('http://localhost:9000/xss13.html');\n    cy.wait(1000);\n    cy.get('#the-malware').should('not.exist');\n  });","file":"integration/other/xss.spec.js","skipped":false,"dir":"cypress"},{"name":"should not allow manipulating antiscript to run javascript iframes in class diagrams","suites":["XSS"],"updatePoint":{"line":91,"column":90,"index":4133},"line":91,"code":"  it('should not allow manipulating antiscript to run javascript iframes in class diagrams', () => {\n    cy.visit('http://localhost:9000/xss14.html');\n    cy.wait(1000);\n    cy.get('#the-malware').should('not.exist');\n  });","file":"integration/other/xss.spec.js","skipped":false,"dir":"cypress"},{"name":"should sanitize cardinalities properly in class diagrams","suites":["XSS"],"updatePoint":{"line":96,"column":62,"index":4329},"line":96,"code":"  it('should sanitize cardinalities properly in class diagrams', () => {\n    cy.visit('http://localhost:9000/xss18.html');\n    cy.wait(1000);\n    cy.get('#the-malware').should('not.exist');\n  });","file":"integration/other/xss.spec.js","skipped":false,"dir":"cypress"},{"name":"should sanitize colons properly","suites":["XSS"],"updatePoint":{"line":101,"column":37,"index":4500},"line":101,"code":"  it('should sanitize colons properly', () => {\n    cy.visit('http://localhost:9000/xss20.html');\n    cy.wait(1000);\n    cy.get('a').click('');\n    cy.wait(1000);\n    cy.get('#the-malware').should('not.exist');\n  });","file":"integration/other/xss.spec.js","skipped":false,"dir":"cypress"},{"name":"should sanitize colons properly","suites":["XSS"],"updatePoint":{"line":108,"column":37,"index":4717},"line":108,"code":"  it('should sanitize colons properly', () => {\n    cy.visit('http://localhost:9000/xss21.html');\n    cy.wait(1000);\n    cy.get('a').click('');\n    cy.wait(1000);\n    cy.get('#the-malware').should('not.exist');\n  });","file":"integration/other/xss.spec.js","skipped":false,"dir":"cypress"},{"name":"1: should render a simple gitgraph with commit on main branch","suites":["Git Graph diagram"],"updatePoint":{"line":3,"column":67,"index":163},"line":3,"code":"  it('1: should render a simple gitgraph with commit on main branch', () => {\n    imgSnapshotTest(`gitGraph\n       commit id: \"1\"\n       commit id: \"2\"\n       commit id: \"3\"\n      `, {});\n  });","file":"integration/rendering/appli.spec.js","skipped":false,"dir":"cypress"},{"name":"0: should render a simple class diagram","suites":["Class diagram V2"],"updatePoint":{"line":3,"column":45,"index":137},"line":3,"code":"  it('0: should render a simple class diagram', () => {\n    imgSnapshotTest(`\n        classDiagram-v2\n\n        classA -- classB : Inheritance\n        classA -- classC : link\n        classC -- classD : link\n        classB -- classD\n\n        `, {\n      logLevel: 1,\n      flowchart: {\n        htmlLabels: false\n      }\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/classDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"1: should render a simple class diagram","suites":["Class diagram V2"],"updatePoint":{"line":20,"column":45,"index":487},"line":20,"code":"  it('1: should render a simple class diagram', () => {\n    imgSnapshotTest(`\n    classDiagram-v2\n      Class01 <|-- AveryLongClass : Cool\n      &lt;&lt;interface&gt;&gt; Class01\n      Class03 *-- Class04\n      Class05 o-- Class06\n      Class07 .. Class08\n      Class09 --> C2 : Where am i?\n      Class09 --* C3\n      Class09 --|> Class07\n      Class12 <|.. Class08\n      Class11 ..>Class12\n      Class07 : equals()\n      Class07 : Object[] elementData\n      Class01 : size()\n      Class01 : int chimp\n      Class01 : int gorilla\n      Class01 : -int privateChimp\n      Class01 : +int publicGorilla\n      Class01 : #int protectedMarmoset\n      Class08 <--> C2: Cool label\n      class Class10 {\n        &lt;&lt;service&gt;&gt;\n        int id\n        test()\n      }\n      `, {\n      logLevel: 1,\n      flowchart: {\n        htmlLabels: false\n      }\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/classDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"2: should render a simple class diagrams with cardinality","suites":["Class diagram V2"],"updatePoint":{"line":55,"column":63,"index":1385},"line":55,"code":"  it('2: should render a simple class diagrams with cardinality', () => {\n    imgSnapshotTest(`\n    classDiagram-v2\n      Class01 \"1\" <|--|> \"*\" AveryLongClass : Cool\n      &lt;&lt;interface&gt;&gt; Class01\n      Class03 \"1\" *-- \"*\" Class04\n      Class05 \"1\" o-- \"many\" Class06\n      Class07 \"1\" .. \"*\" Class08\n      Class09 \"1\" --> \"*\" C2 : Where am i?\n      Class09 \"*\" --* \"*\" C3\n      Class09 \"1\" --|> \"1\" Class07\n      Class07  : equals()\n      Class07  : Object[] elementData\n      Class01  : size()\n      Class01  : int chimp\n      Class01  : int gorilla\n      Class08 \"1\" <--> \"*\" C2: Cool label\n      class Class10 {\n        &lt;&lt;service&gt;&gt;\n        int id\n        test()\n      }\n      `, {\n      logLevel: 1,\n      flowchart: {\n        htmlLabels: false\n      }\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/classDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a simple class diagram with different visibilities","suites":["Class diagram V2"],"updatePoint":{"line":85,"column":70,"index":2204},"line":85,"code":"  it('should render a simple class diagram with different visibilities', () => {\n    imgSnapshotTest(`\n    classDiagram-v2\n      Class01 <|-- AveryLongClass : Cool\n      &lt;&lt;interface&gt;&gt; Class01\n      Class01 : -privateMethod()\n      Class01 : +publicMethod()\n      Class01 : #protectedMethod()\n      Class01 : -int privateChimp\n      Class01 : +int publicGorilla\n      Class01 : #int protectedMarmoset\n      `, {\n      logLevel: 1,\n      flowchart: {\n        htmlLabels: false\n      }\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/classDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"should render multiple class diagrams","suites":["Class diagram V2"],"updatePoint":{"line":104,"column":43,"index":2705},"line":104,"code":"  it('should render multiple class diagrams', () => {\n    imgSnapshotTest([`\n    classDiagram-v2\n      Class01 \"1\" <|--|> \"*\" AveryLongClass : Cool\n      &lt;&lt;interface&gt;&gt; Class01\n      Class03 \"1\" *-- \"*\" Class04\n      Class05 \"1\" o-- \"many\" Class06\n      Class07 \"1\" .. \"*\" Class08\n      Class09 \"1\" --> \"*\" C2 : Where am i?\n      Class09 \"*\" --* \"*\" C3\n      Class09 \"1\" --|> \"1\" Class07\n      Class07  : equals()\n      Class07  : Object[] elementData\n      Class01  : size()\n      Class01  : int chimp\n      Class01  : int gorilla\n      Class08 \"1\" <--> \"*\" C2: Cool label\n      class Class10 {\n        &lt;&lt;service&gt;&gt;\n        int id\n        test()\n      }\n      `, `\n    classDiagram-v2\n      Class01 \"1\" <|--|> \"*\" AveryLongClass : Cool\n      &lt;&lt;interface&gt;&gt; Class01\n      Class03 \"1\" *-- \"*\" Class04\n      Class05 \"1\" o-- \"many\" Class06\n      Class07 \"1\" .. \"*\" Class08\n      Class09 \"1\" --> \"*\" C2 : Where am i?\n      Class09 \"*\" --* \"*\" C3\n      Class09 \"1\" --|> \"1\" Class07\n      Class07  : equals()\n      Class07  : Object[] elementData\n      Class01  : size()\n      Class01  : int chimp\n      Class01  : int gorilla\n      Class08 \"1\" <--> \"*\" C2: Cool label\n      class Class10 {\n        &lt;&lt;service&gt;&gt;\n        int id\n        test()\n      }\n      `], {\n      logLevel: 1,\n      flowchart: {\n        htmlLabels: false\n      }\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/classDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"4: should render a simple class diagram with comments","suites":["Class diagram V2"],"updatePoint":{"line":155,"column":59,"index":4126},"line":155,"code":"  it('4: should render a simple class diagram with comments', () => {\n    imgSnapshotTest(`\n    classDiagram-v2\n      %% this is a comment\n      Class01 <|-- AveryLongClass : Cool\n      &lt;&lt;interface&gt;&gt; Class01\n      Class03 *-- Class04\n      Class05 o-- Class06\n      Class07 .. Class08\n      Class09 --> C2 : Where am i?\n      Class09 --* C3\n      Class09 --|> Class07\n      Class07 : equals()\n      Class07 : Object[] elementData\n      Class01 : size()\n      Class01 : int chimp\n      Class01 : int gorilla\n      Class08 <--> C2: Cool label\n      class Class10 {\n        &lt;&lt;service&gt;&gt;\n        int id\n        test()\n      }\n      `, {\n      logLevel: 1,\n      flowchart: {\n        htmlLabels: false\n      }\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/classDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"5: should render a simple class diagram with abstract method","suites":["Class diagram V2"],"updatePoint":{"line":186,"column":66,"index":4894},"line":186,"code":"  it('5: should render a simple class diagram with abstract method', () => {\n    imgSnapshotTest(`\n    classDiagram-v2\n      Class01 <|-- AveryLongClass : Cool\n      Class01 : someMethod()*\n      `, {\n      logLevel: 1,\n      flowchart: {\n        htmlLabels: false\n      }\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/classDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"6: should render a simple class diagram with static method","suites":["Class diagram V2"],"updatePoint":{"line":199,"column":64,"index":5198},"line":199,"code":"  it('6: should render a simple class diagram with static method', () => {\n    imgSnapshotTest(`\n    classDiagram-v2\n      Class01 <|-- AveryLongClass : Cool\n      Class01 : someMethod()$\n      `, {\n      logLevel: 1,\n      flowchart: {\n        htmlLabels: false\n      }\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/classDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"7: should render a simple class diagram with Generic class","suites":["Class diagram V2"],"updatePoint":{"line":212,"column":64,"index":5502},"line":212,"code":"  it('7: should render a simple class diagram with Generic class', () => {\n    imgSnapshotTest(`\n    classDiagram-v2\n    class Class01~T~\n      Class01 : size()\n      Class01 : int chimp\n      Class01 : int gorilla\n      Class08 <--> C2: Cool label\n      class Class10~T~ {\n        &lt;&lt;service&gt;&gt;\n        int id\n        test()\n      }\n      `, {\n      logLevel: 1,\n      flowchart: {\n        htmlLabels: false\n      }\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/classDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"8: should render a simple class diagram with Generic class and relations","suites":["Class diagram V2"],"updatePoint":{"line":233,"column":78,"index":5976},"line":233,"code":"  it('8: should render a simple class diagram with Generic class and relations', () => {\n    imgSnapshotTest(`\n    classDiagram-v2\n    Class01~T~ <|-- AveryLongClass : Cool\n    Class03~T~ *-- Class04~T~\n      Class01 : size()\n      Class01 : int chimp\n      Class01 : int gorilla\n      Class08 <--> C2: Cool label\n      class Class10~T~ {\n        &lt;&lt;service&gt;&gt;\n        int id\n        test()\n      }\n      `, {\n      logLevel: 1,\n      flowchart: {\n        htmlLabels: false\n      }\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/classDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"9: should render a simple class diagram with clickable link","suites":["Class diagram V2"],"updatePoint":{"line":255,"column":65,"index":6488},"line":255,"code":"  it('9: should render a simple class diagram with clickable link', () => {\n    imgSnapshotTest(`\n    classDiagram-v2\n    Class01~T~ <|-- AveryLongClass : Cool\n    Class03~T~ *-- Class04~T~\n      Class01 : size()\n      Class01 : int chimp\n      Class01 : int gorilla\n      Class08 <--> C2: Cool label\n      class Class10~T~ {\n        &lt;&lt;service&gt;&gt;\n        int id\n        test()\n      }\n      link Class01 \"google.com\" \"A Tooltip\"\n      `, {\n      logLevel: 1,\n      flowchart: {\n        htmlLabels: false\n      }\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/classDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"10: should render a simple class diagram with clickable callback","suites":["Class diagram V2"],"updatePoint":{"line":278,"column":70,"index":7049},"line":278,"code":"  it('10: should render a simple class diagram with clickable callback', () => {\n    imgSnapshotTest(`\n    classDiagram-v2\n    Class01~T~ <|-- AveryLongClass : Cool\n    Class03~T~ *-- Class04~T~\n      Class01 : size()\n      Class01 : int chimp\n      Class01 : int gorilla\n      Class08 <--> C2: Cool label\n      class Class10~T~ {\n        &lt;&lt;service&gt;&gt;\n        int id\n        test()\n      }\n      callback Class01 \"functionCall\" \"A Tooltip\"\n      `, {\n      logLevel: 1,\n      flowchart: {\n        htmlLabels: false\n      }\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/classDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"11: should render a simple class diagram with return type on method","suites":["Class diagram V2"],"updatePoint":{"line":301,"column":73,"index":7619},"line":301,"code":"  it('11: should render a simple class diagram with return type on method', () => {\n    imgSnapshotTest(`\n    classDiagram-v2\n      class Class10~T~ {\n        int[] id\n        test(int[] ids) bool\n        testArray() bool[]\n      }\n      `, {\n      logLevel: 1,\n      flowchart: {\n        htmlLabels: false\n      }\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/classDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"12: should render a simple class diagram with generic types","suites":["Class diagram V2"],"updatePoint":{"line":317,"column":65,"index":7959},"line":317,"code":"  it('12: should render a simple class diagram with generic types', () => {\n    imgSnapshotTest(`\n    classDiagram-v2\n      class Class10~T~ {\n        int[] id\n        List~int~ ids\n        test(List~int~ ids) List~bool~\n        testArray() bool[]\n      }\n      `, {\n      logLevel: 1,\n      flowchart: {\n        htmlLabels: false\n      }\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/classDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"13: should render a simple class diagram with css classes applied","suites":["Class diagram V2"],"updatePoint":{"line":334,"column":71,"index":8337},"line":334,"code":"  it('13: should render a simple class diagram with css classes applied', () => {\n    imgSnapshotTest(`\n    classDiagram-v2\n      class Class10 {\n        int[] id\n        List~int~ ids\n        test(List~int~ ids) List~bool~\n        testArray() bool[]\n      }\n\n      cssClass \"Class10\" exClass2\n      `, {\n      logLevel: 1,\n      flowchart: {\n        htmlLabels: false\n      }\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/classDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"14: should render a simple class diagram with css classes applied directly","suites":["Class diagram V2"],"updatePoint":{"line":353,"column":80,"index":8756},"line":353,"code":"  it('14: should render a simple class diagram with css classes applied directly', () => {\n    imgSnapshotTest(`\n    classDiagram-v2\n      class Class10:::exClass2 {\n        int[] id\n        List~int~ ids\n        test(List~int~ ids) List~bool~\n        testArray() bool[]\n      }\n      `, {\n      logLevel: 1,\n      flowchart: {\n        htmlLabels: false\n      }\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/classDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"15: should render a simple class diagram with css classes applied two multiple classes","suites":["Class diagram V2"],"updatePoint":{"line":370,"column":92,"index":9163},"line":370,"code":"  it('15: should render a simple class diagram with css classes applied two multiple classes', () => {\n    imgSnapshotTest(`\n    classDiagram-v2\n      class Class10\n      class Class20\n\n      cssClass \"Class10, class20\" exClass2\n      `, {\n      logLevel: 1,\n      flowchart: {\n        htmlLabels: false\n      }\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/classDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"16a: should render a simple class diagram with static field","suites":["Class diagram V2"],"updatePoint":{"line":385,"column":65,"index":9481},"line":385,"code":"  it('16a: should render a simple class diagram with static field', () => {\n    imgSnapshotTest(`\n    classDiagram-v2\n      class Foo {\n        +String bar$\n      }\n            `, {\n      logLevel: 1,\n      flowchart: {\n        htmlLabels: false\n      }\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/classDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"16b: should handle the direction statement with TB","suites":["Class diagram V2"],"updatePoint":{"line":399,"column":56,"index":9759},"line":399,"code":"  it('16b: should handle the direction statement with TB', () => {\n    imgSnapshotTest(`\n      classDiagram\n        direction TB\n        class Student {\n          -idCard : IdCard\n        }\n        class IdCard{\n          -id : int\n          -name : string\n        }\n        class Bike{\n          -id : int\n          -name : string\n        }\n        Student \"1\" --o \"1\" IdCard : carries\n        Student \"1\" --o \"1\" Bike : rides\n\n      `, {\n      logLevel: 1,\n      flowchart: {\n        htmlLabels: false\n      }\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/classDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"18: should handle the direction statement with LR","suites":["Class diagram V2"],"updatePoint":{"line":425,"column":55,"index":10303},"line":425,"code":"  it('18: should handle the direction statement with LR', () => {\n    imgSnapshotTest(`\n      classDiagram\n        direction LR\n        class Student {\n          -idCard : IdCard\n        }\n        class IdCard{\n          -id : int\n          -name : string\n        }\n        class Bike{\n          -id : int\n          -name : string\n        }\n        Student \"1\" --o \"1\" IdCard : carries\n        Student \"1\" --o \"1\" Bike : rides\n\n      `, {\n      logLevel: 1,\n      flowchart: {\n        htmlLabels: false\n      }\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/classDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"17a: should handle the direction statement with BT","suites":["Class diagram V2"],"updatePoint":{"line":451,"column":56,"index":10848},"line":451,"code":"  it('17a: should handle the direction statement with BT', () => {\n    imgSnapshotTest(`\n      classDiagram\n        direction BT\n        class Student {\n          -idCard : IdCard\n        }\n        class IdCard{\n          -id : int\n          -name : string\n        }\n        class Bike{\n          -id : int\n          -name : string\n        }\n        Student \"1\" --o \"1\" IdCard : carries\n        Student \"1\" --o \"1\" Bike : rides\n\n      `, {\n      logLevel: 1,\n      flowchart: {\n        htmlLabels: false\n      }\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/classDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"17b: should handle the direction statement with RL","suites":["Class diagram V2"],"updatePoint":{"line":477,"column":56,"index":11393},"line":477,"code":"  it('17b: should handle the direction statement with RL', () => {\n    imgSnapshotTest(`\n      classDiagram\n        direction RL\n        class Student {\n          -idCard : IdCard\n        }\n        class IdCard{\n          -id : int\n          -name : string\n        }\n        class Bike{\n          -id : int\n          -name : string\n        }\n        Student \"1\" --o \"1\" IdCard : carries\n        Student \"1\" --o \"1\" Bike : rides\n\n      `, {\n      logLevel: 1,\n      flowchart: {\n        htmlLabels: false\n      }\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/classDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"18: should render a simple class diagram with notes","suites":["Class diagram V2"],"updatePoint":{"line":503,"column":57,"index":11939},"line":503,"code":"  it('18: should render a simple class diagram with notes', () => {\n    imgSnapshotTest(`\n      classDiagram-v2\n        note \"I love this diagram!\\nDo you love it?\"\n        class Class10 {\n            int id\n          size()\n        }\n        note for Class10 \"Cool class\\nI said it's very cool class!\"\n\n        `, {\n      logLevel: 1,\n      flowchart: {\n        htmlLabels: false\n      }\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/classDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"1433: should render a simple class with a title","suites":["Class diagram V2"],"updatePoint":{"line":521,"column":53,"index":12357},"line":521,"code":"  it('1433: should render a simple class with a title', () => {\n    imgSnapshotTest(`---\ntitle: simple class diagram\n---\nclassDiagram-v2\nclass Class10\n`, {});\n  });","file":"integration/rendering/classDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"1: should render a simple class diagram","suites":["Class diagram"],"updatePoint":{"line":3,"column":45,"index":147},"line":3,"code":"  it('1: should render a simple class diagram', () => {\n    imgSnapshotTest(`\n    classDiagram\n      Class01 <|-- AveryLongClass : Cool\n      &lt;&lt;interface&gt;&gt; Class01\n      Class03 *-- Class04\n      Class05 o-- Class06\n      Class07 .. Class08\n      Class09 --> C2 : Where am i?\n      Class09 --* C3\n      Class09 --|> Class07\n      Class12 <|.. Class08\n      Class11 ..>Class12\n      Class07 : equals()\n      Class07 : Object[] elementData\n      Class01 : size()\n      Class01 : int chimp\n      Class01 : int gorilla\n      Class01 : -int privateChimp\n      Class01 : +int publicGorilla\n      Class01 : #int protectedMarmoset\n      Class08 <--> C2: Cool label\n      class Class10 {\n        &lt;&lt;service&gt;&gt;\n        int id\n        test()\n      }\n      `, {\n      logLevel: 1\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/classDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"2: should render a simple class diagrams with cardinality","suites":["Class diagram"],"updatePoint":{"line":35,"column":63,"index":988},"line":35,"code":"  it('2: should render a simple class diagrams with cardinality', () => {\n    imgSnapshotTest(`\n    classDiagram\n      Class01 \"1\" <|--|> \"*\" AveryLongClass : Cool\n      &lt;&lt;interface&gt;&gt; Class01\n      Class03 \"1\" *-- \"*\" Class04\n      Class05 \"1\" o-- \"many\" Class06\n      Class07 \"1\" .. \"*\" Class08\n      Class09 \"1\" --> \"*\" C2 : Where am i?\n      Class09 \"*\" --* \"*\" C3\n      Class09 \"1\" --|> \"1\" Class07\n      Class07  : equals()\n      Class07  : Object[] elementData\n      Class01  : size()\n      Class01  : int chimp\n      Class01  : int gorilla\n      Class08 \"1\" <--> \"*\" C2: Cool label\n      class Class10 {\n        &lt;&lt;service&gt;&gt;\n        int id\n        test()\n      }\n      `, {});\n    cy.get('svg');\n  });","file":"integration/rendering/classDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"3: should render a simple class diagram with different visibilities","suites":["Class diagram"],"updatePoint":{"line":60,"column":73,"index":1730},"line":60,"code":"  it('3: should render a simple class diagram with different visibilities', () => {\n    imgSnapshotTest(`\n    classDiagram\n      Class01 <|-- AveryLongClass : Cool\n      &lt;&lt;interface&gt;&gt; Class01\n      Class01 : -privateMethod()\n      Class01 : +publicMethod()\n      Class01 : #protectedMethod()\n      Class01 : -int privateChimp\n      Class01 : +int publicGorilla\n      Class01 : #int protectedMarmoset\n      `, {});\n    cy.get('svg');\n  });","file":"integration/rendering/classDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"4: should render a simple class diagram with comments","suites":["Class diagram"],"updatePoint":{"line":74,"column":59,"index":2167},"line":74,"code":"  it('4: should render a simple class diagram with comments', () => {\n    imgSnapshotTest(`\n    classDiagram\n      %% this is a comment\n      Class01 <|-- AveryLongClass : Cool\n      &lt;&lt;interface&gt;&gt; Class01\n      Class03 *-- Class04\n      Class05 o-- Class06\n      Class07 .. Class08\n      Class09 --> C2 : Where am i?\n      Class09 --* C3\n      Class09 --|> Class07\n      Class07 : equals()\n      Class07 : Object[] elementData\n      Class01 : size()\n      Class01 : int chimp\n      Class01 : int gorilla\n      Class08 <--> C2: Cool label\n      class Class10 {\n        &lt;&lt;service&gt;&gt;\n        int id\n        test()\n      }\n      `, {});\n    cy.get('svg');\n  });","file":"integration/rendering/classDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"5: should render a simple class diagram with abstract method","suites":["Class diagram"],"updatePoint":{"line":100,"column":66,"index":2855},"line":100,"code":"  it('5: should render a simple class diagram with abstract method', () => {\n    imgSnapshotTest(`\n    classDiagram\n      Class01 <|-- AveryLongClass : Cool\n      Class01 : someMethod()*\n      `, {});\n    cy.get('svg');\n  });","file":"integration/rendering/classDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"6: should render a simple class diagram with static method","suites":["Class diagram"],"updatePoint":{"line":108,"column":64,"index":3079},"line":108,"code":"  it('6: should render a simple class diagram with static method', () => {\n    imgSnapshotTest(`\n    classDiagram\n      Class01 <|-- AveryLongClass : Cool\n      Class01 : someMethod()$\n      `, {});\n    cy.get('svg');\n  });","file":"integration/rendering/classDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"7: should render a simple class diagram with Generic class","suites":["Class diagram"],"updatePoint":{"line":116,"column":64,"index":3303},"line":116,"code":"  it('7: should render a simple class diagram with Generic class', () => {\n    imgSnapshotTest(`\n    classDiagram\n    class Class01~T~\n      Class01 : size()\n      Class01 : int chimp\n      Class01 : int gorilla\n      Class08 <--> C2: Cool label\n      class Class10~T~ {\n        &lt;&lt;service&gt;&gt;\n        int id\n        test()\n      }\n      `, {});\n    cy.get('svg');\n  });","file":"integration/rendering/classDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"8: should render a simple class diagram with Generic class and relations","suites":["Class diagram"],"updatePoint":{"line":132,"column":78,"index":3697},"line":132,"code":"  it('8: should render a simple class diagram with Generic class and relations', () => {\n    imgSnapshotTest(`\n    classDiagram\n    Class01~T~ <|-- AveryLongClass : Cool\n    Class03~T~ *-- Class04~T~\n      Class01 : size()\n      Class01 : int chimp\n      Class01 : int gorilla\n      Class08 <--> C2: Cool label\n      class Class10~T~ {\n        &lt;&lt;service&gt;&gt;\n        int id\n        test()\n      }\n      `, {});\n    cy.get('svg');\n  });","file":"integration/rendering/classDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"9: should render a simple class diagram with clickable link","suites":["Class diagram"],"updatePoint":{"line":149,"column":65,"index":4129},"line":149,"code":"  it('9: should render a simple class diagram with clickable link', () => {\n    imgSnapshotTest(`\n    classDiagram\n    Class01~T~ <|-- AveryLongClass : Cool\n    Class03~T~ *-- Class04~T~\n      Class01 : size()\n      Class01 : int chimp\n      Class01 : int gorilla\n      Class08 <--> C2: Cool label\n      class Class10~T~ {\n        &lt;&lt;service&gt;&gt;\n        int id\n        test()\n      }\n      link Class01 \"google.com\" \"A Tooltip\"\n      `, {});\n    cy.get('svg');\n  });","file":"integration/rendering/classDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"10: should render a simple class diagram with clickable callback","suites":["Class diagram"],"updatePoint":{"line":167,"column":70,"index":4610},"line":167,"code":"  it('10: should render a simple class diagram with clickable callback', () => {\n    imgSnapshotTest(`\n    classDiagram\n    Class01~T~ <|-- AveryLongClass : Cool\n    Class03~T~ *-- Class04~T~\n      Class01 : size()\n      Class01 : int chimp\n      Class01 : int gorilla\n      Class08 <--> C2: Cool label\n      class Class10~T~ {\n        &lt;&lt;service&gt;&gt;\n        int id\n        test()\n      }\n      callback Class01 \"functionCall\" \"A Tooltip\"\n      `, {});\n    cy.get('svg');\n  });","file":"integration/rendering/classDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"11: should render a simple class diagram with return type on method","suites":["Class diagram"],"updatePoint":{"line":185,"column":73,"index":5100},"line":185,"code":"  it('11: should render a simple class diagram with return type on method', () => {\n    imgSnapshotTest(`\n    classDiagram\n      class Class10~T~ {\n        int[] id\n        test(int[] ids) bool\n        testArray() bool[]\n      }\n      `, {});\n    cy.get('svg');\n  });","file":"integration/rendering/classDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"12: should render a simple class diagram with generic types","suites":["Class diagram"],"updatePoint":{"line":196,"column":65,"index":5360},"line":196,"code":"  it('12: should render a simple class diagram with generic types', () => {\n    imgSnapshotTest(`\n    classDiagram\n      class Class10~T~ {\n        int[] id\n        List~int~ ids\n        test(List~int~ ids) List~bool~\n        testArray() bool[]\n      }\n      `, {});\n    cy.get('svg');\n  });","file":"integration/rendering/classDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"13: should render a simple class diagram with css classes applied","suites":["Class diagram"],"updatePoint":{"line":208,"column":71,"index":5658},"line":208,"code":"  it('13: should render a simple class diagram with css classes applied', () => {\n    imgSnapshotTest(`\n    classDiagram\n      class Class10 {\n        int[] id\n        List~int~ ids\n        test(List~int~ ids) List~bool~\n        testArray() bool[]\n      }\n\n      class Class10:::exClass2\n      `, {});\n    cy.get('svg');\n  });","file":"integration/rendering/classDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"14: should render a simple class diagram with css classes applied directly","suites":["Class diagram"],"updatePoint":{"line":222,"column":80,"index":5994},"line":222,"code":"  it('14: should render a simple class diagram with css classes applied directly', () => {\n    imgSnapshotTest(`\n    classDiagram\n      class Class10:::exClass2 {\n        int[] id\n        List~int~ ids\n        test(List~int~ ids) List~bool~\n        testArray() bool[]\n      }\n      `, {});\n    cy.get('svg');\n  });","file":"integration/rendering/classDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"15: should render a simple class diagram with css classes applied two multiple classes","suites":["Class diagram"],"updatePoint":{"line":234,"column":92,"index":6321},"line":234,"code":"  it('15: should render a simple class diagram with css classes applied two multiple classes', () => {\n    imgSnapshotTest(`\n    classDiagram\n      class Class10\n      class Class20\n\n      cssClass \"Class10, Class20\" exClass2\n      class Class20:::exClass2\n      `, {});\n    cy.get('svg');\n  });","file":"integration/rendering/classDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"16: should render multiple class diagrams","suites":["Class diagram"],"updatePoint":{"line":245,"column":47,"index":6572},"line":245,"code":"  it('16: should render multiple class diagrams', () => {\n    imgSnapshotTest([`\n    classDiagram\n      Class01 \"1\" <|--|> \"*\" AveryLongClass : Cool\n      &lt;&lt;interface&gt;&gt; Class01\n      Class03 \"1\" *-- \"*\" Class04\n      Class05 \"1\" o-- \"many\" Class06\n      Class07 \"1\" .. \"*\" Class08\n      Class09 \"1\" --> \"*\" C2 : Where am i?\n      Class09 \"*\" --* \"*\" C3\n      Class09 \"1\" --|> \"1\" Class07\n      Class07  : equals()\n      Class07  : Object[] elementData\n      Class01  : size()\n      Class01  : int chimp\n      Class01  : int gorilla\n      Class08 \"1\" <--> \"*\" C2: Cool label\n      class Class10 {\n        &lt;&lt;service&gt;&gt;\n        int id\n        test()\n      }\n      `, `\n    classDiagram\n      Class01 \"1\" <|--|> \"*\" AveryLongClass : Cool\n      &lt;&lt;interface&gt;&gt; Class01\n      Class03 \"1\" *-- \"*\" Class04\n      Class05 \"1\" o-- \"many\" Class06\n      Class07 \"1\" .. \"*\" Class08\n      Class09 \"1\" --> \"*\" C2 : Where am i?\n      Class09 \"*\" --* \"*\" C3\n      Class09 \"1\" --|> \"1\" Class07\n      Class07  : equals()\n      Class07  : Object[] elementData\n      Class01  : size()\n      Class01  : int chimp\n      Class01  : int gorilla\n      Class08 \"1\" <--> \"*\" C2: Cool label\n      class Class10 {\n        &lt;&lt;service&gt;&gt;\n        int id\n        test()\n      }\n      `], {});\n    cy.get('svg');\n  });","file":"integration/rendering/classDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"19: should render a simple class diagram with notes","suites":["Class diagram"],"updatePoint":{"line":346,"column":57,"index":9944},"line":346,"code":"  it('19: should render a simple class diagram with notes', () => {\n    imgSnapshotTest(`\n    classDiagram\n      note \"I love this diagram!\\nDo you love it?\"\n      class Class10 {\n        int id\n        size()\n      }\n      note for Class10 \"Cool class\\nI said it's very cool class!\"\n      `, {\n      logLevel: 1\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/classDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"No config - use default","suites":["Configuration and directives - nodes should be light blue"],"updatePoint":{"line":3,"column":29,"index":165},"line":3,"code":"  it('No config - use default', () => {\n    imgSnapshotTest(`\n      graph TD\n          A(Default) --> B[/Another/]\n          A --> C[End]\n          subgraph section\n            B\n            C\n          end\n        `, {});\n    cy.get('svg');\n  });","file":"integration/rendering/conf-and-directives.spec.js","skipped":false,"dir":"cypress"},{"name":"Settings from initialize - nodes should be green","suites":["Configuration and directives - nodes should be light blue"],"updatePoint":{"line":15,"column":54,"index":438},"line":15,"code":"  it('Settings from initialize - nodes should be green', () => {\n    imgSnapshotTest(`\ngraph TD\n          A(Forest) --> B[/Another/]\n          A --> C[End]\n          subgraph section\n            B\n            C\n          end          `, {\n      theme: 'forest'\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/conf-and-directives.spec.js","skipped":false,"dir":"cypress"},{"name":"Settings from initialize overriding themeVariable - nodes should be red","suites":["Configuration and directives - nodes should be light blue"],"updatePoint":{"line":28,"column":77,"index":755},"line":28,"code":"  it('Settings from initialize overriding themeVariable - nodes should be red', () => {\n    imgSnapshotTest(`\n\n\n        %%{init: { 'theme': 'base', 'themeVariables':{ 'primaryColor': '#ff0000'}}}%%\ngraph TD\n          A(Start) --> B[/Another/]\n          A[/Another/] --> C[End]\n          subgraph section\n            B\n            C\n          end\n        `, {\n      theme: 'base',\n      themeVariables: {\n        primaryColor: '#ff0000'\n      },\n      logLevel: 0\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/conf-and-directives.spec.js","skipped":false,"dir":"cypress"},{"name":"Settings from directive - nodes should be grey","suites":["Configuration and directives - nodes should be light blue"],"updatePoint":{"line":49,"column":52,"index":1226},"line":49,"code":"  it('Settings from directive - nodes should be grey', () => {\n    imgSnapshotTest(`\n        %%{init: { 'logLevel': 0, 'theme': 'neutral'} }%%\ngraph TD\n          A(Start) --> B[/Another/]\n          A[/Another/] --> C[End]\n          subgraph section\n            B\n            C\n          end\n        `, {});\n    cy.get('svg');\n  });","file":"integration/rendering/conf-and-directives.spec.js","skipped":false,"dir":"cypress"},{"name":"Settings from directive overriding theme variable - nodes should be red","suites":["Configuration and directives - nodes should be light blue"],"updatePoint":{"line":62,"column":77,"index":1583},"line":62,"code":"  it('Settings from directive overriding theme variable - nodes should be red', () => {\n    imgSnapshotTest(`\n          %%{init: {'theme': 'base', 'themeVariables':{ 'primaryColor': '#ff0000'}}}%%\ngraph TD\n          A(Start) --> B[/Another/]\n          A[/Another/] --> C[End]\n          subgraph section\n            B\n            C\n          end\n        `, {});\n    cy.get('svg');\n  });","file":"integration/rendering/conf-and-directives.spec.js","skipped":false,"dir":"cypress"},{"name":"Settings from initialize and directive - nodes should be grey","suites":["Configuration and directives - nodes should be light blue"],"updatePoint":{"line":75,"column":67,"index":1959},"line":75,"code":"  it('Settings from initialize and directive - nodes should be grey', () => {\n    imgSnapshotTest(`\n      %%{init: { 'logLevel': 0, 'theme': 'neutral'} }%%\ngraph TD\n          A(Start) --> B[/Another/]\n          A[/Another/] --> C[End]\n          subgraph section\n            B\n            C\n          end\n        `, {\n      theme: 'forest'\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/conf-and-directives.spec.js","skipped":false,"dir":"cypress"},{"name":"Theme from initialize, directive overriding theme variable - nodes should be red","suites":["Configuration and directives - nodes should be light blue"],"updatePoint":{"line":90,"column":86,"index":2350},"line":90,"code":"  it('Theme from initialize, directive overriding theme variable - nodes should be red', () => {\n    imgSnapshotTest(`\n      %%{init: {'theme': 'base', 'themeVariables':{ 'primaryColor': '#ff0000'}}}%%\ngraph TD\n          A(Start) --> B[/Another/]\n          A[/Another/] --> C[End]\n          subgraph section\n            B\n            C\n          end\n        `, {\n      theme: 'base'\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/conf-and-directives.spec.js","skipped":false,"dir":"cypress"},{"name":"Theme variable from initialize, theme from directive - nodes should be red","suites":["Configuration and directives - nodes should be light blue"],"updatePoint":{"line":105,"column":80,"index":2760},"line":105,"code":"  it('Theme variable from initialize, theme from directive - nodes should be red', () => {\n    imgSnapshotTest(`\n      %%{init: { 'logLevel': 0, 'theme': 'base'} }%%\ngraph TD\n          A(Start) --> B[/Another/]\n          A[/Another/] --> C[End]\n          subgraph section\n            B\n            C\n          end\n        `, {\n      themeVariables: {\n        primaryColor: '#ff0000'\n      }\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/conf-and-directives.spec.js","skipped":false,"dir":"cypress"},{"name":"diagrams should not taint later diagrams","suites":["Configuration and directives - nodes should be light blue","when rendering several diagrams"],"updatePoint":{"line":123,"column":48,"index":3206},"line":123,"code":"    it('diagrams should not taint later diagrams', () => {\n      const url = 'http://localhost:9000/theme-directives.html';\n      cy.visit(url);\n      cy.get('svg');\n      cy.matchImageSnapshot('conf-and-directives.spec-when-rendering-several-diagrams-diagram-1');\n    });","file":"integration/rendering/conf-and-directives.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a state with states in it","suites":["Current diagram"],"updatePoint":{"line":3,"column":45,"index":136},"line":3,"code":"  it('should render a state with states in it', () => {\n    imgSnapshotTest(`\n      stateDiagram\n      state PersonalizedCockpit {\n        Other\n        state  Parent {\n          C\n        }\n    }\n    `, {\n      logLevel: 0\n    });\n  });","file":"integration/rendering/current.spec.js","skipped":false,"dir":"cypress"},{"name":"34: testing the label width in percy","suites":["Flowchart"],"updatePoint":{"line":3,"column":42,"index":127},"line":3,"code":"  it('34: testing the label width in percy', () => {\n    imgSnapshotTest(`graph TD\n      A[Christmas]\n      `, {\n      theme: 'forest',\n      fontFamily: '\"Noto Sans SC\", sans-serif'\n    });\n  });","file":"integration/rendering/debug.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a simple ER diagram","suites":["Entity Relationship Diagram"],"updatePoint":{"line":3,"column":39,"index":155},"line":3,"code":"  it('should render a simple ER diagram', () => {\n    imgSnapshotTest(`\n    erDiagram\n        CUSTOMER ||--o{ ORDER : places\n        ORDER ||--|{ LINE-ITEM : contains\n      `, {\n      logLevel: 1\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/erDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render an ER diagram with a recursive relationship","suites":["Entity Relationship Diagram"],"updatePoint":{"line":13,"column":63,"index":408},"line":13,"code":"  it('should render an ER diagram with a recursive relationship', () => {\n    imgSnapshotTest(`\n    erDiagram\n        CUSTOMER ||..o{ CUSTOMER : refers\n        CUSTOMER ||--o{ ORDER : places\n        ORDER ||--|{ LINE-ITEM : contains\n      `, {\n      logLevel: 1\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/erDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render an ER diagram with multiple relationships between the same two entities","suites":["Entity Relationship Diagram"],"updatePoint":{"line":24,"column":91,"index":731},"line":24,"code":"  it('should render an ER diagram with multiple relationships between the same two entities', () => {\n    imgSnapshotTest(`\n    erDiagram\n        CUSTOMER ||--|{ ADDRESS : \"invoiced at\"\n        CUSTOMER ||--|{ ADDRESS : \"receives goods at\"\n      `, {\n      logLevel: 1\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/erDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a cyclical ER diagram","suites":["Entity Relationship Diagram"],"updatePoint":{"line":34,"column":41,"index":983},"line":34,"code":"  it('should render a cyclical ER diagram', () => {\n    imgSnapshotTest(`\n    erDiagram\n        A ||--|{ B : likes\n        B ||--|{ C : likes\n        C ||--|{ A : likes\n      `, {\n      logLevel: 1\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/erDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a not-so-simple ER diagram","suites":["Entity Relationship Diagram"],"updatePoint":{"line":45,"column":46,"index":1219},"line":45,"code":"  it('should render a not-so-simple ER diagram', () => {\n    imgSnapshotTest(`\n    erDiagram\n        CUSTOMER }|..|{ DELIVERY-ADDRESS : has\n        CUSTOMER ||--o{ ORDER : places\n        CUSTOMER ||--o{ INVOICE : \"liable for\"\n        DELIVERY-ADDRESS ||--o{ ORDER : receives\n        INVOICE ||--|{ ORDER : covers\n        ORDER ||--|{ ORDER-ITEM : includes\n        PRODUCT-CATEGORY ||--|{ PRODUCT : contains\n        PRODUCT ||--o{ ORDER-ITEM : \"ordered in\"\n      `, {\n      logLevel: 1\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/erDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render multiple ER diagrams","suites":["Entity Relationship Diagram"],"updatePoint":{"line":61,"column":40,"index":1731},"line":61,"code":"  it('should render multiple ER diagrams', () => {\n    imgSnapshotTest([`\n    erDiagram\n        CUSTOMER ||--o{ ORDER : places\n        ORDER ||--|{ LINE-ITEM : contains\n      `, `\n    erDiagram\n        CUSTOMER ||--o{ ORDER : places\n        ORDER ||--|{ LINE-ITEM : contains\n      `], {\n      logLevel: 1\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/erDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render an ER diagram with blank or empty labels","suites":["Entity Relationship Diagram"],"updatePoint":{"line":75,"column":60,"index":2089},"line":75,"code":"  it('should render an ER diagram with blank or empty labels', () => {\n    imgSnapshotTest(`\n    erDiagram\n        BOOK }|..|{ AUTHOR : \"\"\n        BOOK }|..|{ GENRE : \" \"\n        AUTHOR }|..|{ GENRE : \"  \"\n      `, {\n      logLevel: 1\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/erDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render an ER diagrams when useMaxWidth is true (default)","suites":["Entity Relationship Diagram"],"updatePoint":{"line":86,"column":69,"index":2366},"line":86,"code":"  it('should render an ER diagrams when useMaxWidth is true (default)', () => {\n    renderGraph(`\n    erDiagram\n        CUSTOMER ||--o{ ORDER : places\n        ORDER ||--|{ LINE-ITEM : contains\n      `, {\n      er: {\n        useMaxWidth: true\n      }\n    });\n    cy.get('svg').should(svg => {\n      expect(svg).to.have.attr('width', '100%');\n      // expect(svg).to.have.attr('height', '465');\n      const style = svg.attr('style');\n      expect(style).to.match(/^max-width: [\\d.]+px;$/);\n      const maxWidthValue = parseFloat(style.match(/[\\d.]+/g).join(''));\n      // use within because the absolute value can be slightly different depending on the environment ±5%\n      expect(maxWidthValue).to.be.within(140 * 0.95, 140 * 1.05);\n    });\n  });","file":"integration/rendering/erDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render an ER when useMaxWidth is false","suites":["Entity Relationship Diagram"],"updatePoint":{"line":106,"column":51,"index":3095},"line":106,"code":"  it('should render an ER when useMaxWidth is false', () => {\n    renderGraph(`\n    erDiagram\n        CUSTOMER ||--o{ ORDER : places\n        ORDER ||--|{ LINE-ITEM : contains\n      `, {\n      er: {\n        useMaxWidth: false\n      }\n    });\n    cy.get('svg').should(svg => {\n      const width = parseFloat(svg.attr('width'));\n      // use within because the absolute value can be slightly different depending on the environment ±5%\n      expect(width).to.be.within(140 * 0.95, 140 * 1.05);\n      // expect(svg).to.have.attr('height', '465');\n      expect(svg).to.not.have.attr('style');\n    });\n  });","file":"integration/rendering/erDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render entities that have no relationships","suites":["Entity Relationship Diagram"],"updatePoint":{"line":124,"column":55,"index":3700},"line":124,"code":"  it('should render entities that have no relationships', () => {\n    renderGraph(`\n    erDiagram\n        DEAD_PARROT\n        HERMIT\n        RECLUSE\n        SOCIALITE }o--o{ SOCIALITE : \"interacts with\"\n        RECLUSE }o--o{ SOCIALITE : avoids\n      `, {\n      er: {\n        useMaxWidth: false\n      }\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/erDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render entities with and without attributes","suites":["Entity Relationship Diagram"],"updatePoint":{"line":139,"column":56,"index":4037},"line":139,"code":"  it('should render entities with and without attributes', () => {\n    renderGraph(`\n    erDiagram\n        BOOK { string title }\n        AUTHOR }|..|{ BOOK : writes\n        BOOK { float price }\n      `, {\n      logLevel: 1\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/erDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render entities with generic and array attributes","suites":["Entity Relationship Diagram"],"updatePoint":{"line":150,"column":62,"index":4299},"line":150,"code":"  it('should render entities with generic and array attributes', () => {\n    renderGraph(`\n    erDiagram\n        BOOK {\n          string title\n          string[] authors\n          type~T~ type\n        }\n      `, {\n      logLevel: 1\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/erDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render entities and attributes with big and small entity names","suites":["Entity Relationship Diagram"],"updatePoint":{"line":163,"column":75,"index":4577},"line":163,"code":"  it('should render entities and attributes with big and small entity names', () => {\n    renderGraph(`\n    erDiagram\n        PRIVATE_FINANCIAL_INSTITUTION {\n          string name\n          int    turnover\n        }\n        PRIVATE_FINANCIAL_INSTITUTION ||..|{ EMPLOYEE : employs\n        EMPLOYEE { bool officer_of_firm }\n      `, {\n      logLevel: 1\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/erDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render entities with keys","suites":["Entity Relationship Diagram"],"updatePoint":{"line":177,"column":38,"index":4924},"line":177,"code":"  it('should render entities with keys', () => {\n    renderGraph(`\n    erDiagram\n      AUTHOR_WITH_LONG_ENTITY_NAME {\n        string name PK\n      }\n      AUTHOR_WITH_LONG_ENTITY_NAME }|..|{ BOOK : writes\n      BOOK {\n          float price\n          string author FK\n          string title PK\n        }\n      `, {\n      logLevel: 1\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/erDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render entities with comments","suites":["Entity Relationship Diagram"],"updatePoint":{"line":194,"column":42,"index":5293},"line":194,"code":"  it('should render entities with comments', () => {\n    renderGraph(`\n    erDiagram\n      AUTHOR_WITH_LONG_ENTITY_NAME {\n        string name \"comment\"\n      }\n      AUTHOR_WITH_LONG_ENTITY_NAME }|..|{ BOOK : writes\n      BOOK {\n          string author\n          string title \"author comment\"\n          float price \"price comment\"\n        }\n      `, {\n      logLevel: 1\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/erDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render entities with keys and comments","suites":["Entity Relationship Diagram"],"updatePoint":{"line":211,"column":51,"index":5705},"line":211,"code":"  it('should render entities with keys and comments', () => {\n    renderGraph(`\n    erDiagram\n      AUTHOR_WITH_LONG_ENTITY_NAME {\n        string name PK \"comment\"\n      }\n      AUTHOR_WITH_LONG_ENTITY_NAME }|..|{ BOOK : writes\n      BOOK {\n          string description\n          float price \"price comment\"\n          string title PK \"title comment\"\n          string author FK\n        }\n      `, {\n      logLevel: 1\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/erDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render entities with aliases","suites":["Entity Relationship Diagram"],"updatePoint":{"line":229,"column":41,"index":6144},"line":229,"code":"  it('should render entities with aliases', () => {\n    renderGraph(`\n    erDiagram\n      T1 one or zero to one or more T2 : test\n      T2 one or many optionally to zero or one T3 : test\n      T3 zero or more to zero or many T4 : test\n      T4 many(0) to many(1) T5 : test\n      T5 many optionally to one T6 : test\n      T6 only one optionally to only one T1 : test\n      T4 0+ to 1+ T6 : test\n      T1 1 to 1 T3 : test\n      `, {\n      logLevel: 1\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/erDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"1433: should render a simple ER diagram with a title","suites":["Entity Relationship Diagram"],"updatePoint":{"line":245,"column":58,"index":6643},"line":245,"code":"  it('1433: should render a simple ER diagram with a title', () => {\n    imgSnapshotTest(`---\ntitle: simple ER diagram\n---\nerDiagram\nCUSTOMER ||--o{ ORDER : places\nORDER ||--|{ LINE-ITEM : contains\n`, {});\n  });","file":"integration/rendering/erDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"1: should render a simple flowchart","suites":["Flowchart v2"],"updatePoint":{"line":3,"column":41,"index":142},"line":3,"code":"  it('1: should render a simple flowchart', () => {\n    imgSnapshotTest(`flowchart TD\n      A[Christmas] -->|Get money| B(Go shopping)\n      B --> C{Let me think}\n      C -->|One| D[Laptop]\n      C -->|Two| E[iPhone]\n      C -->|Three| F[fa:fa-car Car]\n      `, {});\n  });","file":"integration/rendering/flowchart-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"2: should render a simple flowchart with diagramPadding set to 0","suites":["Flowchart v2"],"updatePoint":{"line":12,"column":70,"index":444},"line":12,"code":"  it('2: should render a simple flowchart with diagramPadding set to 0', () => {\n    imgSnapshotTest(`flowchart TD\n      A[Christmas] -->|Get money| B(Go shopping)\n      B --> C{Let me think}\n      %% this is a comment\n      C -->|One| D[Laptop]\n      C -->|Two| E[iPhone]\n      C -->|Three| F[fa:fa-car Car]\n      `, {\n      flowchart: {\n        diagramPadding: 0\n      }\n    });\n  });","file":"integration/rendering/flowchart-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"3: a link with correct arrowhead to a subgraph","suites":["Flowchart v2"],"updatePoint":{"line":26,"column":52,"index":813},"line":26,"code":"  it('3: a link with correct arrowhead to a subgraph', () => {\n    imgSnapshotTest(`flowchart TD\n        P1\n        P1 -->P1.5\n        subgraph P1.5\n          P2\n          P2.5(( A ))\n          P3\n        end\n        P2 --> P4\n        P3 --> P6\n        P1.5 --> P5\n      `, {});\n  });","file":"integration/rendering/flowchart-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"4: Length of edges","suites":["Flowchart v2"],"updatePoint":{"line":40,"column":24,"index":1070},"line":40,"code":"  it('4: Length of edges', () => {\n    imgSnapshotTest(`flowchart TD\n      L1 --- L2\n      L2 --- C\n      M1 ---> C\n      R1 .-> R2\n      R2 <.-> C\n      C -->|Label 1| E1\n      C <-- Label 2 ---> E2\n      C ----> E3\n      C <-...-> E4\n      C ======> E5\n      `, {});\n  });","file":"integration/rendering/flowchart-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"5: should render escaped without html labels","suites":["Flowchart v2"],"updatePoint":{"line":54,"column":50,"index":1371},"line":54,"code":"  it('5: should render escaped without html labels', () => {\n    imgSnapshotTest(`flowchart TD\n        a[\"<strong>Haiya</strong>\"]---->b\n      `, {\n      htmlLabels: false,\n      flowchart: {\n        htmlLabels: false\n      }\n    });\n  });","file":"integration/rendering/flowchart-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"6: should render non-escaped with html labels","suites":["Flowchart v2"],"updatePoint":{"line":64,"column":51,"index":1612},"line":64,"code":"  it('6: should render non-escaped with html labels', () => {\n    imgSnapshotTest(`flowchart TD\n        a[\"<strong>Haiya</strong>\"]===>b\n      `, {\n      htmlLabels: true,\n      flowchart: {\n        htmlLabels: true\n      },\n      securityLevel: 'loose'\n    });\n  });","file":"integration/rendering/flowchart-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"7: should render a flowchart when useMaxWidth is true (default)","suites":["Flowchart v2"],"updatePoint":{"line":75,"column":69,"index":1898},"line":75,"code":"  it('7: should render a flowchart when useMaxWidth is true (default)', () => {\n    renderGraph(`flowchart TD\n      A[Christmas] -->|Get money| B(Go shopping)\n      B --> C{Let me think}\n      C -->|One| D[Laptop]\n      C -->|Two| E[iPhone]\n      C -->|Three| F[fa:fa-car Car]\n      `, {\n      flowchart: {\n        useMaxWidth: true\n      }\n    });\n    cy.get('svg').should(svg => {\n      expect(svg).to.have.attr('width', '100%');\n      // expect(svg).to.have.attr('height');\n      // use within because the absolute value can be slightly different depending on the environment ±5%\n      // const height = parseFloat(svg.attr('height'));\n      // expect(height).to.be.within(446 * 0.95, 446 * 1.05);\n      const style = svg.attr('style');\n      expect(style).to.match(/^max-width: [\\d.]+px;$/);\n      const maxWidthValue = parseFloat(style.match(/[\\d.]+/g).join(''));\n      expect(maxWidthValue).to.be.within(290 * 0.95 - 1, 290 * 1.05);\n    });\n  });","file":"integration/rendering/flowchart-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"8: should render a flowchart when useMaxWidth is false","suites":["Flowchart v2"],"updatePoint":{"line":99,"column":60,"index":2842},"line":99,"code":"  it('8: should render a flowchart when useMaxWidth is false', () => {\n    renderGraph(`flowchart TD\n      A[Christmas] -->|Get money| B(Go shopping)\n      B --> C{Let me think}\n      C -->|One| D[Laptop]\n      C -->|Two| E[iPhone]\n      C -->|Three| F[fa:fa-car Car]\n      `, {\n      flowchart: {\n        useMaxWidth: false\n      }\n    });\n    cy.get('svg').should(svg => {\n      // const height = parseFloat(svg.attr('height'));\n      const width = parseFloat(svg.attr('width'));\n      // use within because the absolute value can be slightly different depending on the environment ±5%\n      // expect(height).to.be.within(446 * 0.95, 446 * 1.05);\n      expect(width).to.be.within(290 * 0.95 - 1, 290 * 1.05);\n      expect(svg).to.not.have.attr('style');\n    });\n  });","file":"integration/rendering/flowchart-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"V2 - 16: Render Stadium shape","suites":["Flowchart v2"],"updatePoint":{"line":120,"column":35,"index":3588},"line":120,"code":"  it('V2 - 16: Render Stadium shape', () => {\n    imgSnapshotTest(` flowchart TD\n      A([stadium shape test])\n      A -->|Get money| B([Go shopping])\n      B --> C([Let me think...<br />Do I want something for work,<br />something to spend every free second with,<br />or something to get around?])\n      C -->|One| D([Laptop])\n      C -->|Two| E([iPhone])\n      C -->|Three| F([Car<br/>wroom wroom])\n      click A \"index.html#link-clicked\" \"link test\"\n      click B testClick \"click test\"\n      classDef someclass fill:#f96;\n      class A someclass;\n      class C someclass;\n      `, {\n      flowchart: {\n        htmlLabels: false\n      },\n      fontFamily: 'courier'\n    });\n  });","file":"integration/rendering/flowchart-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"50: handle nested subgraphs in reverse order","suites":["Flowchart v2"],"updatePoint":{"line":140,"column":50,"index":4287},"line":140,"code":"  it('50: handle nested subgraphs in reverse order', () => {\n    imgSnapshotTest(`flowchart LR\n        a -->b\n        subgraph A\n        B\n        end\n        subgraph B\n        b\n        end\n      `, {\n      htmlLabels: true,\n      flowchart: {\n        htmlLabels: true\n      },\n      securityLevel: 'loose'\n    });\n  });","file":"integration/rendering/flowchart-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"51: handle nested subgraphs in reverse order","suites":["Flowchart v2"],"updatePoint":{"line":157,"column":50,"index":4610},"line":157,"code":"  it('51: handle nested subgraphs in reverse order', () => {\n    imgSnapshotTest(`flowchart LR\n        a -->b\n        subgraph A\n        B\n        end\n        subgraph B\n        b\n        end\n      `, {\n      htmlLabels: true,\n      flowchart: {\n        htmlLabels: true\n      },\n      securityLevel: 'loose'\n    });\n  });","file":"integration/rendering/flowchart-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"52: handle nested subgraphs in several levels","suites":["Flowchart v2"],"updatePoint":{"line":174,"column":51,"index":4934},"line":174,"code":"  it('52: handle nested subgraphs in several levels', () => {\n    imgSnapshotTest(`flowchart TB\n    b-->B\n    a-->c\n    subgraph O\n      A\n    end\n    subgraph B\n      c\n    end\n    subgraph A\n        a\n        b\n        B\n    end\n      `, {\n      htmlLabels: true,\n      flowchart: {\n        htmlLabels: true\n      },\n      securityLevel: 'loose'\n    });\n  });","file":"integration/rendering/flowchart-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"53: handle nested subgraphs with edges in and out","suites":["Flowchart v2"],"updatePoint":{"line":197,"column":55,"index":5300},"line":197,"code":"  it('53: handle nested subgraphs with edges in and out', () => {\n    imgSnapshotTest(`flowchart TB\n  internet\n  nat\n  routeur\n  lb1\n  lb2\n  compute1\n  compute2\n  subgraph project\n  routeur\n  nat\n    subgraph subnet1\n      compute1\n      lb1\n    end\n    subgraph subnet2\n      compute2\n      lb2\n    end\n  end\n  internet --> routeur\n  routeur --> subnet1 & subnet2\n  subnet1 & subnet2 --> nat --> internet\n      `, {\n      htmlLabels: true,\n      flowchart: {\n        htmlLabels: true\n      },\n      securityLevel: 'loose'\n    });\n  });","file":"integration/rendering/flowchart-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"54: handle nested subgraphs with outgoing links","suites":["Flowchart v2"],"updatePoint":{"line":229,"column":53,"index":5835},"line":229,"code":"  it('54: handle nested subgraphs with outgoing links', () => {\n    imgSnapshotTest(`flowchart TD\n  subgraph  main\n    subgraph subcontainer\n      subcontainer-child\n    end\n     subcontainer-child--> subcontainer-sibling\n  end\n      `, {\n      htmlLabels: true,\n      flowchart: {\n        htmlLabels: true\n      },\n      securityLevel: 'loose'\n    });\n  });","file":"integration/rendering/flowchart-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"55: handle nested subgraphs with outgoing links 2","suites":["Flowchart v2"],"updatePoint":{"line":245,"column":55,"index":6196},"line":245,"code":"  it('55: handle nested subgraphs with outgoing links 2', () => {\n    imgSnapshotTest(`flowchart TD\n\nsubgraph one[One]\n    subgraph sub_one[Sub One]\n        _sub_one\n    end\n    subgraph sub_two[Sub Two]\n        _sub_two\n    end\n    _one\nend\n\n%% here, either the first or the second one\nsub_one --> sub_two\n_one --> b\n      `, {\n      htmlLabels: true,\n      flowchart: {\n        htmlLabels: true\n      },\n      securityLevel: 'loose'\n    });\n  });","file":"integration/rendering/flowchart-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"56: handle nested subgraphs with outgoing links 3","suites":["Flowchart v2"],"updatePoint":{"line":269,"column":55,"index":6645},"line":269,"code":"  it('56: handle nested subgraphs with outgoing links 3', () => {\n    imgSnapshotTest(`flowchart TB\n  subgraph container_Beta\n    process_C-->Process_D\n  end\n  subgraph container_Alpha\n    process_A-->process_B\n    process_A-->|messages|process_C\n    end\n    process_B-->|via_AWSBatch|container_Beta\n      `, {\n      htmlLabels: true,\n      flowchart: {\n        htmlLabels: true\n      },\n      securityLevel: 'loose'\n    });\n  });","file":"integration/rendering/flowchart-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"57: handle nested subgraphs with outgoing links 4","suites":["Flowchart v2"],"updatePoint":{"line":287,"column":55,"index":7076},"line":287,"code":"  it('57: handle nested subgraphs with outgoing links 4', () => {\n    imgSnapshotTest(`flowchart LR\nsubgraph A\na -->b\nend\nsubgraph B\nb\nend\n      `, {\n      htmlLabels: true,\n      flowchart: {\n        htmlLabels: true\n      },\n      securityLevel: 'loose'\n    });\n  });","file":"integration/rendering/flowchart-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"57: handle nested subgraphs with outgoing links 2","suites":["Flowchart v2"],"updatePoint":{"line":303,"column":55,"index":7346},"line":303,"code":"  it('57: handle nested subgraphs with outgoing links 2', () => {\n    imgSnapshotTest(`flowchart TB\n    c1-->a2\n    subgraph one\n    a1-->a2\n    end\n    subgraph two\n    b1-->b2\n    end\n    subgraph three\n    c1-->c2\n    end\n    one --> two\n    three --> two\n    two --> c2\n      `, {\n      htmlLabels: true,\n      flowchart: {\n        htmlLabels: true\n      },\n      securityLevel: 'loose'\n    });\n  });","file":"integration/rendering/flowchart-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"57.x: handle nested subgraphs with outgoing links 5","suites":["Flowchart v2"],"updatePoint":{"line":326,"column":57,"index":7753},"line":326,"code":"  it('57.x: handle nested subgraphs with outgoing links 5', () => {\n    imgSnapshotTest(`%% this does not produce the desired result\nflowchart TB\n  subgraph container_Beta\n    process_C-->Process_D\n  end\n  subgraph container_Alpha\n    process_A-->process_B\n    process_B-->|via_AWSBatch|container_Beta\n    process_A-->|messages|process_C\n  end\n      `, {\n      htmlLabels: true,\n      flowchart: {\n        htmlLabels: true\n      },\n      securityLevel: 'loose'\n    });\n  });","file":"integration/rendering/flowchart-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"58: handle styling with style expressions","suites":["Flowchart v2"],"updatePoint":{"line":345,"column":47,"index":8218},"line":345,"code":"  it('58: handle styling with style expressions', () => {\n    imgSnapshotTest(`\n    flowchart LR\n    id1(Start)-->id2(Stop)\n    style id1 fill:#f9f,stroke:#333,stroke-width:4px\n    style id2 fill:#bbf,stroke:#f66,stroke-width:2px,color:#fff,stroke-dasharray: 5 5\n      `, {\n      htmlLabels: true,\n      flowchart: {\n        htmlLabels: true\n      },\n      securityLevel: 'loose'\n    });\n  });","file":"integration/rendering/flowchart-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"59: handle styling of subgraphs and links","suites":["Flowchart v2"],"updatePoint":{"line":359,"column":47,"index":8612},"line":359,"code":"  it('59: handle styling of subgraphs and links', () => {\n    imgSnapshotTest(`\nflowchart TD\n  A[Christmas] ==> D\n  A[Christmas] -->|Get money| B(Go shopping)\n  A[Christmas] ==> C\n  subgraph T [\"Test\"]\n    A\n    B\n    C\n  end\n\n  classDef Test fill:#F84E68,stroke:#333,color:white;\n  class A,T Test\n  classDef TestSub fill:green;\n  class T TestSub\n  linkStyle 0,1 color:orange, stroke: orange;\n      `, {\n      htmlLabels: true,\n      flowchart: {\n        htmlLabels: true\n      },\n      securityLevel: 'loose'\n    });\n  });","file":"integration/rendering/flowchart-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"60: handle styling for all node shapes - v2","suites":["Flowchart v2"],"updatePoint":{"line":384,"column":49,"index":9138},"line":384,"code":"  it('60: handle styling for all node shapes - v2', () => {\n    imgSnapshotTest(`\n      flowchart LR\n      A[red text] -->|default style| B(blue text)\n      C([red text]) -->|default style| D[[blue text]]\n      E[(red text)] -->|default style| F((blue text))\n      G>red text] -->|default style| H{blue text}\n      I{{red text}} -->|default style| J[/blue text/]\n      K[\\\\ red text\\\\] -->|default style| L[/blue text\\\\]\n      M[\\\\ red text/] -->|default style| N[blue text];\n      O(((red text))) -->|default style| P(((blue text)));\n      linkStyle default color:Sienna;\n      style A stroke:#ff0000,fill:#ffcccc,color:#ff0000;\n      style B stroke:#0000ff,fill:#ccccff,color:#0000ff;\n      style C stroke:#ff0000,fill:#ffcccc,color:#ff0000;\n      style D stroke:#0000ff,fill:#ccccff,color:#0000ff;\n      style E stroke:#ff0000,fill:#ffcccc,color:#ff0000;\n      style F stroke:#0000ff,fill:#ccccff,color:#0000ff;\n      style G stroke:#ff0000,fill:#ffcccc,color:#ff0000;\n      style H stroke:#0000ff,fill:#ccccff,color:#0000ff;\n      style I stroke:#ff0000,fill:#ffcccc,color:#ff0000;\n      style J stroke:#0000ff,fill:#ccccff,color:#0000ff;\n      style K stroke:#ff0000,fill:#ffcccc,color:#ff0000;\n      style L stroke:#0000ff,fill:#ccccff,color:#0000ff;\n      style M stroke:#ff0000,fill:#ffcccc,color:#ff0000;\n      style N stroke:#0000ff,fill:#ccccff,color:#0000ff;\n      style O stroke:#ff0000,fill:#ffcccc,color:#ff0000;\n      style P stroke:#0000ff,fill:#ccccff,color:#0000ff;\n      `, {\n      htmlLabels: true,\n      flowchart: {\n        htmlLabels: true\n      },\n      securityLevel: 'loose',\n      logLevel: 2\n    });\n  });","file":"integration/rendering/flowchart-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"61: fontawesome icons in edge labels","suites":["Flowchart v2"],"updatePoint":{"line":421,"column":42,"index":10766},"line":421,"code":"  it('61: fontawesome icons in edge labels', () => {\n    imgSnapshotTest(`\n      flowchart TD\n        C -->|fa:fa-car Car| F[fa:fa-car Car]\n      `, {\n      htmlLabels: true,\n      flowchart: {\n        htmlLabels: true\n      },\n      securityLevel: 'loose'\n    });\n  });","file":"integration/rendering/flowchart-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"62: should render styled subgraphs","suites":["Flowchart v2"],"updatePoint":{"line":433,"column":40,"index":11035},"line":433,"code":"  it('62: should render styled subgraphs', () => {\n    imgSnapshotTest(`\n      flowchart TB\n      A\n      B\n      subgraph foo[Foo SubGraph]\n        C\n        D\n      end\n      subgraph bar[Bar SubGraph]\n        E\n        F\n      end\n      G\n\n      A-->B\n      B-->C\n      C-->D\n      B-->D\n      D-->E\n      E-->A\n      E-->F\n      F-->D\n      F-->G\n      B-->G\n      G-->D\n\n      style foo fill:#F99,stroke-width:2px,stroke:#F0F,color:darkred\n      style bar fill:#999,stroke-width:10px,stroke:#0F0,color:blue\n      `, {\n      htmlLabels: true,\n      flowchart: {\n        htmlLabels: true\n      },\n      securityLevel: 'loose'\n    });\n  });","file":"integration/rendering/flowchart-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"63: title on subgraphs should be themable","suites":["Flowchart v2"],"updatePoint":{"line":470,"column":47,"index":11685},"line":470,"code":"  it('63: title on subgraphs should be themable', () => {\n    imgSnapshotTest(`\n      %%{init:{\"theme\":\"base\", \"themeVariables\": {\"primaryColor\":\"#411d4e\", \"titleColor\":\"white\", \"darkMode\":true}}}%%\n      flowchart LR\n      subgraph A\n          a --> b\n      end\n      subgraph B\n          i -->f\n      end\n      A --> B\n      `, {\n      htmlLabels: true,\n      flowchart: {\n        htmlLabels: true\n      },\n      securityLevel: 'loose'\n    });\n  });","file":"integration/rendering/flowchart-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"65: text-color from classes","suites":["Flowchart v2"],"updatePoint":{"line":489,"column":33,"index":12123},"line":489,"code":"  it('65: text-color from classes', () => {\n    imgSnapshotTest(`\n      flowchart LR\n        classDef dark fill:#000,stroke:#000,stroke-width:4px,color:#fff\n        Lorem --> Ipsum --> Dolor\n        class Lorem,Dolor dark\n      `, {\n      htmlLabels: true,\n      flowchart: {\n        htmlLabels: true\n      },\n      securityLevel: 'loose'\n    });\n  });","file":"integration/rendering/flowchart-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"66: More nested subgraph cases (TB)","suites":["Flowchart v2"],"updatePoint":{"line":503,"column":41,"index":12484},"line":503,"code":"  it('66: More nested subgraph cases (TB)', () => {\n    imgSnapshotTest(`\nflowchart TB\n    subgraph two\n    b1\n    end\n    subgraph three\n    c2\n    end\n\n    three --> two\n    two --> c2\n\n      `, {\n      htmlLabels: true,\n      flowchart: {\n        htmlLabels: true\n      },\n      securityLevel: 'loose'\n    });\n  });","file":"integration/rendering/flowchart-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"67: More nested subgraph cases (RL)","suites":["Flowchart v2"],"updatePoint":{"line":524,"column":41,"index":12803},"line":524,"code":"  it('67: More nested subgraph cases (RL)', () => {\n    imgSnapshotTest(`\nflowchart RL\n    subgraph two\n    b1\n    end\n    subgraph three\n    c2\n    end\n\n    three --> two\n    two --> c2\n\n      `, {\n      htmlLabels: true,\n      flowchart: {\n        htmlLabels: true\n      },\n      securityLevel: 'loose'\n    });\n  });","file":"integration/rendering/flowchart-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"68: More nested subgraph cases (BT)","suites":["Flowchart v2"],"updatePoint":{"line":545,"column":41,"index":13122},"line":545,"code":"  it('68: More nested subgraph cases (BT)', () => {\n    imgSnapshotTest(`\nflowchart BT\n    subgraph two\n    b1\n    end\n    subgraph three\n    c2\n    end\n\n    three --> two\n    two --> c2\n\n      `, {\n      htmlLabels: true,\n      flowchart: {\n        htmlLabels: true\n      },\n      securityLevel: 'loose'\n    });\n  });","file":"integration/rendering/flowchart-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"69: More nested subgraph cases (LR)","suites":["Flowchart v2"],"updatePoint":{"line":566,"column":41,"index":13441},"line":566,"code":"  it('69: More nested subgraph cases (LR)', () => {\n    imgSnapshotTest(`\nflowchart LR\n    subgraph two\n    b1\n    end\n    subgraph three\n    c2\n    end\n\n    three --> two\n    two --> c2\n\n      `, {\n      htmlLabels: true,\n      flowchart: {\n        htmlLabels: true\n      },\n      securityLevel: 'loose'\n    });\n  });","file":"integration/rendering/flowchart-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"70: Handle nested subgraph cases (TB) link out and link between subgraphs","suites":["Flowchart v2"],"updatePoint":{"line":587,"column":79,"index":13798},"line":587,"code":"  it('70: Handle nested subgraph cases (TB) link out and link between subgraphs', () => {\n    imgSnapshotTest(`\nflowchart TB\n   subgraph S1\n    sub1 -->sub2\n   end\n  subgraph S2\n    sub4\n   end\n   S1 --> S2\n   sub1 --> sub4\n      `, {\n      htmlLabels: true,\n      flowchart: {\n        htmlLabels: true\n      },\n      securityLevel: 'loose'\n    });\n  });","file":"integration/rendering/flowchart-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"71: Handle nested subgraph cases (RL) link out and link between subgraphs","suites":["Flowchart v2"],"updatePoint":{"line":606,"column":79,"index":14153},"line":606,"code":"  it('71: Handle nested subgraph cases (RL) link out and link between subgraphs', () => {\n    imgSnapshotTest(`\nflowchart RL\n   subgraph S1\n    sub1 -->sub2\n   end\n  subgraph S2\n    sub4\n   end\n   S1 --> S2\n   sub1 --> sub4\n      `, {\n      htmlLabels: true,\n      flowchart: {\n        htmlLabels: true\n      },\n      securityLevel: 'loose'\n    });\n  });","file":"integration/rendering/flowchart-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"72: Handle nested subgraph cases (BT) link out and link between subgraphs","suites":["Flowchart v2"],"updatePoint":{"line":625,"column":79,"index":14508},"line":625,"code":"  it('72: Handle nested subgraph cases (BT) link out and link between subgraphs', () => {\n    imgSnapshotTest(`\nflowchart BT\n   subgraph S1\n    sub1 -->sub2\n   end\n  subgraph S2\n    sub4\n   end\n   S1 --> S2\n   sub1 --> sub4\n      `, {\n      htmlLabels: true,\n      flowchart: {\n        htmlLabels: true\n      },\n      securityLevel: 'loose'\n    });\n  });","file":"integration/rendering/flowchart-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"74: Handle nested subgraph cases (RL) link out and link between subgraphs","suites":["Flowchart v2"],"updatePoint":{"line":644,"column":79,"index":14863},"line":644,"code":"  it('74: Handle nested subgraph cases (RL) link out and link between subgraphs', () => {\n    imgSnapshotTest(`\nflowchart RL\n   subgraph S1\n    sub1 -->sub2\n   end\n  subgraph S2\n    sub4\n   end\n   S1 --> S2\n   sub1 --> sub4\n      `, {\n      htmlLabels: true,\n      flowchart: {\n        htmlLabels: true\n      },\n      securityLevel: 'loose'\n    });\n  });","file":"integration/rendering/flowchart-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"74: Handle labels for multiple edges from and to the same couple of nodes","suites":["Flowchart v2"],"updatePoint":{"line":663,"column":79,"index":15218},"line":663,"code":"  it('74: Handle labels for multiple edges from and to the same couple of nodes', () => {\n    imgSnapshotTest(`\nflowchart RL\n    subgraph one\n      a1 -- l1 --> a2\n      a1 -- l2 --> a2\n    end\n      `, {\n      htmlLabels: true,\n      flowchart: {\n        htmlLabels: true\n      },\n      securityLevel: 'loose'\n    });\n  });","file":"integration/rendering/flowchart-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"76: handle unicode encoded character with HTML labels true","suites":["Flowchart v2"],"updatePoint":{"line":678,"column":64,"index":15528},"line":678,"code":"  it('76: handle unicode encoded character with HTML labels true', () => {\n    imgSnapshotTest(`flowchart TB\n      a{{\"Lorem 'ipsum' dolor 'sit' amet, 'consectetur' adipiscing 'elit'.\"}}\n      --> b{{\"Lorem #quot;ipsum#quot; dolor #quot;sit#quot; amet,#quot;consectetur#quot; adipiscing #quot;elit#quot;.\"}}\n      `, {\n      htmlLabels: true,\n      flowchart: {\n        htmlLabels: true\n      },\n      securityLevel: 'loose'\n    });\n  });","file":"integration/rendering/flowchart-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"2050: handling of different rendering direction in subgraphs","suites":["Flowchart v2"],"updatePoint":{"line":690,"column":66,"index":15969},"line":690,"code":"  it('2050: handling of different rendering direction in subgraphs', () => {\n    imgSnapshotTest(`\n    flowchart LR\n\n      subgraph TOP\n        direction TB\n        subgraph B1\n            direction RL\n            i1 -->f1\n        end\n        subgraph B2\n            direction BT\n            i2 -->f2\n        end\n      end\n      A --> TOP --> B\n      B1 --> B2\n      `, {\n      htmlLabels: true,\n      flowchart: {\n        htmlLabels: true\n      },\n      securityLevel: 'loose'\n    });\n  });","file":"integration/rendering/flowchart-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"2388: handling default in the node name","suites":["Flowchart v2"],"updatePoint":{"line":715,"column":45,"index":16440},"line":715,"code":"  it('2388: handling default in the node name', () => {\n    imgSnapshotTest(`\n      flowchart LR\n      default-index.js --> dot.template.js\n      index.js --> module-utl.js\n      `, {\n      htmlLabels: true,\n      flowchart: {\n        htmlLabels: true\n      },\n      securityLevel: 'loose'\n    });\n  });","file":"integration/rendering/flowchart-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"2824: Clipping of edges","suites":["Flowchart v2"],"updatePoint":{"line":728,"column":29,"index":16728},"line":728,"code":"  it('2824: Clipping of edges', () => {\n    imgSnapshotTest(`\n      flowchart TD\n          A --> B\n          A --> C\n          B --> C\n      `, {\n      htmlLabels: true,\n      flowchart: {\n        htmlLabels: true\n      },\n      securityLevel: 'loose'\n    });\n  });","file":"integration/rendering/flowchart-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"1433: should render a titled flowchart with titleTopMargin set to 0","suites":["Flowchart v2"],"updatePoint":{"line":742,"column":73,"index":17038},"line":742,"code":"  it('1433: should render a titled flowchart with titleTopMargin set to 0', () => {\n    imgSnapshotTest(`---\ntitle: Simple flowchart\n---\nflowchart TD\nA --> B\n`, {\n      titleTopMargin: 0\n    });\n  });","file":"integration/rendering/flowchart-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"1: should render a simple flowchart no htmlLabels","suites":["Graph"],"updatePoint":{"line":3,"column":55,"index":149},"line":3,"code":"  it('1: should render a simple flowchart no htmlLabels', () => {\n    imgSnapshotTest(`graph TD\n      A[Christmas] -->|Get money| B(Go shopping)\n      B --> C{Let me think}\n      C -->|One| D[Laptop]\n      C -->|Two| E[iPhone]\n      C -->|Three| F[fa:fa-car Car]\n      `, {\n      flowchart: {\n        htmlLabels: false\n      },\n      fontFamily: 'courier'\n    });\n  });","file":"integration/rendering/flowchart.spec.js","skipped":false,"dir":"cypress"},{"name":"2: should render a simple flowchart with htmlLabels","suites":["Graph"],"updatePoint":{"line":17,"column":57,"index":521},"line":17,"code":"  it('2: should render a simple flowchart with htmlLabels', () => {\n    imgSnapshotTest(`graph TD\n      A[Christmas] -->|Get money| B(Go shopping)\n      B --> C{Let me think}\n      C -->|One| D[Laptop]\n      C -->|Two| E[iPhone]\n      C -->|Three| F[fa:fa-car Car]\n      `, {\n      flowchart: {\n        htmlLabels: true\n      },\n      fontFamily: 'courier'\n    });\n  });","file":"integration/rendering/flowchart.spec.js","skipped":false,"dir":"cypress"},{"name":"3: should render a simple flowchart with line breaks","suites":["Graph"],"updatePoint":{"line":31,"column":58,"index":893},"line":31,"code":"  it('3: should render a simple flowchart with line breaks', () => {\n    imgSnapshotTest(`\n    graph TD\n      A[Christmas] -->|Get money| B(Go shopping)\n      B --> C{Let me thinksssss<br/>ssssssssssssssssssssss<br/>sssssssssssssssssssssssssss}\n      C -->|One| D[Laptop]\n      C -->|Two| E[iPhone]\n      C -->|Three| F[Car]\n      `, {\n      fontFamily: 'courier'\n    });\n  });","file":"integration/rendering/flowchart.spec.js","skipped":false,"dir":"cypress"},{"name":"4: should render a simple flowchart with trapezoid and inverse trapezoid vertex options.","suites":["Graph"],"updatePoint":{"line":43,"column":94,"index":1307},"line":43,"code":"  it('4: should render a simple flowchart with trapezoid and inverse trapezoid vertex options.', () => {\n    imgSnapshotTest(`\n    graph TD\n      A[/Christmas\\\\]\n      A -->|Get money| B[\\\\Go shopping/]\n      B --> C{Let me thinksssss<br/>ssssssssssssssssssssss<br/>sssssssssssssssssssssssssss}\n      C -->|One| D[/Laptop/]\n      C -->|Two| E[\\\\iPhone\\\\]\n      C -->|Three| F[Car]\n      `, {\n      fontFamily: 'courier'\n    });\n  });","file":"integration/rendering/flowchart.spec.js","skipped":false,"dir":"cypress"},{"name":"5: should style nodes via a class.","suites":["Graph"],"updatePoint":{"line":56,"column":40,"index":1687},"line":56,"code":"  it('5: should style nodes via a class.', () => {\n    imgSnapshotTest(`\n    graph TD\n      1A --> 1B\n      1B --> 1C\n      1C --> D\n      1C --> E\n\n      classDef processHead fill:#888888,color:white,font-weight:bold,stroke-width:3px,stroke:#001f3f\n      class 1A,1B,D,E processHead\n      `, {\n      fontFamily: 'courier'\n    });\n  });","file":"integration/rendering/flowchart.spec.js","skipped":false,"dir":"cypress"},{"name":"6: should render a flowchart full of circles","suites":["Graph"],"updatePoint":{"line":70,"column":50,"index":2034},"line":70,"code":"  it('6: should render a flowchart full of circles', () => {\n    imgSnapshotTest(`\n    graph LR\n      47(SAM.CommonFA.FMESummary)-->48(SAM.CommonFA.CommonFAFinanceBudget)\n      37(SAM.CommonFA.BudgetSubserviceLineVolume)-->48(SAM.CommonFA.CommonFAFinanceBudget)\n      35(SAM.CommonFA.PopulationFME)-->47(SAM.CommonFA.FMESummary)\n      41(SAM.CommonFA.MetricCost)-->47(SAM.CommonFA.FMESummary)\n      44(SAM.CommonFA.MetricOutliers)-->47(SAM.CommonFA.FMESummary)\n      46(SAM.CommonFA.MetricOpportunity)-->47(SAM.CommonFA.FMESummary)\n      40(SAM.CommonFA.OPVisits)-->47(SAM.CommonFA.FMESummary)\n      38(SAM.CommonFA.CommonFAFinanceRefund)-->47(SAM.CommonFA.FMESummary)\n      43(SAM.CommonFA.CommonFAFinancePicuDays)-->47(SAM.CommonFA.FMESummary)\n      42(SAM.CommonFA.CommonFAFinanceNurseryDays)-->47(SAM.CommonFA.FMESummary)\n      45(SAM.CommonFA.MetricPreOpportunity)-->46(SAM.CommonFA.MetricOpportunity)\n      35(SAM.CommonFA.PopulationFME)-->45(SAM.CommonFA.MetricPreOpportunity)\n      41(SAM.CommonFA.MetricCost)-->45(SAM.CommonFA.MetricPreOpportunity)\n      41(SAM.CommonFA.MetricCost)-->44(SAM.CommonFA.MetricOutliers)\n      39(SAM.CommonFA.ChargeDetails)-->43(SAM.CommonFA.CommonFAFinancePicuDays)\n      39(SAM.CommonFA.ChargeDetails)-->42(SAM.CommonFA.CommonFAFinanceNurseryDays)\n      39(SAM.CommonFA.ChargeDetails)-->41(SAM.CommonFA.MetricCost)\n      39(SAM.CommonFA.ChargeDetails)-->40(SAM.CommonFA.OPVisits)\n      35(SAM.CommonFA.PopulationFME)-->39(SAM.CommonFA.ChargeDetails)\n      36(SAM.CommonFA.PremetricCost)-->39(SAM.CommonFA.ChargeDetails)\n      `, {\n      fontFamily: 'courier'\n    });\n  });","file":"integration/rendering/flowchart.spec.js","skipped":false,"dir":"cypress"},{"name":"7: should render a flowchart full of icons","suites":["Graph"],"updatePoint":{"line":97,"column":48,"index":3646},"line":97,"code":"  it('7: should render a flowchart full of icons', () => {\n    imgSnapshotTest(`\n    graph TD\n      9e122290_1ec3_e711_8c5a_005056ad0002(\"fa:fa-creative-commons My System | Test Environment\")\n      82072290_1ec3_e711_8c5a_005056ad0002(\"fa:fa-cogs Shared Business Logic Server:Service 1\")\n      db052290_1ec3_e711_8c5a_005056ad0002(\"fa:fa-cogs Shared Business Logic Server:Service 2\")\n      4e112290_1ec3_e711_8c5a_005056ad0002(\"fa:fa-cogs Shared Report Server:Service 1\")\n      30122290_1ec3_e711_8c5a_005056ad0002(\"fa:fa-cogs Shared Report Server:Service 2\")\n      5e112290_1ec3_e711_8c5a_005056ad0002(\"fa:fa-cogs Dedicated Test Business Logic Server:Service 1\")\n      c1112290_1ec3_e711_8c5a_005056ad0002(\"fa:fa-cogs Dedicated Test Business Logic Server:Service 2\")\n      b7042290_1ec3_e711_8c5a_005056ad0002(\"fa:fa-circle [DBServer\\\\SharedDbInstance].[SupportDb]\")\n      8f102290_1ec3_e711_8c5a_005056ad0002(\"fa:fa-circle [DBServer\\\\SharedDbInstance].[DevelopmentDb]\")\n      0e102290_1ec3_e711_8c5a_005056ad0002(\"fa:fa-circle [DBServer\\\\SharedDbInstance].[TestDb]\")\n      07132290_1ec3_e711_8c5a_005056ad0002(\"fa:fa-circle [DBServer\\\\SharedDbInstance].[SharedReportingDb]\")\n      c7072290_1ec3_e711_8c5a_005056ad0002(\"fa:fa-server Shared Business Logic Server\")\n      ca122290_1ec3_e711_8c5a_005056ad0002(\"fa:fa-server Shared Report Server\")\n      68102290_1ec3_e711_8c5a_005056ad0002(\"fa:fa-server Dedicated Test Business Logic Server\")\n      f4112290_1ec3_e711_8c5a_005056ad0002(\"fa:fa-database [DBServer\\\\SharedDbInstance]\")\n      d6072290_1ec3_e711_8c5a_005056ad0002(\"fa:fa-server DBServer\")\n      71082290_1ec3_e711_8c5a_005056ad0002(\"fa:fa-cogs DBServer\\\\:MSSQLSERVER\")\n      c0102290_1ec3_e711_8c5a_005056ad0002(\"fa:fa-cogs DBServer\\\\:SQLAgent\")\n      9a072290_1ec3_e711_8c5a_005056ad0002(\"fa:fa-cogs DBServer\\\\:SQLBrowser\")\n      1d0a2290_1ec3_e711_8c5a_005056ad0002(\"fa:fa-server VmHost1\")\n      200a2290_1ec3_e711_8c5a_005056ad0002(\"fa:fa-server VmHost2\")\n      1c0a2290_1ec3_e711_8c5a_005056ad0002(\"fa:fa-server VmHost3\")\n      9e122290_1ec3_e711_8c5a_005056ad0002-->82072290_1ec3_e711_8c5a_005056ad0002\n      9e122290_1ec3_e711_8c5a_005056ad0002-->db052290_1ec3_e711_8c5a_005056ad0002\n      9e122290_1ec3_e711_8c5a_005056ad0002-->4e112290_1ec3_e711_8c5a_005056ad0002\n      9e122290_1ec3_e711_8c5a_005056ad0002-->30122290_1ec3_e711_8c5a_005056ad0002\n      9e122290_1ec3_e711_8c5a_005056ad0002-->5e112290_1ec3_e711_8c5a_005056ad0002\n      9e122290_1ec3_e711_8c5a_005056ad0002-->c1112290_1ec3_e711_8c5a_005056ad0002\n      82072290_1ec3_e711_8c5a_005056ad0002-->b7042290_1ec3_e711_8c5a_005056ad0002\n      82072290_1ec3_e711_8c5a_005056ad0002-->8f102290_1ec3_e711_8c5a_005056ad0002\n      82072290_1ec3_e711_8c5a_005056ad0002-->0e102290_1ec3_e711_8c5a_005056ad0002\n      82072290_1ec3_e711_8c5a_005056ad0002-->c7072290_1ec3_e711_8c5a_005056ad0002\n      db052290_1ec3_e711_8c5a_005056ad0002-->c7072290_1ec3_e711_8c5a_005056ad0002\n      db052290_1ec3_e711_8c5a_005056ad0002-->82072290_1ec3_e711_8c5a_005056ad0002\n      4e112290_1ec3_e711_8c5a_005056ad0002-->b7042290_1ec3_e711_8c5a_005056ad0002\n      4e112290_1ec3_e711_8c5a_005056ad0002-->8f102290_1ec3_e711_8c5a_005056ad0002\n      4e112290_1ec3_e711_8c5a_005056ad0002-->0e102290_1ec3_e711_8c5a_005056ad0002\n      4e112290_1ec3_e711_8c5a_005056ad0002-->07132290_1ec3_e711_8c5a_005056ad0002\n      4e112290_1ec3_e711_8c5a_005056ad0002-->ca122290_1ec3_e711_8c5a_005056ad0002\n      30122290_1ec3_e711_8c5a_005056ad0002-->ca122290_1ec3_e711_8c5a_005056ad0002\n      30122290_1ec3_e711_8c5a_005056ad0002-->4e112290_1ec3_e711_8c5a_005056ad0002\n      5e112290_1ec3_e711_8c5a_005056ad0002-->8f102290_1ec3_e711_8c5a_005056ad0002\n      5e112290_1ec3_e711_8c5a_005056ad0002-->68102290_1ec3_e711_8c5a_005056ad0002\n      c1112290_1ec3_e711_8c5a_005056ad0002-->68102290_1ec3_e711_8c5a_005056ad0002\n      c1112290_1ec3_e711_8c5a_005056ad0002-->5e112290_1ec3_e711_8c5a_005056ad0002\n      b7042290_1ec3_e711_8c5a_005056ad0002-->f4112290_1ec3_e711_8c5a_005056ad0002\n      8f102290_1ec3_e711_8c5a_005056ad0002-->f4112290_1ec3_e711_8c5a_005056ad0002\n      0e102290_1ec3_e711_8c5a_005056ad0002-->f4112290_1ec3_e711_8c5a_005056ad0002\n      07132290_1ec3_e711_8c5a_005056ad0002-->f4112290_1ec3_e711_8c5a_005056ad0002\n      c7072290_1ec3_e711_8c5a_005056ad0002-->1d0a2290_1ec3_e711_8c5a_005056ad0002\n      ca122290_1ec3_e711_8c5a_005056ad0002-->200a2290_1ec3_e711_8c5a_005056ad0002\n      68102290_1ec3_e711_8c5a_005056ad0002-->1c0a2290_1ec3_e711_8c5a_005056ad0002\n      f4112290_1ec3_e711_8c5a_005056ad0002-->d6072290_1ec3_e711_8c5a_005056ad0002\n      f4112290_1ec3_e711_8c5a_005056ad0002-->71082290_1ec3_e711_8c5a_005056ad0002\n      f4112290_1ec3_e711_8c5a_005056ad0002-->c0102290_1ec3_e711_8c5a_005056ad0002\n      f4112290_1ec3_e711_8c5a_005056ad0002-->9a072290_1ec3_e711_8c5a_005056ad0002\n      d6072290_1ec3_e711_8c5a_005056ad0002-->1c0a2290_1ec3_e711_8c5a_005056ad0002\n      71082290_1ec3_e711_8c5a_005056ad0002-->d6072290_1ec3_e711_8c5a_005056ad0002\n      c0102290_1ec3_e711_8c5a_005056ad0002-->d6072290_1ec3_e711_8c5a_005056ad0002\n      c0102290_1ec3_e711_8c5a_005056ad0002-->71082290_1ec3_e711_8c5a_005056ad0002\n      9a072290_1ec3_e711_8c5a_005056ad0002-->d6072290_1ec3_e711_8c5a_005056ad0002\n      9a072290_1ec3_e711_8c5a_005056ad0002-->71082290_1ec3_e711_8c5a_005056ad0002\n      `, {\n      fontFamily: 'courier'\n    });\n  });","file":"integration/rendering/flowchart.spec.js","skipped":false,"dir":"cypress"},{"name":"8: should render labels with numbers at the start","suites":["Graph"],"updatePoint":{"line":166,"column":55,"index":9022},"line":166,"code":"  it('8: should render labels with numbers at the start', () => {\n    imgSnapshotTest(`\n    graph TB;subgraph \"number as labels\";1;end;\n      `, {\n      fontFamily: 'courier'\n    });\n  });","file":"integration/rendering/flowchart.spec.js","skipped":false,"dir":"cypress"},{"name":"9: should render subgraphs","suites":["Graph"],"updatePoint":{"line":173,"column":32,"index":9188},"line":173,"code":"  it('9: should render subgraphs', () => {\n    imgSnapshotTest(`\n    graph TB\n      subgraph One\n        a1-->a2\n      end\n      `, {\n      fontFamily: 'courier'\n    });\n  });","file":"integration/rendering/flowchart.spec.js","skipped":false,"dir":"cypress"},{"name":"10: should render subgraphs with a title starting with a digit","suites":["Graph"],"updatePoint":{"line":183,"column":68,"index":9400},"line":183,"code":"  it('10: should render subgraphs with a title starting with a digit', () => {\n    imgSnapshotTest(`\n    graph TB\n      subgraph 2Two\n        a1-->a2\n      end\n      `, {\n      fontFamily: 'courier'\n    });\n  });","file":"integration/rendering/flowchart.spec.js","skipped":false,"dir":"cypress"},{"name":"11: should render styled subgraphs","suites":["Graph"],"updatePoint":{"line":193,"column":40,"index":9585},"line":193,"code":"  it('11: should render styled subgraphs', () => {\n    imgSnapshotTest(`\n    graph TB\n      A\n      B\n      subgraph foo[Foo SubGraph]\n        C\n        D\n      end\n      subgraph bar[Bar SubGraph]\n        E\n        F\n      end\n      G\n\n      A-->B\n      B-->C\n      C-->D\n      B-->D\n      D-->E\n      E-->A\n      E-->F\n      F-->D\n      F-->G\n      B-->G\n      G-->D\n\n      style foo fill:#F99,stroke-width:2px,stroke:#F0F,color:darkred\n      style bar fill:#999,stroke-width:10px,stroke:#0F0,color:blue\n      `, {\n      fontFamily: 'courier'\n    });\n  });","file":"integration/rendering/flowchart.spec.js","skipped":false,"dir":"cypress"},{"name":"12: should render a flowchart with long names and class definitions","suites":["Graph"],"updatePoint":{"line":226,"column":73,"index":10177},"line":226,"code":"  it('12: should render a flowchart with long names and class definitions', () => {\n    imgSnapshotTest(`graph LR\n      sid-B3655226-6C29-4D00-B685-3D5C734DC7E1[\"\n\n      提交申请\n      熊大\n      \"];\n      class sid-B3655226-6C29-4D00-B685-3D5C734DC7E1 node-executed;\n      sid-4DA958A0-26D9-4D47-93A7-70F39FD7D51A[\"\n      负责人审批\n      强子\n      \"];\n      class sid-4DA958A0-26D9-4D47-93A7-70F39FD7D51A node-executed;\n      sid-E27C0367-E6D6-497F-9736-3CDC21FDE221[\"\n      DBA审批\n      强子\n      \"];\n      class sid-E27C0367-E6D6-497F-9736-3CDC21FDE221 node-executed;\n      sid-BED98281-9585-4D1B-934E-BD1AC6AC0EFD[\"\n      SA审批\n      阿美\n      \"];\n      class sid-BED98281-9585-4D1B-934E-BD1AC6AC0EFD node-executed;\n      sid-7CE72B24-E0C1-46D3-8132-8BA66BE05AA7[\"\n      主管审批\n      光头强\n      \"];\n      class sid-7CE72B24-E0C1-46D3-8132-8BA66BE05AA7 node-executed;\n      sid-A1B3CD96-7697-4D7C-BEAA-73D187B1BE89[\"\n      DBA确认\n      强子\n      \"];\n      class sid-A1B3CD96-7697-4D7C-BEAA-73D187B1BE89 node-executed;\n      sid-3E35A7FF-A2F4-4E07-9247-DBF884C81937[\"\n      SA确认\n      阿美\n      \"];\n      class sid-3E35A7FF-A2F4-4E07-9247-DBF884C81937 node-executed;\n      sid-4FC27B48-A6F9-460A-A675-021F5854FE22[\"\n      结束\n      \"];\n      class sid-4FC27B48-A6F9-460A-A675-021F5854FE22 node-executed;\n      sid-19DD9E9F-98C1-44EE-B604-842AFEE76F1E[\"\n      SA执行1\n      强子\n      \"];\n      class sid-19DD9E9F-98C1-44EE-B604-842AFEE76F1E node-executed;\n      sid-6C2120F3-D940-4958-A067-0903DCE879C4[\"\n      SA执行2\n      强子\n      \"];\n      class sid-6C2120F3-D940-4958-A067-0903DCE879C4 node-executed;\n      sid-9180E2A0-5C4B-435F-B42F-0D152470A338[\"\n      DBA执行1\n      强子\n      \"];\n      class sid-9180E2A0-5C4B-435F-B42F-0D152470A338 node-executed;\n      sid-03A2C3AC-5337-48A5-B154-BB3FD0EC8DAD[\"\n      DBA执行3\n      强子\n      \"];\n      class sid-03A2C3AC-5337-48A5-B154-BB3FD0EC8DAD node-executed;\n      sid-D5E1F2F4-306C-47A2-BF74-F66E3D769756[\"\n      DBA执行2\n      强子\n      \"];\n      class sid-D5E1F2F4-306C-47A2-BF74-F66E3D769756 node-executed;\n      sid-8C3F2F1D-F014-4F99-B966-095DC1A2BD93[\"\n      DBA执行4\n      强子\n      \"];\n      class sid-8C3F2F1D-F014-4F99-B966-095DC1A2BD93 node-executed;\n      sid-1897B30A-9C5C-4D5B-B80B-76A038785070[\"\n      负责人确认\n      梁静茹\n      \"];\n      class sid-1897B30A-9C5C-4D5B-B80B-76A038785070 node-executed;\n      sid-B3655226-6C29-4D00-B685-3D5C734DC7E1-->sid-7CE72B24-E0C1-46D3-8132-8BA66BE05AA7;\n      sid-4DA958A0-26D9-4D47-93A7-70F39FD7D51A-->sid-1897B30A-9C5C-4D5B-B80B-76A038785070;\n      sid-E27C0367-E6D6-497F-9736-3CDC21FDE221-->sid-A1B3CD96-7697-4D7C-BEAA-73D187B1BE89;\n      sid-BED98281-9585-4D1B-934E-BD1AC6AC0EFD-->sid-3E35A7FF-A2F4-4E07-9247-DBF884C81937;\n      sid-19DD9E9F-98C1-44EE-B604-842AFEE76F1E-->sid-6C2120F3-D940-4958-A067-0903DCE879C4;\n      sid-9180E2A0-5C4B-435F-B42F-0D152470A338-->sid-D5E1F2F4-306C-47A2-BF74-F66E3D769756;\n      sid-03A2C3AC-5337-48A5-B154-BB3FD0EC8DAD-->sid-8C3F2F1D-F014-4F99-B966-095DC1A2BD93;\n      sid-6C2120F3-D940-4958-A067-0903DCE879C4-->sid-4DA958A0-26D9-4D47-93A7-70F39FD7D51A;\n      sid-1897B30A-9C5C-4D5B-B80B-76A038785070-->sid-4FC27B48-A6F9-460A-A675-021F5854FE22;\n      sid-3E35A7FF-A2F4-4E07-9247-DBF884C81937-->sid-19DD9E9F-98C1-44EE-B604-842AFEE76F1E;\n      sid-A1B3CD96-7697-4D7C-BEAA-73D187B1BE89-->sid-9180E2A0-5C4B-435F-B42F-0D152470A338;\n      sid-A1B3CD96-7697-4D7C-BEAA-73D187B1BE89-->sid-03A2C3AC-5337-48A5-B154-BB3FD0EC8DAD;\n      sid-D5E1F2F4-306C-47A2-BF74-F66E3D769756-->sid-4DA958A0-26D9-4D47-93A7-70F39FD7D51A;\n      sid-8C3F2F1D-F014-4F99-B966-095DC1A2BD93-->sid-4DA958A0-26D9-4D47-93A7-70F39FD7D51A;\n      sid-7CE72B24-E0C1-46D3-8132-8BA66BE05AA7-->sid-BED98281-9585-4D1B-934E-BD1AC6AC0EFD;\n      sid-7CE72B24-E0C1-46D3-8132-8BA66BE05AA7-->sid-E27C0367-E6D6-497F-9736-3CDC21FDE221;\n      sid-3E35A7FF-A2F4-4E07-9247-DBF884C81937-->sid-6C2120F3-D940-4958-A067-0903DCE879C4;\n      sid-7CE72B24-E0C1-46D3-8132-8BA66BE05AA7-->sid-4DA958A0-26D9-4D47-93A7-70F39FD7D51A;\n      sid-7CE72B24-E0C1-46D3-8132-8BA66BE05AA7-->sid-4FC27B48-A6F9-460A-A675-021F5854FE22;\n      `, {\n      fontFamily: 'courier'\n    });\n  });","file":"integration/rendering/flowchart.spec.js","skipped":false,"dir":"cypress"},{"name":"13: should render color of styled nodes","suites":["Graph"],"updatePoint":{"line":326,"column":45,"index":14256},"line":326,"code":"  it('13: should render color of styled nodes', () => {\n    imgSnapshotTest(`\n      graph LR\n        foo-->bar\n\n        classDef foo fill:lightblue,color:green,stroke:#FF9E2C,font-weight:bold\n        style foo fill:#F99,stroke-width:2px,stroke:#F0F\n        style bar fill:#999,color: #00ff00, stroke-width:10px,stroke:#0F0\n      `, {\n      listUrl: false,\n      listId: 'color styling',\n      fontFamily: 'courier',\n      logLevel: 0\n    });\n  });","file":"integration/rendering/flowchart.spec.js","skipped":false,"dir":"cypress"},{"name":"14: should render hexagons","suites":["Graph"],"updatePoint":{"line":341,"column":32,"index":14691},"line":341,"code":"  it('14: should render hexagons', () => {\n    imgSnapshotTest(`\n      graph TD\n        A[Christmas] -->|Get money| B(Go shopping)\n        B --> C{{Let me think...<br />Do I want something for work,<br />something to spend every free second with,<br />or something to get around?}}\n        C -->|One| D[Laptop]\n        C -->|Two| E[iPhone]\n        C -->|Three| F[Car]\n        click A \"index.html#link-clicked\" \"link test\"\n        click B testClick \"click test\"\n        classDef someclass fill:#f96;\n        class A someclass;\n        class C someclass;\n      `, {\n      listUrl: false,\n      listId: 'color styling',\n      fontFamily: 'courier',\n      logLevel: 0\n    });\n  });","file":"integration/rendering/flowchart.spec.js","skipped":false,"dir":"cypress"},{"name":"15: should render a simple flowchart with comments","suites":["Graph"],"updatePoint":{"line":361,"column":56,"index":15393},"line":361,"code":"  it('15: should render a simple flowchart with comments', () => {\n    imgSnapshotTest(`graph TD\n      A[Christmas] -->|Get money| B(Go shopping)\n      B --> C{Let me think}\n      %% this is a comment\n      C -->|One| D[Laptop]\n      C -->|Two| E[iPhone]\n      C -->|Three| F[fa:fa-car Car]\n      `, {\n      flowchart: {\n        htmlLabels: false\n      },\n      fontFamily: 'courier'\n    });\n  });","file":"integration/rendering/flowchart.spec.js","skipped":false,"dir":"cypress"},{"name":"16: Render Stadium shape","suites":["Graph"],"updatePoint":{"line":376,"column":30,"index":15765},"line":376,"code":"  it('16: Render Stadium shape', () => {\n    imgSnapshotTest(` graph TD\n      A([stadium shape test])\n      A -->|Get money| B([Go shopping])\n      B --> C([Let me think...<br />Do I want something for work,<br />something to spend every free second with,<br />or something to get around?])\n      C -->|One| D([Laptop])\n      C -->|Two| E([iPhone])\n      C -->|Three| F([Car<br/>wroom wroom])\n      click A \"index.html#link-clicked\" \"link test\"\n      click B testClick \"click test\"\n      classDef someclass fill:#f96;\n      class A someclass;\n      class C someclass;\n      `, {\n      flowchart: {\n        htmlLabels: false\n      },\n      fontFamily: 'courier'\n    });\n  });","file":"integration/rendering/flowchart.spec.js","skipped":false,"dir":"cypress"},{"name":"17: Render multiline texts","suites":["Graph"],"updatePoint":{"line":396,"column":32,"index":16442},"line":396,"code":"  it('17: Render multiline texts', () => {\n    imgSnapshotTest(`graph LR\n        A1[Multi<br>Line] -->|Multi<br>Line| B1(Multi<br>Line)\n        C1[Multi<br/>Line] -->|Multi<br/>Line| D1(Multi<br/>Line)\n        E1[Multi<br />Line] -->|Multi<br />Line| F1(Multi<br />Line)\n        A2[Multi<br>Line] -->|Multi<br>Line| B2(Multi<br>Line)\n        C2[Multi<br/>Line] -->|Multi<br/>Line| D2(Multi<br/>Line)\n        E2[Multi<br />Line] -->|Multi<br />Line| F2(Multi<br />Line)\n        linkStyle 0 stroke:DarkGray,stroke-width:2px\n        linkStyle 1 stroke:DarkGray,stroke-width:2px\n        linkStyle 2 stroke:DarkGray,stroke-width:2px\n      `, {\n      flowchart: {\n        htmlLabels: false\n      },\n      fontFamily: 'courier'\n    });\n  });","file":"integration/rendering/flowchart.spec.js","skipped":false,"dir":"cypress"},{"name":"18: Chaining of nodes","suites":["Graph"],"updatePoint":{"line":414,"column":27,"index":17172},"line":414,"code":"  it('18: Chaining of nodes', () => {\n    imgSnapshotTest(`graph LR\n        a --> b --> c\n      `, {\n      flowchart: {\n        htmlLabels: false\n      },\n      fontFamily: 'courier'\n    });\n  });","file":"integration/rendering/flowchart.spec.js","skipped":false,"dir":"cypress"},{"name":"19: Multiple nodes and chaining in one statement","suites":["Graph"],"updatePoint":{"line":424,"column":54,"index":17396},"line":424,"code":"  it('19: Multiple nodes and chaining in one statement', () => {\n    imgSnapshotTest(`graph LR\n        a --> b & c--> d\n      `, {\n      flowchart: {\n        htmlLabels: false\n      },\n      fontFamily: 'courier'\n    });\n  });","file":"integration/rendering/flowchart.spec.js","skipped":false,"dir":"cypress"},{"name":"20: Multiple nodes and chaining in one statement","suites":["Graph"],"updatePoint":{"line":434,"column":54,"index":17623},"line":434,"code":"  it('20: Multiple nodes and chaining in one statement', () => {\n    imgSnapshotTest(`graph TD\n      A[ h ] -- hello --> B[\" test \"]:::exClass & C --> D;\n      classDef exClass background:#bbb,border:1px solid red;\n      `, {\n      flowchart: {\n        htmlLabels: false\n      },\n      fontFamily: 'courier'\n    });\n  });","file":"integration/rendering/flowchart.spec.js","skipped":false,"dir":"cypress"},{"name":"21: Render cylindrical shape","suites":["Graph"],"updatePoint":{"line":445,"column":34,"index":17925},"line":445,"code":"  it('21: Render cylindrical shape', () => {\n    imgSnapshotTest(`graph LR\n      A[(cylindrical<br />shape<br />test)]\n      A -->|Get money| B1[(Go shopping 1)]\n      A -->|Get money| B2[(Go shopping 2)]\n      A -->|Get money| B3[(Go shopping 3)]\n      C[(Let me think...<br />Do I want something for work,<br />something to spend every free second with,<br />or something to get around?)]\n      B1 --> C\n      B2 --> C\n      B3 --> C\n      C -->|One| D[(Laptop)]\n      C -->|Two| E[(iPhone)]\n      C -->|Three| F[(Car)]\n      click A \"index.html#link-clicked\" \"link test\"\n      click B testClick \"click test\"\n      classDef someclass fill:#f96;\n      class A someclass;`, {\n      flowchart: {\n        htmlLabels: false\n      },\n      fontFamily: 'courier'\n    });\n  });","file":"integration/rendering/flowchart.spec.js","skipped":false,"dir":"cypress"},{"name":"22: Render a simple flowchart with nodeSpacing set to 100","suites":["Graph"],"updatePoint":{"line":468,"column":63,"index":18726},"line":468,"code":"  it('22: Render a simple flowchart with nodeSpacing set to 100', () => {\n    imgSnapshotTest(`graph TD\n      A[Christmas] -->|Get money| B(Go shopping)\n      B --> C{Let me think}\n      %% this is a comment\n      C -->|One| D[Laptop]\n      C -->|Two| E[iPhone]\n      C -->|Three| F[fa:fa-car Car]\n      `, {\n      flowchart: {\n        nodeSpacing: 50\n      },\n      fontFamily: 'courier'\n    });\n  });","file":"integration/rendering/flowchart.spec.js","skipped":false,"dir":"cypress"},{"name":"23: Render a simple flowchart with rankSpacing set to 100","suites":["Graph"],"updatePoint":{"line":483,"column":63,"index":19129},"line":483,"code":"  it('23: Render a simple flowchart with rankSpacing set to 100', () => {\n    imgSnapshotTest(`graph TD\n      A[Christmas] -->|Get money| B(Go shopping)\n      B --> C{Let me think}\n      %% this is a comment\n      C -->|One| D[Laptop]\n      C -->|Two| E[iPhone]\n      C -->|Three| F[fa:fa-car Car]\n      `, {\n      flowchart: {\n        rankSpacing: '100'\n      },\n      fontFamily: 'courier'\n    });\n  });","file":"integration/rendering/flowchart.spec.js","skipped":false,"dir":"cypress"},{"name":"24: Keep node label text (if already defined) when a style is applied","suites":["Graph"],"updatePoint":{"line":498,"column":75,"index":19547},"line":498,"code":"  it('24: Keep node label text (if already defined) when a style is applied', () => {\n    imgSnapshotTest(`graph LR\n      A(( )) -->|step 1| B(( ))\n      B(( )) -->|step 2| C(( ))\n      C(( )) -->|step 3| D(( ))\n      linkStyle 1 stroke:greenyellow,stroke-width:2px\n      style C fill:greenyellow,stroke:green,stroke-width:4px\n      `, {\n      flowchart: {\n        htmlLabels: false\n      },\n      fontFamily: 'courier'\n    });\n  });","file":"integration/rendering/flowchart.spec.js","skipped":false,"dir":"cypress"},{"name":"25: Handle link click events (link, anchor, mailto, other protocol, script)","suites":["Graph"],"updatePoint":{"line":512,"column":81,"index":19987},"line":512,"code":"  it('25: Handle link click events (link, anchor, mailto, other protocol, script)', () => {\n    imgSnapshotTest(`graph TB\n      TITLE[\"Link Click Events<br>(click the nodes below)\"]\n      A[\"link test (open in same tab)\"]\n      B[\"link test (open in new tab)\"]\n      C[anchor test]\n      D[mailto test]\n      E[other protocol test]\n      F[script test]\n      TITLE --> A & B & C & D & E & F\n      click A \"https://mermaid-js.github.io/mermaid/#/\" \"link test (open in same tab)\"\n      click B \"https://mermaid-js.github.io/mermaid/#/\" \"link test (open in new tab)\" _blank\n      click C \"#link-clicked\"\n      click D \"mailto:user@user.user\" \"mailto test\"\n      click E \"notes://do-your-thing/id\" \"other protocol test\"\n      click F \"javascript:alert('test')\" \"script test\"\n      `, {\n      securityLevel: 'loose',\n      fontFamily: 'courier'\n    });\n  });","file":"integration/rendering/flowchart.spec.js","skipped":false,"dir":"cypress"},{"name":"26: Set text color of nodes and links according to styles when html labels are enabled","suites":["Graph"],"updatePoint":{"line":533,"column":92,"index":20852},"line":533,"code":"  it('26: Set text color of nodes and links according to styles when html labels are enabled', () => {\n    imgSnapshotTest(`graph LR\n      A[red<br>text] -->|red<br>text| B(blue<br>text)\n      C[/red<br/>text/] -->|blue<br/>text| D{blue<br/>text}\n      E{{default<br />style}} -->|default<br />style| F([default<br />style])\n      linkStyle default color:Sienna;\n      linkStyle 0 color:red;\n      linkStyle 1 stroke:DarkGray,stroke-width:2px,color:#0000ff\n      style A color:red;\n      style B color:blue;\n      style C stroke:#ff0000,fill:#ffcccc,color:#ff0000\n      style D stroke:#0000ff,fill:#ccccff,color:#0000ff\n      click B \"index.html#link-clicked\" \"link test\"\n      click D testClick \"click test\"\n      `, {\n      flowchart: {\n        htmlLabels: true\n      }\n    });\n  });","file":"integration/rendering/flowchart.spec.js","skipped":false,"dir":"cypress"},{"name":"27: Set text color of nodes and links according to styles when html labels are disabled","suites":["Graph"],"updatePoint":{"line":553,"column":93,"index":21639},"line":553,"code":"  it('27: Set text color of nodes and links according to styles when html labels are disabled', () => {\n    imgSnapshotTest(`graph LR\n      A[red<br>text] -->|red<br>text| B(blue<br>text)\n      C[/red<br/>text/] -->|blue<br/>text| D{blue<br/>text}\n      E{{default<br />style}} -->|default<br />style| F([default<br />style])\n      linkStyle default color:Sienna;\n      linkStyle 0 color:red;\n      linkStyle 1 stroke:DarkGray,stroke-width:2px,color:#0000ff\n      style A color:red;\n      style B color:blue;\n      style C stroke:#ff0000,fill:#ffcccc,color:#ff0000\n      style D stroke:#0000ff,fill:#ccccff,color:#0000ff\n      click B \"index.html#link-clicked\" \"link test\"\n      click D testClick \"click test\"\n      `, {\n      flowchart: {\n        htmlLabels: false\n      },\n      fontFamily: 'courier'\n    });\n  });","file":"integration/rendering/flowchart.spec.js","skipped":false,"dir":"cypress"},{"name":"28: Apply default class to all nodes which do not have another class assigned (htmlLabels enabled)","suites":["Graph"],"updatePoint":{"line":574,"column":104,"index":22467},"line":574,"code":"  it('28: Apply default class to all nodes which do not have another class assigned (htmlLabels enabled)', () => {\n    imgSnapshotTest(`graph TD\n      A[myClass1] --> B[default] & C[default]\n      B[default] & C[default] --> D[myClass2]\n      classDef default stroke-width:2px,fill:none,stroke:silver\n      classDef node color:red\n      classDef myClass1 color:#0000ff\n      classDef myClass2 stroke:#0000ff,fill:#ccccff\n      class A myClass1\n      class D myClass2\n      `, {\n      flowchart: {\n        htmlLabels: true\n      }\n    });\n  });","file":"integration/rendering/flowchart.spec.js","skipped":false,"dir":"cypress"},{"name":"29: Apply default class to all nodes which do not have another class assigned (htmlLabels disabled)","suites":["Graph"],"updatePoint":{"line":590,"column":105,"index":23012},"line":590,"code":"  it('29: Apply default class to all nodes which do not have another class assigned (htmlLabels disabled)', () => {\n    imgSnapshotTest(`graph TD\n      A[myClass1] --> B[default] & C[default]\n      B[default] & C[default] --> D[myClass2]\n      classDef default stroke-width:2px,fill:none,stroke:silver\n      classDef node color:red\n      classDef myClass1 color:#0000ff\n      classDef myClass2 stroke:#0000ff,fill:#ccccff\n      class A myClass1\n      class D myClass2\n      `, {\n      flowchart: {\n        htmlLabels: false\n      },\n      fontFamily: 'courier'\n    });\n  });","file":"integration/rendering/flowchart.spec.js","skipped":false,"dir":"cypress"},{"name":"30: Possibility to style text color of nodes and subgraphs as well as apply classes to subgraphs","suites":["Graph"],"updatePoint":{"line":607,"column":102,"index":23584},"line":607,"code":"  it('30: Possibility to style text color of nodes and subgraphs as well as apply classes to subgraphs', () => {\n    imgSnapshotTest(`graph LR\n      subgraph id1 [title is set]\n        A-->B\n      end\n      subgraph id2 [title]\n        E\n      end\n\n      B-->C\n\n      subgraph id3\n      C-->D\n      end\n      class id3,id2,A redBg;\n      class id3,A whiteTxt;\n      classDef redBg fill:#622;\n      classDef whiteTxt color: white;\n      `, {\n      flowchart: {\n        htmlLabels: false\n      },\n      fontFamily: 'courier'\n    });\n  });","file":"integration/rendering/flowchart.spec.js","skipped":false,"dir":"cypress"},{"name":"31: should not slice off edges that are to the left of the left-most vertex","suites":["Graph"],"updatePoint":{"line":632,"column":81,"index":24100},"line":632,"code":"  it('31: should not slice off edges that are to the left of the left-most vertex', () => {\n    imgSnapshotTest(`graph TD\n      work --> sleep\n      sleep --> work\n      eat --> sleep\n      work --> eat\n      `, {\n      flowchart: {\n        htmlLabels: false\n      },\n      fontFamily: 'courier'\n    });\n  });","file":"integration/rendering/flowchart.spec.js","skipped":false,"dir":"cypress"},{"name":"32: Render Subroutine shape","suites":["Graph"],"updatePoint":{"line":645,"column":33,"index":24362},"line":645,"code":"  it('32: Render Subroutine shape', () => {\n    imgSnapshotTest(`graph LR\n      A[[subroutine shape test]]\n      A -->|Get money| B[[Go shopping]]\n      B --> C[[Let me think...<br />Do I want something for work,<br />something to spend every free second with,<br />or something to get around?]]\n      C -->|One| D[[Laptop]]\n      C -->|Two| E[[iPhone]]\n      C -->|Three| F[[Car<br/>wroom wroom]]\n      click A \"index.html#link-clicked\" \"link test\"\n      click B testClick \"click test\"\n      classDef someclass fill:#f96;\n      class A someclass;\n      class C someclass;\n      `, {\n      flowchart: {\n        htmlLabels: false\n      },\n      fontFamily: 'courier'\n    });\n  });","file":"integration/rendering/flowchart.spec.js","skipped":false,"dir":"cypress"},{"name":"33: should render a simple flowchart with diagramPadding set to 0","suites":["Graph"],"updatePoint":{"line":665,"column":71,"index":25080},"line":665,"code":"  it('33: should render a simple flowchart with diagramPadding set to 0', () => {\n    imgSnapshotTest(`graph TD\n      A[Christmas] -->|Get money| B(Go shopping)\n      B --> C{Let me think}\n      %% this is a comment\n      C -->|One| D[Laptop]\n      C -->|Two| E[iPhone]\n      C -->|Three| F[fa:fa-car Car]\n      `, {\n      flowchart: {\n        diagramPadding: 0\n      }\n    });\n  });","file":"integration/rendering/flowchart.spec.js","skipped":false,"dir":"cypress"},{"name":"34: testing the label width in percy","suites":["Graph"],"updatePoint":{"line":679,"column":42,"index":25435},"line":679,"code":"  it('34: testing the label width in percy', () => {\n    imgSnapshotTest(`graph TD\n      A[Christmas]\n      `, {});\n  });","file":"integration/rendering/flowchart.spec.js","skipped":false,"dir":"cypress"},{"name":"35: should honor minimum edge length as specified by the user","suites":["Graph"],"updatePoint":{"line":684,"column":67,"index":25582},"line":684,"code":"  it('35: should honor minimum edge length as specified by the user', () => {\n    imgSnapshotTest(`graph TD\n      L1 --- L2\n      L2 --- C\n      M1 ---> C\n      R1 .-> R2\n      R2 <.-> C\n      C -->|Label 1| E1\n      C -- Label 2 ---> E2\n      C ----> E3\n      C -----> E4\n      C ======> E5\n      `, {});\n  });","file":"integration/rendering/flowchart.spec.js","skipped":false,"dir":"cypress"},{"name":"36: should render escaped without html labels","suites":["Graph"],"updatePoint":{"line":698,"column":51,"index":25878},"line":698,"code":"  it('36: should render escaped without html labels', () => {\n    imgSnapshotTest(`graph TD\n        a[\"<strong>Haiya</strong>\"]-->b\n      `, {\n      htmlLabels: false,\n      flowchart: {\n        htmlLabels: false\n      }\n    });\n  });","file":"integration/rendering/flowchart.spec.js","skipped":false,"dir":"cypress"},{"name":"37: should render non-escaped with html labels","suites":["Graph"],"updatePoint":{"line":708,"column":52,"index":26114},"line":708,"code":"  it('37: should render non-escaped with html labels', () => {\n    imgSnapshotTest(`graph TD\n        a[\"<strong>Haiya</strong>\"]-->b\n      `, {\n      htmlLabels: true,\n      flowchart: {\n        htmlLabels: true\n      },\n      securityLevel: 'loose'\n    });\n  });","file":"integration/rendering/flowchart.spec.js","skipped":false,"dir":"cypress"},{"name":"38: should render a flowchart when useMaxWidth is true (default)","suites":["Graph"],"updatePoint":{"line":719,"column":70,"index":26396},"line":719,"code":"  it('38: should render a flowchart when useMaxWidth is true (default)', () => {\n    renderGraph(`graph TD\n      A[Christmas] -->|Get money| B(Go shopping)\n      B --> C{Let me think}\n      C -->|One| D[Laptop]\n      C -->|Two| E[iPhone]\n      C -->|Three| F[fa:fa-car Car]\n      `, {\n      flowchart: {\n        useMaxWidth: true\n      }\n    });\n    cy.get('svg').should(svg => {\n      expect(svg).to.have.attr('width', '100%');\n      // expect(svg).to.have.attr('height');\n      // use within because the absolute value can be slightly different depending on the environment ±10%\n      // const height = parseFloat(svg.attr('height'));\n      // expect(height).to.be.within(446 * 0.95, 446 * 1.05);\n      const style = svg.attr('style');\n      expect(style).to.match(/^max-width: [\\d.]+px;$/);\n      const maxWidthValue = parseFloat(style.match(/[\\d.]+/g).join(''));\n      expect(maxWidthValue).to.be.within(300 * 0.9, 300 * 1.1);\n    });\n  });","file":"integration/rendering/flowchart.spec.js","skipped":false,"dir":"cypress"},{"name":"39: should render a flowchart when useMaxWidth is false","suites":["Graph"],"updatePoint":{"line":743,"column":61,"index":27332},"line":743,"code":"  it('39: should render a flowchart when useMaxWidth is false', () => {\n    renderGraph(`graph TD\n      A[Christmas] -->|Get money| B(Go shopping)\n      B --> C{Let me think}\n      C -->|One| D[Laptop]\n      C -->|Two| E[iPhone]\n      C -->|Three| F[fa:fa-car Car]\n      `, {\n      flowchart: {\n        useMaxWidth: false\n      }\n    });\n    cy.get('svg').should(svg => {\n      // const height = parseFloat(svg.attr('height'));\n      const width = parseFloat(svg.attr('width'));\n      // use within because the absolute value can be slightly different depending on the environment ±10%\n      // expect(height).to.be.within(446 * 0.95, 446 * 1.05);\n      expect(width).to.be.within(300 * 0.9, 300 * 1.1);\n      expect(svg).to.not.have.attr('style');\n    });\n  });","file":"integration/rendering/flowchart.spec.js","skipped":false,"dir":"cypress"},{"name":"58: handle styling with style expressions","suites":["Graph"],"updatePoint":{"line":764,"column":47,"index":28081},"line":764,"code":"  it('58: handle styling with style expressions', () => {\n    imgSnapshotTest(`\n    graph LR\n    id1(Start)-->id2(Stop)\n    style id1 fill:#f9f,stroke:#333,stroke-width:4px\n    style id2 fill:#bbf,stroke:#f66,stroke-width:2px,color:#fff,stroke-dasharray: 5 5\n      `, {\n      htmlLabels: true,\n      flowchart: {\n        htmlLabels: true\n      },\n      securityLevel: 'loose'\n    });\n  });","file":"integration/rendering/flowchart.spec.js","skipped":false,"dir":"cypress"},{"name":"60: handle styling for all node shapes","suites":["Graph"],"updatePoint":{"line":778,"column":44,"index":28468},"line":778,"code":"  it('60: handle styling for all node shapes', () => {\n    imgSnapshotTest(`\n      graph LR\n      A[red text] -->|default style| B(blue text)\n      C([red text]) -->|default style| D[[blue text]]\n      E[(red text)] -->|default style| F((blue text))\n      G>red text] -->|default style| H{blue text}\n      I{{red text}} -->|default style| J[/blue text/]\n      linkStyle default color:Sienna;\n      style A stroke:#ff0000,fill:#ffcccc,color:#ff0000\n      style B stroke:#0000ff,fill:#ccccff,color:#0000ff\n      style C stroke:#ff0000,fill:#ffcccc,color:#ff0000\n      style D stroke:#0000ff,fill:#ccccff,color:#0000ff\n      style E stroke:#ff0000,fill:#ffcccc,color:#ff0000\n      style F stroke:#0000ff,fill:#ccccff,color:#0000ff\n      style G stroke:#ff0000,fill:#ffcccc,color:#ff0000\n      style H stroke:#0000ff,fill:#ccccff,color:#0000ff\n      style I stroke:#ff0000,fill:#ffcccc,color:#ff0000\n      style J stroke:#0000ff,fill:#ccccff,color:#0000ff\n      `, {\n      htmlLabels: true,\n      flowchart: {\n        htmlLabels: true\n      },\n      securityLevel: 'loose'\n    });\n  });","file":"integration/rendering/flowchart.spec.js","skipped":false,"dir":"cypress"},{"name":"61: fontawesome icons in edge labels","suites":["Graph"],"updatePoint":{"line":805,"column":42,"index":29549},"line":805,"code":"  it('61: fontawesome icons in edge labels', () => {\n    imgSnapshotTest(`\ngraph TD\n  C -->|fa:fa-car Car| F[fa:fa-car Car]\n      `, {\n      htmlLabels: true,\n      flowchart: {\n        htmlLabels: true\n      },\n      securityLevel: 'loose'\n    });\n  });","file":"integration/rendering/flowchart.spec.js","skipped":false,"dir":"cypress"},{"name":"62: fontawesome icons in edge labels","suites":["Graph"],"updatePoint":{"line":817,"column":42,"index":29804},"line":817,"code":"  it('62: fontawesome icons in edge labels', () => {\n    imgSnapshotTest(`\n    graph TB\n      subgraph bar[Bar]\n        F\n      end\n      style bar fill:#999,stroke-width:10px,stroke:#0F0,color:blue\n      `, {\n      htmlLabels: true,\n      flowchart: {\n        htmlLabels: true\n      },\n      securityLevel: 'loose'\n    });\n  });","file":"integration/rendering/flowchart.spec.js","skipped":false,"dir":"cypress"},{"name":"63: fontawesome icons in edge labels","suites":["Graph"],"updatePoint":{"line":832,"column":42,"index":30134},"line":832,"code":"  it('63: fontawesome icons in edge labels', () => {\n    imgSnapshotTest(`\n    graph TB\n      A\n      B\n      subgraph foo[Foo SubGraph]\n        C\n        D\n      end\n      subgraph bar[Bar SubGraph]\n        E\n        F\n      end\n      G\n\n      A-->B\n      B-->C\n      C-->D\n      B-->D\n      D-->E\n      E-->A\n      E-->F\n      F-->D\n      F-->G\n      B-->G\n      G-->D\n\n      style foo fill:#F99,stroke-width:2px,stroke:#F0F,color:darkred\n      style bar fill:#999,stroke-width:10px,stroke:#0F0,color:blue\n      `, {\n      htmlLabels: true,\n      flowchart: {\n        htmlLabels: true\n      },\n      securityLevel: 'loose'\n    });\n  });","file":"integration/rendering/flowchart.spec.js","skipped":false,"dir":"cypress"},{"name":"64: fontawesome icons in edge labels","suites":["Graph"],"updatePoint":{"line":869,"column":42,"index":30773},"line":869,"code":"  it('64: fontawesome icons in edge labels', () => {\n    imgSnapshotTest(`\n    %%{init:{\"theme\":\"base\", \"themeVariables\": {\"primaryColor\":\"#411d4e\", \"titleColor\":\"white\", \"darkMode\":true}}}%%\n    flowchart LR\n    subgraph A\n        a --> b\n    end\n    subgraph B\n        i -->f\n    end\n    A --> B\n      `, {\n      htmlLabels: true,\n      flowchart: {\n        htmlLabels: true\n      },\n      securityLevel: 'loose'\n    });\n  });","file":"integration/rendering/flowchart.spec.js","skipped":false,"dir":"cypress"},{"name":"65: text-color from classes","suites":["Graph"],"updatePoint":{"line":888,"column":33,"index":31193},"line":888,"code":"  it('65: text-color from classes', () => {\n    imgSnapshotTest(`\n      flowchart LR\n        classDef dark fill:#000,stroke:#000,stroke-width:4px,color:#fff\n        Lorem --> Ipsum --> Dolor\n        class Lorem,Dolor dark\n      `, {\n      htmlLabels: true,\n      flowchart: {\n        htmlLabels: true\n      },\n      securityLevel: 'loose'\n    });\n  });","file":"integration/rendering/flowchart.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a gantt chart","suites":["Gantt diagram"],"updatePoint":{"line":6,"column":33,"index":213},"line":6,"code":"  it('should render a gantt chart', () => {\n    imgSnapshotTest(`\n    gantt\n      dateFormat  YYYY-MM-DD\n      axisFormat  %d/%m\n      title Adding GANTT diagram to mermaid\n      excludes weekdays 2014-01-10\n\n      section A section\n      Completed task            :done,    des1, 2014-01-06,2014-01-08\n      Active task               :active,  des2, 2014-01-09, 3d\n      Future task               :         des3, after des2, 5d\n      Future task2               :         des4, after des3, 5d\n\n      section Critical tasks\n      Completed task in the critical line :crit, done, 2014-01-06,24h\n      Implement parser and jison :crit, done, after des1, 2d\n      Create tests for parser             :crit, active, 3d\n      Future task in critical line        :crit, 5d\n      Create tests for renderer           :2d\n      Add to mermaid                      :1d\n\n      section Documentation\n      Describe gantt syntax               :active, a1, after des1, 3d\n      Add gantt diagram to demo page      :after a1  , 20h\n      Add another diagram to demo page    :doc1, after a1  , 48h\n\n      section Last section\n      Describe gantt syntax               :after doc1, 3d\n      Add gantt diagram to demo page      : 20h\n      Add another diagram to demo page    : 48h\n      `, {});\n  });","file":"integration/rendering/gantt.spec.js","skipped":false,"dir":"cypress"},{"name":"Handle multiline section titles with different line breaks","suites":["Gantt diagram"],"updatePoint":{"line":39,"column":64,"index":1527},"line":39,"code":"  it('Handle multiline section titles with different line breaks', () => {\n    imgSnapshotTest(`\n      gantt\n      dateFormat  YYYY-MM-DD\n      axisFormat  %d/%m\n      title       GANTT diagram with multiline section titles\n      excludes    weekdays 2014-01-10\n\n      section A section<br>multiline\n      Completed task            : done,    des1, 2014-01-06,2014-01-08\n      Active task               : active,  des2, 2014-01-09, 3d\n      Future task               :          des3, after des2, 5d\n      Future task2              :          des4, after des3, 5d\n\n      section Critical tasks<br/>multiline\n      Completed task in the critical line : crit, done, 2014-01-06, 24h\n      Implement parser and jison          : crit, done, after des1, 2d\n      Create tests for parser             : crit, active, 3d\n      Future task in critical line        : crit, 5d\n      Create tests for renderer           : 2d\n      Add to mermaid                      : 1d\n\n      section Documentation<br />multiline\n      Describe gantt syntax               : active, a1, after des1, 3d\n      Add gantt diagram to demo page      : after a1, 20h\n      Add another diagram to demo page    : doc1, after a1, 48h\n\n      section Last section<br\t/>multiline\n      Describe gantt syntax               : after doc1, 3d\n      Add gantt diagram to demo page      : 20h\n      Add another diagram to demo page    : 48h\n      `, {});\n  });","file":"integration/rendering/gantt.spec.js","skipped":false,"dir":"cypress"},{"name":"Multiple dependencies syntax","suites":["Gantt diagram"],"updatePoint":{"line":72,"column":34,"index":2910},"line":72,"code":"  it('Multiple dependencies syntax', () => {\n    imgSnapshotTest(`\n      gantt\n      dateFormat  YYYY-MM-DD\n      axisFormat  %d/%m\n      title Adding GANTT diagram to mermaid\n      excludes weekdays 2014-01-10\n\n      apple :a, 2017-07-20, 1w\n      banana :crit, b, 2017-07-23, 1d\n      cherry :active, c, after b a, 1d\n      `, {});\n  });","file":"integration/rendering/gantt.spec.js","skipped":false,"dir":"cypress"},{"name":"should FAIL redering a gantt chart for issue #1060 with invalid date","suites":["Gantt diagram"],"updatePoint":{"line":85,"column":74,"index":3290},"line":85,"code":"  it('should FAIL redering a gantt chart for issue #1060 with invalid date', () => {\n    imgSnapshotTest(`\n      gantt\n      excludes weekdays 2017-01-10\n      title Projects Timeline\n\n      section asdf\n          specs :done, :ps, 2019-05-10, 50d\n          Plasma      :pc, 2019-06-20, 60d\n          Rollup  :or, 2019-08-20, 50d\n\n      section CEL\n\n          plasma-chamber      :done, :pc, 2019-05-20, 60d\n          Plasma Implementation (Rust)      :por, 2019-06-20, 120d\n          Predicates (Atomic Swap)      :pred, 2019-07-20, 60d\n\n      section DEX\n\n          History zkSNARK  :hs, 2019-08-10, 40d\n          Exit           :vs, after hs, 60d\n          PredicateSpec          :ps, 2019-09-1, 20d\n          PlasmaIntegration     :pi, after ps,40d\n\n\n      section Events\n\n      ETHBoston :done, :eb, 2019-09-08, 3d\n      DevCon :active, :dc, 2019-10-08, 3d\n\n      section Plasma Calls & updates\n          OVM      :ovm, 2019-07-12, 120d\n      Plasma call 26 :pc26, 2019-08-21, 1d\n      Plasma call 27 :pc27, 2019-09-03, 1d\n      Plasma call 28 :pc28, 2019-09-17, 1d\n        `, {});\n  });","file":"integration/rendering/gantt.spec.js","skipped":false,"dir":"cypress"},{"name":"should hide today marker","suites":["Gantt diagram"],"updatePoint":{"line":122,"column":30,"index":4339},"line":122,"code":"  it('should hide today marker', () => {\n    imgSnapshotTest(`\n      gantt\n        title Hide today marker (vertical line should not be visible)\n        dateFormat YYYY-MM-DD\n        axisFormat %d\n        todayMarker off\n        section Section1\n         Today: 1, -1h\n      `, {});\n  });","file":"integration/rendering/gantt.spec.js","skipped":false,"dir":"cypress"},{"name":"should style today marker","suites":["Gantt diagram"],"updatePoint":{"line":133,"column":31,"index":4629},"line":133,"code":"  it('should style today marker', () => {\n    imgSnapshotTest(`\n    gantt\n      title Style today marker (vertical line should be 5px wide and half-transparent blue)\n      dateFormat YYYY-MM-DD\n      axisFormat %d\n      todayMarker stroke-width:5px,stroke:#00f,opacity:0.5\n      section Section1\n       Today: 1, -1h\n      `, {});\n  });","file":"integration/rendering/gantt.spec.js","skipped":false,"dir":"cypress"},{"name":"should handle milliseconds","suites":["Gantt diagram"],"updatePoint":{"line":144,"column":32,"index":4967},"line":144,"code":"  it('should handle milliseconds', () => {\n    imgSnapshotTest(`\n    gantt\n      title A Gantt Diagram\n      dateFormat x\n      axisFormat %L\n      section Section\n      A task           :a1, 0, 30ms\n      Another task     :after a1, 20ms\n      section Another\n      Another another task      :b1, 20, 12ms\n      Another another another task     :after b1, 0.024s\n        `, {});\n  });","file":"integration/rendering/gantt.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a gantt diagram when useMaxWidth is true (default)","suites":["Gantt diagram"],"updatePoint":{"line":158,"column":70,"index":5391},"line":158,"code":"  it('should render a gantt diagram when useMaxWidth is true (default)', () => {\n    renderGraph(`\n    gantt\n      dateFormat  YYYY-MM-DD\n      axisFormat  %d/%m\n      title Adding GANTT diagram to mermaid\n      excludes weekdays 2014-01-10\n\n      section A section\n      Completed task            :done,    des1, 2014-01-06,2014-01-08\n      Active task               :active,  des2, 2014-01-09, 3d\n      Future task               :         des3, after des2, 5d\n      Future task2               :         des4, after des3, 5d\n\n      section Critical tasks\n      Completed task in the critical line :crit, done, 2014-01-06,24h\n      Implement parser and jison :crit, done, after des1, 2d\n      Create tests for parser             :crit, active, 3d\n      Future task in critical line        :crit, 5d\n      Create tests for renderer           :2d\n      Add to mermaid                      :1d\n\n      section Documentation\n      Describe gantt syntax               :active, a1, after des1, 3d\n      Add gantt diagram to demo page      :after a1  , 20h\n      Add another diagram to demo page    :doc1, after a1  , 48h\n\n      section Last section\n      Describe gantt syntax               :after doc1, 3d\n      Add gantt diagram to demo page      : 20h\n      Add another diagram to demo page    : 48h\n      `, {\n      gantt: {\n        useMaxWidth: true\n      }\n    });\n    cy.get('svg').should(svg => {\n      expect(svg).to.have.attr('width', '100%');\n      // expect(svg).to.have.attr('height');\n      // use within because the absolute value can be slightly different depending on the environment ±5%\n      // const height = parseFloat(svg.attr('height'));\n      // expect(height).to.be.within(484 * 0.95, 484 * 1.05);\n      const style = svg.attr('style');\n      expect(style).to.match(/^max-width: [\\d.]+px;$/);\n      const maxWidthValue = parseFloat(style.match(/[\\d.]+/g).join(''));\n      expect(maxWidthValue).to.be.within(984 * 0.95, 984 * 1.05);\n    });\n  });","file":"integration/rendering/gantt.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a gantt diagram when useMaxWidth is false","suites":["Gantt diagram"],"updatePoint":{"line":206,"column":61,"index":7346},"line":206,"code":"  it('should render a gantt diagram when useMaxWidth is false', () => {\n    renderGraph(`\n    gantt\n      dateFormat  YYYY-MM-DD\n      axisFormat  %d/%m\n      title Adding GANTT diagram to mermaid\n      excludes weekdays 2014-01-10\n\n      section A section\n      Completed task            :done,    des1, 2014-01-06,2014-01-08\n      Active task               :active,  des2, 2014-01-09, 3d\n      Future task               :         des3, after des2, 5d\n      Future task2               :         des4, after des3, 5d\n\n      section Critical tasks\n      Completed task in the critical line :crit, done, 2014-01-06,24h\n      Implement parser and jison :crit, done, after des1, 2d\n      Create tests for parser             :crit, active, 3d\n      Future task in critical line        :crit, 5d\n      Create tests for renderer           :2d\n      Add to mermaid                      :1d\n\n      section Documentation\n      Describe gantt syntax               :active, a1, after des1, 3d\n      Add gantt diagram to demo page      :after a1  , 20h\n      Add another diagram to demo page    :doc1, after a1  , 48h\n\n      section Last section\n      Describe gantt syntax               :after doc1, 3d\n      Add gantt diagram to demo page      : 20h\n      Add another diagram to demo page    : 48h\n      `, {\n      gantt: {\n        useMaxWidth: false\n      }\n    });\n    cy.get('svg').should(svg => {\n      // const height = parseFloat(svg.attr('height'));\n      const width = parseFloat(svg.attr('width'));\n      // use within because the absolute value can be slightly different depending on the environment ±5%\n      // expect(height).to.be.within(484 * 0.95, 484 * 1.05);\n      expect(width).to.be.within(984 * 0.95, 984 * 1.05);\n      expect(svg).to.not.have.attr('style');\n    });\n  });","file":"integration/rendering/gantt.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a gantt diagram with data labels at the top when topAxis is true","suites":["Gantt diagram"],"updatePoint":{"line":251,"column":84,"index":9151},"line":251,"code":"  it('should render a gantt diagram with data labels at the top when topAxis is true', () => {\n    imgSnapshotTest(`\n    gantt\n      dateFormat  YYYY-MM-DD\n      axisFormat  %d/%m\n      title Adding GANTT diagram to mermaid\n      excludes weekdays 2014-01-10\n\n      section A section\n      Completed task            :done,    des1, 2014-01-06,2014-01-08\n      Active task               :active,  des2, 2014-01-09, 3d\n      Future task               :         des3, after des2, 5d\n      Future task2               :         des4, after des3, 5d\n\n      section Critical tasks\n      Completed task in the critical line :crit, done, 2014-01-06,24h\n      Implement parser and jison :crit, done, after des1, 2d\n      Create tests for parser             :crit, active, 3d\n      Future task in critical line        :crit, 5d\n      Create tests for renderer           :2d\n      Add to mermaid                      :1d\n\n      section Documentation\n      Describe gantt syntax               :active, a1, after des1, 3d\n      Add gantt diagram to demo page      :after a1  , 20h\n      Add another diagram to demo page    :doc1, after a1  , 48h\n\n      section Last section\n      Describe gantt syntax               :after doc1, 3d\n      Add gantt diagram to demo page      : 20h\n      Add another diagram to demo page    : 48h\n      `, {\n      gantt: {\n        topAxis: true\n      }\n    });\n  });","file":"integration/rendering/gantt.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a gantt diagram with tick is 15 minutes","suites":["Gantt diagram"],"updatePoint":{"line":288,"column":59,"index":10510},"line":288,"code":"  it('should render a gantt diagram with tick is 15 minutes', () => {\n    imgSnapshotTest(`\n      gantt\n        title A Gantt Diagram\n        dateFormat   YYYY-MM-DD\n        axisFormat   %H:%M\n        tickInterval 15minute\n        excludes     weekends\n\n        section Section\n        A task           : a1, 2022-10-03, 6h\n        Another task     : after a1, 6h\n        section Another\n        Task in sec      : 2022-10-03, 3h\n        another task     : 3h\n      `, {});\n  });","file":"integration/rendering/gantt.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a gantt diagram with tick is 6 hours","suites":["Gantt diagram"],"updatePoint":{"line":305,"column":56,"index":10987},"line":305,"code":"  it('should render a gantt diagram with tick is 6 hours', () => {\n    imgSnapshotTest(`\n      gantt\n        title A Gantt Diagram\n        dateFormat   YYYY-MM-DD\n        axisFormat   %d %H:%M\n        tickInterval 6hour\n        excludes     weekends\n\n        section Section\n        A task           : a1, 2022-10-03, 1d\n        Another task     : after a1, 2d\n        section Another\n        Task in sec      : 2022-10-04, 2d\n        another task     : 2d\n      `, {});\n  });","file":"integration/rendering/gantt.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a gantt diagram with tick is 1 day","suites":["Gantt diagram"],"updatePoint":{"line":322,"column":54,"index":11462},"line":322,"code":"  it('should render a gantt diagram with tick is 1 day', () => {\n    imgSnapshotTest(`\n      gantt\n        title A Gantt Diagram\n        dateFormat   YYYY-MM-DD\n        axisFormat   %m-%d\n        tickInterval 1day\n        excludes     weekends\n\n        section Section\n        A task           : a1, 2022-10-01, 30d\n        Another task     : after a1, 20d\n        section Another\n        Task in sec      : 2022-10-20, 12d\n        another task     : 24d\n      `, {});\n  });","file":"integration/rendering/gantt.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a gantt diagram with tick is 1 week","suites":["Gantt diagram"],"updatePoint":{"line":339,"column":55,"index":11938},"line":339,"code":"  it('should render a gantt diagram with tick is 1 week', () => {\n    imgSnapshotTest(`\n      gantt\n        title A Gantt Diagram\n        dateFormat   YYYY-MM-DD\n        axisFormat   %m-%d\n        tickInterval 1week\n        excludes     weekends\n\n        section Section\n        A task           : a1, 2022-10-01, 30d\n        Another task     : after a1, 20d\n        section Another\n        Task in sec      : 2022-10-20, 12d\n        another task     : 24d\n      `, {});\n  });","file":"integration/rendering/gantt.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a gantt diagram with tick is 1 month","suites":["Gantt diagram"],"updatePoint":{"line":356,"column":56,"index":12416},"line":356,"code":"  it('should render a gantt diagram with tick is 1 month', () => {\n    imgSnapshotTest(`\n      gantt\n        title A Gantt Diagram\n        dateFormat   YYYY-MM-DD\n        axisFormat   %m-%d\n        tickInterval 1month\n        excludes     weekends\n\n        section Section\n        A task           : a1, 2022-10-01, 30d\n        Another task     : after a1, 20d\n        section Another\n        Task in sec      : 2022-10-20, 12d\n        another task     : 24d\n      `, {});\n  });","file":"integration/rendering/gantt.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a gantt diagram with tick is 1 day and topAxis is true","suites":["Gantt diagram"],"updatePoint":{"line":373,"column":74,"index":12913},"line":373,"code":"  it('should render a gantt diagram with tick is 1 day and topAxis is true', () => {\n    imgSnapshotTest(`\n      gantt\n        title A Gantt Diagram\n        dateFormat   YYYY-MM-DD\n        axisFormat   %m-%d\n        tickInterval 1day\n        excludes     weekends\n\n        section Section\n        A task           : a1, 2022-10-01, 30d\n        Another task     : after a1, 20d\n        section Another\n        Task in sec      : 2022-10-20, 12d\n        another task     : 24d\n      `, {\n      gantt: {\n        topAxis: true\n      }\n    });\n  });","file":"integration/rendering/gantt.spec.js","skipped":false,"dir":"cypress"},{"name":"1: should render a simple gitgraph with commit on main branch","suites":["Git Graph diagram"],"updatePoint":{"line":3,"column":67,"index":163},"line":3,"code":"  it('1: should render a simple gitgraph with commit on main branch', () => {\n    imgSnapshotTest(`gitGraph\n       commit id: \"1\"\n       commit id: \"2\"\n       commit id: \"3\"\n      `, {});\n  });","file":"integration/rendering/gitGraph.spec.js","skipped":false,"dir":"cypress"},{"name":"2: should render a simple gitgraph with commit on main branch with Id","suites":["Git Graph diagram"],"updatePoint":{"line":10,"column":75,"index":365},"line":10,"code":"  it('2: should render a simple gitgraph with commit on main branch with Id', () => {\n    imgSnapshotTest(`gitGraph\n       commit id: \"One\"\n       commit id: \"Two\"\n       commit id: \"Three\"\n      `, {});\n  });","file":"integration/rendering/gitGraph.spec.js","skipped":false,"dir":"cypress"},{"name":"3: should render a simple gitgraph with different commitTypes on main branch ","suites":["Git Graph diagram"],"updatePoint":{"line":17,"column":83,"index":583},"line":17,"code":"  it('3: should render a simple gitgraph with different commitTypes on main branch ', () => {\n    imgSnapshotTest(`gitGraph\n       commit id: \"Normal Commit\"\n       commit id: \"Reverse Commit\" type: REVERSE\n       commit id: \"Hightlight Commit\" type: HIGHLIGHT\n      `, {});\n  });","file":"integration/rendering/gitGraph.spec.js","skipped":false,"dir":"cypress"},{"name":"4: should render a simple gitgraph with tags commitTypes on main branch ","suites":["Git Graph diagram"],"updatePoint":{"line":24,"column":78,"index":859},"line":24,"code":"  it('4: should render a simple gitgraph with tags commitTypes on main branch ', () => {\n    imgSnapshotTest(`gitGraph\n       commit id: \"Normal Commit with tag\" tag: \"v1.0.0\"\n       commit id: \"Reverse Commit with tag\" type: REVERSE tag: \"RC_1\"\n       commit id: \"Hightlight Commit\" type: HIGHLIGHT  tag: \"8.8.4\"\n      `, {});\n  });","file":"integration/rendering/gitGraph.spec.js","skipped":false,"dir":"cypress"},{"name":"5: should render a simple gitgraph with two branches","suites":["Git Graph diagram"],"updatePoint":{"line":31,"column":58,"index":1173},"line":31,"code":"  it('5: should render a simple gitgraph with two branches', () => {\n    imgSnapshotTest(`gitGraph\n       commit id: \"1\"\n       commit id: \"2\"\n       branch develop\n       checkout develop\n       commit id: \"3\"\n       commit id: \"4\"\n       checkout main\n       commit id: \"5\"\n       commit id: \"6\"\n      `, {});\n  });","file":"integration/rendering/gitGraph.spec.js","skipped":false,"dir":"cypress"},{"name":"6: should render a simple gitgraph with two branches and merge commit","suites":["Git Graph diagram"],"updatePoint":{"line":44,"column":75,"index":1508},"line":44,"code":"  it('6: should render a simple gitgraph with two branches and merge commit', () => {\n    imgSnapshotTest(`gitGraph\n       commit id: \"1\"\n       commit id: \"2\"\n       branch develop\n       checkout develop\n       commit id: \"3\"\n       commit id: \"4\"\n       checkout main\n       merge develop\n       commit id: \"5\"\n       commit id: \"6\"\n      `, {});\n  });","file":"integration/rendering/gitGraph.spec.js","skipped":false,"dir":"cypress"},{"name":"7: should render a simple gitgraph with three branches and tagged merge commit","suites":["Git Graph diagram"],"updatePoint":{"line":58,"column":84,"index":1873},"line":58,"code":"  it('7: should render a simple gitgraph with three branches and tagged merge commit', () => {\n    imgSnapshotTest(`gitGraph\n       commit id: \"1\"\n       commit id: \"2\"\n       branch nice_feature\n       checkout nice_feature\n       commit id: \"3\"\n       checkout main\n       commit id: \"4\"\n       checkout nice_feature\n       branch very_nice_feature\n       checkout very_nice_feature\n       commit id: \"5\"\n       checkout main\n       commit id: \"6\"\n       checkout nice_feature\n       commit id: \"7\"\n       checkout main\n       merge nice_feature id: \"12345\" tag: \"my merge commit\"\n       checkout very_nice_feature\n       commit id: \"8\"\n       checkout main\n       commit id: \"9\"\n      `, {});\n  });","file":"integration/rendering/gitGraph.spec.js","skipped":false,"dir":"cypress"},{"name":"8: should render a simple gitgraph with more than 8 branchs &  overriding variables","suites":["Git Graph diagram"],"updatePoint":{"line":83,"column":89,"index":2580},"line":83,"code":"  it('8: should render a simple gitgraph with more than 8 branchs &  overriding variables', () => {\n    imgSnapshotTest(`%%{init: { 'logLevel': 'debug', 'theme': 'default' , 'themeVariables': {\n        'gitBranchLabel0': '#ffffff',\n        'gitBranchLabel1': '#ffffff',\n        'gitBranchLabel2': '#ffffff',\n        'gitBranchLabel3': '#ffffff',\n        'gitBranchLabel4': '#ffffff',\n        'gitBranchLabel5': '#ffffff',\n        'gitBranchLabel6': '#ffffff',\n        'gitBranchLabel7': '#ffffff',\n  } } }%%\n  gitGraph\n    checkout main\n    branch branch1\n    branch branch2\n    branch branch3\n    branch branch4\n    branch branch5\n    branch branch6\n    branch branch7\n    branch branch8\n    branch branch9\n    checkout branch1\n    commit id: \"1\"\n      `, {});\n  });","file":"integration/rendering/gitGraph.spec.js","skipped":false,"dir":"cypress"},{"name":"9: should render a simple gitgraph with rotated labels","suites":["Git Graph diagram"],"updatePoint":{"line":109,"column":60,"index":3319},"line":109,"code":"  it('9: should render a simple gitgraph with rotated labels', () => {\n    imgSnapshotTest(`%%{init: { 'logLevel': 'debug', 'theme': 'default' , 'gitGraph': {\n        'rotateCommitLabel': true\n  } } }%%\n        gitGraph\n        commit id: \"75f7219e83b321cd3fdde7dcf83bc7c1000a6828\"\n        commit id: \"0db4784daf82736dec4569e0dc92980d328c1f2e\"\n        commit id: \"7067e9973f9eaa6cd4a4b723c506d1eab598e83e\"\n        commit id: \"66972321ad6c199013b5b31f03b3a86fa3f9817d\"\n      `, {});\n  });","file":"integration/rendering/gitGraph.spec.js","skipped":false,"dir":"cypress"},{"name":"10: should render a simple gitgraph with horizontal labels","suites":["Git Graph diagram"],"updatePoint":{"line":120,"column":64,"index":3811},"line":120,"code":"  it('10: should render a simple gitgraph with horizontal labels', () => {\n    imgSnapshotTest(`%%{init: { 'logLevel': 'debug', 'theme': 'default' , 'gitGraph': {\n        'rotateCommitLabel': false\n  } } }%%\n        gitGraph\n        commit id: \"Alpha\"\n        commit id: \"Beta\"\n        commit id: \"Gamma\"\n        commit id: \"Delta\"\n      `, {});\n  });","file":"integration/rendering/gitGraph.spec.js","skipped":false,"dir":"cypress"},{"name":"11: should render a simple gitgraph with cherry pick commit","suites":["Git Graph diagram"],"updatePoint":{"line":131,"column":65,"index":4164},"line":131,"code":"  it('11: should render a simple gitgraph with cherry pick commit', () => {\n    imgSnapshotTest(`\n    gitGraph\n       commit id: \"ZERO\"\n       branch develop\n       commit id:\"A\"\n       checkout main\n       commit id:\"ONE\"\n       checkout develop\n       commit id:\"B\"\n       checkout main\n       commit id:\"TWO\"\n       cherry-pick id:\"A\"\n       commit id:\"THREE\"\n       checkout develop\n       commit id:\"C\"\n      `, {});\n  });","file":"integration/rendering/gitGraph.spec.js","skipped":false,"dir":"cypress"},{"name":"11: should render a gitgraph with cherry pick commit with custom tag","suites":["Git Graph diagram"],"updatePoint":{"line":149,"column":74,"index":4601},"line":149,"code":"  it('11: should render a gitgraph with cherry pick commit with custom tag', () => {\n    imgSnapshotTest(`\n    gitGraph\n       commit id: \"ZERO\"\n       branch develop\n       commit id:\"A\"\n       checkout main\n       commit id:\"ONE\"\n       checkout develop\n       commit id:\"B\"\n       checkout main\n       commit id:\"TWO\"\n       cherry-pick id:\"A\" tag: \"snapshot\"\n       commit id:\"THREE\"\n       checkout develop\n       commit id:\"C\"\n      `, {});\n  });","file":"integration/rendering/gitGraph.spec.js","skipped":false,"dir":"cypress"},{"name":"11: should render a gitgraph with cherry pick commit with no tag","suites":["Git Graph diagram"],"updatePoint":{"line":167,"column":70,"index":5050},"line":167,"code":"  it('11: should render a gitgraph with cherry pick commit with no tag', () => {\n    imgSnapshotTest(`\n    gitGraph\n       commit id: \"ZERO\"\n       branch develop\n       commit id:\"A\"\n       checkout main\n       commit id:\"ONE\"\n       checkout develop\n       commit id:\"B\"\n       checkout main\n       commit id:\"TWO\"\n       cherry-pick id:\"A\" tag: \"\"\n       commit id:\"THREE\"\n       checkout develop\n       commit id:\"C\"\n      `, {});\n  });","file":"integration/rendering/gitGraph.spec.js","skipped":false,"dir":"cypress"},{"name":"11: should render a simple gitgraph with two cherry pick commit","suites":["Git Graph diagram"],"updatePoint":{"line":185,"column":69,"index":5490},"line":185,"code":"  it('11: should render a simple gitgraph with two cherry pick commit', () => {\n    imgSnapshotTest(`\n    gitGraph\n       commit id: \"ZERO\"\n       branch develop\n       commit id:\"A\"\n       checkout main\n       commit id:\"ONE\"\n       checkout develop\n       commit id:\"B\"\n       branch featureA\n       commit id:\"FIX\"\n       commit id: \"FIX-2\"\n       checkout main\n       commit id:\"TWO\"\n       cherry-pick id:\"A\"\n       commit id:\"THREE\"\n       cherry-pick id:\"FIX\"\n       checkout develop\n       commit id:\"C\"\n       merge featureA\n      `, {});\n  });","file":"integration/rendering/gitGraph.spec.js","skipped":false,"dir":"cypress"},{"name":"12: should render commits for more than 8 branches","suites":["Git Graph diagram"],"updatePoint":{"line":208,"column":56,"index":6031},"line":208,"code":"  it('12: should render commits for more than 8 branches', () => {\n    imgSnapshotTest(`\n      gitGraph\n      checkout main\n      %% Make sure to manually set the ID of all commits, for consistent visual tests\n      commit id: \"1-abcdefg\"\n      checkout main\n      branch branch1\n      commit id: \"2-abcdefg\"\n      checkout main\n      merge branch1\n      branch branch2\n      commit id: \"3-abcdefg\"\n      checkout main\n      merge branch2\n      branch branch3\n      commit id: \"4-abcdefg\"\n      checkout main\n      merge branch3\n      branch branch4\n      commit id: \"5-abcdefg\"\n      checkout main\n      merge branch4\n      branch branch5\n      commit id: \"6-abcdefg\"\n      checkout main\n      merge branch5\n      branch branch6\n      commit id: \"7-abcdefg\"\n      checkout main\n      merge branch6\n      branch branch7\n      commit id: \"8-abcdefg\"\n      checkout main\n      merge branch7\n      branch branch8\n      commit id: \"9-abcdefg\"\n      checkout main\n      merge branch8\n      branch branch9\n      commit id: \"10-abcdefg\"\n      `, {});\n  });","file":"integration/rendering/gitGraph.spec.js","skipped":false,"dir":"cypress"},{"name":"13: should render a simple gitgraph with three branches,custom merge commit id,tag,type","suites":["Git Graph diagram"],"updatePoint":{"line":251,"column":93,"index":7118},"line":251,"code":"  it('13: should render a simple gitgraph with three branches,custom merge commit id,tag,type', () => {\n    imgSnapshotTest(`gitGraph\n       commit id: \"1\"\n       commit id: \"2\"\n       branch nice_feature\n       checkout nice_feature\n       commit id: \"3\"\n       checkout main\n       commit id: \"4\"\n       checkout nice_feature\n       branch very_nice_feature\n       checkout very_nice_feature\n       commit id: \"5\"\n       checkout main\n       commit id: \"6\"\n       checkout nice_feature\n       commit id: \"7\"\n       checkout main\n       merge nice_feature id: \"customID\" tag: \"customTag\" type: REVERSE\n       checkout very_nice_feature\n       commit id: \"8\"\n       checkout main\n       commit id: \"9\"\n      `, {});\n  });","file":"integration/rendering/gitGraph.spec.js","skipped":false,"dir":"cypress"},{"name":"1433: should render a simple gitgraph with a title","suites":["Git Graph diagram"],"updatePoint":{"line":276,"column":56,"index":7803},"line":276,"code":"  it('1433: should render a simple gitgraph with a title', () => {\n    imgSnapshotTest(`---\ntitle: simple gitGraph\n---\ngitGraph\n  commit id: \"1-abcdefg\"\n`, {});\n  });","file":"integration/rendering/gitGraph.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a simple info diagrams","suites":["Sequencediagram"],"updatePoint":{"line":3,"column":42,"index":136},"line":3,"code":"  it('should render a simple info diagrams', () => {\n    imgSnapshotTest(`\n    info\n       showInfo\n      `, {});\n  });","file":"integration/rendering/info.spec.js","skipped":false,"dir":"cypress"},{"name":"Simple test","suites":["User journey diagram"],"updatePoint":{"line":3,"column":17,"index":129},"line":3,"code":"  it('Simple test', () => {\n    imgSnapshotTest(`journey\ntitle Adding journey diagram functionality to mermaid\nsection Order from website\n    `, {});\n  });","file":"integration/rendering/journey.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a user journey chart","suites":["User journey diagram"],"updatePoint":{"line":9,"column":40,"index":308},"line":9,"code":"  it('should render a user journey chart', () => {\n    imgSnapshotTest(`\n    journey\n    title My working day\n    section Go to work\n      Make tea: 5: Me\n      Go upstairs: 3: Me\n      Do work: 1: Me, Cat\n    section Go home\n      Go downstairs: 5: Me\n      Sit down: 3: Me\n      `, {});\n  });","file":"integration/rendering/journey.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a user journey diagram when useMaxWidth is true (default)","suites":["User journey diagram"],"updatePoint":{"line":22,"column":77,"index":640},"line":22,"code":"  it('should render a user journey diagram when useMaxWidth is true (default)', () => {\n    renderGraph(`journey\ntitle E-Commerce\nsection Order from website\n  Add to cart: 5: Me\nsection Checkout from website\n  Add payment details: 5: Me\n    `, {\n      journey: {\n        useMaxWidth: true\n      }\n    });\n    cy.get('svg').should(svg => {\n      expect(svg).to.have.attr('width', '100%');\n      expect(svg).to.have.attr('height');\n      // const height = parseFloat(svg.attr('height'));\n      // expect(height).to.eq(565);\n      const style = svg.attr('style');\n      expect(style).to.match(/^max-width: [\\d.]+px;$/);\n      const maxWidthValue = parseFloat(style.match(/[\\d.]+/g).join(''));\n      expect(maxWidthValue).to.eq(700);\n    });\n  });","file":"integration/rendering/journey.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a user journey diagram when useMaxWidth is false","suites":["User journey diagram"],"updatePoint":{"line":45,"column":68,"index":1375},"line":45,"code":"  it('should render a user journey diagram when useMaxWidth is false', () => {\n    imgSnapshotTest(`journey\ntitle E-Commerce\nsection Order from website\n  Add to cart: 5: Me\nsection Checkout from website\n  Add payment details: 5: Me\n    `, {\n      journey: {\n        useMaxWidth: false\n      }\n    });\n  });","file":"integration/rendering/journey.spec.js","skipped":false,"dir":"cypress"},{"name":"Only a root","suites":["Mindmaps"],"updatePoint":{"line":20,"column":17,"index":660},"line":20,"code":"  it('Only a root', () => {\n    imgSnapshotTest(`mindmap\nroot\n    `, {}, undefined, shouldHaveRoot);\n  });","file":"integration/rendering/mindmap.spec.ts","skipped":false,"dir":"cypress"},{"name":"a root with a shape","suites":["Mindmaps"],"updatePoint":{"line":25,"column":25,"index":775},"line":25,"code":"  it('a root with a shape', () => {\n    imgSnapshotTest(`mindmap\nroot[root]\n    `, {}, undefined, shouldHaveRoot);\n  });","file":"integration/rendering/mindmap.spec.ts","skipped":false,"dir":"cypress"},{"name":"a root with wrapping text and a shape","suites":["Mindmaps"],"updatePoint":{"line":30,"column":43,"index":914},"line":30,"code":"  it('a root with wrapping text and a shape', () => {\n    imgSnapshotTest(`mindmap\nroot[A root with a long text that wraps to keep the node size in check]\n    `, {}, undefined, shouldHaveRoot);\n  });","file":"integration/rendering/mindmap.spec.ts","skipped":false,"dir":"cypress"},{"name":"a root with an icon","suites":["Mindmaps"],"updatePoint":{"line":35,"column":25,"index":1096},"line":35,"code":"  it('a root with an icon', () => {\n    imgSnapshotTest(`mindmap\nroot[root]\n::icon(mdi mdi-fire)\n    `, {}, undefined, shouldHaveRoot);\n  });","file":"integration/rendering/mindmap.spec.ts","skipped":false,"dir":"cypress"},{"name":"Blang and cloud shape","suites":["Mindmaps"],"updatePoint":{"line":41,"column":27,"index":1240},"line":41,"code":"  it('Blang and cloud shape', () => {\n    imgSnapshotTest(`mindmap\nroot))bang((\n  ::icon(mdi mdi-fire)\n  a))Another bang((\n  ::icon(mdi mdi-fire)\n  a)A cloud(\n  ::icon(mdi mdi-fire)\n    `, {}, undefined, shouldHaveRoot);\n  });","file":"integration/rendering/mindmap.spec.ts","skipped":false,"dir":"cypress"},{"name":"Blang and cloud shape with icons","suites":["Mindmaps"],"updatePoint":{"line":51,"column":38,"index":1478},"line":51,"code":"  it('Blang and cloud shape with icons', () => {\n    imgSnapshotTest(`mindmap\nroot))bang((\n\n  a))Another bang((\n  a)A cloud(\n    `, {}, undefined, shouldHaveRoot);\n  });","file":"integration/rendering/mindmap.spec.ts","skipped":false,"dir":"cypress"},{"name":"braches","suites":["Mindmaps"],"updatePoint":{"line":59,"column":13,"index":1623},"line":59,"code":"  it('braches', () => {\n    imgSnapshotTest(`mindmap\nroot\n  child1\n      grandchild 1\n      grandchild 2\n  child2\n      grandchild 3\n      grandchild 4\n  child3\n      grandchild 5\n      grandchild 6\n    `, {}, undefined, shouldHaveRoot);\n  });","file":"integration/rendering/mindmap.spec.ts","skipped":false,"dir":"cypress"},{"name":"braches with shapes and labels","suites":["Mindmaps"],"updatePoint":{"line":73,"column":36,"index":1890},"line":73,"code":"  it('braches with shapes and labels', () => {\n    imgSnapshotTest(`mindmap\nroot\n  child1((Circle))\n      grandchild 1\n      grandchild 2\n  child2(Round rectangle)\n      grandchild 3\n      grandchild 4\n  child3[Square]\n      grandchild 5\n      ::icon(mdi mdi-fire)\n      gc6((grand<br/>child 6))\n      ::icon(mdi mdi-fire)\n    `, {}, undefined, shouldHaveRoot);\n  });","file":"integration/rendering/mindmap.spec.ts","skipped":false,"dir":"cypress"},{"name":"text shouhld wrap with icon","suites":["Mindmaps"],"updatePoint":{"line":89,"column":33,"index":2255},"line":89,"code":"  it('text shouhld wrap with icon', () => {\n    imgSnapshotTest(`mindmap\nroot\n  Child3(A node with an icon and with a long text that wraps to keep the node size in check)\n    `, {}, undefined, shouldHaveRoot);\n  });","file":"integration/rendering/mindmap.spec.ts","skipped":false,"dir":"cypress"},{"name":"square shape","suites":["Mindmaps"],"updatePoint":{"line":95,"column":18,"index":2456},"line":95,"code":"  it('square shape', () => {\n    imgSnapshotTest(`\nmindmap\n    root[\n      The root\n    ]\n      `, {}, undefined, shouldHaveRoot);\n    cy.get('svg');\n  });","file":"integration/rendering/mindmap.spec.ts","skipped":false,"dir":"cypress"},{"name":"rounded rect shape","suites":["Mindmaps"],"updatePoint":{"line":104,"column":24,"index":2618},"line":104,"code":"  it('rounded rect shape', () => {\n    imgSnapshotTest(`\nmindmap\n    root((\n      The root\n    ))\n      `, {}, undefined, shouldHaveRoot);\n    cy.get('svg');\n  });","file":"integration/rendering/mindmap.spec.ts","skipped":false,"dir":"cypress"},{"name":"circle shape","suites":["Mindmaps"],"updatePoint":{"line":113,"column":18,"index":2776},"line":113,"code":"  it('circle shape', () => {\n    imgSnapshotTest(`\nmindmap\n    root(\n      The root\n    )\n      `, {}, undefined, shouldHaveRoot);\n    cy.get('svg');\n  });","file":"integration/rendering/mindmap.spec.ts","skipped":false,"dir":"cypress"},{"name":"default shape","suites":["Mindmaps"],"updatePoint":{"line":122,"column":19,"index":2933},"line":122,"code":"  it('default shape', () => {\n    imgSnapshotTest(`\nmindmap\n  The root\n      `, {}, undefined, shouldHaveRoot);\n    cy.get('svg');\n  });","file":"integration/rendering/mindmap.spec.ts","skipped":false,"dir":"cypress"},{"name":"adding children","suites":["Mindmaps"],"updatePoint":{"line":129,"column":21,"index":3072},"line":129,"code":"  it('adding children', () => {\n    imgSnapshotTest(`\nmindmap\n  The root\n    child1\n    child2\n      `, {}, undefined, shouldHaveRoot);\n    cy.get('svg');\n  });","file":"integration/rendering/mindmap.spec.ts","skipped":false,"dir":"cypress"},{"name":"adding grand children","suites":["Mindmaps"],"updatePoint":{"line":138,"column":27,"index":3239},"line":138,"code":"  it('adding grand children', () => {\n    imgSnapshotTest(`\nmindmap\n  The root\n    child1\n      child2\n      child3\n      `, {}, undefined, shouldHaveRoot);\n    cy.get('svg');\n  });","file":"integration/rendering/mindmap.spec.ts","skipped":false,"dir":"cypress"},{"name":"should render a simple pie diagram","suites":["Pie Chart"],"updatePoint":{"line":3,"column":40,"index":141},"line":3,"code":"  it('should render a simple pie diagram', () => {\n    imgSnapshotTest(`\n    pie title Sports in Sweden\n       \"Bandy\" : 40\n       \"Ice-Hockey\" : 80\n       \"Football\" : 90\n      `, {});\n    cy.get('svg');\n  });","file":"integration/rendering/pie.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a simple pie diagram with long labels","suites":["Pie Chart"],"updatePoint":{"line":12,"column":57,"index":369},"line":12,"code":"  it('should render a simple pie diagram with long labels', () => {\n    imgSnapshotTest(`\n      pie title NETFLIX\n         \"Time spent looking for movie\" : 90\n         \"Time spent watching it\" : 10\n        `, {});\n    cy.get('svg');\n  });","file":"integration/rendering/pie.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a simple pie diagram with capital letters for labels","suites":["Pie Chart"],"updatePoint":{"line":20,"column":72,"index":623},"line":20,"code":"  it('should render a simple pie diagram with capital letters for labels', () => {\n    imgSnapshotTest(`\n      pie title What Voldemort doesn't have?\n         \"FRIENDS\" : 2\n         \"FAMILY\" : 3\n         \"NOSE\" : 45\n        `, {});\n    cy.get('svg');\n  });","file":"integration/rendering/pie.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a pie diagram when useMaxWidth is true (default)","suites":["Pie Chart"],"updatePoint":{"line":29,"column":68,"index":876},"line":29,"code":"  it('should render a pie diagram when useMaxWidth is true (default)', () => {\n    renderGraph(`\n    pie title Sports in Sweden\n       \"Bandy\" : 40\n       \"Ice-Hockey\" : 80\n       \"Football\" : 90\n      `, {\n      pie: {\n        useMaxWidth: true\n      }\n    });\n    cy.get('svg').should(svg => {\n      expect(svg).to.have.attr('width', '100%');\n      // expect(svg).to.have.attr('height');\n      // const height = parseFloat(svg.attr('height'));\n      // expect(height).to.eq(450);\n      const style = svg.attr('style');\n      expect(style).to.match(/^max-width: [\\d.]+px;$/);\n      const maxWidthValue = parseFloat(style.match(/[\\d.]+/g).join(''));\n      expect(maxWidthValue).to.eq(984);\n    });\n  });","file":"integration/rendering/pie.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a pie diagram when useMaxWidth is false","suites":["Pie Chart"],"updatePoint":{"line":51,"column":59,"index":1571},"line":51,"code":"  it('should render a pie diagram when useMaxWidth is false', () => {\n    renderGraph(`\n    pie title Sports in Sweden\n       \"Bandy\" : 40\n       \"Ice-Hockey\" : 80\n       \"Football\" : 90\n      `, {\n      pie: {\n        useMaxWidth: false\n      }\n    });\n    cy.get('svg').should(svg => {\n      // const height = parseFloat(svg.attr('height'));\n      const width = parseFloat(svg.attr('width'));\n      // expect(height).to.eq(450);\n      expect(width).to.eq(984);\n      expect(svg).to.not.have.attr('style');\n    });\n  });","file":"integration/rendering/pie.spec.js","skipped":false,"dir":"cypress"},{"name":"sample","suites":["Requirement diagram"],"updatePoint":{"line":3,"column":12,"index":123},"line":3,"code":"  it('sample', () => {\n    imgSnapshotTest(`\n    requirementDiagram\n\n    requirement test_req {\n    id: 1\n    text: the test text.\n    risk: high\n    verifymethod: test\n    }\n\n    functionalRequirement test_req2 {\n    id: 1.1\n    text: the second test text.\n    risk: low\n    verifymethod: inspection\n    }\n\n    performanceRequirement test_req3 {\n    id: 1.2\n    text: the third test text.\n    risk: medium\n    verifymethod: demonstration\n    }\n\n    element test_entity {\n    type: simulation\n    }\n\n    element test_entity2 {\n    type: word doc\n    docRef: reqs/test_entity\n    }\n\n\n    test_entity - satisfies -> test_req2\n    test_req - traces -> test_req2\n    test_req - contains -> test_req3\n    test_req <- copies - test_entity2\n      `, {});\n    cy.get('svg');\n  });","file":"integration/rendering/requirement.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a simple sequence diagram","suites":[],"updatePoint":{"line":5,"column":45,"index":184},"line":5,"code":"  it('should render a simple sequence diagram', () => {\n    imgSnapshotTest(`\n      sequenceDiagram\n        participant Alice\n        participant Bob\n        participant John as John<br/>Second Line\n        Alice ->> Bob: Hello Bob, how are you?\n        Bob-->>John: How about you John?\n        Bob--x Alice: I am good thanks!\n        Bob-x John: I am good thanks!\n        Note right of John: Bob thinks a long<br/>long time, so long<br/>that the text does<br/>not fit on a row.\n        Bob-->Alice: Checking with John...\n        alt either this\n          Alice->>John: Yes\n          else or this\n          Alice->>John: No\n          else or this will happen\n          Alice->John: Maybe\n        end\n        par this happens in parallel\n        Alice -->> Bob: Parallel message 1\n        and\n        Alice -->> John: Parallel message 2\n        end\n      `, {\n      sequence: {\n        actorFontFamily: 'courier'\n      }\n    });\n  });","file":"integration/rendering/sequencediagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should handle different line breaks","suites":[],"updatePoint":{"line":35,"column":41,"index":1114},"line":35,"code":"  it('should handle different line breaks', () => {\n    imgSnapshotTest(`\n      sequenceDiagram\n      participant 1 as multiline<br>using #lt;br#gt;\n      participant 2 as multiline<br/>using #lt;br/#gt;\n      participant 3 as multiline<br />using #lt;br /#gt;\n      participant 4 as multiline<br \\t/>using #lt;br \\t/#gt;\n      1->>2: multiline<br>using #lt;br#gt;\n      note right of 2: multiline<br>using #lt;br#gt;\n      2->>3: multiline<br/>using #lt;br/#gt;\n      note right of 3: multiline<br/>using #lt;br/#gt;\n      3->>4: multiline<br />using #lt;br /#gt;\n      note right of 4: multiline<br />using #lt;br /#gt;\n      4->>1: multiline<br />using #lt;br /#gt;\n      note right of 1: multiline<br \\t/>using #lt;br \\t/#gt;\n    `, {});\n  });","file":"integration/rendering/sequencediagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should handle line breaks and wrap annotations","suites":[],"updatePoint":{"line":52,"column":52,"index":1873},"line":52,"code":"  it('should handle line breaks and wrap annotations', () => {\n    imgSnapshotTest(`\n      sequenceDiagram\n      participant Alice\n      participant Bob\n      participant John as John<br/>Second Line\n      Alice ->> Bob: Hello Bob, how are you?\n      Bob-->>John: How about you John?\n      Note right of John: John thinks a long<br/>long time, so long<br/>that the text does<br/>not fit on a row.\n      Bob-->Alice: Checking with John...\n      Note over John:wrap: John looks like he's still thinking, so Bob prods him a bit.\n      Bob-x John: Hey John -<br/>we're still waiting to know<br/>how you're doing\n      Note over John:nowrap: John's trying hard not to break his train of thought.\n      Bob-x John:wrap: John! Are you still debating about how you're doing? How long does it take??\n      Note over John: After a few more moments, John<br/>finally snaps out of it.\n    `, {});\n  });","file":"integration/rendering/sequencediagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render loops with a slight margin","suites":[],"updatePoint":{"line":69,"column":46,"index":2758},"line":69,"code":"  it('should render loops with a slight margin', () => {\n    imgSnapshotTest(`\n        sequenceDiagram\n        Alice->>Bob: Extremely utterly long line of longness which had previously overflown the actor box as it is much longer than what it should be\n        loop Loopy\n            Bob->>Alice: Pasten\n        end      `, {\n      wrap: true\n    });\n  });","file":"integration/rendering/sequencediagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render different note fonts when configured","suites":[],"updatePoint":{"line":80,"column":58,"index":3162},"line":80,"code":"    it('should render different note fonts when configured', () => {\n      imgSnapshotTest(`\n        sequenceDiagram\n        Alice->>Bob: I'm short\n        note left of Alice: I should have bigger fonts\n        Bob->>Alice: Short as well\n      `, {\n        sequence: {\n          noteFontSize: 18,\n          noteFontFamily: 'Arial'\n        }\n      });\n    });","file":"integration/rendering/sequencediagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render different message fonts when configured","suites":[],"updatePoint":{"line":93,"column":61,"index":3524},"line":93,"code":"    it('should render different message fonts when configured', () => {\n      imgSnapshotTest(`\n        sequenceDiagram\n        Alice->>Bob: I'm short\n        Bob->>Alice: Short as well\n      `, {\n        sequence: {\n          messageFontSize: 18,\n          messageFontFamily: 'Arial'\n        }\n      });\n    });","file":"integration/rendering/sequencediagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render different actor fonts when configured","suites":[],"updatePoint":{"line":105,"column":59,"index":3835},"line":105,"code":"    it('should render different actor fonts when configured', () => {\n      imgSnapshotTest(`\n        sequenceDiagram\n        Alice->>Bob: I'm short\n        Bob->>Alice: Short as well\n      `, {\n        sequence: {\n          actorFontSize: 18,\n          actorFontFamily: 'times'\n        }\n      });\n    });","file":"integration/rendering/sequencediagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render notes aligned to the left when configured","suites":[],"updatePoint":{"line":117,"column":63,"index":4146},"line":117,"code":"    it('should render notes aligned to the left when configured', () => {\n      imgSnapshotTest(`\n        sequenceDiagram\n        Alice->>Bob: I'm short\n        note left of Alice: I am left aligned\n        Bob->>Alice: Short as well\n      `, {\n        sequence: {\n          noteAlign: 'left'\n        }\n      });\n    });","file":"integration/rendering/sequencediagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render multi-line notes aligned to the left when configured","suites":[],"updatePoint":{"line":129,"column":74,"index":4478},"line":129,"code":"    it('should render multi-line notes aligned to the left when configured', () => {\n      imgSnapshotTest(`\n        sequenceDiagram\n        Alice->>Bob: I'm short\n        note left of Alice: I am left aligned<br>but also<br>multiline\n        Bob->>Alice: Short as well\n      `, {\n        sequence: {\n          noteAlign: 'left'\n        }\n      });\n    });","file":"integration/rendering/sequencediagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render notes aligned to the right when configured","suites":[],"updatePoint":{"line":141,"column":64,"index":4825},"line":141,"code":"    it('should render notes aligned to the right when configured', () => {\n      imgSnapshotTest(`\n        sequenceDiagram\n        Alice->>Bob: I'm short\n        note left of Alice: I am right aligned\n        Bob->>Alice: Short as well\n      `, {\n        sequence: {\n          noteAlign: 'right'\n        }\n      });\n    });","file":"integration/rendering/sequencediagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render multi-line notes aligned to the right when configured","suites":[],"updatePoint":{"line":153,"column":75,"index":5160},"line":153,"code":"    it('should render multi-line notes aligned to the right when configured', () => {\n      imgSnapshotTest(`\n        sequenceDiagram\n        Alice->>Bob: I'm short\n        note left of Alice: I am right aligned<br>but also<br>multiline\n        Bob->>Alice: Short as well\n      `, {\n        sequence: {\n          noteAlign: 'right'\n        }\n      });\n    });","file":"integration/rendering/sequencediagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render multi-line messages aligned to the left when configured","suites":[],"updatePoint":{"line":165,"column":77,"index":5522},"line":165,"code":"    it('should render multi-line messages aligned to the left when configured', () => {\n      imgSnapshotTest(`\n        sequenceDiagram\n        Alice->>Bob: I'm short<br>but also<br>multiline\n        Bob->>Alice: Short as well<br>and also<br>multiline\n      `, {\n        sequence: {\n          messageAlign: 'left'\n        }\n      });\n    });","file":"integration/rendering/sequencediagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render multi-line messages aligned to the right when configured","suites":[],"updatePoint":{"line":176,"column":78,"index":5865},"line":176,"code":"    it('should render multi-line messages aligned to the right when configured', () => {\n      imgSnapshotTest(`\n        sequenceDiagram\n        Alice->>Bob: I'm short<br>but also<br>multiline\n        Bob->>Alice: Short as well<br>and also<br>multiline\n      `, {\n        sequence: {\n          messageAlign: 'right'\n        }\n      });\n    });","file":"integration/rendering/sequencediagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render long actor descriptions","suites":[],"updatePoint":{"line":189,"column":45,"index":6222},"line":189,"code":"    it('should render long actor descriptions', () => {\n      imgSnapshotTest(`\n        sequenceDiagram\n        participant A as Extremely utterly long line of longness which had previously overflown the actor box as it is much longer than what it should be\n        A->>Bob: Hola\n        Bob-->A: Pasten !\n      `, {\n        logLevel: 0\n      });\n    });","file":"integration/rendering/sequencediagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should wrap (inline) long actor descriptions","suites":[],"updatePoint":{"line":199,"column":52,"index":6584},"line":199,"code":"    it('should wrap (inline) long actor descriptions', () => {\n      imgSnapshotTest(`\n        sequenceDiagram\n        participant A as wrap:Extremely utterly long line of longness which had previously overflown the actor box as it is much longer than what it should be\n        A->>Bob: Hola\n        Bob-->A: Pasten !\n      `, {\n        logLevel: 0\n      });\n    });","file":"integration/rendering/sequencediagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should wrap (directive) long actor descriptions","suites":[],"updatePoint":{"line":209,"column":55,"index":6954},"line":209,"code":"    it('should wrap (directive) long actor descriptions', () => {\n      imgSnapshotTest(`\n        %%{init: {'config': {'wrap': true }}}%%\n        sequenceDiagram\n        participant A as Extremely utterly long line of longness which had previously overflown the actor box as it is much longer than what it should be\n        A->>Bob: Hola\n        Bob-->A: Pasten !\n      `, {});\n    });","file":"integration/rendering/sequencediagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should be possible to use actor symbols instead of boxes","suites":[],"updatePoint":{"line":218,"column":64,"index":7349},"line":218,"code":"    it('should be possible to use actor symbols instead of boxes', () => {\n      imgSnapshotTest(`\n        sequenceDiagram\n          actor Alice\n          actor Bob\n          Alice->>Bob: Hi Bob\n          Bob->>Alice: Hi Alice\n      `, {});\n    });","file":"integration/rendering/sequencediagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render long notes left of actor","suites":[],"updatePoint":{"line":227,"column":46,"index":7580},"line":227,"code":"    it('should render long notes left of actor', () => {\n      imgSnapshotTest(`\n        sequenceDiagram\n        Alice->>Bob: Hola\n        Note left of Alice: Extremely utterly long line of longness which had previously overflown the actor box as it is much longer than what it should be\n        Bob->>Alice: I'm short though\n      `, {});\n    });","file":"integration/rendering/sequencediagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render long notes wrapped (inline) left of actor","suites":[],"updatePoint":{"line":235,"column":63,"index":7945},"line":235,"code":"    it('should render long notes wrapped (inline) left of actor', () => {\n      imgSnapshotTest(`\n        sequenceDiagram\n        Alice->>Bob: Hola\n        Note left of Alice:wrap: Extremely utterly long line of longness which had previously overflown the actor box as it is much longer than what it should be\n        Bob->>Alice: I'm short though\n      `, {});\n    });","file":"integration/rendering/sequencediagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render long notes right of actor","suites":[],"updatePoint":{"line":243,"column":47,"index":8299},"line":243,"code":"    it('should render long notes right of actor', () => {\n      imgSnapshotTest(`\n        sequenceDiagram\n        Alice->>Bob: Hola\n        Note right of Alice: Extremely utterly long line of longness which had previously overflown the actor box as it is much longer than what it should be\n        Bob->>Alice: I'm short though\n      `, {});\n    });","file":"integration/rendering/sequencediagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render long notes wrapped (inline) right of actor","suites":[],"updatePoint":{"line":251,"column":64,"index":8666},"line":251,"code":"    it('should render long notes wrapped (inline) right of actor', () => {\n      imgSnapshotTest(`\n        sequenceDiagram\n        Alice->>Bob: Hola\n        Note right of Alice:wrap: Extremely utterly long line of longness which had previously overflown the actor box as it is much longer than what it should be\n        Bob->>Alice: I'm short though\n      `, {});\n    });","file":"integration/rendering/sequencediagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render long notes over actor","suites":[],"updatePoint":{"line":259,"column":43,"index":9017},"line":259,"code":"    it('should render long notes over actor', () => {\n      imgSnapshotTest(`\n        sequenceDiagram\n        Alice->>Bob: Hola\n        Note over Alice: Extremely utterly long line of longness which had previously overflown the actor box as it is much longer than what it should be\n        Bob->>Alice: I'm short though\n      `, {});\n    });","file":"integration/rendering/sequencediagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render long notes wrapped (inline) over actor","suites":[],"updatePoint":{"line":267,"column":60,"index":9376},"line":267,"code":"    it('should render long notes wrapped (inline) over actor', () => {\n      imgSnapshotTest(`\n        sequenceDiagram\n        Alice->>Bob: Hola\n        Note over Alice:wrap: Extremely utterly long line of longness which had previously overflown the actor box as it is much longer than what it should be\n        Bob->>Alice: I'm short though\n      `, {});\n    });","file":"integration/rendering/sequencediagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render long messages from an actor to the left to one to the right","suites":[],"updatePoint":{"line":275,"column":81,"index":9761},"line":275,"code":"    it('should render long messages from an actor to the left to one to the right', () => {\n      imgSnapshotTest(`\n        sequenceDiagram\n        Alice->>Bob: Extremely utterly long line of longness which had previously overflown the actor box as it is much longer than what it should be\n        Bob->>Alice: I'm short though\n      `, {});\n    });","file":"integration/rendering/sequencediagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render long messages wrapped (inline) from an actor to the left to one to the right","suites":[],"updatePoint":{"line":282,"column":98,"index":10128},"line":282,"code":"    it('should render long messages wrapped (inline) from an actor to the left to one to the right', () => {\n      imgSnapshotTest(`\n        sequenceDiagram\n        Alice->>Bob:wrap:Extremely utterly long line of longness which had previously overflown the actor box as it is much longer than what it should be\n        Bob->>Alice: I'm short though\n      `, {});\n    });","file":"integration/rendering/sequencediagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render long messages from an actor to the right to one to the left","suites":[],"updatePoint":{"line":289,"column":81,"index":10482},"line":289,"code":"    it('should render long messages from an actor to the right to one to the left', () => {\n      imgSnapshotTest(`\n        sequenceDiagram\n        Alice->>Bob: I'm short\n        Bob->>Alice: Extremely utterly long line of longness which had previously overflown the actor box as it is much longer than what it should be\n      `, {});\n    });","file":"integration/rendering/sequencediagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render long messages wrapped (inline) from an actor to the right to one to the left","suites":[],"updatePoint":{"line":296,"column":98,"index":10842},"line":296,"code":"    it('should render long messages wrapped (inline) from an actor to the right to one to the left', () => {\n      imgSnapshotTest(`\n        sequenceDiagram\n        Alice->>Bob: I'm short\n        Bob->>Alice:wrap: Extremely utterly long line of longness which had previously overflown the actor box as it is much longer than what it should be\n      `, {});\n    });","file":"integration/rendering/sequencediagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a single and nested rects","suites":[],"updatePoint":{"line":305,"column":47,"index":11200},"line":305,"code":"    it('should render a single and nested rects', () => {\n      imgSnapshotTest(`\n        sequenceDiagram\n          participant A\n          participant B\n          participant C\n          participant D\n          participant E\n          participant G\n\n          A ->>+ B: Task 1\n          rect rgb(178, 102, 255)\n            B ->>+ C: Task 2\n            C -->>- B: Return\n          end\n\n          A ->> D: Task 3\n          rect rgb(0, 128, 255)\n            D ->>+ E: Task 4\n            rect rgb(0, 204, 0)\n            E ->>+ G: Task 5\n            G -->>- E: Return\n            end\n            E ->> E: Task 6\n          end\n          D -->> A: Complete\n      `, {});\n    });","file":"integration/rendering/sequencediagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a single and nested opt with long test overflowing","suites":[],"updatePoint":{"line":333,"column":72,"index":11898},"line":333,"code":"    it('should render a single and nested opt with long test overflowing', () => {\n      imgSnapshotTest(`\n        sequenceDiagram\n          participant A\n          participant B\n          participant C\n          participant D\n          participant E\n          participant G\n\n          A ->>+ B: Task 1\n          opt this is an opt with a long title that will overflow\n            B ->>+ C: Task 2\n            C -->>- B: Return\n          end\n\n          A ->> D: Task 3\n          opt this is another opt with a long title that will overflow\n            D ->>+ E: Task 4\n            opt this is a nested opt with a long title that will overflow\n            E ->>+ G: Task 5\n            G -->>- E: Return\n            end\n            E ->> E: Task 6\n          end\n          D -->> A: Complete\n      `, {});\n    });","file":"integration/rendering/sequencediagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a single and nested opt with long test wrapping","suites":[],"updatePoint":{"line":361,"column":69,"index":12706},"line":361,"code":"    it('should render a single and nested opt with long test wrapping', () => {\n      imgSnapshotTest(`\n        %%{init: { 'config': { 'wrap': true } } }%%\n        sequenceDiagram\n          participant A\n          participant B\n          participant C\n          participant D\n          participant E\n          participant G\n\n          A ->>+ B: Task 1\n          opt this is an opt with a long title that will overflow\n            B ->>+ C: Task 2\n            C -->>- B: Return\n          end\n\n          A ->> D: Task 3\n          opt this is another opt with a long title that will overflow\n            D ->>+ E: Task 4\n            opt this is a nested opt with a long title that will overflow\n            E ->>+ G: Task 5\n            G -->>- E: Return\n            end\n            E ->> E: Task 6\n          end\n          D -->> A: Complete\n      `, {});\n    });","file":"integration/rendering/sequencediagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render rect around and inside loops","suites":[],"updatePoint":{"line":390,"column":50,"index":13547},"line":390,"code":"    it('should render rect around and inside loops', () => {\n      imgSnapshotTest(`\n        sequenceDiagram\n          A ->> B: 1\n          rect rgb(204, 0, 102)\n            loop check C\n              C ->> C: Every 10 seconds\n            end\n          end\n          A ->> B: 2\n          loop check D\n            C ->> D: 3\n            rect rgb(153, 153, 255)\n            D -->> D: 5\n            D --> C: 4\n            end\n          end\n      `, {});\n    });","file":"integration/rendering/sequencediagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render rect around and inside alts","suites":[],"updatePoint":{"line":409,"column":49,"index":14005},"line":409,"code":"    it('should render rect around and inside alts', () => {\n      imgSnapshotTest(`\n        sequenceDiagram\n          A ->> B: 1\n          rect rgb(204, 0, 102)\n            alt yes\n              C ->> C: 1\n            else no\n              rect rgb(0, 204, 204)\n                C ->> C: 0\n              end\n            end\n          end\n          B ->> A: Return\n      `, {});\n    });","file":"integration/rendering/sequencediagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render rect around and inside opts","suites":[],"updatePoint":{"line":425,"column":49,"index":14390},"line":425,"code":"    it('should render rect around and inside opts', () => {\n      imgSnapshotTest(`\n        sequenceDiagram\n          A ->> B: 1\n          rect rgb(204, 0, 102)\n            opt maybe\n              C -->> D: Do something\n              rect rgb(0, 204, 204)\n                C ->> C: 0\n              end\n            end\n          end\n\n          opt possibly\n            rect rgb(0, 204, 204)\n              C ->> C: 0\n            end\n          end\n          B ->> A: Return\n      `, {});\n    });","file":"integration/rendering/sequencediagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render rect around and inside criticals","suites":[],"updatePoint":{"line":446,"column":54,"index":14887},"line":446,"code":"    it('should render rect around and inside criticals', () => {\n      imgSnapshotTest(`\n        sequenceDiagram\n          A ->> B: 1\n          rect rgb(204, 0, 102)\n            critical yes\n              C ->> C: 1\n            option no\n              rect rgb(0, 204, 204)\n                C ->> C: 0\n              end\n            end\n          end\n          B ->> A: Return\n      `, {});\n    });","file":"integration/rendering/sequencediagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render rect around and inside breaks","suites":[],"updatePoint":{"line":462,"column":51,"index":15281},"line":462,"code":"    it('should render rect around and inside breaks', () => {\n      imgSnapshotTest(`\n        sequenceDiagram\n          A ->> B: 1\n          rect rgb(204, 0, 102)\n            break yes\n              rect rgb(0, 204, 204)\n                C ->> C: 0\n              end\n            end\n          end\n          B ->> A: Return\n      `, {});\n    });","file":"integration/rendering/sequencediagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render autonumber when configured with such","suites":[],"updatePoint":{"line":476,"column":58,"index":15632},"line":476,"code":"    it('should render autonumber when configured with such', () => {\n      imgSnapshotTest(`\n        sequenceDiagram\n        Alice->>John: Hello John, how are you?\n        loop Healthcheck\n            John->>John: Fight against hypochondria\n        end\n        Note right of John: Rational thoughts!\n        John-->>Alice: Great!\n        John->>Bob: How about you?\n        Bob-->>John: Jolly good!\n      `, {\n        sequence: {\n          actorMargin: 50,\n          showSequenceNumbers: true\n        }\n      });\n    });","file":"integration/rendering/sequencediagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render autonumber when autonumber keyword is used","suites":[],"updatePoint":{"line":494,"column":64,"index":16158},"line":494,"code":"    it('should render autonumber when autonumber keyword is used', () => {\n      imgSnapshotTest(`\n        sequenceDiagram\n        autonumber\n        Alice->>John: Hello John, how are you?\n        loop Healthcheck\n            John->>John: Fight against hypochondria\n        end\n        Note right of John: Rational thoughts!\n        John-->>Alice: Great!\n        John->>Bob: How about you?\n        Bob-->>John: Jolly good!\n      `, {});\n    });","file":"integration/rendering/sequencediagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render autonumber with different line breaks","suites":[],"updatePoint":{"line":508,"column":59,"index":16598},"line":508,"code":"    it('should render autonumber with different line breaks', () => {\n      imgSnapshotTest(`\n        sequenceDiagram\n        autonumber\n        Alice->>John: Hello John,<br>how are you?\n        Alice->>John: John,<br/>can you hear me?\n        John-->>Alice: Hi Alice,<br />I can hear you!\n        John-->>Alice: I feel great!\n      `, {});\n    });","file":"integration/rendering/sequencediagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render dark theme from init directive and configure font size 24 font","suites":[],"updatePoint":{"line":518,"column":84,"index":16972},"line":518,"code":"    it('should render dark theme from init directive and configure font size 24 font', () => {\n      imgSnapshotTest(`\n        %%{init: {'theme': 'dark', 'config': {'fontSize': 24}}}%%\n        sequenceDiagram\n        Alice->>John: Hello John, how are you?\n        Alice->>John: John, can you hear me?\n        John-->>Alice: Hi Alice, I can hear you!\n        John-->>Alice: I feel great!\n      `, {});\n    });","file":"integration/rendering/sequencediagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render with wrapping enabled","suites":[],"updatePoint":{"line":528,"column":43,"index":17340},"line":528,"code":"    it('should render with wrapping enabled', () => {\n      imgSnapshotTest(`\n        %%{init: { 'config': { 'wrap': true }}}%%\n        sequenceDiagram\n        participant A as Alice, the talkative one\n        A->>John: Hello John, how are you today? I'm feeling quite verbose today.\n        A->>John: John, can you hear me? If you are not available, we can talk later.\n        John-->>A: Hi Alice, I can hear you! I was finishing up an important meeting.\n        John-->>A: I feel great! I was not ignoring you. I am sorry you had to wait for a response.\n      `, {});\n    });","file":"integration/rendering/sequencediagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render with an init directive","suites":[],"updatePoint":{"line":539,"column":44,"index":17919},"line":539,"code":"    it('should render with an init directive', () => {\n      imgSnapshotTest(`%%{init: { \"theme\": \"dark\", 'config': { \"fontFamily\": \"Menlo\", \"fontSize\": 18, \"fontWeight\": 400, \"wrap\": true }}}%%\n          sequenceDiagram\n          Alice->>Bob: Hello Bob, how are you? If you are not available right now, I can leave you a message. Please get back to me as soon as you can!\n          Note left of Alice: Bob thinks\n          Bob->>Alice: Fine!`, {});\n    });","file":"integration/rendering/sequencediagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should override config with directive settings","suites":[],"updatePoint":{"line":548,"column":54,"index":18425},"line":548,"code":"    it('should override config with directive settings', () => {\n      imgSnapshotTest(`\n        %%{init: { \"config\": { \"mirrorActors\": true }}}%%\n        sequenceDiagram\n        Alice->>Bob: I'm short\n        note left of Alice: config set to mirrorActors: false<br/>directive set to mirrorActors: true\n        Bob->>Alice: Short as well\n      `, {\n        logLevel: 0,\n        sequence: {\n          mirrorActors: false,\n          noteFontSize: 18,\n          noteFontFamily: 'Arial'\n        }\n      });\n    });","file":"integration/rendering/sequencediagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should override config with directive settings 2","suites":[],"updatePoint":{"line":564,"column":56,"index":18939},"line":564,"code":"    it('should override config with directive settings 2', () => {\n      imgSnapshotTest(`\n        %%{init: { \"config\": { \"mirrorActors\": false, \"wrap\": true }}}%%\n        sequenceDiagram\n        Alice->>Bob: I'm short\n        note left of Alice: config: mirrorActors=true<br/>directive: mirrorActors=false\n        Bob->>Alice: Short as well\n      `, {\n        logLevel: 0,\n        sequence: {\n          mirrorActors: true,\n          noteFontSize: 18,\n          noteFontFamily: 'Arial'\n        }\n      });\n    });","file":"integration/rendering/sequencediagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should support actor links and properties EXPERIMENTAL: USE WITH CAUTION","suites":[],"updatePoint":{"line":582,"column":80,"index":19510},"line":582,"code":"    it('should support actor links and properties EXPERIMENTAL: USE WITH CAUTION', () => {\n      //Be aware that the syntax for \"properties\" is likely to be changed.\n      imgSnapshotTest(`\n        %%{init: { \"config\": { \"mirrorActors\": true, \"forceMenus\": true }}}%%\n        sequenceDiagram\n        participant a as Alice\n        participant j as John\n        note right of a: Hello world!\n        properties a: {\"class\": \"internal-service-actor\", \"type\": \"@clock\"}\n        properties j: {\"class\": \"external-service-actor\", \"type\": \"@computer\"}\n        links a: {\"Repo\": \"https://www.contoso.com/repo\", \"Swagger\": \"https://www.contoso.com/swagger\"}\n        links j: {\"Repo\": \"https://www.contoso.com/repo\"}\n        links a: {\"Dashboard\": \"https://www.contoso.com/dashboard\", \"On-Call\": \"https://www.contoso.com/oncall\"}\n        link a: Contacts @ https://contacts.contoso.com/?contact=alice@contoso.com\n        a->>j: Hello John, how are you?\n        j-->>a: Great!\n      `, {\n        logLevel: 0,\n        sequence: {\n          mirrorActors: true,\n          noteFontSize: 18,\n          noteFontFamily: 'Arial'\n        }\n      });\n    });","file":"integration/rendering/sequencediagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should support actor links and properties when not mirrored EXPERIMENTAL: USE WITH CAUTION","suites":[],"updatePoint":{"line":607,"column":98,"index":20667},"line":607,"code":"    it('should support actor links and properties when not mirrored EXPERIMENTAL: USE WITH CAUTION', () => {\n      //Be aware that the syntax for \"properties\" is likely to be changed.\n      imgSnapshotTest(`\n        %%{init: { \"config\": { \"mirrorActors\": false, \"forceMenus\": true, \"wrap\": true }}}%%\n        sequenceDiagram\n        participant a as Alice\n        participant j as John\n        note right of a: Hello world!\n        properties a: {\"class\": \"internal-service-actor\", \"type\": \"@clock\"}\n        properties j: {\"class\": \"external-service-actor\", \"type\": \"@computer\"}\n        links a: {\"Repo\": \"https://www.contoso.com/repo\", \"Swagger\": \"https://www.contoso.com/swagger\"}\n        links j: {\"Repo\": \"https://www.contoso.com/repo\"}\n        links a: {\"Dashboard\": \"https://www.contoso.com/dashboard\", \"On-Call\": \"https://www.contoso.com/oncall\"}\n        a->>j: Hello John, how are you?\n        j-->>a: Great!\n      `, {\n        logLevel: 0,\n        sequence: {\n          mirrorActors: false,\n          noteFontSize: 18,\n          noteFontFamily: 'Arial'\n        }\n      });\n    });","file":"integration/rendering/sequencediagram.spec.js","skipped":false,"dir":"cypress"},{"name":"shouldn't display unused participants","suites":[],"updatePoint":{"line":631,"column":45,"index":21704},"line":631,"code":"    it(\"shouldn't display unused participants\", () => {\n      //Be aware that the syntax for \"properties\" is likely to be changed.\n      imgSnapshotTest(`\n        %%{init: { \"config\": { \"sequence\": {\"hideUnusedParticipants\": true }}}}%%\n        sequenceDiagram\n        participant a\n      `, {\n        logLevel: 0,\n        sequence: {\n          mirrorActors: false,\n          noteFontSize: 18,\n          noteFontFamily: 'Arial'\n        }\n      });\n    });","file":"integration/rendering/sequencediagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a sequence diagram when useMaxWidth is true (default)","suites":[],"updatePoint":{"line":648,"column":75,"index":22226},"line":648,"code":"    it('should render a sequence diagram when useMaxWidth is true (default)', () => {\n      renderGraph(`\n      sequenceDiagram\n        participant Alice\n        participant Bob\n        participant John as John<br/>Second Line\n        Alice ->> Bob: Hello Bob, how are you?\n        Bob-->>John: How about you John?\n        Bob--x Alice: I am good thanks!\n        Bob-x John: I am good thanks!\n        Note right of John: Bob thinks a long<br/>long time, so long<br/>that the text does<br/>not fit on a row.\n        Bob-->Alice: Checking with John...\n        alt either this\n          Alice->>John: Yes\n          else or this\n          Alice->>John: No\n          else or this will happen\n          Alice->John: Maybe\n        end\n        par this happens in parallel\n        Alice -->> Bob: Parallel message 1\n        and\n        Alice -->> John: Parallel message 2\n        end\n      `, {\n        sequence: {\n          useMaxWidth: true\n        }\n      });\n      cy.get('svg').should(svg => {\n        expect(svg).to.have.attr('width', '100%');\n        // expect(svg).to.have.attr('height');\n        // const height = parseFloat(svg.attr('height'));\n        // expect(height).to.be.within(920, 971);\n        const style = svg.attr('style');\n        expect(style).to.match(/^max-width: [\\d.]+px;$/);\n        const maxWidthValue = parseFloat(style.match(/[\\d.]+/g).join(''));\n        // use within because the absolute value can be slightly different depending on the environment ±5%\n        expect(maxWidthValue).to.be.within(820 * 0.95, 820 * 1.05);\n      });\n    });","file":"integration/rendering/sequencediagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a sequence diagram when useMaxWidth is false","suites":[],"updatePoint":{"line":689,"column":66,"index":23782},"line":689,"code":"    it('should render a sequence diagram when useMaxWidth is false', () => {\n      renderGraph(`\n      sequenceDiagram\n        participant Alice\n        participant Bob\n        participant John as John<br/>Second Line\n        Alice ->> Bob: Hello Bob, how are you?\n        Bob-->>John: How about you John?\n        Bob--x Alice: I am good thanks!\n        Bob-x John: I am good thanks!\n        Note right of John: Bob thinks a long<br/>long time, so long<br/>that the text does<br/>not fit on a row.\n        Bob-->Alice: Checking with John...\n        alt either this\n          Alice->>John: Yes\n          else or this\n          Alice->>John: No\n          else or this will happen\n          Alice->John: Maybe\n        end\n        par this happens in parallel\n        Alice -->> Bob: Parallel message 1\n        and\n        Alice -->> John: Parallel message 2\n        end\n      `, {\n        sequence: {\n          useMaxWidth: false\n        }\n      });\n      cy.get('svg').should(svg => {\n        // const height = parseFloat(svg.attr('height'));\n        const width = parseFloat(svg.attr('width'));\n        // expect(height).to.be.within(920, 971);\n        // use within because the absolute value can be slightly different depending on the environment ±5%\n        expect(width).to.be.within(820 * 0.95, 820 * 1.05);\n        expect(svg).to.not.have.attr('style');\n      });\n    });","file":"integration/rendering/sequencediagram.spec.js","skipped":false,"dir":"cypress"},{"name":"v2 should render a simple info","suites":["State diagram"],"updatePoint":{"line":3,"column":36,"index":138},"line":3,"code":"  it('v2 should render a simple info', () => {\n    imgSnapshotTest(`\n    info\n      `, {\n      logLevel: 1,\n      fontFamily: 'courier'\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/stateDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"v2 should render a simple state diagrams","suites":["State diagram"],"updatePoint":{"line":12,"column":46,"index":317},"line":12,"code":"  it('v2 should render a simple state diagrams', () => {\n    imgSnapshotTest(`\n    stateDiagram-v2\n\n    [*] --> State1\n    State1 --> [*]\n      `, {\n      logLevel: 0,\n      fontFamily: 'courier'\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/stateDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"v2 should render a long descriptions instead of id when available","suites":["State diagram"],"updatePoint":{"line":24,"column":71,"index":571},"line":24,"code":"  it('v2 should render a long descriptions instead of id when available', () => {\n    imgSnapshotTest(`\n      stateDiagram-v2\n\n      [*] --> S1\n      state \"Some long name\" as S1\n      `, {\n      logLevel: 0,\n      fontFamily: 'courier'\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/stateDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"v2 should render a long descriptions with additional descriptions","suites":["State diagram"],"updatePoint":{"line":36,"column":71,"index":841},"line":36,"code":"  it('v2 should render a long descriptions with additional descriptions', () => {\n    imgSnapshotTest(`\n      stateDiagram-v2\n\n      [*] --> S1\n      state \"Some long name\" as S1: The description\n      `, {\n      logLevel: 0,\n      fontFamily: 'courier'\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/stateDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"v2 should render a single state with short descriptions","suites":["State diagram"],"updatePoint":{"line":48,"column":61,"index":1118},"line":48,"code":"  it('v2 should render a single state with short descriptions', () => {\n    imgSnapshotTest(`\n    stateDiagram-v2\n      state \"A long long name\" as long1\n      state \"A\" as longlonglongid\n      `, {\n      logLevel: 0,\n      fontFamily: 'courier'\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/stateDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"v2 should render a transition descriptions with new lines","suites":["State diagram"],"updatePoint":{"line":59,"column":63,"index":1399},"line":59,"code":"  it('v2 should render a transition descriptions with new lines', () => {\n    imgSnapshotTest(`\n      stateDiagram-v2\n\n      [*] --> S1\n      S1 --> S2: long line using<br/>should work\n      S1 --> S3: long line using <br>should work\n      S1 --> S4: long line using \\\\nshould work\n      `, {\n      logLevel: 0,\n      fontFamily: 'courier'\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/stateDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"v2 should render a state with a note","suites":["State diagram"],"updatePoint":{"line":73,"column":42,"index":1751},"line":73,"code":"  it('v2 should render a state with a note', () => {\n    imgSnapshotTest(`\n    stateDiagram-v2\n    State1: The state with a note\n    note right of State1\n      Important information! You can write\n      notes.\n    end note\n      `, {\n      logLevel: 0,\n      fontFamily: 'courier'\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/stateDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"v2 should render a state with on the left side when so specified","suites":["State diagram"],"updatePoint":{"line":87,"column":70,"index":2093},"line":87,"code":"  it('v2 should render a state with on the left side when so specified', () => {\n    imgSnapshotTest(`\n    stateDiagram-v2\n    State1: The state with a note with minus - and plus + in it\n    note left of State1\n      Important information! You can write\n      notes with . and  in them.\n    end note\n      `, {\n      logLevel: 0,\n      fontFamily: 'courier'\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/stateDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"v2 should render a state with a note together with another state","suites":["State diagram"],"updatePoint":{"line":101,"column":70,"index":2484},"line":101,"code":"  it('v2 should render a state with a note together with another state', () => {\n    imgSnapshotTest(`\n    stateDiagram-v2\n    State1: The state with a note +,-\n    note right of State1\n      Important information! You can write +,-\n      notes.\n    end note\n    State1 --> State2 : With +,-\n    note left of State2 : This is the note +,-<br/>\n      `, {\n      logLevel: 0,\n      fontFamily: 'courier'\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/stateDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"v2 should render a note with multiple lines in it","suites":["State diagram"],"updatePoint":{"line":117,"column":55,"index":2904},"line":117,"code":"  it('v2 should render a note with multiple lines in it', () => {\n    imgSnapshotTest(`\n    stateDiagram-v2\n    State1: The state with a note\n    note right of State1\n      Important information! You\\ncan write\n      notes with multiple lines...\n      Here is another line...\n      And another line...\n    end note\n    `, {\n      logLevel: 0,\n      fontFamily: 'courier'\n    });\n  });","file":"integration/rendering/stateDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"v2 should handle multiline notes with different line breaks","suites":["State diagram"],"updatePoint":{"line":132,"column":65,"index":3299},"line":132,"code":"  it('v2 should handle multiline notes with different line breaks', () => {\n    imgSnapshotTest(`\n      stateDiagram-v2\n      State1\n      note right of State1\n      Line1<br>Line2<br/>Line3<br />Line4<br\t/>Line5\n      end note\n      `, {\n      logLevel: 0,\n      fontFamily: 'courier'\n    });\n  });","file":"integration/rendering/stateDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"v2 should render a states with descriptions including multi-line descriptions","suites":["State diagram"],"updatePoint":{"line":144,"column":83,"index":3617},"line":144,"code":"  it('v2 should render a states with descriptions including multi-line descriptions', () => {\n    imgSnapshotTest(`\n    stateDiagram-v2\n    State1: This a a single line description\n    State2: This a a multi line description\n    State2: here comes the multi part\n    [*] --> State1\n    State1 --> State2\n    State2 --> [*]\n      `, {\n      logLevel: 0,\n      fontFamily: 'courier'\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/stateDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"v2 should render a simple state diagrams 2","suites":["State diagram"],"updatePoint":{"line":159,"column":48,"index":3996},"line":159,"code":"  it('v2 should render a simple state diagrams 2', () => {\n    imgSnapshotTest(`\n    stateDiagram-v2\n    [*] --> State1\n    State1 --> State2\n    State1 --> State3\n    State1 --> [*]\n      `, {\n      logLevel: 0,\n      fontFamily: 'courier'\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/stateDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"v2 should render a simple state diagrams with labels","suites":["State diagram"],"updatePoint":{"line":172,"column":58,"index":4280},"line":172,"code":"  it('v2 should render a simple state diagrams with labels', () => {\n    imgSnapshotTest(`\n    stateDiagram-v2\n    [*] --> State1\n    State1 --> State2 : Transition 1\n    State1 --> State3 : Transition 2\n    State1 --> State4 : Transition 3\n    State1 --> State5 : Transition 4\n    State2 --> State3 : Transition 5\n    State1 --> [*]\n      `, {\n      logLevel: 0,\n      fontFamily: 'courier'\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/stateDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"v2 should render state descriptions","suites":["State diagram"],"updatePoint":{"line":188,"column":41,"index":4688},"line":188,"code":"  it('v2 should render state descriptions', () => {\n    imgSnapshotTest(`\n      stateDiagram-v2\n        state \"Long state description\" as XState1\n        state \"Another Long state description\" as XState2\n        XState2 : New line\n        XState1 --> XState2\n      `, {\n      logLevel: 0,\n      fontFamily: 'courier'\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/stateDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"v2 should render composite states","suites":["State diagram"],"updatePoint":{"line":201,"column":39,"index":5036},"line":201,"code":"  it('v2 should render composite states', () => {\n    imgSnapshotTest(`\n      stateDiagram-v2\n      [*] --> NotShooting: Pacifist\n      NotShooting --> A\n      NotShooting --> B\n      NotShooting --> C\n\n      state NotShooting {\n        [*] --> Idle: Yet another long long öong öong öong label\n        Idle --> Configuring : EvConfig\n        Configuring --> Idle : EvConfig  EvConfig EvConfig  EvConfig EvConfig\n      }\n      `, {\n      logLevel: 0,\n      fontFamily: 'courier'\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/stateDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"v2 should render multiple composite states","suites":["State diagram"],"updatePoint":{"line":220,"column":48,"index":5556},"line":220,"code":"  it('v2 should render multiple composite states', () => {\n    imgSnapshotTest(`\n      stateDiagram-v2\n      [*]-->TV\n\n      state TV {\n        [*] --> Off: Off to start with\n        On --> Off : Turn off\n        Off --> On : Turn on\n      }\n\n      TV--> Console\n\n      state Console {\n        [*] --> Off2: Off to start with\n        On2--> Off2 : Turn off\n        Off2 --> On2 : Turn on\n        On2-->Playing\n\n        state Playing {\n          Alive --> Dead\n          Dead-->Alive\n         }\n      }\n      `, {\n      logLevel: 0,\n      fontFamily: 'courier'\n    });\n  });","file":"integration/rendering/stateDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"v2 should render forks in composite states","suites":["State diagram"],"updatePoint":{"line":249,"column":48,"index":6130},"line":249,"code":"  it('v2 should render forks in composite states', () => {\n    imgSnapshotTest(`\n      stateDiagram-v2\n      [*]-->TV\n\n      state TV {\n        state fork_state &lt;&lt;fork&gt;&gt;\n        [*] --> fork_state\n        fork_state --> State2\n        fork_state --> State3\n\n        state join_state &lt;&lt;join&gt;&gt;\n        State2 --> join_state\n        State3 --> join_state\n        join_state --> State4\n        State4 --> [*]\n      }\n      `, {\n      logLevel: 0,\n      fontFamily: 'courier'\n    });\n  });","file":"integration/rendering/stateDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"v2 should render forks and joins","suites":["State diagram"],"updatePoint":{"line":271,"column":38,"index":6629},"line":271,"code":"  it('v2 should render forks and joins', () => {\n    imgSnapshotTest(`\n    stateDiagram-v2\n    state fork_state &lt;&lt;fork&gt;&gt;\n      [*] --> fork_state\n      fork_state --> State2\n      fork_state --> State3\n\n      state join_state &lt;&lt;join&gt;&gt;\n      State2 --> join_state\n      State3 --> join_state\n      join_state --> State4\n      State4 --> [*]\n    `, {\n      logLevel: 0,\n      fontFamily: 'courier'\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/stateDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"v2 should render concurrency states","suites":["State diagram"],"updatePoint":{"line":290,"column":41,"index":7085},"line":290,"code":"  it('v2 should render concurrency states', () => {\n    imgSnapshotTest(`\n    stateDiagram-v2\n    [*] --> Active\n\n    state Active {\n      [*] --> NumLockOff\n      NumLockOff --> NumLockOn : EvNumLockPressed\n      NumLockOn --> NumLockOff : EvNumLockPressed\n      --\n      [*] --> CapsLockOff\n      CapsLockOff --> CapsLockOn : EvCapsLockPressed\n      CapsLockOn --> CapsLockOff : EvCapsLockPressed\n      --\n      [*] --> ScrollLockOff\n      ScrollLockOff --> ScrollLockOn : EvCapsLockPressed\n      ScrollLockOn --> ScrollLockOff : EvCapsLockPressed\n    }\n    `, {\n      logLevel: 0,\n      fontFamily: 'courier'\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/stateDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"v2 should render a state with states in it","suites":["State diagram"],"updatePoint":{"line":314,"column":48,"index":7737},"line":314,"code":"  it('v2 should render a state with states in it', () => {\n    imgSnapshotTest(`\n      stateDiagram-v2\n      state PilotCockpit {\n        state  Parent {\n          C\n        }\n    }\n    `, {\n      logLevel: 0\n    });\n  });","file":"integration/rendering/stateDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"v2 it should be possible to use a choice","suites":["State diagram"],"updatePoint":{"line":326,"column":46,"index":7958},"line":326,"code":"  it('v2 it should be possible to use a choice', () => {\n    imgSnapshotTest(`\n  stateDiagram-v2\n    [*] --> Off\n    Off --> On\n    state MyChoice [[choice]]\n    On --> MyChoice\n    MyChoice --> Washing\n    MyChoice --> Drying\n    Washing --> Finished\n    Finished --> [*]\n    `, {\n      logLevel: 0\n    });\n  });","file":"integration/rendering/stateDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"v2 A compound state should be able to link to itself","suites":["State diagram"],"updatePoint":{"line":341,"column":58,"index":8284},"line":341,"code":"  it('v2 A compound state should be able to link to itself', () => {\n    imgSnapshotTest(`\nstateDiagram\n  state Active {\n    Idle\n  }\n  Inactive --> Idle: ACT\n  Active --> Active: LOG\n    `, {\n      logLevel: 0\n    });\n  });","file":"integration/rendering/stateDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"v2 width of compond state should grow with title if title is wider","suites":["State diagram"],"updatePoint":{"line":353,"column":72,"index":8523},"line":353,"code":"  it('v2 width of compond state should grow with title if title is wider', () => {\n    imgSnapshotTest(`\nstateDiagram-v2\n  state \"Long state name 2\" as NotShooting {\n    a-->b\n  }\n    `, {\n      logLevel: 0\n    });\n  });","file":"integration/rendering/stateDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"v2 state label with names in it","suites":["State diagram"],"updatePoint":{"line":363,"column":37,"index":8709},"line":363,"code":"  it('v2 state label with names in it', () => {\n    imgSnapshotTest(`\n      stateDiagram-v2\n        Yswsii: Your state with spaces in it\n        [*] --> Yswsii\n    `, {\n      logLevel: 0\n    });\n  });","file":"integration/rendering/stateDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"v2 Simplest composite state","suites":["State diagram"],"updatePoint":{"line":372,"column":33,"index":8906},"line":372,"code":"  it('v2 Simplest composite state', () => {\n    imgSnapshotTest(`\n      stateDiagram-v2\n        state  Parent {\n          C\n        }\n    `, {\n      logLevel: 0,\n      fontFamily: 'courier'\n    });\n  });","file":"integration/rendering/stateDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"v2 should handle multiple arrows from one node to another","suites":["State diagram"],"updatePoint":{"line":383,"column":63,"index":9140},"line":383,"code":"  it('v2 should handle multiple arrows from one node to another', () => {\n    imgSnapshotTest(`\n      stateDiagram-v2\n        a --> b: Start\n        a --> b: Stop\n    `, {\n      logLevel: 0,\n      fontFamily: 'courier'\n    });\n  });","file":"integration/rendering/stateDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"v2 should handle multiple notes added to one state","suites":["State diagram"],"updatePoint":{"line":393,"column":56,"index":9366},"line":393,"code":"  it('v2 should handle multiple notes added to one state', () => {\n    imgSnapshotTest(`\nstateDiagram-v2\n    MyState\n    note left of MyState : I am a leftie\n    note right of MyState : I am a rightie\n    `, {\n      logLevel: 0,\n      fontFamily: 'courier'\n    });\n  });","file":"integration/rendering/stateDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"v2 should handle different rendering directions in composite states","suites":["State diagram"],"updatePoint":{"line":404,"column":73,"index":9654},"line":404,"code":"  it('v2 should handle different rendering directions in composite states', () => {\n    imgSnapshotTest(`\nstateDiagram-v2\n  direction LR\n  state A {\n    direction BT\n    a --> b\n  }\n  state C {\n    direction RL\n    c --> d\n  }\n  A --> C\n    `, {\n      logLevel: 0,\n      fontFamily: 'courier'\n    });\n  });","file":"integration/rendering/stateDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"v2 handle transition from one state in a composite state to a composite state","suites":["State diagram"],"updatePoint":{"line":422,"column":83,"index":9971},"line":422,"code":"  it('v2 handle transition from one state in a composite state to a composite state', () => {\n    imgSnapshotTest(`\nstateDiagram-v2\n  state S1 {\n    sub1 -->sub2\n  }\n\n  state S2 {\n    sub4\n  }\n  S1 --> S2\n  sub1 --> sub4\n    `, {\n      logLevel: 0,\n      fontFamily: 'courier'\n    });\n  });","file":"integration/rendering/stateDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"v2 should render a state diagram when useMaxWidth is true (default)","suites":["State diagram"],"updatePoint":{"line":439,"column":73,"index":10252},"line":439,"code":"  it('v2 should render a state diagram when useMaxWidth is true (default)', () => {\n    renderGraph(`\n    stateDiagram-v2\n\n    [*] --> State1\n    State1 --> [*]\n      `, {\n      state: {\n        useMaxWidth: true\n      }\n    });\n    cy.get('svg').should(svg => {\n      expect(svg).to.have.attr('width', '100%');\n      // expect(svg).to.have.attr('height');\n      // const height = parseFloat(svg.attr('height'));\n      // expect(height).to.be.within(177, 178);\n      const style = svg.attr('style');\n      expect(style).to.match(/^max-width: [\\d.]+px;$/);\n      const maxWidthValue = parseFloat(style.match(/[\\d.]+/g).join(''));\n      // use within because the absolute value can be slightly different depending on the environment ±5%\n      expect(maxWidthValue).to.be.within(65, 85);\n    });\n  });","file":"integration/rendering/stateDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"v2 should render a state diagram when useMaxWidth is false","suites":["State diagram"],"updatePoint":{"line":462,"column":64,"index":11042},"line":462,"code":"  it('v2 should render a state diagram when useMaxWidth is false', () => {\n    renderGraph(`\n    stateDiagram-v2\n\n    [*] --> State1\n    State1 --> [*]\n      `, {\n      state: {\n        useMaxWidth: false\n      }\n    });\n    cy.get('svg').should(svg => {\n      // const height = parseFloat(svg.attr('height'));\n      const width = parseFloat(svg.attr('width'));\n      // expect(height).to.be.within(177, 178);\n      // use within because the absolute value can be slightly different depending on the environment ±5%\n      expect(width).to.be.within(65, 85);\n      expect(svg).to.not.have.attr('style');\n    });\n  });","file":"integration/rendering/stateDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"v2 should render a state diagram and set the correct length of the labels","suites":["State diagram"],"updatePoint":{"line":482,"column":79,"index":11674},"line":482,"code":"  it('v2 should render a state diagram and set the correct length of the labels', () => {\n    imgSnapshotTest(`\n      stateDiagram-v2\n      [*] --> 1\n      1 --> 2: test({ foo#colon; 'far' })\n      2 --> [*]\n    `, {\n      logLevel: 0,\n      fontFamily: 'courier'\n    });\n  });","file":"integration/rendering/stateDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"v2 states can have a class applied","suites":["State diagram","classDefs and applying classes"],"updatePoint":{"line":494,"column":42,"index":11968},"line":494,"code":"    it('v2 states can have a class applied', () => {\n      imgSnapshotTest(`\n          stateDiagram-v2\n          [*] --> A\n          A --> B: test({ foo#colon; 'far' })\n          B --> [*]\n            classDef badBadEvent fill:#f00,color:white,font-weight:bold \n            class B badBadEvent\n           `, {\n        logLevel: 0,\n        fontFamily: 'courier'\n      });\n    });","file":"integration/rendering/stateDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"v2 can have multiple classes applied to multiple states","suites":["State diagram","classDefs and applying classes"],"updatePoint":{"line":507,"column":63,"index":12368},"line":507,"code":"    it('v2 can have multiple classes applied to multiple states', () => {\n      imgSnapshotTest(`\n          stateDiagram-v2\n          classDef notMoving fill:white\n          classDef movement font-style:italic;\n          classDef badBadEvent fill:#f00,color:white,font-weight:bold\n    \n          [*] --> Still\n          Still --> [*]\n          Still --> Moving\n          Moving --> Still\n          Moving --> Crash\n          Crash --> [*]\n    \n          class Still notMoving\n          class Moving, Crash movement\n          class Crash badBadEvent\n        `, {\n        logLevel: 0,\n        fontFamily: 'courier'\n      });\n    });","file":"integration/rendering/stateDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"1433: should render a simple state diagram with a title","suites":["State diagram","classDefs and applying classes"],"updatePoint":{"line":530,"column":61,"index":13003},"line":530,"code":"  it('1433: should render a simple state diagram with a title', () => {\n    imgSnapshotTest(`---\ntitle: simple state diagram\n---\nstateDiagram-v2\n[*] --> State1\nState1 --> [*]\n`, {});\n  });","file":"integration/rendering/stateDiagram-v2.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a simple state diagrams","suites":["State diagram"],"updatePoint":{"line":3,"column":43,"index":145},"line":3,"code":"  it('should render a simple state diagrams', () => {\n    imgSnapshotTest(`\n    stateDiagram\n    [*] --> State1\n    State1 --> [*]\n      `, {\n      logLevel: 0,\n      fontFamily: 'courier'\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/stateDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a long descriptions instead of id when available","suites":["State diagram"],"updatePoint":{"line":14,"column":68,"index":392},"line":14,"code":"  it('should render a long descriptions instead of id when available', () => {\n    imgSnapshotTest(`\n      stateDiagram\n\n      [*] --> S1\n      state \"Some long name\" as S1\n      `, {\n      logLevel: 0,\n      fontFamily: 'courier'\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/stateDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a long descriptions with additional descriptions","suites":["State diagram"],"updatePoint":{"line":26,"column":68,"index":656},"line":26,"code":"  it('should render a long descriptions with additional descriptions', () => {\n    imgSnapshotTest(`\n      stateDiagram\n\n      [*] --> S1\n      state \"Some long name\" as S1: The description\n      `, {\n      logLevel: 0,\n      fontFamily: 'courier'\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/stateDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a single state with short descriptions","suites":["State diagram"],"updatePoint":{"line":38,"column":58,"index":927},"line":38,"code":"  it('should render a single state with short descriptions', () => {\n    imgSnapshotTest(`\n    stateDiagram\n      state \"A long long name\" as long1\n      state \"A\" as longlonglongid\n      `, {\n      logLevel: 0,\n      fontFamily: 'courier'\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/stateDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a transition descriptions with new lines","suites":["State diagram"],"updatePoint":{"line":49,"column":60,"index":1202},"line":49,"code":"  it('should render a transition descriptions with new lines', () => {\n    imgSnapshotTest(`\n      stateDiagram\n\n      [*] --> S1\n      S1 --> S2: long line using<br/>should work\n      S1 --> S3: long line using <br>should work\n      S1 --> S4: long line using \\\\nshould work\n      `, {\n      logLevel: 0,\n      fontFamily: 'courier'\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/stateDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a state with a note","suites":["State diagram"],"updatePoint":{"line":63,"column":39,"index":1548},"line":63,"code":"  it('should render a state with a note', () => {\n    imgSnapshotTest(`\n    stateDiagram\n    State1: The state with a note\n    note right of State1\n      Important information! You can write\n      notes.\n    end note\n      `, {\n      logLevel: 0,\n      fontFamily: 'courier'\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/stateDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a state with on the left side when so specified","suites":["State diagram"],"updatePoint":{"line":77,"column":67,"index":1884},"line":77,"code":"  it('should render a state with on the left side when so specified', () => {\n    imgSnapshotTest(`\n    stateDiagram\n    State1: The state with a note with minus - and plus + in it\n    note left of State1\n      Important information! You can write\n      notes with . and  in them.\n    end note\n      `, {\n      logLevel: 0,\n      fontFamily: 'courier'\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/stateDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a state with a note together with another state","suites":["State diagram"],"updatePoint":{"line":91,"column":67,"index":2269},"line":91,"code":"  it('should render a state with a note together with another state', () => {\n    imgSnapshotTest(`\n    stateDiagram\n    State1: The state with a note +,-\n    note right of State1\n      Important information! You can write +,-\n      notes.\n    end note\n    State1 --> State2 : With +,-\n    note left of State2 : This is the note +,-<br/>\n      `, {\n      logLevel: 0,\n      fontFamily: 'courier'\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/stateDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a note with multiple lines in it","suites":["State diagram"],"updatePoint":{"line":107,"column":52,"index":2683},"line":107,"code":"  it('should render a note with multiple lines in it', () => {\n    imgSnapshotTest(`\n    stateDiagram\n    State1: The state with a note\n    note right of State1\n      Important information! You\\ncan write\n      notes with multiple lines...\n      Here is another line...\n      And another line...\n    end note\n    `, {\n      logLevel: 0,\n      fontFamily: 'courier'\n    });\n  });","file":"integration/rendering/stateDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should handle multiline notes with different line breaks","suites":["State diagram"],"updatePoint":{"line":122,"column":62,"index":3072},"line":122,"code":"  it('should handle multiline notes with different line breaks', () => {\n    imgSnapshotTest(`\n      stateDiagram\n      State1\n      note right of State1\n      Line1<br>Line2<br/>Line3<br />Line4<br\t/>Line5\n      end note\n      `, {\n      logLevel: 0,\n      fontFamily: 'courier'\n    });\n  });","file":"integration/rendering/stateDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a states with descriptions including multi-line descriptions","suites":["State diagram"],"updatePoint":{"line":134,"column":80,"index":3384},"line":134,"code":"  it('should render a states with descriptions including multi-line descriptions', () => {\n    imgSnapshotTest(`\n    stateDiagram\n    State1: This a a single line description\n    State2: This a a multi line description\n    State2: here comes the multi part\n    [*] --> State1\n    State1 --> State2\n    State2 --> [*]\n      `, {\n      logLevel: 0,\n      fontFamily: 'courier'\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/stateDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a simple state diagrams 2","suites":["State diagram"],"updatePoint":{"line":149,"column":45,"index":3757},"line":149,"code":"  it('should render a simple state diagrams 2', () => {\n    imgSnapshotTest(`\n    stateDiagram\n    [*] --> State1\n    State1 --> State2\n    State1 --> State3\n    State1 --> [*]\n      `, {\n      logLevel: 0,\n      fontFamily: 'courier'\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/stateDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a simple state diagrams with labels","suites":["State diagram"],"updatePoint":{"line":162,"column":55,"index":4035},"line":162,"code":"  it('should render a simple state diagrams with labels', () => {\n    imgSnapshotTest(`\n    stateDiagram\n    [*] --> State1\n    State1 --> State2 : Transition 1\n    State1 --> State3 : Transition 2\n    State1 --> State4 : Transition 3\n    State1 --> State5 : Transition 4\n    State2 --> State3 : Transition 5\n    State1 --> [*]\n      `, {\n      logLevel: 0,\n      fontFamily: 'courier'\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/stateDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render state descriptions","suites":["State diagram"],"updatePoint":{"line":178,"column":38,"index":4437},"line":178,"code":"  it('should render state descriptions', () => {\n    imgSnapshotTest(`\n      stateDiagram\n        state \"Long state description\" as XState1\n        state \"Another Long state description\" as XState2\n        XState2 : New line\n        XState1 --> XState2\n      `, {\n      logLevel: 0,\n      fontFamily: 'courier'\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/stateDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render composite states","suites":["State diagram"],"updatePoint":{"line":191,"column":36,"index":4779},"line":191,"code":"  it('should render composite states', () => {\n    imgSnapshotTest(`\n      stateDiagram\n      [*] --> NotShooting: Pacifist\n      NotShooting --> A\n      NotShooting --> B\n      NotShooting --> C\n\n      state NotShooting {\n        [*] --> Idle: Yet another long long öong öong öong label\n        Idle --> Configuring : EvConfig\n        Configuring --> Idle : EvConfig  EvConfig EvConfig  EvConfig EvConfig\n      }\n      `, {\n      logLevel: 0,\n      fontFamily: 'courier'\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/stateDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render multiple composit states","suites":["State diagram"],"updatePoint":{"line":210,"column":44,"index":5292},"line":210,"code":"  it('should render multiple composit states', () => {\n    imgSnapshotTest(`\n      stateDiagram\n      [*]-->TV\n\n      state TV {\n        [*] --> Off: Off to start with\n        On --> Off : Turn off\n        Off --> On : Turn on\n      }\n\n      TV--> Console\n\n      state Console {\n        [*] --> Off2: Off to start with\n        On2--> Off2 : Turn off\n        Off2 --> On2 : Turn on\n        On2-->Playing\n\n        state Playing {\n          Alive --> Dead\n          Dead-->Alive\n         }\n      }\n      `, {\n      logLevel: 0,\n      fontFamily: 'courier'\n    });\n  });","file":"integration/rendering/stateDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render forks in composit states","suites":["State diagram"],"updatePoint":{"line":239,"column":44,"index":5859},"line":239,"code":"  it('should render forks in composit states', () => {\n    imgSnapshotTest(`\n      stateDiagram\n      [*]-->TV\n\n      state TV {\n        state fork_state &lt;&lt;fork&gt;&gt;\n        [*] --> fork_state\n        fork_state --> State2\n        fork_state --> State3\n\n        state join_state &lt;&lt;join&gt;&gt;\n        State2 --> join_state\n        State3 --> join_state\n        join_state --> State4\n        State4 --> [*]\n      }\n      `, {\n      logLevel: 0,\n      fontFamily: 'courier'\n    });\n  });","file":"integration/rendering/stateDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render forks and joins","suites":["State diagram"],"updatePoint":{"line":261,"column":35,"index":6352},"line":261,"code":"  it('should render forks and joins', () => {\n    imgSnapshotTest(`\n    stateDiagram\n    state fork_state &lt;&lt;fork&gt;&gt;\n      [*] --> fork_state\n      fork_state --> State2\n      fork_state --> State3\n\n      state join_state &lt;&lt;join&gt;&gt;\n      State2 --> join_state\n      State3 --> join_state\n      join_state --> State4\n      State4 --> [*]\n    `, {\n      logLevel: 0,\n      fontFamily: 'courier'\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/stateDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render concurrency states","suites":["State diagram"],"updatePoint":{"line":280,"column":38,"index":6802},"line":280,"code":"  it('should render concurrency states', () => {\n    imgSnapshotTest(`\n    stateDiagram\n    [*] --> Active\n\n    state Active {\n      [*] --> NumLockOff\n      NumLockOff --> NumLockOn : EvNumLockPressed\n      NumLockOn --> NumLockOff : EvNumLockPressed\n      --\n      [*] --> CapsLockOff\n      CapsLockOff --> CapsLockOn : EvCapsLockPressed\n      CapsLockOn --> CapsLockOff : EvCapsLockPressed\n      --\n      [*] --> ScrollLockOff\n      ScrollLockOff --> ScrollLockOn : EvCapsLockPressed\n      ScrollLockOn --> ScrollLockOff : EvCapsLockPressed\n    }\n    `, {\n      logLevel: 0,\n      fontFamily: 'courier'\n    });\n    cy.get('svg');\n  });","file":"integration/rendering/stateDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a state with states in it","suites":["State diagram"],"updatePoint":{"line":304,"column":45,"index":7448},"line":304,"code":"  it('should render a state with states in it', () => {\n    imgSnapshotTest(`\n      stateDiagram\n      state PilotCockpit {\n        state  Parent {\n          C\n        }\n    }\n    `, {\n      logLevel: 0,\n      fontFamily: 'courier'\n    });\n  });","file":"integration/rendering/stateDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"Simplest composite state","suites":["State diagram"],"updatePoint":{"line":317,"column":30,"index":7679},"line":317,"code":"  it('Simplest composite state', () => {\n    imgSnapshotTest(`\n      stateDiagram\n        state  Parent {\n          C\n        }\n    `, {\n      logLevel: 0,\n      fontFamily: 'courier'\n    });\n  });","file":"integration/rendering/stateDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should handle multiple arrows from one node to another","suites":["State diagram"],"updatePoint":{"line":328,"column":60,"index":7907},"line":328,"code":"  it('should handle multiple arrows from one node to another', () => {\n    imgSnapshotTest(`\n      stateDiagram\n        a --> b: Start\n        a --> b: Stop\n    `, {\n      logLevel: 0,\n      fontFamily: 'courier'\n    });\n  });","file":"integration/rendering/stateDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a state diagram when useMaxWidth is true (default)","suites":["State diagram"],"updatePoint":{"line":338,"column":70,"index":8144},"line":338,"code":"  it('should render a state diagram when useMaxWidth is true (default)', () => {\n    renderGraph(`\n    stateDiagram\n    [*] --> State1\n    State1 --> [*]\n      `, {\n      state: {\n        useMaxWidth: true\n      }\n    });\n    cy.get('svg').should(svg => {\n      expect(svg).to.have.attr('width', '100%');\n      // expect(svg).to.have.attr('height');\n      // const height = parseFloat(svg.attr('height'));\n      // expect(height).to.be.within(176, 178);\n      const style = svg.attr('style');\n      expect(style).to.match(/^max-width: [\\d.]+px;$/);\n      const maxWidthValue = parseFloat(style.match(/[\\d.]+/g).join(''));\n      // use within because the absolute value can be slightly different depending on the environment ±5%\n      // Todo investigate difference\n      // expect(maxWidthValue).to.be.within(112 * .95, 112 * 1.05);\n      expect(maxWidthValue).to.be.within(65, 85);\n    });\n  });","file":"integration/rendering/stateDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a state diagram when useMaxWidth is false","suites":["State diagram"],"updatePoint":{"line":362,"column":61,"index":9032},"line":362,"code":"  it('should render a state diagram when useMaxWidth is false', () => {\n    renderGraph(`\n    stateDiagram\n    [*] --> State1\n    State1 --> [*]\n      `, {\n      state: {\n        useMaxWidth: false\n      }\n    });\n    cy.get('svg').should(svg => {\n      // const height = parseFloat(svg.attr('height'));\n      const width = parseFloat(svg.attr('width'));\n      // expect(height).to.be.within(176, 178);\n      // use within because the absolute value can be slightly different depending on the environment ±5%\n      // Todo investigate difference\n      // expect(width).to.be.within(112 * .95, 112 * 1.05);\n      expect(width).to.be.within(65, 85);\n      expect(svg).to.not.have.attr('style');\n    });\n  });","file":"integration/rendering/stateDiagram.spec.js","skipped":false,"dir":"cypress"},{"name":"should not allow unbalanced CSS definitions","suites":["themeCSS balancing, it"],"updatePoint":{"line":3,"column":49,"index":150},"line":3,"code":"  it('should not allow unbalanced CSS definitions', () => {\n    imgSnapshotTest(`\n  %%{init: { 'themeCSS': '} * { background: red }' } }%%\n  flowchart TD\n    a --> b\n          `, {});\n    cy.get('svg');\n  });","file":"integration/rendering/theme.spec.js","skipped":false,"dir":"cypress"},{"name":"should not allow unbalanced CSS definitions 2","suites":["themeCSS balancing, it"],"updatePoint":{"line":11,"column":51,"index":361},"line":11,"code":"  it('should not allow unbalanced CSS definitions 2', () => {\n    imgSnapshotTest(`\n  %%{init: { 'themeCSS': '\\u007D * { background: red }' } }%%\n  flowchart TD\n    a2 --> b2\n          `, {});\n    cy.get('svg');\n  });","file":"integration/rendering/theme.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a pie diagram","suites":["Pie Chart"],"updatePoint":{"line":29,"column":37,"index":841},"line":29,"code":"      it('should render a pie diagram', () => {\n        imgSnapshotTest(`\n        pie title Sports in Sweden\n          accTitle: This is a title\n          accDescr: This is a description\n          \"Bandy\" : 40\n          \"Ice-Hockey\" : 80\n          \"Football\" : 90\n          `, {\n          theme\n        });\n        cy.get('svg');\n      });","file":"integration/rendering/theme.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a flowchart diagram","suites":["Pie Chart"],"updatePoint":{"line":42,"column":43,"index":1187},"line":42,"code":"      it('should render a flowchart diagram', () => {\n        imgSnapshotTest(`\n        %%{init: { 'logLevel': 0} }%%\n        graph TD\n          accTitle: This is a title\n          accDescr: This is a description\n          A[Christmas] -->|Get money| B(Go shopping)\n          B --> C{Let me think}\n          B --> G[/Another/]\n          C ==>|One| D[Laptop]\n          C -->|Two| E[iPhone]\n          C -->|Three| F[fa:fa-car Car]\n          subgraph section\n            C\n            D\n            E\n            F\n            G\n          end\n          `, {\n          theme\n        });\n        cy.get('svg');\n      });","file":"integration/rendering/theme.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a new flowchart diagram","suites":["Pie Chart"],"updatePoint":{"line":66,"column":47,"index":1807},"line":66,"code":"      it('should render a new flowchart diagram', () => {\n        imgSnapshotTest(`\n        %%{init: { 'logLevel': 0, 'theme': '${theme}'} }%%\n        flowchart TD\n          accTitle: This is a title\n          accDescr: This is a description\n\n          A[Christmas] -->|Get money| B(Go shopping)\n          B --> C{Let me think}\n          B --> G[Another]\n          C ==>|One| D[Laptop]\n          C x--x|Two| E[iPhone]\n          C o--o|Three| F[fa:fa-car Car]\n          subgraph section\n            C\n            D\n            E\n            F\n            G\n          end\n          `, {\n          theme\n        });\n        cy.get('svg');\n      });","file":"integration/rendering/theme.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a sequence diagram","suites":["Pie Chart"],"updatePoint":{"line":91,"column":42,"index":2448},"line":91,"code":"      it('should render a sequence diagram', () => {\n        imgSnapshotTest(`\n        %%{init: { 'logLevel': 0, 'theme': '${theme}'} }%%\n        sequenceDiagram\n          accTitle: This is a title\n          accDescr: This is a description\n\n          autonumber\n          par Action 1\n            Alice->>John: Hello John, how are you?\n          and Action 2\n            Alice->>Bob: Hello Bob, how are you?\n          end\n          Alice->>+John: Hello John, how are you?\n          Alice->>+John: John, can you hear me?\n          John-->>-Alice: Hi Alice, I can hear you!\n          Note right of John: John is perceptive\n          John-->>-Alice: I feel great!\n              loop Every minute\n                John-->Alice: Great!\n            end\n\n\n          `, {\n          theme\n        });\n        cy.get('svg');\n      });","file":"integration/rendering/theme.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a class diagram","suites":["Pie Chart"],"updatePoint":{"line":119,"column":39,"index":3269},"line":119,"code":"      it('should render a class diagram', () => {\n        imgSnapshotTest(`\n        %%{init: { 'logLevel': 0, 'theme': '${theme}'} }%%\n        classDiagram\n          accTitle: This is a title\n          accDescr: This is a description\n\n          Animal \"*\" <|-- \"1\" Duck\n          Animal \"1\" <|-- \"10\" Fish\n          Animal <|-- Zebra\n          Animal : +int age\n          Animal : +String gender\n          Animal: +isMammal()\n          Animal: +mate()\n          class Duck{\n            +String beakColor\n            +swim()\n            +quack()\n          }\n          class Fish{\n            -int sizeInFeet\n            -canEat()\n          }\n          class Zebra{\n            +bool is_wild\n            +run()\n          }\n        classA <|-- classB\n        classC *-- classD\n        classE o-- classF\n        classG <-- classH\n        classI -- classJ\n        classK <.. classL\n        classM <|.. classN\n        classO .. classP\n        classA --|> classB : Inheritance\n        classC --* classD : Composition\n        classE --o classF : Aggregation\n        classG --> classH : Association\n        classI -- classJ : Link(Solid)\n        classK ..> classL : Dependency\n        classM ..|> classN : Realization\n        classO .. classP : Link(Dashed)\n          `, {\n          theme\n        });\n        cy.get('svg');\n      });","file":"integration/rendering/theme.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a state diagram","suites":["Pie Chart"],"updatePoint":{"line":167,"column":39,"index":4594},"line":167,"code":"      it('should render a state diagram', () => {\n        imgSnapshotTest(`\n        %%{init: { 'logLevel': 0, 'theme': '${theme}'} }%%\nstateDiagram\n        accTitle: This is a title\n        accDescr: This is a description\n\n        [*] --> Active\n\n        state Active {\n            [*] --> NumLockOff\n            NumLockOff --> NumLockOn : EvNumLockPressed\n            NumLockOn --> NumLockOff : EvNumLockPressed\n            --\n            [*] --> CapsLockOff\n            CapsLockOff --> CapsLockOn : EvCapsLockPressed\n            CapsLockOn --> CapsLockOff : EvCapsLockPressed\n            --\n            [*] --> ScrollLockOff\n            ScrollLockOff --> ScrollLockOn : EvCapsLockPressed\n            ScrollLockOn --> ScrollLockOff : EvCapsLockPressed\n        }\n        state SomethingElse {\n          A --> B\n          B --> A\n        }\n\n        Active --> SomethingElse\n        note right of SomethingElse : This is the note to the right.\n          `, {\n          theme\n        });\n        cy.get('svg');\n      });","file":"integration/rendering/theme.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a state diagram (v2)","suites":["Pie Chart"],"updatePoint":{"line":201,"column":44,"index":5617},"line":201,"code":"      it('should render a state diagram (v2)', () => {\n        imgSnapshotTest(`\n        %%{init: { 'logLevel': 0, 'theme': '${theme}'} }%%\nstateDiagram-v2\n        accTitle: This is a title\n        accDescr: This is a description\n\n        [*] --> Active\n\n        state Active {\n            [*] --> NumLockOff\n            NumLockOff --> NumLockOn : EvNumLockPressed\n            NumLockOn --> NumLockOff : EvNumLockPressed\n            --\n            [*] --> CapsLockOff\n            CapsLockOff --> CapsLockOn : EvCapsLockPressed\n            CapsLockOn --> CapsLockOff : EvCapsLockPressed\n            --\n            [*] --> ScrollLockOff\n            ScrollLockOff --> ScrollLockOn : EvCapsLockPressed\n            ScrollLockOn --> ScrollLockOff : EvCapsLockPressed\n        }\n        state SomethingElse {\n          A --> B\n          B --> A\n        }\n\n        Active --> SomethingElse2\n        note right of SomethingElse2 : This is the note to the right.\n          `, {\n          theme\n        });\n        cy.get('svg');\n      });","file":"integration/rendering/theme.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a er diagram","suites":["Pie Chart"],"updatePoint":{"line":235,"column":36,"index":6637},"line":235,"code":"      it('should render a er diagram', () => {\n        imgSnapshotTest(`\nerDiagram\n          accTitle: This is a title\n          accDescr: This is a description\n\n        CUSTOMER }|..|{ DELIVERY-ADDRESS : has\n        CUSTOMER ||--o{ ORDER : places\n        CUSTOMER ||--o{ INVOICE : \"liable for\"\n        DELIVERY-ADDRESS ||--o{ ORDER : receives\n        INVOICE ||--|{ ORDER : covers\n        ORDER ||--|{ ORDER-ITEM : includes\n        PRODUCT-CATEGORY ||--|{ PRODUCT : contains\n        PRODUCT ||--o{ ORDER-ITEM : \"ordered in\"\n\n          `, {\n          theme\n        });\n        cy.get('svg');\n      });","file":"integration/rendering/theme.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a user journey diagram","suites":["Pie Chart"],"updatePoint":{"line":255,"column":46,"index":7249},"line":255,"code":"      it('should render a user journey diagram', () => {\n        imgSnapshotTest(`\n        %%{init: { 'logLevel': 0, 'theme': '${theme}'} }%%\n        journey\n            accTitle: This is a title\n            accDescr: This is a description\n\n            title My working day\n            section Go to work\n              Make tea: 5: Me\n              Go upstairs: 3: Me\n              Do work: 1: Me, Cat\n            section Go home\n              Go downstairs: 5: Me\n              Sit down: 5: Me\n                        `, {\n          theme\n        });\n        cy.get('svg');\n      });","file":"integration/rendering/theme.spec.js","skipped":false,"dir":"cypress"},{"name":"should render a gantt diagram","suites":["Pie Chart"],"updatePoint":{"line":275,"column":39,"index":7827},"line":275,"code":"      it('should render a gantt diagram', () => {\n        cy.clock(new Date('2014-01-06').getTime());\n        imgSnapshotTest(`\n      gantt\n       accTitle: This is a title\n       accDescr: This is a description\n\n       dateFormat                :YYYY-MM-DD\n       title                     :Adding GANTT diagram functionality to mermaid\n       excludes                  :excludes the named dates/days from being included in a charted task..\n       section A section\n       Completed task            :done,    des1, 2014-01-06,2014-01-08\n       Active task               :active,  des2, 2014-01-09, 3d\n       Future task               :         des3, after des2, 5d\n       Future task2              :         des4, after des3, 5d\n\n       section Critical tasks\n       Completed task in the critical line :crit, done, 2014-01-06,24h\n       Implement parser and jison          :crit, done, after des1, 2d\n       Create tests for parser             :crit, active, 3d\n       Future task in critical line        :crit, 5d\n       Create tests for renderer           :2d\n       Add to mermaid                      :1d\n\n       section Documentation\n       Describe gantt syntax               :active, a1, after des1, 3d\n       Add gantt diagram to demo page      :after a1  , 20h\n       Add another diagram to demo page    :doc1, after a1  , 48h\n\n       section Last section\n       Describe gantt syntax               :after doc1, 3d\n       Add gantt diagram to demo page      :20h\n       Add another diagram to demo page    :48h\n       `, {\n          theme\n        });\n        cy.get('svg');\n      });","file":"integration/rendering/theme.spec.js","skipped":false,"dir":"cypress"}]}