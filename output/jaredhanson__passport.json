{"repo":"jaredhanson/passport","url":"https://github.com/jaredhanson/passport","branch":"master","configs":[{"package":"passport","lang":"js","dir":"test","framework":"mocha","pattern":"**/*[._-]{test,spec,unittest,unit}.{ts,js}"}],"tests":[{"name":"should call authenticate","suites":["Authenticator","#framework","with an authenticate function used for authorization"],"updatePoint":{"line":19,"column":34,"index":676},"line":19,"code":"      it('should call authenticate', function () {\n        expect(rv).to.equal('authenticate(): foo account');\n      });","file":"authenticator.framework.test.js","skipped":false,"dir":"test"},{"name":"should call authorize","suites":["Authenticator","#framework","with an authorize function used for authorization"],"updatePoint":{"line":41,"column":31,"index":1458},"line":41,"code":"      it('should call authorize', function () {\n        expect(rv).to.equal('authorize(): foo account');\n      });","file":"authenticator.framework.test.js","skipped":false,"dir":"test"},{"name":"should have correct arity","suites":["Authenticator","#initialize"],"updatePoint":{"line":9,"column":33,"index":263},"line":9,"code":"    it('should have correct arity', function () {\n      var passport = new Authenticator();\n      expect(passport.initialize).to.have.length(1);\n    });","file":"authenticator.middleware.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["Authenticator","#initialize","handling a request"],"updatePoint":{"line":25,"column":26,"index":786},"line":25,"code":"      it('should not error', function () {\n        expect(error).to.be.undefined;\n      });","file":"authenticator.middleware.test.js","skipped":false,"dir":"test"},{"name":"should not set user property on request","suites":["Authenticator","#initialize","handling a request"],"updatePoint":{"line":28,"column":49,"index":901},"line":28,"code":"      it('should not set user property on request', function () {\n        expect(request._userProperty).to.be.undefined;\n      });","file":"authenticator.middleware.test.js","skipped":false,"dir":"test"},{"name":"should not initialize namespace within session","suites":["Authenticator","#initialize","handling a request"],"updatePoint":{"line":31,"column":56,"index":1039},"line":31,"code":"      it('should not initialize namespace within session', function () {\n        expect(request.session.passport).to.be.undefined;\n      });","file":"authenticator.middleware.test.js","skipped":false,"dir":"test"},{"name":"should expose authenticator on internal request property","suites":["Authenticator","#initialize","handling a request"],"updatePoint":{"line":34,"column":66,"index":1190},"line":34,"code":"      it('should expose authenticator on internal request property', function () {\n        expect(request._passport).to.be.an('object');\n        expect(request._passport.instance).to.be.an.instanceOf(Authenticator);\n        expect(request._passport.instance).to.equal(passport);\n        expect(request._passport.instance._sm).to.be.an('object');\n        expect(request._passport.instance._userProperty).to.equal('user');\n      });","file":"authenticator.middleware.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["Authenticator","#initialize","handling a request with custom user property"],"updatePoint":{"line":56,"column":26,"index":2041},"line":56,"code":"      it('should not error', function () {\n        expect(error).to.be.undefined;\n      });","file":"authenticator.middleware.test.js","skipped":false,"dir":"test"},{"name":"should set user property on request","suites":["Authenticator","#initialize","handling a request with custom user property"],"updatePoint":{"line":59,"column":45,"index":2152},"line":59,"code":"      it('should set user property on request', function () {\n        expect(request._userProperty).to.equal('currentUser');\n      });","file":"authenticator.middleware.test.js","skipped":false,"dir":"test"},{"name":"should not initialize namespace within session","suites":["Authenticator","#initialize","handling a request with custom user property"],"updatePoint":{"line":62,"column":56,"index":2298},"line":62,"code":"      it('should not initialize namespace within session', function () {\n        expect(request.session.passport).to.be.undefined;\n      });","file":"authenticator.middleware.test.js","skipped":false,"dir":"test"},{"name":"should expose authenticator on internal request property","suites":["Authenticator","#initialize","handling a request with custom user property"],"updatePoint":{"line":65,"column":66,"index":2449},"line":65,"code":"      it('should expose authenticator on internal request property', function () {\n        expect(request._passport).to.be.an('object');\n        expect(request._passport.instance).to.be.an.instanceOf(Authenticator);\n        expect(request._passport.instance).to.equal(passport);\n        expect(request._passport.instance._sm).to.be.an('object');\n        expect(request._passport.instance._userProperty).to.equal('currentUser');\n      });","file":"authenticator.middleware.test.js","skipped":false,"dir":"test"},{"name":"should have correct arity","suites":["Authenticator","#authenticate"],"updatePoint":{"line":75,"column":33,"index":2910},"line":75,"code":"    it('should have correct arity', function () {\n      var passport = new Authenticator();\n      expect(passport.authenticate).to.have.length(3);\n    });","file":"authenticator.middleware.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["Authenticator","#authenticate","handling a request"],"updatePoint":{"line":106,"column":26,"index":3794},"line":106,"code":"      it('should not error', function () {\n        expect(error).to.be.undefined;\n      });","file":"authenticator.middleware.test.js","skipped":false,"dir":"test"},{"name":"should set user","suites":["Authenticator","#authenticate","handling a request"],"updatePoint":{"line":109,"column":25,"index":3885},"line":109,"code":"      it('should set user', function () {\n        expect(request.user).to.be.an('object');\n        expect(request.user.id).to.equal('1');\n        expect(request.user.username).to.equal('jaredhanson');\n      });","file":"authenticator.middleware.test.js","skipped":false,"dir":"test"},{"name":"should set authInfo","suites":["Authenticator","#authenticate","handling a request"],"updatePoint":{"line":114,"column":29,"index":4100},"line":114,"code":"      it('should set authInfo', function () {\n        expect(request.authInfo).to.be.an('object');\n        expect(Object.keys(request.authInfo)).to.have.length(0);\n      });","file":"authenticator.middleware.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["Authenticator","#authenticate","handling a request with instantiated strategy"],"updatePoint":{"line":145,"column":26,"index":5000},"line":145,"code":"      it('should not error', function () {\n        expect(error).to.be.undefined;\n      });","file":"authenticator.middleware.test.js","skipped":false,"dir":"test"},{"name":"should set user","suites":["Authenticator","#authenticate","handling a request with instantiated strategy"],"updatePoint":{"line":148,"column":25,"index":5091},"line":148,"code":"      it('should set user', function () {\n        expect(request.user).to.be.an('object');\n        expect(request.user.id).to.equal('1');\n        expect(request.user.username).to.equal('jaredhanson');\n      });","file":"authenticator.middleware.test.js","skipped":false,"dir":"test"},{"name":"should set authInfo","suites":["Authenticator","#authenticate","handling a request with instantiated strategy"],"updatePoint":{"line":153,"column":29,"index":5306},"line":153,"code":"      it('should set authInfo', function () {\n        expect(request.authInfo).to.be.an('object');\n        expect(Object.keys(request.authInfo)).to.have.length(0);\n      });","file":"authenticator.middleware.test.js","skipped":false,"dir":"test"},{"name":"should have correct arity","suites":["Authenticator","#authorize"],"updatePoint":{"line":160,"column":33,"index":5537},"line":160,"code":"    it('should have correct arity', function () {\n      var passport = new Authenticator();\n      expect(passport.authorize).to.have.length(3);\n    });","file":"authenticator.middleware.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["Authenticator","#authorize","handling a request"],"updatePoint":{"line":191,"column":26,"index":6415},"line":191,"code":"      it('should not error', function () {\n        expect(error).to.be.undefined;\n      });","file":"authenticator.middleware.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["Authenticator","#authorize","handling a request"],"updatePoint":{"line":194,"column":29,"index":6510},"line":194,"code":"      it('should not set user', function () {\n        expect(request.user).to.be.undefined;\n      });","file":"authenticator.middleware.test.js","skipped":false,"dir":"test"},{"name":"should set account","suites":["Authenticator","#authorize","handling a request"],"updatePoint":{"line":197,"column":28,"index":6611},"line":197,"code":"      it('should set account', function () {\n        expect(request.account).to.be.an('object');\n        expect(request.account.id).to.equal('1');\n        expect(request.account.username).to.equal('jaredhanson');\n      });","file":"authenticator.middleware.test.js","skipped":false,"dir":"test"},{"name":"should not set authInfo","suites":["Authenticator","#authorize","handling a request"],"updatePoint":{"line":202,"column":33,"index":6839},"line":202,"code":"      it('should not set authInfo', function () {\n        expect(request.authInfo).to.be.undefined;\n      });","file":"authenticator.middleware.test.js","skipped":false,"dir":"test"},{"name":"should have correct arity","suites":["Authenticator","#session"],"updatePoint":{"line":208,"column":33,"index":7000},"line":208,"code":"    it('should have correct arity', function () {\n      var passport = new Authenticator();\n      expect(passport.session).to.have.length(1);\n    });","file":"authenticator.middleware.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["Authenticator","#session","handling a request"],"updatePoint":{"line":233,"column":26,"index":7794},"line":233,"code":"      it('should not error', function () {\n        expect(error).to.be.undefined;\n      });","file":"authenticator.middleware.test.js","skipped":false,"dir":"test"},{"name":"should set user","suites":["Authenticator","#session","handling a request"],"updatePoint":{"line":236,"column":25,"index":7885},"line":236,"code":"      it('should set user', function () {\n        expect(request.user).to.be.an('object');\n        expect(request.user.id).to.equal('123456');\n      });","file":"authenticator.middleware.test.js","skipped":false,"dir":"test"},{"name":"should maintain session","suites":["Authenticator","#session","handling a request"],"updatePoint":{"line":240,"column":33,"index":8046},"line":240,"code":"      it('should maintain session', function () {\n        expect(request.session['passport']).to.be.an('object');\n        expect(request.session['passport'].user).to.equal('123456');\n      });","file":"authenticator.middleware.test.js","skipped":false,"dir":"test"},{"name":"should register strategy","suites":["Authenticator","#use","with instance name"],"updatePoint":{"line":17,"column":34,"index":505},"line":17,"code":"      it('should register strategy', function () {\n        expect(authenticator._strategies['default']).to.be.an('object');\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should register strategy","suites":["Authenticator","#use","with registered name"],"updatePoint":{"line":28,"column":34,"index":883},"line":28,"code":"      it('should register strategy', function () {\n        expect(authenticator._strategies['foo']).to.be.an('object');\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should register strategy","suites":["Authenticator","#use","with registered name overridding instance name"],"updatePoint":{"line":41,"column":34,"index":1321},"line":41,"code":"      it('should register strategy', function () {\n        expect(authenticator._strategies['bar']).to.be.an('object');\n        expect(authenticator._strategies['default']).to.be.undefined;\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should throw if lacking a name","suites":["Authenticator","#use","with registered name overridding instance name"],"updatePoint":{"line":46,"column":38,"index":1533},"line":46,"code":"    it('should throw if lacking a name', function () {\n      function Strategy() {}\n\n      Strategy.prototype.authenticate = function (req) {};\n\n      expect(function () {\n        var authenticator = new Authenticator();\n        authenticator.use(new Strategy());\n      }).to.throw(Error, 'Authentication strategies must have a name');\n    });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should unregister strategy","suites":["Authenticator","#unuse"],"updatePoint":{"line":68,"column":34,"index":2299},"line":68,"code":"    it('should unregister strategy', function () {\n      expect(authenticator._strategies['one']).to.be.undefined;\n      expect(authenticator._strategies['two']).to.be.an('object');\n    });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should error","suites":["Authenticator","#serializeUser","without serializers"],"updatePoint":{"line":87,"column":22,"index":2874},"line":87,"code":"      it('should error', function () {\n        expect(error).to.be.an.instanceOf(Error);\n        expect(error.message).to.equal('Failed to serialize user into session');\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should not serialize user","suites":["Authenticator","#serializeUser","without serializers"],"updatePoint":{"line":91,"column":35,"index":3067},"line":91,"code":"      it('should not serialize user', function () {\n        expect(obj).to.be.undefined;\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["Authenticator","#serializeUser","with one serializer"],"updatePoint":{"line":111,"column":26,"index":3610},"line":111,"code":"      it('should not error', function () {\n        expect(error).to.be.null;\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should serialize user","suites":["Authenticator","#serializeUser","with one serializer"],"updatePoint":{"line":114,"column":31,"index":3702},"line":114,"code":"      it('should serialize user', function () {\n        expect(obj).to.equal('1');\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["Authenticator","#serializeUser","with one serializer that serializes to 0"],"updatePoint":{"line":134,"column":26,"index":4258},"line":134,"code":"      it('should not error', function () {\n        expect(error).to.be.null;\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should serialize user","suites":["Authenticator","#serializeUser","with one serializer that serializes to 0"],"updatePoint":{"line":137,"column":31,"index":4350},"line":137,"code":"      it('should serialize user', function () {\n        expect(obj).to.equal(0);\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should error","suites":["Authenticator","#serializeUser","with one serializer that serializes to false"],"updatePoint":{"line":157,"column":22,"index":4908},"line":157,"code":"      it('should error', function () {\n        expect(error).to.be.an.instanceOf(Error);\n        expect(error.message).to.equal('Failed to serialize user into session');\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should not serialize user","suites":["Authenticator","#serializeUser","with one serializer that serializes to false"],"updatePoint":{"line":161,"column":35,"index":5101},"line":161,"code":"      it('should not serialize user', function () {\n        expect(obj).to.be.undefined;\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should error","suites":["Authenticator","#serializeUser","with one serializer that serializes to null"],"updatePoint":{"line":181,"column":22,"index":5661},"line":181,"code":"      it('should error', function () {\n        expect(error).to.be.an.instanceOf(Error);\n        expect(error.message).to.equal('Failed to serialize user into session');\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should not serialize user","suites":["Authenticator","#serializeUser","with one serializer that serializes to null"],"updatePoint":{"line":185,"column":35,"index":5854},"line":185,"code":"      it('should not serialize user', function () {\n        expect(obj).to.be.undefined;\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should error","suites":["Authenticator","#serializeUser","with one serializer that serializes to undefined"],"updatePoint":{"line":205,"column":22,"index":6424},"line":205,"code":"      it('should error', function () {\n        expect(error).to.be.an.instanceOf(Error);\n        expect(error.message).to.equal('Failed to serialize user into session');\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should not serialize user","suites":["Authenticator","#serializeUser","with one serializer that serializes to undefined"],"updatePoint":{"line":209,"column":35,"index":6617},"line":209,"code":"      it('should not serialize user', function () {\n        expect(obj).to.be.undefined;\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should error","suites":["Authenticator","#serializeUser","with one serializer that encounters an error"],"updatePoint":{"line":229,"column":22,"index":7201},"line":229,"code":"      it('should error', function () {\n        expect(error).to.be.an.instanceOf(Error);\n        expect(error.message).to.equal('something went wrong');\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should not serialize user","suites":["Authenticator","#serializeUser","with one serializer that encounters an error"],"updatePoint":{"line":233,"column":35,"index":7377},"line":233,"code":"      it('should not serialize user', function () {\n        expect(obj).to.be.undefined;\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should error","suites":["Authenticator","#serializeUser","with one serializer that throws an exception"],"updatePoint":{"line":253,"column":22,"index":7970},"line":253,"code":"      it('should error', function () {\n        expect(error).to.be.an.instanceOf(Error);\n        expect(error.message).to.equal('something went horribly wrong');\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should not serialize user","suites":["Authenticator","#serializeUser","with one serializer that throws an exception"],"updatePoint":{"line":257,"column":35,"index":8155},"line":257,"code":"      it('should not serialize user', function () {\n        expect(obj).to.be.undefined;\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["Authenticator","#serializeUser","with three serializers, the first of which passes and the second of which serializes"],"updatePoint":{"line":283,"column":26,"index":8948},"line":283,"code":"      it('should not error', function () {\n        expect(error).to.be.null;\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should serialize user","suites":["Authenticator","#serializeUser","with three serializers, the first of which passes and the second of which serializes"],"updatePoint":{"line":286,"column":31,"index":9040},"line":286,"code":"      it('should serialize user', function () {\n        expect(obj).to.equal('two');\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["Authenticator","#serializeUser","with three serializers, the first of which passes and the second of which does not serialize by no argument"],"updatePoint":{"line":312,"column":26,"index":9849},"line":312,"code":"      it('should not error', function () {\n        expect(error).to.be.null;\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should serialize user","suites":["Authenticator","#serializeUser","with three serializers, the first of which passes and the second of which does not serialize by no argument"],"updatePoint":{"line":315,"column":31,"index":9941},"line":315,"code":"      it('should serialize user', function () {\n        expect(obj).to.equal('three');\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["Authenticator","#serializeUser","with three serializers, the first of which passes and the second of which does not serialize by undefined"],"updatePoint":{"line":341,"column":26,"index":10761},"line":341,"code":"      it('should not error', function () {\n        expect(error).to.be.null;\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should serialize user","suites":["Authenticator","#serializeUser","with three serializers, the first of which passes and the second of which does not serialize by undefined"],"updatePoint":{"line":344,"column":31,"index":10853},"line":344,"code":"      it('should serialize user', function () {\n        expect(obj).to.equal('three');\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["Authenticator","#serializeUser","with one serializer that takes request as argument"],"updatePoint":{"line":371,"column":26,"index":11597},"line":371,"code":"      it('should not error', function () {\n        expect(error).to.be.null;\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should serialize user","suites":["Authenticator","#serializeUser","with one serializer that takes request as argument"],"updatePoint":{"line":374,"column":31,"index":11689},"line":374,"code":"      it('should serialize user', function () {\n        expect(obj).to.equal('1');\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should error","suites":["Authenticator","#deserializeUser","without deserializers"],"updatePoint":{"line":393,"column":22,"index":12186},"line":393,"code":"      it('should error', function () {\n        expect(error).to.be.an.instanceOf(Error);\n        expect(error.message).to.equal('Failed to deserialize user out of session');\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should not deserialize user","suites":["Authenticator","#deserializeUser","without deserializers"],"updatePoint":{"line":397,"column":37,"index":12385},"line":397,"code":"      it('should not deserialize user', function () {\n        expect(user).to.be.undefined;\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["Authenticator","#deserializeUser","with one deserializer"],"updatePoint":{"line":417,"column":26,"index":12941},"line":417,"code":"      it('should not error', function () {\n        expect(error).to.be.null;\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should deserialize user","suites":["Authenticator","#deserializeUser","with one deserializer"],"updatePoint":{"line":420,"column":33,"index":13035},"line":420,"code":"      it('should deserialize user', function () {\n        expect(user).to.equal('jared');\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["Authenticator","#deserializeUser","with one deserializer that deserializes to false"],"updatePoint":{"line":440,"column":26,"index":13613},"line":440,"code":"      it('should not error', function () {\n        expect(error).to.be.null;\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should invalidate session","suites":["Authenticator","#deserializeUser","with one deserializer that deserializes to false"],"updatePoint":{"line":443,"column":35,"index":13709},"line":443,"code":"      it('should invalidate session', function () {\n        expect(user).to.be.false;\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["Authenticator","#deserializeUser","with one deserializer that deserializes to null"],"updatePoint":{"line":463,"column":26,"index":14279},"line":463,"code":"      it('should not error', function () {\n        expect(error).to.be.null;\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should invalidate session","suites":["Authenticator","#deserializeUser","with one deserializer that deserializes to null"],"updatePoint":{"line":466,"column":35,"index":14375},"line":466,"code":"      it('should invalidate session', function () {\n        expect(user).to.be.false;\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should error","suites":["Authenticator","#deserializeUser","with one deserializer that deserializes to undefined"],"updatePoint":{"line":486,"column":22,"index":14951},"line":486,"code":"      it('should error', function () {\n        expect(error).to.be.an.instanceOf(Error);\n        expect(error.message).to.equal('Failed to deserialize user out of session');\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should not deserialize user","suites":["Authenticator","#deserializeUser","with one deserializer that deserializes to undefined"],"updatePoint":{"line":490,"column":37,"index":15150},"line":490,"code":"      it('should not deserialize user', function () {\n        expect(user).to.be.undefined;\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should error","suites":["Authenticator","#deserializeUser","with one deserializer that encounters an error"],"updatePoint":{"line":510,"column":22,"index":15742},"line":510,"code":"      it('should error', function () {\n        expect(error).to.be.an.instanceOf(Error);\n        expect(error.message).to.equal('something went wrong');\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should invalidate session","suites":["Authenticator","#deserializeUser","with one deserializer that encounters an error"],"updatePoint":{"line":514,"column":35,"index":15918},"line":514,"code":"      it('should invalidate session', function () {\n        expect(user).to.be.undefined;\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should error","suites":["Authenticator","#deserializeUser","with one deserializer that throws an exception"],"updatePoint":{"line":534,"column":22,"index":16519},"line":534,"code":"      it('should error', function () {\n        expect(error).to.be.an.instanceOf(Error);\n        expect(error.message).to.equal('something went horribly wrong');\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should invalidate session","suites":["Authenticator","#deserializeUser","with one deserializer that throws an exception"],"updatePoint":{"line":538,"column":35,"index":16704},"line":538,"code":"      it('should invalidate session', function () {\n        expect(user).to.be.undefined;\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["Authenticator","#deserializeUser","with three deserializers, the first of which passes and the second of which deserializes"],"updatePoint":{"line":564,"column":26,"index":17509},"line":564,"code":"      it('should not error', function () {\n        expect(error).to.be.null;\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should deserialize user","suites":["Authenticator","#deserializeUser","with three deserializers, the first of which passes and the second of which deserializes"],"updatePoint":{"line":567,"column":33,"index":17603},"line":567,"code":"      it('should deserialize user', function () {\n        expect(user).to.equal('two');\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["Authenticator","#deserializeUser","with three deserializers, the first of which passes and the second of which does not deserialize by no argument"],"updatePoint":{"line":593,"column":26,"index":18424},"line":593,"code":"      it('should not error', function () {\n        expect(error).to.be.null;\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should deserialize user","suites":["Authenticator","#deserializeUser","with three deserializers, the first of which passes and the second of which does not deserialize by no argument"],"updatePoint":{"line":596,"column":33,"index":18518},"line":596,"code":"      it('should deserialize user', function () {\n        expect(user).to.equal('three');\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["Authenticator","#deserializeUser","with three deserializers, the first of which passes and the second of which does not deserialize by undefined"],"updatePoint":{"line":622,"column":26,"index":19350},"line":622,"code":"      it('should not error', function () {\n        expect(error).to.be.null;\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should deserialize user","suites":["Authenticator","#deserializeUser","with three deserializers, the first of which passes and the second of which does not deserialize by undefined"],"updatePoint":{"line":625,"column":33,"index":19444},"line":625,"code":"      it('should deserialize user', function () {\n        expect(user).to.equal('three');\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["Authenticator","#deserializeUser","with three deserializers, the first of which passes and the second of which invalidates session by false"],"updatePoint":{"line":651,"column":26,"index":20267},"line":651,"code":"      it('should not error', function () {\n        expect(error).to.be.null;\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should invalidate session","suites":["Authenticator","#deserializeUser","with three deserializers, the first of which passes and the second of which invalidates session by false"],"updatePoint":{"line":654,"column":35,"index":20363},"line":654,"code":"      it('should invalidate session', function () {\n        expect(user).to.be.false;\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["Authenticator","#deserializeUser","with three deserializers, the first of which passes and the second of which invalidates session by null"],"updatePoint":{"line":680,"column":26,"index":21178},"line":680,"code":"      it('should not error', function () {\n        expect(error).to.be.null;\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should invalidate session","suites":["Authenticator","#deserializeUser","with three deserializers, the first of which passes and the second of which invalidates session by null"],"updatePoint":{"line":683,"column":35,"index":21274},"line":683,"code":"      it('should invalidate session', function () {\n        expect(user).to.be.false;\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["Authenticator","#deserializeUser","with one deserializer that takes request as argument"],"updatePoint":{"line":710,"column":26,"index":22025},"line":710,"code":"      it('should not error', function () {\n        expect(error).to.be.null;\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should deserialize user","suites":["Authenticator","#deserializeUser","with one deserializer that takes request as argument"],"updatePoint":{"line":713,"column":33,"index":22119},"line":713,"code":"      it('should deserialize user', function () {\n        expect(user).to.equal('jared');\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["Authenticator","#transformAuthInfo","without transforms"],"updatePoint":{"line":732,"column":26,"index":22627},"line":732,"code":"      it('should not error', function () {\n        expect(error).to.be.null;\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should not transform info","suites":["Authenticator","#transformAuthInfo","without transforms"],"updatePoint":{"line":735,"column":35,"index":22723},"line":735,"code":"      it('should not transform info', function () {\n        expect(Object.keys(obj)).to.have.length(2);\n        expect(obj.clientId).to.equal('1');\n        expect(obj.scope).to.equal('write');\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["Authenticator","#transformAuthInfo","with one transform"],"updatePoint":{"line":762,"column":26,"index":23475},"line":762,"code":"      it('should not error', function () {\n        expect(error).to.be.null;\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should not transform info","suites":["Authenticator","#transformAuthInfo","with one transform"],"updatePoint":{"line":765,"column":35,"index":23571},"line":765,"code":"      it('should not transform info', function () {\n        expect(Object.keys(obj)).to.have.length(2);\n        expect(obj.clientId).to.equal('1');\n        expect(obj.client.name).to.equal('Foo');\n        expect(obj.scope).to.be.undefined;\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should error","suites":["Authenticator","#transformAuthInfo","with one transform that encounters an error"],"updatePoint":{"line":788,"column":22,"index":24316},"line":788,"code":"      it('should error', function () {\n        expect(error).to.be.an.instanceOf(Error);\n        expect(error.message).to.equal('something went wrong');\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should not transform info","suites":["Authenticator","#transformAuthInfo","with one transform that encounters an error"],"updatePoint":{"line":792,"column":35,"index":24492},"line":792,"code":"      it('should not transform info', function () {\n        expect(obj).to.be.undefined;\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should error","suites":["Authenticator","#transformAuthInfo","with one transform that throws an exception"],"updatePoint":{"line":812,"column":22,"index":25095},"line":812,"code":"      it('should error', function () {\n        expect(error).to.be.an.instanceOf(Error);\n        expect(error.message).to.equal('something went horribly wrong');\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should not transform info","suites":["Authenticator","#transformAuthInfo","with one transform that throws an exception"],"updatePoint":{"line":816,"column":35,"index":25280},"line":816,"code":"      it('should not transform info', function () {\n        expect(obj).to.be.undefined;\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["Authenticator","#transformAuthInfo","with one sync transform"],"updatePoint":{"line":841,"column":26,"index":25922},"line":841,"code":"      it('should not error', function () {\n        expect(error).to.be.null;\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should not transform info","suites":["Authenticator","#transformAuthInfo","with one sync transform"],"updatePoint":{"line":844,"column":35,"index":26018},"line":844,"code":"      it('should not transform info', function () {\n        expect(Object.keys(obj)).to.have.length(2);\n        expect(obj.clientId).to.equal('1');\n        expect(obj.client.name).to.equal('Foo');\n        expect(obj.scope).to.be.undefined;\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["Authenticator","#transformAuthInfo","with three transform, the first of which passes and the second of which transforms"],"updatePoint":{"line":883,"column":26,"index":27173},"line":883,"code":"      it('should not error', function () {\n        expect(error).to.be.null;\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should not transform info","suites":["Authenticator","#transformAuthInfo","with three transform, the first of which passes and the second of which transforms"],"updatePoint":{"line":886,"column":35,"index":27269},"line":886,"code":"      it('should not transform info', function () {\n        expect(Object.keys(obj)).to.have.length(2);\n        expect(obj.clientId).to.equal('1');\n        expect(obj.client.name).to.equal('Two');\n        expect(obj.scope).to.be.undefined;\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["Authenticator","#transformAuthInfo","with one transform that takes request as argument"],"updatePoint":{"line":921,"column":26,"index":28267},"line":921,"code":"      it('should not error', function () {\n        expect(error).to.be.null;\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should not transform info","suites":["Authenticator","#transformAuthInfo","with one transform that takes request as argument"],"updatePoint":{"line":924,"column":35,"index":28363},"line":924,"code":"      it('should not transform info', function () {\n        expect(Object.keys(obj)).to.have.length(2);\n        expect(obj.clientId).to.equal('1');\n        expect(obj.client.name).to.equal('Foo');\n        expect(obj.scope).to.be.undefined;\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["http.ServerRequest","#login","not establishing a session"],"updatePoint":{"line":57,"column":26,"index":1678},"line":57,"code":"      it('should not error', function () {\n        expect(error).to.be.undefined;\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should be authenticated","suites":["http.ServerRequest","#login","not establishing a session"],"updatePoint":{"line":60,"column":33,"index":1777},"line":60,"code":"      it('should be authenticated', function () {\n        expect(req.isAuthenticated()).to.be.true;\n        expect(req.isUnauthenticated()).to.be.false;\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should set user","suites":["http.ServerRequest","#login","not establishing a session"],"updatePoint":{"line":64,"column":25,"index":1932},"line":64,"code":"      it('should set user', function () {\n        expect(req.user).to.be.an('object');\n        expect(req.user.id).to.equal('1');\n        expect(req.user.username).to.equal('root');\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should not serialize user","suites":["http.ServerRequest","#login","not establishing a session"],"updatePoint":{"line":69,"column":35,"index":2134},"line":69,"code":"      it('should not serialize user', function () {\n        expect(req.session['passport'].user).to.be.undefined;\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["http.ServerRequest","#login","not establishing a session and setting custom user property"],"updatePoint":{"line":97,"column":26,"index":2993},"line":97,"code":"      it('should not error', function () {\n        expect(error).to.be.undefined;\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should be authenticated","suites":["http.ServerRequest","#login","not establishing a session and setting custom user property"],"updatePoint":{"line":100,"column":33,"index":3092},"line":100,"code":"      it('should be authenticated', function () {\n        expect(req.isAuthenticated()).to.be.true;\n        expect(req.isUnauthenticated()).to.be.false;\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["http.ServerRequest","#login","not establishing a session and setting custom user property"],"updatePoint":{"line":104,"column":29,"index":3251},"line":104,"code":"      it('should not set user', function () {\n        expect(req.user).to.be.undefined;\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should set custom user","suites":["http.ServerRequest","#login","not establishing a session and setting custom user property"],"updatePoint":{"line":107,"column":32,"index":3352},"line":107,"code":"      it('should set custom user', function () {\n        expect(req.currentUser).to.be.an('object');\n        expect(req.currentUser.id).to.equal('1');\n        expect(req.currentUser.username).to.equal('root');\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should not serialize user","suites":["http.ServerRequest","#login","not establishing a session and setting custom user property"],"updatePoint":{"line":112,"column":35,"index":3575},"line":112,"code":"      it('should not serialize user', function () {\n        expect(req.session['passport'].user).to.be.undefined;\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should be authenticated","suites":["http.ServerRequest","#login","not establishing a session and invoked without a callback"],"updatePoint":{"line":133,"column":33,"index":4257},"line":133,"code":"      it('should be authenticated', function () {\n        expect(req.isAuthenticated()).to.be.true;\n        expect(req.isUnauthenticated()).to.be.false;\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should set user","suites":["http.ServerRequest","#login","not establishing a session and invoked without a callback"],"updatePoint":{"line":137,"column":25,"index":4412},"line":137,"code":"      it('should set user', function () {\n        expect(req.user).to.be.an('object');\n        expect(req.user.id).to.equal('1');\n        expect(req.user.username).to.equal('root');\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should not serialize user","suites":["http.ServerRequest","#login","not establishing a session and invoked without a callback"],"updatePoint":{"line":142,"column":35,"index":4614},"line":142,"code":"      it('should not serialize user', function () {\n        expect(req.session['passport'].user).to.be.undefined;\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["http.ServerRequest","#login","not establishing a session, without passport.initialize() middleware"],"updatePoint":{"line":164,"column":26,"index":5277},"line":164,"code":"      it('should not error', function () {\n        expect(error).to.be.undefined;\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should be authenticated","suites":["http.ServerRequest","#login","not establishing a session, without passport.initialize() middleware"],"updatePoint":{"line":167,"column":33,"index":5376},"line":167,"code":"      it('should be authenticated', function () {\n        expect(req.isAuthenticated()).to.be.true;\n        expect(req.isUnauthenticated()).to.be.false;\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should set user","suites":["http.ServerRequest","#login","not establishing a session, without passport.initialize() middleware"],"updatePoint":{"line":171,"column":25,"index":5531},"line":171,"code":"      it('should set user', function () {\n        expect(req.user).to.be.an('object');\n        expect(req.user.id).to.equal('1');\n        expect(req.user.username).to.equal('root');\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["http.ServerRequest","#login","establishing a session"],"updatePoint":{"line":201,"column":26,"index":6450},"line":201,"code":"      it('should not error', function () {\n        expect(error).to.be.undefined;\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should be authenticated","suites":["http.ServerRequest","#login","establishing a session"],"updatePoint":{"line":204,"column":33,"index":6549},"line":204,"code":"      it('should be authenticated', function () {\n        expect(req.isAuthenticated()).to.be.true;\n        expect(req.isUnauthenticated()).to.be.false;\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should set user","suites":["http.ServerRequest","#login","establishing a session"],"updatePoint":{"line":208,"column":25,"index":6704},"line":208,"code":"      it('should set user', function () {\n        expect(req.user).to.be.an('object');\n        expect(req.user.id).to.equal('1');\n        expect(req.user.username).to.equal('root');\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should serialize user","suites":["http.ServerRequest","#login","establishing a session"],"updatePoint":{"line":213,"column":31,"index":6902},"line":213,"code":"      it('should serialize user', function () {\n        expect(req.session['passport'].user).to.equal('1');\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["http.ServerRequest","#login","establishing a session and setting custom user property"],"updatePoint":{"line":242,"column":26,"index":7815},"line":242,"code":"      it('should not error', function () {\n        expect(error).to.be.undefined;\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should be authenticated","suites":["http.ServerRequest","#login","establishing a session and setting custom user property"],"updatePoint":{"line":245,"column":33,"index":7914},"line":245,"code":"      it('should be authenticated', function () {\n        expect(req.isAuthenticated()).to.be.true;\n        expect(req.isUnauthenticated()).to.be.false;\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["http.ServerRequest","#login","establishing a session and setting custom user property"],"updatePoint":{"line":249,"column":29,"index":8073},"line":249,"code":"      it('should not set user', function () {\n        expect(req.user).to.be.undefined;\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should set custom user","suites":["http.ServerRequest","#login","establishing a session and setting custom user property"],"updatePoint":{"line":252,"column":32,"index":8174},"line":252,"code":"      it('should set custom user', function () {\n        expect(req.currentUser).to.be.an('object');\n        expect(req.currentUser.id).to.equal('1');\n        expect(req.currentUser.username).to.equal('root');\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should serialize user","suites":["http.ServerRequest","#login","establishing a session and setting custom user property"],"updatePoint":{"line":257,"column":31,"index":8393},"line":257,"code":"      it('should serialize user', function () {\n        expect(req.session['passport'].user).to.equal('1');\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should error","suites":["http.ServerRequest","#login","encountering an error when serializing to session"],"updatePoint":{"line":286,"column":22,"index":9311},"line":286,"code":"      it('should error', function () {\n        expect(error).to.be.an.instanceOf(Error);\n        expect(error.message).to.equal('something went wrong');\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should not be authenticated","suites":["http.ServerRequest","#login","encountering an error when serializing to session"],"updatePoint":{"line":290,"column":37,"index":9489},"line":290,"code":"      it('should not be authenticated', function () {\n        expect(req.isAuthenticated()).to.be.false;\n        expect(req.isUnauthenticated()).to.be.true;\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["http.ServerRequest","#login","encountering an error when serializing to session"],"updatePoint":{"line":294,"column":29,"index":9648},"line":294,"code":"      it('should not set user', function () {\n        expect(req.user).to.be.null;\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should not serialize user","suites":["http.ServerRequest","#login","encountering an error when serializing to session"],"updatePoint":{"line":297,"column":35,"index":9747},"line":297,"code":"      it('should not serialize user', function () {\n        expect(req.session['passport'].user).to.be.undefined;\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should throw an exception","suites":["http.ServerRequest","#login","establishing a session, but not passing a callback argument"],"updatePoint":{"line":331,"column":35,"index":10844},"line":331,"code":"      it('should throw an exception', function () {\n        expect(function () {\n          req.login(user);\n        }).to.throw(Error, 'req#login requires a callback function');\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should not be authenticated","suites":["http.ServerRequest","#logout","existing session"],"updatePoint":{"line":356,"column":37,"index":11644},"line":356,"code":"      it('should not be authenticated', function () {\n        expect(req.isAuthenticated()).to.be.false;\n        expect(req.isUnauthenticated()).to.be.true;\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should clear user","suites":["http.ServerRequest","#logout","existing session"],"updatePoint":{"line":360,"column":27,"index":11801},"line":360,"code":"      it('should clear user', function () {\n        expect(req.user).to.be.null;\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should clear serialized user","suites":["http.ServerRequest","#logout","existing session"],"updatePoint":{"line":363,"column":38,"index":11903},"line":363,"code":"      it('should clear serialized user', function () {\n        expect(req.session['passport'].user).to.be.undefined;\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should not be authenticated","suites":["http.ServerRequest","#logout","existing session and clearing custom user property"],"updatePoint":{"line":385,"column":37,"index":12679},"line":385,"code":"      it('should not be authenticated', function () {\n        expect(req.isAuthenticated()).to.be.false;\n        expect(req.isUnauthenticated()).to.be.true;\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should clear user","suites":["http.ServerRequest","#logout","existing session and clearing custom user property"],"updatePoint":{"line":389,"column":27,"index":12836},"line":389,"code":"      it('should clear user', function () {\n        expect(req.currentUser).to.be.null;\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should clear serialized user","suites":["http.ServerRequest","#logout","existing session and clearing custom user property"],"updatePoint":{"line":392,"column":38,"index":12945},"line":392,"code":"      it('should clear serialized user', function () {\n        expect(req.session['passport'].user).to.be.undefined;\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should not be authenticated","suites":["http.ServerRequest","#logout","existing session, without passport.initialize() middleware"],"updatePoint":{"line":406,"column":37,"index":13433},"line":406,"code":"      it('should not be authenticated', function () {\n        expect(req.isAuthenticated()).to.be.false;\n        expect(req.isUnauthenticated()).to.be.true;\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should clear user","suites":["http.ServerRequest","#logout","existing session, without passport.initialize() middleware"],"updatePoint":{"line":410,"column":27,"index":13590},"line":410,"code":"      it('should clear user', function () {\n        expect(req.user).to.be.null;\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should be authenticated","suites":["http.ServerRequest","#isAuthenticated","with a user"],"updatePoint":{"line":424,"column":33,"index":13998},"line":424,"code":"      it('should be authenticated', function () {\n        expect(req.isAuthenticated()).to.be.true;\n        expect(req.isUnauthenticated()).to.be.false;\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should be authenticated","suites":["http.ServerRequest","#isAuthenticated","with a user set on custom property"],"updatePoint":{"line":440,"column":33,"index":14553},"line":440,"code":"      it('should be authenticated', function () {\n        expect(req.isAuthenticated()).to.be.true;\n        expect(req.isUnauthenticated()).to.be.false;\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should not be authenticated","suites":["http.ServerRequest","#isAuthenticated","without a user"],"updatePoint":{"line":449,"column":37,"index":14913},"line":449,"code":"      it('should not be authenticated', function () {\n        expect(req.isAuthenticated()).to.be.false;\n        expect(req.isUnauthenticated()).to.be.true;\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should not be authenticated","suites":["http.ServerRequest","#isAuthenticated","with a null user"],"updatePoint":{"line":459,"column":37,"index":15298},"line":459,"code":"      it('should not be authenticated', function () {\n        expect(req.isAuthenticated()).to.be.false;\n        expect(req.isUnauthenticated()).to.be.true;\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should pass error to callback","suites":["middleware/authenticate","error with callback"],"updatePoint":{"line":30,"column":37,"index":851},"line":30,"code":"    it('should pass error to callback', function () {\n      expect(error).to.be.an.instanceOf(Error);\n      expect(error.message).to.equal('something is wrong');\n    });","file":"middleware/authenticate.error.callback.test.js","skipped":false,"dir":"test"},{"name":"should pass user as undefined to callback","suites":["middleware/authenticate","error with callback"],"updatePoint":{"line":34,"column":49,"index":1033},"line":34,"code":"    it('should pass user as undefined to callback', function () {\n      expect(request.user).to.be.undefined;\n    });","file":"middleware/authenticate.error.callback.test.js","skipped":false,"dir":"test"},{"name":"should not set user on request","suites":["middleware/authenticate","error with callback"],"updatePoint":{"line":37,"column":38,"index":1140},"line":37,"code":"    it('should not set user on request', function () {\n      expect(request.user).to.be.undefined;\n    });","file":"middleware/authenticate.error.callback.test.js","skipped":false,"dir":"test"},{"name":"should pass error to callback","suites":["middleware/authenticate","error with callback and options passed to middleware"],"updatePoint":{"line":64,"column":37,"index":1875},"line":64,"code":"    it('should pass error to callback', function () {\n      expect(error).to.be.an.instanceOf(Error);\n      expect(error.message).to.equal('something is wrong');\n    });","file":"middleware/authenticate.error.callback.test.js","skipped":false,"dir":"test"},{"name":"should pass user as undefined to callback","suites":["middleware/authenticate","error with callback and options passed to middleware"],"updatePoint":{"line":68,"column":49,"index":2057},"line":68,"code":"    it('should pass user as undefined to callback', function () {\n      expect(request.user).to.be.undefined;\n    });","file":"middleware/authenticate.error.callback.test.js","skipped":false,"dir":"test"},{"name":"should not set user on request","suites":["middleware/authenticate","error with callback and options passed to middleware"],"updatePoint":{"line":71,"column":38,"index":2164},"line":71,"code":"    it('should not set user on request', function () {\n      expect(request.user).to.be.undefined;\n    });","file":"middleware/authenticate.error.callback.test.js","skipped":false,"dir":"test"},{"name":"should error","suites":["middleware/authenticate","error"],"updatePoint":{"line":27,"column":20,"index":778},"line":27,"code":"    it('should error', function () {\n      expect(error).to.be.an.instanceOf(Error);\n      expect(error.message).to.equal('something is wrong');\n    });","file":"middleware/authenticate.error.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["middleware/authenticate","error"],"updatePoint":{"line":31,"column":27,"index":938},"line":31,"code":"    it('should not set user', function () {\n      expect(request.user).to.be.undefined;\n    });","file":"middleware/authenticate.error.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["middleware/authenticate","fail with callback"],"updatePoint":{"line":30,"column":24,"index":803},"line":30,"code":"    it('should not error', function () {\n      expect(error).to.be.null;\n    });","file":"middleware/authenticate.fail.callback.test.js","skipped":false,"dir":"test"},{"name":"should pass false to callback","suites":["middleware/authenticate","fail with callback"],"updatePoint":{"line":33,"column":37,"index":897},"line":33,"code":"    it('should pass false to callback', function () {\n      expect(user).to.equal(false);\n    });","file":"middleware/authenticate.fail.callback.test.js","skipped":false,"dir":"test"},{"name":"should not set user on request","suites":["middleware/authenticate","fail with callback"],"updatePoint":{"line":36,"column":38,"index":996},"line":36,"code":"    it('should not set user on request', function () {\n      expect(request.user).to.be.undefined;\n    });","file":"middleware/authenticate.fail.callback.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["middleware/authenticate","fail with callback, passing info"],"updatePoint":{"line":65,"column":24,"index":1737},"line":65,"code":"    it('should not error', function () {\n      expect(error).to.be.null;\n    });","file":"middleware/authenticate.fail.callback.test.js","skipped":false,"dir":"test"},{"name":"should pass false to callback","suites":["middleware/authenticate","fail with callback, passing info"],"updatePoint":{"line":68,"column":37,"index":1831},"line":68,"code":"    it('should pass false to callback', function () {\n      expect(user).to.equal(false);\n    });","file":"middleware/authenticate.fail.callback.test.js","skipped":false,"dir":"test"},{"name":"should pass info to callback","suites":["middleware/authenticate","fail with callback, passing info"],"updatePoint":{"line":71,"column":36,"index":1928},"line":71,"code":"    it('should pass info to callback', function () {\n      expect(info).to.be.an('object');\n      expect(info.message).to.equal('Invalid password');\n    });","file":"middleware/authenticate.fail.callback.test.js","skipped":false,"dir":"test"},{"name":"should pass status to callback","suites":["middleware/authenticate","fail with callback, passing info"],"updatePoint":{"line":75,"column":38,"index":2087},"line":75,"code":"    it('should pass status to callback', function () {\n      expect(status).to.be.undefined;\n    });","file":"middleware/authenticate.fail.callback.test.js","skipped":false,"dir":"test"},{"name":"should not set user on request","suites":["middleware/authenticate","fail with callback, passing info"],"updatePoint":{"line":78,"column":38,"index":2188},"line":78,"code":"    it('should not set user on request', function () {\n      expect(request.user).to.be.undefined;\n    });","file":"middleware/authenticate.fail.callback.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["middleware/authenticate","fail with callback, passing info and status"],"updatePoint":{"line":107,"column":24,"index":2945},"line":107,"code":"    it('should not error', function () {\n      expect(error).to.be.null;\n    });","file":"middleware/authenticate.fail.callback.test.js","skipped":false,"dir":"test"},{"name":"should pass false to callback","suites":["middleware/authenticate","fail with callback, passing info and status"],"updatePoint":{"line":110,"column":37,"index":3039},"line":110,"code":"    it('should pass false to callback', function () {\n      expect(user).to.equal(false);\n    });","file":"middleware/authenticate.fail.callback.test.js","skipped":false,"dir":"test"},{"name":"should pass info to callback","suites":["middleware/authenticate","fail with callback, passing info and status"],"updatePoint":{"line":113,"column":36,"index":3136},"line":113,"code":"    it('should pass info to callback', function () {\n      expect(info).to.be.an('object');\n      expect(info.message).to.equal('Invalid password');\n    });","file":"middleware/authenticate.fail.callback.test.js","skipped":false,"dir":"test"},{"name":"should pass status to callback","suites":["middleware/authenticate","fail with callback, passing info and status"],"updatePoint":{"line":117,"column":38,"index":3295},"line":117,"code":"    it('should pass status to callback', function () {\n      expect(status).to.equal(403);\n    });","file":"middleware/authenticate.fail.callback.test.js","skipped":false,"dir":"test"},{"name":"should not set user on request","suites":["middleware/authenticate","fail with callback, passing info and status"],"updatePoint":{"line":120,"column":38,"index":3394},"line":120,"code":"    it('should not set user on request', function () {\n      expect(request.user).to.be.undefined;\n    });","file":"middleware/authenticate.fail.callback.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["middleware/authenticate","fail with callback, passing challenge"],"updatePoint":{"line":147,"column":24,"index":4123},"line":147,"code":"    it('should not error', function () {\n      expect(error).to.be.null;\n    });","file":"middleware/authenticate.fail.callback.test.js","skipped":false,"dir":"test"},{"name":"should pass false to callback","suites":["middleware/authenticate","fail with callback, passing challenge"],"updatePoint":{"line":150,"column":37,"index":4217},"line":150,"code":"    it('should pass false to callback', function () {\n      expect(user).to.equal(false);\n    });","file":"middleware/authenticate.fail.callback.test.js","skipped":false,"dir":"test"},{"name":"should pass challenge to callback","suites":["middleware/authenticate","fail with callback, passing challenge"],"updatePoint":{"line":153,"column":41,"index":4319},"line":153,"code":"    it('should pass challenge to callback', function () {\n      expect(challenge).to.equal('Bearer challenge');\n    });","file":"middleware/authenticate.fail.callback.test.js","skipped":false,"dir":"test"},{"name":"should pass status to callback","suites":["middleware/authenticate","fail with callback, passing challenge"],"updatePoint":{"line":156,"column":38,"index":4436},"line":156,"code":"    it('should pass status to callback', function () {\n      expect(status).to.be.undefined;\n    });","file":"middleware/authenticate.fail.callback.test.js","skipped":false,"dir":"test"},{"name":"should not set user on request","suites":["middleware/authenticate","fail with callback, passing challenge"],"updatePoint":{"line":159,"column":38,"index":4537},"line":159,"code":"    it('should not set user on request', function () {\n      expect(request.user).to.be.undefined;\n    });","file":"middleware/authenticate.fail.callback.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["middleware/authenticate","fail with callback, passing challenge and status"],"updatePoint":{"line":186,"column":24,"index":5282},"line":186,"code":"    it('should not error', function () {\n      expect(error).to.be.null;\n    });","file":"middleware/authenticate.fail.callback.test.js","skipped":false,"dir":"test"},{"name":"should pass false to callback","suites":["middleware/authenticate","fail with callback, passing challenge and status"],"updatePoint":{"line":189,"column":37,"index":5376},"line":189,"code":"    it('should pass false to callback', function () {\n      expect(user).to.equal(false);\n    });","file":"middleware/authenticate.fail.callback.test.js","skipped":false,"dir":"test"},{"name":"should pass challenge to callback","suites":["middleware/authenticate","fail with callback, passing challenge and status"],"updatePoint":{"line":192,"column":41,"index":5478},"line":192,"code":"    it('should pass challenge to callback', function () {\n      expect(challenge).to.equal('Bearer challenge');\n    });","file":"middleware/authenticate.fail.callback.test.js","skipped":false,"dir":"test"},{"name":"should pass status to callback","suites":["middleware/authenticate","fail with callback, passing challenge and status"],"updatePoint":{"line":195,"column":38,"index":5595},"line":195,"code":"    it('should pass status to callback', function () {\n      expect(status).to.equal(403);\n    });","file":"middleware/authenticate.fail.callback.test.js","skipped":false,"dir":"test"},{"name":"should not set user on request","suites":["middleware/authenticate","fail with callback, passing challenge and status"],"updatePoint":{"line":198,"column":38,"index":5694},"line":198,"code":"    it('should not set user on request', function () {\n      expect(request.user).to.be.undefined;\n    });","file":"middleware/authenticate.fail.callback.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["middleware/authenticate","fail with callback, passing status"],"updatePoint":{"line":225,"column":24,"index":6405},"line":225,"code":"    it('should not error', function () {\n      expect(error).to.be.null;\n    });","file":"middleware/authenticate.fail.callback.test.js","skipped":false,"dir":"test"},{"name":"should pass false to callback","suites":["middleware/authenticate","fail with callback, passing status"],"updatePoint":{"line":228,"column":37,"index":6499},"line":228,"code":"    it('should pass false to callback', function () {\n      expect(user).to.equal(false);\n    });","file":"middleware/authenticate.fail.callback.test.js","skipped":false,"dir":"test"},{"name":"should pass challenge to callback","suites":["middleware/authenticate","fail with callback, passing status"],"updatePoint":{"line":231,"column":41,"index":6601},"line":231,"code":"    it('should pass challenge to callback', function () {\n      expect(challenge).to.be.undefined;\n    });","file":"middleware/authenticate.fail.callback.test.js","skipped":false,"dir":"test"},{"name":"should pass status to callback","suites":["middleware/authenticate","fail with callback, passing status"],"updatePoint":{"line":234,"column":38,"index":6705},"line":234,"code":"    it('should pass status to callback', function () {\n      expect(status).to.equal(402);\n    });","file":"middleware/authenticate.fail.callback.test.js","skipped":false,"dir":"test"},{"name":"should not set user on request","suites":["middleware/authenticate","fail with callback, passing status"],"updatePoint":{"line":237,"column":38,"index":6804},"line":237,"code":"    it('should not set user on request', function () {\n      expect(request.user).to.be.undefined;\n    });","file":"middleware/authenticate.fail.callback.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["middleware/authenticate","fail with callback and options passed to middleware"],"updatePoint":{"line":264,"column":24,"index":7491},"line":264,"code":"    it('should not error', function () {\n      expect(error).to.be.null;\n    });","file":"middleware/authenticate.fail.callback.test.js","skipped":false,"dir":"test"},{"name":"should pass false to callback","suites":["middleware/authenticate","fail with callback and options passed to middleware"],"updatePoint":{"line":267,"column":37,"index":7585},"line":267,"code":"    it('should pass false to callback', function () {\n      expect(user).to.equal(false);\n    });","file":"middleware/authenticate.fail.callback.test.js","skipped":false,"dir":"test"},{"name":"should not set user on request","suites":["middleware/authenticate","fail with callback and options passed to middleware"],"updatePoint":{"line":270,"column":38,"index":7684},"line":270,"code":"    it('should not set user on request', function () {\n      expect(request.user).to.be.undefined;\n    });","file":"middleware/authenticate.fail.callback.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["middleware/authenticate","using strategy that specifies message","fail with flash message"],"updatePoint":{"line":41,"column":29,"index":1215},"line":41,"code":"      it('should not set user', function () {\n        expect(request.user).to.be.undefined;\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should flash message","suites":["middleware/authenticate","using strategy that specifies message","fail with flash message"],"updatePoint":{"line":44,"column":30,"index":1318},"line":44,"code":"      it('should flash message', function () {\n        expect(request.message.type).to.equal('error');\n        expect(request.message.msg).to.equal('Invalid password');\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","using strategy that specifies message","fail with flash message"],"updatePoint":{"line":48,"column":25,"index":1492},"line":48,"code":"      it('should redirect', function () {\n        expect(response.statusCode).to.equal(302);\n        expect(response.getHeader('Location')).to.equal('http://www.example.com/login');\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["middleware/authenticate","using strategy that specifies message","fail with flash message using type set by route"],"updatePoint":{"line":86,"column":29,"index":2620},"line":86,"code":"      it('should not set user', function () {\n        expect(request.user).to.be.undefined;\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should flash message","suites":["middleware/authenticate","using strategy that specifies message","fail with flash message using type set by route"],"updatePoint":{"line":89,"column":30,"index":2723},"line":89,"code":"      it('should flash message', function () {\n        expect(request.message.type).to.equal('info');\n        expect(request.message.msg).to.equal('Invalid password');\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","using strategy that specifies message","fail with flash message using type set by route"],"updatePoint":{"line":93,"column":25,"index":2896},"line":93,"code":"      it('should redirect', function () {\n        expect(response.statusCode).to.equal(302);\n        expect(response.getHeader('Location')).to.equal('http://www.example.com/login');\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["middleware/authenticate","using strategy that specifies message","fail with flash message overridden by route as string"],"updatePoint":{"line":129,"column":29,"index":4011},"line":129,"code":"      it('should not set user', function () {\n        expect(request.user).to.be.undefined;\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should flash message","suites":["middleware/authenticate","using strategy that specifies message","fail with flash message overridden by route as string"],"updatePoint":{"line":132,"column":30,"index":4114},"line":132,"code":"      it('should flash message', function () {\n        expect(request.message.type).to.equal('error');\n        expect(request.message.msg).to.equal('Wrong credentials');\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","using strategy that specifies message","fail with flash message overridden by route as string"],"updatePoint":{"line":136,"column":25,"index":4289},"line":136,"code":"      it('should redirect', function () {\n        expect(response.statusCode).to.equal(302);\n        expect(response.getHeader('Location')).to.equal('http://www.example.com/login');\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["middleware/authenticate","using strategy that specifies message","fail with flash message overridden by route using options"],"updatePoint":{"line":174,"column":29,"index":5435},"line":174,"code":"      it('should not set user', function () {\n        expect(request.user).to.be.undefined;\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should flash message","suites":["middleware/authenticate","using strategy that specifies message","fail with flash message overridden by route using options"],"updatePoint":{"line":177,"column":30,"index":5538},"line":177,"code":"      it('should flash message', function () {\n        expect(request.message.type).to.equal('error');\n        expect(request.message.msg).to.equal('Try again');\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","using strategy that specifies message","fail with flash message overridden by route using options"],"updatePoint":{"line":181,"column":25,"index":5705},"line":181,"code":"      it('should redirect', function () {\n        expect(response.statusCode).to.equal(302);\n        expect(response.getHeader('Location')).to.equal('http://www.example.com/login');\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["middleware/authenticate","using strategy that specifies message","fail with flash message overridden by route using options with type"],"updatePoint":{"line":220,"column":29,"index":6889},"line":220,"code":"      it('should not set user', function () {\n        expect(request.user).to.be.undefined;\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should flash message","suites":["middleware/authenticate","using strategy that specifies message","fail with flash message overridden by route using options with type"],"updatePoint":{"line":223,"column":30,"index":6992},"line":223,"code":"      it('should flash message', function () {\n        expect(request.message.type).to.equal('notice');\n        expect(request.message.msg).to.equal('Try again');\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","using strategy that specifies message","fail with flash message overridden by route using options with type"],"updatePoint":{"line":227,"column":25,"index":7160},"line":227,"code":"      it('should redirect', function () {\n        expect(response.statusCode).to.equal(302);\n        expect(response.getHeader('Location')).to.equal('http://www.example.com/login');\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["middleware/authenticate","using strategy that specifies message and type","fail with flash message"],"updatePoint":{"line":266,"column":29,"index":8336},"line":266,"code":"      it('should not set user', function () {\n        expect(request.user).to.be.undefined;\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should flash message","suites":["middleware/authenticate","using strategy that specifies message and type","fail with flash message"],"updatePoint":{"line":269,"column":30,"index":8439},"line":269,"code":"      it('should flash message', function () {\n        expect(request.message.type).to.equal('notice');\n        expect(request.message.msg).to.equal('Invite required');\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","using strategy that specifies message and type","fail with flash message"],"updatePoint":{"line":273,"column":25,"index":8613},"line":273,"code":"      it('should redirect', function () {\n        expect(response.statusCode).to.equal(302);\n        expect(response.getHeader('Location')).to.equal('http://www.example.com/login');\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["middleware/authenticate","using strategy that specifies message and type","fail with flash message using type set by route"],"updatePoint":{"line":312,"column":29,"index":9766},"line":312,"code":"      it('should not set user', function () {\n        expect(request.user).to.be.undefined;\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should flash message","suites":["middleware/authenticate","using strategy that specifies message and type","fail with flash message using type set by route"],"updatePoint":{"line":315,"column":30,"index":9869},"line":315,"code":"      it('should flash message', function () {\n        expect(request.message.type).to.equal('info');\n        expect(request.message.msg).to.equal('Invite required');\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","using strategy that specifies message and type","fail with flash message using type set by route"],"updatePoint":{"line":319,"column":25,"index":10041},"line":319,"code":"      it('should redirect', function () {\n        expect(response.statusCode).to.equal(302);\n        expect(response.getHeader('Location')).to.equal('http://www.example.com/login');\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["middleware/authenticate","using strategy that specifies message and type","fail with flash message overridden by route as string"],"updatePoint":{"line":356,"column":29,"index":11181},"line":356,"code":"      it('should not set user', function () {\n        expect(request.user).to.be.undefined;\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should flash message","suites":["middleware/authenticate","using strategy that specifies message and type","fail with flash message overridden by route as string"],"updatePoint":{"line":359,"column":30,"index":11284},"line":359,"code":"      it('should flash message', function () {\n        expect(request.message.type).to.equal('error');\n        expect(request.message.msg).to.equal('Wrong credentials');\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","using strategy that specifies message and type","fail with flash message overridden by route as string"],"updatePoint":{"line":363,"column":25,"index":11459},"line":363,"code":"      it('should redirect', function () {\n        expect(response.statusCode).to.equal(302);\n        expect(response.getHeader('Location')).to.equal('http://www.example.com/login');\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["middleware/authenticate","using strategy that specifies message and type","fail with flash message overridden by route using options"],"updatePoint":{"line":402,"column":29,"index":12630},"line":402,"code":"      it('should not set user', function () {\n        expect(request.user).to.be.undefined;\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should flash message","suites":["middleware/authenticate","using strategy that specifies message and type","fail with flash message overridden by route using options"],"updatePoint":{"line":405,"column":30,"index":12733},"line":405,"code":"      it('should flash message', function () {\n        expect(request.message.type).to.equal('error');\n        expect(request.message.msg).to.equal('Try again');\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","using strategy that specifies message and type","fail with flash message overridden by route using options"],"updatePoint":{"line":409,"column":25,"index":12900},"line":409,"code":"      it('should redirect', function () {\n        expect(response.statusCode).to.equal(302);\n        expect(response.getHeader('Location')).to.equal('http://www.example.com/login');\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["middleware/authenticate","using strategy that specifies message and type","fail with flash message overridden by route using options with type"],"updatePoint":{"line":449,"column":29,"index":14107},"line":449,"code":"      it('should not set user', function () {\n        expect(request.user).to.be.undefined;\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should flash message","suites":["middleware/authenticate","using strategy that specifies message and type","fail with flash message overridden by route using options with type"],"updatePoint":{"line":452,"column":30,"index":14210},"line":452,"code":"      it('should flash message', function () {\n        expect(request.message.type).to.equal('info');\n        expect(request.message.msg).to.equal('Try again');\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","using strategy that specifies message and type","fail with flash message overridden by route using options with type"],"updatePoint":{"line":456,"column":25,"index":14376},"line":456,"code":"      it('should redirect', function () {\n        expect(response.statusCode).to.equal(302);\n        expect(response.getHeader('Location')).to.equal('http://www.example.com/login');\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["middleware/authenticate","using strategy that specifies message as string","fail with flash message"],"updatePoint":{"line":492,"column":29,"index":15494},"line":492,"code":"      it('should not set user', function () {\n        expect(request.user).to.be.undefined;\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should flash message","suites":["middleware/authenticate","using strategy that specifies message as string","fail with flash message"],"updatePoint":{"line":495,"column":30,"index":15597},"line":495,"code":"      it('should flash message', function () {\n        expect(request.message.type).to.equal('error');\n        expect(request.message.msg).to.equal('Access denied');\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","using strategy that specifies message as string","fail with flash message"],"updatePoint":{"line":499,"column":25,"index":15768},"line":499,"code":"      it('should redirect', function () {\n        expect(response.statusCode).to.equal(302);\n        expect(response.getHeader('Location')).to.equal('http://www.example.com/login');\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["middleware/authenticate","using strategy that specifies message as string","fail with flash message using type set by route"],"updatePoint":{"line":535,"column":29,"index":16862},"line":535,"code":"      it('should not set user', function () {\n        expect(request.user).to.be.undefined;\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should flash message","suites":["middleware/authenticate","using strategy that specifies message as string","fail with flash message using type set by route"],"updatePoint":{"line":538,"column":30,"index":16965},"line":538,"code":"      it('should flash message', function () {\n        expect(request.message.type).to.equal('info');\n        expect(request.message.msg).to.equal('Access denied');\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","using strategy that specifies message as string","fail with flash message using type set by route"],"updatePoint":{"line":542,"column":25,"index":17135},"line":542,"code":"      it('should redirect', function () {\n        expect(response.statusCode).to.equal(302);\n        expect(response.getHeader('Location')).to.equal('http://www.example.com/login');\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["middleware/authenticate","using strategy that specifies message as string","fail with flash message overridden by route as string"],"updatePoint":{"line":576,"column":29,"index":18216},"line":576,"code":"      it('should not set user', function () {\n        expect(request.user).to.be.undefined;\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should flash message","suites":["middleware/authenticate","using strategy that specifies message as string","fail with flash message overridden by route as string"],"updatePoint":{"line":579,"column":30,"index":18319},"line":579,"code":"      it('should flash message', function () {\n        expect(request.message.type).to.equal('error');\n        expect(request.message.msg).to.equal('Wrong credentials');\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","using strategy that specifies message as string","fail with flash message overridden by route as string"],"updatePoint":{"line":583,"column":25,"index":18494},"line":583,"code":"      it('should redirect', function () {\n        expect(response.statusCode).to.equal(302);\n        expect(response.getHeader('Location')).to.equal('http://www.example.com/login');\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["middleware/authenticate","using strategy that specifies message as string","fail with flash message overridden by route using options"],"updatePoint":{"line":619,"column":29,"index":19606},"line":619,"code":"      it('should not set user', function () {\n        expect(request.user).to.be.undefined;\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should flash message","suites":["middleware/authenticate","using strategy that specifies message as string","fail with flash message overridden by route using options"],"updatePoint":{"line":622,"column":30,"index":19709},"line":622,"code":"      it('should flash message', function () {\n        expect(request.message.type).to.equal('error');\n        expect(request.message.msg).to.equal('Try again');\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","using strategy that specifies message as string","fail with flash message overridden by route using options"],"updatePoint":{"line":626,"column":25,"index":19876},"line":626,"code":"      it('should redirect', function () {\n        expect(response.statusCode).to.equal(302);\n        expect(response.getHeader('Location')).to.equal('http://www.example.com/login');\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["middleware/authenticate","using strategy that specifies message as string","fail with flash message overridden by route using options with type"],"updatePoint":{"line":663,"column":29,"index":21026},"line":663,"code":"      it('should not set user', function () {\n        expect(request.user).to.be.undefined;\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should flash message","suites":["middleware/authenticate","using strategy that specifies message as string","fail with flash message overridden by route using options with type"],"updatePoint":{"line":666,"column":30,"index":21129},"line":666,"code":"      it('should flash message', function () {\n        expect(request.message.type).to.equal('notice');\n        expect(request.message.msg).to.equal('Try again');\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","using strategy that specifies message as string","fail with flash message overridden by route using options with type"],"updatePoint":{"line":670,"column":25,"index":21297},"line":670,"code":"      it('should redirect', function () {\n        expect(response.statusCode).to.equal(302);\n        expect(response.getHeader('Location')).to.equal('http://www.example.com/login');\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["middleware/authenticate","using strategy that does not specify message","fail with flash message left up to strategy"],"updatePoint":{"line":706,"column":29,"index":22417},"line":706,"code":"      it('should not set user', function () {\n        expect(request.user).to.be.undefined;\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should not flash message","suites":["middleware/authenticate","using strategy that does not specify message","fail with flash message left up to strategy"],"updatePoint":{"line":709,"column":34,"index":22524},"line":709,"code":"      it('should not flash message', function () {\n        expect(request.message).to.be.undefined;\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","using strategy that does not specify message","fail with flash message left up to strategy"],"updatePoint":{"line":712,"column":25,"index":22625},"line":712,"code":"      it('should redirect', function () {\n        expect(response.statusCode).to.equal(302);\n        expect(response.getHeader('Location')).to.equal('http://www.example.com/login');\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["middleware/authenticate","using strategy that does not specify message","fail with flash message left up to strategy using type set by route"],"updatePoint":{"line":748,"column":29,"index":23724},"line":748,"code":"      it('should not set user', function () {\n        expect(request.user).to.be.undefined;\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should not flash message","suites":["middleware/authenticate","using strategy that does not specify message","fail with flash message left up to strategy using type set by route"],"updatePoint":{"line":751,"column":34,"index":23831},"line":751,"code":"      it('should not flash message', function () {\n        expect(request.message).to.be.undefined;\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","using strategy that does not specify message","fail with flash message left up to strategy using type set by route"],"updatePoint":{"line":754,"column":25,"index":23932},"line":754,"code":"      it('should redirect', function () {\n        expect(response.statusCode).to.equal(302);\n        expect(response.getHeader('Location')).to.equal('http://www.example.com/login');\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["middleware/authenticate","using strategy that does not specify message","fail with flash message specified by route as string"],"updatePoint":{"line":788,"column":29,"index":24997},"line":788,"code":"      it('should not set user', function () {\n        expect(request.user).to.be.undefined;\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should flash message","suites":["middleware/authenticate","using strategy that does not specify message","fail with flash message specified by route as string"],"updatePoint":{"line":791,"column":30,"index":25100},"line":791,"code":"      it('should flash message', function () {\n        expect(request.message.type).to.equal('error');\n        expect(request.message.msg).to.equal('Wrong credentials');\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","using strategy that does not specify message","fail with flash message specified by route as string"],"updatePoint":{"line":795,"column":25,"index":25275},"line":795,"code":"      it('should redirect', function () {\n        expect(response.statusCode).to.equal(302);\n        expect(response.getHeader('Location')).to.equal('http://www.example.com/login');\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["middleware/authenticate","using strategy that does not specify message","fail with flash message specified by route using options"],"updatePoint":{"line":831,"column":29,"index":26371},"line":831,"code":"      it('should not set user', function () {\n        expect(request.user).to.be.undefined;\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should flash message","suites":["middleware/authenticate","using strategy that does not specify message","fail with flash message specified by route using options"],"updatePoint":{"line":834,"column":30,"index":26474},"line":834,"code":"      it('should flash message', function () {\n        expect(request.message.type).to.equal('error');\n        expect(request.message.msg).to.equal('Try again');\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","using strategy that does not specify message","fail with flash message specified by route using options"],"updatePoint":{"line":838,"column":25,"index":26641},"line":838,"code":"      it('should redirect', function () {\n        expect(response.statusCode).to.equal(302);\n        expect(response.getHeader('Location')).to.equal('http://www.example.com/login');\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["middleware/authenticate","using strategy that does not specify message","fail with flash message specified by route using options with type"],"updatePoint":{"line":875,"column":29,"index":27775},"line":875,"code":"      it('should not set user', function () {\n        expect(request.user).to.be.undefined;\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should flash message","suites":["middleware/authenticate","using strategy that does not specify message","fail with flash message specified by route using options with type"],"updatePoint":{"line":878,"column":30,"index":27878},"line":878,"code":"      it('should flash message', function () {\n        expect(request.message.type).to.equal('notice');\n        expect(request.message.msg).to.equal('Try again');\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","using strategy that does not specify message","fail with flash message specified by route using options with type"],"updatePoint":{"line":882,"column":25,"index":28046},"line":882,"code":"      it('should redirect', function () {\n        expect(response.statusCode).to.equal(302);\n        expect(response.getHeader('Location')).to.equal('http://www.example.com/login');\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["middleware/authenticate","fail with message set by route"],"updatePoint":{"line":33,"column":27,"index":975},"line":33,"code":"    it('should not set user', function () {\n      expect(request.user).to.be.undefined;\n    });","file":"middleware/authenticate.fail.message.test.js","skipped":false,"dir":"test"},{"name":"should add message to session","suites":["middleware/authenticate","fail with message set by route"],"updatePoint":{"line":36,"column":37,"index":1081},"line":36,"code":"    it('should add message to session', function () {\n      expect(request.session.messages).to.have.length(1);\n      expect(request.session.messages[0]).to.equal('Wrong credentials');\n    });","file":"middleware/authenticate.fail.message.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","fail with message set by route"],"updatePoint":{"line":40,"column":23,"index":1260},"line":40,"code":"    it('should redirect', function () {\n      expect(response.statusCode).to.equal(302);\n      expect(response.getHeader('Location')).to.equal('http://www.example.com/login');\n    });","file":"middleware/authenticate.fail.message.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["middleware/authenticate","fail with message set by route that is added to messages"],"updatePoint":{"line":70,"column":27,"index":2219},"line":70,"code":"    it('should not set user', function () {\n      expect(request.user).to.be.undefined;\n    });","file":"middleware/authenticate.fail.message.test.js","skipped":false,"dir":"test"},{"name":"should add message to session","suites":["middleware/authenticate","fail with message set by route that is added to messages"],"updatePoint":{"line":73,"column":37,"index":2325},"line":73,"code":"    it('should add message to session', function () {\n      expect(request.session.messages).to.have.length(2);\n      expect(request.session.messages[0]).to.equal('I exist!');\n      expect(request.session.messages[1]).to.equal('Wrong credentials');\n    });","file":"middleware/authenticate.fail.message.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","fail with message set by route that is added to messages"],"updatePoint":{"line":78,"column":23,"index":2568},"line":78,"code":"    it('should redirect', function () {\n      expect(response.statusCode).to.equal(302);\n      expect(response.getHeader('Location')).to.equal('http://www.example.com/login');\n    });","file":"middleware/authenticate.fail.message.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["middleware/authenticate","fail with message set by strategy"],"updatePoint":{"line":107,"column":27,"index":3444},"line":107,"code":"    it('should not set user', function () {\n      expect(request.user).to.be.undefined;\n    });","file":"middleware/authenticate.fail.message.test.js","skipped":false,"dir":"test"},{"name":"should add message to session","suites":["middleware/authenticate","fail with message set by strategy"],"updatePoint":{"line":110,"column":37,"index":3550},"line":110,"code":"    it('should add message to session', function () {\n      expect(request.session.messages).to.have.length(1);\n      expect(request.session.messages[0]).to.equal('Invalid password');\n    });","file":"middleware/authenticate.fail.message.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","fail with message set by strategy"],"updatePoint":{"line":114,"column":23,"index":3728},"line":114,"code":"    it('should redirect', function () {\n      expect(response.statusCode).to.equal(302);\n      expect(response.getHeader('Location')).to.equal('http://www.example.com/login');\n    });","file":"middleware/authenticate.fail.message.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["middleware/authenticate","fail with message set by strategy with extra info"],"updatePoint":{"line":144,"column":27,"index":4643},"line":144,"code":"    it('should not set user', function () {\n      expect(request.user).to.be.undefined;\n    });","file":"middleware/authenticate.fail.message.test.js","skipped":false,"dir":"test"},{"name":"should add message to session","suites":["middleware/authenticate","fail with message set by strategy with extra info"],"updatePoint":{"line":147,"column":37,"index":4749},"line":147,"code":"    it('should add message to session', function () {\n      expect(request.session.messages).to.have.length(1);\n      expect(request.session.messages[0]).to.equal('Invalid password');\n    });","file":"middleware/authenticate.fail.message.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","fail with message set by strategy with extra info"],"updatePoint":{"line":151,"column":23,"index":4927},"line":151,"code":"    it('should redirect', function () {\n      expect(response.statusCode).to.equal(302);\n      expect(response.getHeader('Location')).to.equal('http://www.example.com/login');\n    });","file":"middleware/authenticate.fail.message.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["middleware/authenticate","with multiple strategies, all of which fail, and responding with unauthorized status"],"updatePoint":{"line":48,"column":27,"index":1420},"line":48,"code":"    it('should not set user', function () {\n      expect(request.user).to.be.undefined;\n    });","file":"middleware/authenticate.fail.multi.test.js","skipped":false,"dir":"test"},{"name":"should respond","suites":["middleware/authenticate","with multiple strategies, all of which fail, and responding with unauthorized status"],"updatePoint":{"line":51,"column":22,"index":1511},"line":51,"code":"    it('should respond', function () {\n      expect(response.statusCode).to.equal(401);\n      expect(response.body).to.equal('Unauthorized');\n    });","file":"middleware/authenticate.fail.multi.test.js","skipped":false,"dir":"test"},{"name":"should set authenticate header on response","suites":["middleware/authenticate","with multiple strategies, all of which fail, and responding with unauthorized status"],"updatePoint":{"line":55,"column":50,"index":1689},"line":55,"code":"    it('should set authenticate header on response', function () {\n      var val = response.getHeader('WWW-Authenticate');\n      expect(val).to.be.an('array');\n      expect(val).to.have.length(2);\n      expect(val[0]).to.equal('BASIC challenge');\n      expect(val[1]).to.equal('DIGEST challenge');\n    });","file":"middleware/authenticate.fail.multi.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["middleware/authenticate","with multiple strategies, all of which fail, and responding with specified status"],"updatePoint":{"line":102,"column":27,"index":3127},"line":102,"code":"    it('should not set user', function () {\n      expect(request.user).to.be.undefined;\n    });","file":"middleware/authenticate.fail.multi.test.js","skipped":false,"dir":"test"},{"name":"should respond","suites":["middleware/authenticate","with multiple strategies, all of which fail, and responding with specified status"],"updatePoint":{"line":105,"column":22,"index":3218},"line":105,"code":"    it('should respond', function () {\n      expect(response.statusCode).to.equal(400);\n      expect(response.getHeader('WWW-Authenticate')).to.be.undefined;\n      expect(response.body).to.equal('Bad Request');\n    });","file":"middleware/authenticate.fail.multi.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["middleware/authenticate","with multiple strategies, all of which fail, and flashing message"],"updatePoint":{"line":146,"column":27,"index":4407},"line":146,"code":"    it('should not set user', function () {\n      expect(request.user).to.be.undefined;\n    });","file":"middleware/authenticate.fail.multi.test.js","skipped":false,"dir":"test"},{"name":"should flash message","suites":["middleware/authenticate","with multiple strategies, all of which fail, and flashing message"],"updatePoint":{"line":149,"column":28,"index":4504},"line":149,"code":"    it('should flash message', function () {\n      expect(request.message.type).to.equal('error');\n      expect(request.message.msg).to.equal('A message');\n    });","file":"middleware/authenticate.fail.multi.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","with multiple strategies, all of which fail, and flashing message"],"updatePoint":{"line":153,"column":23,"index":4663},"line":153,"code":"    it('should redirect', function () {\n      expect(response.statusCode).to.equal(302);\n      expect(response.getHeader('Location')).to.equal('http://www.example.com/login');\n    });","file":"middleware/authenticate.fail.multi.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["middleware/authenticate","with multiple strategies, all of which fail with unauthorized status, and invoking callback"],"updatePoint":{"line":195,"column":24,"index":5965},"line":195,"code":"    it('should not error', function () {\n      expect(error).to.be.null;\n    });","file":"middleware/authenticate.fail.multi.test.js","skipped":false,"dir":"test"},{"name":"should pass false to callback","suites":["middleware/authenticate","with multiple strategies, all of which fail with unauthorized status, and invoking callback"],"updatePoint":{"line":198,"column":37,"index":6059},"line":198,"code":"    it('should pass false to callback', function () {\n      expect(user).to.equal(false);\n    });","file":"middleware/authenticate.fail.multi.test.js","skipped":false,"dir":"test"},{"name":"should pass challenges to callback","suites":["middleware/authenticate","with multiple strategies, all of which fail with unauthorized status, and invoking callback"],"updatePoint":{"line":201,"column":42,"index":6162},"line":201,"code":"    it('should pass challenges to callback', function () {\n      expect(challenge).to.be.an('array');\n      expect(challenge).to.have.length(3);\n      expect(challenge[0]).to.equal('BASIC challenge');\n      expect(challenge[1]).to.be.undefined;\n      expect(challenge[2]).to.equal('DIGEST challenge');\n    });","file":"middleware/authenticate.fail.multi.test.js","skipped":false,"dir":"test"},{"name":"should pass statuses to callback","suites":["middleware/authenticate","with multiple strategies, all of which fail with unauthorized status, and invoking callback"],"updatePoint":{"line":208,"column":40,"index":6470},"line":208,"code":"    it('should pass statuses to callback', function () {\n      expect(status).to.be.an('array');\n      expect(status).to.have.length(3);\n      expect(status[0]).to.be.undefined;\n      expect(status[1]).to.be.undefined;\n      expect(status[2]).to.be.undefined;\n    });","file":"middleware/authenticate.fail.multi.test.js","skipped":false,"dir":"test"},{"name":"should not set user on request","suites":["middleware/authenticate","with multiple strategies, all of which fail with unauthorized status, and invoking callback"],"updatePoint":{"line":215,"column":38,"index":6736},"line":215,"code":"    it('should not set user on request', function () {\n      expect(request.user).to.be.undefined;\n    });","file":"middleware/authenticate.fail.multi.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["middleware/authenticate","with multiple strategies, all of which fail with specific status, and invoking callback"],"updatePoint":{"line":256,"column":24,"index":7955},"line":256,"code":"    it('should not error', function () {\n      expect(error).to.be.null;\n    });","file":"middleware/authenticate.fail.multi.test.js","skipped":false,"dir":"test"},{"name":"should pass false to callback","suites":["middleware/authenticate","with multiple strategies, all of which fail with specific status, and invoking callback"],"updatePoint":{"line":259,"column":37,"index":8049},"line":259,"code":"    it('should pass false to callback', function () {\n      expect(user).to.equal(false);\n    });","file":"middleware/authenticate.fail.multi.test.js","skipped":false,"dir":"test"},{"name":"should pass challenges to callback","suites":["middleware/authenticate","with multiple strategies, all of which fail with specific status, and invoking callback"],"updatePoint":{"line":262,"column":42,"index":8152},"line":262,"code":"    it('should pass challenges to callback', function () {\n      expect(challenge).to.be.an('array');\n      expect(challenge).to.have.length(3);\n      expect(challenge[0]).to.equal('BASIC challenge');\n      expect(challenge[1]).to.be.undefined;\n      expect(challenge[2]).to.equal('BEARER challenge');\n    });","file":"middleware/authenticate.fail.multi.test.js","skipped":false,"dir":"test"},{"name":"should pass statuses to callback","suites":["middleware/authenticate","with multiple strategies, all of which fail with specific status, and invoking callback"],"updatePoint":{"line":269,"column":40,"index":8460},"line":269,"code":"    it('should pass statuses to callback', function () {\n      expect(status).to.be.an('array');\n      expect(status).to.have.length(3);\n      expect(status[0]).to.equal(400);\n      expect(status[1]).to.equal(402);\n      expect(status[2]).to.equal(403);\n    });","file":"middleware/authenticate.fail.multi.test.js","skipped":false,"dir":"test"},{"name":"should not set user on request","suites":["middleware/authenticate","with multiple strategies, all of which fail with specific status, and invoking callback"],"updatePoint":{"line":276,"column":38,"index":8720},"line":276,"code":"    it('should not set user on request', function () {\n      expect(request.user).to.be.undefined;\n    });","file":"middleware/authenticate.fail.multi.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["middleware/authenticate","with single strategy in list, which fails with unauthorized status, and invoking callback"],"updatePoint":{"line":303,"column":24,"index":9519},"line":303,"code":"    it('should not error', function () {\n      expect(error).to.be.null;\n    });","file":"middleware/authenticate.fail.multi.test.js","skipped":false,"dir":"test"},{"name":"should pass false to callback","suites":["middleware/authenticate","with single strategy in list, which fails with unauthorized status, and invoking callback"],"updatePoint":{"line":306,"column":37,"index":9613},"line":306,"code":"    it('should pass false to callback', function () {\n      expect(user).to.equal(false);\n    });","file":"middleware/authenticate.fail.multi.test.js","skipped":false,"dir":"test"},{"name":"should pass challenges to callback","suites":["middleware/authenticate","with single strategy in list, which fails with unauthorized status, and invoking callback"],"updatePoint":{"line":309,"column":42,"index":9716},"line":309,"code":"    it('should pass challenges to callback', function () {\n      expect(challenge).to.be.an('array');\n      expect(challenge).to.have.length(1);\n      expect(challenge[0]).to.equal('BASIC challenge');\n    });","file":"middleware/authenticate.fail.multi.test.js","skipped":false,"dir":"test"},{"name":"should pass statuses to callback","suites":["middleware/authenticate","with single strategy in list, which fails with unauthorized status, and invoking callback"],"updatePoint":{"line":314,"column":40,"index":9923},"line":314,"code":"    it('should pass statuses to callback', function () {\n      expect(status).to.be.an('array');\n      expect(status).to.have.length(1);\n      expect(status[0]).to.be.undefined;\n    });","file":"middleware/authenticate.fail.multi.test.js","skipped":false,"dir":"test"},{"name":"should not set user on request","suites":["middleware/authenticate","with single strategy in list, which fails with unauthorized status, and invoking callback"],"updatePoint":{"line":319,"column":38,"index":10107},"line":319,"code":"    it('should not set user on request', function () {\n      expect(request.user).to.be.undefined;\n    });","file":"middleware/authenticate.fail.multi.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["middleware/authenticate","fail"],"updatePoint":{"line":27,"column":27,"index":755},"line":27,"code":"    it('should not set user', function () {\n      expect(request.user).to.be.undefined;\n    });","file":"middleware/authenticate.fail.test.js","skipped":false,"dir":"test"},{"name":"should respond","suites":["middleware/authenticate","fail"],"updatePoint":{"line":30,"column":22,"index":846},"line":30,"code":"    it('should respond', function () {\n      expect(response.statusCode).to.equal(401);\n      expect(response.getHeader('WWW-Authenticate')).to.be.undefined;\n      expect(response.body).to.equal('Unauthorized');\n    });","file":"middleware/authenticate.fail.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["middleware/authenticate","fail with redirect"],"updatePoint":{"line":56,"column":27,"index":1643},"line":56,"code":"    it('should not set user', function () {\n      expect(request.user).to.be.undefined;\n    });","file":"middleware/authenticate.fail.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","fail with redirect"],"updatePoint":{"line":59,"column":23,"index":1735},"line":59,"code":"    it('should redirect', function () {\n      expect(response.statusCode).to.equal(302);\n      expect(response.getHeader('Location')).to.equal('http://www.example.com/login');\n    });","file":"middleware/authenticate.fail.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["middleware/authenticate","fail with challenge"],"updatePoint":{"line":82,"column":27,"index":2434},"line":82,"code":"    it('should not set user', function () {\n      expect(request.user).to.be.undefined;\n    });","file":"middleware/authenticate.fail.test.js","skipped":false,"dir":"test"},{"name":"should respond","suites":["middleware/authenticate","fail with challenge"],"updatePoint":{"line":85,"column":22,"index":2525},"line":85,"code":"    it('should respond', function () {\n      expect(response.statusCode).to.equal(401);\n      expect(response.body).to.equal('Unauthorized');\n    });","file":"middleware/authenticate.fail.test.js","skipped":false,"dir":"test"},{"name":"should set authenticate header on response","suites":["middleware/authenticate","fail with challenge"],"updatePoint":{"line":89,"column":50,"index":2703},"line":89,"code":"    it('should set authenticate header on response', function () {\n      var val = response.getHeader('WWW-Authenticate');\n      expect(val).to.be.an('array');\n      expect(val).to.have.length(1);\n      expect(val[0]).to.equal('MOCK challenge');\n    });","file":"middleware/authenticate.fail.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["middleware/authenticate","fail with challenge and status"],"updatePoint":{"line":114,"column":27,"index":3461},"line":114,"code":"    it('should not set user', function () {\n      expect(request.user).to.be.undefined;\n    });","file":"middleware/authenticate.fail.test.js","skipped":false,"dir":"test"},{"name":"should respond","suites":["middleware/authenticate","fail with challenge and status"],"updatePoint":{"line":117,"column":22,"index":3552},"line":117,"code":"    it('should respond', function () {\n      expect(response.statusCode).to.equal(403);\n      expect(response.getHeader('WWW-Authenticate')).to.be.undefined;\n      expect(response.body).to.equal('Forbidden');\n    });","file":"middleware/authenticate.fail.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["middleware/authenticate","fail with status"],"updatePoint":{"line":141,"column":27,"index":4269},"line":141,"code":"    it('should not set user', function () {\n      expect(request.user).to.be.undefined;\n    });","file":"middleware/authenticate.fail.test.js","skipped":false,"dir":"test"},{"name":"should respond","suites":["middleware/authenticate","fail with status"],"updatePoint":{"line":144,"column":22,"index":4360},"line":144,"code":"    it('should respond', function () {\n      expect(response.statusCode).to.equal(400);\n      expect(response.getHeader('WWW-Authenticate')).to.be.undefined;\n      expect(response.body).to.equal('Bad Request');\n    });","file":"middleware/authenticate.fail.test.js","skipped":false,"dir":"test"},{"name":"should error","suites":["middleware/authenticate","fail with error"],"updatePoint":{"line":172,"column":20,"index":5177},"line":172,"code":"    it('should error', function () {\n      expect(error).to.be.an.instanceOf(Error);\n      expect(error.constructor.name).to.equal('AuthenticationError');\n      expect(error.message).to.equal('Unauthorized');\n      expect(error.status).to.equal(401);\n    });","file":"middleware/authenticate.fail.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["middleware/authenticate","fail with error"],"updatePoint":{"line":178,"column":27,"index":5443},"line":178,"code":"    it('should not set user', function () {\n      expect(request.user).to.be.undefined;\n    });","file":"middleware/authenticate.fail.test.js","skipped":false,"dir":"test"},{"name":"should not set body of response","suites":["middleware/authenticate","fail with error"],"updatePoint":{"line":181,"column":39,"index":5551},"line":181,"code":"    it('should not set body of response', function () {\n      expect(response.statusCode).to.equal(401);\n      expect(response.getHeader('WWW-Authenticate')).to.be.undefined;\n      expect(response.body).to.be.undefined;\n    });","file":"middleware/authenticate.fail.test.js","skipped":false,"dir":"test"},{"name":"should error","suites":["middleware/authenticate","fail with error, passing info to fail"],"updatePoint":{"line":211,"column":20,"index":6430},"line":211,"code":"    it('should error', function () {\n      expect(error).to.be.an.instanceOf(Error);\n      expect(error.constructor.name).to.equal('AuthenticationError');\n      expect(error.message).to.equal('Unauthorized');\n      expect(error.status).to.equal(401);\n    });","file":"middleware/authenticate.fail.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["middleware/authenticate","fail with error, passing info to fail"],"updatePoint":{"line":217,"column":27,"index":6696},"line":217,"code":"    it('should not set user', function () {\n      expect(request.user).to.be.undefined;\n    });","file":"middleware/authenticate.fail.test.js","skipped":false,"dir":"test"},{"name":"should not set body of response","suites":["middleware/authenticate","fail with error, passing info to fail"],"updatePoint":{"line":220,"column":39,"index":6804},"line":220,"code":"    it('should not set body of response', function () {\n      expect(response.statusCode).to.equal(401);\n      expect(response.getHeader('WWW-Authenticate')).to.be.undefined;\n      expect(response.body).to.be.undefined;\n    });","file":"middleware/authenticate.fail.test.js","skipped":false,"dir":"test"},{"name":"should error","suites":["middleware/authenticate","fail with error, passing info and status to fail"],"updatePoint":{"line":250,"column":20,"index":7700},"line":250,"code":"    it('should error', function () {\n      expect(error).to.be.an.instanceOf(Error);\n      expect(error.constructor.name).to.equal('AuthenticationError');\n      expect(error.message).to.equal('Bad Request');\n      expect(error.status).to.equal(400);\n    });","file":"middleware/authenticate.fail.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["middleware/authenticate","fail with error, passing info and status to fail"],"updatePoint":{"line":256,"column":27,"index":7965},"line":256,"code":"    it('should not set user', function () {\n      expect(request.user).to.be.undefined;\n    });","file":"middleware/authenticate.fail.test.js","skipped":false,"dir":"test"},{"name":"should not set body of response","suites":["middleware/authenticate","fail with error, passing info and status to fail"],"updatePoint":{"line":259,"column":39,"index":8073},"line":259,"code":"    it('should not set body of response', function () {\n      expect(response.statusCode).to.equal(400);\n      expect(response.getHeader('WWW-Authenticate')).to.be.undefined;\n      expect(response.body).to.be.undefined;\n    });","file":"middleware/authenticate.fail.test.js","skipped":false,"dir":"test"},{"name":"should error","suites":["middleware/authenticate","fail with error, passing challenge to fail"],"updatePoint":{"line":287,"column":20,"index":8927},"line":287,"code":"    it('should error', function () {\n      expect(error).to.be.an.instanceOf(Error);\n      expect(error.constructor.name).to.equal('AuthenticationError');\n      expect(error.message).to.equal('Unauthorized');\n      expect(error.status).to.equal(401);\n    });","file":"middleware/authenticate.fail.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["middleware/authenticate","fail with error, passing challenge to fail"],"updatePoint":{"line":293,"column":27,"index":9193},"line":293,"code":"    it('should not set user', function () {\n      expect(request.user).to.be.undefined;\n    });","file":"middleware/authenticate.fail.test.js","skipped":false,"dir":"test"},{"name":"should not set body of response","suites":["middleware/authenticate","fail with error, passing challenge to fail"],"updatePoint":{"line":296,"column":39,"index":9301},"line":296,"code":"    it('should not set body of response', function () {\n      expect(response.statusCode).to.equal(401);\n      expect(response.body).to.be.undefined;\n    });","file":"middleware/authenticate.fail.test.js","skipped":false,"dir":"test"},{"name":"should set authenticate header on response","suites":["middleware/authenticate","fail with error, passing challenge to fail"],"updatePoint":{"line":300,"column":50,"index":9470},"line":300,"code":"    it('should set authenticate header on response', function () {\n      var val = response.getHeader('WWW-Authenticate');\n      expect(val).to.be.an('array');\n      expect(val).to.have.length(1);\n      expect(val[0]).to.equal('Bearer challenge');\n    });","file":"middleware/authenticate.fail.test.js","skipped":false,"dir":"test"},{"name":"should error","suites":["middleware/authenticate","fail with error, passing challenge and status to fail"],"updatePoint":{"line":329,"column":20,"index":10357},"line":329,"code":"    it('should error', function () {\n      expect(error).to.be.an.instanceOf(Error);\n      expect(error.constructor.name).to.equal('AuthenticationError');\n      expect(error.message).to.equal('Forbidden');\n      expect(error.status).to.equal(403);\n    });","file":"middleware/authenticate.fail.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["middleware/authenticate","fail with error, passing challenge and status to fail"],"updatePoint":{"line":335,"column":27,"index":10620},"line":335,"code":"    it('should not set user', function () {\n      expect(request.user).to.be.undefined;\n    });","file":"middleware/authenticate.fail.test.js","skipped":false,"dir":"test"},{"name":"should not set body of response","suites":["middleware/authenticate","fail with error, passing challenge and status to fail"],"updatePoint":{"line":338,"column":39,"index":10728},"line":338,"code":"    it('should not set body of response', function () {\n      expect(response.statusCode).to.equal(403);\n      expect(response.getHeader('WWW-Authenticate')).to.be.undefined;\n      expect(response.body).to.be.undefined;\n    });","file":"middleware/authenticate.fail.test.js","skipped":false,"dir":"test"},{"name":"should error","suites":["middleware/authenticate","fail with error, passing status to fail"],"updatePoint":{"line":366,"column":20,"index":11564},"line":366,"code":"    it('should error', function () {\n      expect(error).to.be.an.instanceOf(Error);\n      expect(error.constructor.name).to.equal('AuthenticationError');\n      expect(error.message).to.equal('Payment Required');\n      expect(error.status).to.equal(402);\n    });","file":"middleware/authenticate.fail.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["middleware/authenticate","fail with error, passing status to fail"],"updatePoint":{"line":372,"column":27,"index":11834},"line":372,"code":"    it('should not set user', function () {\n      expect(request.user).to.be.undefined;\n    });","file":"middleware/authenticate.fail.test.js","skipped":false,"dir":"test"},{"name":"should not set body of response","suites":["middleware/authenticate","fail with error, passing status to fail"],"updatePoint":{"line":375,"column":39,"index":11942},"line":375,"code":"    it('should not set body of response', function () {\n      expect(response.statusCode).to.equal(402);\n      expect(response.getHeader('WWW-Authenticate')).to.be.undefined;\n      expect(response.body).to.be.undefined;\n    });","file":"middleware/authenticate.fail.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["middleware/authenticate","pass"],"updatePoint":{"line":27,"column":24,"index":747},"line":27,"code":"    it('should not error', function () {\n      expect(error).to.be.undefined;\n    });","file":"middleware/authenticate.pass.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["middleware/authenticate","pass"],"updatePoint":{"line":30,"column":27,"index":836},"line":30,"code":"    it('should not set user', function () {\n      expect(request.user).to.be.undefined;\n    });","file":"middleware/authenticate.pass.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["middleware/authenticate","redirect"],"updatePoint":{"line":27,"column":27,"index":799},"line":27,"code":"    it('should not set user', function () {\n      expect(request.user).to.be.undefined;\n    });","file":"middleware/authenticate.redirect.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","redirect"],"updatePoint":{"line":30,"column":23,"index":891},"line":30,"code":"    it('should redirect', function () {\n      expect(response.statusCode).to.equal(302);\n      expect(response.getHeader('Location')).to.equal('http://www.example.com/idp');\n      expect(response.getHeader('Content-Length')).to.equal('0');\n    });","file":"middleware/authenticate.redirect.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["middleware/authenticate","redirect with status"],"updatePoint":{"line":54,"column":27,"index":1684},"line":54,"code":"    it('should not set user', function () {\n      expect(request.user).to.be.undefined;\n    });","file":"middleware/authenticate.redirect.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","redirect with status"],"updatePoint":{"line":57,"column":23,"index":1776},"line":57,"code":"    it('should redirect', function () {\n      expect(response.statusCode).to.equal(303);\n      expect(response.getHeader('Location')).to.equal('http://www.example.com/idp');\n      expect(response.getHeader('Content-Length')).to.equal('0');\n    });","file":"middleware/authenticate.redirect.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["middleware/authenticate","redirect using framework function"],"updatePoint":{"line":81,"column":27,"index":2588},"line":81,"code":"    it('should not set user', function () {\n      expect(request.user).to.be.undefined;\n    });","file":"middleware/authenticate.redirect.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","redirect using framework function"],"updatePoint":{"line":84,"column":23,"index":2680},"line":84,"code":"    it('should redirect', function () {\n      expect(response.statusCode).to.equal(302);\n      expect(response.getHeader('Location')).to.equal('http://www.example.com/idp');\n    });","file":"middleware/authenticate.redirect.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["middleware/authenticate","redirect with status using framework function"],"updatePoint":{"line":107,"column":27,"index":3443},"line":107,"code":"    it('should not set user', function () {\n      expect(request.user).to.be.undefined;\n    });","file":"middleware/authenticate.redirect.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","redirect with status using framework function"],"updatePoint":{"line":110,"column":23,"index":3535},"line":110,"code":"    it('should redirect', function () {\n      expect(response.statusCode).to.equal(303);\n      expect(response.getHeader('Location')).to.equal('http://www.example.com/idp');\n    });","file":"middleware/authenticate.redirect.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["middleware/authenticate","success with callback"],"updatePoint":{"line":37,"column":24,"index":959},"line":37,"code":"    it('should not error', function () {\n      expect(error).to.be.null;\n    });","file":"middleware/authenticate.success.callback.test.js","skipped":false,"dir":"test"},{"name":"should pass user to callback","suites":["middleware/authenticate","success with callback"],"updatePoint":{"line":40,"column":36,"index":1052},"line":40,"code":"    it('should pass user to callback', function () {\n      expect(user).to.be.an('object');\n      expect(user.id).to.equal('1');\n      expect(user.username).to.equal('jaredhanson');\n    });","file":"middleware/authenticate.success.callback.test.js","skipped":false,"dir":"test"},{"name":"should pass info to callback","suites":["middleware/authenticate","success with callback"],"updatePoint":{"line":45,"column":36,"index":1242},"line":45,"code":"    it('should pass info to callback', function () {\n      expect(info).to.be.an('object');\n      expect(info.message).to.equal('Hello');\n    });","file":"middleware/authenticate.success.callback.test.js","skipped":false,"dir":"test"},{"name":"should not set user on request","suites":["middleware/authenticate","success with callback"],"updatePoint":{"line":49,"column":38,"index":1390},"line":49,"code":"    it('should not set user on request', function () {\n      expect(request.user).to.be.undefined;\n    });","file":"middleware/authenticate.success.callback.test.js","skipped":false,"dir":"test"},{"name":"should not set authInfo on request","suites":["middleware/authenticate","success with callback"],"updatePoint":{"line":52,"column":42,"index":1501},"line":52,"code":"    it('should not set authInfo on request', function () {\n      expect(request.authInfo).to.be.undefined;\n    });","file":"middleware/authenticate.success.callback.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["middleware/authenticate","success with callback and options passed to middleware"],"updatePoint":{"line":86,"column":24,"index":2348},"line":86,"code":"    it('should not error', function () {\n      expect(error).to.be.null;\n    });","file":"middleware/authenticate.success.callback.test.js","skipped":false,"dir":"test"},{"name":"should pass user to callback","suites":["middleware/authenticate","success with callback and options passed to middleware"],"updatePoint":{"line":89,"column":36,"index":2441},"line":89,"code":"    it('should pass user to callback', function () {\n      expect(user).to.be.an('object');\n      expect(user.id).to.equal('1');\n      expect(user.username).to.equal('jaredhanson');\n    });","file":"middleware/authenticate.success.callback.test.js","skipped":false,"dir":"test"},{"name":"should pass info to callback","suites":["middleware/authenticate","success with callback and options passed to middleware"],"updatePoint":{"line":94,"column":36,"index":2631},"line":94,"code":"    it('should pass info to callback', function () {\n      expect(info).to.be.an('object');\n      expect(info.message).to.equal('Hello');\n    });","file":"middleware/authenticate.success.callback.test.js","skipped":false,"dir":"test"},{"name":"should not set user on request","suites":["middleware/authenticate","success with callback and options passed to middleware"],"updatePoint":{"line":98,"column":38,"index":2779},"line":98,"code":"    it('should not set user on request', function () {\n      expect(request.user).to.be.undefined;\n    });","file":"middleware/authenticate.success.callback.test.js","skipped":false,"dir":"test"},{"name":"should not set authInfo on request","suites":["middleware/authenticate","success with callback and options passed to middleware"],"updatePoint":{"line":101,"column":42,"index":2890},"line":101,"code":"    it('should not set authInfo on request', function () {\n      expect(request.authInfo).to.be.undefined;\n    });","file":"middleware/authenticate.success.callback.test.js","skipped":false,"dir":"test"},{"name":"should set user","suites":["middleware/authenticate","using strategy that specifies message","success with flash message"],"updatePoint":{"line":50,"column":25,"index":1436},"line":50,"code":"      it('should set user', function () {\n        expect(request.user).to.be.an('object');\n        expect(request.user.id).to.equal('1');\n        expect(request.user.username).to.equal('jaredhanson');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should flash message","suites":["middleware/authenticate","using strategy that specifies message","success with flash message"],"updatePoint":{"line":55,"column":30,"index":1652},"line":55,"code":"      it('should flash message', function () {\n        expect(request.message.type).to.equal('success');\n        expect(request.message.msg).to.equal('Welcome!');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","using strategy that specifies message","success with flash message"],"updatePoint":{"line":59,"column":25,"index":1820},"line":59,"code":"      it('should redirect', function () {\n        expect(response.statusCode).to.equal(302);\n        expect(response.getHeader('Location')).to.equal('http://www.example.com/account');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should set user","suites":["middleware/authenticate","using strategy that specifies message","success with flash message using type set by route"],"updatePoint":{"line":106,"column":25,"index":3171},"line":106,"code":"      it('should set user', function () {\n        expect(request.user).to.be.an('object');\n        expect(request.user.id).to.equal('1');\n        expect(request.user.username).to.equal('jaredhanson');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should flash message","suites":["middleware/authenticate","using strategy that specifies message","success with flash message using type set by route"],"updatePoint":{"line":111,"column":30,"index":3387},"line":111,"code":"      it('should flash message', function () {\n        expect(request.message.type).to.equal('info');\n        expect(request.message.msg).to.equal('Welcome!');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","using strategy that specifies message","success with flash message using type set by route"],"updatePoint":{"line":115,"column":25,"index":3552},"line":115,"code":"      it('should redirect', function () {\n        expect(response.statusCode).to.equal(302);\n        expect(response.getHeader('Location')).to.equal('http://www.example.com/account');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should set user","suites":["middleware/authenticate","using strategy that specifies message","success with flash message overridden by route as string"],"updatePoint":{"line":160,"column":25,"index":4887},"line":160,"code":"      it('should set user', function () {\n        expect(request.user).to.be.an('object');\n        expect(request.user.id).to.equal('1');\n        expect(request.user.username).to.equal('jaredhanson');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should flash message","suites":["middleware/authenticate","using strategy that specifies message","success with flash message overridden by route as string"],"updatePoint":{"line":165,"column":30,"index":5103},"line":165,"code":"      it('should flash message', function () {\n        expect(request.message.type).to.equal('success');\n        expect(request.message.msg).to.equal('Login complete');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","using strategy that specifies message","success with flash message overridden by route as string"],"updatePoint":{"line":169,"column":25,"index":5277},"line":169,"code":"      it('should redirect', function () {\n        expect(response.statusCode).to.equal(302);\n        expect(response.getHeader('Location')).to.equal('http://www.example.com/account');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should set user","suites":["middleware/authenticate","using strategy that specifies message","success with flash message overridden by route using options"],"updatePoint":{"line":216,"column":25,"index":6639},"line":216,"code":"      it('should set user', function () {\n        expect(request.user).to.be.an('object');\n        expect(request.user.id).to.equal('1');\n        expect(request.user.username).to.equal('jaredhanson');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should flash message","suites":["middleware/authenticate","using strategy that specifies message","success with flash message overridden by route using options"],"updatePoint":{"line":221,"column":30,"index":6855},"line":221,"code":"      it('should flash message', function () {\n        expect(request.message.type).to.equal('success');\n        expect(request.message.msg).to.equal('OK');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","using strategy that specifies message","success with flash message overridden by route using options"],"updatePoint":{"line":225,"column":25,"index":7017},"line":225,"code":"      it('should redirect', function () {\n        expect(response.statusCode).to.equal(302);\n        expect(response.getHeader('Location')).to.equal('http://www.example.com/account');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should set user","suites":["middleware/authenticate","using strategy that specifies message","success with flash message overridden by route using options with type"],"updatePoint":{"line":273,"column":25,"index":8439},"line":273,"code":"      it('should set user', function () {\n        expect(request.user).to.be.an('object');\n        expect(request.user.id).to.equal('1');\n        expect(request.user.username).to.equal('jaredhanson');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should flash message","suites":["middleware/authenticate","using strategy that specifies message","success with flash message overridden by route using options with type"],"updatePoint":{"line":278,"column":30,"index":8655},"line":278,"code":"      it('should flash message', function () {\n        expect(request.message.type).to.equal('notice');\n        expect(request.message.msg).to.equal('Last login was yesterday');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","using strategy that specifies message","success with flash message overridden by route using options with type"],"updatePoint":{"line":282,"column":25,"index":8838},"line":282,"code":"      it('should redirect', function () {\n        expect(response.statusCode).to.equal(302);\n        expect(response.getHeader('Location')).to.equal('http://www.example.com/account');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should set user","suites":["middleware/authenticate","using strategy that specifies message and type","success with flash message"],"updatePoint":{"line":330,"column":25,"index":10233},"line":330,"code":"      it('should set user', function () {\n        expect(request.user).to.be.an('object');\n        expect(request.user.id).to.equal('1');\n        expect(request.user.username).to.equal('jaredhanson');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should flash message","suites":["middleware/authenticate","using strategy that specifies message and type","success with flash message"],"updatePoint":{"line":335,"column":30,"index":10449},"line":335,"code":"      it('should flash message', function () {\n        expect(request.message.type).to.equal('info');\n        expect(request.message.msg).to.equal('Hello');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","using strategy that specifies message and type","success with flash message"],"updatePoint":{"line":339,"column":25,"index":10611},"line":339,"code":"      it('should redirect', function () {\n        expect(response.statusCode).to.equal(302);\n        expect(response.getHeader('Location')).to.equal('http://www.example.com/account');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should set user","suites":["middleware/authenticate","using strategy that specifies message and type","success with flash message using type set by route"],"updatePoint":{"line":387,"column":25,"index":11981},"line":387,"code":"      it('should set user', function () {\n        expect(request.user).to.be.an('object');\n        expect(request.user.id).to.equal('1');\n        expect(request.user.username).to.equal('jaredhanson');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should flash message","suites":["middleware/authenticate","using strategy that specifies message and type","success with flash message using type set by route"],"updatePoint":{"line":392,"column":30,"index":12197},"line":392,"code":"      it('should flash message', function () {\n        expect(request.message.type).to.equal('ok');\n        expect(request.message.msg).to.equal('Hello');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","using strategy that specifies message and type","success with flash message using type set by route"],"updatePoint":{"line":396,"column":25,"index":12357},"line":396,"code":"      it('should redirect', function () {\n        expect(response.statusCode).to.equal(302);\n        expect(response.getHeader('Location')).to.equal('http://www.example.com/account');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should set user","suites":["middleware/authenticate","using strategy that specifies message and type","success with flash message overridden by route as string"],"updatePoint":{"line":442,"column":25,"index":13707},"line":442,"code":"      it('should set user', function () {\n        expect(request.user).to.be.an('object');\n        expect(request.user.id).to.equal('1');\n        expect(request.user.username).to.equal('jaredhanson');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should flash message","suites":["middleware/authenticate","using strategy that specifies message and type","success with flash message overridden by route as string"],"updatePoint":{"line":447,"column":30,"index":13923},"line":447,"code":"      it('should flash message', function () {\n        expect(request.message.type).to.equal('success');\n        expect(request.message.msg).to.equal('Success!');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","using strategy that specifies message and type","success with flash message overridden by route as string"],"updatePoint":{"line":451,"column":25,"index":14091},"line":451,"code":"      it('should redirect', function () {\n        expect(response.statusCode).to.equal(302);\n        expect(response.getHeader('Location')).to.equal('http://www.example.com/account');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should set user","suites":["middleware/authenticate","using strategy that specifies message and type","success with flash message overridden by route using options"],"updatePoint":{"line":499,"column":25,"index":15476},"line":499,"code":"      it('should set user', function () {\n        expect(request.user).to.be.an('object');\n        expect(request.user.id).to.equal('1');\n        expect(request.user.username).to.equal('jaredhanson');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should flash message","suites":["middleware/authenticate","using strategy that specifies message and type","success with flash message overridden by route using options"],"updatePoint":{"line":504,"column":30,"index":15692},"line":504,"code":"      it('should flash message', function () {\n        expect(request.message.type).to.equal('success');\n        expect(request.message.msg).to.equal('Okay');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","using strategy that specifies message and type","success with flash message overridden by route using options"],"updatePoint":{"line":508,"column":25,"index":15856},"line":508,"code":"      it('should redirect', function () {\n        expect(response.statusCode).to.equal(302);\n        expect(response.getHeader('Location')).to.equal('http://www.example.com/account');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should set user","suites":["middleware/authenticate","using strategy that specifies message and type","success with flash message overridden by route using options with type"],"updatePoint":{"line":557,"column":25,"index":17303},"line":557,"code":"      it('should set user', function () {\n        expect(request.user).to.be.an('object');\n        expect(request.user.id).to.equal('1');\n        expect(request.user.username).to.equal('jaredhanson');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should flash message","suites":["middleware/authenticate","using strategy that specifies message and type","success with flash message overridden by route using options with type"],"updatePoint":{"line":562,"column":30,"index":17519},"line":562,"code":"      it('should flash message', function () {\n        expect(request.message.type).to.equal('warn');\n        expect(request.message.msg).to.equal('Last login from far away place');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","using strategy that specifies message and type","success with flash message overridden by route using options with type"],"updatePoint":{"line":566,"column":25,"index":17706},"line":566,"code":"      it('should redirect', function () {\n        expect(response.statusCode).to.equal(302);\n        expect(response.getHeader('Location')).to.equal('http://www.example.com/account');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should set user","suites":["middleware/authenticate","using strategy that specifies message as string","success with flash message"],"updatePoint":{"line":611,"column":25,"index":19051},"line":611,"code":"      it('should set user', function () {\n        expect(request.user).to.be.an('object');\n        expect(request.user.id).to.equal('1');\n        expect(request.user.username).to.equal('jaredhanson');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should flash message","suites":["middleware/authenticate","using strategy that specifies message as string","success with flash message"],"updatePoint":{"line":616,"column":30,"index":19267},"line":616,"code":"      it('should flash message', function () {\n        expect(request.message.type).to.equal('success');\n        expect(request.message.msg).to.equal('Greetings');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","using strategy that specifies message as string","success with flash message"],"updatePoint":{"line":620,"column":25,"index":19436},"line":620,"code":"      it('should redirect', function () {\n        expect(response.statusCode).to.equal(302);\n        expect(response.getHeader('Location')).to.equal('http://www.example.com/account');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should set user","suites":["middleware/authenticate","using strategy that specifies message as string","success with flash message using type set by route"],"updatePoint":{"line":665,"column":25,"index":20757},"line":665,"code":"      it('should set user', function () {\n        expect(request.user).to.be.an('object');\n        expect(request.user.id).to.equal('1');\n        expect(request.user.username).to.equal('jaredhanson');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should flash message","suites":["middleware/authenticate","using strategy that specifies message as string","success with flash message using type set by route"],"updatePoint":{"line":670,"column":30,"index":20973},"line":670,"code":"      it('should flash message', function () {\n        expect(request.message.type).to.equal('info');\n        expect(request.message.msg).to.equal('Greetings');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","using strategy that specifies message as string","success with flash message using type set by route"],"updatePoint":{"line":674,"column":25,"index":21139},"line":674,"code":"      it('should redirect', function () {\n        expect(response.statusCode).to.equal(302);\n        expect(response.getHeader('Location')).to.equal('http://www.example.com/account');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should set user","suites":["middleware/authenticate","using strategy that specifies message as string","success with flash message overridden by route as string"],"updatePoint":{"line":717,"column":25,"index":22444},"line":717,"code":"      it('should set user', function () {\n        expect(request.user).to.be.an('object');\n        expect(request.user.id).to.equal('1');\n        expect(request.user.username).to.equal('jaredhanson');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should flash message","suites":["middleware/authenticate","using strategy that specifies message as string","success with flash message overridden by route as string"],"updatePoint":{"line":722,"column":30,"index":22660},"line":722,"code":"      it('should flash message', function () {\n        expect(request.message.type).to.equal('success');\n        expect(request.message.msg).to.equal('Login complete');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","using strategy that specifies message as string","success with flash message overridden by route as string"],"updatePoint":{"line":726,"column":25,"index":22834},"line":726,"code":"      it('should redirect', function () {\n        expect(response.statusCode).to.equal(302);\n        expect(response.getHeader('Location')).to.equal('http://www.example.com/account');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should set user","suites":["middleware/authenticate","using strategy that specifies message as string","success with flash message overridden by route using options"],"updatePoint":{"line":771,"column":25,"index":24166},"line":771,"code":"      it('should set user', function () {\n        expect(request.user).to.be.an('object');\n        expect(request.user.id).to.equal('1');\n        expect(request.user.username).to.equal('jaredhanson');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should flash message","suites":["middleware/authenticate","using strategy that specifies message as string","success with flash message overridden by route using options"],"updatePoint":{"line":776,"column":30,"index":24382},"line":776,"code":"      it('should flash message', function () {\n        expect(request.message.type).to.equal('success');\n        expect(request.message.msg).to.equal('OK');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","using strategy that specifies message as string","success with flash message overridden by route using options"],"updatePoint":{"line":780,"column":25,"index":24544},"line":780,"code":"      it('should redirect', function () {\n        expect(response.statusCode).to.equal(302);\n        expect(response.getHeader('Location')).to.equal('http://www.example.com/account');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should set user","suites":["middleware/authenticate","using strategy that specifies message as string","success with flash message overridden by route using options with type"],"updatePoint":{"line":826,"column":25,"index":25936},"line":826,"code":"      it('should set user', function () {\n        expect(request.user).to.be.an('object');\n        expect(request.user.id).to.equal('1');\n        expect(request.user.username).to.equal('jaredhanson');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should flash message","suites":["middleware/authenticate","using strategy that specifies message as string","success with flash message overridden by route using options with type"],"updatePoint":{"line":831,"column":30,"index":26152},"line":831,"code":"      it('should flash message', function () {\n        expect(request.message.type).to.equal('notice');\n        expect(request.message.msg).to.equal('Last login was yesterday');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","using strategy that specifies message as string","success with flash message overridden by route using options with type"],"updatePoint":{"line":835,"column":25,"index":26335},"line":835,"code":"      it('should redirect', function () {\n        expect(response.statusCode).to.equal(302);\n        expect(response.getHeader('Location')).to.equal('http://www.example.com/account');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should set user","suites":["middleware/authenticate","using strategy that does not specify message","success with flash message left up to strategy"],"updatePoint":{"line":880,"column":25,"index":27684},"line":880,"code":"      it('should set user', function () {\n        expect(request.user).to.be.an('object');\n        expect(request.user.id).to.equal('1');\n        expect(request.user.username).to.equal('jaredhanson');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should not flash message","suites":["middleware/authenticate","using strategy that does not specify message","success with flash message left up to strategy"],"updatePoint":{"line":885,"column":34,"index":27904},"line":885,"code":"      it('should not flash message', function () {\n        expect(request.message).to.be.undefined;\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","using strategy that does not specify message","success with flash message left up to strategy"],"updatePoint":{"line":888,"column":25,"index":28005},"line":888,"code":"      it('should redirect', function () {\n        expect(response.statusCode).to.equal(302);\n        expect(response.getHeader('Location')).to.equal('http://www.example.com/account');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should set user","suites":["middleware/authenticate","using strategy that does not specify message","success with flash message left up to strategy using type set by route"],"updatePoint":{"line":933,"column":25,"index":29333},"line":933,"code":"      it('should set user', function () {\n        expect(request.user).to.be.an('object');\n        expect(request.user.id).to.equal('1');\n        expect(request.user.username).to.equal('jaredhanson');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should not flash message","suites":["middleware/authenticate","using strategy that does not specify message","success with flash message left up to strategy using type set by route"],"updatePoint":{"line":938,"column":34,"index":29553},"line":938,"code":"      it('should not flash message', function () {\n        expect(request.message).to.be.undefined;\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","using strategy that does not specify message","success with flash message left up to strategy using type set by route"],"updatePoint":{"line":941,"column":25,"index":29654},"line":941,"code":"      it('should redirect', function () {\n        expect(response.statusCode).to.equal(302);\n        expect(response.getHeader('Location')).to.equal('http://www.example.com/account');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should set user","suites":["middleware/authenticate","using strategy that does not specify message","success with flash message specified by route as string"],"updatePoint":{"line":984,"column":25,"index":30945},"line":984,"code":"      it('should set user', function () {\n        expect(request.user).to.be.an('object');\n        expect(request.user.id).to.equal('1');\n        expect(request.user.username).to.equal('jaredhanson');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should flash message","suites":["middleware/authenticate","using strategy that does not specify message","success with flash message specified by route as string"],"updatePoint":{"line":989,"column":30,"index":31161},"line":989,"code":"      it('should flash message', function () {\n        expect(request.message.type).to.equal('success');\n        expect(request.message.msg).to.equal('Login complete');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","using strategy that does not specify message","success with flash message specified by route as string"],"updatePoint":{"line":993,"column":25,"index":31335},"line":993,"code":"      it('should redirect', function () {\n        expect(response.statusCode).to.equal(302);\n        expect(response.getHeader('Location')).to.equal('http://www.example.com/account');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should set user","suites":["middleware/authenticate","using strategy that does not specify message","success with flash message specified by route using options"],"updatePoint":{"line":1038,"column":25,"index":32653},"line":1038,"code":"      it('should set user', function () {\n        expect(request.user).to.be.an('object');\n        expect(request.user.id).to.equal('1');\n        expect(request.user.username).to.equal('jaredhanson');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should flash message","suites":["middleware/authenticate","using strategy that does not specify message","success with flash message specified by route using options"],"updatePoint":{"line":1043,"column":30,"index":32869},"line":1043,"code":"      it('should flash message', function () {\n        expect(request.message.type).to.equal('success');\n        expect(request.message.msg).to.equal('OK');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","using strategy that does not specify message","success with flash message specified by route using options"],"updatePoint":{"line":1047,"column":25,"index":33031},"line":1047,"code":"      it('should redirect', function () {\n        expect(response.statusCode).to.equal(302);\n        expect(response.getHeader('Location')).to.equal('http://www.example.com/account');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should set user","suites":["middleware/authenticate","using strategy that does not specify message","success with flash message specified by route using options with type"],"updatePoint":{"line":1093,"column":25,"index":34409},"line":1093,"code":"      it('should set user', function () {\n        expect(request.user).to.be.an('object');\n        expect(request.user.id).to.equal('1');\n        expect(request.user.username).to.equal('jaredhanson');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should flash message","suites":["middleware/authenticate","using strategy that does not specify message","success with flash message specified by route using options with type"],"updatePoint":{"line":1098,"column":30,"index":34625},"line":1098,"code":"      it('should flash message', function () {\n        expect(request.message.type).to.equal('notice');\n        expect(request.message.msg).to.equal('Last login was yesterday');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","using strategy that does not specify message","success with flash message specified by route using options with type"],"updatePoint":{"line":1102,"column":25,"index":34808},"line":1102,"code":"      it('should redirect', function () {\n        expect(response.statusCode).to.equal(302);\n        expect(response.getHeader('Location')).to.equal('http://www.example.com/account');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["middleware/authenticate","success with info"],"updatePoint":{"line":39,"column":24,"index":1019},"line":39,"code":"    it('should not error', function () {\n      expect(error).to.be.undefined;\n    });","file":"middleware/authenticate.success.info.test.js","skipped":false,"dir":"test"},{"name":"should set user","suites":["middleware/authenticate","success with info"],"updatePoint":{"line":42,"column":23,"index":1104},"line":42,"code":"    it('should set user', function () {\n      expect(request.user).to.be.an('object');\n      expect(request.user.id).to.equal('1');\n      expect(request.user.username).to.equal('jaredhanson');\n    });","file":"middleware/authenticate.success.info.test.js","skipped":false,"dir":"test"},{"name":"should set authInfo","suites":["middleware/authenticate","success with info"],"updatePoint":{"line":47,"column":27,"index":1309},"line":47,"code":"    it('should set authInfo', function () {\n      expect(request.authInfo).to.be.an('object');\n      expect(Object.keys(request.authInfo)).to.have.length(2);\n      expect(request.authInfo.clientId).to.equal('123');\n      expect(request.authInfo.scope).to.equal('read');\n    });","file":"middleware/authenticate.success.info.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["middleware/authenticate","success with info that is transformed"],"updatePoint":{"line":93,"column":24,"index":2553},"line":93,"code":"    it('should not error', function () {\n      expect(error).to.be.undefined;\n    });","file":"middleware/authenticate.success.info.test.js","skipped":false,"dir":"test"},{"name":"should set user","suites":["middleware/authenticate","success with info that is transformed"],"updatePoint":{"line":96,"column":23,"index":2638},"line":96,"code":"    it('should set user', function () {\n      expect(request.user).to.be.an('object');\n      expect(request.user.id).to.equal('1');\n      expect(request.user.username).to.equal('jaredhanson');\n    });","file":"middleware/authenticate.success.info.test.js","skipped":false,"dir":"test"},{"name":"should set authInfo","suites":["middleware/authenticate","success with info that is transformed"],"updatePoint":{"line":101,"column":27,"index":2843},"line":101,"code":"    it('should set authInfo', function () {\n      expect(request.authInfo).to.be.an('object');\n      expect(Object.keys(request.authInfo)).to.have.length(3);\n      expect(request.authInfo.clientId).to.equal('123');\n      expect(request.authInfo.client.name).to.equal('Foo');\n      expect(request.authInfo.scope).to.equal('read');\n    });","file":"middleware/authenticate.success.info.test.js","skipped":false,"dir":"test"},{"name":"should error","suites":["middleware/authenticate","success with info, but transform that encounters an error"],"updatePoint":{"line":142,"column":20,"index":4071},"line":142,"code":"    it('should error', function () {\n      expect(error).to.be.an.instanceOf(Error);\n      expect(error.message).to.equal('something went wrong');\n    });","file":"middleware/authenticate.success.info.test.js","skipped":false,"dir":"test"},{"name":"should set user","suites":["middleware/authenticate","success with info, but transform that encounters an error"],"updatePoint":{"line":146,"column":23,"index":4229},"line":146,"code":"    it('should set user', function () {\n      expect(request.user).to.be.an('object');\n      expect(request.user.id).to.equal('1');\n      expect(request.user.username).to.equal('jaredhanson');\n    });","file":"middleware/authenticate.success.info.test.js","skipped":false,"dir":"test"},{"name":"should not set authInfo","suites":["middleware/authenticate","success with info, but transform that encounters an error"],"updatePoint":{"line":151,"column":31,"index":4438},"line":151,"code":"    it('should not set authInfo', function () {\n      expect(request.authInfo).to.be.undefined;\n    });","file":"middleware/authenticate.success.info.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["middleware/authenticate","success with info, but option that disables info"],"updatePoint":{"line":187,"column":24,"index":5348},"line":187,"code":"    it('should not error', function () {\n      expect(error).to.be.undefined;\n    });","file":"middleware/authenticate.success.info.test.js","skipped":false,"dir":"test"},{"name":"should set user","suites":["middleware/authenticate","success with info, but option that disables info"],"updatePoint":{"line":190,"column":23,"index":5433},"line":190,"code":"    it('should set user', function () {\n      expect(request.user).to.be.an('object');\n      expect(request.user.id).to.equal('1');\n      expect(request.user.username).to.equal('jaredhanson');\n    });","file":"middleware/authenticate.success.info.test.js","skipped":false,"dir":"test"},{"name":"should not set authInfo","suites":["middleware/authenticate","success with info, but option that disables info"],"updatePoint":{"line":195,"column":31,"index":5642},"line":195,"code":"    it('should not set authInfo', function () {\n      expect(request.authInfo).to.be.undefined;\n    });","file":"middleware/authenticate.success.info.test.js","skipped":false,"dir":"test"},{"name":"should set user","suites":["middleware/authenticate","success with message set by route"],"updatePoint":{"line":40,"column":23,"index":1152},"line":40,"code":"    it('should set user', function () {\n      expect(request.user).to.be.an('object');\n      expect(request.user.id).to.equal('1');\n      expect(request.user.username).to.equal('jaredhanson');\n    });","file":"middleware/authenticate.success.message.test.js","skipped":false,"dir":"test"},{"name":"should add message to session","suites":["middleware/authenticate","success with message set by route"],"updatePoint":{"line":45,"column":37,"index":1367},"line":45,"code":"    it('should add message to session', function () {\n      expect(request.session.messages).to.have.length(1);\n      expect(request.session.messages[0]).to.equal('Login complete');\n    });","file":"middleware/authenticate.success.message.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","success with message set by route"],"updatePoint":{"line":49,"column":23,"index":1543},"line":49,"code":"    it('should redirect', function () {\n      expect(response.statusCode).to.equal(302);\n      expect(response.getHeader('Location')).to.equal('http://www.example.com/account');\n    });","file":"middleware/authenticate.success.message.test.js","skipped":false,"dir":"test"},{"name":"should set user","suites":["middleware/authenticate","success with message set by route that is added to messages"],"updatePoint":{"line":88,"column":23,"index":2706},"line":88,"code":"    it('should set user', function () {\n      expect(request.user).to.be.an('object');\n      expect(request.user.id).to.equal('1');\n      expect(request.user.username).to.equal('jaredhanson');\n    });","file":"middleware/authenticate.success.message.test.js","skipped":false,"dir":"test"},{"name":"should add message to session","suites":["middleware/authenticate","success with message set by route that is added to messages"],"updatePoint":{"line":93,"column":37,"index":2921},"line":93,"code":"    it('should add message to session', function () {\n      expect(request.session.messages).to.have.length(2);\n      expect(request.session.messages[0]).to.equal('I exist!');\n      expect(request.session.messages[1]).to.equal('Login complete');\n    });","file":"middleware/authenticate.success.message.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","success with message set by route that is added to messages"],"updatePoint":{"line":98,"column":23,"index":3161},"line":98,"code":"    it('should redirect', function () {\n      expect(response.statusCode).to.equal(302);\n      expect(response.getHeader('Location')).to.equal('http://www.example.com/account');\n    });","file":"middleware/authenticate.success.message.test.js","skipped":false,"dir":"test"},{"name":"should set user","suites":["middleware/authenticate","success with message set by strategy"],"updatePoint":{"line":136,"column":23,"index":4244},"line":136,"code":"    it('should set user', function () {\n      expect(request.user).to.be.an('object');\n      expect(request.user.id).to.equal('1');\n      expect(request.user.username).to.equal('jaredhanson');\n    });","file":"middleware/authenticate.success.message.test.js","skipped":false,"dir":"test"},{"name":"should add message to session","suites":["middleware/authenticate","success with message set by strategy"],"updatePoint":{"line":141,"column":37,"index":4459},"line":141,"code":"    it('should add message to session', function () {\n      expect(request.session.messages).to.have.length(1);\n      expect(request.session.messages[0]).to.equal('Welcome!');\n    });","file":"middleware/authenticate.success.message.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","success with message set by strategy"],"updatePoint":{"line":145,"column":23,"index":4629},"line":145,"code":"    it('should redirect', function () {\n      expect(response.statusCode).to.equal(302);\n      expect(response.getHeader('Location')).to.equal('http://www.example.com/account');\n    });","file":"middleware/authenticate.success.message.test.js","skipped":false,"dir":"test"},{"name":"should set user","suites":["middleware/authenticate","success with message set by strategy with extra info"],"updatePoint":{"line":184,"column":23,"index":5751},"line":184,"code":"    it('should set user', function () {\n      expect(request.user).to.be.an('object');\n      expect(request.user.id).to.equal('1');\n      expect(request.user.username).to.equal('jaredhanson');\n    });","file":"middleware/authenticate.success.message.test.js","skipped":false,"dir":"test"},{"name":"should add message to session","suites":["middleware/authenticate","success with message set by strategy with extra info"],"updatePoint":{"line":189,"column":37,"index":5966},"line":189,"code":"    it('should add message to session', function () {\n      expect(request.session.messages).to.have.length(1);\n      expect(request.session.messages[0]).to.equal('Welcome!');\n    });","file":"middleware/authenticate.success.message.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","success with message set by strategy with extra info"],"updatePoint":{"line":193,"column":23,"index":6136},"line":193,"code":"    it('should redirect', function () {\n      expect(response.statusCode).to.equal(302);\n      expect(response.getHeader('Location')).to.equal('http://www.example.com/account');\n    });","file":"middleware/authenticate.success.message.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["middleware/authenticate","with multiple strategies, the first of which succeeds"],"updatePoint":{"line":43,"column":24,"index":1139},"line":43,"code":"    it('should not error', function () {\n      expect(error).to.be.undefined;\n    });","file":"middleware/authenticate.success.multi.test.js","skipped":false,"dir":"test"},{"name":"should set user","suites":["middleware/authenticate","with multiple strategies, the first of which succeeds"],"updatePoint":{"line":46,"column":23,"index":1224},"line":46,"code":"    it('should set user', function () {\n      expect(request.user).to.be.an('object');\n      expect(request.user.username).to.equal('bob-a');\n    });","file":"middleware/authenticate.success.multi.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["middleware/authenticate","with multiple strategies, the second of which succeeds"],"updatePoint":{"line":83,"column":24,"index":2218},"line":83,"code":"    it('should not error', function () {\n      expect(error).to.be.undefined;\n    });","file":"middleware/authenticate.success.multi.test.js","skipped":false,"dir":"test"},{"name":"should set user","suites":["middleware/authenticate","with multiple strategies, the second of which succeeds"],"updatePoint":{"line":86,"column":23,"index":2303},"line":86,"code":"    it('should set user', function () {\n      expect(request.user).to.be.an('object');\n      expect(request.user.username).to.equal('bob-b');\n    });","file":"middleware/authenticate.success.multi.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["middleware/authenticate","success"],"updatePoint":{"line":36,"column":24,"index":951},"line":36,"code":"    it('should not error', function () {\n      expect(error).to.be.undefined;\n    });","file":"middleware/authenticate.success.test.js","skipped":false,"dir":"test"},{"name":"should set user","suites":["middleware/authenticate","success"],"updatePoint":{"line":39,"column":23,"index":1036},"line":39,"code":"    it('should set user', function () {\n      expect(request.user).to.be.an('object');\n      expect(request.user.id).to.equal('1');\n      expect(request.user.username).to.equal('jaredhanson');\n    });","file":"middleware/authenticate.success.test.js","skipped":false,"dir":"test"},{"name":"should set authInfo","suites":["middleware/authenticate","success"],"updatePoint":{"line":44,"column":27,"index":1241},"line":44,"code":"    it('should set authInfo', function () {\n      expect(request.authInfo).to.be.an('object');\n      expect(Object.keys(request.authInfo)).to.have.length(0);\n    });","file":"middleware/authenticate.success.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["middleware/authenticate","success that assigns a specific property"],"updatePoint":{"line":78,"column":24,"index":2161},"line":78,"code":"    it('should not error', function () {\n      expect(error).to.be.undefined;\n    });","file":"middleware/authenticate.success.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["middleware/authenticate","success that assigns a specific property"],"updatePoint":{"line":81,"column":27,"index":2250},"line":81,"code":"    it('should not set user', function () {\n      expect(request.user).to.be.undefined;\n    });","file":"middleware/authenticate.success.test.js","skipped":false,"dir":"test"},{"name":"should set account","suites":["middleware/authenticate","success that assigns a specific property"],"updatePoint":{"line":84,"column":26,"index":2345},"line":84,"code":"    it('should set account', function () {\n      expect(request.account).to.be.an('object');\n      expect(request.account.id).to.equal('1');\n      expect(request.account.username).to.equal('jaredhanson');\n    });","file":"middleware/authenticate.success.test.js","skipped":false,"dir":"test"},{"name":"should not set authInfo","suites":["middleware/authenticate","success that assigns a specific property"],"updatePoint":{"line":89,"column":31,"index":2563},"line":89,"code":"    it('should not set authInfo', function () {\n      expect(request.authInfo).to.be.undefined;\n    });","file":"middleware/authenticate.success.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["middleware/authenticate","success with strategy-specific options"],"updatePoint":{"line":131,"column":24,"index":3619},"line":131,"code":"    it('should not error', function () {\n      expect(error).to.be.undefined;\n    });","file":"middleware/authenticate.success.test.js","skipped":false,"dir":"test"},{"name":"should set user","suites":["middleware/authenticate","success with strategy-specific options"],"updatePoint":{"line":134,"column":23,"index":3704},"line":134,"code":"    it('should set user', function () {\n      expect(request.user).to.be.an('object');\n      expect(request.user.id).to.equal('1');\n      expect(request.user.username).to.equal('jaredhanson');\n      expect(request.user.email).to.equal('jaredhanson@example.com');\n    });","file":"middleware/authenticate.success.test.js","skipped":false,"dir":"test"},{"name":"should set authInfo","suites":["middleware/authenticate","success with strategy-specific options"],"updatePoint":{"line":140,"column":27,"index":3979},"line":140,"code":"    it('should set authInfo', function () {\n      expect(request.authInfo).to.be.an('object');\n      expect(Object.keys(request.authInfo)).to.have.length(0);\n    });","file":"middleware/authenticate.success.test.js","skipped":false,"dir":"test"},{"name":"should set user","suites":["middleware/authenticate","success with redirect"],"updatePoint":{"line":174,"column":23,"index":4928},"line":174,"code":"    it('should set user', function () {\n      expect(request.user).to.be.an('object');\n      expect(request.user.id).to.equal('1');\n      expect(request.user.username).to.equal('jaredhanson');\n    });","file":"middleware/authenticate.success.test.js","skipped":false,"dir":"test"},{"name":"should set authInfo","suites":["middleware/authenticate","success with redirect"],"updatePoint":{"line":179,"column":27,"index":5133},"line":179,"code":"    it('should set authInfo', function () {\n      expect(request.authInfo).to.be.an('object');\n      expect(Object.keys(request.authInfo)).to.have.length(0);\n    });","file":"middleware/authenticate.success.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","success with redirect"],"updatePoint":{"line":183,"column":23,"index":5295},"line":183,"code":"    it('should redirect', function () {\n      expect(response.statusCode).to.equal(302);\n      expect(response.getHeader('Location')).to.equal('http://www.example.com/account');\n    });","file":"middleware/authenticate.success.test.js","skipped":false,"dir":"test"},{"name":"should set user","suites":["middleware/authenticate","success with return to previous location"],"updatePoint":{"line":220,"column":23,"index":6384},"line":220,"code":"    it('should set user', function () {\n      expect(request.user).to.be.an('object');\n      expect(request.user.id).to.equal('1');\n      expect(request.user.username).to.equal('jaredhanson');\n    });","file":"middleware/authenticate.success.test.js","skipped":false,"dir":"test"},{"name":"should set authInfo","suites":["middleware/authenticate","success with return to previous location"],"updatePoint":{"line":225,"column":27,"index":6589},"line":225,"code":"    it('should set authInfo', function () {\n      expect(request.authInfo).to.be.an('object');\n      expect(Object.keys(request.authInfo)).to.have.length(0);\n    });","file":"middleware/authenticate.success.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","success with return to previous location"],"updatePoint":{"line":229,"column":23,"index":6751},"line":229,"code":"    it('should redirect', function () {\n      expect(response.statusCode).to.equal(302);\n      expect(response.getHeader('Location')).to.equal('http://www.example.com/return');\n    });","file":"middleware/authenticate.success.test.js","skipped":false,"dir":"test"},{"name":"should move return to from session","suites":["middleware/authenticate","success with return to previous location"],"updatePoint":{"line":233,"column":42,"index":6955},"line":233,"code":"    it('should move return to from session', function () {\n      expect(request.session.returnTo).to.be.undefined;\n    });","file":"middleware/authenticate.success.test.js","skipped":false,"dir":"test"},{"name":"should set user","suites":["middleware/authenticate","success with return to default location"],"updatePoint":{"line":266,"column":23,"index":7874},"line":266,"code":"    it('should set user', function () {\n      expect(request.user).to.be.an('object');\n      expect(request.user.id).to.equal('1');\n      expect(request.user.username).to.equal('jaredhanson');\n    });","file":"middleware/authenticate.success.test.js","skipped":false,"dir":"test"},{"name":"should set authInfo","suites":["middleware/authenticate","success with return to default location"],"updatePoint":{"line":271,"column":27,"index":8079},"line":271,"code":"    it('should set authInfo', function () {\n      expect(request.authInfo).to.be.an('object');\n      expect(Object.keys(request.authInfo)).to.have.length(0);\n    });","file":"middleware/authenticate.success.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","success with return to default location"],"updatePoint":{"line":275,"column":23,"index":8241},"line":275,"code":"    it('should redirect', function () {\n      expect(response.statusCode).to.equal(302);\n      expect(response.getHeader('Location')).to.equal('http://www.example.com/default');\n    });","file":"middleware/authenticate.success.test.js","skipped":false,"dir":"test"},{"name":"should error","suites":["middleware/authenticate","success, but login that encounters an error"],"updatePoint":{"line":306,"column":20,"index":9144},"line":306,"code":"    it('should error', function () {\n      expect(error).to.be.an.instanceOf(Error);\n      expect(error.message).to.equal('something went wrong');\n    });","file":"middleware/authenticate.success.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["middleware/authenticate","success, but login that encounters an error"],"updatePoint":{"line":310,"column":27,"index":9306},"line":310,"code":"    it('should not set user', function () {\n      expect(request.user).to.be.undefined;\n    });","file":"middleware/authenticate.success.test.js","skipped":false,"dir":"test"},{"name":"should not set authInfo","suites":["middleware/authenticate","success, but login that encounters an error"],"updatePoint":{"line":313,"column":31,"index":9406},"line":313,"code":"    it('should not set authInfo', function () {\n      expect(request.authInfo).to.be.undefined;\n    });","file":"middleware/authenticate.success.test.js","skipped":false,"dir":"test"},{"name":"should be named authenticate","suites":["middleware/authenticate"],"updatePoint":{"line":9,"column":34,"index":288},"line":9,"code":"  it('should be named authenticate', function () {\n    expect(authenticate().name).to.equal('authenticate');\n  });","file":"middleware/authenticate.test.js","skipped":false,"dir":"test"},{"name":"should error","suites":["middleware/authenticate","with unknown strategy"],"updatePoint":{"line":28,"column":20,"index":833},"line":28,"code":"    it('should error', function () {\n      expect(error).to.be.an.instanceOf(Error);\n      expect(error.message).to.equal('Unknown authentication strategy \"foo\"');\n    });","file":"middleware/authenticate.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["middleware/authenticate","with unknown strategy"],"updatePoint":{"line":32,"column":27,"index":1012},"line":32,"code":"    it('should not set user', function () {\n      expect(request.user).to.be.undefined;\n    });","file":"middleware/authenticate.test.js","skipped":false,"dir":"test"},{"name":"should not set authInfo","suites":["middleware/authenticate","with unknown strategy"],"updatePoint":{"line":35,"column":31,"index":1112},"line":35,"code":"    it('should not set authInfo', function () {\n      expect(request.authInfo).to.be.undefined;\n    });","file":"middleware/authenticate.test.js","skipped":false,"dir":"test"},{"name":"should be named initialize","suites":["middleware/initialize"],"updatePoint":{"line":9,"column":32,"index":280},"line":9,"code":"  it('should be named initialize', function () {\n    expect(initialize().name).to.equal('initialize');\n  });","file":"middleware/initialize.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["middleware/initialize","handling a request without a session"],"updatePoint":{"line":23,"column":24,"index":720},"line":23,"code":"    it('should not error', function () {\n      expect(error).to.be.undefined;\n    });","file":"middleware/initialize.test.js","skipped":false,"dir":"test"},{"name":"should expose authenticator on internal request property","suites":["middleware/initialize","handling a request without a session"],"updatePoint":{"line":26,"column":64,"index":846},"line":26,"code":"    it('should expose authenticator on internal request property', function () {\n      expect(request._passport).to.be.an('object');\n      expect(request._passport.instance).to.be.an.instanceOf(Passport);\n      expect(request._passport.instance).to.equal(passport);\n      expect(request._passport.instance._sm).to.be.an('object');\n      expect(request._passport.instance._userProperty).to.equal('user');\n    });","file":"middleware/initialize.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["middleware/initialize","handling a request with a new session"],"updatePoint":{"line":46,"column":24,"index":1590},"line":46,"code":"    it('should not error', function () {\n      expect(error).to.be.undefined;\n    });","file":"middleware/initialize.test.js","skipped":false,"dir":"test"},{"name":"should not initialize namespace within session","suites":["middleware/initialize","handling a request with a new session"],"updatePoint":{"line":49,"column":54,"index":1706},"line":49,"code":"    it('should not initialize namespace within session', function () {\n      expect(request.session.passport).to.be.undefined;\n    });","file":"middleware/initialize.test.js","skipped":false,"dir":"test"},{"name":"should expose authenticator on internal request property","suites":["middleware/initialize","handling a request with a new session"],"updatePoint":{"line":52,"column":64,"index":1851},"line":52,"code":"    it('should expose authenticator on internal request property', function () {\n      expect(request._passport).to.be.an('object');\n      expect(request._passport.instance).to.be.an.instanceOf(Passport);\n      expect(request._passport.instance).to.equal(passport);\n      expect(request._passport.instance._sm).to.be.an('object');\n      expect(request._passport.instance._userProperty).to.equal('user');\n    });","file":"middleware/initialize.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["middleware/initialize","handling a request with an existing session"],"updatePoint":{"line":74,"column":24,"index":2682},"line":74,"code":"    it('should not error', function () {\n      expect(error).to.be.undefined;\n    });","file":"middleware/initialize.test.js","skipped":false,"dir":"test"},{"name":"should maintain data within session","suites":["middleware/initialize","handling a request with an existing session"],"updatePoint":{"line":77,"column":43,"index":2787},"line":77,"code":"    it('should maintain data within session', function () {\n      expect(request.session.passport).to.be.an('object');\n      expect(Object.keys(request.session.passport)).to.have.length(1);\n      expect(request.session.passport.user).to.equal('123456');\n    });","file":"middleware/initialize.test.js","skipped":false,"dir":"test"},{"name":"should expose authenticator on internal request property","suites":["middleware/initialize","handling a request with an existing session"],"updatePoint":{"line":82,"column":64,"index":3070},"line":82,"code":"    it('should expose authenticator on internal request property', function () {\n      expect(request._passport).to.be.an('object');\n      expect(request._passport.instance).to.be.an.instanceOf(Passport);\n      expect(request._passport.instance).to.equal(passport);\n      expect(request._passport.instance._sm).to.be.an('object');\n      expect(request._passport.instance._userProperty).to.equal('user');\n    });","file":"middleware/initialize.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["middleware/initialize","handling a request with an existing session using custom session key"],"updatePoint":{"line":105,"column":24,"index":3976},"line":105,"code":"    it('should not error', function () {\n      expect(error).to.be.undefined;\n    });","file":"middleware/initialize.test.js","skipped":false,"dir":"test"},{"name":"should maintain data within session","suites":["middleware/initialize","handling a request with an existing session using custom session key"],"updatePoint":{"line":108,"column":43,"index":4081},"line":108,"code":"    it('should maintain data within session', function () {\n      expect(request.session.authentication).to.be.an('object');\n      expect(Object.keys(request.session.authentication)).to.have.length(1);\n      expect(request.session.authentication.user).to.equal('123456');\n    });","file":"middleware/initialize.test.js","skipped":false,"dir":"test"},{"name":"should expose authenticator on internal request property","suites":["middleware/initialize","handling a request with an existing session using custom session key"],"updatePoint":{"line":113,"column":64,"index":4382},"line":113,"code":"    it('should expose authenticator on internal request property', function () {\n      expect(request._passport).to.be.an('object');\n      expect(request._passport.instance).to.be.an.instanceOf(Passport);\n      expect(request._passport.instance).to.equal(passport);\n      expect(request._passport.instance._sm).to.be.an('object');\n      expect(request._passport.instance._userProperty).to.equal('user');\n    });","file":"middleware/initialize.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["middleware/initialize","handling a request with a new session without compat mode"],"updatePoint":{"line":135,"column":24,"index":5179},"line":135,"code":"    it('should not error', function () {\n      expect(error).to.be.undefined;\n    });","file":"middleware/initialize.test.js","skipped":false,"dir":"test"},{"name":"should not initialize namespace within session","suites":["middleware/initialize","handling a request with a new session without compat mode"],"updatePoint":{"line":138,"column":54,"index":5295},"line":138,"code":"    it('should not initialize namespace within session', function () {\n      expect(request.session.passport).to.be.undefined;\n    });","file":"middleware/initialize.test.js","skipped":false,"dir":"test"},{"name":"should expose authenticator on internal request property","suites":["middleware/initialize","handling a request with a new session without compat mode"],"updatePoint":{"line":141,"column":64,"index":5440},"line":141,"code":"    it('should expose authenticator on internal request property', function () {\n      expect(request._passport).to.be.undefined;\n    });","file":"middleware/initialize.test.js","skipped":false,"dir":"test"},{"name":"should expose singleton authenticator","suites":["passport"],"updatePoint":{"line":5,"column":43,"index":144},"line":5,"code":"  it('should expose singleton authenticator', function () {\n    expect(passport).to.be.an('object');\n    expect(passport).to.be.an.instanceOf(passport.Authenticator);\n  });","file":"package.test.js","skipped":false,"dir":"test"},{"name":"should export constructors","suites":["passport"],"updatePoint":{"line":9,"column":32,"index":306},"line":9,"code":"  it('should export constructors', function () {\n    expect(passport.Authenticator).to.equal(passport.Passport);\n    expect(passport.Authenticator).to.be.a('function');\n    expect(passport.Strategy).to.be.a('function');\n  });","file":"package.test.js","skipped":false,"dir":"test"},{"name":"should export strategies","suites":["passport"],"updatePoint":{"line":14,"column":30,"index":530},"line":14,"code":"  it('should export strategies', function () {\n    expect(passport.strategies.SessionStrategy).to.be.a('function');\n  });","file":"package.test.js","skipped":false,"dir":"test"},{"name":"should spy correctly","suites":["SessionStrategy","handling a request with a login session, pausing for deserialization"],"updatePoint":{"line":50,"column":28,"index":1254},"line":50,"code":"    it('should spy correctly', function () {\n      expect(spy).to.have.length(2);\n    });","file":"strategies/session.pause.test.js","skipped":false,"dir":"test"},{"name":"should pass","suites":["SessionStrategy","handling a request with a login session, pausing for deserialization"],"updatePoint":{"line":53,"column":19,"index":1335},"line":53,"code":"    it('should pass', function () {\n      expect(pass).to.be.true;\n    });","file":"strategies/session.pause.test.js","skipped":false,"dir":"test"},{"name":"should set user on request","suites":["SessionStrategy","handling a request with a login session, pausing for deserialization"],"updatePoint":{"line":56,"column":34,"index":1425},"line":56,"code":"    it('should set user on request', function () {\n      expect(request.user).to.be.an('object');\n      expect(request.user.id).to.equal('123456');\n    });","file":"strategies/session.pause.test.js","skipped":false,"dir":"test"},{"name":"should maintain session","suites":["SessionStrategy","handling a request with a login session, pausing for deserialization"],"updatePoint":{"line":60,"column":31,"index":1578},"line":60,"code":"    it('should maintain session', function () {\n      expect(request.session['passport']).to.be.an('object');\n      expect(request.session['passport'].user).to.equal('123456');\n    });","file":"strategies/session.pause.test.js","skipped":false,"dir":"test"},{"name":"should pause request","suites":["SessionStrategy","handling a request with a login session, pausing for deserialization"],"updatePoint":{"line":64,"column":28,"index":1760},"line":64,"code":"    it('should pause request', function () {\n      var s0 = spy[0];\n      expect(s0.args[0]).to.equal(request);\n    });","file":"strategies/session.pause.test.js","skipped":false,"dir":"test"},{"name":"should resume request","suites":["SessionStrategy","handling a request with a login session, pausing for deserialization"],"updatePoint":{"line":68,"column":29,"index":1881},"line":68,"code":"    it('should resume request', function () {\n      var s1 = spy[1];\n      expect(s1.args[0]).to.equal(undefined);\n    });","file":"strategies/session.pause.test.js","skipped":false,"dir":"test"},{"name":"should spy correctly","suites":["SessionStrategy","handling a request with a login session that has been invalidated, pausing for deserialization"],"updatePoint":{"line":114,"column":28,"index":3101},"line":114,"code":"    it('should spy correctly', function () {\n      expect(spy).to.have.length(2);\n    });","file":"strategies/session.pause.test.js","skipped":false,"dir":"test"},{"name":"should pass","suites":["SessionStrategy","handling a request with a login session that has been invalidated, pausing for deserialization"],"updatePoint":{"line":117,"column":19,"index":3182},"line":117,"code":"    it('should pass', function () {\n      expect(pass).to.be.true;\n    });","file":"strategies/session.pause.test.js","skipped":false,"dir":"test"},{"name":"should not set user on request","suites":["SessionStrategy","handling a request with a login session that has been invalidated, pausing for deserialization"],"updatePoint":{"line":120,"column":38,"index":3276},"line":120,"code":"    it('should not set user on request', function () {\n      expect(request.user).to.be.undefined;\n    });","file":"strategies/session.pause.test.js","skipped":false,"dir":"test"},{"name":"should remove user from session","suites":["SessionStrategy","handling a request with a login session that has been invalidated, pausing for deserialization"],"updatePoint":{"line":123,"column":39,"index":3384},"line":123,"code":"    it('should remove user from session', function () {\n      expect(request.session['passport']).to.be.an('object');\n      expect(request.session['passport'].user).to.be.undefined;\n    });","file":"strategies/session.pause.test.js","skipped":false,"dir":"test"},{"name":"should pause request","suites":["SessionStrategy","handling a request with a login session that has been invalidated, pausing for deserialization"],"updatePoint":{"line":127,"column":28,"index":3563},"line":127,"code":"    it('should pause request', function () {\n      var s0 = spy[0];\n      expect(s0.args[0]).to.equal(request);\n    });","file":"strategies/session.pause.test.js","skipped":false,"dir":"test"},{"name":"should resume request","suites":["SessionStrategy","handling a request with a login session that has been invalidated, pausing for deserialization"],"updatePoint":{"line":131,"column":29,"index":3684},"line":131,"code":"    it('should resume request', function () {\n      var s1 = spy[1];\n      expect(s1.args[0]).to.equal(undefined);\n    });","file":"strategies/session.pause.test.js","skipped":false,"dir":"test"},{"name":"should be named session","suites":["SessionStrategy"],"updatePoint":{"line":9,"column":29,"index":271},"line":9,"code":"  it('should be named session', function () {\n    expect(strategy.name).to.equal('session');\n  });","file":"strategies/session.test.js","skipped":false,"dir":"test"},{"name":"should pass","suites":["SessionStrategy","handling a request without a login session"],"updatePoint":{"line":26,"column":19,"index":767},"line":26,"code":"    it('should pass', function () {\n      expect(pass).to.be.true;\n    });","file":"strategies/session.test.js","skipped":false,"dir":"test"},{"name":"should not set user on request","suites":["SessionStrategy","handling a request without a login session"],"updatePoint":{"line":29,"column":38,"index":861},"line":29,"code":"    it('should not set user on request', function () {\n      expect(request.user).to.be.undefined;\n    });","file":"strategies/session.test.js","skipped":false,"dir":"test"},{"name":"should pass","suites":["SessionStrategy","handling a request with a login session"],"updatePoint":{"line":54,"column":19,"index":1567},"line":54,"code":"    it('should pass', function () {\n      expect(pass).to.be.true;\n    });","file":"strategies/session.test.js","skipped":false,"dir":"test"},{"name":"should set user on request","suites":["SessionStrategy","handling a request with a login session"],"updatePoint":{"line":57,"column":34,"index":1657},"line":57,"code":"    it('should set user on request', function () {\n      expect(request.user).to.be.an('object');\n      expect(request.user.id).to.equal('123456');\n    });","file":"strategies/session.test.js","skipped":false,"dir":"test"},{"name":"should maintain session","suites":["SessionStrategy","handling a request with a login session"],"updatePoint":{"line":61,"column":31,"index":1810},"line":61,"code":"    it('should maintain session', function () {\n      expect(request.session['passport']).to.be.an('object');\n      expect(request.session['passport'].user).to.equal('123456');\n    });","file":"strategies/session.test.js","skipped":false,"dir":"test"},{"name":"should pass","suites":["SessionStrategy","handling a request with a login session serialized to 0"],"updatePoint":{"line":87,"column":19,"index":2610},"line":87,"code":"    it('should pass', function () {\n      expect(pass).to.be.true;\n    });","file":"strategies/session.test.js","skipped":false,"dir":"test"},{"name":"should set user on request","suites":["SessionStrategy","handling a request with a login session serialized to 0"],"updatePoint":{"line":90,"column":34,"index":2700},"line":90,"code":"    it('should set user on request', function () {\n      expect(request.user).to.be.an('object');\n      expect(request.user.id).to.equal(0);\n    });","file":"strategies/session.test.js","skipped":false,"dir":"test"},{"name":"should maintain session","suites":["SessionStrategy","handling a request with a login session serialized to 0"],"updatePoint":{"line":94,"column":31,"index":2846},"line":94,"code":"    it('should maintain session', function () {\n      expect(request.session['passport']).to.be.an('object');\n      expect(request.session['passport'].user).to.equal(0);\n    });","file":"strategies/session.test.js","skipped":false,"dir":"test"},{"name":"should pass","suites":["SessionStrategy","handling a request with a login session that has been invalidated"],"updatePoint":{"line":118,"column":19,"index":3635},"line":118,"code":"    it('should pass', function () {\n      expect(pass).to.be.true;\n    });","file":"strategies/session.test.js","skipped":false,"dir":"test"},{"name":"should not set user on request","suites":["SessionStrategy","handling a request with a login session that has been invalidated"],"updatePoint":{"line":121,"column":38,"index":3729},"line":121,"code":"    it('should not set user on request', function () {\n      expect(request.user).to.be.undefined;\n    });","file":"strategies/session.test.js","skipped":false,"dir":"test"},{"name":"should remove user from session","suites":["SessionStrategy","handling a request with a login session that has been invalidated"],"updatePoint":{"line":124,"column":39,"index":3837},"line":124,"code":"    it('should remove user from session', function () {\n      expect(request.session['passport']).to.be.an('object');\n      expect(request.session['passport'].user).to.be.undefined;\n    });","file":"strategies/session.test.js","skipped":false,"dir":"test"},{"name":"should pass","suites":["SessionStrategy","handling a request with a login session and setting custom user property"],"updatePoint":{"line":151,"column":19,"index":4701},"line":151,"code":"    it('should pass', function () {\n      expect(pass).to.be.true;\n    });","file":"strategies/session.test.js","skipped":false,"dir":"test"},{"name":"should not set \"user\" on request","suites":["SessionStrategy","handling a request with a login session and setting custom user property"],"updatePoint":{"line":154,"column":40,"index":4797},"line":154,"code":"    it('should not set \"user\" on request', function () {\n      expect(request.user).to.be.undefined;\n    });","file":"strategies/session.test.js","skipped":false,"dir":"test"},{"name":"should set \"currentUser\" on request","suites":["SessionStrategy","handling a request with a login session and setting custom user property"],"updatePoint":{"line":157,"column":43,"index":4909},"line":157,"code":"    it('should set \"currentUser\" on request', function () {\n      expect(request.currentUser).to.be.an('object');\n      expect(request.currentUser.id).to.equal('123456');\n    });","file":"strategies/session.test.js","skipped":false,"dir":"test"},{"name":"should error","suites":["SessionStrategy","handling a request with a login session that encounters an error when deserializing"],"updatePoint":{"line":180,"column":20,"index":5717},"line":180,"code":"    it('should error', function () {\n      expect(error).to.be.an.instanceOf(Error);\n      expect(error.message).to.equal('something went wrong');\n    });","file":"strategies/session.test.js","skipped":false,"dir":"test"},{"name":"should not set user on request","suites":["SessionStrategy","handling a request with a login session that encounters an error when deserializing"],"updatePoint":{"line":184,"column":38,"index":5890},"line":184,"code":"    it('should not set user on request', function () {\n      expect(request.user).to.be.undefined;\n    });","file":"strategies/session.test.js","skipped":false,"dir":"test"},{"name":"should maintain session","suites":["SessionStrategy","handling a request with a login session that encounters an error when deserializing"],"updatePoint":{"line":187,"column":31,"index":5990},"line":187,"code":"    it('should maintain session', function () {\n      expect(request.session['passport']).to.be.an('object');\n      expect(request.session['passport'].user).to.equal('123456');\n    });","file":"strategies/session.test.js","skipped":false,"dir":"test"},{"name":"should error","suites":["SessionStrategy","handling a request that lacks an authenticator"],"updatePoint":{"line":202,"column":20,"index":6478},"line":202,"code":"    it('should error', function () {\n      expect(error).to.be.an.instanceOf(Error);\n      expect(error.message).to.equal('Login sessions require session support. Did you forget to use `express-session` middleware?');\n    });","file":"strategies/session.test.js","skipped":false,"dir":"test"},{"name":"should not set user on request","suites":["SessionStrategy","handling a request that lacks an authenticator"],"updatePoint":{"line":206,"column":38,"index":6722},"line":206,"code":"    it('should not set user on request', function () {\n      expect(request.user).to.be.undefined;\n    });","file":"strategies/session.test.js","skipped":false,"dir":"test"}]}