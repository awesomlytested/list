{"repo":"kbrsh/moon","url":"https://github.com/kbrsh/moon","branch":"master","configs":[{"package":"moon-browser","lang":"js","dir":"packages/moon-browser/test","framework":"jest","pattern":"**/*[._-]{test,spec,unittest,unit}.{ts,js}"},{"package":"moon-cli","lang":"js","dir":"packages/moon-cli/test","framework":"jest","pattern":"**/*[._-]{test,spec,unittest,unit}.{ts,js}"},{"package":"moon-compiler","lang":"js","dir":"packages/moon-compiler/test","framework":"jest","pattern":"**/*[._-]{test,spec,unittest,unit}.{ts,js}"},{"package":"moon","lang":"js","dir":"packages/moon/test","framework":"jest","pattern":"**/*[._-]{test,spec,unittest,unit}.{ts,js}"}],"tests":[{"name":"not transform normal script","suites":[],"updatePoint":{"line":47,"column":33},"line":47,"code":"test(\"not transform normal script\", () => {\n  const script = document.body.childNodes[0];\n  expect(script).not.toBeUndefined();\n  expect(script.text).toEqual(\"const foo = 7;\");\n});","file":"browser.test.js","skipped":false,"dir":"packages/moon-browser/test"},{"name":"transform inline script","suites":[],"updatePoint":{"line":52,"column":29},"line":52,"code":"test(\"transform inline script\", () => {\n  const script = document.body.childNodes[1];\n  expect(script).not.toBeUndefined();\n  expect(script.type).toEqual(\"text/javascript\");\n  expect(script.text).toEqual(`const paragraph = (Moon.view.components.p({children:[Moon.view.components.text({data:\\\"Moon Test\\\"})]}));`);\n});","file":"browser.test.js","skipped":false,"dir":"packages/moon-browser/test"},{"name":"transform external script","suites":[],"updatePoint":{"line":58,"column":31},"line":58,"code":"test(\"transform external script\", () => {\n  const script = document.body.childNodes[2];\n  expect(script).not.toBeUndefined();\n  expect(script.type).toEqual(\"text/javascript\");\n  expect(script.text).toEqual(`const paragraphSrc = (Moon.view.components.p({children:[Moon.view.components.text({data:\\\"Moon Test\\\"})]}));`);\n});","file":"browser.test.js","skipped":false,"dir":"packages/moon-browser/test"},{"name":"transform external script with error response","suites":[],"updatePoint":{"line":64,"column":51},"line":64,"code":"test(\"transform external script with error response\", () => {\n  const script = document.body.childNodes[3];\n  expect(script).not.toBeUndefined();\n  expect(script.type).toEqual(\"text/moon\");\n  expect(console.error).toBeCalledWith(`[Moon] ERROR: Invalid script HTTP response.\n\nAttempted to download script:\n\thttp://localhost/scriptSrc.js\n\nReceived error HTTP status code:\n\t500\n\nExpected OK HTTP status code 0 or 200.`);\n});","file":"browser.test.js","skipped":false,"dir":"packages/moon-browser/test"},{"name":"transform external script with error request","suites":[],"updatePoint":{"line":78,"column":50},"line":78,"code":"test(\"transform external script with error request\", () => {\n  const script = document.body.childNodes[4];\n  expect(script).not.toBeUndefined();\n  expect(script.type).toEqual(\"text/moon\");\n  expect(console.error).toBeCalledWith(`[Moon] ERROR: Failed script HTTP request.\n\nAttempted to download script:\n\thttp://localhost/scriptSrc.js\n\nReceived error.\n\nExpected successful HTTP request.`);\n});","file":"browser.test.js","skipped":false,"dir":"packages/moon-browser/test"},{"name":"displays help by default","suites":[],"updatePoint":{"line":181,"column":30},"line":181,"code":"test(\"displays help by default\", () => {\n  jest.resetModules();\n  expect(MoonCLI([])).toEqual(`Usage: moon \\x1b[33m<command>\\x1b[0m\\x1b[36m [options]\\x1b[0m\n\nCommands:\n\tmoon version                   output Moon CLI version\n\tmoon help \\x1b[33m<command>\\x1b[0m            output help message for command\n\tmoon create \\x1b[33m<name>\\x1b[0m\\x1b[36m [options]\\x1b[0m   create application in new directory\n`);\n});","file":"cli.test.js","skipped":false,"dir":"packages/moon-cli/test"},{"name":"version command","suites":[],"updatePoint":{"line":191,"column":21},"line":191,"code":"test(\"version command\", () => {\n  jest.resetModules();\n  expect(MoonCLI([\"version\"])).toEqual(`Moon CLI vtest.test.test\n`);\n});","file":"cli.test.js","skipped":false,"dir":"packages/moon-cli/test"},{"name":"help version command","suites":[],"updatePoint":{"line":196,"column":26},"line":196,"code":"test(\"help version command\", () => {\n  jest.resetModules();\n  expect(MoonCLI([\"help\", \"version\"])).toEqual(`Usage: moon version\n\toutput Moon CLI version\n`);\n});","file":"cli.test.js","skipped":false,"dir":"packages/moon-cli/test"},{"name":"help help command","suites":[],"updatePoint":{"line":202,"column":23},"line":202,"code":"test(\"help help command\", () => {\n  jest.resetModules();\n  expect(MoonCLI([\"help\", \"help\"])).toEqual(`Usage: moon help \\x1b[33m<command>\\x1b[0m\n\toutput help message for command\n\nParameters:\n\t\\x1b[33m<command>\\x1b[0m   name of Moon CLI command\n`);\n});","file":"cli.test.js","skipped":false,"dir":"packages/moon-cli/test"},{"name":"help create command","suites":[],"updatePoint":{"line":211,"column":25},"line":211,"code":"test(\"help create command\", () => {\n  jest.resetModules();\n  expect(MoonCLI([\"help\", \"create\"])).toEqual(`Usage: moon create \\x1b[33m<name>\\x1b[0m\\x1b[36m [options]\\x1b[0m\n\tcreate application in new directory\n\nParameters:\n\t\\x1b[33m<name>\\x1b[0m   name of application and directory\n\nOptions:\n\\x1b[36m\\t-t\\x1b[0m,\\x1b[36m --template\\x1b[0m \\x1b[33m<username>\\x1b[0m/\\x1b[33m<repository>\\x1b[0m   GitHub repository to use as template\n`);\n});","file":"cli.test.js","skipped":false,"dir":"packages/moon-cli/test"},{"name":"create command","suites":[],"updatePoint":{"line":223,"column":20},"line":223,"code":"test(\"create command\", () => {\n  jest.resetModules();\n  init();\n  httpsRequest = {\n    method: \"GET\",\n    host: \"api.github.com\",\n    path: \"/repos/kbrsh/moon-template/tarball/master\",\n    headers: {\n      \"User-Agent\": \"Moon\"\n    }\n  };\n  expect(MoonCLI([\"create\", \"test-moon-cli\"])).toEqual(`\\x1b[34mMoon\\x1b[0m creating application\n\\x1b[34mdownloaded\\x1b[0m kbrsh/moon-template\n\\x1b[34minstalled\\x1b[0m ${pathTest}\n\\x1b[34mcleaned\\x1b[0m ${pathTestArchive}\n\\x1b[34mprocessed\\x1b[0m test-directory-1/test-directory-1-file-1.txt\n\\x1b[34mprocessed\\x1b[0m test-directory-1/test-directory-1-file-2.txt\n\\x1b[34mprocessed\\x1b[0m test-directory-2/test-directory-2-directory-1/test-directory-2-directory-1-file-1.txt\n\\x1b[34mprocessed\\x1b[0m test-directory-2/test-directory-2-directory-2/test-directory-2-directory-2-file-1.txt\n\\x1b[34mprocessed\\x1b[0m test-directory-2/test-directory-2-file-1.txt\n\\x1b[34mprocessed\\x1b[0m test-directory-2/test-directory-2-file-2.txt\n\\x1b[34mprocessed\\x1b[0m test-file-1.txt\n\\x1b[34mprocessed\\x1b[0m test-file-2.txt\n\\x1b[34mcreated\\x1b[0m application \\x1b[36mtest-moon-cli\\x1b[0m\n\nTo start, run:\n\tcd test-moon-cli\n\tnpm install\n\tnpm run dev\n`);\n  verify(pathTest, pathTemplate);\n  cleanAll();\n});","file":"cli.test.js","skipped":false,"dir":"packages/moon-cli/test"},{"name":"create command with custom template -t","suites":[],"updatePoint":{"line":256,"column":44},"line":256,"code":"test(\"create command with custom template -t\", () => {\n  init();\n  jest.resetModules();\n  httpsRequest = {\n    method: \"GET\",\n    host: \"api.github.com\",\n    path: \"/repos/test-moon-cli/test-moon-cli-template/tarball/master\",\n    headers: {\n      \"User-Agent\": \"Moon\"\n    }\n  };\n  expect(MoonCLI([\"create\", \"test-moon-cli\", \"-t\", \"test-moon-cli/test-moon-cli-template\"])).toEqual(`\\x1b[34mMoon\\x1b[0m creating application\n\\x1b[34mdownloaded\\x1b[0m test-moon-cli/test-moon-cli-template\n\\x1b[34minstalled\\x1b[0m ${pathTest}\n\\x1b[34mcleaned\\x1b[0m ${pathTestArchive}\n\\x1b[34mprocessed\\x1b[0m test-directory-1/test-directory-1-file-1.txt\n\\x1b[34mprocessed\\x1b[0m test-directory-1/test-directory-1-file-2.txt\n\\x1b[34mprocessed\\x1b[0m test-directory-2/test-directory-2-directory-1/test-directory-2-directory-1-file-1.txt\n\\x1b[34mprocessed\\x1b[0m test-directory-2/test-directory-2-directory-2/test-directory-2-directory-2-file-1.txt\n\\x1b[34mprocessed\\x1b[0m test-directory-2/test-directory-2-file-1.txt\n\\x1b[34mprocessed\\x1b[0m test-directory-2/test-directory-2-file-2.txt\n\\x1b[34mprocessed\\x1b[0m test-file-1.txt\n\\x1b[34mprocessed\\x1b[0m test-file-2.txt\n\\x1b[34mcreated\\x1b[0m application \\x1b[36mtest-moon-cli\\x1b[0m\n\nTo start, run:\n\tcd test-moon-cli\n\tnpm install\n\tnpm run dev\n`);\n  verify(pathTest, pathTemplate);\n  cleanAll();\n});","file":"cli.test.js","skipped":false,"dir":"packages/moon-cli/test"},{"name":"create command with custom template --template","suites":[],"updatePoint":{"line":289,"column":52},"line":289,"code":"test(\"create command with custom template --template\", () => {\n  jest.resetModules();\n  init();\n  httpsRequest = {\n    method: \"GET\",\n    host: \"api.github.com\",\n    path: \"/repos/test-moon-cli/test-moon-cli-template/tarball/master\",\n    headers: {\n      \"User-Agent\": \"Moon\"\n    }\n  };\n  expect(MoonCLI([\"create\", \"test-moon-cli\", \"--template\", \"test-moon-cli/test-moon-cli-template\"])).toEqual(`\\x1b[34mMoon\\x1b[0m creating application\n\\x1b[34mdownloaded\\x1b[0m test-moon-cli/test-moon-cli-template\n\\x1b[34minstalled\\x1b[0m ${pathTest}\n\\x1b[34mcleaned\\x1b[0m ${pathTestArchive}\n\\x1b[34mprocessed\\x1b[0m test-directory-1/test-directory-1-file-1.txt\n\\x1b[34mprocessed\\x1b[0m test-directory-1/test-directory-1-file-2.txt\n\\x1b[34mprocessed\\x1b[0m test-directory-2/test-directory-2-directory-1/test-directory-2-directory-1-file-1.txt\n\\x1b[34mprocessed\\x1b[0m test-directory-2/test-directory-2-directory-2/test-directory-2-directory-2-file-1.txt\n\\x1b[34mprocessed\\x1b[0m test-directory-2/test-directory-2-file-1.txt\n\\x1b[34mprocessed\\x1b[0m test-directory-2/test-directory-2-file-2.txt\n\\x1b[34mprocessed\\x1b[0m test-file-1.txt\n\\x1b[34mprocessed\\x1b[0m test-file-2.txt\n\\x1b[34mcreated\\x1b[0m application \\x1b[36mtest-moon-cli\\x1b[0m\n\nTo start, run:\n\tcd test-moon-cli\n\tnpm install\n\tnpm run dev\n`);\n  verify(pathTest, pathTemplate);\n  cleanAll();\n});","file":"cli.test.js","skipped":false,"dir":"packages/moon-cli/test"},{"name":"error on unknown command","suites":[],"updatePoint":{"line":322,"column":30},"line":322,"code":"test(\"error on unknown command\", () => {\n  jest.resetModules();\n  expect(MoonCLI([\"unknown\"])).toEqual(`\\x1b[31merror\\x1b[0m Unrecognized command.\n\nAttempted to execute a command.\n\nReceived a command that does not exist:\n\tunknown\n\nExpected a valid command. Run \\x1b[35mmoon help\\x1b[0m to see valid commands.\n`);\n});","file":"cli.test.js","skipped":false,"dir":"packages/moon-cli/test"},{"name":"error on invalid create name","suites":[],"updatePoint":{"line":334,"column":34},"line":334,"code":"test(\"error on invalid create name\", () => {\n  jest.resetModules();\n  init();\n  httpsRequest = {\n    method: \"GET\",\n    host: \"api.github.com\",\n    path: \"/repos/kbrsh/moon-template/tarball/master\",\n    headers: {\n      \"User-Agent\": \"Moon\"\n    }\n  };\n  expect(MoonCLI([\"create\"], `The \"path\" argument must be of type string. Received undefined`)).toEqual(`\\x1b[31merror\\x1b[0m Invalid or unknown name.\n\nAttempted to create an application.\n\nReceived an invalid or unknown name.\n\nExpected a valid name. Run \\x1b[35mmoon help create\\x1b[0m to see usage information.\n\\x1b[34mMoon\\x1b[0m creating application\n\\x1b[34mdownloaded\\x1b[0m kbrsh/moon-template\n`);\n  cleanAll(pathTest);\n});","file":"cli.test.js","skipped":false,"dir":"packages/moon-cli/test"},{"name":"error on invalid create template","suites":[],"updatePoint":{"line":357,"column":38},"line":357,"code":"test(\"error on invalid create template\", () => {\n  jest.resetModules();\n  init();\n  httpsRequest = {\n    method: \"GET\",\n    host: \"api.github.com\",\n    path: \"/repos/true/tarball/master\",\n    headers: {\n      \"User-Agent\": \"Moon\"\n    }\n  };\n  expect(MoonCLI([\"create\", \"test-moon-cli\", \"-t\"])).toEqual(`\\x1b[31merror\\x1b[0m Invalid or unknown template.\n\nAttempted to create an application.\n\nReceived an invalid or unknown template.\n\nExpected a valid template. Run \\x1b[35mmoon help create\\x1b[0m to see usage information.\n\\x1b[34mMoon\\x1b[0m creating application\n\\x1b[34mdownloaded\\x1b[0m true\n\\x1b[34minstalled\\x1b[0m ${pathTest}\n\\x1b[34mcleaned\\x1b[0m ${pathTestArchive}\n\\x1b[34mprocessed\\x1b[0m test-directory-1/test-directory-1-file-1.txt\n\\x1b[34mprocessed\\x1b[0m test-directory-1/test-directory-1-file-2.txt\n\\x1b[34mprocessed\\x1b[0m test-directory-2/test-directory-2-directory-1/test-directory-2-directory-1-file-1.txt\n\\x1b[34mprocessed\\x1b[0m test-directory-2/test-directory-2-directory-2/test-directory-2-directory-2-file-1.txt\n\\x1b[34mprocessed\\x1b[0m test-directory-2/test-directory-2-file-1.txt\n\\x1b[34mprocessed\\x1b[0m test-directory-2/test-directory-2-file-2.txt\n\\x1b[34mprocessed\\x1b[0m test-file-1.txt\n\\x1b[34mprocessed\\x1b[0m test-file-2.txt\n\\x1b[34mcreated\\x1b[0m application \\x1b[36mtest-moon-cli\\x1b[0m\n\nTo start, run:\n\tcd test-moon-cli\n\tnpm install\n\tnpm run dev\n`);\n  cleanAll(pathTest);\n});","file":"cli.test.js","skipped":false,"dir":"packages/moon-cli/test"},{"name":"error on error HTTP status code archive link","suites":[],"updatePoint":{"line":396,"column":50},"line":396,"code":"test(\"error on error HTTP status code archive link\", () => {\n  jest.resetModules();\n  init();\n  httpsRequest = {\n    method: \"GET\",\n    host: \"api.github.com\",\n    path: \"/repos/kbrsh/moon-template/tarball/master\",\n    headers: {\n      \"User-Agent\": \"Moon\"\n    }\n  };\n  httpsArchiveLinkStatusCode = 500;\n  expect(MoonCLI([\"create\", \"test-moon-cli\"])).toEqual(`\\x1b[34mMoon\\x1b[0m creating application\n\\x1b[31merror\\x1b[0m Invalid archive link HTTP response.\n\nAttempted to fetch archive link for template:\n\thttps://api.github.com/repos/kbrsh/moon-template/tarball/master\n\nReceived error HTTP status code:\n\t500\n\nExpected found HTTP status code 302.\n`);\n  cleanAll(pathTest);\n});","file":"cli.test.js","skipped":false,"dir":"packages/moon-cli/test"},{"name":"error on error HTTP status code download","suites":[],"updatePoint":{"line":421,"column":46},"line":421,"code":"test(\"error on error HTTP status code download\", () => {\n  jest.resetModules();\n  init();\n  httpsRequest = {\n    method: \"GET\",\n    host: \"api.github.com\",\n    path: \"/repos/kbrsh/moon-template/tarball/master\",\n    headers: {\n      \"User-Agent\": \"Moon\"\n    }\n  };\n  httpsDownloadStatusCode = 500;\n  expect(MoonCLI([\"create\", \"test-moon-cli\"])).toEqual(`\\x1b[34mMoon\\x1b[0m creating application\n\\x1b[31merror\\x1b[0m Invalid download HTTP response.\n\nAttempted to download template:\n\ttest-location\n\nReceived error HTTP status code:\n\t500\n\nExpected OK HTTP status code 200.\n`);\n  cleanAll(pathTest);\n});","file":"cli.test.js","skipped":false,"dir":"packages/moon-cli/test"},{"name":"error on HTTP error for archive link","suites":[],"updatePoint":{"line":446,"column":42},"line":446,"code":"test(\"error on HTTP error for archive link\", () => {\n  jest.resetModules();\n  init();\n  httpsRequest = {\n    method: \"GET\",\n    host: \"api.github.com\",\n    path: \"/repos/kbrsh/moon-template/tarball/master\",\n    headers: {\n      \"User-Agent\": \"Moon\"\n    }\n  };\n  httpsArchiveLinkError = \"error archive link\";\n  expect(MoonCLI([\"create\", \"test-moon-cli\"])).toEqual(`\\x1b[34mMoon\\x1b[0m creating application\n\\x1b[34mdownloaded\\x1b[0m kbrsh/moon-template\n\\x1b[34minstalled\\x1b[0m ${pathTest}\n\\x1b[34mcleaned\\x1b[0m ${pathTestArchive}\n\\x1b[34mprocessed\\x1b[0m test-directory-1/test-directory-1-file-1.txt\n\\x1b[34mprocessed\\x1b[0m test-directory-1/test-directory-1-file-2.txt\n\\x1b[34mprocessed\\x1b[0m test-directory-2/test-directory-2-directory-1/test-directory-2-directory-1-file-1.txt\n\\x1b[34mprocessed\\x1b[0m test-directory-2/test-directory-2-directory-2/test-directory-2-directory-2-file-1.txt\n\\x1b[34mprocessed\\x1b[0m test-directory-2/test-directory-2-file-1.txt\n\\x1b[34mprocessed\\x1b[0m test-directory-2/test-directory-2-file-2.txt\n\\x1b[34mprocessed\\x1b[0m test-file-1.txt\n\\x1b[34mprocessed\\x1b[0m test-file-2.txt\n\\x1b[34mcreated\\x1b[0m application \\x1b[36mtest-moon-cli\\x1b[0m\n\nTo start, run:\n\tcd test-moon-cli\n\tnpm install\n\tnpm run dev\n\\x1b[31merror\\x1b[0m Failed archive link HTTP request.\n\nAttempted to fetch archive link for template:\n\thttps://api.github.com/repos/kbrsh/moon-template/tarball/master\n\nReceived error:\n\terror archive link\n\nExpected successful HTTP request.\n`);\n  cleanAll(pathTest);\n});","file":"cli.test.js","skipped":false,"dir":"packages/moon-cli/test"},{"name":"error on HTTP error for download","suites":[],"updatePoint":{"line":488,"column":38},"line":488,"code":"test(\"error on HTTP error for download\", () => {\n  jest.resetModules();\n  init();\n  httpsRequest = {\n    method: \"GET\",\n    host: \"api.github.com\",\n    path: \"/repos/kbrsh/moon-template/tarball/master\",\n    headers: {\n      \"User-Agent\": \"Moon\"\n    }\n  };\n  httpsDownloadError = \"error download\";\n  expect(MoonCLI([\"create\", \"test-moon-cli\"])).toEqual(`\\x1b[34mMoon\\x1b[0m creating application\n\\x1b[34mdownloaded\\x1b[0m kbrsh/moon-template\n\\x1b[34minstalled\\x1b[0m ${pathTest}\n\\x1b[34mcleaned\\x1b[0m ${pathTestArchive}\n\\x1b[34mprocessed\\x1b[0m test-directory-1/test-directory-1-file-1.txt\n\\x1b[34mprocessed\\x1b[0m test-directory-1/test-directory-1-file-2.txt\n\\x1b[34mprocessed\\x1b[0m test-directory-2/test-directory-2-directory-1/test-directory-2-directory-1-file-1.txt\n\\x1b[34mprocessed\\x1b[0m test-directory-2/test-directory-2-directory-2/test-directory-2-directory-2-file-1.txt\n\\x1b[34mprocessed\\x1b[0m test-directory-2/test-directory-2-file-1.txt\n\\x1b[34mprocessed\\x1b[0m test-directory-2/test-directory-2-file-2.txt\n\\x1b[34mprocessed\\x1b[0m test-file-1.txt\n\\x1b[34mprocessed\\x1b[0m test-file-2.txt\n\\x1b[34mcreated\\x1b[0m application \\x1b[36mtest-moon-cli\\x1b[0m\n\nTo start, run:\n\tcd test-moon-cli\n\tnpm install\n\tnpm run dev\n\\x1b[31merror\\x1b[0m Failed download HTTP request.\n\nAttempted to download template:\n\ttest-location\n\nReceived error:\n\terror download\n\nExpected successful HTTP request.\n`);\n  cleanAll(pathTest);\n});","file":"cli.test.js","skipped":false,"dir":"packages/moon-cli/test"},{"name":"error making directory","suites":[],"updatePoint":{"line":530,"column":28},"line":530,"code":"test(\"error making directory\", () => {\n  jest.resetModules();\n  init();\n  httpsRequest = {\n    method: \"GET\",\n    host: \"api.github.com\",\n    path: \"/repos/kbrsh/moon-template/tarball/master\",\n    headers: {\n      \"User-Agent\": \"Moon\"\n    }\n  };\n  child_processMkdirError = \"error making directory\";\n  expect(MoonCLI([\"create\", \"test-moon-cli\"])).toEqual(`\\x1b[34mMoon\\x1b[0m creating application\n\\x1b[34mdownloaded\\x1b[0m kbrsh/moon-template\n\\x1b[31merror\\x1b[0m Failed directory creation.\n\nAttempted to create directory:\n\t${pathTest}\n\nReceived error:\n\terror making directory\n\nExpected successful directory creation.\n\\x1b[34minstalled\\x1b[0m ${pathTest}\n\\x1b[34mcleaned\\x1b[0m ${pathTestArchive}\n\\x1b[34mprocessed\\x1b[0m test-directory-1/test-directory-1-file-1.txt\n\\x1b[34mprocessed\\x1b[0m test-directory-1/test-directory-1-file-2.txt\n\\x1b[34mprocessed\\x1b[0m test-directory-2/test-directory-2-directory-1/test-directory-2-directory-1-file-1.txt\n\\x1b[34mprocessed\\x1b[0m test-directory-2/test-directory-2-directory-2/test-directory-2-directory-2-file-1.txt\n\\x1b[34mprocessed\\x1b[0m test-directory-2/test-directory-2-file-1.txt\n\\x1b[34mprocessed\\x1b[0m test-directory-2/test-directory-2-file-2.txt\n\\x1b[34mprocessed\\x1b[0m test-file-1.txt\n\\x1b[34mprocessed\\x1b[0m test-file-2.txt\n\\x1b[34mcreated\\x1b[0m application \\x1b[36mtest-moon-cli\\x1b[0m\n\nTo start, run:\n\tcd test-moon-cli\n\tnpm install\n\tnpm run dev\n`);\n  cleanAll(pathTest);\n});","file":"cli.test.js","skipped":false,"dir":"packages/moon-cli/test"},{"name":"error extracting","suites":[],"updatePoint":{"line":572,"column":22},"line":572,"code":"test(\"error extracting\", () => {\n  jest.resetModules();\n  init();\n  httpsRequest = {\n    method: \"GET\",\n    host: \"api.github.com\",\n    path: \"/repos/kbrsh/moon-template/tarball/master\",\n    headers: {\n      \"User-Agent\": \"Moon\"\n    }\n  };\n  child_processTarError = \"error extracting\";\n  expect(MoonCLI([\"create\", \"test-moon-cli\"])).toEqual(`\\x1b[34mMoon\\x1b[0m creating application\n\\x1b[34mdownloaded\\x1b[0m kbrsh/moon-template\n\\x1b[31merror\\x1b[0m Failed archive extraction.\n\nAttempted to extract archive to target:\n\t${pathTestArchive} -> ${pathTest}\n\nReceived error:\n\terror extracting\n\nExpected successful archive extraction.\n\\x1b[34minstalled\\x1b[0m ${pathTest}\n\\x1b[34mcleaned\\x1b[0m ${pathTestArchive}\n\\x1b[34mprocessed\\x1b[0m test-directory-1/test-directory-1-file-1.txt\n\\x1b[34mprocessed\\x1b[0m test-directory-1/test-directory-1-file-2.txt\n\\x1b[34mprocessed\\x1b[0m test-directory-2/test-directory-2-directory-1/test-directory-2-directory-1-file-1.txt\n\\x1b[34mprocessed\\x1b[0m test-directory-2/test-directory-2-directory-2/test-directory-2-directory-2-file-1.txt\n\\x1b[34mprocessed\\x1b[0m test-directory-2/test-directory-2-file-1.txt\n\\x1b[34mprocessed\\x1b[0m test-directory-2/test-directory-2-file-2.txt\n\\x1b[34mprocessed\\x1b[0m test-file-1.txt\n\\x1b[34mprocessed\\x1b[0m test-file-2.txt\n\\x1b[34mcreated\\x1b[0m application \\x1b[36mtest-moon-cli\\x1b[0m\n\nTo start, run:\n\tcd test-moon-cli\n\tnpm install\n\tnpm run dev\n`);\n  cleanAll(pathTest);\n});","file":"cli.test.js","skipped":false,"dir":"packages/moon-cli/test"},{"name":"error cleaning","suites":[],"updatePoint":{"line":614,"column":20},"line":614,"code":"test(\"error cleaning\", () => {\n  jest.resetModules();\n  init();\n  httpsRequest = {\n    method: \"GET\",\n    host: \"api.github.com\",\n    path: \"/repos/kbrsh/moon-template/tarball/master\",\n    headers: {\n      \"User-Agent\": \"Moon\"\n    }\n  };\n  fsUnlinkError = \"error cleaning\";\n  expect(MoonCLI([\"create\", \"test-moon-cli\"])).toEqual(`\\x1b[34mMoon\\x1b[0m creating application\n\\x1b[34mdownloaded\\x1b[0m kbrsh/moon-template\n\\x1b[34minstalled\\x1b[0m ${pathTest}\n\\x1b[31merror\\x1b[0m Failed archive deletion.\n\nAttempted to delete archive:\n\t${pathTestArchive}\n\nReceived error:\n\terror cleaning\n\nExpected successful archive deletion.\n\\x1b[34mcleaned\\x1b[0m ${pathTestArchive}\n\\x1b[34mprocessed\\x1b[0m test-directory-1/test-directory-1-file-1.txt\n\\x1b[34mprocessed\\x1b[0m test-directory-1/test-directory-1-file-2.txt\n\\x1b[34mprocessed\\x1b[0m test-directory-2/test-directory-2-directory-1/test-directory-2-directory-1-file-1.txt\n\\x1b[34mprocessed\\x1b[0m test-directory-2/test-directory-2-directory-2/test-directory-2-directory-2-file-1.txt\n\\x1b[34mprocessed\\x1b[0m test-directory-2/test-directory-2-file-1.txt\n\\x1b[34mprocessed\\x1b[0m test-directory-2/test-directory-2-file-2.txt\n\\x1b[34mprocessed\\x1b[0m test-file-1.txt\n\\x1b[34mprocessed\\x1b[0m test-file-2.txt\n\\x1b[34mcreated\\x1b[0m application \\x1b[36mtest-moon-cli\\x1b[0m\n\nTo start, run:\n\tcd test-moon-cli\n\tnpm install\n\tnpm run dev\n`);\n  cleanAll(pathTest);\n});","file":"cli.test.js","skipped":false,"dir":"packages/moon-cli/test"},{"name":"report parse errors","suites":[],"updatePoint":{"line":3,"column":25},"line":3,"code":"test(\"report parse errors\", () => {\n  expect(() => compiler.compile(`<div test=\"/>`).constructor.name).toThrow();\n  expect(console.error).toBeCalledWith(`[Moon] ERROR: Invalid input to parser.\\n\\nAttempted to parse input.\\n\\nExpected \\\"\\\"\\\".\\n\\nReceived:\\n\\n1| <div test=\\\"/> \\n |              ^`);\n});","file":"compiler.test.js","skipped":false,"dir":"packages/moon-compiler/test"},{"name":"generate static element","suites":[],"updatePoint":{"line":7,"column":29},"line":7,"code":"test(\"generate static element\", () => {\n  assertGenerate(\"<div><h1>Test</h1><p>test</p></div>\", \"Moon.view.components.div({children:[Moon.view.components.h1({children:[Moon.view.components.text({data:\\\"Test\\\"})]}),Moon.view.components.p({children:[Moon.view.components.text({data:\\\"test\\\"})]})]})\");\n});","file":"generator.test.js","skipped":false,"dir":"packages/moon-compiler/test"},{"name":"generate static element with escaped text","suites":[],"updatePoint":{"line":10,"column":47},"line":10,"code":"test(\"generate static element with escaped text\", () => {\n  assertGenerate(\"<div>foo \\\\{ bar \\\\< baz \\\\\\\" \\\" \\\\\\n \\n</div>\", `Moon.view.components.div({children:[Moon.view.components.text({data:\"foo \\\\{ bar \\\\< baz \\\\\\\" \\\\\\\" \\\\\\n \\\\n\\\\\\n\"})]})`);\n});","file":"generator.test.js","skipped":false,"dir":"packages/moon-compiler/test"},{"name":"generate static element with escaped text at start","suites":[],"updatePoint":{"line":13,"column":56},"line":13,"code":"test(\"generate static element with escaped text at start\", () => {\n  assertGenerate(\"<div>\\nTest</div>\", `Moon.view.components.div({children:[Moon.view.components.text({data:\"\\\\n\\\\\nTest\"})]})`);\n});","file":"generator.test.js","skipped":false,"dir":"packages/moon-compiler/test"},{"name":"generate static element with whitespace only nodes","suites":[],"updatePoint":{"line":17,"column":56},"line":17,"code":"test(\"generate static element with whitespace only nodes\", () => {\n  assertGenerate(`<div>\n\t\t\t<h1>Test</h1>\n\t\t\t<p>test</p>\n\t\t</div>`, `Moon.view.components.div({children:[\n\t\t\tMoon.view.components.h1({children:[Moon.view.components.text({data:\\\"Test\\\"})]})\n\t\t\t,Moon.view.components.p({children:[Moon.view.components.text({data:\\\"test\\\"})]})\n\t\t]})`);\n});","file":"generator.test.js","skipped":false,"dir":"packages/moon-compiler/test"},{"name":"generate dynamic element","suites":[],"updatePoint":{"line":26,"column":30},"line":26,"code":"test(\"generate dynamic element\", () => {\n  assertGenerate(\"<div><h1>Test</h1><p>test {message}</p></div>\", \"Moon.view.components.div({children:[Moon.view.components.h1({children:[Moon.view.components.text({data:\\\"Test\\\"})]}),Moon.view.components.p({children:[Moon.view.components.text({data:\\\"test \\\"}),Moon.view.components.text({data:message})]})]})\");\n});","file":"generator.test.js","skipped":false,"dir":"packages/moon-compiler/test"},{"name":"generate static attributes","suites":[],"updatePoint":{"line":29,"column":32},"line":29,"code":"test(\"generate static attributes\", () => {\n  assertGenerate(\"<div><h1 id='bar' class='foo'>Test</h1><p>test {message}</p></div>\", \"Moon.view.components.div({children:[Moon.view.components.h1 ({\\\"id\\\":'bar' ,\\\"class\\\":'foo',children:[Moon.view.components.text({data:\\\"Test\\\"})]}),Moon.view.components.p({children:[Moon.view.components.text({data:\\\"test \\\"}),Moon.view.components.text({data:message})]})]})\");\n});","file":"generator.test.js","skipped":false,"dir":"packages/moon-compiler/test"},{"name":"generate dynamic attributes","suites":[],"updatePoint":{"line":32,"column":33},"line":32,"code":"test(\"generate dynamic attributes\", () => {\n  assertGenerate(\"<div><h1 id='bar' class=(foo)>Test</h1><p>test {message}</p></div>\", \"Moon.view.components.div({children:[Moon.view.components.h1 ({\\\"id\\\":'bar' ,\\\"class\\\":(foo),children:[Moon.view.components.text({data:\\\"Test\\\"})]}),Moon.view.components.p({children:[Moon.view.components.text({data:\\\"test \\\"}),Moon.view.components.text({data:message})]})]})\");\n});","file":"generator.test.js","skipped":false,"dir":"packages/moon-compiler/test"},{"name":"generate dynamic data attribute","suites":[],"updatePoint":{"line":35,"column":37},"line":35,"code":"test(\"generate dynamic data attribute\", () => {\n  assertGenerate(\"<div foo=(bar) bar=(data)></div>\", \"Moon.view.components.div ({\\\"foo\\\":(bar) ,\\\"bar\\\":(data)})\");\n});","file":"generator.test.js","skipped":false,"dir":"packages/moon-compiler/test"},{"name":"generate static children attribute","suites":[],"updatePoint":{"line":38,"column":40},"line":38,"code":"test(\"generate static children attribute\", () => {\n  assertGenerate(\"<div foo=(bar) children='fake'></div>\", \"Moon.view.components.div ({\\\"foo\\\":(bar) ,\\\"children\\\":'fake'})\");\n});","file":"generator.test.js","skipped":false,"dir":"packages/moon-compiler/test"},{"name":"generate dynamic children attribute","suites":[],"updatePoint":{"line":41,"column":41},"line":41,"code":"test(\"generate dynamic children attribute\", () => {\n  assertGenerate(\"<div children=(children)></div>\", \"Moon.view.components.div ({\\\"children\\\":(children)})\");\n});","file":"generator.test.js","skipped":false,"dir":"packages/moon-compiler/test"},{"name":"generate events","suites":[],"updatePoint":{"line":44,"column":21},"line":44,"code":"test(\"generate events\", () => {\n  assertGenerate(\"<div><h1 id='bar' class=(foo) onClick=(doSomething)>Test</h1><p>test {message}</p></div>\", \"Moon.view.components.div({children:[Moon.view.components.h1 ({\\\"id\\\":'bar' ,\\\"class\\\":(foo) ,\\\"onClick\\\":(doSomething),children:[Moon.view.components.text({data:\\\"Test\\\"})]}),Moon.view.components.p({children:[Moon.view.components.text({data:\\\"test \\\"}),Moon.view.components.text({data:message})]})]})\");\n});","file":"generator.test.js","skipped":false,"dir":"packages/moon-compiler/test"},{"name":"generate static components","suites":[],"updatePoint":{"line":47,"column":32},"line":47,"code":"test(\"generate static components\", () => {\n  assertGenerate(\"<div><Component/></div>\", \"Moon.view.components.div({children:[Component({})]})\");\n});","file":"generator.test.js","skipped":false,"dir":"packages/moon-compiler/test"},{"name":"generate static components with dot and first character lowercase","suites":[],"updatePoint":{"line":50,"column":71},"line":50,"code":"test(\"generate static components with dot and first character lowercase\", () => {\n  assertGenerate(\"<div><test.Component/></div>\", \"Moon.view.components.div({children:[test.Component({})]})\");\n});","file":"generator.test.js","skipped":false,"dir":"packages/moon-compiler/test"},{"name":"generate static components with data","suites":[],"updatePoint":{"line":53,"column":42},"line":53,"code":"test(\"generate static components with data\", () => {\n  assertGenerate(\"<div><Component foo='bar' bar='baz'/></div>\", \"Moon.view.components.div({children:[Component ({\\\"foo\\\":'bar' ,\\\"bar\\\":'baz'})]})\");\n});","file":"generator.test.js","skipped":false,"dir":"packages/moon-compiler/test"},{"name":"generate static components with children","suites":[],"updatePoint":{"line":56,"column":46},"line":56,"code":"test(\"generate static components with children\", () => {\n  assertGenerate(\"<div><Component foo='bar' bar='baz'><p>static</p></Component></div>\", \"Moon.view.components.div({children:[Component ({\\\"foo\\\":'bar' ,\\\"bar\\\":'baz',children:[Moon.view.components.p({children:[Moon.view.components.text({data:\\\"static\\\"})]})]})]})\");\n});","file":"generator.test.js","skipped":false,"dir":"packages/moon-compiler/test"},{"name":"generate dynamic components with data","suites":[],"updatePoint":{"line":59,"column":43},"line":59,"code":"test(\"generate dynamic components with data\", () => {\n  assertGenerate(\"<div><Component foo=(bar) bar='baz'/></div>\", \"Moon.view.components.div({children:[Component ({\\\"foo\\\":(bar) ,\\\"bar\\\":'baz'})]})\");\n});","file":"generator.test.js","skipped":false,"dir":"packages/moon-compiler/test"},{"name":"generate dynamic components with children","suites":[],"updatePoint":{"line":62,"column":47},"line":62,"code":"test(\"generate dynamic components with children\", () => {\n  assertGenerate(\"<div><Component foo=(bar) bar='baz'><p>{message}</p></Component></div>\", \"Moon.view.components.div({children:[Component ({\\\"foo\\\":(bar) ,\\\"bar\\\":'baz',children:[Moon.view.components.p({children:[Moon.view.components.text({data:message})]})]})]})\");\n});","file":"generator.test.js","skipped":false,"dir":"packages/moon-compiler/test"},{"name":"generate text directly","suites":[],"updatePoint":{"line":65,"column":28},"line":65,"code":"test(\"generate text directly\", () => {\n  assertGenerate(\"<text value=(foo)/>\", `Moon.view.components.text ({\"value\":(foo)})`);\n});","file":"generator.test.js","skipped":false,"dir":"packages/moon-compiler/test"},{"name":"generate static element nodes","suites":[],"updatePoint":{"line":68,"column":35},"line":68,"code":"test(\"generate static element nodes\", () => {\n  assertGenerate(\"<element name='h1' data='fake data' children='fake children'/>\", \"Moon.view.components.element ({\\\"name\\\":'h1' ,\\\"data\\\":'fake data' ,\\\"children\\\":'fake children'})\");\n});","file":"generator.test.js","skipped":false,"dir":"packages/moon-compiler/test"},{"name":"generate static data element nodes","suites":[],"updatePoint":{"line":71,"column":40},"line":71,"code":"test(\"generate static data element nodes\", () => {\n  assertGenerate(\"<element name='h1' data='static' children=(dynamic)/>\", \"Moon.view.components.element ({\\\"name\\\":'h1' ,\\\"data\\\":'static' ,\\\"children\\\":(dynamic)})\");\n});","file":"generator.test.js","skipped":false,"dir":"packages/moon-compiler/test"},{"name":"generate static children element nodes","suites":[],"updatePoint":{"line":74,"column":44},"line":74,"code":"test(\"generate static children element nodes\", () => {\n  assertGenerate(\"<element name='h1' data={dynamic: dynamic} children=[]/>\", \"Moon.view.components.element ({\\\"name\\\":'h1' ,\\\"data\\\":{dynamic: dynamic} ,\\\"children\\\":[]})\");\n});","file":"generator.test.js","skipped":false,"dir":"packages/moon-compiler/test"},{"name":"generate dynamic element nodes","suites":[],"updatePoint":{"line":77,"column":36},"line":77,"code":"test(\"generate dynamic element nodes\", () => {\n  assertGenerate(\"<element name='h1' data=(dynamic) children=(dynamicChildren)/>\", \"Moon.view.components.element ({\\\"name\\\":'h1' ,\\\"data\\\":(dynamic) ,\\\"children\\\":(dynamicChildren)})\");\n});","file":"generator.test.js","skipped":false,"dir":"packages/moon-compiler/test"},{"name":"generate if node","suites":[],"updatePoint":{"line":80,"column":22},"line":80,"code":"test(\"generate if node\", () => {\n  assertGenerate(`<div><(condition ? <p>test</p> : <text value=\"\"/>)*></div>`, \"Moon.view.components.div({children:[(condition ? Moon.view.components.p({children:[Moon.view.components.text({data:\\\"test\\\"})]}) : Moon.view.components.text ({\\\"value\\\":\\\"\\\"}))]})\");\n});","file":"generator.test.js","skipped":false,"dir":"packages/moon-compiler/test"},{"name":"generate if node at root","suites":[],"updatePoint":{"line":83,"column":30},"line":83,"code":"test(\"generate if node at root\", () => {\n  assertGenerate(`<(condition ? <p>test</p> : <text value=\"\"/>)*>`, \"(condition ? Moon.view.components.p({children:[Moon.view.components.text({data:\\\"test\\\"})]}) : Moon.view.components.text ({\\\"value\\\":\\\"\\\"}))\");\n});","file":"generator.test.js","skipped":false,"dir":"packages/moon-compiler/test"},{"name":"generate if/else node","suites":[],"updatePoint":{"line":86,"column":27},"line":86,"code":"test(\"generate if/else node\", () => {\n  assertGenerate(\"<(condition ? <p>test</p> : <p>{dynamic}</p>)*>\", \"(condition ? Moon.view.components.p({children:[Moon.view.components.text({data:\\\"test\\\"})]}) : Moon.view.components.p({children:[Moon.view.components.text({data:dynamic})]}))\");\n});","file":"generator.test.js","skipped":false,"dir":"packages/moon-compiler/test"},{"name":"generate loop","suites":[],"updatePoint":{"line":89,"column":19},"line":89,"code":"test(\"generate loop\", () => {\n  assertGenerate(\"<span children=(list.map(x => <p>{x}</p>))/>\", \"Moon.view.components.span ({\\\"children\\\":(list.map(x => Moon.view.components.p({children:[Moon.view.components.text({data:x})]})))})\");\n});","file":"generator.test.js","skipped":false,"dir":"packages/moon-compiler/test"},{"name":"generate node with name as identifier","suites":[],"updatePoint":{"line":92,"column":43},"line":92,"code":"test(\"generate node with name as identifier\", () => {\n  assertGenerate(`<div*>`, `Moon.view.components.div`);\n});","file":"generator.test.js","skipped":false,"dir":"packages/moon-compiler/test"},{"name":"generate node with name as string","suites":[],"updatePoint":{"line":95,"column":39},"line":95,"code":"test(\"generate node with name as string\", () => {\n  assertGenerate(`<\"div foo\"*>`, `\"div foo\"`);\n});","file":"generator.test.js","skipped":false,"dir":"packages/moon-compiler/test"},{"name":"generate node with name as block","suites":[],"updatePoint":{"line":98,"column":38},"line":98,"code":"test(\"generate node with name as block\", () => {\n  assertGenerate(`<(div + foo)*>`, `(div + foo)`);\n});","file":"generator.test.js","skipped":false,"dir":"packages/moon-compiler/test"},{"name":"generate node data with name as identifier","suites":[],"updatePoint":{"line":101,"column":48},"line":101,"code":"test(\"generate node data with name as identifier\", () => {\n  assertGenerate(`<div/>`, `Moon.view.components.div({})`);\n});","file":"generator.test.js","skipped":false,"dir":"packages/moon-compiler/test"},{"name":"generate node data with name as string","suites":[],"updatePoint":{"line":104,"column":44},"line":104,"code":"test(\"generate node data with name as string\", () => {\n  assertGenerate(`<\"div foo\"/>`, `\"div foo\"({})`);\n});","file":"generator.test.js","skipped":false,"dir":"packages/moon-compiler/test"},{"name":"generate node data with name as block","suites":[],"updatePoint":{"line":107,"column":43},"line":107,"code":"test(\"generate node data with name as block\", () => {\n  assertGenerate(`<(div + foo)/>`, `(div + foo)({})`);\n});","file":"generator.test.js","skipped":false,"dir":"packages/moon-compiler/test"},{"name":"generate node data with name as block and data as block","suites":[],"updatePoint":{"line":110,"column":61},"line":110,"code":"test(\"generate node data with name as block and data as block\", () => {\n  assertGenerate(`<(div + foo) (custom)/>`, `(div + foo) ((custom))`);\n});","file":"generator.test.js","skipped":false,"dir":"packages/moon-compiler/test"},{"name":"generate node data with name as block and data as attributes","suites":[],"updatePoint":{"line":113,"column":66},"line":113,"code":"test(\"generate node data with name as block and data as attributes\", () => {\n  assertGenerate(`<(div + foo) foo=\"bar\" bar=baz baz=(foo)/>`, `(div + foo) ({\\\"foo\\\":\\\"bar\\\" ,\\\"bar\\\":baz ,\\\"baz\\\":(foo)})`);\n});","file":"generator.test.js","skipped":false,"dir":"packages/moon-compiler/test"},{"name":"generate node data children with name as block and data as attributes","suites":[],"updatePoint":{"line":116,"column":75},"line":116,"code":"test(\"generate node data children with name as block and data as attributes\", () => {\n  assertGenerate(`<(div + foo) foo=\"bar\" bar=baz baz=(foo)></>`, `(div + foo) ({\\\"foo\\\":\\\"bar\\\" ,\\\"bar\\\":baz ,\\\"baz\\\":(foo)})`);\n});","file":"generator.test.js","skipped":false,"dir":"packages/moon-compiler/test"},{"name":"generate node data children with name as identifier and data as attributes","suites":[],"updatePoint":{"line":119,"column":80},"line":119,"code":"test(\"generate node data children with name as identifier and data as attributes\", () => {\n  assertGenerate(`<div foo=\"bar\" bar=baz baz=(foo)>child <div>here {foo}</div></div>`, `Moon.view.components.div ({\\\"foo\\\":\\\"bar\\\" ,\\\"bar\\\":baz ,\\\"baz\\\":(foo),children:[Moon.view.components.text({data:\\\"child \\\"}),Moon.view.components.div({children:[Moon.view.components.text({data:\\\"here \\\"}),Moon.view.components.text({data:foo})]})]})`);\n});","file":"generator.test.js","skipped":false,"dir":"packages/moon-compiler/test"},{"name":"generate with comments","suites":[],"updatePoint":{"line":122,"column":28},"line":122,"code":"test(\"generate with comments\", () => {\n  const code = `// <h1>not converted</h1>\\n`;\n  assertGenerate(code, code);\n});","file":"generator.test.js","skipped":false,"dir":"packages/moon-compiler/test"},{"name":"generate with multiline comments","suites":[],"updatePoint":{"line":126,"column":38},"line":126,"code":"test(\"generate with multiline comments\", () => {\n  const code = `/*\\n<h1>not converted</h1>\\n*/`;\n  assertGenerate(code, code);\n});","file":"generator.test.js","skipped":false,"dir":"packages/moon-compiler/test"},{"name":"generate with moon comments outside of node","suites":[],"updatePoint":{"line":130,"column":49},"line":130,"code":"test(\"generate with moon comments outside of node\", () => {\n  assertGenerate(`console.log(# comment\\\\# # \"hello moon\")`, \"console.log(/* comment\\\\# */ \\\"hello moon\\\")\");\n});","file":"generator.test.js","skipped":false,"dir":"packages/moon-compiler/test"},{"name":"generate with moon comments inside node","suites":[],"updatePoint":{"line":133,"column":45},"line":133,"code":"test(\"generate with moon comments inside node\", () => {\n  assertGenerate(`const hi = #test#<#sep#div#sep#foo=bar#sep##sep##sep#>test</div>#foo#;`, `const hi = /*test*//*sep*/Moon.view.components.div/*sep*/({\\\"foo\\\":bar/*sep*//*sep*//*sep*/,children:[Moon.view.components.text({data:\\\"test\\\"})]})/*foo*/;`);\n});","file":"generator.test.js","skipped":false,"dir":"packages/moon-compiler/test"},{"name":"generate with double quote strings","suites":[],"updatePoint":{"line":136,"column":40},"line":136,"code":"test(\"generate with double quote strings\", () => {\n  const code = `\"<h1>not converted</h1>\"`;\n  assertGenerate(code, code);\n});","file":"generator.test.js","skipped":false,"dir":"packages/moon-compiler/test"},{"name":"generate with single quote strings","suites":[],"updatePoint":{"line":140,"column":40},"line":140,"code":"test(\"generate with single quote strings\", () => {\n  const code = `'<h1>not converted</h1>'`;\n  assertGenerate(code, code);\n});","file":"generator.test.js","skipped":false,"dir":"packages/moon-compiler/test"},{"name":"generate with template strings","suites":[],"updatePoint":{"line":144,"column":36},"line":144,"code":"test(\"generate with template strings\", () => {\n  const code = \"`<h1>not converted</h1>`\";\n  assertGenerate(code, code);\n});","file":"generator.test.js","skipped":false,"dir":"packages/moon-compiler/test"},{"name":"generate with regular expressions","suites":[],"updatePoint":{"line":148,"column":39},"line":148,"code":"test(\"generate with regular expressions\", () => {\n  const code = \"/<h1*>/\";\n  assertGenerate(code, code);\n});","file":"generator.test.js","skipped":false,"dir":"packages/moon-compiler/test"},{"name":"generate other expressions","suites":[],"updatePoint":{"line":152,"column":32},"line":152,"code":"test(\"generate other expressions\", () => {\n  const code = \"(1 + 1)\";\n  assertGenerate(code, code);\n});","file":"generator.test.js","skipped":false,"dir":"packages/moon-compiler/test"},{"name":"generate other complex nested expressions","suites":[],"updatePoint":{"line":156,"column":47},"line":156,"code":"test(\"generate other complex nested expressions\", () => {\n  const code = \"(1 + ('hello\\\\'' + `world\\\\\\\"`))\";\n  assertGenerate(code, code);\n});","file":"generator.test.js","skipped":false,"dir":"packages/moon-compiler/test"},{"name":"generate other complex nested expressions inside views","suites":[],"updatePoint":{"line":160,"column":60},"line":160,"code":"test(\"generate other complex nested expressions inside views\", () => {\n  assertGenerate(\"<h1 test=(1 + ('hello\\\\'' + `world\\\\\\\"`))>Test</h1>\", \"Moon.view.components.h1 ({\\\"test\\\":(1 + ('hello\\\\'' + `world\\\\\\\"`)),children:[Moon.view.components.text({data:\\\"Test\\\"})]})\");\n});","file":"generator.test.js","skipped":false,"dir":"packages/moon-compiler/test"},{"name":"generate views with surrounding whitespace","suites":[],"updatePoint":{"line":163,"column":48},"line":163,"code":"test(\"generate views with surrounding whitespace\", () => {\n  assertGenerate(`(\n\t<p>Moon</p>\n)`, `(\n\tMoon.view.components.p({children:[Moon.view.components.text({data:\\\"Moon\\\"})]})\n)`);\n});","file":"generator.test.js","skipped":false,"dir":"packages/moon-compiler/test"},{"name":"fails on invalid parse nodes","suites":[],"updatePoint":{"line":170,"column":34},"line":170,"code":"test(\"fails on invalid parse nodes\", () => {\n  expect(compiler.generate({\n    type: \"invalid\"\n  })).toBeUndefined();\n});","file":"generator.test.js","skipped":false,"dir":"packages/moon-compiler/test"},{"name":"parse comment outside of node","suites":[],"updatePoint":{"line":7,"column":35},"line":7,"code":"test(\"parse comment outside of node\", () => {\n  expect(parseTest(`console.log(# comment # \"hello moon\")`)).toEqual([[[[\"c\", \"o\", \"n\", \"s\", \"o\", \"l\", \"e\", \".\", \"l\", \"o\", \"g\"], [\"(\", [{\n    \"type\": \"comment\",\n    \"value\": [\"#\", [\" \", \"c\", \"o\", \"m\", \"m\", \"e\", \"n\", \"t\", \" \"], \"#\"]\n  }, [\" \"], [\"\\\"\", [\"h\", \"e\", \"l\", \"l\", \"o\", \" \", \"m\", \"o\", \"o\", \"n\"], \"\\\"\"]], \")\"]], \"EOF\"], 37]);\n});","file":"parser.test.js","skipped":false,"dir":"packages/moon-compiler/test"},{"name":"parse comment inside of node","suites":[],"updatePoint":{"line":13,"column":34},"line":13,"code":"test(\"parse comment inside of node\", () => {\n  expect(parseTest(`const hi = #test#<#sep#div#sep#foo=bar#sep##sep##sep#>test</div>#foo#;`)).toEqual([[[[\"c\", \"o\", \"n\", \"s\", \"t\"], [\" \", \"h\", \"i\", \" \", \"=\", \" \"], {\n    \"type\": \"comment\",\n    \"value\": [\"#\", [\"t\", \"e\", \"s\", \"t\"], \"#\"]\n  }, {\n    \"type\": \"nodeDataChildren\",\n    \"value\": [\"<\", [{\n      \"type\": \"comment\",\n      \"value\": [\"#\", [\"s\", \"e\", \"p\"], \"#\"]\n    }], [\"d\", \"i\", \"v\"], [{\n      \"type\": \"comment\",\n      \"value\": [\"#\", [\"s\", \"e\", \"p\"], \"#\"]\n    }], {\n      \"type\": \"attributes\",\n      \"value\": [[[\"f\", \"o\", \"o\"], \"=\", [\"b\", \"a\", \"r\"], [{\n        \"type\": \"comment\",\n        \"value\": [\"#\", [\"s\", \"e\", \"p\"], \"#\"]\n      }, {\n        \"type\": \"comment\",\n        \"value\": [\"#\", [\"s\", \"e\", \"p\"], \"#\"]\n      }, {\n        \"type\": \"comment\",\n        \"value\": [\"#\", [\"s\", \"e\", \"p\"], \"#\"]\n      }]]]\n    }, \">\", [{\n      \"type\": \"text\",\n      \"value\": [\"t\", \"e\", \"s\", \"t\"]\n    }], \"</\", [\"d\", \"i\", \"v\"], \">\"]\n  }, {\n    \"type\": \"comment\",\n    \"value\": [\"#\", [\"f\", \"o\", \"o\"], \"#\"]\n  }, [\";\"]], \"EOF\"], 70]);\n});","file":"parser.test.js","skipped":false,"dir":"packages/moon-compiler/test"},{"name":"parse empty element","suites":[],"updatePoint":{"line":46,"column":25},"line":46,"code":"test(\"parse empty element\", () => {\n  expect(parseTest(`<div></div>`)).toEqual([[[{\n    \"type\": \"nodeDataChildren\",\n    \"value\": [\"<\", [], [\"d\", \"i\", \"v\"], [], {\n      \"type\": \"attributes\",\n      \"value\": []\n    }, \">\", [], \"</\", [\"d\", \"i\", \"v\"], \">\"]\n  }], \"EOF\"], 11]);\n});","file":"parser.test.js","skipped":false,"dir":"packages/moon-compiler/test"},{"name":"parse text element","suites":[],"updatePoint":{"line":55,"column":24},"line":55,"code":"test(\"parse text element\", () => {\n  expect(parseTest(`<div>test text</div>`)).toEqual([[[{\n    \"type\": \"nodeDataChildren\",\n    \"value\": [\"<\", [], [\"d\", \"i\", \"v\"], [], {\n      \"type\": \"attributes\",\n      \"value\": []\n    }, \">\", [{\n      \"type\": \"text\",\n      \"value\": [\"t\", \"e\", \"s\", \"t\", \" \", \"t\", \"e\", \"x\", \"t\"]\n    }], \"</\", [\"d\", \"i\", \"v\"], \">\"]\n  }], \"EOF\"], 20]);\n});","file":"parser.test.js","skipped":false,"dir":"packages/moon-compiler/test"},{"name":"parse text element with escaped block delimiter","suites":[],"updatePoint":{"line":67,"column":53},"line":67,"code":"test(\"parse text element with escaped block delimiter\", () => {\n  expect(parseTest(`<div>test \\\\{ escaped</div>`)).toEqual([[[{\n    \"type\": \"nodeDataChildren\",\n    \"value\": [\"<\", [], [\"d\", \"i\", \"v\"], [], {\n      \"type\": \"attributes\",\n      \"value\": []\n    }, \">\", [{\n      \"type\": \"text\",\n      \"value\": [\"t\", \"e\", \"s\", \"t\", \" \", [\"\\\\\", \"{\"], \" \", \"e\", \"s\", \"c\", \"a\", \"p\", \"e\", \"d\"]\n    }], \"</\", [\"d\", \"i\", \"v\"], \">\"]\n  }], \"EOF\"], 26]);\n});","file":"parser.test.js","skipped":false,"dir":"packages/moon-compiler/test"},{"name":"parse text element with escaped node delimiter","suites":[],"updatePoint":{"line":79,"column":52},"line":79,"code":"test(\"parse text element with escaped node delimiter\", () => {\n  expect(parseTest(`<div>test \\\\< escaped</div>`)).toEqual([[[{\n    \"type\": \"nodeDataChildren\",\n    \"value\": [\"<\", [], [\"d\", \"i\", \"v\"], [], {\n      \"type\": \"attributes\",\n      \"value\": []\n    }, \">\", [{\n      \"type\": \"text\",\n      \"value\": [\"t\", \"e\", \"s\", \"t\", \" \", [\"\\\\\", \"<\"], \" \", \"e\", \"s\", \"c\", \"a\", \"p\", \"e\", \"d\"]\n    }], \"</\", [\"d\", \"i\", \"v\"], \">\"]\n  }], \"EOF\"], 26]);\n});","file":"parser.test.js","skipped":false,"dir":"packages/moon-compiler/test"},{"name":"parse node","suites":[],"updatePoint":{"line":91,"column":16},"line":91,"code":"test(\"parse node\", () => {\n  expect(parseTest(`<div*>`)).toEqual([[[{\n    \"type\": \"node\",\n    \"value\": [\"<\", [], [\"d\", \"i\", \"v\"], [], \"*>\"]\n  }], \"EOF\"], 6]);\n});","file":"parser.test.js","skipped":false,"dir":"packages/moon-compiler/test"},{"name":"parse node with string name","suites":[],"updatePoint":{"line":97,"column":33},"line":97,"code":"test(\"parse node with string name\", () => {\n  expect(parseTest(`<\"div\"*>`)).toEqual([[[{\n    \"type\": \"node\",\n    \"value\": [\"<\", [], [\"\\\"\", [\"d\", \"i\", \"v\"], \"\\\"\"], [], \"*>\"]\n  }], \"EOF\"], 8]);\n});","file":"parser.test.js","skipped":false,"dir":"packages/moon-compiler/test"},{"name":"parse node with block name","suites":[],"updatePoint":{"line":103,"column":32},"line":103,"code":"test(\"parse node with block name\", () => {\n  expect(parseTest(`<{dynamic}*>`)).toEqual([[[{\n    \"type\": \"node\",\n    \"value\": [\"<\", [], [\"{\", [[\"d\", \"y\", \"n\", \"a\", \"m\", \"i\", \"c\"]], \"}\"], [], \"*>\"]\n  }], \"EOF\"], 12]);\n});","file":"parser.test.js","skipped":false,"dir":"packages/moon-compiler/test"},{"name":"parse node data","suites":[],"updatePoint":{"line":109,"column":21},"line":109,"code":"test(\"parse node data\", () => {\n  expect(parseTest(`<div/>`)).toEqual([[[{\n    \"type\": \"nodeData\",\n    \"value\": [\"<\", [], [\"d\", \"i\", \"v\"], [], {\n      \"type\": \"attributes\",\n      \"value\": []\n    }, \"/>\"]\n  }], \"EOF\"], 6]);\n});","file":"parser.test.js","skipped":false,"dir":"packages/moon-compiler/test"},{"name":"parse node data with attributes","suites":[],"updatePoint":{"line":118,"column":37},"line":118,"code":"test(\"parse node data with attributes\", () => {\n  expect(parseTest(`<div foo=\"bar\" bar={1 + 2 + 3} baz=\"test\"/>`)).toEqual([[[{\n    \"type\": \"nodeData\",\n    \"value\": [\"<\", [], [\"d\", \"i\", \"v\"], [\" \"], {\n      \"type\": \"attributes\",\n      \"value\": [[[\"f\", \"o\", \"o\"], \"=\", [\"\\\"\", [\"b\", \"a\", \"r\"], \"\\\"\"], [\" \"]], [[\"b\", \"a\", \"r\"], \"=\", [\"{\", [[\"1\"], [\" \", \"+\", \" \", \"2\", \" \", \"+\", \" \", \"3\"]], \"}\"], [\" \"]], [[\"b\", \"a\", \"z\"], \"=\", [\"\\\"\", [\"t\", \"e\", \"s\", \"t\"], \"\\\"\"], []]]\n    }, \"/>\"]\n  }], \"EOF\"], 43]);\n});","file":"parser.test.js","skipped":false,"dir":"packages/moon-compiler/test"},{"name":"parse node data with string name and attributes","suites":[],"updatePoint":{"line":127,"column":53},"line":127,"code":"test(\"parse node data with string name and attributes\", () => {\n  expect(parseTest(`<\"div\" foo=\"bar\" bar={1 + 2 + 3} baz=\"test\"/>`)).toEqual([[[{\n    \"type\": \"nodeData\",\n    \"value\": [\"<\", [], [\"\\\"\", [\"d\", \"i\", \"v\"], \"\\\"\"], [\" \"], {\n      \"type\": \"attributes\",\n      \"value\": [[[\"f\", \"o\", \"o\"], \"=\", [\"\\\"\", [\"b\", \"a\", \"r\"], \"\\\"\"], [\" \"]], [[\"b\", \"a\", \"r\"], \"=\", [\"{\", [[\"1\"], [\" \", \"+\", \" \", \"2\", \" \", \"+\", \" \", \"3\"]], \"}\"], [\" \"]], [[\"b\", \"a\", \"z\"], \"=\", [\"\\\"\", [\"t\", \"e\", \"s\", \"t\"], \"\\\"\"], []]]\n    }, \"/>\"]\n  }], \"EOF\"], 45]);\n});","file":"parser.test.js","skipped":false,"dir":"packages/moon-compiler/test"},{"name":"parse node data with block name and attributes","suites":[],"updatePoint":{"line":136,"column":52},"line":136,"code":"test(\"parse node data with block name and attributes\", () => {\n  expect(parseTest(`<{div} foo=\"bar\" bar={1 + 2 + 3} baz=\"test\"/>`)).toEqual([[[{\n    \"type\": \"nodeData\",\n    \"value\": [\"<\", [], [\"{\", [[\"d\", \"i\", \"v\"]], \"}\"], [\" \"], {\n      \"type\": \"attributes\",\n      \"value\": [[[\"f\", \"o\", \"o\"], \"=\", [\"\\\"\", [\"b\", \"a\", \"r\"], \"\\\"\"], [\" \"]], [[\"b\", \"a\", \"r\"], \"=\", [\"{\", [[\"1\"], [\" \", \"+\", \" \", \"2\", \" \", \"+\", \" \", \"3\"]], \"}\"], [\" \"]], [[\"b\", \"a\", \"z\"], \"=\", [\"\\\"\", [\"t\", \"e\", \"s\", \"t\"], \"\\\"\"], []]]\n    }, \"/>\"]\n  }], \"EOF\"], 45]);\n});","file":"parser.test.js","skipped":false,"dir":"packages/moon-compiler/test"},{"name":"parse node data with data","suites":[],"updatePoint":{"line":145,"column":31},"line":145,"code":"test(\"parse node data with data\", () => {\n  expect(parseTest(`<div {foo}/>`)).toEqual([[[{\n    \"type\": \"nodeData\",\n    \"value\": [\"<\", [], [\"d\", \"i\", \"v\"], [\" \"], [\"{\", [[\"f\", \"o\", \"o\"]], \"}\"], \"/>\"]\n  }], \"EOF\"], 12]);\n});","file":"parser.test.js","skipped":false,"dir":"packages/moon-compiler/test"},{"name":"parse node data with string name and data","suites":[],"updatePoint":{"line":151,"column":47},"line":151,"code":"test(\"parse node data with string name and data\", () => {\n  expect(parseTest(`<\"div\" {foo}/>`)).toEqual([[[{\n    \"type\": \"nodeData\",\n    \"value\": [\"<\", [], [\"\\\"\", [\"d\", \"i\", \"v\"], \"\\\"\"], [\" \"], [\"{\", [[\"f\", \"o\", \"o\"]], \"}\"], \"/>\"]\n  }], \"EOF\"], 14]);\n});","file":"parser.test.js","skipped":false,"dir":"packages/moon-compiler/test"},{"name":"parse node data with block name and data","suites":[],"updatePoint":{"line":157,"column":46},"line":157,"code":"test(\"parse node data with block name and data\", () => {\n  expect(parseTest(`<{div} {foo}/>`)).toEqual([[[{\n    \"type\": \"nodeData\",\n    \"value\": [\"<\", [], [\"{\", [[\"d\", \"i\", \"v\"]], \"}\"], [\" \"], [\"{\", [[\"f\", \"o\", \"o\"]], \"}\"], \"/>\"]\n  }], \"EOF\"], 14]);\n});","file":"parser.test.js","skipped":false,"dir":"packages/moon-compiler/test"},{"name":"parse nested elements","suites":[],"updatePoint":{"line":163,"column":27},"line":163,"code":"test(\"parse nested elements\", () => {\n  expect(parseTest(`\n\t\t<div dynamic={true}>\n\t\t\t<h1>Title</h1>\n\t\t\t<p color=\"blue\">Text</p>\n\t\t</div>\n\t`)).toEqual([[[[\"\\n\", \"\\t\", \"\\t\"], {\n    \"type\": \"nodeDataChildren\",\n    \"value\": [\"<\", [], [\"d\", \"i\", \"v\"], [\" \"], {\n      \"type\": \"attributes\",\n      \"value\": [[[\"d\", \"y\", \"n\", \"a\", \"m\", \"i\", \"c\"], \"=\", [\"{\", [[\"t\", \"r\", \"u\", \"e\"]], \"}\"], []]]\n    }, \">\", [{\n      \"type\": \"text\",\n      \"value\": [\"\\n\", \"\\t\", \"\\t\", \"\\t\"]\n    }, {\n      \"type\": \"nodeDataChildren\",\n      \"value\": [\"<\", [], [\"h\", \"1\"], [], {\n        \"type\": \"attributes\",\n        \"value\": []\n      }, \">\", [{\n        \"type\": \"text\",\n        \"value\": [\"T\", \"i\", \"t\", \"l\", \"e\"]\n      }], \"</\", [\"h\", \"1\"], \">\"]\n    }, {\n      \"type\": \"text\",\n      \"value\": [\"\\n\", \"\\t\", \"\\t\", \"\\t\"]\n    }, {\n      \"type\": \"nodeDataChildren\",\n      \"value\": [\"<\", [], [\"p\"], [\" \"], {\n        \"type\": \"attributes\",\n        \"value\": [[[\"c\", \"o\", \"l\", \"o\", \"r\"], \"=\", [\"\\\"\", [\"b\", \"l\", \"u\", \"e\"], \"\\\"\"], []]]\n      }, \">\", [{\n        \"type\": \"text\",\n        \"value\": [\"T\", \"e\", \"x\", \"t\"]\n      }], \"</\", [\"p\"], \">\"]\n    }, {\n      \"type\": \"text\",\n      \"value\": [\"\\n\", \"\\t\", \"\\t\"]\n    }], \"</\", [\"d\", \"i\", \"v\"], \">\"]\n  }, [\"\\n\", \"\\t\"]], \"EOF\"], 80]);\n});","file":"parser.test.js","skipped":false,"dir":"packages/moon-compiler/test"},{"name":"parse nested elements with block name","suites":[],"updatePoint":{"line":204,"column":43},"line":204,"code":"test(\"parse nested elements with block name\", () => {\n  expect(parseTest(`\n\t\t<{div} dynamic={true}>\n\t\t\t<h1>Title</h1>\n\t\t\t<p color=\"blue\">Text</p>\n\t\t</>\n\t`)).toEqual([[[[\"\\n\", \"\\t\", \"\\t\"], {\n    \"type\": \"nodeDataChildren\",\n    \"value\": [\"<\", [], [\"{\", [[\"d\", \"i\", \"v\"]], \"}\"], [\" \"], {\n      \"type\": \"attributes\",\n      \"value\": [[[\"d\", \"y\", \"n\", \"a\", \"m\", \"i\", \"c\"], \"=\", [\"{\", [[\"t\", \"r\", \"u\", \"e\"]], \"}\"], []]]\n    }, \">\", [{\n      \"type\": \"text\",\n      \"value\": [\"\\n\", \"\\t\", \"\\t\", \"\\t\"]\n    }, {\n      \"type\": \"nodeDataChildren\",\n      \"value\": [\"<\", [], [\"h\", \"1\"], [], {\n        \"type\": \"attributes\",\n        \"value\": []\n      }, \">\", [{\n        \"type\": \"text\",\n        \"value\": [\"T\", \"i\", \"t\", \"l\", \"e\"]\n      }], \"</\", [\"h\", \"1\"], \">\"]\n    }, {\n      \"type\": \"text\",\n      \"value\": [\"\\n\", \"\\t\", \"\\t\", \"\\t\"]\n    }, {\n      \"type\": \"nodeDataChildren\",\n      \"value\": [\"<\", [], [\"p\"], [\" \"], {\n        \"type\": \"attributes\",\n        \"value\": [[[\"c\", \"o\", \"l\", \"o\", \"r\"], \"=\", [\"\\\"\", [\"b\", \"l\", \"u\", \"e\"], \"\\\"\"], []]]\n      }, \">\", [{\n        \"type\": \"text\",\n        \"value\": [\"T\", \"e\", \"x\", \"t\"]\n      }], \"</\", [\"p\"], \">\"]\n    }, {\n      \"type\": \"text\",\n      \"value\": [\"\\n\", \"\\t\", \"\\t\"]\n    }], \"</\", [], \">\"]\n  }, [\"\\n\", \"\\t\"]], \"EOF\"], 79]);\n});","file":"parser.test.js","skipped":false,"dir":"packages/moon-compiler/test"},{"name":"parse escaped character in regex","suites":[],"updatePoint":{"line":245,"column":38},"line":245,"code":"test(\"parse escaped character in regex\", () => {\n  expect(parseTest(`/\\\\//`)).toEqual([[[[\"/\", [[\"\\\\\", \"/\"]], \"/\"]], \"EOF\"], 4]);\n});","file":"parser.test.js","skipped":false,"dir":"packages/moon-compiler/test"},{"name":"parse backslash character in end of regex","suites":[],"updatePoint":{"line":248,"column":47},"line":248,"code":"test(\"parse backslash character in end of regex\", () => {\n  expect(parseTest(`/\\\\`)).toEqual([[[\"/\", [\"\\\\\"]], \"EOF\"], 2]);\n});","file":"parser.test.js","skipped":false,"dir":"packages/moon-compiler/test"},{"name":"parse escaped newline in regex as division","suites":[],"updatePoint":{"line":251,"column":48},"line":251,"code":"test(\"parse escaped newline in regex as division\", () => {\n  expect(parseTest(`/\\\\\n/`)).toEqual([[[\"/\", [\"\\\\\", \"\\n\"], \"/\"], \"EOF\"], 4]);\n});","file":"parser.test.js","skipped":false,"dir":"packages/moon-compiler/test"},{"name":"backtrack from not matching any character after escape in regex","suites":[],"updatePoint":{"line":255,"column":69},"line":255,"code":"test(\"backtrack from not matching any character after escape in regex\", () => {\n  expect(parseTest(`/test\\\\\\n`)).toEqual([[[\"/\", [\"t\", \"e\", \"s\", \"t\"], [\"\\\\\", \"\\n\"]], \"EOF\"], 7]);\n});","file":"parser.test.js","skipped":false,"dir":"packages/moon-compiler/test"},{"name":"parse escaped delimiters in regex","suites":[],"updatePoint":{"line":258,"column":39},"line":258,"code":"test(\"parse escaped delimiters in regex\", () => {\n  expect(parseTest(`/\\\\\\\\/`)).toEqual([[[[\"/\", [[\"\\\\\", \"\\\\\"]], \"/\"]], \"EOF\"], 4]);\n});","file":"parser.test.js","skipped":false,"dir":"packages/moon-compiler/test"},{"name":"parse error from not matching any character after escape","suites":[],"updatePoint":{"line":261,"column":62},"line":261,"code":"test(\"parse error from not matching any character after escape\", () => {\n  expect(parseTest(`\"\\\\`)).toEqual({\n    \"expected\": \"any\",\n    \"index\": 2\n  });\n});","file":"parser.test.js","skipped":false,"dir":"packages/moon-compiler/test"},{"name":"parse error from invalid view","suites":[],"updatePoint":{"line":267,"column":35},"line":267,"code":"test(\"parse error from invalid view\", () => {\n  expect(parseTest(`\n\t\t<div test=\"></div>\n\t`)).toEqual({\n    \"expected\": `\"\"\"`,\n    \"index\": 23\n  });\n});","file":"parser.test.js","skipped":false,"dir":"packages/moon-compiler/test"},{"name":"format surrounding lines","suites":[],"updatePoint":{"line":2,"column":30},"line":2,"code":"test(\"format surrounding lines\", () => {\n  expect(format(`line one\nline 2\nline 3`, 10)).toEqual(`1| line one\n2| line 2\n |  ^\n3| line 3`);\n});","file":"util.test.js","skipped":false,"dir":"packages/moon-compiler/test"},{"name":"format large line numbers","suites":[],"updatePoint":{"line":10,"column":31},"line":10,"code":"test(\"format large line numbers\", () => {\n  expect(format(\"test\\n\".repeat(1000) + `line one\nline 2\nline 3`, 5 * 1000 + 10)).toEqual(`1001| line one\n1002| line 2\n    |  ^\n1003| line 3`);\n});","file":"util.test.js","skipped":false,"dir":"packages/moon-compiler/test"},{"name":"successful http request","suites":[],"updatePoint":{"line":29,"column":29},"line":29,"code":"test(\"successful http request\", () => {\n  let run = false;\n  error = false;\n  m.http = {\n    method: \"GET\",\n    responseType: \"text\",\n    url: \"https://example.com\",\n    headers: {\n      test: \"moon request\",\n      foo: \"bar\",\n      date: \"Fri, 25 Jun 04 00:00:00 +0000\"\n    },\n    body: \"Moon Test Request\",\n    onLoad: http => {\n      run = true;\n      expect(setRequestHeader).toBeCalledWith(\"test\", \"moon request\");\n      expect(setRequestHeader).toBeCalledWith(\"foo\", \"bar\");\n      expect(setRequestHeader).toBeCalledWith(\"date\", \"Fri, 25 Jun 04 00:00:00 +0000\");\n      expect(open).toBeCalledWith(\"GET\", \"https://example.com\");\n      expect(send).toBeCalledWith(\"Moon Test Request\");\n      expect(http).toEqual({\n        status: 200,\n        headers: {\n          \"content-length\": \"1084\",\n          \"date\": \"Fri, 25 Jun 04 00:00:00 +0000\",\n          \"test\": \"moon\"\n        },\n        body: \"Moon Test\"\n      });\n    }\n  };\n  expect(run).toEqual(true);\n  setRequestHeader.mockClear();\n  open.mockClear();\n  send.mockClear();\n});","file":"http.test.js","skipped":false,"dir":"packages/moon/test"},{"name":"failing http request","suites":[],"updatePoint":{"line":65,"column":26},"line":65,"code":"test(\"failing http request\", () => {\n  let run = false;\n  error = true;\n  m.http = {\n    method: \"GET\",\n    responseType: \"text\",\n    url: \"https://example.com\",\n    headers: {\n      test: \"moon request\",\n      foo: \"bar\",\n      date: \"Fri, 25 Jun 04 00:00:00 +0000\"\n    },\n    body: \"Moon Test Request\",\n    onError: http => {\n      run = true;\n      expect(setRequestHeader).toBeCalledWith(\"test\", \"moon request\");\n      expect(setRequestHeader).toBeCalledWith(\"foo\", \"bar\");\n      expect(setRequestHeader).toBeCalledWith(\"date\", \"Fri, 25 Jun 04 00:00:00 +0000\");\n      expect(open).toBeCalledWith(\"GET\", \"https://example.com\");\n      expect(send).toBeCalledWith(\"Moon Test Request\");\n      expect(http).toBeUndefined();\n    }\n  };\n  expect(run).toEqual(true);\n  setRequestHeader.mockClear();\n  open.mockClear();\n  send.mockClear();\n});","file":"http.test.js","skipped":false,"dir":"packages/moon/test"},{"name":"default http request","suites":[],"updatePoint":{"line":93,"column":26},"line":93,"code":"test(\"default http request\", () => {\n  error = false;\n  m.http = {\n    url: \"https://example.com\"\n  };\n  expect(setRequestHeader).not.toBeCalled();\n  expect(open).toBeCalledWith(\"GET\", \"https://example.com\");\n  expect(send).toBeCalledWith(null);\n  setRequestHeader.mockClear();\n  open.mockClear();\n  send.mockClear();\n});","file":"http.test.js","skipped":false,"dir":"packages/moon/test"},{"name":"default http request with error","suites":[],"updatePoint":{"line":105,"column":37},"line":105,"code":"test(\"default http request with error\", () => {\n  error = true;\n  m.http = {\n    url: \"https://example.com\"\n  };\n  expect(setRequestHeader).not.toBeCalled();\n  expect(open).toBeCalledWith(\"GET\", \"https://example.com\");\n  expect(send).toBeCalledWith(null);\n  setRequestHeader.mockClear();\n  open.mockClear();\n  send.mockClear();\n});","file":"http.test.js","skipped":false,"dir":"packages/moon/test"},{"name":"multiple http requests","suites":[],"updatePoint":{"line":117,"column":28},"line":117,"code":"test(\"multiple http requests\", () => {\n  let run = [false, false, false];\n  error = false;\n  m.http = {\n    url: \"https://example.com/1\",\n    onLoad: http => {\n      run[0] = true;\n      expect(setRequestHeader).not.toBeCalled();\n      expect(open).toBeCalledWith(\"GET\", \"https://example.com/1\");\n      expect(send).toBeCalledWith(null);\n      expect(http).toEqual({\n        status: 200,\n        headers: {\n          \"content-length\": \"1084\",\n          \"date\": \"Fri, 25 Jun 04 00:00:00 +0000\",\n          \"test\": \"moon\"\n        },\n        body: \"Moon Test\"\n      });\n      setRequestHeader.mockClear();\n      open.mockClear();\n      send.mockClear();\n    }\n  };\n  m.http = {\n    url: \"https://example.com/2\",\n    onLoad: http => {\n      run[1] = true;\n      expect(setRequestHeader).not.toBeCalled();\n      expect(open).toBeCalledWith(\"GET\", \"https://example.com/2\");\n      expect(send).toBeCalledWith(null);\n      expect(http).toEqual({\n        status: 200,\n        headers: {\n          \"content-length\": \"1084\",\n          \"date\": \"Fri, 25 Jun 04 00:00:00 +0000\",\n          \"test\": \"moon\"\n        },\n        body: \"Moon Test\"\n      });\n      setRequestHeader.mockClear();\n      open.mockClear();\n      send.mockClear();\n    }\n  };\n  m.http = {\n    url: \"https://example.com/3\",\n    onLoad: http => {\n      run[2] = true;\n      expect(setRequestHeader).not.toBeCalled();\n      expect(open).toBeCalledWith(\"GET\", \"https://example.com/3\");\n      expect(send).toBeCalledWith(null);\n      expect(http).toEqual({\n        status: 200,\n        headers: {\n          \"content-length\": \"1084\",\n          \"date\": \"Fri, 25 Jun 04 00:00:00 +0000\",\n          \"test\": \"moon\"\n        },\n        body: \"Moon Test\"\n      });\n      setRequestHeader.mockClear();\n      open.mockClear();\n      send.mockClear();\n    }\n  };\n  expect(run).toEqual([true, true, true]);\n  setRequestHeader.mockClear();\n  open.mockClear();\n  send.mockClear();\n});","file":"http.test.js","skipped":false,"dir":"packages/moon/test"},{"name":"sets storage initially","suites":[],"updatePoint":{"line":6,"column":28},"line":6,"code":"test(\"sets storage initially\", () => {\n  m.storage.foo = \"bar\";\n  m.storage.moon = \"titan\";\n  expect(localStorage).toEqual(m.storage);\n});","file":"storage.test.js","skipped":false,"dir":"packages/moon/test"},{"name":"updates storage as needed","suites":[],"updatePoint":{"line":11,"column":31},"line":11,"code":"test(\"updates storage as needed\", () => {\n  m.storage.foo = \"bar\";\n  m.storage.moon = \"titan\";\n  expect(localStorage).toEqual(m.storage);\n  m.storage.foo = \"bar\";\n  m.storage.moon = \"europa\";\n  expect(localStorage).toEqual(m.storage);\n});","file":"storage.test.js","skipped":false,"dir":"packages/moon/test"},{"name":"removes storage as needed","suites":[],"updatePoint":{"line":19,"column":31},"line":19,"code":"test(\"removes storage as needed\", () => {\n  delete m.storage.foo;\n  expect(localStorage).toEqual(m.storage);\n});","file":"storage.test.js","skipped":false,"dir":"packages/moon/test"},{"name":"sets whole storage","suites":[],"updatePoint":{"line":23,"column":24},"line":23,"code":"test(\"sets whole storage\", () => {\n  m.storage = {};\n  expect(localStorage).toEqual(m.storage);\n  m.storage = {\n    foo: \"bar\",\n    moon: \"titan\"\n  };\n  expect(localStorage).toEqual(m.storage);\n});","file":"storage.test.js","skipped":false,"dir":"packages/moon/test"},{"name":"updates whole storage","suites":[],"updatePoint":{"line":32,"column":27},"line":32,"code":"test(\"updates whole storage\", () => {\n  m.storage = {\n    moon: \"titan\",\n    bar: \"baz\"\n  };\n  expect(localStorage).toEqual(m.storage);\n});","file":"storage.test.js","skipped":false,"dir":"packages/moon/test"},{"name":"deletes whole storage","suites":[],"updatePoint":{"line":39,"column":27},"line":39,"code":"test(\"deletes whole storage\", () => {\n  m.storage = {};\n  expect(localStorage).toEqual(m.storage);\n});","file":"storage.test.js","skipped":false,"dir":"packages/moon/test"},{"name":"time as input","suites":[],"updatePoint":{"line":3,"column":19},"line":3,"code":"test(\"time as input\", () => {\n  window.Date.now = jest.fn(() => 7);\n  expect(m.time).toEqual(7);\n  expect(Date.now).toBeCalled();\n});","file":"time.test.js","skipped":false,"dir":"packages/moon/test"},{"name":"setting timeouts","suites":[],"updatePoint":{"line":8,"column":22},"line":8,"code":"test(\"setting timeouts\", () => {\n  window.setTimeout = jest.fn((fn, delay) => {});\n  const input = [7, () => {}];\n  m.time = input;\n  expect(setTimeout).toBeCalledWith(input[1], input[0] * 1000);\n});","file":"time.test.js","skipped":false,"dir":"packages/moon/test"}]}