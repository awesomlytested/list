{"repo":"testomatio/reporter","url":"https://github.com/testomatio/reporter","branch":"master","configs":[{"package":"@testomatio/reporter","lang":"js","dir":"tests","framework":"mocha","pattern":"**/*[._-]{test,spec,unittest,unit}.{ts,js}"}],"tests":[{"name":"POST :: /api/reporter :: should create a report if api_key has been provided","suites":["positive tests"],"updatePoint":{"line":99,"column":84},"line":99,"code":"    it('POST :: /api/reporter :: should create a report if api_key has been provided', () => {\n      const [req] = server.requests({\n        method: 'POST',\n        path: '/api/reporter'\n      });\n      const expectedResult = {\n        api_key: TESTOMATIO\n      };\n      assert.isObject(req.body);\n      assert.deepEqual(req.body, expectedResult);\n    });","file":"adapter/jest/index.test.js","skipped":false,"dir":"tests"},{"name":"PUT :: /api/reporter/:runId :: should update run status","suites":["positive tests"],"updatePoint":{"line":110,"column":63},"line":110,"code":"    it('PUT :: /api/reporter/:runId :: should update run status', () => {\n      const [req] = server.requests({\n        method: 'PUT',\n        path: `/api/reporter/${RUN_ID}`\n      });\n      const expectedResult = {\n        api_key: TESTOMATIO,\n        status_event: 'fail',\n        status: 'failed'\n      };\n      assert.isObject(req.body);\n      assert.deepEqual(req.body, expectedResult);\n    });","file":"adapter/jest/index.test.js","skipped":false,"dir":"tests"},{"name":"POST :: /api/reporter/:runId/testrun :: should add a new test to run instance","suites":["positive tests"],"updatePoint":{"line":123,"column":85},"line":123,"code":"    it('POST :: /api/reporter/:runId/testrun :: should add a new test to run instance', () => {\n      const reqs = server.requests({\n        method: 'POST',\n        path: `/api/reporter/${RUN_ID}/testrun`\n      });\n      const expectedBodyKeys = ['api_key', 'files', 'steps', 'status', 'stack', 'example', 'title', 'message', 'run_time', 'artifacts'];\n\n      for (const req of reqs) {\n        assert.isObject(req.body);\n        assert.deepEqual(Object.keys(req.body), expectedBodyKeys);\n        assert.strictEqual(req.body.api_key, TESTOMATIO);\n        assert.isString(req.body.status);\n        assert.isString(req.body.title);\n        assert.isNumber(req.body.run_time);\n      }\n    });","file":"adapter/jest/index.test.js","skipped":false,"dir":"tests"},{"name":"should ignore reporter if api_key has not been provided","suites":["negative tests"],"updatePoint":{"line":150,"column":63},"line":150,"code":"    it('should ignore reporter if api_key has not been provided', () => {\n      const requests = server.requests();\n      assert.isArray(requests);\n      assert.isEmpty(requests);\n    });","file":"adapter/jest/index.test.js","skipped":false,"dir":"tests"}]}