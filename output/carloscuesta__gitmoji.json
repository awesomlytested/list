{
    "repo": "carloscuesta/gitmoji",
    "url": "https://github.com/carloscuesta/gitmoji",
    "branch": "master",
    "configs": [
        {
            "package": "gitmojis",
            "lang": "js",
            "dir": "src/__tests__",
            "framework": "jest",
            "pattern": "**/*[._-]{test,spec,unittest,unit}.{ts,js}"
        }
    ],
    "tests": [
        {
            "name": "should render the page",
            "suites": [
                "Pages",
                "App"
            ],
            "updatePoint": {
                "line": 26,
                "column": 30
            },
            "line": 26,
            "code": "    it('should render the page', () => {\n      const wrapper = renderer.create( /*#__PURE__*/React.createElement(App, stubs.appProps));\n      expect(wrapper).toMatchSnapshot();\n    });",
            "file": "pages.spec.js",
            "skipped": false,
            "dir": "src/__tests__"
        },
        {
            "name": "should render the page",
            "suites": [
                "Pages",
                "Index"
            ],
            "updatePoint": {
                "line": 32,
                "column": 30
            },
            "line": 32,
            "code": "    it('should render the page', () => {\n      const wrapper = renderer.create( /*#__PURE__*/React.createElement(Index, null));\n      expect(wrapper).toMatchSnapshot();\n    });",
            "file": "pages.spec.js",
            "skipped": false,
            "dir": "src/__tests__"
        },
        {
            "name": "should render the page",
            "suites": [
                "Pages",
                "About"
            ],
            "updatePoint": {
                "line": 38,
                "column": 30
            },
            "line": 38,
            "code": "    it('should render the page', () => {\n      const wrapper = renderer.create( /*#__PURE__*/React.createElement(About, null));\n      expect(wrapper).toMatchSnapshot();\n    });",
            "file": "pages.spec.js",
            "skipped": false,
            "dir": "src/__tests__"
        },
        {
            "name": "should fetch contributos from GitHub",
            "suites": [
                "Pages",
                "Contributors"
            ],
            "updatePoint": {
                "line": 47,
                "column": 44
            },
            "line": 47,
            "code": "    it('should fetch contributos from GitHub', async () => {\n      fetch.mockResponseOnce(JSON.stringify(stubs.contributorsMock));\n      const props = await getContributorsStaticProps();\n      expect(props).toEqual({\n        props: {\n          contributors: stubs.contributors\n        },\n        revalidate: 3600 * 3\n      });\n    });",
            "file": "pages.spec.js",
            "skipped": false,
            "dir": "src/__tests__"
        },
        {
            "name": "should render the page",
            "suites": [
                "Pages",
                "Contributors"
            ],
            "updatePoint": {
                "line": 57,
                "column": 30
            },
            "line": 57,
            "code": "    it('should render the page', () => {\n      const wrapper = renderer.create( /*#__PURE__*/React.createElement(Contributors, {\n        contributors: stubs.contributors\n      }));\n      expect(wrapper).toMatchSnapshot();\n    });",
            "file": "pages.spec.js",
            "skipped": false,
            "dir": "src/__tests__"
        },
        {
            "name": "should render the page",
            "suites": [
                "Pages",
                "Related tools"
            ],
            "updatePoint": {
                "line": 65,
                "column": 30
            },
            "line": 65,
            "code": "    it('should render the page', () => {\n      const wrapper = renderer.create( /*#__PURE__*/React.createElement(RelatedTools, null));\n      expect(wrapper).toMatchSnapshot();\n    });",
            "file": "pages.spec.js",
            "skipped": false,
            "dir": "src/__tests__"
        },
        {
            "name": "should set response status to 200 and gitmojis as body json",
            "suites": [
                "Pages",
                "Api",
                "gitmojis endpoint",
                "when request method is GET"
            ],
            "updatePoint": {
                "line": 73,
                "column": 71
            },
            "line": 73,
            "code": "        it('should set response status to 200 and gitmojis as body json', () => {\n          const request = stubs.request('GET');\n          const response = stubs.response();\n          GitmojisApi(request, response);\n          expect(response.status).toHaveBeenCalledWith(200);\n          expect(response.json).toHaveBeenCalledWith(gitmojisData);\n        });",
            "file": "pages.spec.js",
            "skipped": false,
            "dir": "src/__tests__"
        },
        {
            "name": "should setHeader, status 405 and end the request",
            "suites": [
                "Pages",
                "Api",
                "gitmojis endpoint",
                "when request method is not GET"
            ],
            "updatePoint": {
                "line": 82,
                "column": 60
            },
            "line": 82,
            "code": "        it('should setHeader, status 405 and end the request', () => {\n          const request = stubs.request('POST');\n          const response = stubs.response();\n          GitmojisApi(request, response);\n          expect(response.setHeader).toHaveBeenCalledWith('Allow', ['GET']);\n          expect(response.status).toHaveBeenCalledWith(405);\n          expect(response.json).toHaveBeenCalledWith({\n            error: `Error: method POST not allowed`\n          });\n        });",
            "file": "pages.spec.js",
            "skipped": false,
            "dir": "src/__tests__"
        }
    ],
    "badge": "carloscuesta__gitmoji.svg"
}