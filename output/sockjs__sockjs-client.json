{"repo":"sockjs/sockjs-client","url":"https://github.com/sockjs/sockjs-client","branch":"main","configs":[{"package":"sockjs-client","lang":"js","dir":"tests","framework":"mocha","pattern":"**/*.{js,ts}"}],"tests":[{"name":"large message (batch)","suites":[],"updatePoint":{"line":50,"column":27,"index":1459},"line":50,"code":"  it('large message (batch)', batchFactory(transport, messages, url));","file":"lib/batch-tests.js","skipped":false,"dir":"tests"},{"name":"large download","suites":[],"updatePoint":{"line":96,"column":20,"index":2638},"line":96,"code":"  it('large download', amplifyFactory(transport, messages, url));","file":"lib/batch-tests.js","skipped":false,"dir":"tests"},{"name":"echo basic","suites":[],"updatePoint":{"line":55,"column":16,"index":1413},"line":55,"code":"  it('echo basic', echoFactory(transport, messages, url + '/echo'));","file":"lib/echo-tests.js","skipped":false,"dir":"tests"},{"name":"echo querystring","suites":[],"updatePoint":{"line":59,"column":22,"index":1588},"line":59,"code":"  it('echo querystring', echoFactory(transport, messages, url + '/echo?testqs=1'));","file":"lib/echo-tests.js","skipped":false,"dir":"tests"},{"name":"echo rich","suites":[],"updatePoint":{"line":66,"column":15,"index":1824},"line":66,"code":"  it('echo rich', echoFactory(transport, messages, url + '/echo'));","file":"lib/echo-tests.js","skipped":false,"dir":"tests"},{"name":"unicode","suites":[],"updatePoint":{"line":72,"column":13,"index":7640},"line":72,"code":"  it('unicode', echoFactory(transport, messages, url + '/echo'));","file":"lib/echo-tests.js","skipped":false,"dir":"tests"},{"name":"special chars","suites":[],"updatePoint":{"line":76,"column":19,"index":8121},"line":76,"code":"  it('special chars', echoFactory(transport, messages, url + '/echo'));","file":"lib/echo-tests.js","skipped":false,"dir":"tests"},{"name":"large message (ping-pong)","suites":[],"updatePoint":{"line":82,"column":31,"index":8557},"line":82,"code":"  it('large message (ping-pong)', echoFactory(transport, messages, url + '/echo'));","file":"lib/echo-tests.js","skipped":false,"dir":"tests"},{"name":"echo utf encoding 0x00-0xFF","suites":[],"updatePoint":{"line":89,"column":33,"index":8831},"line":89,"code":"  it('echo utf encoding 0x00-0xFF', echoFactory(transport, [chars.join('')], url + '/echo'));","file":"lib/echo-tests.js","skipped":false,"dir":"tests"},{"name":"echo utf encoding killer message","suites":[],"updatePoint":{"line":105,"column":38,"index":10442},"line":105,"code":"  it('echo utf encoding killer message', echoFactory(transport, [message.join('')], url + '/echo'));","file":"lib/echo-tests.js","skipped":false,"dir":"tests"},{"name":"echo from child [unsupported]","suites":[],"updatePoint":{"line":109,"column":37,"index":10653},"line":109,"code":"    it('echo from child [unsupported]');","file":"lib/echo-tests.js","skipped":false,"dir":"tests"},{"name":"echo from child","suites":[],"updatePoint":{"line":112,"column":21,"index":10694},"line":112,"code":"  it('echo from child', function (done) {\n    this.timeout(10000);\n    var test = this.runnable();\n    var title = test.fullTitle();\n    debug('start', title);\n    var hook = testUtils.createIframe('/sockjs-test/sockjs-in-parent.html');\n    var sjs = testUtils.newSockJs(url + '/echo', transport);\n    var code = 'hook.sjs.send(\"a\"); hook.onsend();';\n    var hookReady,\n      sockJsReady,\n      timeout,\n      i = 0;\n    hook.open = function () {\n      debug('hook open');\n      hook.iobj.loaded();\n      i++;\n      hookReady = true;\n      hook.sjs = sjs;\n      if (sockJsReady) {\n        hook.callback(code);\n      }\n    };\n    hook.onsend = function () {\n      debug('hook onsend');\n      timeout = setTimeout(function () {\n        done(new Error('echo timeout'));\n        sjs.close();\n        debug('end', title);\n      }, 1000);\n    };\n    sjs.onopen = function () {\n      debug('hook sjs open');\n      hook.iobj.loaded();\n      i++;\n      sockJsReady = true;\n      if (hookReady) {\n        hook.callback(code);\n      }\n    };\n    sjs.onmessage = function (e) {\n      debug('hook sjs message, e.data');\n      clearTimeout(timeout);\n      try {\n        expect(e.data).to.equal('a');\n        expect(i).to.equal(2);\n      } catch (err) {\n        done(err);\n      } finally {\n        hook.iobj.cleanup();\n        hook.del();\n        sjs.close();\n      }\n    };\n    sjs.onclose = function (e) {\n      if (test.timedOut || test.duration) {\n        return;\n      }\n      try {\n        expect(e.code).to.equal(1000);\n      } catch (err) {\n        done(e);\n        return;\n      }\n      debug('hook sjs close');\n      done();\n      debug('end', title);\n    };\n  });","file":"lib/echo-tests.js","skipped":false,"dir":"tests"},{"name":"invalid url 404","suites":["End to End","Connection Errors"],"updatePoint":{"line":12,"column":23,"index":422},"line":12,"code":"    it('invalid url 404', function (done) {\n      var test = this.runnable();\n      var sjs = testUtils.newSockJs('/invalid_url', 'jsonp-polling');\n      expect(sjs).to.be.ok();\n      sjs.onopen = sjs.onmessage = function () {\n        done(new Error('Open/Message event should not fire for an invalid url'));\n        sjs.close();\n      };\n      sjs.onclose = function (e) {\n        if (test.timedOut || test.duration) {\n          return;\n        }\n        try {\n          expect(e.code).to.equal(1002);\n          expect(e.reason).to.equal('Cannot connect to server');\n          expect(e.wasClean).to.equal(false);\n        } catch (err) {\n          done(err);\n          return;\n        }\n        done();\n      };\n    });","file":"lib/end-to-end.js","skipped":false,"dir":"tests"},{"name":"invalid url port [unsupported]","suites":["End to End","Connection Errors"],"updatePoint":{"line":39,"column":40,"index":1343},"line":39,"code":"      it('invalid url port [unsupported]');","file":"lib/end-to-end.js","skipped":false,"dir":"tests"},{"name":"invalid url port","suites":["End to End","Connection Errors"],"updatePoint":{"line":42,"column":26,"index":1400},"line":42,"code":"      it('invalid url port', function (done) {\n        var test = this.runnable();\n        var badUrl;\n        if (global.location) {\n          badUrl = global.location.protocol + '//' + global.location.hostname + ':1079';\n        } else {\n          badUrl = 'http://localhost:1079';\n        }\n        var sjs = testUtils.newSockJs(badUrl, 'jsonp-polling');\n        expect(sjs).to.be.ok();\n        sjs.onopen = sjs.onmessage = function () {\n          done(new Error('Open/Message event should not fire for an invalid port'));\n          sjs.close();\n        };\n        sjs.onclose = function (e) {\n          if (test.timedOut || test.duration) {\n            return;\n          }\n          try {\n            expect(e.code).to.equal(1002);\n            expect(e.reason).to.equal('Cannot connect to server');\n            expect(e.wasClean).to.equal(false);\n          } catch (err) {\n            done(err);\n            return;\n          }\n          done();\n        };\n      });","file":"lib/end-to-end.js","skipped":false,"dir":"tests"},{"name":"disabled websocket test","suites":["End to End","Connection Errors"],"updatePoint":{"line":72,"column":31,"index":2382},"line":72,"code":"    it('disabled websocket test', function (done) {\n      var test = this.runnable();\n      var sjs = testUtils.newSockJs('/disabled_websocket_echo', 'websocket');\n      expect(sjs).to.be.ok();\n      sjs.onopen = sjs.onmessage = function () {\n        done(new Error('Open/Message event should not fire for disabled websockets'));\n        sjs.close();\n      };\n      sjs.onclose = function (e) {\n        if (test.timedOut || test.duration) {\n          return;\n        }\n        try {\n          expect(e.code).to.equal(2000);\n          expect(e.reason).to.equal('All transports failed');\n          expect(e.wasClean).to.equal(false);\n        } catch (err) {\n          done(err);\n          return;\n        }\n        done();\n      };\n    });","file":"lib/end-to-end.js","skipped":false,"dir":"tests"},{"name":"close on close","suites":["End to End","Connection Errors"],"updatePoint":{"line":95,"column":22,"index":3111},"line":95,"code":"    it('close on close', function (done) {\n      var test = this.runnable();\n      var sjs = testUtils.newSockJs('/close');\n      expect(sjs).to.be.ok();\n      sjs.onopen = function () {\n        expect(true).to.be.ok();\n      };\n      sjs.onmessage = function () {\n        done(new Error('Message should not be emitted'));\n        sjs.close();\n      };\n      sjs.onclose = function (e) {\n        if (test.timedOut || test.duration) {\n          return;\n        }\n        try {\n          expect(e.code).to.equal(3000);\n          expect(e.reason).to.equal('Go away!');\n          expect(e.wasClean).to.equal(true);\n        } catch (err) {\n          done(err);\n          return;\n        }\n        sjs.onclose = function () {\n          done(new Error());\n        };\n        sjs.close();\n        setTimeout(function () {\n          done();\n        }, 10);\n      };\n    });","file":"lib/end-to-end.js","skipped":false,"dir":"tests"},{"name":"[unsupported]","suites":["iframe"],"updatePoint":{"line":38,"column":21,"index":954},"line":38,"code":"    it('[unsupported]');","file":"lib/iframe.js","skipped":false,"dir":"tests"},{"name":"onunload [unsupported]","suites":["iframe"],"updatePoint":{"line":42,"column":30,"index":1031},"line":42,"code":"    it('onunload [unsupported]');","file":"lib/iframe.js","skipped":false,"dir":"tests"},{"name":"onunload","suites":["iframe"],"updatePoint":{"line":44,"column":16,"index":1062},"line":44,"code":"    it('onunload', function (done) {\n      this.timeout(5000);\n      onunloadTest(\"function attachEvent(event, listener) {\" + \"    if (typeof window.addEventListener !== 'undefined') {\" + \"        window.addEventListener(event, listener, false);\" + \"    } else {\" + \"        document.attachEvent('on' + event, listener);\" + \"        window.attachEvent('on' + event, listener);\" + \"    }\" + \"}\" + \"attachEvent('load', function(){\" + \"    hook.load();\" + \"});\" + \"var w = 0;\" + \"var run = function(){\" + \"    if(w === 0) {\" + \"        w = 1;\" + \"        hook.unload();\" + \"    }\" + \"};\" + \"attachEvent('beforeunload', run);\" + \"attachEvent('unload', run);\", done);\n    });","file":"lib/iframe.js","skipped":false,"dir":"tests"},{"name":"onmessage","suites":["iframe"],"updatePoint":{"line":49,"column":15,"index":1736},"line":49,"code":"  it('onmessage', function (done) {\n    var hook = testUtils.createIframe('/sockjs-test/iframe.html');\n    var i = 0;\n    hook.open = function () {\n      i++;\n      hook.callback(\"\" + \"function attachEvent(event, listener) {\" + \"    if (typeof window.addEventListener !== 'undefined') {\" + \"        window.addEventListener(event, listener, false);\" + \"    } else {\" + \"        document.attachEvent('on' + event, listener);\" + \"        window.attachEvent('on' + event, listener);\" + \"    }\" + \"}\" + \"attachEvent('message', function(e) {\" + \"    var b = e.data;\" + \"    parent.postMessage(window_id + ' ' + 'e', '*');\" + \"});\" + \"parent.postMessage(window_id + ' ' + 's', '*');\");\n    };\n    eventUtils.attachEvent('message', function (e) {\n      var msgParts = e.data.split(' '),\n        windowId = msgParts[0],\n        data = msgParts[1];\n      if (windowId === hook.id) {\n        switch (data) {\n          case 's':\n            hook.iobj.loaded();\n            i++;\n            hook.iobj.post(hook.id + ' ' + 's', testUtils.getSameOriginUrl());\n            break;\n          case 'e':\n            try {\n              expect(i).to.equal(2);\n            } catch (err) {\n              done(err);\n              hook.iobj.cleanup();\n              hook.del();\n              return;\n            }\n            hook.iobj.cleanup();\n            hook.del();\n            done();\n            break;\n        }\n      }\n    });\n  });","file":"lib/iframe.js","skipped":false,"dir":"tests"},{"name":"[unsupported]","suites":["Transports"],"updatePoint":{"line":94,"column":25,"index":3442},"line":94,"code":"        it('[unsupported]');","file":"lib/iframe.js","skipped":false,"dir":"tests"},{"name":"should throw SecurityError for an insecure url from a secure page","suites":["SockJS","Constructor","WebSocket specification step #2"],"updatePoint":{"line":16,"column":75,"index":501},"line":16,"code":"      it('should throw SecurityError for an insecure url from a secure page', function () {\n        expect(function () {\n          sjs('http://localhost');\n        }).to.throwException(function (e) {\n          expect(e).to.be.a(Error);\n          expect(e.message).to.contain('SecurityError');\n        });\n      });","file":"lib/main-node.js","skipped":false,"dir":"tests"},{"name":"should NOT throw SecurityError for 127.0.0.1/8 url from a secure page","suites":["SockJS","Constructor","WebSocket specification step #2"],"updatePoint":{"line":26,"column":79,"index":891},"line":26,"code":"      it('should NOT throw SecurityError for 127.0.0.1/8 url from a secure page', function () {\n        expect(function () {\n          sjs('http://127.0.0.1');\n        }).to.not.throwException();\n      });","file":"lib/main-node.js","skipped":false,"dir":"tests"},{"name":"should NOT throw SecurityError for ::1 url from a secure page","suites":["SockJS","Constructor","WebSocket specification step #2"],"updatePoint":{"line":31,"column":71,"index":1089},"line":31,"code":"      it('should NOT throw SecurityError for ::1 url from a secure page', function () {\n        expect(function () {\n          sjs('http://[::1]');\n        }).to.not.throwException();\n      });","file":"lib/main-node.js","skipped":false,"dir":"tests"},{"name":"should throw SyntaxError for an invalid url","suites":["SockJS","Constructor","WebSocket specification step #2"],"updatePoint":{"line":36,"column":53,"index":1265},"line":36,"code":"      it('should throw SyntaxError for an invalid url', function () {\n        expect(function () {\n          sjs('//localhost');\n        }).to.throwException(function (e) {\n          expect(e).to.be.a(SyntaxError);\n        });\n      });","file":"lib/main-node.js","skipped":false,"dir":"tests"},{"name":"should throw SyntaxError for an empty url - #8","suites":["SockJS","Constructor","WebSocket specification step #2"],"updatePoint":{"line":43,"column":56,"index":1505},"line":43,"code":"      it('should throw SyntaxError for an empty url - #8', function () {\n        expect(function () {\n          sjs('');\n        }).to.throwException(function (e) {\n          expect(e).to.be.a(SyntaxError);\n        });\n      });","file":"lib/main-node.js","skipped":false,"dir":"tests"},{"name":"should support construction without new","suites":["SockJS","Constructor"],"updatePoint":{"line":8,"column":47,"index":253},"line":8,"code":"    it('should support construction without new', function () {\n      var s = SockJS('http://localhost');\n      expect(s).to.be.a(SockJS);\n      s.close();\n    });","file":"lib/main.js","skipped":false,"dir":"tests"},{"name":"create a valid WebSocket object","suites":["SockJS","Constructor"],"updatePoint":{"line":13,"column":39,"index":409},"line":13,"code":"    it('create a valid WebSocket object', function () {\n      var s = new SockJS('http://localhost');\n      expect(s).to.have.property('url', 'http://localhost');\n      expect(s).to.have.property('readyState', SockJS.CONNECTING);\n      expect(s).to.have.property('extensions', '');\n      expect(s).to.have.property('protocol', '');\n      s.close();\n    });","file":"lib/main.js","skipped":false,"dir":"tests"},{"name":"should not remove basic authentication credentials (1/2)","suites":["SockJS","Constructor"],"updatePoint":{"line":21,"column":64,"index":791},"line":21,"code":"    it('should not remove basic authentication credentials (1/2)', function () {\n      var s = new SockJS('http://user@localhost');\n      expect(s).to.have.property('url', 'http://user@localhost');\n      s.close();\n    });","file":"lib/main.js","skipped":false,"dir":"tests"},{"name":"should not remove basic authentication credentials (2/2)","suites":["SockJS","Constructor"],"updatePoint":{"line":26,"column":64,"index":1014},"line":26,"code":"    it('should not remove basic authentication credentials (2/2)', function () {\n      var s = new SockJS('http://user:password@localhost');\n      expect(s).to.have.property('url', 'http://user:password@localhost');\n      s.close();\n    });","file":"lib/main.js","skipped":false,"dir":"tests"},{"name":"should throw TypeError for a null url","suites":["SockJS","Constructor","WebSocket specification step #1"],"updatePoint":{"line":32,"column":47,"index":1300},"line":32,"code":"      it('should throw TypeError for a null url', function () {\n        expect(function () {\n          new SockJS();\n        }).to.throwException(function (e) {\n          expect(e).to.be.a(TypeError);\n        });\n      });","file":"lib/main.js","skipped":false,"dir":"tests"},{"name":"should throw SyntaxError when the url contains a fragment","suites":["SockJS","Constructor","WebSocket specification step #1"],"updatePoint":{"line":39,"column":67,"index":1543},"line":39,"code":"      it('should throw SyntaxError when the url contains a fragment', function () {\n        expect(function () {\n          new SockJS('http://localhost/#test');\n        }).to.throwException(function (e) {\n          expect(e).to.be.a(SyntaxError);\n        });\n      });","file":"lib/main.js","skipped":false,"dir":"tests"},{"name":"should throw SyntaxError for an invalid protocol","suites":["SockJS","Constructor","WebSocket specification step #1"],"updatePoint":{"line":46,"column":58,"index":1803},"line":46,"code":"      it('should throw SyntaxError for an invalid protocol', function () {\n        expect(function () {\n          new SockJS('ftp://localhost');\n        }).to.throwException(function (e) {\n          expect(e).to.be.a(SyntaxError);\n        });\n      });","file":"lib/main.js","skipped":false,"dir":"tests"},{"name":"should throw SyntaxError for duplicated protocols","suites":["SockJS","Constructor","WebSocket specification step #5"],"updatePoint":{"line":55,"column":59,"index":2127},"line":55,"code":"      it('should throw SyntaxError for duplicated protocols', function () {\n        expect(function () {\n          new SockJS('http://localhost', ['test', 'test']);\n        }).to.throwException(function (e) {\n          expect(e).to.be.a(SyntaxError);\n        });\n      });","file":"lib/main.js","skipped":false,"dir":"tests"},{"name":"should generate 8-character-long session ids by default","suites":["SockJS","Constructor","WebSocket specification step #5"],"updatePoint":{"line":63,"column":63,"index":2412},"line":63,"code":"    it('should generate 8-character-long session ids by default', function () {\n      var s = SockJS('http://localhost');\n      expect(s._generateSessionId().length).to.be(8);\n      s.close();\n    });","file":"lib/main.js","skipped":false,"dir":"tests"},{"name":"should generate N-character-long session ids","suites":["SockJS","Constructor","WebSocket specification step #5"],"updatePoint":{"line":68,"column":52,"index":2602},"line":68,"code":"    it('should generate N-character-long session ids', function () {\n      for (var i = 1; i <= 100; i++) {\n        var s = SockJS('http://localhost', null, {\n          sessionId: i\n        });\n        expect(s._generateSessionId().length).to.be(i);\n        s.close();\n      }\n    });","file":"lib/main.js","skipped":false,"dir":"tests"},{"name":"should generate sessionIds using the custom generator function","suites":["SockJS","Constructor","WebSocket specification step #5"],"updatePoint":{"line":77,"column":70,"index":2905},"line":77,"code":"    it('should generate sessionIds using the custom generator function', function () {\n      var f = function () {\n        return 'this_is_not_random';\n      };\n      var s = SockJS('http://localhost', null, {\n        sessionId: f\n      });\n      expect(s._generateSessionId).to.be(f);\n      s.close();\n    });","file":"lib/main.js","skipped":false,"dir":"tests"},{"name":"should throw TypeError if sessionId is neither a number nor a function","suites":["SockJS","Constructor","WebSocket specification step #5"],"updatePoint":{"line":87,"column":78,"index":3224},"line":87,"code":"    it('should throw TypeError if sessionId is neither a number nor a function', function () {\n      expect(function () {\n        new SockJS('http://localhost', null, {\n          sessionId: 'this is wrong'\n        });\n      }).to.throwException(function (e) {\n        expect(e).to.be.a(TypeError);\n      });\n    });","file":"lib/main.js","skipped":false,"dir":"tests"},{"name":"receives data","suites":["Receivers","jsonp"],"updatePoint":{"line":22,"column":21,"index":859},"line":22,"code":"    it('receives data', function (done) {\n      var test = this.runnable();\n      JsonpReceiver.prototype._createScript = function () {\n        var self = this;\n        setTimeout(function () {\n          global[utils.WPrefix][self.id]('datadata');\n        }, 5);\n      };\n      var jpr = new JsonpReceiver('test');\n      jpr.on('close', function (code, reason) {\n        if (test.timedOut || test.duration) {\n          return;\n        }\n        try {\n          expect(reason).to.equal('network');\n        } catch (e) {\n          done(e);\n          return;\n        }\n        done();\n      });\n      jpr.on('message', function (msg) {\n        try {\n          expect(msg).to.equal('datadata');\n        } catch (e) {\n          done(e);\n          jpr.abort();\n          return;\n        }\n      });\n    });","file":"lib/receivers.js","skipped":false,"dir":"tests"},{"name":"will timeout","suites":["Receivers","jsonp"],"updatePoint":{"line":53,"column":20,"index":1659},"line":53,"code":"    it('will timeout', function (done) {\n      this.timeout(500);\n      var test = this.runnable();\n      JsonpReceiver.prototype._createScript = function () {\n        var self = this;\n        setTimeout(function () {\n          if (global[utils.WPrefix][self.id]) {\n            global[utils.WPrefix][self.id]('datadata');\n          }\n        }, 400);\n      };\n      var jpr = new JsonpReceiver('test');\n      jpr.on('close', function (code, reason) {\n        if (test.timedOut || test.duration) {\n          return;\n        }\n        try {\n          expect(reason).to.contain('timeout');\n        } catch (e) {\n          done(e);\n          return;\n        }\n        done();\n      });\n      jpr.on('message', function () {\n        done(new Error('No message should be sent'));\n        jpr.abort();\n      });\n    });","file":"lib/receivers.js","skipped":false,"dir":"tests"},{"name":"aborts without sending a message","suites":["Receivers","jsonp"],"updatePoint":{"line":82,"column":40,"index":2492},"line":82,"code":"    it('aborts without sending a message', function (done) {\n      var test = this.runnable();\n      JsonpReceiver.prototype._createScript = function () {\n        var self = this;\n        setTimeout(function () {\n          if (global[utils.WPrefix][self.id]) {\n            global[utils.WPrefix][self.id]('datadata');\n          }\n        }, 200);\n      };\n      var jpr = new JsonpReceiver('test');\n      jpr.on('close', function (code, reason) {\n        if (test.timedOut || test.duration) {\n          return;\n        }\n        try {\n          expect(reason).to.contain('aborted');\n        } catch (e) {\n          done(e);\n          return;\n        }\n        done();\n      });\n      jpr.on('message', function () {\n        done(new Error('No message should be sent'));\n        jpr.abort();\n      });\n      jpr.abort();\n    });","file":"lib/receivers.js","skipped":false,"dir":"tests"},{"name":"will not report error if onerror triggered right before onreadystatechange (IE9)","suites":["Receivers","jsonp"],"updatePoint":{"line":111,"column":88,"index":3367},"line":111,"code":"    it('will not report error if onerror triggered right before onreadystatechange (IE9)', function (done) {\n      JsonpReceiver.scriptErrorTimeout = 300;\n      var test = this.runnable();\n      JsonpReceiver.prototype._createScript = function () {\n        var self = this;\n        // simulate a normal JSONP response\n        setTimeout(function () {\n          self.loadedOkay = true;\n          global[utils.WPrefix][self.id]('datadata');\n        }, 200);\n      };\n      var jpr = new JsonpReceiver('test');\n      jpr.on('close', function (code, reason) {\n        if (test.timedOut || test.duration) {\n          return;\n        }\n        try {\n          expect(reason).to.equal('network');\n        } catch (e) {\n          done(e);\n          return;\n        }\n        done();\n      });\n      jpr.on('message', function (msg) {\n        try {\n          expect(msg).to.equal('datadata');\n        } catch (e) {\n          done(e);\n          jpr.abort();\n        }\n      });\n\n      // simulate script error\n      jpr._scriptError();\n    });","file":"lib/receivers.js","skipped":false,"dir":"tests"},{"name":"will not report error if onerror triggered right after onreadystatechange (IE9)","suites":["Receivers","jsonp"],"updatePoint":{"line":147,"column":87,"index":4400},"line":147,"code":"    it('will not report error if onerror triggered right after onreadystatechange (IE9)', function (done) {\n      JsonpReceiver.scriptErrorTimeout = 100;\n      var test = this.runnable();\n      JsonpReceiver.prototype._createScript = function () {\n        var self = this;\n        // simulate a normal JSONP response\n        setTimeout(function () {\n          self.loadedOkay = true;\n          global[utils.WPrefix][self.id]('datadata');\n        }, 100);\n      };\n      var jpr = new JsonpReceiver('test');\n      jpr.on('close', function (code, reason) {\n        if (test.timedOut || test.duration) {\n          return;\n        }\n        try {\n          expect(reason).to.equal('network');\n        } catch (e) {\n          done(e);\n          return;\n        }\n        done();\n      });\n      jpr.on('message', function (msg) {\n        try {\n          expect(msg).to.equal('datadata');\n        } catch (e) {\n          done(e);\n          jpr.abort();\n        }\n      });\n\n      // simulate script error\n      setTimeout(function () {\n        jpr._scriptError();\n      }, 200);\n    });","file":"lib/receivers.js","skipped":false,"dir":"tests"},{"name":"emits multiple messages for multi-line response","suites":["Receivers","xhr"],"updatePoint":{"line":195,"column":55,"index":5673},"line":195,"code":"    it('emits multiple messages for multi-line response', function (done) {\n      var test = this.runnable();\n      var xhr = new XhrReceiver('test', XhrFake);\n      var i = 0,\n        responses = ['test', 'multiple', 'lines', '{}'];\n      xhr.on('message', function (msg) {\n        try {\n          expect(msg).to.equal(responses[i]);\n        } catch (e) {\n          done(e);\n          xhr.abort();\n          return;\n        }\n        i++;\n      });\n      xhr.on('close', function (code, reason) {\n        if (test.timedOut || test.duration) {\n          return;\n        }\n        try {\n          expect(reason).to.equal('network');\n        } catch (e) {\n          done(e);\n          return;\n        }\n        done();\n      });\n      xhr._chunkHandler(200, 'test\\nmultiple\\nlines');\n    });","file":"lib/receivers.js","skipped":false,"dir":"tests"},{"name":"emits no messages for an empty string response","suites":["Receivers","xhr"],"updatePoint":{"line":224,"column":54,"index":6462},"line":224,"code":"    it('emits no messages for an empty string response', function (done) {\n      var test = this.runnable();\n      var xhr = new XhrReceiver('test', XhrFake);\n      var i = 0,\n        responses = ['{}'];\n      xhr.on('message', function (msg) {\n        try {\n          expect(i).to.be.lessThan(responses.length);\n          expect(msg).to.equal(responses[i]);\n        } catch (e) {\n          done(e);\n          xhr.abort();\n          return;\n        }\n        i++;\n      });\n      xhr.on('close', function (code, reason) {\n        if (test.timedOut || test.duration) {\n          return;\n        }\n        try {\n          expect(reason).to.equal('network');\n        } catch (e) {\n          done(e);\n          return;\n        }\n        done();\n      });\n      xhr._chunkHandler(200, '');\n    });","file":"lib/receivers.js","skipped":false,"dir":"tests"},{"name":"aborts without sending a message","suites":["Receivers","xhr"],"updatePoint":{"line":254,"column":40,"index":7241},"line":254,"code":"    it('aborts without sending a message', function (done) {\n      var test = this.runnable();\n      var xhr = new XhrReceiver('test', XhrFake);\n      xhr.on('message', function () {\n        done(new Error());\n        xhr.abort();\n      });\n      xhr.on('close', function (code, reason) {\n        if (test.timedOut || test.duration) {\n          return;\n        }\n        try {\n          expect(reason).to.equal('user');\n        } catch (e) {\n          done(e);\n          return;\n        }\n        done();\n      });\n      xhr.abort();\n    });","file":"lib/receivers.js","skipped":false,"dir":"tests"},{"name":"simple","suites":[],"updatePoint":{"line":9,"column":12,"index":302},"line":9,"code":"  it('simple', function (done) {\n    var x = new Obj('GET', testUtils.getSameOriginUrl() + '/simple.txt', null);\n    x.on('finish', function (status, text) {\n      try {\n        expect(text.length).to.equal(2051);\n        expect(text.slice(-2)).to.equal('b\\n');\n      } catch (e) {\n        done(e);\n        return;\n      }\n      done();\n    });\n  });","file":"lib/senders.js","skipped":false,"dir":"tests"},{"name":"streaming [unsupported]","suites":[],"updatePoint":{"line":25,"column":31,"index":730},"line":25,"code":"    it('streaming [unsupported]');","file":"lib/senders.js","skipped":false,"dir":"tests"},{"name":"streaming","suites":[],"updatePoint":{"line":28,"column":15,"index":765},"line":28,"code":"  it('streaming', function (done) {\n    var test = this.runnable();\n    var x = new Obj('GET', testUtils.getSameOriginUrl() + '/streaming.txt', null);\n    var i = 0;\n    x.on('chunk', function (status /*, text*/) {\n      try {\n        expect(status).to.equal(200);\n      } catch (e) {\n        done(e);\n        x.abort();\n        return;\n      }\n      i++;\n      // 2051 because of transparent proxies\n      //expect([2049, 2051]).to.contain(text.length);\n    });\n\n    x.on('finish', function (status, text) {\n      if (test.timedOut || test.duration) {\n        return;\n      }\n      try {\n        expect(i).to.be.greaterThan(0);\n        expect(status).to.equal(200);\n        expect(text.slice(-4)).to.equal('a\\nb\\n');\n      } catch (e) {\n        done(e);\n        return;\n      }\n      done();\n    });\n  });","file":"lib/senders.js","skipped":false,"dir":"tests"},{"name":"[unsupported]","suites":["Senders","xdr"],"updatePoint":{"line":111,"column":23,"index":3162},"line":111,"code":"      it('[unsupported]');","file":"lib/senders.js","skipped":false,"dir":"tests"},{"name":"user close","suites":[],"updatePoint":{"line":11,"column":16,"index":347},"line":11,"code":"  it('user close', function (done) {\n    var test = this.runnable();\n    this.timeout(10000);\n    var sjs = new SockJS(url + '/echo', null, {\n      transports: transport\n    });\n    expect(sjs).to.be.ok();\n    var counter = 0;\n    sjs.onopen = function () {\n      counter++;\n      try {\n        expect(counter).to.equal(1);\n        sjs.close(3000, 'User message');\n        expect(counter).to.equal(1);\n      } catch (e) {\n        done(e);\n      }\n    };\n    sjs.onmessage = function () {\n      done(new Error());\n      sjs.close();\n      counter++;\n    };\n    sjs.onclose = function (e) {\n      if (test.timedOut || test.duration) {\n        return;\n      }\n      counter++;\n      try {\n        expect(e.wasClean).to.equal(true);\n        expect(counter).to.equal(2);\n      } catch (err) {\n        done(err);\n        return;\n      }\n      done();\n    };\n  });","file":"lib/transports.js","skipped":false,"dir":"tests"},{"name":"server close","suites":[],"updatePoint":{"line":51,"column":18,"index":1248},"line":51,"code":"  it('server close', function (done) {\n    var test = this.runnable();\n    this.timeout(10000);\n    var sjs = new SockJS(url + '/close', null, {\n      transports: transport\n    });\n    expect(sjs).to.be.ok();\n    var i = 0;\n    sjs.onopen = function () {\n      i++;\n    };\n    sjs.onmessage = function () {\n      done(new Error());\n      sjs.close();\n    };\n    sjs.onclose = function (e) {\n      if (test.timedOut || test.duration) {\n        return;\n      }\n      try {\n        expect(i).to.equal(1);\n        expect(e.code).to.equal(3000);\n        expect(e.reason).to.equal('Go away!');\n        expect(e.wasClean).to.equal(true);\n      } catch (err) {\n        done(err);\n        return;\n      }\n      done();\n    };\n  });","file":"lib/transports.js","skipped":false,"dir":"tests"},{"name":"has a valid interface","suites":["Transports"],"updatePoint":{"line":100,"column":31,"index":2650},"line":100,"code":"      it('has a valid interface', function () {\n        expect(Trans).to.be.ok();\n        expect(Trans).to.have.property('transportName');\n        expect(Trans.transportName.length).to.be.greaterThan(0);\n        expect(Trans).to.have.property('roundTrips');\n        expect(Trans.roundTrips).to.be.a('number');\n        expect(Trans).to.have.property('enabled');\n        expect(Trans.enabled).to.be.a('function');\n        expect(Trans.prototype).to.have.property('send');\n        expect(Trans.prototype.send).to.be.a('function');\n        expect(Trans.prototype).to.have.property('close');\n        expect(Trans.prototype.close).to.be.a('function');\n\n        //var t = new Trans('http://localhost');\n        //expect(t).to.be.an(EventEmitter);\n        // TODO tests for event emitting\n      });","file":"lib/transports.js","skipped":false,"dir":"tests"},{"name":"[unsupported]","suites":["Transports"],"updatePoint":{"line":124,"column":25,"index":3583},"line":124,"code":"        it('[unsupported]');","file":"lib/transports.js","skipped":false,"dir":"tests"},{"name":"should generate unique outputs","suites":["utils","random","string"],"updatePoint":{"line":8,"column":40,"index":247},"line":8,"code":"      it('should generate unique outputs', function () {\n        expect(random.string(8)).not.to.equal(random.string(8));\n      });","file":"lib/utils.js","skipped":false,"dir":"tests"},{"name":"should have the correct length","suites":["utils","random","string"],"updatePoint":{"line":11,"column":40,"index":379},"line":11,"code":"      it('should have the correct length', function () {\n        var lengths = [1, 2, 3, 128];\n        lengths.forEach(function (len) {\n          expect(random.string(len).length).to.equal(len);\n        });\n      });","file":"lib/utils.js","skipped":false,"dir":"tests"},{"name":"should have the correct length based on the max","suites":["utils","random","numberString"],"updatePoint":{"line":19,"column":57,"index":664},"line":19,"code":"      it('should have the correct length based on the max', function () {\n        expect(random.numberString(10).length).to.equal(1);\n        expect(random.numberString(100).length).to.equal(2);\n        expect(random.numberString(1000).length).to.equal(3);\n        expect(random.numberString(10000).length).to.equal(4);\n        expect(random.numberString(100000).length).to.equal(5);\n      });","file":"lib/utils.js","skipped":false,"dir":"tests"},{"name":"getOrigin","suites":["utils","url"],"updatePoint":{"line":30,"column":17,"index":1115},"line":30,"code":"    it('getOrigin', function () {\n      expect(urlUtils.getOrigin('http://a.b/')).to.equal('http://a.b:80');\n      expect(urlUtils.getOrigin('http://a.b/c')).to.equal('http://a.b:80');\n      expect(urlUtils.getOrigin('http://a.b:123/c')).to.equal('http://a.b:123');\n      expect(urlUtils.getOrigin('https://a.b/')).to.equal('https://a.b:443');\n      expect(urlUtils.getOrigin('file://a.b/')).to.equal(null);\n    });","file":"lib/utils.js","skipped":false,"dir":"tests"},{"name":"isOriginEqual","suites":["utils","url"],"updatePoint":{"line":37,"column":21,"index":1535},"line":37,"code":"    it('isOriginEqual', function () {\n      expect(urlUtils.isOriginEqual('http://localhost', 'http://localhost/')).to.be.ok();\n      expect(urlUtils.isOriginEqual('http://localhost', 'http://localhost/abc')).to.be.ok();\n      expect(urlUtils.isOriginEqual('http://localhost/', 'http://localhost')).to.be.ok();\n      expect(urlUtils.isOriginEqual('http://localhost', 'http://localhost')).to.be.ok();\n      expect(urlUtils.isOriginEqual('http://localhost', 'http://localhost:8080')).to.not.be.ok();\n      expect(urlUtils.isOriginEqual('http://localhost:8080', 'http://localhost')).to.not.be.ok();\n      expect(urlUtils.isOriginEqual('http://localhost:8080', 'http://localhost:8080/')).to.be.ok();\n      expect(urlUtils.isOriginEqual('http://127.0.0.1:80/', 'http://127.0.0.1:80/a')).to.be.ok();\n      expect(urlUtils.isOriginEqual('http://127.0.0.1:80', 'http://127.0.0.1:80/a')).to.be.ok();\n      expect(urlUtils.isOriginEqual('http://localhost', 'http://localhost:80')).to.be.ok();\n      expect(urlUtils.isOriginEqual('http://127.0.0.1/', 'http://127.0.0.1:80/a')).to.be.ok();\n      expect(urlUtils.isOriginEqual('http://127.0.0.1:9', 'http://127.0.0.1:9999')).to.not.be.ok();\n      expect(urlUtils.isOriginEqual('http://127.0.0.1:99', 'http://127.0.0.1:9999')).to.not.be.ok();\n      expect(urlUtils.isOriginEqual('http://127.0.0.1:999', 'http://127.0.0.1:9999')).to.not.be.ok();\n      expect(urlUtils.isOriginEqual('http://127.0.0.1:9999', 'http://127.0.0.1:9999')).to.be.ok();\n      expect(urlUtils.isOriginEqual('http://127.0.0.1:99999', 'http://127.0.0.1:9999')).to.not.be.ok();\n    });","file":"lib/utils.js","skipped":false,"dir":"tests"},{"name":"isSchemeEqual","suites":["utils","url"],"updatePoint":{"line":55,"column":21,"index":3127},"line":55,"code":"    it('isSchemeEqual', function () {\n      expect(urlUtils.isSchemeEqual('http://localhost', 'http://localhost/')).to.be.ok();\n      expect(urlUtils.isSchemeEqual('http://localhost', 'https://localhost/')).to.not.be.ok();\n      expect(urlUtils.isSchemeEqual('http://localhost', 'file://localhost/')).to.not.be.ok();\n    });","file":"lib/utils.js","skipped":false,"dir":"tests"},{"name":"handles empty string","suites":["utils","escape","quote"],"updatePoint":{"line":64,"column":30,"index":3590},"line":64,"code":"      it('handles empty string', function () {\n        expect(escape.quote('')).to.equal('\"\"');\n      });","file":"lib/utils.js","skipped":false,"dir":"tests"},{"name":"handles non-empty string","suites":["utils","escape","quote"],"updatePoint":{"line":67,"column":34,"index":3700},"line":67,"code":"      it('handles non-empty string', function () {\n        expect(escape.quote('a')).to.equal('\"a\"');\n      });","file":"lib/utils.js","skipped":false,"dir":"tests"},{"name":"handles tab and newline","suites":["utils","escape","quote"],"updatePoint":{"line":70,"column":33,"index":3811},"line":70,"code":"      it('handles tab and newline', function () {\n        expect(['\"\\\\t\"', '\"\\\\u0009\"']).to.contain(escape.quote('\\t'));\n        expect(['\"\\\\n\"', '\"\\\\u000a\"']).to.contain(escape.quote('\\n'));\n      });","file":"lib/utils.js","skipped":false,"dir":"tests"},{"name":"handles unicode","suites":["utils","escape","quote"],"updatePoint":{"line":74,"column":25,"index":4005},"line":74,"code":"      it('handles unicode', function () {\n        expect(escape.quote('\\x00\\udfff\\ufffe\\uffff')).to.equal('\"\\\\u0000\\\\udfff\\\\ufffe\\\\uffff\"');\n        expect(escape.quote('\\ud85c\\udff7\\ud800\\ud8ff')).to.equal('\"\\\\ud85c\\\\udff7\\\\ud800\\\\ud8ff\"');\n        expect(escape.quote('\\u2000\\u2001\\u0300\\u0301')).to.equal('\"\\\\u2000\\\\u2001\\\\u0300\\\\u0301\"');\n      });","file":"lib/utils.js","skipped":false,"dir":"tests"},{"name":"handles all 64K characters round-trip","suites":["utils","escape","quote"],"line":79,"code":"      it.skip('handles all 64K characters round-trip', function () {","file":"lib/utils.js","skipped":true,"dir":"tests"},{"name":"extend","suites":["utils","object"],"updatePoint":{"line":91,"column":14,"index":4753},"line":91,"code":"    it('extend', function () {\n      var a, b;\n      expect(objectUtils.extend({}, {})).to.eql({});\n      a = {\n        a: 1\n      };\n      expect(objectUtils.extend(a, {})).to.eql(a);\n      expect(objectUtils.extend(a, {\n        b: 1\n      })).to.eql(a);\n      a = {\n        a: 1\n      };\n      b = {\n        b: 2\n      };\n      expect(objectUtils.extend(a, b)).to.eql({\n        a: 1,\n        b: 2\n      });\n      expect(a).to.eql({\n        a: 1,\n        b: 2\n      });\n      expect(b).to.eql({\n        b: 2\n      });\n    });","file":"lib/utils.js","skipped":false,"dir":"tests"}]}