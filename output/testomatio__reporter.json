{"repo":"testomatio/reporter","url":"https://github.com/testomatio/reporter","branch":"master","configs":[{"package":"@testomatio/reporter","lang":"js","dir":"tests","framework":"mocha","pattern":"**/*[._-]{test,spec,unittest,unit}.{ts,js}"}],"tests":[{"name":"Test addition","suites":["Suite 1"],"updatePoint":{"line":3,"column":19,"index":78},"line":3,"code":"  it('Test addition', () => {\n    expect(1 + 2).toBe(4);\n  });","file":"adapter/examples/jasmine/index.test.js","skipped":false,"dir":"tests"},{"name":"Test some more addition","suites":["Suite 1"],"updatePoint":{"line":6,"column":29,"index":151},"line":6,"code":"  it('Test some more addition', () => {\n    expect(1 + 2).toBe(3);\n  });","file":"adapter/examples/jasmine/index.test.js","skipped":false,"dir":"tests"},{"name":"Sample mocha test","suites":["Sample mocha suite"],"updatePoint":{"line":4,"column":23,"index":98},"line":4,"code":"  it('Sample mocha test', () => {\n    assert.equal([1, 2, 3].indexOf(4), 0);\n  });","file":"adapter/examples/mocha/index.test.js","skipped":false,"dir":"tests"},{"name":"Sample mocha test 2","suites":["Sample mocha suite 2"],"updatePoint":{"line":9,"column":25,"index":228},"line":9,"code":"  it('Sample mocha test 2', () => {\n    assert.equal(1, 1);\n  });","file":"adapter/examples/mocha/index.test.js","skipped":false,"dir":"tests"},{"name":"POST :: /api/reporter :: should create a report if api_key has been provided","suites":["Adapters","positive tests"],"updatePoint":{"line":81,"column":88,"index":2326},"line":81,"code":"        it('POST :: /api/reporter :: should create a report if api_key has been provided', () => {\n          const [req] = server.requests({\n            method: 'POST',\n            path: '/api/reporter'\n          });\n          const expectedResult = {\n            api_key: TESTOMATIO\n          };\n          assert.isObject(req.body);\n          assert.deepEqual(req.body, expectedResult);\n        });","file":"adapter/index.test.js","skipped":false,"dir":"tests"},{"name":"PUT :: /api/reporter/:runId :: should update run status","suites":["Adapters","positive tests"],"updatePoint":{"line":92,"column":67,"index":2705},"line":92,"code":"        it('PUT :: /api/reporter/:runId :: should update run status', () => {\n          const [req] = server.requests({\n            method: 'PUT',\n            path: `/api/reporter/${RUN_ID}`\n          });\n          const expectedResult = {\n            api_key: TESTOMATIO,\n            status_event: 'fail',\n            status: 'failed'\n          };\n          assert.isObject(req.body);\n          assert.deepEqual(req.body, expectedResult);\n        });","file":"adapter/index.test.js","skipped":false,"dir":"tests"},{"name":"POST :: /api/reporter/:runId/testrun :: should add a new test to run instance","suites":["Adapters","positive tests"],"updatePoint":{"line":105,"column":89,"index":3179},"line":105,"code":"        it('POST :: /api/reporter/:runId/testrun :: should add a new test to run instance', () => {\n          const reqs = server.requests({\n            method: 'POST',\n            path: `/api/reporter/${RUN_ID}/testrun`\n          });\n          const expectedRequiredBodyKeys = ['api_key', 'files', // 'steps',\n          'status', 'stack', 'example', 'title', 'message', 'run_time', 'artifacts'];\n\n          for (const req of reqs) {\n            assert.isObject(req.body);\n            assert.includeMembers(Object.keys(req.body), expectedRequiredBodyKeys);\n            assert.strictEqual(req.body.api_key, TESTOMATIO);\n            assert.isString(req.body.status);\n            assert.isString(req.body.title);\n            assert.isNumber(req.body.run_time);\n          }\n        });","file":"adapter/index.test.js","skipped":false,"dir":"tests"},{"name":"should ignore reporter if api_key has not been provided","suites":["Adapters","negative tests"],"updatePoint":{"line":132,"column":67,"index":4212},"line":132,"code":"        it('should ignore reporter if api_key has not been provided', () => {\n          const requests = server.requests();\n          assert.isArray(requests);\n          assert.isEmpty(requests);\n        });","file":"adapter/index.test.js","skipped":false,"dir":"tests"}]}