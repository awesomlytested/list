{"repo":"jaredhanson/passport","url":"https://github.com/jaredhanson/passport","branch":"master","configs":[{"package":"passport","lang":"js","dir":"test","framework":"mocha","pattern":"**/*[._-]{test,spec,unittest,unit}.{ts,js}"}],"tests":[{"name":"should call authenticate","suites":["Authenticator","#framework","with an authenticate function used for authorization"],"updatePoint":{"line":19,"column":34,"index":676},"line":19,"code":"      it('should call authenticate', function () {\n        expect(rv).to.equal('authenticate(): foo account');\n      });","file":"authenticator.framework.test.js","skipped":false,"dir":"test"},{"name":"should call authorize","suites":["Authenticator","#framework","with an authorize function used for authorization"],"updatePoint":{"line":41,"column":31,"index":1458},"line":41,"code":"      it('should call authorize', function () {\n        expect(rv).to.equal('authorize(): foo account');\n      });","file":"authenticator.framework.test.js","skipped":false,"dir":"test"},{"name":"should have correct arity","suites":["Authenticator","#initialize"],"updatePoint":{"line":8,"column":33,"index":260},"line":8,"code":"    it('should have correct arity', function () {\n      var passport = new Authenticator();\n      expect(passport.initialize).to.have.length(1);\n    });","file":"authenticator.middleware.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["Authenticator","#initialize","handling a request"],"updatePoint":{"line":24,"column":26,"index":783},"line":24,"code":"      it('should not error', function () {\n        expect(error).to.be.undefined;\n      });","file":"authenticator.middleware.test.js","skipped":false,"dir":"test"},{"name":"should not set user property on request","suites":["Authenticator","#initialize","handling a request"],"updatePoint":{"line":27,"column":49,"index":898},"line":27,"code":"      it('should not set user property on request', function () {\n        expect(request._userProperty).to.be.undefined;\n      });","file":"authenticator.middleware.test.js","skipped":false,"dir":"test"},{"name":"should not initialize namespace within session","suites":["Authenticator","#initialize","handling a request"],"updatePoint":{"line":30,"column":56,"index":1036},"line":30,"code":"      it('should not initialize namespace within session', function () {\n        expect(request.session.passport).to.be.undefined;\n      });","file":"authenticator.middleware.test.js","skipped":false,"dir":"test"},{"name":"should expose authenticator on internal request property","suites":["Authenticator","#initialize","handling a request"],"updatePoint":{"line":33,"column":66,"index":1187},"line":33,"code":"      it('should expose authenticator on internal request property', function () {\n        expect(request._passport).to.be.an('object');\n        expect(request._passport.instance).to.be.an.instanceOf(Authenticator);\n        expect(request._passport.instance).to.equal(passport);\n        expect(request._passport.instance._sm).to.be.an('object');\n        expect(request._passport.instance._userProperty).to.equal('user');\n      });","file":"authenticator.middleware.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["Authenticator","#initialize","handling a request with custom user property"],"updatePoint":{"line":55,"column":26,"index":2038},"line":55,"code":"      it('should not error', function () {\n        expect(error).to.be.undefined;\n      });","file":"authenticator.middleware.test.js","skipped":false,"dir":"test"},{"name":"should set user property on request","suites":["Authenticator","#initialize","handling a request with custom user property"],"updatePoint":{"line":58,"column":45,"index":2149},"line":58,"code":"      it('should set user property on request', function () {\n        expect(request._userProperty).to.equal('currentUser');\n      });","file":"authenticator.middleware.test.js","skipped":false,"dir":"test"},{"name":"should not initialize namespace within session","suites":["Authenticator","#initialize","handling a request with custom user property"],"updatePoint":{"line":61,"column":56,"index":2295},"line":61,"code":"      it('should not initialize namespace within session', function () {\n        expect(request.session.passport).to.be.undefined;\n      });","file":"authenticator.middleware.test.js","skipped":false,"dir":"test"},{"name":"should expose authenticator on internal request property","suites":["Authenticator","#initialize","handling a request with custom user property"],"updatePoint":{"line":64,"column":66,"index":2446},"line":64,"code":"      it('should expose authenticator on internal request property', function () {\n        expect(request._passport).to.be.an('object');\n        expect(request._passport.instance).to.be.an.instanceOf(Authenticator);\n        expect(request._passport.instance).to.equal(passport);\n        expect(request._passport.instance._sm).to.be.an('object');\n        expect(request._passport.instance._userProperty).to.equal('currentUser');\n      });","file":"authenticator.middleware.test.js","skipped":false,"dir":"test"},{"name":"should have correct arity","suites":["Authenticator","#authenticate"],"updatePoint":{"line":74,"column":33,"index":2907},"line":74,"code":"    it('should have correct arity', function () {\n      var passport = new Authenticator();\n      expect(passport.authenticate).to.have.length(3);\n    });","file":"authenticator.middleware.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["Authenticator","#authenticate","handling a request"],"updatePoint":{"line":102,"column":26,"index":3788},"line":102,"code":"      it('should not error', function () {\n        expect(error).to.be.undefined;\n      });","file":"authenticator.middleware.test.js","skipped":false,"dir":"test"},{"name":"should set user","suites":["Authenticator","#authenticate","handling a request"],"updatePoint":{"line":105,"column":25,"index":3879},"line":105,"code":"      it('should set user', function () {\n        expect(request.user).to.be.an('object');\n        expect(request.user.id).to.equal('1');\n        expect(request.user.username).to.equal('jaredhanson');\n      });","file":"authenticator.middleware.test.js","skipped":false,"dir":"test"},{"name":"should set authInfo","suites":["Authenticator","#authenticate","handling a request"],"updatePoint":{"line":110,"column":29,"index":4094},"line":110,"code":"      it('should set authInfo', function () {\n        expect(request.authInfo).to.be.an('object');\n        expect(Object.keys(request.authInfo)).to.have.length(0);\n      });","file":"authenticator.middleware.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["Authenticator","#authenticate","handling a request with instantiated strategy"],"updatePoint":{"line":138,"column":26,"index":4991},"line":138,"code":"      it('should not error', function () {\n        expect(error).to.be.undefined;\n      });","file":"authenticator.middleware.test.js","skipped":false,"dir":"test"},{"name":"should set user","suites":["Authenticator","#authenticate","handling a request with instantiated strategy"],"updatePoint":{"line":141,"column":25,"index":5082},"line":141,"code":"      it('should set user', function () {\n        expect(request.user).to.be.an('object');\n        expect(request.user.id).to.equal('1');\n        expect(request.user.username).to.equal('jaredhanson');\n      });","file":"authenticator.middleware.test.js","skipped":false,"dir":"test"},{"name":"should set authInfo","suites":["Authenticator","#authenticate","handling a request with instantiated strategy"],"updatePoint":{"line":146,"column":29,"index":5297},"line":146,"code":"      it('should set authInfo', function () {\n        expect(request.authInfo).to.be.an('object');\n        expect(Object.keys(request.authInfo)).to.have.length(0);\n      });","file":"authenticator.middleware.test.js","skipped":false,"dir":"test"},{"name":"should have correct arity","suites":["Authenticator","#authorize"],"updatePoint":{"line":153,"column":33,"index":5528},"line":153,"code":"    it('should have correct arity', function () {\n      var passport = new Authenticator();\n      expect(passport.authorize).to.have.length(3);\n    });","file":"authenticator.middleware.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["Authenticator","#authorize","handling a request"],"updatePoint":{"line":181,"column":26,"index":6403},"line":181,"code":"      it('should not error', function () {\n        expect(error).to.be.undefined;\n      });","file":"authenticator.middleware.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["Authenticator","#authorize","handling a request"],"updatePoint":{"line":184,"column":29,"index":6498},"line":184,"code":"      it('should not set user', function () {\n        expect(request.user).to.be.undefined;\n      });","file":"authenticator.middleware.test.js","skipped":false,"dir":"test"},{"name":"should set account","suites":["Authenticator","#authorize","handling a request"],"updatePoint":{"line":187,"column":28,"index":6599},"line":187,"code":"      it('should set account', function () {\n        expect(request.account).to.be.an('object');\n        expect(request.account.id).to.equal('1');\n        expect(request.account.username).to.equal('jaredhanson');\n      });","file":"authenticator.middleware.test.js","skipped":false,"dir":"test"},{"name":"should not set authInfo","suites":["Authenticator","#authorize","handling a request"],"updatePoint":{"line":192,"column":33,"index":6827},"line":192,"code":"      it('should not set authInfo', function () {\n        expect(request.authInfo).to.be.undefined;\n      });","file":"authenticator.middleware.test.js","skipped":false,"dir":"test"},{"name":"should have correct arity","suites":["Authenticator","#session"],"updatePoint":{"line":198,"column":33,"index":6988},"line":198,"code":"    it('should have correct arity', function () {\n      var passport = new Authenticator();\n      expect(passport.session).to.have.length(1);\n    });","file":"authenticator.middleware.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["Authenticator","#session","handling a request"],"updatePoint":{"line":223,"column":26,"index":7782},"line":223,"code":"      it('should not error', function () {\n        expect(error).to.be.undefined;\n      });","file":"authenticator.middleware.test.js","skipped":false,"dir":"test"},{"name":"should set user","suites":["Authenticator","#session","handling a request"],"updatePoint":{"line":226,"column":25,"index":7873},"line":226,"code":"      it('should set user', function () {\n        expect(request.user).to.be.an('object');\n        expect(request.user.id).to.equal('123456');\n      });","file":"authenticator.middleware.test.js","skipped":false,"dir":"test"},{"name":"should maintain session","suites":["Authenticator","#session","handling a request"],"updatePoint":{"line":230,"column":33,"index":8034},"line":230,"code":"      it('should maintain session', function () {\n        expect(request.session['passport']).to.be.an('object');\n        expect(request.session['passport'].user).to.equal('123456');\n      });","file":"authenticator.middleware.test.js","skipped":false,"dir":"test"},{"name":"should register strategy","suites":["Authenticator","#use","with instance name"],"updatePoint":{"line":14,"column":34,"index":502},"line":14,"code":"      it('should register strategy', function () {\n        expect(authenticator._strategies['default']).to.be.an('object');\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should register strategy","suites":["Authenticator","#use","with registered name"],"updatePoint":{"line":23,"column":34,"index":878},"line":23,"code":"      it('should register strategy', function () {\n        expect(authenticator._strategies['foo']).to.be.an('object');\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should register strategy","suites":["Authenticator","#use","with registered name overridding instance name"],"updatePoint":{"line":34,"column":34,"index":1314},"line":34,"code":"      it('should register strategy', function () {\n        expect(authenticator._strategies['bar']).to.be.an('object');\n        expect(authenticator._strategies['default']).to.be.undefined;\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should throw if lacking a name","suites":["Authenticator","#use","with registered name overridding instance name"],"updatePoint":{"line":39,"column":38,"index":1526},"line":39,"code":"    it('should throw if lacking a name', function () {\n      function Strategy() {}\n      Strategy.prototype.authenticate = function (req) {};\n      expect(function () {\n        var authenticator = new Authenticator();\n        authenticator.use(new Strategy());\n      }).to.throw(Error, 'Authentication strategies must have a name');\n    });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should unregister strategy","suites":["Authenticator","#unuse"],"updatePoint":{"line":57,"column":34,"index":2288},"line":57,"code":"    it('should unregister strategy', function () {\n      expect(authenticator._strategies['one']).to.be.undefined;\n      expect(authenticator._strategies['two']).to.be.an('object');\n    });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should error","suites":["Authenticator","#serializeUser","without serializers"],"updatePoint":{"line":76,"column":22,"index":2863},"line":76,"code":"      it('should error', function () {\n        expect(error).to.be.an.instanceOf(Error);\n        expect(error.message).to.equal('Failed to serialize user into session');\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should not serialize user","suites":["Authenticator","#serializeUser","without serializers"],"updatePoint":{"line":80,"column":35,"index":3056},"line":80,"code":"      it('should not serialize user', function () {\n        expect(obj).to.be.undefined;\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["Authenticator","#serializeUser","with one serializer"],"updatePoint":{"line":100,"column":26,"index":3599},"line":100,"code":"      it('should not error', function () {\n        expect(error).to.be.null;\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should serialize user","suites":["Authenticator","#serializeUser","with one serializer"],"updatePoint":{"line":103,"column":31,"index":3691},"line":103,"code":"      it('should serialize user', function () {\n        expect(obj).to.equal('1');\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["Authenticator","#serializeUser","with one serializer that serializes to 0"],"updatePoint":{"line":123,"column":26,"index":4247},"line":123,"code":"      it('should not error', function () {\n        expect(error).to.be.null;\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should serialize user","suites":["Authenticator","#serializeUser","with one serializer that serializes to 0"],"updatePoint":{"line":126,"column":31,"index":4339},"line":126,"code":"      it('should serialize user', function () {\n        expect(obj).to.equal(0);\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should error","suites":["Authenticator","#serializeUser","with one serializer that serializes to false"],"updatePoint":{"line":146,"column":22,"index":4897},"line":146,"code":"      it('should error', function () {\n        expect(error).to.be.an.instanceOf(Error);\n        expect(error.message).to.equal('Failed to serialize user into session');\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should not serialize user","suites":["Authenticator","#serializeUser","with one serializer that serializes to false"],"updatePoint":{"line":150,"column":35,"index":5090},"line":150,"code":"      it('should not serialize user', function () {\n        expect(obj).to.be.undefined;\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should error","suites":["Authenticator","#serializeUser","with one serializer that serializes to null"],"updatePoint":{"line":170,"column":22,"index":5650},"line":170,"code":"      it('should error', function () {\n        expect(error).to.be.an.instanceOf(Error);\n        expect(error.message).to.equal('Failed to serialize user into session');\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should not serialize user","suites":["Authenticator","#serializeUser","with one serializer that serializes to null"],"updatePoint":{"line":174,"column":35,"index":5843},"line":174,"code":"      it('should not serialize user', function () {\n        expect(obj).to.be.undefined;\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should error","suites":["Authenticator","#serializeUser","with one serializer that serializes to undefined"],"updatePoint":{"line":194,"column":22,"index":6413},"line":194,"code":"      it('should error', function () {\n        expect(error).to.be.an.instanceOf(Error);\n        expect(error.message).to.equal('Failed to serialize user into session');\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should not serialize user","suites":["Authenticator","#serializeUser","with one serializer that serializes to undefined"],"updatePoint":{"line":198,"column":35,"index":6606},"line":198,"code":"      it('should not serialize user', function () {\n        expect(obj).to.be.undefined;\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should error","suites":["Authenticator","#serializeUser","with one serializer that encounters an error"],"updatePoint":{"line":218,"column":22,"index":7190},"line":218,"code":"      it('should error', function () {\n        expect(error).to.be.an.instanceOf(Error);\n        expect(error.message).to.equal('something went wrong');\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should not serialize user","suites":["Authenticator","#serializeUser","with one serializer that encounters an error"],"updatePoint":{"line":222,"column":35,"index":7366},"line":222,"code":"      it('should not serialize user', function () {\n        expect(obj).to.be.undefined;\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should error","suites":["Authenticator","#serializeUser","with one serializer that throws an exception"],"updatePoint":{"line":242,"column":22,"index":7959},"line":242,"code":"      it('should error', function () {\n        expect(error).to.be.an.instanceOf(Error);\n        expect(error.message).to.equal('something went horribly wrong');\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should not serialize user","suites":["Authenticator","#serializeUser","with one serializer that throws an exception"],"updatePoint":{"line":246,"column":35,"index":8144},"line":246,"code":"      it('should not serialize user', function () {\n        expect(obj).to.be.undefined;\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["Authenticator","#serializeUser","with three serializers, the first of which passes and the second of which serializes"],"updatePoint":{"line":272,"column":26,"index":8937},"line":272,"code":"      it('should not error', function () {\n        expect(error).to.be.null;\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should serialize user","suites":["Authenticator","#serializeUser","with three serializers, the first of which passes and the second of which serializes"],"updatePoint":{"line":275,"column":31,"index":9029},"line":275,"code":"      it('should serialize user', function () {\n        expect(obj).to.equal('two');\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["Authenticator","#serializeUser","with three serializers, the first of which passes and the second of which does not serialize by no argument"],"updatePoint":{"line":301,"column":26,"index":9838},"line":301,"code":"      it('should not error', function () {\n        expect(error).to.be.null;\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should serialize user","suites":["Authenticator","#serializeUser","with three serializers, the first of which passes and the second of which does not serialize by no argument"],"updatePoint":{"line":304,"column":31,"index":9930},"line":304,"code":"      it('should serialize user', function () {\n        expect(obj).to.equal('three');\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["Authenticator","#serializeUser","with three serializers, the first of which passes and the second of which does not serialize by undefined"],"updatePoint":{"line":330,"column":26,"index":10750},"line":330,"code":"      it('should not error', function () {\n        expect(error).to.be.null;\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should serialize user","suites":["Authenticator","#serializeUser","with three serializers, the first of which passes and the second of which does not serialize by undefined"],"updatePoint":{"line":333,"column":31,"index":10842},"line":333,"code":"      it('should serialize user', function () {\n        expect(obj).to.equal('three');\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["Authenticator","#serializeUser","with one serializer that takes request as argument"],"updatePoint":{"line":359,"column":26,"index":11585},"line":359,"code":"      it('should not error', function () {\n        expect(error).to.be.null;\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should serialize user","suites":["Authenticator","#serializeUser","with one serializer that takes request as argument"],"updatePoint":{"line":362,"column":31,"index":11677},"line":362,"code":"      it('should serialize user', function () {\n        expect(obj).to.equal('1');\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should error","suites":["Authenticator","#deserializeUser","without deserializers"],"updatePoint":{"line":381,"column":22,"index":12174},"line":381,"code":"      it('should error', function () {\n        expect(error).to.be.an.instanceOf(Error);\n        expect(error.message).to.equal('Failed to deserialize user out of session');\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should not deserialize user","suites":["Authenticator","#deserializeUser","without deserializers"],"updatePoint":{"line":385,"column":37,"index":12373},"line":385,"code":"      it('should not deserialize user', function () {\n        expect(user).to.be.undefined;\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["Authenticator","#deserializeUser","with one deserializer"],"updatePoint":{"line":405,"column":26,"index":12929},"line":405,"code":"      it('should not error', function () {\n        expect(error).to.be.null;\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should deserialize user","suites":["Authenticator","#deserializeUser","with one deserializer"],"updatePoint":{"line":408,"column":33,"index":13023},"line":408,"code":"      it('should deserialize user', function () {\n        expect(user).to.equal('jared');\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["Authenticator","#deserializeUser","with one deserializer that deserializes to false"],"updatePoint":{"line":428,"column":26,"index":13601},"line":428,"code":"      it('should not error', function () {\n        expect(error).to.be.null;\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should invalidate session","suites":["Authenticator","#deserializeUser","with one deserializer that deserializes to false"],"updatePoint":{"line":431,"column":35,"index":13697},"line":431,"code":"      it('should invalidate session', function () {\n        expect(user).to.be.false;\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["Authenticator","#deserializeUser","with one deserializer that deserializes to null"],"updatePoint":{"line":451,"column":26,"index":14267},"line":451,"code":"      it('should not error', function () {\n        expect(error).to.be.null;\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should invalidate session","suites":["Authenticator","#deserializeUser","with one deserializer that deserializes to null"],"updatePoint":{"line":454,"column":35,"index":14363},"line":454,"code":"      it('should invalidate session', function () {\n        expect(user).to.be.false;\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should error","suites":["Authenticator","#deserializeUser","with one deserializer that deserializes to undefined"],"updatePoint":{"line":474,"column":22,"index":14939},"line":474,"code":"      it('should error', function () {\n        expect(error).to.be.an.instanceOf(Error);\n        expect(error.message).to.equal('Failed to deserialize user out of session');\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should not deserialize user","suites":["Authenticator","#deserializeUser","with one deserializer that deserializes to undefined"],"updatePoint":{"line":478,"column":37,"index":15138},"line":478,"code":"      it('should not deserialize user', function () {\n        expect(user).to.be.undefined;\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should error","suites":["Authenticator","#deserializeUser","with one deserializer that encounters an error"],"updatePoint":{"line":498,"column":22,"index":15730},"line":498,"code":"      it('should error', function () {\n        expect(error).to.be.an.instanceOf(Error);\n        expect(error.message).to.equal('something went wrong');\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should invalidate session","suites":["Authenticator","#deserializeUser","with one deserializer that encounters an error"],"updatePoint":{"line":502,"column":35,"index":15906},"line":502,"code":"      it('should invalidate session', function () {\n        expect(user).to.be.undefined;\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should error","suites":["Authenticator","#deserializeUser","with one deserializer that throws an exception"],"updatePoint":{"line":522,"column":22,"index":16507},"line":522,"code":"      it('should error', function () {\n        expect(error).to.be.an.instanceOf(Error);\n        expect(error.message).to.equal('something went horribly wrong');\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should invalidate session","suites":["Authenticator","#deserializeUser","with one deserializer that throws an exception"],"updatePoint":{"line":526,"column":35,"index":16692},"line":526,"code":"      it('should invalidate session', function () {\n        expect(user).to.be.undefined;\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["Authenticator","#deserializeUser","with three deserializers, the first of which passes and the second of which deserializes"],"updatePoint":{"line":552,"column":26,"index":17497},"line":552,"code":"      it('should not error', function () {\n        expect(error).to.be.null;\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should deserialize user","suites":["Authenticator","#deserializeUser","with three deserializers, the first of which passes and the second of which deserializes"],"updatePoint":{"line":555,"column":33,"index":17591},"line":555,"code":"      it('should deserialize user', function () {\n        expect(user).to.equal('two');\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["Authenticator","#deserializeUser","with three deserializers, the first of which passes and the second of which does not deserialize by no argument"],"updatePoint":{"line":581,"column":26,"index":18412},"line":581,"code":"      it('should not error', function () {\n        expect(error).to.be.null;\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should deserialize user","suites":["Authenticator","#deserializeUser","with three deserializers, the first of which passes and the second of which does not deserialize by no argument"],"updatePoint":{"line":584,"column":33,"index":18506},"line":584,"code":"      it('should deserialize user', function () {\n        expect(user).to.equal('three');\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["Authenticator","#deserializeUser","with three deserializers, the first of which passes and the second of which does not deserialize by undefined"],"updatePoint":{"line":610,"column":26,"index":19338},"line":610,"code":"      it('should not error', function () {\n        expect(error).to.be.null;\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should deserialize user","suites":["Authenticator","#deserializeUser","with three deserializers, the first of which passes and the second of which does not deserialize by undefined"],"updatePoint":{"line":613,"column":33,"index":19432},"line":613,"code":"      it('should deserialize user', function () {\n        expect(user).to.equal('three');\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["Authenticator","#deserializeUser","with three deserializers, the first of which passes and the second of which invalidates session by false"],"updatePoint":{"line":639,"column":26,"index":20255},"line":639,"code":"      it('should not error', function () {\n        expect(error).to.be.null;\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should invalidate session","suites":["Authenticator","#deserializeUser","with three deserializers, the first of which passes and the second of which invalidates session by false"],"updatePoint":{"line":642,"column":35,"index":20351},"line":642,"code":"      it('should invalidate session', function () {\n        expect(user).to.be.false;\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["Authenticator","#deserializeUser","with three deserializers, the first of which passes and the second of which invalidates session by null"],"updatePoint":{"line":668,"column":26,"index":21166},"line":668,"code":"      it('should not error', function () {\n        expect(error).to.be.null;\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should invalidate session","suites":["Authenticator","#deserializeUser","with three deserializers, the first of which passes and the second of which invalidates session by null"],"updatePoint":{"line":671,"column":35,"index":21262},"line":671,"code":"      it('should invalidate session', function () {\n        expect(user).to.be.false;\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["Authenticator","#deserializeUser","with one deserializer that takes request as argument"],"updatePoint":{"line":697,"column":26,"index":22012},"line":697,"code":"      it('should not error', function () {\n        expect(error).to.be.null;\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should deserialize user","suites":["Authenticator","#deserializeUser","with one deserializer that takes request as argument"],"updatePoint":{"line":700,"column":33,"index":22106},"line":700,"code":"      it('should deserialize user', function () {\n        expect(user).to.equal('jared');\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["Authenticator","#transformAuthInfo","without transforms"],"updatePoint":{"line":719,"column":26,"index":22614},"line":719,"code":"      it('should not error', function () {\n        expect(error).to.be.null;\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should not transform info","suites":["Authenticator","#transformAuthInfo","without transforms"],"updatePoint":{"line":722,"column":35,"index":22710},"line":722,"code":"      it('should not transform info', function () {\n        expect(Object.keys(obj)).to.have.length(2);\n        expect(obj.clientId).to.equal('1');\n        expect(obj.scope).to.equal('write');\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["Authenticator","#transformAuthInfo","with one transform"],"updatePoint":{"line":749,"column":26,"index":23462},"line":749,"code":"      it('should not error', function () {\n        expect(error).to.be.null;\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should not transform info","suites":["Authenticator","#transformAuthInfo","with one transform"],"updatePoint":{"line":752,"column":35,"index":23558},"line":752,"code":"      it('should not transform info', function () {\n        expect(Object.keys(obj)).to.have.length(2);\n        expect(obj.clientId).to.equal('1');\n        expect(obj.client.name).to.equal('Foo');\n        expect(obj.scope).to.be.undefined;\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should error","suites":["Authenticator","#transformAuthInfo","with one transform that encounters an error"],"updatePoint":{"line":775,"column":22,"index":24303},"line":775,"code":"      it('should error', function () {\n        expect(error).to.be.an.instanceOf(Error);\n        expect(error.message).to.equal('something went wrong');\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should not transform info","suites":["Authenticator","#transformAuthInfo","with one transform that encounters an error"],"updatePoint":{"line":779,"column":35,"index":24479},"line":779,"code":"      it('should not transform info', function () {\n        expect(obj).to.be.undefined;\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should error","suites":["Authenticator","#transformAuthInfo","with one transform that throws an exception"],"updatePoint":{"line":799,"column":22,"index":25082},"line":799,"code":"      it('should error', function () {\n        expect(error).to.be.an.instanceOf(Error);\n        expect(error.message).to.equal('something went horribly wrong');\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should not transform info","suites":["Authenticator","#transformAuthInfo","with one transform that throws an exception"],"updatePoint":{"line":803,"column":35,"index":25267},"line":803,"code":"      it('should not transform info', function () {\n        expect(obj).to.be.undefined;\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["Authenticator","#transformAuthInfo","with one sync transform"],"updatePoint":{"line":828,"column":26,"index":25909},"line":828,"code":"      it('should not error', function () {\n        expect(error).to.be.null;\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should not transform info","suites":["Authenticator","#transformAuthInfo","with one sync transform"],"updatePoint":{"line":831,"column":35,"index":26005},"line":831,"code":"      it('should not transform info', function () {\n        expect(Object.keys(obj)).to.have.length(2);\n        expect(obj.clientId).to.equal('1');\n        expect(obj.client.name).to.equal('Foo');\n        expect(obj.scope).to.be.undefined;\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["Authenticator","#transformAuthInfo","with three transform, the first of which passes and the second of which transforms"],"updatePoint":{"line":870,"column":26,"index":27160},"line":870,"code":"      it('should not error', function () {\n        expect(error).to.be.null;\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should not transform info","suites":["Authenticator","#transformAuthInfo","with three transform, the first of which passes and the second of which transforms"],"updatePoint":{"line":873,"column":35,"index":27256},"line":873,"code":"      it('should not transform info', function () {\n        expect(Object.keys(obj)).to.have.length(2);\n        expect(obj.clientId).to.equal('1');\n        expect(obj.client.name).to.equal('Two');\n        expect(obj.scope).to.be.undefined;\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["Authenticator","#transformAuthInfo","with one transform that takes request as argument"],"updatePoint":{"line":907,"column":26,"index":28253},"line":907,"code":"      it('should not error', function () {\n        expect(error).to.be.null;\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should not transform info","suites":["Authenticator","#transformAuthInfo","with one transform that takes request as argument"],"updatePoint":{"line":910,"column":35,"index":28349},"line":910,"code":"      it('should not transform info', function () {\n        expect(Object.keys(obj)).to.have.length(2);\n        expect(obj.clientId).to.equal('1');\n        expect(obj.client.name).to.equal('Foo');\n        expect(obj.scope).to.be.undefined;\n      });","file":"authenticator.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["http.ServerRequest","#login","not establishing a session"],"updatePoint":{"line":56,"column":26,"index":1675},"line":56,"code":"      it('should not error', function () {\n        expect(error).to.be.undefined;\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should be authenticated","suites":["http.ServerRequest","#login","not establishing a session"],"updatePoint":{"line":59,"column":33,"index":1774},"line":59,"code":"      it('should be authenticated', function () {\n        expect(req.isAuthenticated()).to.be.true;\n        expect(req.isUnauthenticated()).to.be.false;\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should set user","suites":["http.ServerRequest","#login","not establishing a session"],"updatePoint":{"line":63,"column":25,"index":1929},"line":63,"code":"      it('should set user', function () {\n        expect(req.user).to.be.an('object');\n        expect(req.user.id).to.equal('1');\n        expect(req.user.username).to.equal('root');\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should not serialize user","suites":["http.ServerRequest","#login","not establishing a session"],"updatePoint":{"line":68,"column":35,"index":2131},"line":68,"code":"      it('should not serialize user', function () {\n        expect(req.session['passport'].user).to.be.undefined;\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["http.ServerRequest","#login","not establishing a session and setting custom user property"],"updatePoint":{"line":96,"column":26,"index":2990},"line":96,"code":"      it('should not error', function () {\n        expect(error).to.be.undefined;\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should be authenticated","suites":["http.ServerRequest","#login","not establishing a session and setting custom user property"],"updatePoint":{"line":99,"column":33,"index":3089},"line":99,"code":"      it('should be authenticated', function () {\n        expect(req.isAuthenticated()).to.be.true;\n        expect(req.isUnauthenticated()).to.be.false;\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["http.ServerRequest","#login","not establishing a session and setting custom user property"],"updatePoint":{"line":103,"column":29,"index":3248},"line":103,"code":"      it('should not set user', function () {\n        expect(req.user).to.be.undefined;\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should set custom user","suites":["http.ServerRequest","#login","not establishing a session and setting custom user property"],"updatePoint":{"line":106,"column":32,"index":3349},"line":106,"code":"      it('should set custom user', function () {\n        expect(req.currentUser).to.be.an('object');\n        expect(req.currentUser.id).to.equal('1');\n        expect(req.currentUser.username).to.equal('root');\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should not serialize user","suites":["http.ServerRequest","#login","not establishing a session and setting custom user property"],"updatePoint":{"line":111,"column":35,"index":3572},"line":111,"code":"      it('should not serialize user', function () {\n        expect(req.session['passport'].user).to.be.undefined;\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should be authenticated","suites":["http.ServerRequest","#login","not establishing a session and invoked without a callback"],"updatePoint":{"line":132,"column":33,"index":4254},"line":132,"code":"      it('should be authenticated', function () {\n        expect(req.isAuthenticated()).to.be.true;\n        expect(req.isUnauthenticated()).to.be.false;\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should set user","suites":["http.ServerRequest","#login","not establishing a session and invoked without a callback"],"updatePoint":{"line":136,"column":25,"index":4409},"line":136,"code":"      it('should set user', function () {\n        expect(req.user).to.be.an('object');\n        expect(req.user.id).to.equal('1');\n        expect(req.user.username).to.equal('root');\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should not serialize user","suites":["http.ServerRequest","#login","not establishing a session and invoked without a callback"],"updatePoint":{"line":141,"column":35,"index":4611},"line":141,"code":"      it('should not serialize user', function () {\n        expect(req.session['passport'].user).to.be.undefined;\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["http.ServerRequest","#login","not establishing a session, without passport.initialize() middleware"],"updatePoint":{"line":163,"column":26,"index":5274},"line":163,"code":"      it('should not error', function () {\n        expect(error).to.be.undefined;\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should be authenticated","suites":["http.ServerRequest","#login","not establishing a session, without passport.initialize() middleware"],"updatePoint":{"line":166,"column":33,"index":5373},"line":166,"code":"      it('should be authenticated', function () {\n        expect(req.isAuthenticated()).to.be.true;\n        expect(req.isUnauthenticated()).to.be.false;\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should set user","suites":["http.ServerRequest","#login","not establishing a session, without passport.initialize() middleware"],"updatePoint":{"line":170,"column":25,"index":5528},"line":170,"code":"      it('should set user', function () {\n        expect(req.user).to.be.an('object');\n        expect(req.user.id).to.equal('1');\n        expect(req.user.username).to.equal('root');\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["http.ServerRequest","#login","establishing a session"],"updatePoint":{"line":211,"column":26,"index":6695},"line":211,"code":"      it('should not error', function () {\n        expect(error).to.be.undefined;\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should be authenticated","suites":["http.ServerRequest","#login","establishing a session"],"updatePoint":{"line":214,"column":33,"index":6794},"line":214,"code":"      it('should be authenticated', function () {\n        expect(req.isAuthenticated()).to.be.true;\n        expect(req.isUnauthenticated()).to.be.false;\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should regenerate session","suites":["http.ServerRequest","#login","establishing a session"],"updatePoint":{"line":218,"column":35,"index":6959},"line":218,"code":"      it('should regenerate session', function () {\n        expect(req.session.id).to.equal('2');\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should set user","suites":["http.ServerRequest","#login","establishing a session"],"updatePoint":{"line":221,"column":25,"index":7057},"line":221,"code":"      it('should set user', function () {\n        expect(req.user).to.be.an('object');\n        expect(req.user.id).to.equal('1');\n        expect(req.user.username).to.equal('root');\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should serialize user","suites":["http.ServerRequest","#login","establishing a session"],"updatePoint":{"line":226,"column":31,"index":7255},"line":226,"code":"      it('should serialize user', function () {\n        expect(req.session['passport'].user).to.equal('1');\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["http.ServerRequest","#login","establishing a session and not keeping previous session data"],"updatePoint":{"line":268,"column":26,"index":8467},"line":268,"code":"      it('should not error', function () {\n        expect(error).to.be.undefined;\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should be authenticated","suites":["http.ServerRequest","#login","establishing a session and not keeping previous session data"],"updatePoint":{"line":271,"column":33,"index":8566},"line":271,"code":"      it('should be authenticated', function () {\n        expect(req.isAuthenticated()).to.be.true;\n        expect(req.isUnauthenticated()).to.be.false;\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should regenerate session","suites":["http.ServerRequest","#login","establishing a session and not keeping previous session data"],"updatePoint":{"line":275,"column":35,"index":8731},"line":275,"code":"      it('should regenerate session', function () {\n        expect(req.session.id).to.equal('2');\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should not keep session data","suites":["http.ServerRequest","#login","establishing a session and not keeping previous session data"],"updatePoint":{"line":278,"column":38,"index":8842},"line":278,"code":"      it('should not keep session data', function () {\n        expect(req.session.cart).to.be.undefined;\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should set user","suites":["http.ServerRequest","#login","establishing a session and not keeping previous session data"],"updatePoint":{"line":281,"column":25,"index":8944},"line":281,"code":"      it('should set user', function () {\n        expect(req.user).to.be.an('object');\n        expect(req.user.id).to.equal('1');\n        expect(req.user.username).to.equal('root');\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should serialize user","suites":["http.ServerRequest","#login","establishing a session and not keeping previous session data"],"updatePoint":{"line":286,"column":31,"index":9142},"line":286,"code":"      it('should serialize user', function () {\n        expect(req.session['passport'].user).to.equal('1');\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["http.ServerRequest","#login","establishing a session and keeping previous session data"],"updatePoint":{"line":330,"column":26,"index":10395},"line":330,"code":"      it('should not error', function () {\n        expect(error).to.be.undefined;\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should be authenticated","suites":["http.ServerRequest","#login","establishing a session and keeping previous session data"],"updatePoint":{"line":333,"column":33,"index":10494},"line":333,"code":"      it('should be authenticated', function () {\n        expect(req.isAuthenticated()).to.be.true;\n        expect(req.isUnauthenticated()).to.be.false;\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should regenerate session","suites":["http.ServerRequest","#login","establishing a session and keeping previous session data"],"updatePoint":{"line":337,"column":35,"index":10659},"line":337,"code":"      it('should regenerate session', function () {\n        expect(req.session.id).to.equal('2');\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should keep session data","suites":["http.ServerRequest","#login","establishing a session and keeping previous session data"],"updatePoint":{"line":340,"column":34,"index":10766},"line":340,"code":"      it('should keep session data', function () {\n        expect(req.session.cart).to.deep.equal(['1', '2']);\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should set user","suites":["http.ServerRequest","#login","establishing a session and keeping previous session data"],"updatePoint":{"line":343,"column":25,"index":10878},"line":343,"code":"      it('should set user', function () {\n        expect(req.user).to.be.an('object');\n        expect(req.user.id).to.equal('1');\n        expect(req.user.username).to.equal('root');\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should serialize user","suites":["http.ServerRequest","#login","establishing a session and keeping previous session data"],"updatePoint":{"line":348,"column":31,"index":11076},"line":348,"code":"      it('should serialize user', function () {\n        expect(req.session['passport'].user).to.equal('1');\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["http.ServerRequest","#login","establishing a session and setting custom user property"],"updatePoint":{"line":388,"column":26,"index":12237},"line":388,"code":"      it('should not error', function () {\n        expect(error).to.be.undefined;\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should be authenticated","suites":["http.ServerRequest","#login","establishing a session and setting custom user property"],"updatePoint":{"line":391,"column":33,"index":12336},"line":391,"code":"      it('should be authenticated', function () {\n        expect(req.isAuthenticated()).to.be.true;\n        expect(req.isUnauthenticated()).to.be.false;\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should regenerate session","suites":["http.ServerRequest","#login","establishing a session and setting custom user property"],"updatePoint":{"line":395,"column":35,"index":12501},"line":395,"code":"      it('should regenerate session', function () {\n        expect(req.session.id).to.equal('2');\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["http.ServerRequest","#login","establishing a session and setting custom user property"],"updatePoint":{"line":398,"column":29,"index":12603},"line":398,"code":"      it('should not set user', function () {\n        expect(req.user).to.be.undefined;\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should set custom user","suites":["http.ServerRequest","#login","establishing a session and setting custom user property"],"updatePoint":{"line":401,"column":32,"index":12704},"line":401,"code":"      it('should set custom user', function () {\n        expect(req.currentUser).to.be.an('object');\n        expect(req.currentUser.id).to.equal('1');\n        expect(req.currentUser.username).to.equal('root');\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should serialize user","suites":["http.ServerRequest","#login","establishing a session and setting custom user property"],"updatePoint":{"line":406,"column":31,"index":12923},"line":406,"code":"      it('should serialize user', function () {\n        expect(req.session['passport'].user).to.equal('1');\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should error","suites":["http.ServerRequest","#login","encountering an error when regenerating session"],"updatePoint":{"line":442,"column":22,"index":13998},"line":442,"code":"      it('should error', function () {\n        expect(error).to.be.an.instanceOf(Error);\n        expect(error.message).to.equal('something went wrong');\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should not be authenticated","suites":["http.ServerRequest","#login","encountering an error when regenerating session"],"updatePoint":{"line":446,"column":37,"index":14176},"line":446,"code":"      it('should not be authenticated', function () {\n        expect(req.isAuthenticated()).to.be.false;\n        expect(req.isUnauthenticated()).to.be.true;\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should not regenerate session","suites":["http.ServerRequest","#login","encountering an error when regenerating session"],"updatePoint":{"line":450,"column":39,"index":14345},"line":450,"code":"      it('should not regenerate session', function () {\n        expect(req.session.id).to.equal('1');\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["http.ServerRequest","#login","encountering an error when regenerating session"],"updatePoint":{"line":453,"column":29,"index":14447},"line":453,"code":"      it('should not set user', function () {\n        expect(req.user).to.be.null;\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should not serialize user","suites":["http.ServerRequest","#login","encountering an error when regenerating session"],"updatePoint":{"line":456,"column":35,"index":14546},"line":456,"code":"      it('should not serialize user', function () {\n        expect(req.session['passport'].user).to.be.undefined;\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should error","suites":["http.ServerRequest","#login","encountering an error when serializing to session"],"updatePoint":{"line":493,"column":22,"index":15628},"line":493,"code":"      it('should error', function () {\n        expect(error).to.be.an.instanceOf(Error);\n        expect(error.message).to.equal('something went wrong');\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should not be authenticated","suites":["http.ServerRequest","#login","encountering an error when serializing to session"],"updatePoint":{"line":497,"column":37,"index":15806},"line":497,"code":"      it('should not be authenticated', function () {\n        expect(req.isAuthenticated()).to.be.false;\n        expect(req.isUnauthenticated()).to.be.true;\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should regenerate session","suites":["http.ServerRequest","#login","encountering an error when serializing to session"],"updatePoint":{"line":501,"column":35,"index":15971},"line":501,"code":"      it('should regenerate session', function () {\n        expect(req.session.id).to.equal('2');\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["http.ServerRequest","#login","encountering an error when serializing to session"],"updatePoint":{"line":504,"column":29,"index":16073},"line":504,"code":"      it('should not set user', function () {\n        expect(req.user).to.be.null;\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should not serialize user","suites":["http.ServerRequest","#login","encountering an error when serializing to session"],"updatePoint":{"line":507,"column":35,"index":16172},"line":507,"code":"      it('should not serialize user', function () {\n        expect(req.session['passport']).to.be.undefined;\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should error","suites":["http.ServerRequest","#login","encountering an error when saving session"],"updatePoint":{"line":549,"column":22,"index":17381},"line":549,"code":"      it('should error', function () {\n        expect(error).to.be.an.instanceOf(Error);\n        expect(error.message).to.equal('something went wrong');\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should not be authenticated","suites":["http.ServerRequest","#login","encountering an error when saving session"],"updatePoint":{"line":553,"column":37,"index":17559},"line":553,"code":"      it('should not be authenticated', function () {\n        expect(req.isAuthenticated()).to.be.false;\n        expect(req.isUnauthenticated()).to.be.true;\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should not regenerate session","suites":["http.ServerRequest","#login","encountering an error when saving session"],"updatePoint":{"line":557,"column":39,"index":17728},"line":557,"code":"      it('should not regenerate session', function () {\n        expect(req.session.id).to.equal('2');\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["http.ServerRequest","#login","encountering an error when saving session"],"updatePoint":{"line":560,"column":29,"index":17830},"line":560,"code":"      it('should not set user', function () {\n        expect(req.user).to.be.null;\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should not serialize user","suites":["http.ServerRequest","#login","encountering an error when saving session"],"updatePoint":{"line":563,"column":35,"index":17929},"line":563,"code":"      it('should not serialize user', function () {\n        expect(req.session['passport'].user).to.equal('1');\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should throw an exception","suites":["http.ServerRequest","#login","establishing a session, but not passing a callback argument"],"updatePoint":{"line":598,"column":35,"index":19025},"line":598,"code":"      it('should throw an exception', function () {\n        expect(function () {\n          req.login(user);\n        }).to.throw(Error, 'req#login requires a callback function');\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should error","suites":["http.ServerRequest","#login","establishing a session without session support"],"updatePoint":{"line":625,"column":22,"index":19816},"line":625,"code":"      it('should error', function () {\n        expect(error).to.be.an.instanceOf(Error);\n        expect(error.message).to.equal('Login sessions require session support. Did you forget to use `express-session` middleware?');\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["http.ServerRequest","#logout","existing session"],"updatePoint":{"line":667,"column":26,"index":21095},"line":667,"code":"      it('should not error', function () {\n        expect(error).to.be.undefined;\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should not be authenticated","suites":["http.ServerRequest","#logout","existing session"],"updatePoint":{"line":670,"column":37,"index":21198},"line":670,"code":"      it('should not be authenticated', function () {\n        expect(req.isAuthenticated()).to.be.false;\n        expect(req.isUnauthenticated()).to.be.true;\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should clear user","suites":["http.ServerRequest","#logout","existing session"],"updatePoint":{"line":674,"column":27,"index":21355},"line":674,"code":"      it('should clear user', function () {\n        expect(req.user).to.be.null;\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should clear serialized user","suites":["http.ServerRequest","#logout","existing session"],"updatePoint":{"line":677,"column":38,"index":21457},"line":677,"code":"      it('should clear serialized user', function () {\n        expect(req.session['passport']).to.be.undefined;\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["http.ServerRequest","#logout","existing session and not keeping session data"],"updatePoint":{"line":719,"column":26,"index":22682},"line":719,"code":"      it('should not error', function () {\n        expect(error).to.be.undefined;\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should not be authenticated","suites":["http.ServerRequest","#logout","existing session and not keeping session data"],"updatePoint":{"line":722,"column":37,"index":22785},"line":722,"code":"      it('should not be authenticated', function () {\n        expect(req.isAuthenticated()).to.be.false;\n        expect(req.isUnauthenticated()).to.be.true;\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should clear user","suites":["http.ServerRequest","#logout","existing session and not keeping session data"],"updatePoint":{"line":726,"column":27,"index":22942},"line":726,"code":"      it('should clear user', function () {\n        expect(req.user).to.be.null;\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should clear serialized user","suites":["http.ServerRequest","#logout","existing session and not keeping session data"],"updatePoint":{"line":729,"column":38,"index":23044},"line":729,"code":"      it('should clear serialized user', function () {\n        expect(req.session['passport']).to.be.undefined;\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should keep session data","suites":["http.ServerRequest","#logout","existing session and not keeping session data"],"updatePoint":{"line":732,"column":34,"index":23162},"line":732,"code":"      it('should keep session data', function () {\n        expect(req.session.cart).to.be.undefined;\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["http.ServerRequest","#logout","existing session and keeping session data"],"updatePoint":{"line":776,"column":26,"index":24421},"line":776,"code":"      it('should not error', function () {\n        expect(error).to.be.undefined;\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should not be authenticated","suites":["http.ServerRequest","#logout","existing session and keeping session data"],"updatePoint":{"line":779,"column":37,"index":24524},"line":779,"code":"      it('should not be authenticated', function () {\n        expect(req.isAuthenticated()).to.be.false;\n        expect(req.isUnauthenticated()).to.be.true;\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should clear user","suites":["http.ServerRequest","#logout","existing session and keeping session data"],"updatePoint":{"line":783,"column":27,"index":24681},"line":783,"code":"      it('should clear user', function () {\n        expect(req.user).to.be.null;\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should clear serialized user","suites":["http.ServerRequest","#logout","existing session and keeping session data"],"updatePoint":{"line":786,"column":38,"index":24783},"line":786,"code":"      it('should clear serialized user', function () {\n        expect(req.session['passport'].user).to.be.undefined;\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should keep session data","suites":["http.ServerRequest","#logout","existing session and keeping session data"],"updatePoint":{"line":789,"column":34,"index":24906},"line":789,"code":"      it('should keep session data', function () {\n        expect(req.session.cart).to.deep.equal(['1', '2']);\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["http.ServerRequest","#logout","existing session and clearing custom user property"],"updatePoint":{"line":829,"column":26,"index":26100},"line":829,"code":"      it('should not error', function () {\n        expect(error).to.be.undefined;\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should not be authenticated","suites":["http.ServerRequest","#logout","existing session and clearing custom user property"],"updatePoint":{"line":832,"column":37,"index":26203},"line":832,"code":"      it('should not be authenticated', function () {\n        expect(req.isAuthenticated()).to.be.false;\n        expect(req.isUnauthenticated()).to.be.true;\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should clear user","suites":["http.ServerRequest","#logout","existing session and clearing custom user property"],"updatePoint":{"line":836,"column":27,"index":26360},"line":836,"code":"      it('should clear user', function () {\n        expect(req.currentUser).to.be.null;\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should clear serialized user","suites":["http.ServerRequest","#logout","existing session and clearing custom user property"],"updatePoint":{"line":839,"column":38,"index":26469},"line":839,"code":"      it('should clear serialized user', function () {\n        expect(req.session['passport']).to.be.undefined;\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should not be authenticated","suites":["http.ServerRequest","#logout","existing session, without passport.initialize() middleware"],"updatePoint":{"line":853,"column":37,"index":26952},"line":853,"code":"      it('should not be authenticated', function () {\n        expect(req.isAuthenticated()).to.be.false;\n        expect(req.isUnauthenticated()).to.be.true;\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should clear user","suites":["http.ServerRequest","#logout","existing session, without passport.initialize() middleware"],"updatePoint":{"line":857,"column":27,"index":27109},"line":857,"code":"      it('should clear user', function () {\n        expect(req.user).to.be.null;\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["http.ServerRequest","#logout","existing session, without passport.initialize() middleware, and invoked with a callback"],"updatePoint":{"line":877,"column":26,"index":27717},"line":877,"code":"      it('should not error', function () {\n        expect(error).to.be.undefined;\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should not be authenticated","suites":["http.ServerRequest","#logout","existing session, without passport.initialize() middleware, and invoked with a callback"],"updatePoint":{"line":880,"column":37,"index":27820},"line":880,"code":"      it('should not be authenticated', function () {\n        expect(req.isAuthenticated()).to.be.false;\n        expect(req.isUnauthenticated()).to.be.true;\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should clear user","suites":["http.ServerRequest","#logout","existing session, without passport.initialize() middleware, and invoked with a callback"],"updatePoint":{"line":884,"column":27,"index":27977},"line":884,"code":"      it('should clear user', function () {\n        expect(req.user).to.be.null;\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should error","suites":["http.ServerRequest","#logout","encountering an error saving existing session"],"updatePoint":{"line":925,"column":22,"index":29161},"line":925,"code":"      it('should error', function () {\n        expect(error).to.be.an.instanceOf(Error);\n        expect(error.message).to.equal('something went wrong');\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should not be authenticated","suites":["http.ServerRequest","#logout","encountering an error saving existing session"],"updatePoint":{"line":929,"column":37,"index":29339},"line":929,"code":"      it('should not be authenticated', function () {\n        expect(req.isAuthenticated()).to.be.false;\n        expect(req.isUnauthenticated()).to.be.true;\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should clear user","suites":["http.ServerRequest","#logout","encountering an error saving existing session"],"updatePoint":{"line":933,"column":27,"index":29496},"line":933,"code":"      it('should clear user', function () {\n        expect(req.user).to.be.null;\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should clear serialized user","suites":["http.ServerRequest","#logout","encountering an error saving existing session"],"updatePoint":{"line":936,"column":38,"index":29598},"line":936,"code":"      it('should clear serialized user', function () {\n        expect(req.session['passport'].user).to.be.undefined;\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should error","suites":["http.ServerRequest","#logout","encountering an error regenerating session"],"updatePoint":{"line":974,"column":22,"index":30751},"line":974,"code":"      it('should error', function () {\n        expect(error).to.be.an.instanceOf(Error);\n        expect(error.message).to.equal('something went wrong');\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should not be authenticated","suites":["http.ServerRequest","#logout","encountering an error regenerating session"],"updatePoint":{"line":978,"column":37,"index":30929},"line":978,"code":"      it('should not be authenticated', function () {\n        expect(req.isAuthenticated()).to.be.false;\n        expect(req.isUnauthenticated()).to.be.true;\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should clear user","suites":["http.ServerRequest","#logout","encountering an error regenerating session"],"updatePoint":{"line":982,"column":27,"index":31086},"line":982,"code":"      it('should clear user', function () {\n        expect(req.user).to.be.null;\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should clear serialized user","suites":["http.ServerRequest","#logout","encountering an error regenerating session"],"updatePoint":{"line":985,"column":38,"index":31188},"line":985,"code":"      it('should clear serialized user', function () {\n        expect(req.session['passport'].user).to.be.undefined;\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should throw an exception","suites":["http.ServerRequest","#logout","existing session, but not passing a callback argument"],"updatePoint":{"line":1002,"column":35,"index":31809},"line":1002,"code":"      it('should throw an exception', function () {\n        expect(function () {\n          req.logout();\n        }).to.throw(Error, 'req#logout requires a callback function');\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should error","suites":["http.ServerRequest","#logout","without session support"],"updatePoint":{"line":1025,"column":22,"index":32494},"line":1025,"code":"      it('should error', function () {\n        expect(error).to.be.an.instanceOf(Error);\n        expect(error.message).to.equal('Login sessions require session support. Did you forget to use `express-session` middleware?');\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should be authenticated","suites":["http.ServerRequest","#isAuthenticated","with a user"],"updatePoint":{"line":1040,"column":33,"index":33050},"line":1040,"code":"      it('should be authenticated', function () {\n        expect(req.isAuthenticated()).to.be.true;\n        expect(req.isUnauthenticated()).to.be.false;\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should be authenticated","suites":["http.ServerRequest","#isAuthenticated","with a user set on custom property"],"updatePoint":{"line":1056,"column":33,"index":33605},"line":1056,"code":"      it('should be authenticated', function () {\n        expect(req.isAuthenticated()).to.be.true;\n        expect(req.isUnauthenticated()).to.be.false;\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should not be authenticated","suites":["http.ServerRequest","#isAuthenticated","without a user"],"updatePoint":{"line":1065,"column":37,"index":33965},"line":1065,"code":"      it('should not be authenticated', function () {\n        expect(req.isAuthenticated()).to.be.false;\n        expect(req.isUnauthenticated()).to.be.true;\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should not be authenticated","suites":["http.ServerRequest","#isAuthenticated","with a null user"],"updatePoint":{"line":1075,"column":37,"index":34350},"line":1075,"code":"      it('should not be authenticated', function () {\n        expect(req.isAuthenticated()).to.be.false;\n        expect(req.isUnauthenticated()).to.be.true;\n      });","file":"http/request.test.js","skipped":false,"dir":"test"},{"name":"should pass error to callback","suites":["middleware/authenticate","error with callback"],"updatePoint":{"line":26,"column":37,"index":843},"line":26,"code":"    it('should pass error to callback', function () {\n      expect(error).to.be.an.instanceOf(Error);\n      expect(error.message).to.equal('something is wrong');\n    });","file":"middleware/authenticate.error.callback.test.js","skipped":false,"dir":"test"},{"name":"should pass user as undefined to callback","suites":["middleware/authenticate","error with callback"],"updatePoint":{"line":30,"column":49,"index":1025},"line":30,"code":"    it('should pass user as undefined to callback', function () {\n      expect(request.user).to.be.undefined;\n    });","file":"middleware/authenticate.error.callback.test.js","skipped":false,"dir":"test"},{"name":"should not set user on request","suites":["middleware/authenticate","error with callback"],"updatePoint":{"line":33,"column":38,"index":1132},"line":33,"code":"    it('should not set user on request', function () {\n      expect(request.user).to.be.undefined;\n    });","file":"middleware/authenticate.error.callback.test.js","skipped":false,"dir":"test"},{"name":"should pass error to callback","suites":["middleware/authenticate","error with callback and options passed to middleware"],"updatePoint":{"line":57,"column":37,"index":1864},"line":57,"code":"    it('should pass error to callback', function () {\n      expect(error).to.be.an.instanceOf(Error);\n      expect(error.message).to.equal('something is wrong');\n    });","file":"middleware/authenticate.error.callback.test.js","skipped":false,"dir":"test"},{"name":"should pass user as undefined to callback","suites":["middleware/authenticate","error with callback and options passed to middleware"],"updatePoint":{"line":61,"column":49,"index":2046},"line":61,"code":"    it('should pass user as undefined to callback', function () {\n      expect(request.user).to.be.undefined;\n    });","file":"middleware/authenticate.error.callback.test.js","skipped":false,"dir":"test"},{"name":"should not set user on request","suites":["middleware/authenticate","error with callback and options passed to middleware"],"updatePoint":{"line":64,"column":38,"index":2153},"line":64,"code":"    it('should not set user on request', function () {\n      expect(request.user).to.be.undefined;\n    });","file":"middleware/authenticate.error.callback.test.js","skipped":false,"dir":"test"},{"name":"should error","suites":["middleware/authenticate","error"],"updatePoint":{"line":24,"column":20,"index":771},"line":24,"code":"    it('should error', function () {\n      expect(error).to.be.an.instanceOf(Error);\n      expect(error.message).to.equal('something is wrong');\n    });","file":"middleware/authenticate.error.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["middleware/authenticate","error"],"updatePoint":{"line":28,"column":27,"index":931},"line":28,"code":"    it('should not set user', function () {\n      expect(request.user).to.be.undefined;\n    });","file":"middleware/authenticate.error.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["middleware/authenticate","fail with callback"],"updatePoint":{"line":26,"column":24,"index":795},"line":26,"code":"    it('should not error', function () {\n      expect(error).to.be.null;\n    });","file":"middleware/authenticate.fail.callback.test.js","skipped":false,"dir":"test"},{"name":"should pass false to callback","suites":["middleware/authenticate","fail with callback"],"updatePoint":{"line":29,"column":37,"index":889},"line":29,"code":"    it('should pass false to callback', function () {\n      expect(user).to.equal(false);\n    });","file":"middleware/authenticate.fail.callback.test.js","skipped":false,"dir":"test"},{"name":"should not set user on request","suites":["middleware/authenticate","fail with callback"],"updatePoint":{"line":32,"column":38,"index":988},"line":32,"code":"    it('should not set user on request', function () {\n      expect(request.user).to.be.undefined;\n    });","file":"middleware/authenticate.fail.callback.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["middleware/authenticate","fail with callback, passing info"],"updatePoint":{"line":58,"column":24,"index":1726},"line":58,"code":"    it('should not error', function () {\n      expect(error).to.be.null;\n    });","file":"middleware/authenticate.fail.callback.test.js","skipped":false,"dir":"test"},{"name":"should pass false to callback","suites":["middleware/authenticate","fail with callback, passing info"],"updatePoint":{"line":61,"column":37,"index":1820},"line":61,"code":"    it('should pass false to callback', function () {\n      expect(user).to.equal(false);\n    });","file":"middleware/authenticate.fail.callback.test.js","skipped":false,"dir":"test"},{"name":"should pass info to callback","suites":["middleware/authenticate","fail with callback, passing info"],"updatePoint":{"line":64,"column":36,"index":1917},"line":64,"code":"    it('should pass info to callback', function () {\n      expect(info).to.be.an('object');\n      expect(info.message).to.equal('Invalid password');\n    });","file":"middleware/authenticate.fail.callback.test.js","skipped":false,"dir":"test"},{"name":"should pass status to callback","suites":["middleware/authenticate","fail with callback, passing info"],"updatePoint":{"line":68,"column":38,"index":2076},"line":68,"code":"    it('should pass status to callback', function () {\n      expect(status).to.be.undefined;\n    });","file":"middleware/authenticate.fail.callback.test.js","skipped":false,"dir":"test"},{"name":"should not set user on request","suites":["middleware/authenticate","fail with callback, passing info"],"updatePoint":{"line":71,"column":38,"index":2177},"line":71,"code":"    it('should not set user on request', function () {\n      expect(request.user).to.be.undefined;\n    });","file":"middleware/authenticate.fail.callback.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["middleware/authenticate","fail with callback, passing info and status"],"updatePoint":{"line":97,"column":24,"index":2931},"line":97,"code":"    it('should not error', function () {\n      expect(error).to.be.null;\n    });","file":"middleware/authenticate.fail.callback.test.js","skipped":false,"dir":"test"},{"name":"should pass false to callback","suites":["middleware/authenticate","fail with callback, passing info and status"],"updatePoint":{"line":100,"column":37,"index":3025},"line":100,"code":"    it('should pass false to callback', function () {\n      expect(user).to.equal(false);\n    });","file":"middleware/authenticate.fail.callback.test.js","skipped":false,"dir":"test"},{"name":"should pass info to callback","suites":["middleware/authenticate","fail with callback, passing info and status"],"updatePoint":{"line":103,"column":36,"index":3122},"line":103,"code":"    it('should pass info to callback', function () {\n      expect(info).to.be.an('object');\n      expect(info.message).to.equal('Invalid password');\n    });","file":"middleware/authenticate.fail.callback.test.js","skipped":false,"dir":"test"},{"name":"should pass status to callback","suites":["middleware/authenticate","fail with callback, passing info and status"],"updatePoint":{"line":107,"column":38,"index":3281},"line":107,"code":"    it('should pass status to callback', function () {\n      expect(status).to.equal(403);\n    });","file":"middleware/authenticate.fail.callback.test.js","skipped":false,"dir":"test"},{"name":"should not set user on request","suites":["middleware/authenticate","fail with callback, passing info and status"],"updatePoint":{"line":110,"column":38,"index":3380},"line":110,"code":"    it('should not set user on request', function () {\n      expect(request.user).to.be.undefined;\n    });","file":"middleware/authenticate.fail.callback.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["middleware/authenticate","fail with callback, passing challenge"],"updatePoint":{"line":134,"column":24,"index":4106},"line":134,"code":"    it('should not error', function () {\n      expect(error).to.be.null;\n    });","file":"middleware/authenticate.fail.callback.test.js","skipped":false,"dir":"test"},{"name":"should pass false to callback","suites":["middleware/authenticate","fail with callback, passing challenge"],"updatePoint":{"line":137,"column":37,"index":4200},"line":137,"code":"    it('should pass false to callback', function () {\n      expect(user).to.equal(false);\n    });","file":"middleware/authenticate.fail.callback.test.js","skipped":false,"dir":"test"},{"name":"should pass challenge to callback","suites":["middleware/authenticate","fail with callback, passing challenge"],"updatePoint":{"line":140,"column":41,"index":4302},"line":140,"code":"    it('should pass challenge to callback', function () {\n      expect(challenge).to.equal('Bearer challenge');\n    });","file":"middleware/authenticate.fail.callback.test.js","skipped":false,"dir":"test"},{"name":"should pass status to callback","suites":["middleware/authenticate","fail with callback, passing challenge"],"updatePoint":{"line":143,"column":38,"index":4419},"line":143,"code":"    it('should pass status to callback', function () {\n      expect(status).to.be.undefined;\n    });","file":"middleware/authenticate.fail.callback.test.js","skipped":false,"dir":"test"},{"name":"should not set user on request","suites":["middleware/authenticate","fail with callback, passing challenge"],"updatePoint":{"line":146,"column":38,"index":4520},"line":146,"code":"    it('should not set user on request', function () {\n      expect(request.user).to.be.undefined;\n    });","file":"middleware/authenticate.fail.callback.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["middleware/authenticate","fail with callback, passing challenge and status"],"updatePoint":{"line":170,"column":24,"index":5262},"line":170,"code":"    it('should not error', function () {\n      expect(error).to.be.null;\n    });","file":"middleware/authenticate.fail.callback.test.js","skipped":false,"dir":"test"},{"name":"should pass false to callback","suites":["middleware/authenticate","fail with callback, passing challenge and status"],"updatePoint":{"line":173,"column":37,"index":5356},"line":173,"code":"    it('should pass false to callback', function () {\n      expect(user).to.equal(false);\n    });","file":"middleware/authenticate.fail.callback.test.js","skipped":false,"dir":"test"},{"name":"should pass challenge to callback","suites":["middleware/authenticate","fail with callback, passing challenge and status"],"updatePoint":{"line":176,"column":41,"index":5458},"line":176,"code":"    it('should pass challenge to callback', function () {\n      expect(challenge).to.equal('Bearer challenge');\n    });","file":"middleware/authenticate.fail.callback.test.js","skipped":false,"dir":"test"},{"name":"should pass status to callback","suites":["middleware/authenticate","fail with callback, passing challenge and status"],"updatePoint":{"line":179,"column":38,"index":5575},"line":179,"code":"    it('should pass status to callback', function () {\n      expect(status).to.equal(403);\n    });","file":"middleware/authenticate.fail.callback.test.js","skipped":false,"dir":"test"},{"name":"should not set user on request","suites":["middleware/authenticate","fail with callback, passing challenge and status"],"updatePoint":{"line":182,"column":38,"index":5674},"line":182,"code":"    it('should not set user on request', function () {\n      expect(request.user).to.be.undefined;\n    });","file":"middleware/authenticate.fail.callback.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["middleware/authenticate","fail with callback, passing status"],"updatePoint":{"line":206,"column":24,"index":6382},"line":206,"code":"    it('should not error', function () {\n      expect(error).to.be.null;\n    });","file":"middleware/authenticate.fail.callback.test.js","skipped":false,"dir":"test"},{"name":"should pass false to callback","suites":["middleware/authenticate","fail with callback, passing status"],"updatePoint":{"line":209,"column":37,"index":6476},"line":209,"code":"    it('should pass false to callback', function () {\n      expect(user).to.equal(false);\n    });","file":"middleware/authenticate.fail.callback.test.js","skipped":false,"dir":"test"},{"name":"should pass challenge to callback","suites":["middleware/authenticate","fail with callback, passing status"],"updatePoint":{"line":212,"column":41,"index":6578},"line":212,"code":"    it('should pass challenge to callback', function () {\n      expect(challenge).to.be.undefined;\n    });","file":"middleware/authenticate.fail.callback.test.js","skipped":false,"dir":"test"},{"name":"should pass status to callback","suites":["middleware/authenticate","fail with callback, passing status"],"updatePoint":{"line":215,"column":38,"index":6682},"line":215,"code":"    it('should pass status to callback', function () {\n      expect(status).to.equal(402);\n    });","file":"middleware/authenticate.fail.callback.test.js","skipped":false,"dir":"test"},{"name":"should not set user on request","suites":["middleware/authenticate","fail with callback, passing status"],"updatePoint":{"line":218,"column":38,"index":6781},"line":218,"code":"    it('should not set user on request', function () {\n      expect(request.user).to.be.undefined;\n    });","file":"middleware/authenticate.fail.callback.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["middleware/authenticate","fail with callback and options passed to middleware"],"updatePoint":{"line":242,"column":24,"index":7465},"line":242,"code":"    it('should not error', function () {\n      expect(error).to.be.null;\n    });","file":"middleware/authenticate.fail.callback.test.js","skipped":false,"dir":"test"},{"name":"should pass false to callback","suites":["middleware/authenticate","fail with callback and options passed to middleware"],"updatePoint":{"line":245,"column":37,"index":7559},"line":245,"code":"    it('should pass false to callback', function () {\n      expect(user).to.equal(false);\n    });","file":"middleware/authenticate.fail.callback.test.js","skipped":false,"dir":"test"},{"name":"should not set user on request","suites":["middleware/authenticate","fail with callback and options passed to middleware"],"updatePoint":{"line":248,"column":38,"index":7658},"line":248,"code":"    it('should not set user on request', function () {\n      expect(request.user).to.be.undefined;\n    });","file":"middleware/authenticate.fail.callback.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["middleware/authenticate","using strategy that specifies message","fail with flash message"],"updatePoint":{"line":37,"column":29,"index":1207},"line":37,"code":"      it('should not set user', function () {\n        expect(request.user).to.be.undefined;\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should flash message","suites":["middleware/authenticate","using strategy that specifies message","fail with flash message"],"updatePoint":{"line":40,"column":30,"index":1310},"line":40,"code":"      it('should flash message', function () {\n        expect(request.message.type).to.equal('error');\n        expect(request.message.msg).to.equal('Invalid password');\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","using strategy that specifies message","fail with flash message"],"updatePoint":{"line":44,"column":25,"index":1484},"line":44,"code":"      it('should redirect', function () {\n        expect(response.statusCode).to.equal(302);\n        expect(response.getHeader('Location')).to.equal('http://www.example.com/login');\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["middleware/authenticate","using strategy that specifies message","fail with flash message using type set by route"],"updatePoint":{"line":79,"column":29,"index":2609},"line":79,"code":"      it('should not set user', function () {\n        expect(request.user).to.be.undefined;\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should flash message","suites":["middleware/authenticate","using strategy that specifies message","fail with flash message using type set by route"],"updatePoint":{"line":82,"column":30,"index":2712},"line":82,"code":"      it('should flash message', function () {\n        expect(request.message.type).to.equal('info');\n        expect(request.message.msg).to.equal('Invalid password');\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","using strategy that specifies message","fail with flash message using type set by route"],"updatePoint":{"line":86,"column":25,"index":2885},"line":86,"code":"      it('should redirect', function () {\n        expect(response.statusCode).to.equal(302);\n        expect(response.getHeader('Location')).to.equal('http://www.example.com/login');\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["middleware/authenticate","using strategy that specifies message","fail with flash message overridden by route as string"],"updatePoint":{"line":119,"column":29,"index":3997},"line":119,"code":"      it('should not set user', function () {\n        expect(request.user).to.be.undefined;\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should flash message","suites":["middleware/authenticate","using strategy that specifies message","fail with flash message overridden by route as string"],"updatePoint":{"line":122,"column":30,"index":4100},"line":122,"code":"      it('should flash message', function () {\n        expect(request.message.type).to.equal('error');\n        expect(request.message.msg).to.equal('Wrong credentials');\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","using strategy that specifies message","fail with flash message overridden by route as string"],"updatePoint":{"line":126,"column":25,"index":4275},"line":126,"code":"      it('should redirect', function () {\n        expect(response.statusCode).to.equal(302);\n        expect(response.getHeader('Location')).to.equal('http://www.example.com/login');\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["middleware/authenticate","using strategy that specifies message","fail with flash message overridden by route using options"],"updatePoint":{"line":161,"column":29,"index":5418},"line":161,"code":"      it('should not set user', function () {\n        expect(request.user).to.be.undefined;\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should flash message","suites":["middleware/authenticate","using strategy that specifies message","fail with flash message overridden by route using options"],"updatePoint":{"line":164,"column":30,"index":5521},"line":164,"code":"      it('should flash message', function () {\n        expect(request.message.type).to.equal('error');\n        expect(request.message.msg).to.equal('Try again');\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","using strategy that specifies message","fail with flash message overridden by route using options"],"updatePoint":{"line":168,"column":25,"index":5688},"line":168,"code":"      it('should redirect', function () {\n        expect(response.statusCode).to.equal(302);\n        expect(response.getHeader('Location')).to.equal('http://www.example.com/login');\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["middleware/authenticate","using strategy that specifies message","fail with flash message overridden by route using options with type"],"updatePoint":{"line":204,"column":29,"index":6869},"line":204,"code":"      it('should not set user', function () {\n        expect(request.user).to.be.undefined;\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should flash message","suites":["middleware/authenticate","using strategy that specifies message","fail with flash message overridden by route using options with type"],"updatePoint":{"line":207,"column":30,"index":6972},"line":207,"code":"      it('should flash message', function () {\n        expect(request.message.type).to.equal('notice');\n        expect(request.message.msg).to.equal('Try again');\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","using strategy that specifies message","fail with flash message overridden by route using options with type"],"updatePoint":{"line":211,"column":25,"index":7140},"line":211,"code":"      it('should redirect', function () {\n        expect(response.statusCode).to.equal(302);\n        expect(response.getHeader('Location')).to.equal('http://www.example.com/login');\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["middleware/authenticate","using strategy that specifies message and type","fail with flash message"],"updatePoint":{"line":247,"column":29,"index":8313},"line":247,"code":"      it('should not set user', function () {\n        expect(request.user).to.be.undefined;\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should flash message","suites":["middleware/authenticate","using strategy that specifies message and type","fail with flash message"],"updatePoint":{"line":250,"column":30,"index":8416},"line":250,"code":"      it('should flash message', function () {\n        expect(request.message.type).to.equal('notice');\n        expect(request.message.msg).to.equal('Invite required');\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","using strategy that specifies message and type","fail with flash message"],"updatePoint":{"line":254,"column":25,"index":8590},"line":254,"code":"      it('should redirect', function () {\n        expect(response.statusCode).to.equal(302);\n        expect(response.getHeader('Location')).to.equal('http://www.example.com/login');\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["middleware/authenticate","using strategy that specifies message and type","fail with flash message using type set by route"],"updatePoint":{"line":290,"column":29,"index":9740},"line":290,"code":"      it('should not set user', function () {\n        expect(request.user).to.be.undefined;\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should flash message","suites":["middleware/authenticate","using strategy that specifies message and type","fail with flash message using type set by route"],"updatePoint":{"line":293,"column":30,"index":9843},"line":293,"code":"      it('should flash message', function () {\n        expect(request.message.type).to.equal('info');\n        expect(request.message.msg).to.equal('Invite required');\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","using strategy that specifies message and type","fail with flash message using type set by route"],"updatePoint":{"line":297,"column":25,"index":10015},"line":297,"code":"      it('should redirect', function () {\n        expect(response.statusCode).to.equal(302);\n        expect(response.getHeader('Location')).to.equal('http://www.example.com/login');\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["middleware/authenticate","using strategy that specifies message and type","fail with flash message overridden by route as string"],"updatePoint":{"line":331,"column":29,"index":11152},"line":331,"code":"      it('should not set user', function () {\n        expect(request.user).to.be.undefined;\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should flash message","suites":["middleware/authenticate","using strategy that specifies message and type","fail with flash message overridden by route as string"],"updatePoint":{"line":334,"column":30,"index":11255},"line":334,"code":"      it('should flash message', function () {\n        expect(request.message.type).to.equal('error');\n        expect(request.message.msg).to.equal('Wrong credentials');\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","using strategy that specifies message and type","fail with flash message overridden by route as string"],"updatePoint":{"line":338,"column":25,"index":11430},"line":338,"code":"      it('should redirect', function () {\n        expect(response.statusCode).to.equal(302);\n        expect(response.getHeader('Location')).to.equal('http://www.example.com/login');\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["middleware/authenticate","using strategy that specifies message and type","fail with flash message overridden by route using options"],"updatePoint":{"line":374,"column":29,"index":12598},"line":374,"code":"      it('should not set user', function () {\n        expect(request.user).to.be.undefined;\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should flash message","suites":["middleware/authenticate","using strategy that specifies message and type","fail with flash message overridden by route using options"],"updatePoint":{"line":377,"column":30,"index":12701},"line":377,"code":"      it('should flash message', function () {\n        expect(request.message.type).to.equal('error');\n        expect(request.message.msg).to.equal('Try again');\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","using strategy that specifies message and type","fail with flash message overridden by route using options"],"updatePoint":{"line":381,"column":25,"index":12868},"line":381,"code":"      it('should redirect', function () {\n        expect(response.statusCode).to.equal(302);\n        expect(response.getHeader('Location')).to.equal('http://www.example.com/login');\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["middleware/authenticate","using strategy that specifies message and type","fail with flash message overridden by route using options with type"],"updatePoint":{"line":418,"column":29,"index":14072},"line":418,"code":"      it('should not set user', function () {\n        expect(request.user).to.be.undefined;\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should flash message","suites":["middleware/authenticate","using strategy that specifies message and type","fail with flash message overridden by route using options with type"],"updatePoint":{"line":421,"column":30,"index":14175},"line":421,"code":"      it('should flash message', function () {\n        expect(request.message.type).to.equal('info');\n        expect(request.message.msg).to.equal('Try again');\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","using strategy that specifies message and type","fail with flash message overridden by route using options with type"],"updatePoint":{"line":425,"column":25,"index":14341},"line":425,"code":"      it('should redirect', function () {\n        expect(response.statusCode).to.equal(302);\n        expect(response.getHeader('Location')).to.equal('http://www.example.com/login');\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["middleware/authenticate","using strategy that specifies message as string","fail with flash message"],"updatePoint":{"line":458,"column":29,"index":15456},"line":458,"code":"      it('should not set user', function () {\n        expect(request.user).to.be.undefined;\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should flash message","suites":["middleware/authenticate","using strategy that specifies message as string","fail with flash message"],"updatePoint":{"line":461,"column":30,"index":15559},"line":461,"code":"      it('should flash message', function () {\n        expect(request.message.type).to.equal('error');\n        expect(request.message.msg).to.equal('Access denied');\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","using strategy that specifies message as string","fail with flash message"],"updatePoint":{"line":465,"column":25,"index":15730},"line":465,"code":"      it('should redirect', function () {\n        expect(response.statusCode).to.equal(302);\n        expect(response.getHeader('Location')).to.equal('http://www.example.com/login');\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["middleware/authenticate","using strategy that specifies message as string","fail with flash message using type set by route"],"updatePoint":{"line":498,"column":29,"index":16821},"line":498,"code":"      it('should not set user', function () {\n        expect(request.user).to.be.undefined;\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should flash message","suites":["middleware/authenticate","using strategy that specifies message as string","fail with flash message using type set by route"],"updatePoint":{"line":501,"column":30,"index":16924},"line":501,"code":"      it('should flash message', function () {\n        expect(request.message.type).to.equal('info');\n        expect(request.message.msg).to.equal('Access denied');\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","using strategy that specifies message as string","fail with flash message using type set by route"],"updatePoint":{"line":505,"column":25,"index":17094},"line":505,"code":"      it('should redirect', function () {\n        expect(response.statusCode).to.equal(302);\n        expect(response.getHeader('Location')).to.equal('http://www.example.com/login');\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["middleware/authenticate","using strategy that specifies message as string","fail with flash message overridden by route as string"],"updatePoint":{"line":536,"column":29,"index":18172},"line":536,"code":"      it('should not set user', function () {\n        expect(request.user).to.be.undefined;\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should flash message","suites":["middleware/authenticate","using strategy that specifies message as string","fail with flash message overridden by route as string"],"updatePoint":{"line":539,"column":30,"index":18275},"line":539,"code":"      it('should flash message', function () {\n        expect(request.message.type).to.equal('error');\n        expect(request.message.msg).to.equal('Wrong credentials');\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","using strategy that specifies message as string","fail with flash message overridden by route as string"],"updatePoint":{"line":543,"column":25,"index":18450},"line":543,"code":"      it('should redirect', function () {\n        expect(response.statusCode).to.equal(302);\n        expect(response.getHeader('Location')).to.equal('http://www.example.com/login');\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["middleware/authenticate","using strategy that specifies message as string","fail with flash message overridden by route using options"],"updatePoint":{"line":576,"column":29,"index":19559},"line":576,"code":"      it('should not set user', function () {\n        expect(request.user).to.be.undefined;\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should flash message","suites":["middleware/authenticate","using strategy that specifies message as string","fail with flash message overridden by route using options"],"updatePoint":{"line":579,"column":30,"index":19662},"line":579,"code":"      it('should flash message', function () {\n        expect(request.message.type).to.equal('error');\n        expect(request.message.msg).to.equal('Try again');\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","using strategy that specifies message as string","fail with flash message overridden by route using options"],"updatePoint":{"line":583,"column":25,"index":19829},"line":583,"code":"      it('should redirect', function () {\n        expect(response.statusCode).to.equal(302);\n        expect(response.getHeader('Location')).to.equal('http://www.example.com/login');\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["middleware/authenticate","using strategy that specifies message as string","fail with flash message overridden by route using options with type"],"updatePoint":{"line":617,"column":29,"index":20976},"line":617,"code":"      it('should not set user', function () {\n        expect(request.user).to.be.undefined;\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should flash message","suites":["middleware/authenticate","using strategy that specifies message as string","fail with flash message overridden by route using options with type"],"updatePoint":{"line":620,"column":30,"index":21079},"line":620,"code":"      it('should flash message', function () {\n        expect(request.message.type).to.equal('notice');\n        expect(request.message.msg).to.equal('Try again');\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","using strategy that specifies message as string","fail with flash message overridden by route using options with type"],"updatePoint":{"line":624,"column":25,"index":21247},"line":624,"code":"      it('should redirect', function () {\n        expect(response.statusCode).to.equal(302);\n        expect(response.getHeader('Location')).to.equal('http://www.example.com/login');\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["middleware/authenticate","using strategy that does not specify message","fail with flash message left up to strategy"],"updatePoint":{"line":657,"column":29,"index":22364},"line":657,"code":"      it('should not set user', function () {\n        expect(request.user).to.be.undefined;\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should not flash message","suites":["middleware/authenticate","using strategy that does not specify message","fail with flash message left up to strategy"],"updatePoint":{"line":660,"column":34,"index":22471},"line":660,"code":"      it('should not flash message', function () {\n        expect(request.message).to.be.undefined;\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","using strategy that does not specify message","fail with flash message left up to strategy"],"updatePoint":{"line":663,"column":25,"index":22572},"line":663,"code":"      it('should redirect', function () {\n        expect(response.statusCode).to.equal(302);\n        expect(response.getHeader('Location')).to.equal('http://www.example.com/login');\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["middleware/authenticate","using strategy that does not specify message","fail with flash message left up to strategy using type set by route"],"updatePoint":{"line":696,"column":29,"index":23668},"line":696,"code":"      it('should not set user', function () {\n        expect(request.user).to.be.undefined;\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should not flash message","suites":["middleware/authenticate","using strategy that does not specify message","fail with flash message left up to strategy using type set by route"],"updatePoint":{"line":699,"column":34,"index":23775},"line":699,"code":"      it('should not flash message', function () {\n        expect(request.message).to.be.undefined;\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","using strategy that does not specify message","fail with flash message left up to strategy using type set by route"],"updatePoint":{"line":702,"column":25,"index":23876},"line":702,"code":"      it('should redirect', function () {\n        expect(response.statusCode).to.equal(302);\n        expect(response.getHeader('Location')).to.equal('http://www.example.com/login');\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["middleware/authenticate","using strategy that does not specify message","fail with flash message specified by route as string"],"updatePoint":{"line":733,"column":29,"index":24938},"line":733,"code":"      it('should not set user', function () {\n        expect(request.user).to.be.undefined;\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should flash message","suites":["middleware/authenticate","using strategy that does not specify message","fail with flash message specified by route as string"],"updatePoint":{"line":736,"column":30,"index":25041},"line":736,"code":"      it('should flash message', function () {\n        expect(request.message.type).to.equal('error');\n        expect(request.message.msg).to.equal('Wrong credentials');\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","using strategy that does not specify message","fail with flash message specified by route as string"],"updatePoint":{"line":740,"column":25,"index":25216},"line":740,"code":"      it('should redirect', function () {\n        expect(response.statusCode).to.equal(302);\n        expect(response.getHeader('Location')).to.equal('http://www.example.com/login');\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["middleware/authenticate","using strategy that does not specify message","fail with flash message specified by route using options"],"updatePoint":{"line":773,"column":29,"index":26309},"line":773,"code":"      it('should not set user', function () {\n        expect(request.user).to.be.undefined;\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should flash message","suites":["middleware/authenticate","using strategy that does not specify message","fail with flash message specified by route using options"],"updatePoint":{"line":776,"column":30,"index":26412},"line":776,"code":"      it('should flash message', function () {\n        expect(request.message.type).to.equal('error');\n        expect(request.message.msg).to.equal('Try again');\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","using strategy that does not specify message","fail with flash message specified by route using options"],"updatePoint":{"line":780,"column":25,"index":26579},"line":780,"code":"      it('should redirect', function () {\n        expect(response.statusCode).to.equal(302);\n        expect(response.getHeader('Location')).to.equal('http://www.example.com/login');\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["middleware/authenticate","using strategy that does not specify message","fail with flash message specified by route using options with type"],"updatePoint":{"line":814,"column":29,"index":27710},"line":814,"code":"      it('should not set user', function () {\n        expect(request.user).to.be.undefined;\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should flash message","suites":["middleware/authenticate","using strategy that does not specify message","fail with flash message specified by route using options with type"],"updatePoint":{"line":817,"column":30,"index":27813},"line":817,"code":"      it('should flash message', function () {\n        expect(request.message.type).to.equal('notice');\n        expect(request.message.msg).to.equal('Try again');\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","using strategy that does not specify message","fail with flash message specified by route using options with type"],"updatePoint":{"line":821,"column":25,"index":27981},"line":821,"code":"      it('should redirect', function () {\n        expect(response.statusCode).to.equal(302);\n        expect(response.getHeader('Location')).to.equal('http://www.example.com/login');\n      });","file":"middleware/authenticate.fail.flash.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["middleware/authenticate","fail with message set by route"],"updatePoint":{"line":30,"column":27,"index":968},"line":30,"code":"    it('should not set user', function () {\n      expect(request.user).to.be.undefined;\n    });","file":"middleware/authenticate.fail.message.test.js","skipped":false,"dir":"test"},{"name":"should add message to session","suites":["middleware/authenticate","fail with message set by route"],"updatePoint":{"line":33,"column":37,"index":1074},"line":33,"code":"    it('should add message to session', function () {\n      expect(request.session.messages).to.have.length(1);\n      expect(request.session.messages[0]).to.equal('Wrong credentials');\n    });","file":"middleware/authenticate.fail.message.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","fail with message set by route"],"updatePoint":{"line":37,"column":23,"index":1253},"line":37,"code":"    it('should redirect', function () {\n      expect(response.statusCode).to.equal(302);\n      expect(response.getHeader('Location')).to.equal('http://www.example.com/login');\n    });","file":"middleware/authenticate.fail.message.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["middleware/authenticate","fail with message set by route that is added to messages"],"updatePoint":{"line":65,"column":27,"index":2210},"line":65,"code":"    it('should not set user', function () {\n      expect(request.user).to.be.undefined;\n    });","file":"middleware/authenticate.fail.message.test.js","skipped":false,"dir":"test"},{"name":"should add message to session","suites":["middleware/authenticate","fail with message set by route that is added to messages"],"updatePoint":{"line":68,"column":37,"index":2316},"line":68,"code":"    it('should add message to session', function () {\n      expect(request.session.messages).to.have.length(2);\n      expect(request.session.messages[0]).to.equal('I exist!');\n      expect(request.session.messages[1]).to.equal('Wrong credentials');\n    });","file":"middleware/authenticate.fail.message.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","fail with message set by route that is added to messages"],"updatePoint":{"line":73,"column":23,"index":2559},"line":73,"code":"    it('should redirect', function () {\n      expect(response.statusCode).to.equal(302);\n      expect(response.getHeader('Location')).to.equal('http://www.example.com/login');\n    });","file":"middleware/authenticate.fail.message.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["middleware/authenticate","fail with message set by strategy"],"updatePoint":{"line":100,"column":27,"index":3433},"line":100,"code":"    it('should not set user', function () {\n      expect(request.user).to.be.undefined;\n    });","file":"middleware/authenticate.fail.message.test.js","skipped":false,"dir":"test"},{"name":"should add message to session","suites":["middleware/authenticate","fail with message set by strategy"],"updatePoint":{"line":103,"column":37,"index":3539},"line":103,"code":"    it('should add message to session', function () {\n      expect(request.session.messages).to.have.length(1);\n      expect(request.session.messages[0]).to.equal('Invalid password');\n    });","file":"middleware/authenticate.fail.message.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","fail with message set by strategy"],"updatePoint":{"line":107,"column":23,"index":3717},"line":107,"code":"    it('should redirect', function () {\n      expect(response.statusCode).to.equal(302);\n      expect(response.getHeader('Location')).to.equal('http://www.example.com/login');\n    });","file":"middleware/authenticate.fail.message.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["middleware/authenticate","fail with message set by strategy with extra info"],"updatePoint":{"line":135,"column":27,"index":4630},"line":135,"code":"    it('should not set user', function () {\n      expect(request.user).to.be.undefined;\n    });","file":"middleware/authenticate.fail.message.test.js","skipped":false,"dir":"test"},{"name":"should add message to session","suites":["middleware/authenticate","fail with message set by strategy with extra info"],"updatePoint":{"line":138,"column":37,"index":4736},"line":138,"code":"    it('should add message to session', function () {\n      expect(request.session.messages).to.have.length(1);\n      expect(request.session.messages[0]).to.equal('Invalid password');\n    });","file":"middleware/authenticate.fail.message.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","fail with message set by strategy with extra info"],"updatePoint":{"line":142,"column":23,"index":4914},"line":142,"code":"    it('should redirect', function () {\n      expect(response.statusCode).to.equal(302);\n      expect(response.getHeader('Location')).to.equal('http://www.example.com/login');\n    });","file":"middleware/authenticate.fail.message.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["middleware/authenticate","with multiple strategies, all of which fail, and responding with unauthorized status"],"updatePoint":{"line":40,"column":27,"index":1408},"line":40,"code":"    it('should not set user', function () {\n      expect(request.user).to.be.undefined;\n    });","file":"middleware/authenticate.fail.multi.test.js","skipped":false,"dir":"test"},{"name":"should respond","suites":["middleware/authenticate","with multiple strategies, all of which fail, and responding with unauthorized status"],"updatePoint":{"line":43,"column":22,"index":1499},"line":43,"code":"    it('should respond', function () {\n      expect(response.statusCode).to.equal(401);\n      expect(response.body).to.equal('Unauthorized');\n    });","file":"middleware/authenticate.fail.multi.test.js","skipped":false,"dir":"test"},{"name":"should set authenticate header on response","suites":["middleware/authenticate","with multiple strategies, all of which fail, and responding with unauthorized status"],"updatePoint":{"line":47,"column":50,"index":1677},"line":47,"code":"    it('should set authenticate header on response', function () {\n      var val = response.getHeader('WWW-Authenticate');\n      expect(val).to.be.an('array');\n      expect(val).to.have.length(2);\n      expect(val[0]).to.equal('BASIC challenge');\n      expect(val[1]).to.equal('DIGEST challenge');\n    });","file":"middleware/authenticate.fail.multi.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["middleware/authenticate","with multiple strategies, all of which fail, and responding with specified status"],"updatePoint":{"line":87,"column":27,"index":3108},"line":87,"code":"    it('should not set user', function () {\n      expect(request.user).to.be.undefined;\n    });","file":"middleware/authenticate.fail.multi.test.js","skipped":false,"dir":"test"},{"name":"should respond","suites":["middleware/authenticate","with multiple strategies, all of which fail, and responding with specified status"],"updatePoint":{"line":90,"column":22,"index":3199},"line":90,"code":"    it('should respond', function () {\n      expect(response.statusCode).to.equal(400);\n      expect(response.getHeader('WWW-Authenticate')).to.be.undefined;\n      expect(response.body).to.equal('Bad Request');\n    });","file":"middleware/authenticate.fail.multi.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["middleware/authenticate","with multiple strategies, all of which fail, and flashing message"],"updatePoint":{"line":126,"column":27,"index":4383},"line":126,"code":"    it('should not set user', function () {\n      expect(request.user).to.be.undefined;\n    });","file":"middleware/authenticate.fail.multi.test.js","skipped":false,"dir":"test"},{"name":"should flash message","suites":["middleware/authenticate","with multiple strategies, all of which fail, and flashing message"],"updatePoint":{"line":129,"column":28,"index":4480},"line":129,"code":"    it('should flash message', function () {\n      expect(request.message.type).to.equal('error');\n      expect(request.message.msg).to.equal('A message');\n    });","file":"middleware/authenticate.fail.multi.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","with multiple strategies, all of which fail, and flashing message"],"updatePoint":{"line":133,"column":23,"index":4639},"line":133,"code":"    it('should redirect', function () {\n      expect(response.statusCode).to.equal(302);\n      expect(response.getHeader('Location')).to.equal('http://www.example.com/login');\n    });","file":"middleware/authenticate.fail.multi.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["middleware/authenticate","with multiple strategies, all of which fail with unauthorized status, and invoking callback"],"updatePoint":{"line":168,"column":24,"index":5934},"line":168,"code":"    it('should not error', function () {\n      expect(error).to.be.null;\n    });","file":"middleware/authenticate.fail.multi.test.js","skipped":false,"dir":"test"},{"name":"should pass false to callback","suites":["middleware/authenticate","with multiple strategies, all of which fail with unauthorized status, and invoking callback"],"updatePoint":{"line":171,"column":37,"index":6028},"line":171,"code":"    it('should pass false to callback', function () {\n      expect(user).to.equal(false);\n    });","file":"middleware/authenticate.fail.multi.test.js","skipped":false,"dir":"test"},{"name":"should pass challenges to callback","suites":["middleware/authenticate","with multiple strategies, all of which fail with unauthorized status, and invoking callback"],"updatePoint":{"line":174,"column":42,"index":6131},"line":174,"code":"    it('should pass challenges to callback', function () {\n      expect(challenge).to.be.an('array');\n      expect(challenge).to.have.length(3);\n      expect(challenge[0]).to.equal('BASIC challenge');\n      expect(challenge[1]).to.be.undefined;\n      expect(challenge[2]).to.equal('DIGEST challenge');\n    });","file":"middleware/authenticate.fail.multi.test.js","skipped":false,"dir":"test"},{"name":"should pass statuses to callback","suites":["middleware/authenticate","with multiple strategies, all of which fail with unauthorized status, and invoking callback"],"updatePoint":{"line":181,"column":40,"index":6439},"line":181,"code":"    it('should pass statuses to callback', function () {\n      expect(status).to.be.an('array');\n      expect(status).to.have.length(3);\n      expect(status[0]).to.be.undefined;\n      expect(status[1]).to.be.undefined;\n      expect(status[2]).to.be.undefined;\n    });","file":"middleware/authenticate.fail.multi.test.js","skipped":false,"dir":"test"},{"name":"should not set user on request","suites":["middleware/authenticate","with multiple strategies, all of which fail with unauthorized status, and invoking callback"],"updatePoint":{"line":188,"column":38,"index":6705},"line":188,"code":"    it('should not set user on request', function () {\n      expect(request.user).to.be.undefined;\n    });","file":"middleware/authenticate.fail.multi.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["middleware/authenticate","with multiple strategies, all of which fail with specific status, and invoking callback"],"updatePoint":{"line":222,"column":24,"index":7917},"line":222,"code":"    it('should not error', function () {\n      expect(error).to.be.null;\n    });","file":"middleware/authenticate.fail.multi.test.js","skipped":false,"dir":"test"},{"name":"should pass false to callback","suites":["middleware/authenticate","with multiple strategies, all of which fail with specific status, and invoking callback"],"updatePoint":{"line":225,"column":37,"index":8011},"line":225,"code":"    it('should pass false to callback', function () {\n      expect(user).to.equal(false);\n    });","file":"middleware/authenticate.fail.multi.test.js","skipped":false,"dir":"test"},{"name":"should pass challenges to callback","suites":["middleware/authenticate","with multiple strategies, all of which fail with specific status, and invoking callback"],"updatePoint":{"line":228,"column":42,"index":8114},"line":228,"code":"    it('should pass challenges to callback', function () {\n      expect(challenge).to.be.an('array');\n      expect(challenge).to.have.length(3);\n      expect(challenge[0]).to.equal('BASIC challenge');\n      expect(challenge[1]).to.be.undefined;\n      expect(challenge[2]).to.equal('BEARER challenge');\n    });","file":"middleware/authenticate.fail.multi.test.js","skipped":false,"dir":"test"},{"name":"should pass statuses to callback","suites":["middleware/authenticate","with multiple strategies, all of which fail with specific status, and invoking callback"],"updatePoint":{"line":235,"column":40,"index":8422},"line":235,"code":"    it('should pass statuses to callback', function () {\n      expect(status).to.be.an('array');\n      expect(status).to.have.length(3);\n      expect(status[0]).to.equal(400);\n      expect(status[1]).to.equal(402);\n      expect(status[2]).to.equal(403);\n    });","file":"middleware/authenticate.fail.multi.test.js","skipped":false,"dir":"test"},{"name":"should not set user on request","suites":["middleware/authenticate","with multiple strategies, all of which fail with specific status, and invoking callback"],"updatePoint":{"line":242,"column":38,"index":8682},"line":242,"code":"    it('should not set user on request', function () {\n      expect(request.user).to.be.undefined;\n    });","file":"middleware/authenticate.fail.multi.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["middleware/authenticate","with single strategy in list, which fails with unauthorized status, and invoking callback"],"updatePoint":{"line":266,"column":24,"index":9478},"line":266,"code":"    it('should not error', function () {\n      expect(error).to.be.null;\n    });","file":"middleware/authenticate.fail.multi.test.js","skipped":false,"dir":"test"},{"name":"should pass false to callback","suites":["middleware/authenticate","with single strategy in list, which fails with unauthorized status, and invoking callback"],"updatePoint":{"line":269,"column":37,"index":9572},"line":269,"code":"    it('should pass false to callback', function () {\n      expect(user).to.equal(false);\n    });","file":"middleware/authenticate.fail.multi.test.js","skipped":false,"dir":"test"},{"name":"should pass challenges to callback","suites":["middleware/authenticate","with single strategy in list, which fails with unauthorized status, and invoking callback"],"updatePoint":{"line":272,"column":42,"index":9675},"line":272,"code":"    it('should pass challenges to callback', function () {\n      expect(challenge).to.be.an('array');\n      expect(challenge).to.have.length(1);\n      expect(challenge[0]).to.equal('BASIC challenge');\n    });","file":"middleware/authenticate.fail.multi.test.js","skipped":false,"dir":"test"},{"name":"should pass statuses to callback","suites":["middleware/authenticate","with single strategy in list, which fails with unauthorized status, and invoking callback"],"updatePoint":{"line":277,"column":40,"index":9882},"line":277,"code":"    it('should pass statuses to callback', function () {\n      expect(status).to.be.an('array');\n      expect(status).to.have.length(1);\n      expect(status[0]).to.be.undefined;\n    });","file":"middleware/authenticate.fail.multi.test.js","skipped":false,"dir":"test"},{"name":"should not set user on request","suites":["middleware/authenticate","with single strategy in list, which fails with unauthorized status, and invoking callback"],"updatePoint":{"line":282,"column":38,"index":10066},"line":282,"code":"    it('should not set user on request', function () {\n      expect(request.user).to.be.undefined;\n    });","file":"middleware/authenticate.fail.multi.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["middleware/authenticate","fail"],"updatePoint":{"line":24,"column":27,"index":748},"line":24,"code":"    it('should not set user', function () {\n      expect(request.user).to.be.undefined;\n    });","file":"middleware/authenticate.fail.test.js","skipped":false,"dir":"test"},{"name":"should respond","suites":["middleware/authenticate","fail"],"updatePoint":{"line":27,"column":22,"index":839},"line":27,"code":"    it('should respond', function () {\n      expect(response.statusCode).to.equal(401);\n      expect(response.getHeader('WWW-Authenticate')).to.be.undefined;\n      expect(response.body).to.equal('Unauthorized');\n    });","file":"middleware/authenticate.fail.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["middleware/authenticate","fail with redirect"],"updatePoint":{"line":51,"column":27,"index":1634},"line":51,"code":"    it('should not set user', function () {\n      expect(request.user).to.be.undefined;\n    });","file":"middleware/authenticate.fail.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","fail with redirect"],"updatePoint":{"line":54,"column":23,"index":1726},"line":54,"code":"    it('should redirect', function () {\n      expect(response.statusCode).to.equal(302);\n      expect(response.getHeader('Location')).to.equal('http://www.example.com/login');\n    });","file":"middleware/authenticate.fail.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["middleware/authenticate","fail with challenge"],"updatePoint":{"line":75,"column":27,"index":2423},"line":75,"code":"    it('should not set user', function () {\n      expect(request.user).to.be.undefined;\n    });","file":"middleware/authenticate.fail.test.js","skipped":false,"dir":"test"},{"name":"should respond","suites":["middleware/authenticate","fail with challenge"],"updatePoint":{"line":78,"column":22,"index":2514},"line":78,"code":"    it('should respond', function () {\n      expect(response.statusCode).to.equal(401);\n      expect(response.body).to.equal('Unauthorized');\n    });","file":"middleware/authenticate.fail.test.js","skipped":false,"dir":"test"},{"name":"should set authenticate header on response","suites":["middleware/authenticate","fail with challenge"],"updatePoint":{"line":82,"column":50,"index":2692},"line":82,"code":"    it('should set authenticate header on response', function () {\n      var val = response.getHeader('WWW-Authenticate');\n      expect(val).to.be.an('array');\n      expect(val).to.have.length(1);\n      expect(val[0]).to.equal('MOCK challenge');\n    });","file":"middleware/authenticate.fail.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["middleware/authenticate","fail with challenge and status"],"updatePoint":{"line":105,"column":27,"index":3448},"line":105,"code":"    it('should not set user', function () {\n      expect(request.user).to.be.undefined;\n    });","file":"middleware/authenticate.fail.test.js","skipped":false,"dir":"test"},{"name":"should respond","suites":["middleware/authenticate","fail with challenge and status"],"updatePoint":{"line":108,"column":22,"index":3539},"line":108,"code":"    it('should respond', function () {\n      expect(response.statusCode).to.equal(403);\n      expect(response.getHeader('WWW-Authenticate')).to.be.undefined;\n      expect(response.body).to.equal('Forbidden');\n    });","file":"middleware/authenticate.fail.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["middleware/authenticate","fail with status"],"updatePoint":{"line":130,"column":27,"index":4254},"line":130,"code":"    it('should not set user', function () {\n      expect(request.user).to.be.undefined;\n    });","file":"middleware/authenticate.fail.test.js","skipped":false,"dir":"test"},{"name":"should respond","suites":["middleware/authenticate","fail with status"],"updatePoint":{"line":133,"column":22,"index":4345},"line":133,"code":"    it('should respond', function () {\n      expect(response.statusCode).to.equal(400);\n      expect(response.getHeader('WWW-Authenticate')).to.be.undefined;\n      expect(response.body).to.equal('Bad Request');\n    });","file":"middleware/authenticate.fail.test.js","skipped":false,"dir":"test"},{"name":"should error","suites":["middleware/authenticate","fail with error"],"updatePoint":{"line":159,"column":20,"index":5160},"line":159,"code":"    it('should error', function () {\n      expect(error).to.be.an.instanceOf(Error);\n      expect(error.constructor.name).to.equal('AuthenticationError');\n      expect(error.message).to.equal('Unauthorized');\n      expect(error.status).to.equal(401);\n    });","file":"middleware/authenticate.fail.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["middleware/authenticate","fail with error"],"updatePoint":{"line":165,"column":27,"index":5426},"line":165,"code":"    it('should not set user', function () {\n      expect(request.user).to.be.undefined;\n    });","file":"middleware/authenticate.fail.test.js","skipped":false,"dir":"test"},{"name":"should not set body of response","suites":["middleware/authenticate","fail with error"],"updatePoint":{"line":168,"column":39,"index":5534},"line":168,"code":"    it('should not set body of response', function () {\n      expect(response.statusCode).to.equal(401);\n      expect(response.getHeader('WWW-Authenticate')).to.be.undefined;\n      expect(response.body).to.be.undefined;\n    });","file":"middleware/authenticate.fail.test.js","skipped":false,"dir":"test"},{"name":"should error","suites":["middleware/authenticate","fail with error, passing info to fail"],"updatePoint":{"line":196,"column":20,"index":6411},"line":196,"code":"    it('should error', function () {\n      expect(error).to.be.an.instanceOf(Error);\n      expect(error.constructor.name).to.equal('AuthenticationError');\n      expect(error.message).to.equal('Unauthorized');\n      expect(error.status).to.equal(401);\n    });","file":"middleware/authenticate.fail.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["middleware/authenticate","fail with error, passing info to fail"],"updatePoint":{"line":202,"column":27,"index":6677},"line":202,"code":"    it('should not set user', function () {\n      expect(request.user).to.be.undefined;\n    });","file":"middleware/authenticate.fail.test.js","skipped":false,"dir":"test"},{"name":"should not set body of response","suites":["middleware/authenticate","fail with error, passing info to fail"],"updatePoint":{"line":205,"column":39,"index":6785},"line":205,"code":"    it('should not set body of response', function () {\n      expect(response.statusCode).to.equal(401);\n      expect(response.getHeader('WWW-Authenticate')).to.be.undefined;\n      expect(response.body).to.be.undefined;\n    });","file":"middleware/authenticate.fail.test.js","skipped":false,"dir":"test"},{"name":"should error","suites":["middleware/authenticate","fail with error, passing info and status to fail"],"updatePoint":{"line":233,"column":20,"index":7679},"line":233,"code":"    it('should error', function () {\n      expect(error).to.be.an.instanceOf(Error);\n      expect(error.constructor.name).to.equal('AuthenticationError');\n      expect(error.message).to.equal('Bad Request');\n      expect(error.status).to.equal(400);\n    });","file":"middleware/authenticate.fail.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["middleware/authenticate","fail with error, passing info and status to fail"],"updatePoint":{"line":239,"column":27,"index":7944},"line":239,"code":"    it('should not set user', function () {\n      expect(request.user).to.be.undefined;\n    });","file":"middleware/authenticate.fail.test.js","skipped":false,"dir":"test"},{"name":"should not set body of response","suites":["middleware/authenticate","fail with error, passing info and status to fail"],"updatePoint":{"line":242,"column":39,"index":8052},"line":242,"code":"    it('should not set body of response', function () {\n      expect(response.statusCode).to.equal(400);\n      expect(response.getHeader('WWW-Authenticate')).to.be.undefined;\n      expect(response.body).to.be.undefined;\n    });","file":"middleware/authenticate.fail.test.js","skipped":false,"dir":"test"},{"name":"should error","suites":["middleware/authenticate","fail with error, passing challenge to fail"],"updatePoint":{"line":268,"column":20,"index":8904},"line":268,"code":"    it('should error', function () {\n      expect(error).to.be.an.instanceOf(Error);\n      expect(error.constructor.name).to.equal('AuthenticationError');\n      expect(error.message).to.equal('Unauthorized');\n      expect(error.status).to.equal(401);\n    });","file":"middleware/authenticate.fail.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["middleware/authenticate","fail with error, passing challenge to fail"],"updatePoint":{"line":274,"column":27,"index":9170},"line":274,"code":"    it('should not set user', function () {\n      expect(request.user).to.be.undefined;\n    });","file":"middleware/authenticate.fail.test.js","skipped":false,"dir":"test"},{"name":"should not set body of response","suites":["middleware/authenticate","fail with error, passing challenge to fail"],"updatePoint":{"line":277,"column":39,"index":9278},"line":277,"code":"    it('should not set body of response', function () {\n      expect(response.statusCode).to.equal(401);\n      expect(response.body).to.be.undefined;\n    });","file":"middleware/authenticate.fail.test.js","skipped":false,"dir":"test"},{"name":"should set authenticate header on response","suites":["middleware/authenticate","fail with error, passing challenge to fail"],"updatePoint":{"line":281,"column":50,"index":9447},"line":281,"code":"    it('should set authenticate header on response', function () {\n      var val = response.getHeader('WWW-Authenticate');\n      expect(val).to.be.an('array');\n      expect(val).to.have.length(1);\n      expect(val[0]).to.equal('Bearer challenge');\n    });","file":"middleware/authenticate.fail.test.js","skipped":false,"dir":"test"},{"name":"should error","suites":["middleware/authenticate","fail with error, passing challenge and status to fail"],"updatePoint":{"line":308,"column":20,"index":10332},"line":308,"code":"    it('should error', function () {\n      expect(error).to.be.an.instanceOf(Error);\n      expect(error.constructor.name).to.equal('AuthenticationError');\n      expect(error.message).to.equal('Forbidden');\n      expect(error.status).to.equal(403);\n    });","file":"middleware/authenticate.fail.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["middleware/authenticate","fail with error, passing challenge and status to fail"],"updatePoint":{"line":314,"column":27,"index":10595},"line":314,"code":"    it('should not set user', function () {\n      expect(request.user).to.be.undefined;\n    });","file":"middleware/authenticate.fail.test.js","skipped":false,"dir":"test"},{"name":"should not set body of response","suites":["middleware/authenticate","fail with error, passing challenge and status to fail"],"updatePoint":{"line":317,"column":39,"index":10703},"line":317,"code":"    it('should not set body of response', function () {\n      expect(response.statusCode).to.equal(403);\n      expect(response.getHeader('WWW-Authenticate')).to.be.undefined;\n      expect(response.body).to.be.undefined;\n    });","file":"middleware/authenticate.fail.test.js","skipped":false,"dir":"test"},{"name":"should error","suites":["middleware/authenticate","fail with error, passing status to fail"],"updatePoint":{"line":343,"column":20,"index":11537},"line":343,"code":"    it('should error', function () {\n      expect(error).to.be.an.instanceOf(Error);\n      expect(error.constructor.name).to.equal('AuthenticationError');\n      expect(error.message).to.equal('Payment Required');\n      expect(error.status).to.equal(402);\n    });","file":"middleware/authenticate.fail.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["middleware/authenticate","fail with error, passing status to fail"],"updatePoint":{"line":349,"column":27,"index":11807},"line":349,"code":"    it('should not set user', function () {\n      expect(request.user).to.be.undefined;\n    });","file":"middleware/authenticate.fail.test.js","skipped":false,"dir":"test"},{"name":"should not set body of response","suites":["middleware/authenticate","fail with error, passing status to fail"],"updatePoint":{"line":352,"column":39,"index":11915},"line":352,"code":"    it('should not set body of response', function () {\n      expect(response.statusCode).to.equal(402);\n      expect(response.getHeader('WWW-Authenticate')).to.be.undefined;\n      expect(response.body).to.be.undefined;\n    });","file":"middleware/authenticate.fail.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["middleware/authenticate","pass"],"updatePoint":{"line":24,"column":24,"index":740},"line":24,"code":"    it('should not error', function () {\n      expect(error).to.be.undefined;\n    });","file":"middleware/authenticate.pass.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["middleware/authenticate","pass"],"updatePoint":{"line":27,"column":27,"index":829},"line":27,"code":"    it('should not set user', function () {\n      expect(request.user).to.be.undefined;\n    });","file":"middleware/authenticate.pass.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["middleware/authenticate","redirect"],"updatePoint":{"line":24,"column":27,"index":792},"line":24,"code":"    it('should not set user', function () {\n      expect(request.user).to.be.undefined;\n    });","file":"middleware/authenticate.redirect.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","redirect"],"updatePoint":{"line":27,"column":23,"index":884},"line":27,"code":"    it('should redirect', function () {\n      expect(response.statusCode).to.equal(302);\n      expect(response.getHeader('Location')).to.equal('http://www.example.com/idp');\n      expect(response.getHeader('Content-Length')).to.equal('0');\n    });","file":"middleware/authenticate.redirect.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["middleware/authenticate","redirect with status"],"updatePoint":{"line":49,"column":27,"index":1675},"line":49,"code":"    it('should not set user', function () {\n      expect(request.user).to.be.undefined;\n    });","file":"middleware/authenticate.redirect.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","redirect with status"],"updatePoint":{"line":52,"column":23,"index":1767},"line":52,"code":"    it('should redirect', function () {\n      expect(response.statusCode).to.equal(303);\n      expect(response.getHeader('Location')).to.equal('http://www.example.com/idp');\n      expect(response.getHeader('Content-Length')).to.equal('0');\n    });","file":"middleware/authenticate.redirect.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["middleware/authenticate","redirect using framework function"],"updatePoint":{"line":74,"column":27,"index":2577},"line":74,"code":"    it('should not set user', function () {\n      expect(request.user).to.be.undefined;\n    });","file":"middleware/authenticate.redirect.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","redirect using framework function"],"updatePoint":{"line":77,"column":23,"index":2669},"line":77,"code":"    it('should redirect', function () {\n      expect(response.statusCode).to.equal(302);\n      expect(response.getHeader('Location')).to.equal('http://www.example.com/idp');\n    });","file":"middleware/authenticate.redirect.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["middleware/authenticate","redirect with status using framework function"],"updatePoint":{"line":98,"column":27,"index":3430},"line":98,"code":"    it('should not set user', function () {\n      expect(request.user).to.be.undefined;\n    });","file":"middleware/authenticate.redirect.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","redirect with status using framework function"],"updatePoint":{"line":101,"column":23,"index":3522},"line":101,"code":"    it('should redirect', function () {\n      expect(response.statusCode).to.equal(303);\n      expect(response.getHeader('Location')).to.equal('http://www.example.com/idp');\n    });","file":"middleware/authenticate.redirect.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["middleware/authenticate","success with callback"],"updatePoint":{"line":33,"column":24,"index":951},"line":33,"code":"    it('should not error', function () {\n      expect(error).to.be.null;\n    });","file":"middleware/authenticate.success.callback.test.js","skipped":false,"dir":"test"},{"name":"should pass user to callback","suites":["middleware/authenticate","success with callback"],"updatePoint":{"line":36,"column":36,"index":1044},"line":36,"code":"    it('should pass user to callback', function () {\n      expect(user).to.be.an('object');\n      expect(user.id).to.equal('1');\n      expect(user.username).to.equal('jaredhanson');\n    });","file":"middleware/authenticate.success.callback.test.js","skipped":false,"dir":"test"},{"name":"should pass info to callback","suites":["middleware/authenticate","success with callback"],"updatePoint":{"line":41,"column":36,"index":1234},"line":41,"code":"    it('should pass info to callback', function () {\n      expect(info).to.be.an('object');\n      expect(info.message).to.equal('Hello');\n    });","file":"middleware/authenticate.success.callback.test.js","skipped":false,"dir":"test"},{"name":"should not set user on request","suites":["middleware/authenticate","success with callback"],"updatePoint":{"line":45,"column":38,"index":1382},"line":45,"code":"    it('should not set user on request', function () {\n      expect(request.user).to.be.undefined;\n    });","file":"middleware/authenticate.success.callback.test.js","skipped":false,"dir":"test"},{"name":"should not set authInfo on request","suites":["middleware/authenticate","success with callback"],"updatePoint":{"line":48,"column":42,"index":1493},"line":48,"code":"    it('should not set authInfo on request', function () {\n      expect(request.authInfo).to.be.undefined;\n    });","file":"middleware/authenticate.success.callback.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["middleware/authenticate","success with callback and options passed to middleware"],"updatePoint":{"line":79,"column":24,"index":2337},"line":79,"code":"    it('should not error', function () {\n      expect(error).to.be.null;\n    });","file":"middleware/authenticate.success.callback.test.js","skipped":false,"dir":"test"},{"name":"should pass user to callback","suites":["middleware/authenticate","success with callback and options passed to middleware"],"updatePoint":{"line":82,"column":36,"index":2430},"line":82,"code":"    it('should pass user to callback', function () {\n      expect(user).to.be.an('object');\n      expect(user.id).to.equal('1');\n      expect(user.username).to.equal('jaredhanson');\n    });","file":"middleware/authenticate.success.callback.test.js","skipped":false,"dir":"test"},{"name":"should pass info to callback","suites":["middleware/authenticate","success with callback and options passed to middleware"],"updatePoint":{"line":87,"column":36,"index":2620},"line":87,"code":"    it('should pass info to callback', function () {\n      expect(info).to.be.an('object');\n      expect(info.message).to.equal('Hello');\n    });","file":"middleware/authenticate.success.callback.test.js","skipped":false,"dir":"test"},{"name":"should not set user on request","suites":["middleware/authenticate","success with callback and options passed to middleware"],"updatePoint":{"line":91,"column":38,"index":2768},"line":91,"code":"    it('should not set user on request', function () {\n      expect(request.user).to.be.undefined;\n    });","file":"middleware/authenticate.success.callback.test.js","skipped":false,"dir":"test"},{"name":"should not set authInfo on request","suites":["middleware/authenticate","success with callback and options passed to middleware"],"updatePoint":{"line":94,"column":42,"index":2879},"line":94,"code":"    it('should not set authInfo on request', function () {\n      expect(request.authInfo).to.be.undefined;\n    });","file":"middleware/authenticate.success.callback.test.js","skipped":false,"dir":"test"},{"name":"should set user","suites":["middleware/authenticate","using strategy that specifies message","success with flash message"],"updatePoint":{"line":45,"column":25,"index":1427},"line":45,"code":"      it('should set user', function () {\n        expect(request.user).to.be.an('object');\n        expect(request.user.id).to.equal('1');\n        expect(request.user.username).to.equal('jaredhanson');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should flash message","suites":["middleware/authenticate","using strategy that specifies message","success with flash message"],"updatePoint":{"line":50,"column":30,"index":1643},"line":50,"code":"      it('should flash message', function () {\n        expect(request.message.type).to.equal('success');\n        expect(request.message.msg).to.equal('Welcome!');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","using strategy that specifies message","success with flash message"],"updatePoint":{"line":54,"column":25,"index":1811},"line":54,"code":"      it('should redirect', function () {\n        expect(response.statusCode).to.equal(302);\n        expect(response.getHeader('Location')).to.equal('http://www.example.com/account');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should set user","suites":["middleware/authenticate","using strategy that specifies message","success with flash message using type set by route"],"updatePoint":{"line":97,"column":25,"index":3158},"line":97,"code":"      it('should set user', function () {\n        expect(request.user).to.be.an('object');\n        expect(request.user.id).to.equal('1');\n        expect(request.user.username).to.equal('jaredhanson');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should flash message","suites":["middleware/authenticate","using strategy that specifies message","success with flash message using type set by route"],"updatePoint":{"line":102,"column":30,"index":3374},"line":102,"code":"      it('should flash message', function () {\n        expect(request.message.type).to.equal('info');\n        expect(request.message.msg).to.equal('Welcome!');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","using strategy that specifies message","success with flash message using type set by route"],"updatePoint":{"line":106,"column":25,"index":3539},"line":106,"code":"      it('should redirect', function () {\n        expect(response.statusCode).to.equal(302);\n        expect(response.getHeader('Location')).to.equal('http://www.example.com/account');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should set user","suites":["middleware/authenticate","using strategy that specifies message","success with flash message overridden by route as string"],"updatePoint":{"line":147,"column":25,"index":4870},"line":147,"code":"      it('should set user', function () {\n        expect(request.user).to.be.an('object');\n        expect(request.user.id).to.equal('1');\n        expect(request.user.username).to.equal('jaredhanson');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should flash message","suites":["middleware/authenticate","using strategy that specifies message","success with flash message overridden by route as string"],"updatePoint":{"line":152,"column":30,"index":5086},"line":152,"code":"      it('should flash message', function () {\n        expect(request.message.type).to.equal('success');\n        expect(request.message.msg).to.equal('Login complete');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","using strategy that specifies message","success with flash message overridden by route as string"],"updatePoint":{"line":156,"column":25,"index":5260},"line":156,"code":"      it('should redirect', function () {\n        expect(response.statusCode).to.equal(302);\n        expect(response.getHeader('Location')).to.equal('http://www.example.com/account');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should set user","suites":["middleware/authenticate","using strategy that specifies message","success with flash message overridden by route using options"],"updatePoint":{"line":199,"column":25,"index":6618},"line":199,"code":"      it('should set user', function () {\n        expect(request.user).to.be.an('object');\n        expect(request.user.id).to.equal('1');\n        expect(request.user.username).to.equal('jaredhanson');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should flash message","suites":["middleware/authenticate","using strategy that specifies message","success with flash message overridden by route using options"],"updatePoint":{"line":204,"column":30,"index":6834},"line":204,"code":"      it('should flash message', function () {\n        expect(request.message.type).to.equal('success');\n        expect(request.message.msg).to.equal('OK');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","using strategy that specifies message","success with flash message overridden by route using options"],"updatePoint":{"line":208,"column":25,"index":6996},"line":208,"code":"      it('should redirect', function () {\n        expect(response.statusCode).to.equal(302);\n        expect(response.getHeader('Location')).to.equal('http://www.example.com/account');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should set user","suites":["middleware/authenticate","using strategy that specifies message","success with flash message overridden by route using options with type"],"updatePoint":{"line":252,"column":25,"index":8414},"line":252,"code":"      it('should set user', function () {\n        expect(request.user).to.be.an('object');\n        expect(request.user.id).to.equal('1');\n        expect(request.user.username).to.equal('jaredhanson');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should flash message","suites":["middleware/authenticate","using strategy that specifies message","success with flash message overridden by route using options with type"],"updatePoint":{"line":257,"column":30,"index":8630},"line":257,"code":"      it('should flash message', function () {\n        expect(request.message.type).to.equal('notice');\n        expect(request.message.msg).to.equal('Last login was yesterday');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","using strategy that specifies message","success with flash message overridden by route using options with type"],"updatePoint":{"line":261,"column":25,"index":8813},"line":261,"code":"      it('should redirect', function () {\n        expect(response.statusCode).to.equal(302);\n        expect(response.getHeader('Location')).to.equal('http://www.example.com/account');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should set user","suites":["middleware/authenticate","using strategy that specifies message and type","success with flash message"],"updatePoint":{"line":305,"column":25,"index":10204},"line":305,"code":"      it('should set user', function () {\n        expect(request.user).to.be.an('object');\n        expect(request.user.id).to.equal('1');\n        expect(request.user.username).to.equal('jaredhanson');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should flash message","suites":["middleware/authenticate","using strategy that specifies message and type","success with flash message"],"updatePoint":{"line":310,"column":30,"index":10420},"line":310,"code":"      it('should flash message', function () {\n        expect(request.message.type).to.equal('info');\n        expect(request.message.msg).to.equal('Hello');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","using strategy that specifies message and type","success with flash message"],"updatePoint":{"line":314,"column":25,"index":10582},"line":314,"code":"      it('should redirect', function () {\n        expect(response.statusCode).to.equal(302);\n        expect(response.getHeader('Location')).to.equal('http://www.example.com/account');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should set user","suites":["middleware/authenticate","using strategy that specifies message and type","success with flash message using type set by route"],"updatePoint":{"line":358,"column":25,"index":11948},"line":358,"code":"      it('should set user', function () {\n        expect(request.user).to.be.an('object');\n        expect(request.user.id).to.equal('1');\n        expect(request.user.username).to.equal('jaredhanson');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should flash message","suites":["middleware/authenticate","using strategy that specifies message and type","success with flash message using type set by route"],"updatePoint":{"line":363,"column":30,"index":12164},"line":363,"code":"      it('should flash message', function () {\n        expect(request.message.type).to.equal('ok');\n        expect(request.message.msg).to.equal('Hello');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","using strategy that specifies message and type","success with flash message using type set by route"],"updatePoint":{"line":367,"column":25,"index":12324},"line":367,"code":"      it('should redirect', function () {\n        expect(response.statusCode).to.equal(302);\n        expect(response.getHeader('Location')).to.equal('http://www.example.com/account');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should set user","suites":["middleware/authenticate","using strategy that specifies message and type","success with flash message overridden by route as string"],"updatePoint":{"line":409,"column":25,"index":13670},"line":409,"code":"      it('should set user', function () {\n        expect(request.user).to.be.an('object');\n        expect(request.user.id).to.equal('1');\n        expect(request.user.username).to.equal('jaredhanson');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should flash message","suites":["middleware/authenticate","using strategy that specifies message and type","success with flash message overridden by route as string"],"updatePoint":{"line":414,"column":30,"index":13886},"line":414,"code":"      it('should flash message', function () {\n        expect(request.message.type).to.equal('success');\n        expect(request.message.msg).to.equal('Success!');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","using strategy that specifies message and type","success with flash message overridden by route as string"],"updatePoint":{"line":418,"column":25,"index":14054},"line":418,"code":"      it('should redirect', function () {\n        expect(response.statusCode).to.equal(302);\n        expect(response.getHeader('Location')).to.equal('http://www.example.com/account');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should set user","suites":["middleware/authenticate","using strategy that specifies message and type","success with flash message overridden by route using options"],"updatePoint":{"line":462,"column":25,"index":15435},"line":462,"code":"      it('should set user', function () {\n        expect(request.user).to.be.an('object');\n        expect(request.user.id).to.equal('1');\n        expect(request.user.username).to.equal('jaredhanson');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should flash message","suites":["middleware/authenticate","using strategy that specifies message and type","success with flash message overridden by route using options"],"updatePoint":{"line":467,"column":30,"index":15651},"line":467,"code":"      it('should flash message', function () {\n        expect(request.message.type).to.equal('success');\n        expect(request.message.msg).to.equal('Okay');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","using strategy that specifies message and type","success with flash message overridden by route using options"],"updatePoint":{"line":471,"column":25,"index":15815},"line":471,"code":"      it('should redirect', function () {\n        expect(response.statusCode).to.equal(302);\n        expect(response.getHeader('Location')).to.equal('http://www.example.com/account');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should set user","suites":["middleware/authenticate","using strategy that specifies message and type","success with flash message overridden by route using options with type"],"updatePoint":{"line":516,"column":25,"index":17258},"line":516,"code":"      it('should set user', function () {\n        expect(request.user).to.be.an('object');\n        expect(request.user.id).to.equal('1');\n        expect(request.user.username).to.equal('jaredhanson');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should flash message","suites":["middleware/authenticate","using strategy that specifies message and type","success with flash message overridden by route using options with type"],"updatePoint":{"line":521,"column":30,"index":17474},"line":521,"code":"      it('should flash message', function () {\n        expect(request.message.type).to.equal('warn');\n        expect(request.message.msg).to.equal('Last login from far away place');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","using strategy that specifies message and type","success with flash message overridden by route using options with type"],"updatePoint":{"line":525,"column":25,"index":17661},"line":525,"code":"      it('should redirect', function () {\n        expect(response.statusCode).to.equal(302);\n        expect(response.getHeader('Location')).to.equal('http://www.example.com/account');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should set user","suites":["middleware/authenticate","using strategy that specifies message as string","success with flash message"],"updatePoint":{"line":566,"column":25,"index":19002},"line":566,"code":"      it('should set user', function () {\n        expect(request.user).to.be.an('object');\n        expect(request.user.id).to.equal('1');\n        expect(request.user.username).to.equal('jaredhanson');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should flash message","suites":["middleware/authenticate","using strategy that specifies message as string","success with flash message"],"updatePoint":{"line":571,"column":30,"index":19218},"line":571,"code":"      it('should flash message', function () {\n        expect(request.message.type).to.equal('success');\n        expect(request.message.msg).to.equal('Greetings');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","using strategy that specifies message as string","success with flash message"],"updatePoint":{"line":575,"column":25,"index":19387},"line":575,"code":"      it('should redirect', function () {\n        expect(response.statusCode).to.equal(302);\n        expect(response.getHeader('Location')).to.equal('http://www.example.com/account');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should set user","suites":["middleware/authenticate","using strategy that specifies message as string","success with flash message using type set by route"],"updatePoint":{"line":616,"column":25,"index":20704},"line":616,"code":"      it('should set user', function () {\n        expect(request.user).to.be.an('object');\n        expect(request.user.id).to.equal('1');\n        expect(request.user.username).to.equal('jaredhanson');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should flash message","suites":["middleware/authenticate","using strategy that specifies message as string","success with flash message using type set by route"],"updatePoint":{"line":621,"column":30,"index":20920},"line":621,"code":"      it('should flash message', function () {\n        expect(request.message.type).to.equal('info');\n        expect(request.message.msg).to.equal('Greetings');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","using strategy that specifies message as string","success with flash message using type set by route"],"updatePoint":{"line":625,"column":25,"index":21086},"line":625,"code":"      it('should redirect', function () {\n        expect(response.statusCode).to.equal(302);\n        expect(response.getHeader('Location')).to.equal('http://www.example.com/account');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should set user","suites":["middleware/authenticate","using strategy that specifies message as string","success with flash message overridden by route as string"],"updatePoint":{"line":664,"column":25,"index":22387},"line":664,"code":"      it('should set user', function () {\n        expect(request.user).to.be.an('object');\n        expect(request.user.id).to.equal('1');\n        expect(request.user.username).to.equal('jaredhanson');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should flash message","suites":["middleware/authenticate","using strategy that specifies message as string","success with flash message overridden by route as string"],"updatePoint":{"line":669,"column":30,"index":22603},"line":669,"code":"      it('should flash message', function () {\n        expect(request.message.type).to.equal('success');\n        expect(request.message.msg).to.equal('Login complete');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","using strategy that specifies message as string","success with flash message overridden by route as string"],"updatePoint":{"line":673,"column":25,"index":22777},"line":673,"code":"      it('should redirect', function () {\n        expect(response.statusCode).to.equal(302);\n        expect(response.getHeader('Location')).to.equal('http://www.example.com/account');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should set user","suites":["middleware/authenticate","using strategy that specifies message as string","success with flash message overridden by route using options"],"updatePoint":{"line":714,"column":25,"index":24105},"line":714,"code":"      it('should set user', function () {\n        expect(request.user).to.be.an('object');\n        expect(request.user.id).to.equal('1');\n        expect(request.user.username).to.equal('jaredhanson');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should flash message","suites":["middleware/authenticate","using strategy that specifies message as string","success with flash message overridden by route using options"],"updatePoint":{"line":719,"column":30,"index":24321},"line":719,"code":"      it('should flash message', function () {\n        expect(request.message.type).to.equal('success');\n        expect(request.message.msg).to.equal('OK');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","using strategy that specifies message as string","success with flash message overridden by route using options"],"updatePoint":{"line":723,"column":25,"index":24483},"line":723,"code":"      it('should redirect', function () {\n        expect(response.statusCode).to.equal(302);\n        expect(response.getHeader('Location')).to.equal('http://www.example.com/account');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should set user","suites":["middleware/authenticate","using strategy that specifies message as string","success with flash message overridden by route using options with type"],"updatePoint":{"line":765,"column":25,"index":25871},"line":765,"code":"      it('should set user', function () {\n        expect(request.user).to.be.an('object');\n        expect(request.user.id).to.equal('1');\n        expect(request.user.username).to.equal('jaredhanson');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should flash message","suites":["middleware/authenticate","using strategy that specifies message as string","success with flash message overridden by route using options with type"],"updatePoint":{"line":770,"column":30,"index":26087},"line":770,"code":"      it('should flash message', function () {\n        expect(request.message.type).to.equal('notice');\n        expect(request.message.msg).to.equal('Last login was yesterday');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","using strategy that specifies message as string","success with flash message overridden by route using options with type"],"updatePoint":{"line":774,"column":25,"index":26270},"line":774,"code":"      it('should redirect', function () {\n        expect(response.statusCode).to.equal(302);\n        expect(response.getHeader('Location')).to.equal('http://www.example.com/account');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should set user","suites":["middleware/authenticate","using strategy that does not specify message","success with flash message left up to strategy"],"updatePoint":{"line":815,"column":25,"index":27615},"line":815,"code":"      it('should set user', function () {\n        expect(request.user).to.be.an('object');\n        expect(request.user.id).to.equal('1');\n        expect(request.user.username).to.equal('jaredhanson');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should not flash message","suites":["middleware/authenticate","using strategy that does not specify message","success with flash message left up to strategy"],"updatePoint":{"line":820,"column":34,"index":27835},"line":820,"code":"      it('should not flash message', function () {\n        expect(request.message).to.be.undefined;\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","using strategy that does not specify message","success with flash message left up to strategy"],"updatePoint":{"line":823,"column":25,"index":27936},"line":823,"code":"      it('should redirect', function () {\n        expect(response.statusCode).to.equal(302);\n        expect(response.getHeader('Location')).to.equal('http://www.example.com/account');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should set user","suites":["middleware/authenticate","using strategy that does not specify message","success with flash message left up to strategy using type set by route"],"updatePoint":{"line":864,"column":25,"index":29260},"line":864,"code":"      it('should set user', function () {\n        expect(request.user).to.be.an('object');\n        expect(request.user.id).to.equal('1');\n        expect(request.user.username).to.equal('jaredhanson');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should not flash message","suites":["middleware/authenticate","using strategy that does not specify message","success with flash message left up to strategy using type set by route"],"updatePoint":{"line":869,"column":34,"index":29480},"line":869,"code":"      it('should not flash message', function () {\n        expect(request.message).to.be.undefined;\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","using strategy that does not specify message","success with flash message left up to strategy using type set by route"],"updatePoint":{"line":872,"column":25,"index":29581},"line":872,"code":"      it('should redirect', function () {\n        expect(response.statusCode).to.equal(302);\n        expect(response.getHeader('Location')).to.equal('http://www.example.com/account');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should set user","suites":["middleware/authenticate","using strategy that does not specify message","success with flash message specified by route as string"],"updatePoint":{"line":911,"column":25,"index":30868},"line":911,"code":"      it('should set user', function () {\n        expect(request.user).to.be.an('object');\n        expect(request.user.id).to.equal('1');\n        expect(request.user.username).to.equal('jaredhanson');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should flash message","suites":["middleware/authenticate","using strategy that does not specify message","success with flash message specified by route as string"],"updatePoint":{"line":916,"column":30,"index":31084},"line":916,"code":"      it('should flash message', function () {\n        expect(request.message.type).to.equal('success');\n        expect(request.message.msg).to.equal('Login complete');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","using strategy that does not specify message","success with flash message specified by route as string"],"updatePoint":{"line":920,"column":25,"index":31258},"line":920,"code":"      it('should redirect', function () {\n        expect(response.statusCode).to.equal(302);\n        expect(response.getHeader('Location')).to.equal('http://www.example.com/account');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should set user","suites":["middleware/authenticate","using strategy that does not specify message","success with flash message specified by route using options"],"updatePoint":{"line":961,"column":25,"index":32572},"line":961,"code":"      it('should set user', function () {\n        expect(request.user).to.be.an('object');\n        expect(request.user.id).to.equal('1');\n        expect(request.user.username).to.equal('jaredhanson');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should flash message","suites":["middleware/authenticate","using strategy that does not specify message","success with flash message specified by route using options"],"updatePoint":{"line":966,"column":30,"index":32788},"line":966,"code":"      it('should flash message', function () {\n        expect(request.message.type).to.equal('success');\n        expect(request.message.msg).to.equal('OK');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","using strategy that does not specify message","success with flash message specified by route using options"],"updatePoint":{"line":970,"column":25,"index":32950},"line":970,"code":"      it('should redirect', function () {\n        expect(response.statusCode).to.equal(302);\n        expect(response.getHeader('Location')).to.equal('http://www.example.com/account');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should set user","suites":["middleware/authenticate","using strategy that does not specify message","success with flash message specified by route using options with type"],"updatePoint":{"line":1012,"column":25,"index":34324},"line":1012,"code":"      it('should set user', function () {\n        expect(request.user).to.be.an('object');\n        expect(request.user.id).to.equal('1');\n        expect(request.user.username).to.equal('jaredhanson');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should flash message","suites":["middleware/authenticate","using strategy that does not specify message","success with flash message specified by route using options with type"],"updatePoint":{"line":1017,"column":30,"index":34540},"line":1017,"code":"      it('should flash message', function () {\n        expect(request.message.type).to.equal('notice');\n        expect(request.message.msg).to.equal('Last login was yesterday');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","using strategy that does not specify message","success with flash message specified by route using options with type"],"updatePoint":{"line":1021,"column":25,"index":34723},"line":1021,"code":"      it('should redirect', function () {\n        expect(response.statusCode).to.equal(302);\n        expect(response.getHeader('Location')).to.equal('http://www.example.com/account');\n      });","file":"middleware/authenticate.success.flash.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["middleware/authenticate","success with info"],"updatePoint":{"line":35,"column":24,"index":1011},"line":35,"code":"    it('should not error', function () {\n      expect(error).to.be.undefined;\n    });","file":"middleware/authenticate.success.info.test.js","skipped":false,"dir":"test"},{"name":"should set user","suites":["middleware/authenticate","success with info"],"updatePoint":{"line":38,"column":23,"index":1096},"line":38,"code":"    it('should set user', function () {\n      expect(request.user).to.be.an('object');\n      expect(request.user.id).to.equal('1');\n      expect(request.user.username).to.equal('jaredhanson');\n    });","file":"middleware/authenticate.success.info.test.js","skipped":false,"dir":"test"},{"name":"should set authInfo","suites":["middleware/authenticate","success with info"],"updatePoint":{"line":43,"column":27,"index":1301},"line":43,"code":"    it('should set authInfo', function () {\n      expect(request.authInfo).to.be.an('object');\n      expect(Object.keys(request.authInfo)).to.have.length(2);\n      expect(request.authInfo.clientId).to.equal('123');\n      expect(request.authInfo.scope).to.equal('read');\n    });","file":"middleware/authenticate.success.info.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["middleware/authenticate","success with info that is transformed"],"updatePoint":{"line":86,"column":24,"index":2542},"line":86,"code":"    it('should not error', function () {\n      expect(error).to.be.undefined;\n    });","file":"middleware/authenticate.success.info.test.js","skipped":false,"dir":"test"},{"name":"should set user","suites":["middleware/authenticate","success with info that is transformed"],"updatePoint":{"line":89,"column":23,"index":2627},"line":89,"code":"    it('should set user', function () {\n      expect(request.user).to.be.an('object');\n      expect(request.user.id).to.equal('1');\n      expect(request.user.username).to.equal('jaredhanson');\n    });","file":"middleware/authenticate.success.info.test.js","skipped":false,"dir":"test"},{"name":"should set authInfo","suites":["middleware/authenticate","success with info that is transformed"],"updatePoint":{"line":94,"column":27,"index":2832},"line":94,"code":"    it('should set authInfo', function () {\n      expect(request.authInfo).to.be.an('object');\n      expect(Object.keys(request.authInfo)).to.have.length(3);\n      expect(request.authInfo.clientId).to.equal('123');\n      expect(request.authInfo.client.name).to.equal('Foo');\n      expect(request.authInfo.scope).to.equal('read');\n    });","file":"middleware/authenticate.success.info.test.js","skipped":false,"dir":"test"},{"name":"should error","suites":["middleware/authenticate","success with info, but transform that encounters an error"],"updatePoint":{"line":132,"column":20,"index":4057},"line":132,"code":"    it('should error', function () {\n      expect(error).to.be.an.instanceOf(Error);\n      expect(error.message).to.equal('something went wrong');\n    });","file":"middleware/authenticate.success.info.test.js","skipped":false,"dir":"test"},{"name":"should set user","suites":["middleware/authenticate","success with info, but transform that encounters an error"],"updatePoint":{"line":136,"column":23,"index":4215},"line":136,"code":"    it('should set user', function () {\n      expect(request.user).to.be.an('object');\n      expect(request.user.id).to.equal('1');\n      expect(request.user.username).to.equal('jaredhanson');\n    });","file":"middleware/authenticate.success.info.test.js","skipped":false,"dir":"test"},{"name":"should not set authInfo","suites":["middleware/authenticate","success with info, but transform that encounters an error"],"updatePoint":{"line":141,"column":31,"index":4424},"line":141,"code":"    it('should not set authInfo', function () {\n      expect(request.authInfo).to.be.undefined;\n    });","file":"middleware/authenticate.success.info.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["middleware/authenticate","success with info, but option that disables info"],"updatePoint":{"line":174,"column":24,"index":5331},"line":174,"code":"    it('should not error', function () {\n      expect(error).to.be.undefined;\n    });","file":"middleware/authenticate.success.info.test.js","skipped":false,"dir":"test"},{"name":"should set user","suites":["middleware/authenticate","success with info, but option that disables info"],"updatePoint":{"line":177,"column":23,"index":5416},"line":177,"code":"    it('should set user', function () {\n      expect(request.user).to.be.an('object');\n      expect(request.user.id).to.equal('1');\n      expect(request.user.username).to.equal('jaredhanson');\n    });","file":"middleware/authenticate.success.info.test.js","skipped":false,"dir":"test"},{"name":"should not set authInfo","suites":["middleware/authenticate","success with info, but option that disables info"],"updatePoint":{"line":182,"column":31,"index":5625},"line":182,"code":"    it('should not set authInfo', function () {\n      expect(request.authInfo).to.be.undefined;\n    });","file":"middleware/authenticate.success.info.test.js","skipped":false,"dir":"test"},{"name":"should set user","suites":["middleware/authenticate","success with message set by route"],"updatePoint":{"line":37,"column":23,"index":1145},"line":37,"code":"    it('should set user', function () {\n      expect(request.user).to.be.an('object');\n      expect(request.user.id).to.equal('1');\n      expect(request.user.username).to.equal('jaredhanson');\n    });","file":"middleware/authenticate.success.message.test.js","skipped":false,"dir":"test"},{"name":"should add message to session","suites":["middleware/authenticate","success with message set by route"],"updatePoint":{"line":42,"column":37,"index":1360},"line":42,"code":"    it('should add message to session', function () {\n      expect(request.session.messages).to.have.length(1);\n      expect(request.session.messages[0]).to.equal('Login complete');\n    });","file":"middleware/authenticate.success.message.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","success with message set by route"],"updatePoint":{"line":46,"column":23,"index":1536},"line":46,"code":"    it('should redirect', function () {\n      expect(response.statusCode).to.equal(302);\n      expect(response.getHeader('Location')).to.equal('http://www.example.com/account');\n    });","file":"middleware/authenticate.success.message.test.js","skipped":false,"dir":"test"},{"name":"should set user","suites":["middleware/authenticate","success with message set by route that is added to messages"],"updatePoint":{"line":82,"column":23,"index":2696},"line":82,"code":"    it('should set user', function () {\n      expect(request.user).to.be.an('object');\n      expect(request.user.id).to.equal('1');\n      expect(request.user.username).to.equal('jaredhanson');\n    });","file":"middleware/authenticate.success.message.test.js","skipped":false,"dir":"test"},{"name":"should add message to session","suites":["middleware/authenticate","success with message set by route that is added to messages"],"updatePoint":{"line":87,"column":37,"index":2911},"line":87,"code":"    it('should add message to session', function () {\n      expect(request.session.messages).to.have.length(2);\n      expect(request.session.messages[0]).to.equal('I exist!');\n      expect(request.session.messages[1]).to.equal('Login complete');\n    });","file":"middleware/authenticate.success.message.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","success with message set by route that is added to messages"],"updatePoint":{"line":92,"column":23,"index":3151},"line":92,"code":"    it('should redirect', function () {\n      expect(response.statusCode).to.equal(302);\n      expect(response.getHeader('Location')).to.equal('http://www.example.com/account');\n    });","file":"middleware/authenticate.success.message.test.js","skipped":false,"dir":"test"},{"name":"should set user","suites":["middleware/authenticate","success with message set by strategy"],"updatePoint":{"line":127,"column":23,"index":4231},"line":127,"code":"    it('should set user', function () {\n      expect(request.user).to.be.an('object');\n      expect(request.user.id).to.equal('1');\n      expect(request.user.username).to.equal('jaredhanson');\n    });","file":"middleware/authenticate.success.message.test.js","skipped":false,"dir":"test"},{"name":"should add message to session","suites":["middleware/authenticate","success with message set by strategy"],"updatePoint":{"line":132,"column":37,"index":4446},"line":132,"code":"    it('should add message to session', function () {\n      expect(request.session.messages).to.have.length(1);\n      expect(request.session.messages[0]).to.equal('Welcome!');\n    });","file":"middleware/authenticate.success.message.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","success with message set by strategy"],"updatePoint":{"line":136,"column":23,"index":4616},"line":136,"code":"    it('should redirect', function () {\n      expect(response.statusCode).to.equal(302);\n      expect(response.getHeader('Location')).to.equal('http://www.example.com/account');\n    });","file":"middleware/authenticate.success.message.test.js","skipped":false,"dir":"test"},{"name":"should set user","suites":["middleware/authenticate","success with message set by strategy with extra info"],"updatePoint":{"line":172,"column":23,"index":5735},"line":172,"code":"    it('should set user', function () {\n      expect(request.user).to.be.an('object');\n      expect(request.user.id).to.equal('1');\n      expect(request.user.username).to.equal('jaredhanson');\n    });","file":"middleware/authenticate.success.message.test.js","skipped":false,"dir":"test"},{"name":"should add message to session","suites":["middleware/authenticate","success with message set by strategy with extra info"],"updatePoint":{"line":177,"column":37,"index":5950},"line":177,"code":"    it('should add message to session', function () {\n      expect(request.session.messages).to.have.length(1);\n      expect(request.session.messages[0]).to.equal('Welcome!');\n    });","file":"middleware/authenticate.success.message.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","success with message set by strategy with extra info"],"updatePoint":{"line":181,"column":23,"index":6120},"line":181,"code":"    it('should redirect', function () {\n      expect(response.statusCode).to.equal(302);\n      expect(response.getHeader('Location')).to.equal('http://www.example.com/account');\n    });","file":"middleware/authenticate.success.message.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["middleware/authenticate","with multiple strategies, the first of which succeeds"],"updatePoint":{"line":37,"column":24,"index":1129},"line":37,"code":"    it('should not error', function () {\n      expect(error).to.be.undefined;\n    });","file":"middleware/authenticate.success.multi.test.js","skipped":false,"dir":"test"},{"name":"should set user","suites":["middleware/authenticate","with multiple strategies, the first of which succeeds"],"updatePoint":{"line":40,"column":23,"index":1214},"line":40,"code":"    it('should set user', function () {\n      expect(request.user).to.be.an('object');\n      expect(request.user.username).to.equal('bob-a');\n    });","file":"middleware/authenticate.success.multi.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["middleware/authenticate","with multiple strategies, the second of which succeeds"],"updatePoint":{"line":72,"column":24,"index":2203},"line":72,"code":"    it('should not error', function () {\n      expect(error).to.be.undefined;\n    });","file":"middleware/authenticate.success.multi.test.js","skipped":false,"dir":"test"},{"name":"should set user","suites":["middleware/authenticate","with multiple strategies, the second of which succeeds"],"updatePoint":{"line":75,"column":23,"index":2288},"line":75,"code":"    it('should set user', function () {\n      expect(request.user).to.be.an('object');\n      expect(request.user.username).to.equal('bob-b');\n    });","file":"middleware/authenticate.success.multi.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["middleware/authenticate","success"],"updatePoint":{"line":32,"column":24,"index":943},"line":32,"code":"    it('should not error', function () {\n      expect(error).to.be.undefined;\n    });","file":"middleware/authenticate.success.test.js","skipped":false,"dir":"test"},{"name":"should set user","suites":["middleware/authenticate","success"],"updatePoint":{"line":35,"column":23,"index":1028},"line":35,"code":"    it('should set user', function () {\n      expect(request.user).to.be.an('object');\n      expect(request.user.id).to.equal('1');\n      expect(request.user.username).to.equal('jaredhanson');\n    });","file":"middleware/authenticate.success.test.js","skipped":false,"dir":"test"},{"name":"should set authInfo","suites":["middleware/authenticate","success"],"updatePoint":{"line":40,"column":27,"index":1233},"line":40,"code":"    it('should set authInfo', function () {\n      expect(request.authInfo).to.be.an('object');\n      expect(Object.keys(request.authInfo)).to.have.length(0);\n    });","file":"middleware/authenticate.success.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["middleware/authenticate","success that assigns a specific property"],"updatePoint":{"line":71,"column":24,"index":2150},"line":71,"code":"    it('should not error', function () {\n      expect(error).to.be.undefined;\n    });","file":"middleware/authenticate.success.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["middleware/authenticate","success that assigns a specific property"],"updatePoint":{"line":74,"column":27,"index":2239},"line":74,"code":"    it('should not set user', function () {\n      expect(request.user).to.be.undefined;\n    });","file":"middleware/authenticate.success.test.js","skipped":false,"dir":"test"},{"name":"should set account","suites":["middleware/authenticate","success that assigns a specific property"],"updatePoint":{"line":77,"column":26,"index":2334},"line":77,"code":"    it('should set account', function () {\n      expect(request.account).to.be.an('object');\n      expect(request.account.id).to.equal('1');\n      expect(request.account.username).to.equal('jaredhanson');\n    });","file":"middleware/authenticate.success.test.js","skipped":false,"dir":"test"},{"name":"should not set authInfo","suites":["middleware/authenticate","success that assigns a specific property"],"updatePoint":{"line":82,"column":31,"index":2552},"line":82,"code":"    it('should not set authInfo', function () {\n      expect(request.authInfo).to.be.undefined;\n    });","file":"middleware/authenticate.success.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["middleware/authenticate","success with strategy-specific options"],"updatePoint":{"line":118,"column":24,"index":3602},"line":118,"code":"    it('should not error', function () {\n      expect(error).to.be.undefined;\n    });","file":"middleware/authenticate.success.test.js","skipped":false,"dir":"test"},{"name":"should set user","suites":["middleware/authenticate","success with strategy-specific options"],"updatePoint":{"line":121,"column":23,"index":3687},"line":121,"code":"    it('should set user', function () {\n      expect(request.user).to.be.an('object');\n      expect(request.user.id).to.equal('1');\n      expect(request.user.username).to.equal('jaredhanson');\n      expect(request.user.email).to.equal('jaredhanson@example.com');\n    });","file":"middleware/authenticate.success.test.js","skipped":false,"dir":"test"},{"name":"should set authInfo","suites":["middleware/authenticate","success with strategy-specific options"],"updatePoint":{"line":127,"column":27,"index":3962},"line":127,"code":"    it('should set authInfo', function () {\n      expect(request.authInfo).to.be.an('object');\n      expect(Object.keys(request.authInfo)).to.have.length(0);\n    });","file":"middleware/authenticate.success.test.js","skipped":false,"dir":"test"},{"name":"should set user","suites":["middleware/authenticate","success with redirect"],"updatePoint":{"line":158,"column":23,"index":4908},"line":158,"code":"    it('should set user', function () {\n      expect(request.user).to.be.an('object');\n      expect(request.user.id).to.equal('1');\n      expect(request.user.username).to.equal('jaredhanson');\n    });","file":"middleware/authenticate.success.test.js","skipped":false,"dir":"test"},{"name":"should set authInfo","suites":["middleware/authenticate","success with redirect"],"updatePoint":{"line":163,"column":27,"index":5113},"line":163,"code":"    it('should set authInfo', function () {\n      expect(request.authInfo).to.be.an('object');\n      expect(Object.keys(request.authInfo)).to.have.length(0);\n    });","file":"middleware/authenticate.success.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","success with redirect"],"updatePoint":{"line":167,"column":23,"index":5275},"line":167,"code":"    it('should redirect', function () {\n      expect(response.statusCode).to.equal(302);\n      expect(response.getHeader('Location')).to.equal('http://www.example.com/account');\n    });","file":"middleware/authenticate.success.test.js","skipped":false,"dir":"test"},{"name":"should set user","suites":["middleware/authenticate","success with return to previous location"],"updatePoint":{"line":201,"column":23,"index":6361},"line":201,"code":"    it('should set user', function () {\n      expect(request.user).to.be.an('object');\n      expect(request.user.id).to.equal('1');\n      expect(request.user.username).to.equal('jaredhanson');\n    });","file":"middleware/authenticate.success.test.js","skipped":false,"dir":"test"},{"name":"should set authInfo","suites":["middleware/authenticate","success with return to previous location"],"updatePoint":{"line":206,"column":27,"index":6566},"line":206,"code":"    it('should set authInfo', function () {\n      expect(request.authInfo).to.be.an('object');\n      expect(Object.keys(request.authInfo)).to.have.length(0);\n    });","file":"middleware/authenticate.success.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","success with return to previous location"],"updatePoint":{"line":210,"column":23,"index":6728},"line":210,"code":"    it('should redirect', function () {\n      expect(response.statusCode).to.equal(302);\n      expect(response.getHeader('Location')).to.equal('http://www.example.com/return');\n    });","file":"middleware/authenticate.success.test.js","skipped":false,"dir":"test"},{"name":"should move return to from session","suites":["middleware/authenticate","success with return to previous location"],"updatePoint":{"line":214,"column":42,"index":6932},"line":214,"code":"    it('should move return to from session', function () {\n      expect(request.session.returnTo).to.be.undefined;\n    });","file":"middleware/authenticate.success.test.js","skipped":false,"dir":"test"},{"name":"should set user","suites":["middleware/authenticate","success with return to default location"],"updatePoint":{"line":244,"column":23,"index":7848},"line":244,"code":"    it('should set user', function () {\n      expect(request.user).to.be.an('object');\n      expect(request.user.id).to.equal('1');\n      expect(request.user.username).to.equal('jaredhanson');\n    });","file":"middleware/authenticate.success.test.js","skipped":false,"dir":"test"},{"name":"should set authInfo","suites":["middleware/authenticate","success with return to default location"],"updatePoint":{"line":249,"column":27,"index":8053},"line":249,"code":"    it('should set authInfo', function () {\n      expect(request.authInfo).to.be.an('object');\n      expect(Object.keys(request.authInfo)).to.have.length(0);\n    });","file":"middleware/authenticate.success.test.js","skipped":false,"dir":"test"},{"name":"should redirect","suites":["middleware/authenticate","success with return to default location"],"updatePoint":{"line":253,"column":23,"index":8215},"line":253,"code":"    it('should redirect', function () {\n      expect(response.statusCode).to.equal(302);\n      expect(response.getHeader('Location')).to.equal('http://www.example.com/default');\n    });","file":"middleware/authenticate.success.test.js","skipped":false,"dir":"test"},{"name":"should error","suites":["middleware/authenticate","success, but login that encounters an error"],"updatePoint":{"line":281,"column":20,"index":9115},"line":281,"code":"    it('should error', function () {\n      expect(error).to.be.an.instanceOf(Error);\n      expect(error.message).to.equal('something went wrong');\n    });","file":"middleware/authenticate.success.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["middleware/authenticate","success, but login that encounters an error"],"updatePoint":{"line":285,"column":27,"index":9277},"line":285,"code":"    it('should not set user', function () {\n      expect(request.user).to.be.undefined;\n    });","file":"middleware/authenticate.success.test.js","skipped":false,"dir":"test"},{"name":"should not set authInfo","suites":["middleware/authenticate","success, but login that encounters an error"],"updatePoint":{"line":288,"column":31,"index":9377},"line":288,"code":"    it('should not set authInfo', function () {\n      expect(request.authInfo).to.be.undefined;\n    });","file":"middleware/authenticate.success.test.js","skipped":false,"dir":"test"},{"name":"should be named authenticate","suites":["middleware/authenticate"],"updatePoint":{"line":8,"column":34,"index":283},"line":8,"code":"  it('should be named authenticate', function () {\n    expect(authenticate().name).to.equal('authenticate');\n  });","file":"middleware/authenticate.test.js","skipped":false,"dir":"test"},{"name":"should error","suites":["middleware/authenticate","with unknown strategy"],"updatePoint":{"line":26,"column":20,"index":827},"line":26,"code":"    it('should error', function () {\n      expect(error).to.be.an.instanceOf(Error);\n      expect(error.message).to.equal('Unknown authentication strategy \"foo\"');\n    });","file":"middleware/authenticate.test.js","skipped":false,"dir":"test"},{"name":"should not set user","suites":["middleware/authenticate","with unknown strategy"],"updatePoint":{"line":30,"column":27,"index":1006},"line":30,"code":"    it('should not set user', function () {\n      expect(request.user).to.be.undefined;\n    });","file":"middleware/authenticate.test.js","skipped":false,"dir":"test"},{"name":"should not set authInfo","suites":["middleware/authenticate","with unknown strategy"],"updatePoint":{"line":33,"column":31,"index":1106},"line":33,"code":"    it('should not set authInfo', function () {\n      expect(request.authInfo).to.be.undefined;\n    });","file":"middleware/authenticate.test.js","skipped":false,"dir":"test"},{"name":"should be named initialize","suites":["middleware/initialize"],"updatePoint":{"line":8,"column":32,"index":275},"line":8,"code":"  it('should be named initialize', function () {\n    expect(initialize().name).to.equal('initialize');\n  });","file":"middleware/initialize.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["middleware/initialize","handling a request without a session"],"updatePoint":{"line":22,"column":24,"index":715},"line":22,"code":"    it('should not error', function () {\n      expect(error).to.be.undefined;\n    });","file":"middleware/initialize.test.js","skipped":false,"dir":"test"},{"name":"should expose authenticator on internal request property","suites":["middleware/initialize","handling a request without a session"],"updatePoint":{"line":25,"column":64,"index":841},"line":25,"code":"    it('should expose authenticator on internal request property', function () {\n      expect(request._passport).to.be.an('object');\n      expect(request._passport.instance).to.be.an.instanceOf(Passport);\n      expect(request._passport.instance).to.equal(passport);\n      expect(request._passport.instance._sm).to.be.an('object');\n      expect(request._passport.instance._userProperty).to.equal('user');\n    });","file":"middleware/initialize.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["middleware/initialize","handling a request with a new session"],"updatePoint":{"line":45,"column":24,"index":1585},"line":45,"code":"    it('should not error', function () {\n      expect(error).to.be.undefined;\n    });","file":"middleware/initialize.test.js","skipped":false,"dir":"test"},{"name":"should not initialize namespace within session","suites":["middleware/initialize","handling a request with a new session"],"updatePoint":{"line":48,"column":54,"index":1701},"line":48,"code":"    it('should not initialize namespace within session', function () {\n      expect(request.session.passport).to.be.undefined;\n    });","file":"middleware/initialize.test.js","skipped":false,"dir":"test"},{"name":"should expose authenticator on internal request property","suites":["middleware/initialize","handling a request with a new session"],"updatePoint":{"line":51,"column":64,"index":1846},"line":51,"code":"    it('should expose authenticator on internal request property', function () {\n      expect(request._passport).to.be.an('object');\n      expect(request._passport.instance).to.be.an.instanceOf(Passport);\n      expect(request._passport.instance).to.equal(passport);\n      expect(request._passport.instance._sm).to.be.an('object');\n      expect(request._passport.instance._userProperty).to.equal('user');\n    });","file":"middleware/initialize.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["middleware/initialize","handling a request with an existing session"],"updatePoint":{"line":73,"column":24,"index":2677},"line":73,"code":"    it('should not error', function () {\n      expect(error).to.be.undefined;\n    });","file":"middleware/initialize.test.js","skipped":false,"dir":"test"},{"name":"should maintain data within session","suites":["middleware/initialize","handling a request with an existing session"],"updatePoint":{"line":76,"column":43,"index":2782},"line":76,"code":"    it('should maintain data within session', function () {\n      expect(request.session.passport).to.be.an('object');\n      expect(Object.keys(request.session.passport)).to.have.length(1);\n      expect(request.session.passport.user).to.equal('123456');\n    });","file":"middleware/initialize.test.js","skipped":false,"dir":"test"},{"name":"should expose authenticator on internal request property","suites":["middleware/initialize","handling a request with an existing session"],"updatePoint":{"line":81,"column":64,"index":3065},"line":81,"code":"    it('should expose authenticator on internal request property', function () {\n      expect(request._passport).to.be.an('object');\n      expect(request._passport.instance).to.be.an.instanceOf(Passport);\n      expect(request._passport.instance).to.equal(passport);\n      expect(request._passport.instance._sm).to.be.an('object');\n      expect(request._passport.instance._userProperty).to.equal('user');\n    });","file":"middleware/initialize.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["middleware/initialize","handling a request with an existing session using custom session key"],"updatePoint":{"line":104,"column":24,"index":3971},"line":104,"code":"    it('should not error', function () {\n      expect(error).to.be.undefined;\n    });","file":"middleware/initialize.test.js","skipped":false,"dir":"test"},{"name":"should maintain data within session","suites":["middleware/initialize","handling a request with an existing session using custom session key"],"updatePoint":{"line":107,"column":43,"index":4076},"line":107,"code":"    it('should maintain data within session', function () {\n      expect(request.session.authentication).to.be.an('object');\n      expect(Object.keys(request.session.authentication)).to.have.length(1);\n      expect(request.session.authentication.user).to.equal('123456');\n    });","file":"middleware/initialize.test.js","skipped":false,"dir":"test"},{"name":"should expose authenticator on internal request property","suites":["middleware/initialize","handling a request with an existing session using custom session key"],"updatePoint":{"line":112,"column":64,"index":4377},"line":112,"code":"    it('should expose authenticator on internal request property', function () {\n      expect(request._passport).to.be.an('object');\n      expect(request._passport.instance).to.be.an.instanceOf(Passport);\n      expect(request._passport.instance).to.equal(passport);\n      expect(request._passport.instance._sm).to.be.an('object');\n      expect(request._passport.instance._userProperty).to.equal('user');\n    });","file":"middleware/initialize.test.js","skipped":false,"dir":"test"},{"name":"should not error","suites":["middleware/initialize","handling a request with a new session without compat mode"],"updatePoint":{"line":134,"column":24,"index":5174},"line":134,"code":"    it('should not error', function () {\n      expect(error).to.be.undefined;\n    });","file":"middleware/initialize.test.js","skipped":false,"dir":"test"},{"name":"should not initialize namespace within session","suites":["middleware/initialize","handling a request with a new session without compat mode"],"updatePoint":{"line":137,"column":54,"index":5290},"line":137,"code":"    it('should not initialize namespace within session', function () {\n      expect(request.session.passport).to.be.undefined;\n    });","file":"middleware/initialize.test.js","skipped":false,"dir":"test"},{"name":"should expose authenticator on internal request property","suites":["middleware/initialize","handling a request with a new session without compat mode"],"updatePoint":{"line":140,"column":64,"index":5435},"line":140,"code":"    it('should expose authenticator on internal request property', function () {\n      expect(request._passport).to.be.undefined;\n    });","file":"middleware/initialize.test.js","skipped":false,"dir":"test"},{"name":"should expose singleton authenticator","suites":["passport"],"updatePoint":{"line":5,"column":43,"index":144},"line":5,"code":"  it('should expose singleton authenticator', function () {\n    expect(passport).to.be.an('object');\n    expect(passport).to.be.an.instanceOf(passport.Authenticator);\n  });","file":"package.test.js","skipped":false,"dir":"test"},{"name":"should export constructors","suites":["passport"],"updatePoint":{"line":9,"column":32,"index":306},"line":9,"code":"  it('should export constructors', function () {\n    expect(passport.Authenticator).to.equal(passport.Passport);\n    expect(passport.Authenticator).to.be.a('function');\n    expect(passport.Strategy).to.be.a('function');\n  });","file":"package.test.js","skipped":false,"dir":"test"},{"name":"should export strategies","suites":["passport"],"updatePoint":{"line":14,"column":30,"index":530},"line":14,"code":"  it('should export strategies', function () {\n    expect(passport.strategies.SessionStrategy).to.be.a('function');\n  });","file":"package.test.js","skipped":false,"dir":"test"},{"name":"should spy correctly","suites":["SessionStrategy","handling a request with a login session, pausing for deserialization"],"updatePoint":{"line":47,"column":28,"index":1249},"line":47,"code":"    it('should spy correctly', function () {\n      expect(spy).to.have.length(2);\n    });","file":"strategies/session.pause.test.js","skipped":false,"dir":"test"},{"name":"should pass","suites":["SessionStrategy","handling a request with a login session, pausing for deserialization"],"updatePoint":{"line":50,"column":19,"index":1330},"line":50,"code":"    it('should pass', function () {\n      expect(pass).to.be.true;\n    });","file":"strategies/session.pause.test.js","skipped":false,"dir":"test"},{"name":"should set user on request","suites":["SessionStrategy","handling a request with a login session, pausing for deserialization"],"updatePoint":{"line":53,"column":34,"index":1420},"line":53,"code":"    it('should set user on request', function () {\n      expect(request.user).to.be.an('object');\n      expect(request.user.id).to.equal('123456');\n    });","file":"strategies/session.pause.test.js","skipped":false,"dir":"test"},{"name":"should maintain session","suites":["SessionStrategy","handling a request with a login session, pausing for deserialization"],"updatePoint":{"line":57,"column":31,"index":1573},"line":57,"code":"    it('should maintain session', function () {\n      expect(request.session['passport']).to.be.an('object');\n      expect(request.session['passport'].user).to.equal('123456');\n    });","file":"strategies/session.pause.test.js","skipped":false,"dir":"test"},{"name":"should pause request","suites":["SessionStrategy","handling a request with a login session, pausing for deserialization"],"updatePoint":{"line":61,"column":28,"index":1755},"line":61,"code":"    it('should pause request', function () {\n      var s0 = spy[0];\n      expect(s0.args[0]).to.equal(request);\n    });","file":"strategies/session.pause.test.js","skipped":false,"dir":"test"},{"name":"should resume request","suites":["SessionStrategy","handling a request with a login session, pausing for deserialization"],"updatePoint":{"line":65,"column":29,"index":1876},"line":65,"code":"    it('should resume request', function () {\n      var s1 = spy[1];\n      expect(s1.args[0]).to.equal(undefined);\n    });","file":"strategies/session.pause.test.js","skipped":false,"dir":"test"},{"name":"should spy correctly","suites":["SessionStrategy","handling a request with a login session that has been invalidated, pausing for deserialization"],"updatePoint":{"line":109,"column":28,"index":3092},"line":109,"code":"    it('should spy correctly', function () {\n      expect(spy).to.have.length(2);\n    });","file":"strategies/session.pause.test.js","skipped":false,"dir":"test"},{"name":"should pass","suites":["SessionStrategy","handling a request with a login session that has been invalidated, pausing for deserialization"],"updatePoint":{"line":112,"column":19,"index":3173},"line":112,"code":"    it('should pass', function () {\n      expect(pass).to.be.true;\n    });","file":"strategies/session.pause.test.js","skipped":false,"dir":"test"},{"name":"should not set user on request","suites":["SessionStrategy","handling a request with a login session that has been invalidated, pausing for deserialization"],"updatePoint":{"line":115,"column":38,"index":3267},"line":115,"code":"    it('should not set user on request', function () {\n      expect(request.user).to.be.undefined;\n    });","file":"strategies/session.pause.test.js","skipped":false,"dir":"test"},{"name":"should remove user from session","suites":["SessionStrategy","handling a request with a login session that has been invalidated, pausing for deserialization"],"updatePoint":{"line":118,"column":39,"index":3375},"line":118,"code":"    it('should remove user from session', function () {\n      expect(request.session['passport']).to.be.an('object');\n      expect(request.session['passport'].user).to.be.undefined;\n    });","file":"strategies/session.pause.test.js","skipped":false,"dir":"test"},{"name":"should pause request","suites":["SessionStrategy","handling a request with a login session that has been invalidated, pausing for deserialization"],"updatePoint":{"line":122,"column":28,"index":3554},"line":122,"code":"    it('should pause request', function () {\n      var s0 = spy[0];\n      expect(s0.args[0]).to.equal(request);\n    });","file":"strategies/session.pause.test.js","skipped":false,"dir":"test"},{"name":"should resume request","suites":["SessionStrategy","handling a request with a login session that has been invalidated, pausing for deserialization"],"updatePoint":{"line":126,"column":29,"index":3675},"line":126,"code":"    it('should resume request', function () {\n      var s1 = spy[1];\n      expect(s1.args[0]).to.equal(undefined);\n    });","file":"strategies/session.pause.test.js","skipped":false,"dir":"test"},{"name":"should be named session","suites":["SessionStrategy"],"updatePoint":{"line":8,"column":29,"index":268},"line":8,"code":"  it('should be named session', function () {\n    expect(strategy.name).to.equal('session');\n  });","file":"strategies/session.test.js","skipped":false,"dir":"test"},{"name":"should pass","suites":["SessionStrategy","handling a request without a login session"],"updatePoint":{"line":25,"column":19,"index":762},"line":25,"code":"    it('should pass', function () {\n      expect(pass).to.be.true;\n    });","file":"strategies/session.test.js","skipped":false,"dir":"test"},{"name":"should not set user on request","suites":["SessionStrategy","handling a request without a login session"],"updatePoint":{"line":28,"column":38,"index":856},"line":28,"code":"    it('should not set user on request', function () {\n      expect(request.user).to.be.undefined;\n    });","file":"strategies/session.test.js","skipped":false,"dir":"test"},{"name":"should pass","suites":["SessionStrategy","handling a request with a login session"],"updatePoint":{"line":53,"column":19,"index":1560},"line":53,"code":"    it('should pass', function () {\n      expect(pass).to.be.true;\n    });","file":"strategies/session.test.js","skipped":false,"dir":"test"},{"name":"should set user on request","suites":["SessionStrategy","handling a request with a login session"],"updatePoint":{"line":56,"column":34,"index":1650},"line":56,"code":"    it('should set user on request', function () {\n      expect(request.user).to.be.an('object');\n      expect(request.user.id).to.equal('123456');\n    });","file":"strategies/session.test.js","skipped":false,"dir":"test"},{"name":"should maintain session","suites":["SessionStrategy","handling a request with a login session"],"updatePoint":{"line":60,"column":31,"index":1803},"line":60,"code":"    it('should maintain session', function () {\n      expect(request.session['passport']).to.be.an('object');\n      expect(request.session['passport'].user).to.equal('123456');\n    });","file":"strategies/session.test.js","skipped":false,"dir":"test"},{"name":"should pass","suites":["SessionStrategy","handling a request with a login session serialized to 0"],"updatePoint":{"line":86,"column":19,"index":2601},"line":86,"code":"    it('should pass', function () {\n      expect(pass).to.be.true;\n    });","file":"strategies/session.test.js","skipped":false,"dir":"test"},{"name":"should set user on request","suites":["SessionStrategy","handling a request with a login session serialized to 0"],"updatePoint":{"line":89,"column":34,"index":2691},"line":89,"code":"    it('should set user on request', function () {\n      expect(request.user).to.be.an('object');\n      expect(request.user.id).to.equal(0);\n    });","file":"strategies/session.test.js","skipped":false,"dir":"test"},{"name":"should maintain session","suites":["SessionStrategy","handling a request with a login session serialized to 0"],"updatePoint":{"line":93,"column":31,"index":2837},"line":93,"code":"    it('should maintain session', function () {\n      expect(request.session['passport']).to.be.an('object');\n      expect(request.session['passport'].user).to.equal(0);\n    });","file":"strategies/session.test.js","skipped":false,"dir":"test"},{"name":"should pass","suites":["SessionStrategy","handling a request with a login session that has been invalidated"],"updatePoint":{"line":117,"column":19,"index":3624},"line":117,"code":"    it('should pass', function () {\n      expect(pass).to.be.true;\n    });","file":"strategies/session.test.js","skipped":false,"dir":"test"},{"name":"should not set user on request","suites":["SessionStrategy","handling a request with a login session that has been invalidated"],"updatePoint":{"line":120,"column":38,"index":3718},"line":120,"code":"    it('should not set user on request', function () {\n      expect(request.user).to.be.undefined;\n    });","file":"strategies/session.test.js","skipped":false,"dir":"test"},{"name":"should remove user from session","suites":["SessionStrategy","handling a request with a login session that has been invalidated"],"updatePoint":{"line":123,"column":39,"index":3826},"line":123,"code":"    it('should remove user from session', function () {\n      expect(request.session['passport']).to.be.an('object');\n      expect(request.session['passport'].user).to.be.undefined;\n    });","file":"strategies/session.test.js","skipped":false,"dir":"test"},{"name":"should pass","suites":["SessionStrategy","handling a request with a login session and setting custom user property"],"updatePoint":{"line":150,"column":19,"index":4688},"line":150,"code":"    it('should pass', function () {\n      expect(pass).to.be.true;\n    });","file":"strategies/session.test.js","skipped":false,"dir":"test"},{"name":"should not set \"user\" on request","suites":["SessionStrategy","handling a request with a login session and setting custom user property"],"updatePoint":{"line":153,"column":40,"index":4784},"line":153,"code":"    it('should not set \"user\" on request', function () {\n      expect(request.user).to.be.undefined;\n    });","file":"strategies/session.test.js","skipped":false,"dir":"test"},{"name":"should set \"currentUser\" on request","suites":["SessionStrategy","handling a request with a login session and setting custom user property"],"updatePoint":{"line":156,"column":43,"index":4896},"line":156,"code":"    it('should set \"currentUser\" on request', function () {\n      expect(request.currentUser).to.be.an('object');\n      expect(request.currentUser.id).to.equal('123456');\n    });","file":"strategies/session.test.js","skipped":false,"dir":"test"},{"name":"should error","suites":["SessionStrategy","handling a request with a login session that encounters an error when deserializing"],"updatePoint":{"line":179,"column":20,"index":5704},"line":179,"code":"    it('should error', function () {\n      expect(error).to.be.an.instanceOf(Error);\n      expect(error.message).to.equal('something went wrong');\n    });","file":"strategies/session.test.js","skipped":false,"dir":"test"},{"name":"should not set user on request","suites":["SessionStrategy","handling a request with a login session that encounters an error when deserializing"],"updatePoint":{"line":183,"column":38,"index":5877},"line":183,"code":"    it('should not set user on request', function () {\n      expect(request.user).to.be.undefined;\n    });","file":"strategies/session.test.js","skipped":false,"dir":"test"},{"name":"should maintain session","suites":["SessionStrategy","handling a request with a login session that encounters an error when deserializing"],"updatePoint":{"line":186,"column":31,"index":5977},"line":186,"code":"    it('should maintain session', function () {\n      expect(request.session['passport']).to.be.an('object');\n      expect(request.session['passport'].user).to.equal('123456');\n    });","file":"strategies/session.test.js","skipped":false,"dir":"test"},{"name":"should error","suites":["SessionStrategy","handling a request that lacks an authenticator"],"updatePoint":{"line":201,"column":20,"index":6465},"line":201,"code":"    it('should error', function () {\n      expect(error).to.be.an.instanceOf(Error);\n      expect(error.message).to.equal('Login sessions require session support. Did you forget to use `express-session` middleware?');\n    });","file":"strategies/session.test.js","skipped":false,"dir":"test"},{"name":"should not set user on request","suites":["SessionStrategy","handling a request that lacks an authenticator"],"updatePoint":{"line":205,"column":38,"index":6709},"line":205,"code":"    it('should not set user on request', function () {\n      expect(request.user).to.be.undefined;\n    });","file":"strategies/session.test.js","skipped":false,"dir":"test"}]}