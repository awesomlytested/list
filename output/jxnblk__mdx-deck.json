{
    "repo": "jxnblk/mdx-deck",
    "url": "https://github.com/jxnblk/mdx-deck",
    "branch": "master",
    "configs": [
        {
            "lang": "js",
            "dir": "cypress",
            "framework": "jest",
            "pattern": "**/*.{js,ts}"
        },
        {
            "package": "@mdx-deck/gatsby-plugin",
            "lang": "js",
            "dir": "packages/gatsby-plugin/test",
            "framework": "jest",
            "pattern": "**/*.{js,ts}"
        }
    ],
    "tests": [
        {
            "name": "opens",
            "suites": [],
            "updatePoint": {
                "line": 5,
                "column": 11
            },
            "line": 5,
            "code": "  it('opens', () => {\n    cy.visit('http://localhost:8000');\n  });",
            "file": "integration/hello.js",
            "skipped": false,
            "dir": "cypress"
        },
        {
            "name": "contains the title",
            "suites": [],
            "updatePoint": {
                "line": 8,
                "column": 24
            },
            "line": 8,
            "code": "  it('contains the title', () => {\n    cy.contains('MDX Deck');\n  });",
            "file": "integration/hello.js",
            "skipped": false,
            "dir": "cypress"
        },
        {
            "name": "goes to the next slide",
            "suites": [],
            "updatePoint": {
                "line": 13,
                "column": 28
            },
            "line": 13,
            "code": "  it('goes to the next slide', () => {\n    cy.get('body').trigger('keydown', {\n      keyCode: 39\n    }).contains('Presentation');\n  });",
            "file": "integration/hello.js",
            "skipped": false,
            "dir": "cypress"
        },
        {
            "name": "renders time",
            "suites": [],
            "updatePoint": {
                "line": 7,
                "column": 18
            },
            "line": 7,
            "code": "test('renders time', () => {\n  const tree = render( /*#__PURE__*/React.createElement(Clock, null));\n  expect(tree).toMatch(/\\d\\d:\\d\\d/);\n});",
            "file": "clock.js",
            "skipped": false,
            "dir": "packages/gatsby-plugin/test"
        },
        {
            "name": "Color renders",
            "suites": [],
            "updatePoint": {
                "line": 7,
                "column": 19
            },
            "line": 7,
            "code": "test('Color renders', () => {\n  const json = render( /*#__PURE__*/React.createElement(Color, {\n    bg: \"tomato\"\n  }));\n  expect(json).toMatchSnapshot();\n});",
            "file": "components.js",
            "skipped": false,
            "dir": "packages/gatsby-plugin/test"
        },
        {
            "name": "Invert renders",
            "suites": [],
            "updatePoint": {
                "line": 13,
                "column": 20
            },
            "line": 13,
            "code": "test('Invert renders', () => {\n  const json = render( /*#__PURE__*/React.createElement(Invert, null));\n  expect(json).toMatchSnapshot();\n});",
            "file": "components.js",
            "skipped": false,
            "dir": "packages/gatsby-plugin/test"
        },
        {
            "name": "Steps renders",
            "suites": [],
            "updatePoint": {
                "line": 17,
                "column": 19
            },
            "line": 17,
            "code": "test('Steps renders', () => {\n  const json = render( /*#__PURE__*/React.createElement(Steps, null, /*#__PURE__*/React.createElement(\"div\", null, \"One\"), /*#__PURE__*/React.createElement(\"div\", null, \"Two\")));\n  expect(json).toMatchSnapshot();\n});",
            "file": "components.js",
            "skipped": false,
            "dir": "packages/gatsby-plugin/test"
        },
        {
            "name": "Steps renders with list",
            "suites": [],
            "updatePoint": {
                "line": 21,
                "column": 29
            },
            "line": 21,
            "code": "test('Steps renders with list', () => {\n  const json = render( /*#__PURE__*/React.createElement(Steps, null, /*#__PURE__*/React.createElement(\"ul\", {\n    originalType: \"ul\"\n  }, /*#__PURE__*/React.createElement(\"li\", null, \"One\"), /*#__PURE__*/React.createElement(\"li\", null, \"Two\"))));\n  expect(json).toMatchSnapshot();\n});",
            "file": "components.js",
            "skipped": false,
            "dir": "packages/gatsby-plugin/test"
        },
        {
            "name": "Image renders",
            "suites": [],
            "updatePoint": {
                "line": 27,
                "column": 19
            },
            "line": 27,
            "code": "test('Image renders', () => {\n  const json = render( /*#__PURE__*/React.createElement(Image, {\n    src: \"kittens.png\"\n  }));\n  expect(json).toMatchSnapshot();\n});",
            "file": "components.js",
            "skipped": false,
            "dir": "packages/gatsby-plugin/test"
        },
        {
            "name": "Horizontal renders",
            "suites": [],
            "updatePoint": {
                "line": 33,
                "column": 24
            },
            "line": 33,
            "code": "test('Horizontal renders', () => {\n  const json = render( /*#__PURE__*/React.createElement(Horizontal, null, /*#__PURE__*/React.createElement(\"div\", null, \"A\"), /*#__PURE__*/React.createElement(\"div\", null, \"B\")));\n  expect(json).toMatchSnapshot();\n});",
            "file": "components.js",
            "skipped": false,
            "dir": "packages/gatsby-plugin/test"
        },
        {
            "name": "Split renders",
            "suites": [],
            "updatePoint": {
                "line": 37,
                "column": 19
            },
            "line": 37,
            "code": "test('Split renders', () => {\n  const json = render( /*#__PURE__*/React.createElement(Split, null, /*#__PURE__*/React.createElement(\"div\", null, \"A\"), /*#__PURE__*/React.createElement(\"div\", null, \"B\")));\n  expect(json).toMatchSnapshot();\n});",
            "file": "components.js",
            "skipped": false,
            "dir": "packages/gatsby-plugin/test"
        },
        {
            "name": "SplitRight renders",
            "suites": [],
            "updatePoint": {
                "line": 41,
                "column": 24
            },
            "line": 41,
            "code": "test('SplitRight renders', () => {\n  const json = render( /*#__PURE__*/React.createElement(SplitRight, null, /*#__PURE__*/React.createElement(\"div\", null, \"A\"), /*#__PURE__*/React.createElement(\"div\", null, \"B\")));\n  expect(json).toMatchSnapshot();\n});",
            "file": "components.js",
            "skipped": false,
            "dir": "packages/gatsby-plugin/test"
        },
        {
            "name": "FullScreenCode renders",
            "suites": [],
            "updatePoint": {
                "line": 45,
                "column": 28
            },
            "line": 45,
            "code": "test('FullScreenCode renders', () => {\n  const json = render( /*#__PURE__*/React.createElement(FullScreenCode, null, \"Hi\"));\n  expect(json).toMatchSnapshot();\n});",
            "file": "components.js",
            "skipped": false,
            "dir": "packages/gatsby-plugin/test"
        },
        {
            "name": "renders",
            "suites": [],
            "updatePoint": {
                "line": 33,
                "column": 13
            },
            "line": 33,
            "code": "test('renders', () => {\n  const tree = render( /*#__PURE__*/React.createElement(Deck, deckProps));\n  const text = tree.getByText('One');\n  expect(text).toBeTruthy();\n});",
            "file": "deck.js",
            "skipped": false,
            "dir": "packages/gatsby-plugin/test"
        },
        {
            "name": "advances one slide with right arrow key",
            "suites": [],
            "updatePoint": {
                "line": 38,
                "column": 45
            },
            "line": 38,
            "code": "test('advances one slide with right arrow key', () => {\n  const tree = render( /*#__PURE__*/React.createElement(Deck, deckProps));\n  fireEvent.keyDown(document.body, {\n    keyCode: 39\n  });\n  const text = tree.getByText('Two');\n  expect(text).toBeTruthy();\n});",
            "file": "deck.js",
            "skipped": false,
            "dir": "packages/gatsby-plugin/test"
        },
        {
            "name": "advances one slide with down arrow key",
            "suites": [],
            "updatePoint": {
                "line": 46,
                "column": 44
            },
            "line": 46,
            "code": "test('advances one slide with down arrow key', () => {\n  const tree = render( /*#__PURE__*/React.createElement(Deck, deckProps));\n  fireEvent.keyDown(document.body, {\n    keyCode: 40\n  });\n  const text = tree.getByText('Two');\n  expect(text).toBeTruthy();\n});",
            "file": "deck.js",
            "skipped": false,
            "dir": "packages/gatsby-plugin/test"
        },
        {
            "name": "advances one slide with spacebar key",
            "suites": [],
            "updatePoint": {
                "line": 54,
                "column": 42
            },
            "line": 54,
            "code": "test('advances one slide with spacebar key', () => {\n  const tree = render( /*#__PURE__*/React.createElement(Deck, deckProps));\n  fireEvent.keyDown(document.body, {\n    keyCode: 32\n  });\n  const text = tree.getByText('Two');\n  expect(text).toBeTruthy();\n});",
            "file": "deck.js",
            "skipped": false,
            "dir": "packages/gatsby-plugin/test"
        },
        {
            "name": "advances one slide with page down key",
            "suites": [],
            "updatePoint": {
                "line": 62,
                "column": 43
            },
            "line": 62,
            "code": "test('advances one slide with page down key', () => {\n  const tree = render( /*#__PURE__*/React.createElement(Deck, deckProps));\n  fireEvent.keyDown(document.body, {\n    keyCode: 34\n  });\n  const text = tree.getByText('Two');\n  expect(text).toBeTruthy();\n});",
            "file": "deck.js",
            "skipped": false,
            "dir": "packages/gatsby-plugin/test"
        },
        {
            "name": "goes back one slide with left arrow key",
            "suites": [],
            "updatePoint": {
                "line": 70,
                "column": 45
            },
            "line": 70,
            "code": "test('goes back one slide with left arrow key', () => {\n  const tree = render( /*#__PURE__*/React.createElement(Deck, _extends({}, deckProps, {\n    location: {\n      hash: '#2'\n    }\n  })));\n  fireEvent.keyDown(document.body, {\n    keyCode: 37\n  });\n  const text = tree.getByText('One');\n  expect(text).toBeTruthy();\n});",
            "file": "deck.js",
            "skipped": false,
            "dir": "packages/gatsby-plugin/test"
        },
        {
            "name": "goes back one slide with up arrow key",
            "suites": [],
            "updatePoint": {
                "line": 82,
                "column": 43
            },
            "line": 82,
            "code": "test('goes back one slide with up arrow key', () => {\n  const tree = render( /*#__PURE__*/React.createElement(Deck, _extends({}, deckProps, {\n    location: {\n      hash: '#2'\n    }\n  })));\n  fireEvent.keyDown(document.body, {\n    keyCode: 38\n  });\n  const text = tree.getByText('One');\n  expect(text).toBeTruthy();\n});",
            "file": "deck.js",
            "skipped": false,
            "dir": "packages/gatsby-plugin/test"
        },
        {
            "name": "goes back one slide with page up key",
            "suites": [],
            "updatePoint": {
                "line": 94,
                "column": 42
            },
            "line": 94,
            "code": "test('goes back one slide with page up key', () => {\n  const tree = render( /*#__PURE__*/React.createElement(Deck, _extends({}, deckProps, {\n    location: {\n      hash: '#2'\n    }\n  })));\n  fireEvent.keyDown(document.body, {\n    keyCode: 33\n  });\n  const text = tree.getByText('One');\n  expect(text).toBeTruthy();\n});",
            "file": "deck.js",
            "skipped": false,
            "dir": "packages/gatsby-plugin/test"
        },
        {
            "name": "goes back one slide with shift + space bar",
            "suites": [],
            "updatePoint": {
                "line": 106,
                "column": 48
            },
            "line": 106,
            "code": "test('goes back one slide with shift + space bar', () => {\n  const tree = render( /*#__PURE__*/React.createElement(Deck, _extends({}, deckProps, {\n    location: {\n      hash: '#2'\n    }\n  })));\n  fireEvent.keyDown(document.body, {\n    shiftKey: true,\n    keyCode: 32\n  });\n  const text = tree.getByText('One');\n  expect(text).toBeTruthy();\n});",
            "file": "deck.js",
            "skipped": false,
            "dir": "packages/gatsby-plugin/test"
        },
        {
            "name": "ignores meta keys",
            "suites": [],
            "updatePoint": {
                "line": 119,
                "column": 23
            },
            "line": 119,
            "code": "test('ignores meta keys', () => {\n  const tree = render( /*#__PURE__*/React.createElement(Deck, deckProps));\n  fireEvent.keyDown(document.body, {\n    metaKey: true,\n    keyCode: 39\n  });\n  const text = tree.getByText('One');\n  expect(text).toBeTruthy();\n});",
            "file": "deck.js",
            "skipped": false,
            "dir": "packages/gatsby-plugin/test"
        },
        {
            "name": "ignores ctrl keys",
            "suites": [],
            "updatePoint": {
                "line": 128,
                "column": 23
            },
            "line": 128,
            "code": "test('ignores ctrl keys', () => {\n  const tree = render( /*#__PURE__*/React.createElement(Deck, deckProps));\n  fireEvent.keyDown(document.body, {\n    ctrlKey: true,\n    keyCode: 39\n  });\n  const text = tree.getByText('One');\n  expect(text).toBeTruthy();\n});",
            "file": "deck.js",
            "skipped": false,
            "dir": "packages/gatsby-plugin/test"
        },
        {
            "name": "initializes print mode",
            "suites": [],
            "updatePoint": {
                "line": 137,
                "column": 28
            },
            "line": 137,
            "code": "test('initializes print mode', () => {\n  const tree = render( /*#__PURE__*/React.createElement(Deck, _extends({}, deckProps, {\n    location: {\n      hash: '',\n      pathname: '/print'\n    }\n  })));\n  const one = tree.getByText('One');\n  const two = tree.getByText('Two');\n  expect(one).toBeTruthy();\n  expect(two).toBeTruthy();\n});",
            "file": "deck.js",
            "skipped": false,
            "dir": "packages/gatsby-plugin/test"
        },
        {
            "name": "increments step",
            "suites": [
                "steps"
            ],
            "updatePoint": {
                "line": 151,
                "column": 23
            },
            "line": 151,
            "code": "  test('increments step', () => {\n    const tree = render( /*#__PURE__*/React.createElement(Deck, _extends({}, deckProps, {\n      children: children\n    })));\n    fireEvent.keyDown(document.body, {\n      keyCode: 39\n    });\n    const a = tree.getByText('A');\n    const b = tree.getByText('B');\n    expect(a.style.visibility).toBe('visible');\n    expect(b.style.visibility).toBe('hidden');\n  });",
            "file": "deck.js",
            "skipped": false,
            "dir": "packages/gatsby-plugin/test"
        },
        {
            "name": "decrements step",
            "suites": [
                "steps"
            ],
            "updatePoint": {
                "line": 163,
                "column": 23
            },
            "line": 163,
            "code": "  test('decrements step', () => {\n    const tree = render( /*#__PURE__*/React.createElement(Deck, _extends({}, deckProps, {\n      children: children\n    })));\n    fireEvent.keyDown(document.body, {\n      keyCode: 39\n    });\n    fireEvent.keyDown(document.body, {\n      keyCode: 39\n    });\n    fireEvent.keyDown(document.body, {\n      keyCode: 37\n    });\n    const a = tree.getByText('A');\n    const b = tree.getByText('B');\n    expect(a.style.visibility).toBe('visible');\n    expect(b.style.visibility).toBe('hidden');\n  });",
            "file": "deck.js",
            "skipped": false,
            "dir": "packages/gatsby-plugin/test"
        },
        {
            "name": "renders with Header and Footer",
            "suites": [
                "steps"
            ],
            "updatePoint": {
                "line": 182,
                "column": 36
            },
            "line": 182,
            "code": "test('renders with Header and Footer', () => {\n  const children = [x(Header, null, 'Header'), x(Footer, null, 'Footer'), x('div', null, 'Beep'), x('hr', null), x('div', null, 'Two')];\n  const tree = render( /*#__PURE__*/React.createElement(Deck, _extends({}, deckProps, {\n    children: children\n  })));\n  const header = tree.getByText('Header');\n  const footer = tree.getByText('Footer');\n  expect(header).toBeTruthy();\n  expect(footer).toBeTruthy();\n});",
            "file": "deck.js",
            "skipped": false,
            "dir": "packages/gatsby-plugin/test"
        },
        {
            "name": "option + p toggles presenter mode",
            "suites": [
                "steps"
            ],
            "updatePoint": {
                "line": 192,
                "column": 39
            },
            "line": 192,
            "code": "test('option + p toggles presenter mode', () => {\n  let context;\n});",
            "file": "deck.js",
            "skipped": false,
            "dir": "packages/gatsby-plugin/test"
        }
    ],
    "badge": "jxnblk__mdx-deck.svg"
}