{"repo":"decosoftware/deco-ide","url":"https://github.com/decosoftware/deco-ide","branch":"master","configs":[{"package":"Project","lang":"js","dir":"desktop/libs/Project/__tests__","framework":"jest","pattern":"**/*.{js,ts}"},{"package":"DecoIDE-Desktop","lang":"js","dir":"desktop/tests","framework":"mocha","pattern":"**/*[._-]{test,spec,unittest,unit}.{ts,js}"}],"tests":[{"name":"renders correctly","suites":[],"updatePoint":{"line":6,"column":21},"line":6,"code":"it('renders correctly', () => {\n  const tree = renderer.create( /*#__PURE__*/React.createElement(Index, null));\n});","file":"index.android.js","skipped":false,"dir":"desktop/libs/Project/__tests__"},{"name":"renders correctly","suites":[],"updatePoint":{"line":6,"column":21},"line":6,"code":"it('renders correctly', () => {\n  const tree = renderer.create( /*#__PURE__*/React.createElement(Index, null));\n});","file":"index.ios.js","skipped":false,"dir":"desktop/libs/Project/__tests__"},{"name":"creates a new file","suites":["File tree"],"updatePoint":{"line":9,"column":24},"line":9,"code":"  it('creates a new file', function () {\n    const client = this.app.client;\n    return hoverOverElement('.project-navigator .Grid__cell div div', client).then(() => expect(client.isExisting('.icon-plus')).to.eventually.be.true).then(() => client.click('.icon-plus')).then(() => client.click('div=New File')).then(() => expect(client.isExisting('#naming-banner')).to.eventually.be.true).then(() => client.setValue('#naming-banner input', 'foo.js')).then(() => client.submitForm('#naming-banner input')).then(() => expect(fileExistsInHomeDir('.Deco/tmp/Project/foo.js')).to.be.true).then(() => expect(client.isExisting('#tabbed-editor [title=\"foo.js\"]')).to.eventually.be.true);\n  });","file":"integration/file-tree.test.js","skipped":false,"dir":"desktop/tests"},{"name":"opens with a new project","suites":["Workspace"],"updatePoint":{"line":7,"column":30},"line":7,"code":"  it('opens with a new project', function (done) {\n    this.snapshotTolerance = 0.003;\n    expectToMatchSnapshot(this, done);\n  });","file":"integration/snapshot/workspace.test.js","skipped":false,"dir":"desktop/tests"},{"name":"opens and closes the project navigator","suites":["Toolbar"],"updatePoint":{"line":6,"column":44},"line":6,"code":"  it('opens and closes the project navigator', function () {\n    const client = this.app.client;\n    return Promise.resolve().then(() => expect(client.isExisting('.project-navigator')).to.eventually.be.true).then(() => client.click('#project-btn')).then(() => expect(client.isExisting('.project-navigator')).to.eventually.be.false).then(() => client.click('#project-btn')).then(() => expect(client.isExisting('.project-navigator')).to.eventually.be.true);\n  });","file":"integration/toolbar.test.js","skipped":false,"dir":"desktop/tests"},{"name":"opens and closes the console","suites":["Toolbar"],"updatePoint":{"line":10,"column":34},"line":10,"code":"  it('opens and closes the console', function () {\n    const client = this.app.client;\n    return client.click('#console-btn').then(() => expect(client.isExisting('.open-term')).to.eventually.be.true).then(() => expect(client.isExisting('.close-term')).to.eventually.be.false).then(() => client.click('#console-btn')).then(() => expect(client.isExisting('.open-term')).to.eventually.be.false).then(() => expect(client.isExisting('.close-term')).to.eventually.be.true);\n  });","file":"integration/toolbar.test.js","skipped":false,"dir":"desktop/tests"},{"name":"opens and closes the simulator","suites":["Toolbar"],"updatePoint":{"line":14,"column":36},"line":14,"code":"  it('opens and closes the simulator', function () {\n    const client = this.app.client;\n    return client.click('#simulator-btn').then(() => expect(client.isExisting('#simulator-menu')).to.eventually.be.true).then(() => client.leftClick('#simulator-btn', 10, 10)) // aim carefully to avoid clicking the popover\n    .then(() => expect(client.isExisting('#simulator-menu')).to.eventually.be.false);\n  });","file":"integration/toolbar.test.js","skipped":false,"dir":"desktop/tests"}]}