{"repo":"foreversd/forever","url":"https://github.com/foreversd/forever","branch":"master","configs":[{"package":"forever","lang":"js","dir":"test","framework":"mocha","pattern":"**/*[._-]{test,spec,unittest,unit}.{ts,js}"}],"tests":[{"name":"manages columns successfully","suites":["cli","columns"],"updatePoint":{"line":12,"column":36},"line":12,"code":"    it('manages columns successfully', function () {\n      return execCommand(`node bin/forever columns reset`, {\n        expectedOutput: ['Setting columns:', 'uid command script forever pid logfile uptime']\n      }).then(function () {\n        return execCommand(`node bin/forever columns rm uptime`, {\n          expectedOutput: ['Removing column:', 'uptime']\n        });\n      }).then(function () {\n        return execCommand(`node bin/forever columns add uptime`, {\n          expectedOutput: ['Adding column:', 'uptime']\n        });\n      }).then(function () {\n        return execCommand(`node bin/forever columns add uptime`, {\n          expectedOutput: ['warn', 'uptime', 'already exists in forever']\n        });\n      });\n    });","file":"mocha/cli/cli.spec.js","skipped":false,"dir":"test"},{"name":"starts script successfully","suites":["cli","start"],"updatePoint":{"line":31,"column":34},"line":31,"code":"    it('starts script successfully', () => {\n      const oldDir = process.cwd();\n      process.chdir('test/mocha/cli/scripts/dir with spaces/');\n      return execCommand(`node ../../../../../bin/forever start script_name.js`, {\n        expectedOutput: ['Forever processing file:', 'script_name.js']\n      }).then(() => {\n        return delayPromise(1000);\n      }).then(() => {\n        return execCommand(`node ../../../../../bin/forever stopall`, {\n          expectedOutput: ['Forever stopped processes', 'script_name.js']\n        });\n      }).then(() => {\n        process.chdir(oldDir);\n      });\n    });","file":"mocha/cli/cli.spec.js","skipped":false,"dir":"test"},{"name":"happy path","suites":["config-utils","tryCreateDir"],"updatePoint":{"line":11,"column":18},"line":11,"code":"    it('happy path', () => {\n      expect(() => {\n        configUtils.tryCreateDir('happypath');\n      }).to.not.throw();\n      expect(fs.existsSync('happypath')).to.equal(true);\n      fs.rmdirSync('happypath');\n    });","file":"mocha/util/config-utils.spec.js","skipped":false,"dir":"test"},{"name":"throws an error on invalid directory","suites":["config-utils","tryCreateDir"],"updatePoint":{"line":18,"column":44},"line":18,"code":"    it('throws an error on invalid directory', () => {\n      expect(() => {\n        configUtils.tryCreateDir('');\n      }).to.throw(/Failed to create directory :ENOENT: no such file or directory, mkdir/);\n    });","file":"mocha/util/config-utils.spec.js","skipped":false,"dir":"test"},{"name":"does not fail when creating directory that already exists","suites":["config-utils","tryCreateDir"],"updatePoint":{"line":23,"column":65},"line":23,"code":"    it('does not fail when creating directory that already exists', () => {\n      expect(() => {\n        configUtils.tryCreateDir('dummy');\n        configUtils.tryCreateDir('dummy');\n      }).to.not.throw();\n      fs.rmdirSync('dummy');\n    });","file":"mocha/util/config-utils.spec.js","skipped":false,"dir":"test"}]}